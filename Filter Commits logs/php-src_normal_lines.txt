Cache UTF-8-validity status of strings in GC flags
Escape the role attribute of namespaced classes (#9952)
Introduce TEST_FPM_EXTENSION_DIR for FPM tests with shared extensions
[ci skip] NEWS
[ci skip] NEWS
[ci skip] NEWS
Skip tests if extension or SAPI is not included. (#9939)
Remove unused PHP 8.1 BC layer in JIT (#9937)
[skip ci] Skip function JIT in nightly for ASAN
[skip ci] Backport XFAIL of failing test
Disable opcache file_cache for observer preloading test
No more need to cater to mime_magic extension
Make the usage of the role attribute more clear (#9901)
[skip ci] Skip preloading test on Windows
Do not report MINIT stage internal class aliases in extensions
Move observer_declared_function_notify until after pass_two()
[ci skip] Order NEWS sections alphabetically
Bump for 8.0.27
PHP-8.2 is now for PHP 8.2.1-dev and prepare NEWS for 8.2.0
PHP-8.1 is now for PHP 8.1.14-dev
[ci skip] Update NEWS for PHP 8.2.0
Don't skip test on Windows due to missing ext/posix
Fiber: add shadow stack support
Don't check "fake" closures (fix assertion)
[ci skip] NEWS
[ci skip] NEWS
[ci skip] NEWS
Disable CLI server pdeathsig test on 32-bit GitHub actions
Really fix test this time
Migrate i386 to GitHub actions
Properly deal with internal attributes used on promoted properties.
Delay releasing closures until after observer end
Only use FCC for libxml entity loader callback
Only use FCC for SQLite3 user defined authorizer
Only use FCC for SQLite3 user defined collations
Only use FCC for SQLite3 user defined functions
Refactor SPL Callback filter to only use FCC
Add various APIs to handle FCC structures
Store a reference to closures in the FCC
Tidy up buffer preparation in mysqlnd (#9834)
Don’t reset func in zend_closure_internal_handler
Updated to version 2022.6 (2022f)
Empty merge
Updated to version 2022.6 (2022f)
Empty merge
Updated to version 2022.6 (2022f)
Empty merge
Updated to version 2022.6 (2022f)
labeler.yml: set top-level read-only permissions (#9862)
Use zend_call_known_function() in ext-mysqli instead of building FCI/FCC
Use zend_call_known_function() in ext-pgsql instead of building FCI/FCC
socket add socket_atmark support.
Bumb versions
Match FPM status pool's expose_php with parent
Do not display the value of UNKNOWN constants in the manual (#9843)
Add NEWS entry for #9841
[skip ci] Mark posix_getrlimit test as un-repeatable
Add NEWS entry for #9841
Add a temporary fix for insufficient buffer size in mysqlnd (#9835)
mysqli_query throws warning despite using silenced error mode (#9842)
Add missing EXTENSION section to tests
Remove unnecessary ast eval bailout
Allow specifying resource in posix_getrlimit() for single result
Optimize spread operator for packed arrays (fix GH-9794) (#9796)
move CVEs in 8.1.12 changelog
move CVEs in 8.0.25 changelog
Don’t report arginfo violations on fake closures (#9823)
Initialize run time cache in PDO methods (#9818)
[ci skip] Update NEWS for PHP 8.2.0RC6
opcache: fix syntax error introduced in 261a08af65168e24c43a81321284f3f461f3500d (#9821)
Update new test to use EXTENSIONS section instead of SKIPIF
Revert 01eb06a0def9fb5facf0abf0f4168fcacbbb5789
Convert Implicitly nullable pure intersection types to DNF
Update NEWS
Make test for bug #51056 (blocking read) more reliable
Move tsrm_is_managed_thread() check after tsrm_is_shutdown()
Convert mod user FINISH macro to static function
Inline macros and add argument to FINISH macro
Assert that mandatory user handlers are defined
Drop struct union as access is now always named
Free handles by name directly
Refactor session_set_save_handler()
Add regression test for not setting optional closures again
Remove tests as they are identical to already existing basic tests
Restructure ext-session tests
Clean up OpenSSL engine list when OpenSSL 1.0.2 used
fix: no-op when signal handlers are called on threads not managed by PHP (#9766)
[ci skip] NEWS
[ci skip] NEWS
[ci skip] NEWS
Adapt ext/intl tests for ICU 72.1
Remove most usages of zend_fcall_info_args()
Do not use zend_fcall_info_argn() in ext-curl
Drop usage of confusing zend_fcall_info_call() API
[skip ci] Amend coding style (#9797)
Use zend_call_function_with_return_value() in SPL iterators
Add zend_call_function_with_return_value()
Revert incorrect PHP-7.4 version constants
opcache: add FrankenPHP to the allow list
[skip ci] Document zend_enum_get_case_by_value() function
[skip ci] Mark frequently failing hrtime test as XFAIL
[skip ci] Mark frequently failing OCI test as XFAIL
Test for bug #78055 (DatePeriod's getRecurrences and ->recurrences don't match)
Update NEWS
Reset JIT for dynamic functions on opcache restrart
Discard disasm symbols on opcache restart
Set SA_ONSTACK too when zend signals are disabled and in pcntl
Update to actions/checkout@v3 (PHP-8.1)
Update to actions/checkout@v3 (#9759)
[ci skip] NEWS
[ci skip] NEWS
[ci skip] NEWS
Restore extra_named_params when restoring frozen call stack
opcache: add FrankenPHP to the allow list
SO_ATTACH_REUSEPORT_CBPF filter update. SDK_AD_QUEUE support to attach to a queue.
[ci skip] UPGRADING
QA - filter_input - LCOV - FILTER_NULL_ON_FAILURE
Declare ext/standard constants in stubs - part 9 (#9717)
Declare remaining Zend constants in stubs (#9730)
Declare main constants in stubs - part 3 (#9731)
Declare ext/standard constants in stubs - part 12 (#9729)
Declare ext/stanard constants in stubs - part 11 (#9728)
Declare XML_SAX_IMPL constant in stubs (#9732)
Updated to version 2022.5 (2022e)
Empty merge
Updated to version 2022.5 (2022e)
Empty merge
Updated to version 2022.5 (2022e)
Declare ext/standard constants in stubs - part 10 (#9719)
PHP-8.1 is now for PHP 8.1.13-dev
Prepare for PHp 8.0.26
Declare main constants in stubs - part 2 (#9714)
[ci skip] Update NEWS for PHP 8.2.0RC5
Ensure driver specific PDO methods have a proper run_time_cache
Auto-close FRs and PRs as not planned
[ci skip] Add missing NEWS entry
Add regression test for problem with mb_encode_mimeheader reported as GH-9683
In legacy text conversion filters, reset filter state in 'flush' function
Increase job timeout for ASAN/UBSAN build
Generate constant declarations with the CONST_CS flag for PHP 7.x
Throw in ReflectionMethod::__construct() when initialized with private parent method
Prepare for Windows CI with Github Actions
[skip ci] Add docs for json_validate in `UPGRADING*`
[skip ci] Add NEWS entry for json_validate()
RFC - json_validate() (#9399)
Make run-tests.php check for tcp fwrite edge cases (#9242)
[ci skip] NEWS
Improve warning message
Do not require opcache.preload_user in cli SAPIs
Refactor accel_finish_startup
Do not overwrite the zobj variable in ASSIGN_OBJ opcode (#9684)
Add empty default params to nightly linux matrix
Actually fix GH-9583
Reduce scope of `r` in rand_rangeXX (#9678)
Remove support for libmysql-client from mysqli test suite
Restore backwards-compatible mappings of U+005C and U+007E to SJIS-2004
Use uint32_t for 'illegal_substchar' codepoint in mbstring
Make enum for valid case_mode values (for php_unicode_convert_case)
Use fast text conversion filters for mb_convert_case, mb_strtoupper, mb_strtolower
Follow-up fix for GH-9655
Update UPGRADING with gc_status() changes
Add four extra fields to gc_status() (#9336)
Use function HT_IS_PACKED where it's missing (#9658)
porting ZEND_ASSUME for clang for the optimiser with (#9651)
[ci skip] Trim trailing whitespace in php_random.h
NEWS: Add libmagic upgrade note
libmagic: Keep the WS limitation piece
libmagic: Further simplify diff
Revert "fileinfo: tests: Disable times sensitive tests on debug build"
fileinfo: libmagic: Update libmagic.patch
libmagic: Follow up fixes for 5.43
fileinfo: libmagic: Simplify libmagic patch
fileinfo: tests: Sync more upstream tests and fix phpt
fileinfo: Introduce php_libmagic.* to simplify patch
fileinfo: libmagic: Apply libmagic.patch
fileinfo: libmagic: Check in unpatched 5.43
gh9590.phpt requires ext/posix
Use --EXTENSIONS-- section for newly added tests
[ci skip] NEWS
[ci skip] NEWS
[ci skip] NEWS
Return immediately when FD_SETSIZE is exceeded (#9602)
Make socket path shorter for ext/sockets/tests/socket_cmsg_{rights|credentials}.phpt
Declare ext/standard constants in stubs - part 8 (#9615)
Move object/class redundancy check into union type handling
Declare main constants in stubs - part 1 (#9616)
Move object/class redundancy check into union type handling
Add support for binary and octal number prefixes for INI settings
Add support for binary and octal number prefixes for INI settings
Clarify memory usage and slightly improve sapi_read_post_data
add missing CVEs
add missing CVEs
socket module add SO_ATTACH_REUSEPORT_CPBF for Linux.
fix php_init_crypt_r/php_shutdown_crypt_r signatures warning.
Do not check X-Powered-By header in FPM tester if expose_php off
Improve CS in FPM Tester Response
Replace reallocarray with safe_perealloc
[skip ci] Don't generate junit.xml in libmysqlclient for now
Force exit to VM
Keep original EG(jit_trace_num) value around __autoload()
[skip ci] Pass --no-progress flag in libmysqlclient test
[skip ci ] Rename matrix-include output on old branches
Updated to version 2022.4 (2022d)
Updated to version 2022.4 (2022d)
Empty merge
Empty merge
Updated to version 2022.4 (2022d)
Skip Symfony preloading for PHP-8.0
Revert unintended test expectation change
Prepare for next release
Prepare for 7.4.32
[skip ci] Attempt to fix libmysqlclient build for >=PHP-8.2
[ci skip] Update NEWS for PHP 8.2.0RC4
And also update the branch ref...
Skip some OCI tests with repeat
Wrap JIT compiler with zend_try to recover in case of memory overflow
Rework FPM tests logging for better debugging
Add CVEs
Uniform placing of init_fcall guards.
Switch to sanitize CFLAGS for community build
Throw in FFI::addr() when referencing temporary pointer
Improve string class constant code generation (#9577)
Set SA_ONSTACK in zend_sigaction (#9597)
List skipped extensions explicitly
Add travis_wait to travis for test.sh
fileinfo: tests: Disable times sensitive tests on debug build
Backport community build to PHP-8.0 branch
Remove unused azure pipelines files from PHP-8.1 branch
Remove unused azure pipelines templates
Remove symfony and laravel from PHP-8.0 community job
Migrate libmysqlclient job to GitHub actions
Migrate variation job to GitHub actions
Migrate --repeat 2 job to GitHub actions
Enable dl-test for msan job
Migrate MSAN build to GitHub actions
Move Opcache variation job to GitHub actions
Migrate community job to GitHub actions
Use true return type for XML functions which always return true
Check "ssa_op" before dereference (it may be NULL for opcache.jit=51)
Replace reallocarray with safe_perealloc (#9593)
Indirect call reduction for Jit code
PS(mod_user_class_name) must not leak into next request
Drop dead ENABLE_TEST_CLASS check
Intern string values of internal classes to prevent their future interning during inheritance.
Remove superfluous helper variable in `Randomizer::getBytes()` (#9563)
declare random globals as public API
Reorder conditions to avoid valgrind "Conditional jump or move depends on uninitialised value" warning.
Use external diff tool if TEST_PHP_DIFF_CMD env var is set
NEWS: Add entry for GH-8805
NEWS: Add entry for GH-8805
fileinfo: magic: Backport mime type support for woff/woff2 fonts
Don't set rpath for fuzzers
Work around dl(mysqli) issue with OPcache on AppVeyor
Backport skipping of ext/date/tests/gh-124.phpt on ASAN
zip version bump to 1.21.1
remove LIBZIP_VERSION constant def from stub
Skip nightly coverage job in forks
Add clang ASAN/UBSAN push job
Don't throw CompileError after parsing
Skip 64-bit specific date test on 32-bit
Improve flaky php-cli server test
Update NEWS
Add test case for timelib #124
Use 'const' for fixed API
Integrate timelib 2022.02
Add 'const' to match actual API
Revert "Store default object handlers alongside the class entry"
Revert "Port all internally used classes to use default_object_handlers"
Bump for 8.0.25
PHP-8.1 is now for PHP 8.1.12-dev
[ci skip] Update NEWS for PHP 8.2.0RC3
Do early returns in xml.c
Mark _xml_decode_tag() as taking a const XML_Char*
Refactor _xml_add_to_info()
Always skip randomly failing OCI8 extauth tests
Update NEWS with DNF type check bug fix
Only check classes in intersection type if the type might be valid
Reset FG(user_stream_current_filename) at the end of request
Mark gh9259_003.phpt as xfail with ASAN
Use PHP 7.4 syntax in gen_stub.php
Require PHP 7.4 at least for running the build system (#9519)
Check that all preprocessor conditions are terminated
Update cache slot size calculation in compact_literals.c
Use DNF intersection type check also for simple intersection types
Introduce PROGRESS_CACHE_SLOT() macro
Validate if the refpurpose and the description is in sync (#9510)
[ci skip] NEWS
Check return value of zend_jit_trace_get_exit_addr() (#9097)
Don't return existing error_container/NULL, but use by-ref instead
Skip oci tests that leak under asan
Declare ext/standard constants in stubs - part 7 (#9505)
[skip ci] Add missing NEWS entry for GH-9476
Improve magic __get and property type inconsistency error message
Use PDEATHSIG to kill cli-server workers if parent exists
Private method incorrectly marked as "overwrites" in reflection
Add support for validation of missing method synopses (#9491)
Upgrade PHP parser to 4.15.1
intl: use uspoof_check2UTF8 call when available. (#9478)
Add zend_string INI validators
Update globals to use bool type
Update INI validator and displayers depending on INI type
Use php_info_print_table_header for actual column headers only (#9485)
Add "Start time", "Last restart time" and "Last force restart time" to phpinfo() for opcache.
random: Validate that the arrays do not contain extra elements when unserializing (#9458)
Support sapi/cli/tests/017.phpt on Windows, too
Add support for validation of missing class synopses (#9472)
[ci skip] UPGRADING striping name.
[ci skip] NEWS UPGRADING
posix add sysconf call.
Remove obsolete checks for random-related functionality from ext/standard/config.m4 (#9482)
[ci skip] NEWS
Log the cause of error when opcache cannot write to file cache (#9258)
Regenerate optimizer func info after preprocessor condition changes
Add parenthesis around preprocessor conditions in stubs
Declare ext/standard constants in stubs - part 6
Declare ext/standard constants in stubs - part 5
[ci skip] NEWS
[ci skip] NEWS
[ci skip] NEWS
Add tests
Declare ext/standard constants in stubs - part 4
Unify structure for ext/random's randomizer tests (#9410)
Port all internally used classes to use default_object_handlers
Store default object handlers alongside the class entry
Add PHP-8.2 branch to build processes
Mark crypt()'s $string parameter as #[\SensitiveParameter]
Add PHP-8.2 branch to build processes
Prepare NEWS for PHP 8.2.0RC2
Harden GitHub Workflows security
Prepare PHP 8.2.0 RC1
Prepare for PHP 8.3
Add NEWS and UPGRADING entries for GH-9296
Make var_export/debug_zval_dump check for infinite recursion on the *object* (#9448)
Catch up dev version numbers
Remove unused ext/zend_test alias functions
Adjust PHPDoc
Update gen_stub to avoid compile errors on duplicate function names
Re-add fixed tests for GH-8885
typo
Delay fiber VM stack cleanup until after observer has been called
FPM fix strict prototype warnings.
Add a bit verbosity in FPM logs
Update NEWS for CLI built-in server changes
Respond with HTTP status 405 to DELETE/PUT/PATCH request on a static resource
Respond without body to HEAD request on a static resource
Drop unsupported libxml2 2.10.0 symbols
Add libxml_get_external_entity_loader()
Add openssl_cipher_key_length function
[ci skip] Add note about chacha20-poly1305 additon to UPGRADING
Implement FR #76935: OpenSSL chacha20-poly1305 AEAD support
Do not generate CONST_CS when registering constants (#9439)
Declare ext/standard constants in stubs - part 3 (#9427)
Declare ext/standard constants in stubs - part 2 (#9426)
Support test-ini also for phpize builds
Reduce observer overhead when restoring script from opcache (#9413)
xmlRelaxNGCleanupTypes() is deprecated as of libxml2 2.10.0
Select `rand_rangeXX()` variant only based on the requested range (#9418)
Declare ext/oci8 constants in stubs (#9419)
Test oci8 & pdo_oci in CI
Declare ext/standard constants in stubs - part 1 (#9404)
Stop JIT hot spot counting (#9343)
Unify structure for ext/random's engine tests (#9321)
Check at compile time that a built-in class is not being aliased (#9402)
Wrap observer notify functions into inlined enabled checks
Add an API to observe functions and classes being linked
Enum error message consistency (#9350)
Drop range inference for IS_NULL/IS_FALSE/IS_TRUE.
JIT: Make code generation to be consistent with register allocation
Don't enforce 64 hit counter on Windows
SameSite session cookie prop should behave like other INI settings
Check sessions are active before output emitted consistently
Remove OnUpdateTransSid validator
Remove OnUpdateLazyWrite validator
Add test for negative cookie lifetime
Use bool instead of int in session struct
Add a new zend API to check that strings don't have NUL bytes (#9375)
Declare ext/intl constants in stubs - part 14 (#9387)
Declare phpdbg constants in stubs (#9392)
Declare ext/intl constants in stubs - part 13 (#9385)
Declare ext/tidy constants in stubs (#9383)
Declare ext/curl constants in stubs (#9384)
opcache jit fix message format for OpenBSD.
add compat stuff for function attributes
Prepare for 8.0.24
Reintroduce legacy 'SJIS-win' text encoding in mbstring
PHP-8.1 is now for PHP 8.1.11-dev
[ci skip] Update NEWS for PHP 8.2.0 RC1
Add test to exercise _php_mb_encoding_handler_ex with multiple possible input encodings
SJIS-Mobile#SOFTBANK string can end immediately after special escape sequence
Legacy conversion code for '7bit' to '8bit' inserts error markers
In legacy text conversion filters, reset filter state in 'flush' function
Ensure that Base64 output always wraps lines in the same manner as legacy implementation
Adjust number of error markers emitted for truncated ISO-2022-JP escape sequence
Adjust number of error markers emitted for truncated UTF-8 code units
Imitate legacy behavior when converting non-encodings using mbstring
Make control flow in mb_wchar_to_cp50220 a bit clearer
Remove unused 'to_language' and 'from_language' struct fields
Use new encoding conversion filters for mb_parse_str and php_mb_post_handler
Declare ext/sockets constants in stubs (#9349)
Declare et/zip constants in stubs (#9146)
random left rotates annotating as const. (#9346)
zend introduce const GNUC attribute. sub optimisation where there is no pointers, nor particular memory layout, thread local/volatile ... involved. usage concealed for now into little pack helpers. Closes #9326.
[ci skip] Add missing NEWS entry for GH-9324
Correct IntlDateFormatter::formatObject params
Remove useless UNEXPECTED around RETURN_VALUE_USED in specialized RETVAL handler (#9329)
Replace RuntimeException in Randomizer::nextInt() by RandomException (#9305)
[skip ci] Add missing NEWS entry for GH-8409 fix to PHP-8.1 branch (skip-ci)
Re-fix GH-8409: SSL handshake timeout persistent connections hanging
Update expires format for session cookie (#9304)
reallocarray using proper inline facility to check overflow on windows. (#9300)
Show function name when dumping fake closure (#9306)
Make pestr[n]dup infallible (#9295)
Add --[no-]progress option to run-tests.php (#9255)
Simplify and move check for too high expiry time, which you can't reach on 32bit systems
The data for Tehran has changed, update test
Updated to version 2022.2 (2022b)
Empty merge
Updated to version 2022.2 (2022b)
Empty merge
Updated to version 2022.2 (2022b)
QA - pcntl - adjust tests set/get priority check env vars and root user
Windows arm64 build system support
Windows arm64 zend and standard extension support
Declare ext/intl constants in stubs - part 9 (#9276)
Declare ext/intl constants in stubs - part 8 (#9275)
Declare ext/intl constants in stubs - part 11 (#9281)
Declare ext/intl constants in stubs - part 12 (#9282)
Declare ext/intl constants in stubs - part 10 (#9280)
Make `"{$g{'h'}}"` emit fatal error and no incorrect deprecation notice in 8.2 (#9264)
Declare ext/intl constants in stubs - part 7 (#9269)
Declare ext/intl constants in stubs - part 6 (#9268)
Declare ext/intl constants in stubs - part 5 (#9267)
Declare ext/intl constants in stubs - part 4 (#9234)
Declare ext/intl constants in stubs - part 3 (#9233)
[skip ci] Also update message in feature closer
[skip ci] Bump days-before-close to 14 days in stale feature closer
[ci skip] update NEWS --CGI-- fixes for PHP 8.1 / 8.0 https://github.com/php/php-src/commit/30ed8fb32da398f62bb08ebd59c607eeafc3621d
[ci skip] Remove outdated info from php.ini templates
[ci skip] Add extension=zip to the php.ini templates
Handle all-zero state in Xoshiro256** (#9250)
zend allocators adding __declspec allocator for windows. (#9253)
[ci skip] NEWS and UPGRADING for constants in traits (#9251)
Implement constants in traits (#8888)
[ci skip] Run dos2unix on ext/random tests
CI: macos-10.15 -> macos-11 (#9087)
Add proper handling to observe functions in fibers
Save previous observer on the VM stack
[CI skip] update NEWS
Remove ZEND_DVAL_TO_LVAL_CAST_OK (#9215)
Add conflict markers for dba tests
Convert some macros to zend_always_inline functions (#8288)
Avoid unnecessary comparison
DIM on null in const expr should emit warning
Also fix ?-> on magic consts in const expressions
Add ext/random Exception hierarchy (#9220)
[ci skip] Move the removal of the RuntimeException in ext/random to Beta 3
Clean up the implementation of Randomizer::__construct() (#9222)
Clean up nested exceptions without value-add in ext/random (#9211)
Declare ext/intl constants in stubs - part 2 (#9219)
Declare ext/spl constants in stubs (#9226)
[ci skip] Update NEWS for PHP 8.2.0 beta3
Declare ext/sodium constants in stubs (#9225)
mb_strimwidth inserts error markers in invalid input string (for backwards compatibility)
Move kana conversion function to mbfilter_cp5022x.c
New implementation of mb_strimwidth
Move implementation of mb_strlen to mbstring.c
Unify ext/random unserialize errors with ext/date (#9185)
[ci skip] NEWS
[ci skip] NEWS
Extended map_ptr before copying class table (#9188)
Extended map_ptr before copying class table (#9188)
SPL: Use new improved is_line_empty() function instead of the old one (#9217)
[ci skip] Move 'Core' into the correct alphabetical order in NEWS
[ci skip] Update NEWS for ext/random
Tracing: Prevent recording types of variables used to pass zend_class_entry
PcgOneseq128XslRr64::jump(): Throw ValueError for negative $advance (#9213)
random: split Randomizer::getInt() without argument to Randomizer::nextInt()
Declare ext/tokenizer constants in stubs (#9148)
Declare Transliterator::$id as readonly to unlock subclassing it
Declare ext/pcntl constants in stubs (#9075)
Hide skipped tests in CI (#9163)
phpdbg few fixes, mostly printf-like format issues due to C str -> zend_string mismatches. annotate the allocator wrapper.
Improve phrasing in argument value errors in ext/random (#9206)
Include internal functions in the observer API
Declare ext/intl constants in stubs - part 1 (#9205)
Add opcache.preload_user=root to run-tests.php if root
[ci skip] Improve error message of an engine fails to seed from the CSPRNG (#9160)
Declare ext/gd constants in stubs (#9180)
Declare the TestInterface::DUMMY constant in stub
Update libmysqlclient version used in CI
Add an API to manipulate observers at runtime
Close stale feature requests
Suppress unused-but-set-variable warning in parsers
Avoid K&R style function declarations in sha1()
Change fetch_type from int to uint32_t (#9152)
Refactor code handling file.current_zval (#8934)
Improve DBA test suite (#8904)
Improve error messages in php_random_bytes() (#9169)
Declare ext/sqlite3 constants in stubs (#9181)
Change test to ignore INT_MIN/MAX, and fixed off WS
Do not add inherited interface methods to the class synopsis page
Drop Windows specific implementation of openssl_random_pseudo_bytes()
Escape \U and \u in generated stubs
Avoid using a stack allocated zend_function in Closure::call, to avoid prevent crashes on bailout
Add test case for GH-9601: DateInterval 1.5s added to DateTimeInterface is rounded down since PHP 8.1.0
Import timelib 2021.16
Tweak openssl_random_pseudo_bytes() upper bound error message
GH-9157: opcache fix build on older macOs releases. Closes #9158.
Use ValueError if an invalid mode is passed to Mt19937 (#9159)
Declare ext/pgsql constants in stubs (#9092)
Declare ext/zlib constants in stubs (#9147)
Declare ext/snmp constants in stubs (#9113)
Restrict range of buffer_length on all platforms to INT_MAX
Use uint32_t in Z_PARAM_VARIADIC_WITH_NAMED
The hashvalue/index of a bucket is a zend_ulong
Remove `->last_unsafe` from php_random_status (#9132)
Declare ext/xmlreader constants in stubs (#9133)
Ammend DBA error message to use standard messaging
Skip locale tests /w musl libc (#9141)
Declare ext/xsl constants in stubs (#9134)
Declare ext/xml constants in stubs (#9131)
Declare ext/zend_test constants in stubs (#9135)
sockets ext for solaris update.
Initialize blacklist_path_length
Declare ext/soap constants in stubs (#9124)
Declare ext/sysvmsg constants in stubs (#9125)
zend defines attribute malloc for Win32 as returned pointer are not aliased Closes #9118.
Improve error reporting in random extension (#9071)
Add support to pass driver flags to DBA handlers
Pass MDB_RDONLY to the LMDB environment for readonly DBs
Remove personalisation from write on readonly db DBA error message
Add comment in GDBM informing to what param the 0 org corresponds to
Remove dead code in ext/random/random.c (#9114)
Declare ext/reflection constants in stubs (#9111)
Declare ext/readline constants in stubs (#9110)
Declare ext/session constants in stubs (#9112)
Declare ext/random constants in stubs (#9109)
Use -1 "precision" in gen_stub.php
[ci skip] Update NEWS for byte expansion in rand_rangeXX()
Add test case for bug #80483/#75035
Import timelib 2022.01
Add test case for GH-8964
Import timelib 2021.15
Add support for stubs to declare intersection type class properties (#8751)
crc32 Aarch64 add crc feature to crc32_aarch64 from clang Closes #8916.
Declare ext/phar constants in stubs (#9094)
Declare ext/posix constants in stubs (#9095)
Declare ext/pspell constants in stubs (#9096)
[run-tests.php] echo call performance optimization
[run-tests.php] Combine multiple `str_replace` calls to a single `strtr` call
[run-tests.php] Replace backtick operator string literals with `shell_exec()` calls
[run-tests.php] Minor optimizations in `if` blocks by placing simple expressions first
[run-tests.php] Improve non-optimal nested `if`/`elseif`/`else` blocks with happy path optimizations
Convert client->request.request_uri to zend_string (#9086)
Declare ext/pdo constants in stubs (#9078)
Avoid signed integer overflow in php_random_range() (#9066)
[ci skip] Add "segmentation fault if user engine throws" to NEWS
[ci skip] Update EXTENSIONS and Author(s) in ext/random (#9074)
Assert all test files are cleaned up in CI (#8977)
Re-add MSAN in nightly
[skip ci] Add comment about LMDB env_close function call
Remove unnecessary include in SPL
Update NEWS
Update NEWS
Sockets disable zerocopy test on ppc based arch.
Port win32/codepage.c codes for windows arm64
Update NEWS
Update NEWS
Declare ext/pcre constants in stubs (#9077)
`phpinfo` HTML Output: Make module title names clickable and link to the URL fragment
Declare ext/openssl constants in stubs (#9046)
Declare ext/odbc constants in stubs (#9045)
opcache find best candidate near .text segment for large maps on FreeBSD. Follow up on #8890 using similar workflow, we go through the php binary mapping per address boundaries.
New implementation of mb_convert_kana
PHP-8.1 is now for PHP 8.1.10-dev
[ci skip] random: add SINCE in EXTENSIONS
Add myself as mbstring maintainer [ci skip]
Add scripts/dev/credits to 'verify-generated-files' action (#9049)
[ci skip] Update NEWS for PHP 8.2.0 beta2
[ci skip] Add the 'random' extension to labeler.yml (#9050)
Run scripts/dev/credits
[ci skip] Link the random extension RFCs in UPGRADING
[ci skip] update branch creation time frame in release process doc
RFC: Make the `iterator_*()` family accept all `iterable`s (#8819)
Rename @cname to @cvalue in stubs (#9043)
opcache JIT support improvements attempts on macOs.
Do not assert SSE/AVX resolvers at windows arm64
Port standard/crc32 for windows arm64
Deprecate MYSQLI_IS_MARIADB
Implement Random Extension
Drop support for SQLITE_COPY in authorizer callback
Prepare for PHP 8.0.23
DatePeriod properties cannot be made readonly (#9013)
Update request startup error messages
GH-8344 Fetch properties of enums in const expressions
Do not send X-Powered-By if headers sent (#9039)
Add FILTER_FLAG_GLOBAL_RANGE to filter Global IPs as per RFC 6890
Add "error_log_mode" setting
FPM Downgrade occasional "failed to acquire scoreboard" warning
Revert "FPM: Downgrade occasional "failed to acquire scoreboard" warning"
Revert "FPM: Downgrade occasional "failed to acquire scoreboard" warning"
mb_decode_numericentity decodes valid entities which are truncated at end of string
mb_decode_numericentity converts entities which immediately follow a valid/invalid entity
mbfl_strwidth does not need to use legacy conversion filters now
New implementation of mb_{de,en}code_numericentity
[ci skip] Follow-up on #8914, usage comments addition.
FPM: Downgrade occasional "failed to acquire scoreboard" warning
Declare ext/mysqli constants in stubs (#8811)
no need for attributes on legacy
cleanup unused
[ci skip] NEWS
[ci skip] NEWS
Allow to not close stream on rscr dtor in php cli sapi
add SensitiveParameter as known string and use it in arginfo
[ci skip] Add DNF types to UPRADING (#9031)
Prevent fiber switching in tick function and signal handlers (#9028)
QA - ftp_rawlist - check list return value
QA -mb_convert_encoding_array - error for object item in array
[ci skip] NEWS typo
opcache JIT: Adds initial support for macOs Instruments performance measurement.
Drop useless TODO comment
QA - mb_http_input - function returns FALSE for type 'L' or 'l'
random extension macOs handling update.
random: whitelist arc4random_buf if glibc
[ci skip] NEWS
[ci skip] NEWS
Extend deprecation notices to is_callable($foo) and callable $foo
QA - ftp_connect - error behavior when connection fails
QA - pcntl_signal - error when handler is int and not SIG_DFL or SIG_IGN
Prevent potential buffer overflow for large value of php_cli_server_workers_max
QA - pcntl_exec - check stringable parameters error
add compatibility for tentative-return-type
Support the actual `#[\SensitiveParameter]` attribute in stubs (#8836)
[ci skip] Add missing NEWS entry
Require zend_constants.stub.php from zend_exceptions.stubs.php
Make the ABI compatibility of generated arginfo files configurable (#8931)
Update to libpcre2 10.40
.gdbinit: Update print_ht for new compact packed arrays representation (#8966)
Add `zend_array_to_list()` (#8976)
QA - Test Cov - ext:pcntl - pcntl_signal() - max signal allowed (#8956)
[skip ci] Readme: Add Github Actions nightly workflow status badge (#8971)
FPM: Implement access log filtering
NEWS/UPGRADING changes
sockets introduces socket_set_option SO_ZEROCOPY and MSG_ZEROCOPY for the socket_send* functions. it avoids copy b/w userland and kernel for both TCP and UDP protocols.
[ci skip] NEWS
XFAIL test
Add ini_parse_quantity function to convert ini quantities shorthand notation to int (#8454)
[ci skip] NEWS
intl extension, build fix for icu >= 69.x release. ubrk/ucnv_safeClone had been deprecated in favor of ubrk/ucnv_clone which does not use user provided stacks but remain thread safe.
Reduce memory allocated by var_export, json_encode, serialize, and other (#8902)
Add upgrading internals entry for fgetcsv() changes
Make php_fgetcsv() return a HashTale instead of in-out zval param (#8936)
Use true/false and comment when arg correspond to silent arg
Remove silent argument to spl_filesystem_file_read_line_ex()
Remove silent argument to spl_filesystem_file_read_line()
Add support for Disjoint Normal Form (DNF) types (#8725)
Update mime-db from 1.45.0 to 1.52.0
FPM add routing view global option (for FreeBSD for now).
[ci skip] Update news
[ci skip] drop NEWS entry for reverted fix
[ci skip] drop NEWS entry for reverted fix
Improve contrast for dark mode phpinfo (#8893)
intl extension, build fix for icu >= 71.x release.
Update UPGRADING
Implement mysqli_execute_query() (#8660)
Move NEWS entry to PHP 8.1.8
Revert "Update FreeBSD CI image."
Revert "Update FreeBSD CI image."
Allow for arbitrary (class) attributes in stubs
[ci skip] Update NEWS for PHP 8.2.0 beta1
fix NEWS
[ci skip] Update news
Update FreeBSD CI image.
Update FreeBSD CI image.
Use `safe_*erealloc*` flavor in few places to mitigate possible overflows.
Follow up on #8897 but on master which instead does not use the old custom alloca. Closes #8905.
Pre-compute remote address length in CLI SAPI
Refactor registration of variables for the CLI SAPI
Add php_register_known_variable() for know var names
Abort LMDB transaction whe trying to delete non-existing key
Abort LMDB transaction whe trying to delete non-existing key
Disallow assigning reference to  unset readonly property
Adds `TCP_CONGESTION` socket option for Linux/FreeBSD.
Add test for backtrace with aliased trait (#8705)
Use size_t for get_ps_title() length parameter
Use bool and rename variable for ease of comprehension in ps_title.c
Add NEWS entry
Allocate JIT bufer close to PHP .text segment to allow using direct IP-relative calls and jumps (#8890)
streams/xp_socket: fix clang build error with enum usage on bool condition.
main/streams/plain_wrapper: skip lseek(SEEK_CUR) for newly opened files
Improve tests on 32bit
[ci skip] NEWS and UPGRADING
implement fseek for zip stream when possible with libzip 1.9.1
JIT: Add IBT support (#8774)
FPM: zlog, fix free on wrong address for message prepend.
Increase test portability
Add `reallocarray` implementation.
Convert return type of various object handlers from int to zend_result (#8755)
Use proper grammar in error message
Use the passed 'this' pointer instead of ZEND_THIS (#8854)
Add test coverage job
Get rid of duplicated rotr3 implementation (#8853)
Remove zend_shared_alloc_pages declaration that was never implemented (#8852)
Declare ext/mbstring constants in stubs (#8798)
Replace another hard-coded line number
Replace more hard-coded line numbers
Refactor spl_filesystem_object_get_path() to return zend_string*
Remove Z_SPLFILESYSTEM_P macro
Move some private SPL Directory elements out of the header
Fully convert accel_remap_huge_pages to use zend_result
Remove reundant address comparison in accel_remap_huge_pages
Don't shortcut empty oparray executions if zend_execute_ex has been overridden
Add AllowDynamicProperties on OCILob and OCICollection
[ci skip] fix gen_verify_stub example command
PHP-8.1 is now for PHP 8.1.9-dev
Update NEWS for PHP 8.2.0 alpha3
Use same type error wording for alias iterable in ZPP (#8838)
Add test for iconv_strpos() internal encoding error
Specify unit in out of memory error (#8820)
Tweak $count range check of array_fill()
Prepare for 8.0.22
Support the `#[\AllowDynamicProperties]` attribute in stubs (#8776)
Refactor sapi_getenv() (#8786)
Early return in spl_filesystem_file_rewind()
Use bool for silent parameter in SPL directory.c
Introduction of timing attack safe bcmp implementation.
Escape problematic characters in CREDITS files
Prevent fclose on underlying SplFileObject file stream. (#7920)
Replace the use of ZVAL_BOOL() with ZVAL_TRUE() or ZVAL_FALSE() where the value is fixed (#8815)
intl ICU C++ code modernisation, making it closer to C++11 (#8650)
Zend, ext/opcache: use PR_SET_VMA_ANON_NAME (Linux 5.17) (#8234)
Remove NEWS entries which are not supposed to be there
[ci skip] Add true type support to UPGRADING file
Declare true return types (#8759)
streams/xp_socket: eliminate poll() when MSG_DONTWAIT is available
Remove superfluous snapshot_build_exclusions
Implement #77726: Allow null character in regex patterns
Add clean_module_functions() (#8763)
Deprecate zend_atol() / add zend_ini_parse_quantity() (#7951)
Skip tests on 32-bit
check_parameters.php: Make the script's retval reflect errors
Use get_active_function_or_method_name() for zend_forbid_dynamic_call() (#8762)
Use HTTPS URLs in resource files
NEWS
NEWS
Add test for iconv_mime_encode() for input-charset and output-charset
Update curl/tests/check_win_config.phpt
Add skip online test to curl_upkeep test
Add new curl_upkeep() function
Expose new constants from libcurl 7.62 to 7.80
Update gen_stub to support #if around classes
Regen missing Zend/Optimizer/zend_func_infos.h
Indent with TAB in .h files generated by gen_stub
[ci skip] Add missing NEWS entry
Remove unused server_name variable
Mark parameter in ext/zip as sensitive
Mark parameter in ext/sodium as sensitive
Mark parameter in ext/openssl as sensitive
Mark parameter in ext/odbc as sensitive
Mark parameter in ext/oci8 as sensitive
Mark parameter in ext/mysqli as sensitive
Mark parameter in ext/ldap as sensitive
Mark parameter in ext/imap as sensitive
Mark parameter in ext/ftp as sensitive
Mark parameter in ext/hash as sensitive
Mark parameter in ext/pdo as sensitive
Mark parameter in ext/standard as sensitive
Add true as a type (#8326)
Allow arbitrary const expressions in backed enums
Use fast conversion filters to implement php_mb_ord
mbfl_strlen does not need to use old conversion filters any more
Use fast text conversion filters to implement mb_check_encoding
Assert minimum size of wchar buffer in text conversion filters
Fully use available buffer space where converting Base64
Add deprecation notices to utf8_encode and utf8_decode
Collapse more generated files in PRs (#8754)
Restore backwards-compatible mappings for 0x5C/0x7E in SJIS (for fast conversion filter)
Restore backwards-compatible mappings of 0x5C and 0x7E in SJIS
Add `SO_SETFIB` FreeBSD socket option constant.
Restore backwards-compatible mappings of 0x5C and 0x7E in SJIS
Join shm_pair.info and .segment of Windows shm implementation
[ci skip] missing CVE
[ci skip] missing CVE
[ci skip] missing CVE
Run POD_Firebird tests on AppVeyor CI
Pass signature to openssl_verify in bug81713 test
Remove SIZEOF_OFF_T undef in PDO PGSQL driver (#8301)
Remove internal usage of SplFileInfo::_bad_state_ex() method (#8318)
Revert "Run PDO_Firebird tests on AppVeyor CI"
Run PDO_Firebird tests on AppVeyor CI
Declare ext/libxml constants in stubs (#8721)
[ci skip] Add list of repositories for RMs to clone
[ci skip] Update example commit messsages in RM doc
[ci skip] Update and clarify release process document
[skip ci] Add missing UPGRADING.INTERNALS entries
Add ZEND_THREEWAY_COMPARE() macro to fix casting underflowed unsigned to signed (#8220)
Add function exposing HAVE_GCC_GLOBAL_REGS (#8359)
[skip ci] Auto labeling for PRs (#8693)
Backport fcba0a49fc227ea0a0c033446ccb6b5dac631f1d
PDO Common tests should not require a driver
Add `SO_BPF_EXTENSIONS` flag to socket.
Avoid accessing undefined variables in run-tests.php (#8669)
[ci skip] Update RM documentation with latest notes
Update NEWS
Remove code duplication in zend_std_compare_objects (#8710)
Update NEWS for PHP 8.2.0 alpha2
[skip ci] Update UPGRADING in regards to iterable compile time alias
Convert iterable into an internal alias for Traversable|array (#7309)
[skip ci] Mark `*_arginfo.h` as `linguist-generated` (#8722)
Bump version in 7.4 to 7.4.31-dev
Adding "git pull" to make sure local check out is in sync (I keep forgetting that)
Implements ancillary data on NetBSD.
[ci skip] Drop ability to send QA reports by email (#8657)
Declare ext/ldap constants in stubs (#8717)
Declare ext/com_dotnet constants in stubs (#8675)
Declare ext/gmp constants in stubs (#8704)
Declare ext/iconv constants in stubs (#8714)
Declare ext/imap constants in stubs (#8715)
Add missing EXTENSIONS section to new test
Declare ext/json constants in stubs (#8716)
Add missing SKIPIF section to new test
Revert "JIT: Add IBT support (#8636)"
Update NEWS
A few cleanup changes for gen_stub.php
Add support for sensitive parameters in stubs
Add zend_mark_function_parameter_as_sensitive()
[ci skip] add example build commands to RM documentation
Declare ext/ftp constants in stubs (#8703)
Declare ext/filter constants in stubs (#8702)
Declare HASH_HMAC in stubs
Declare ext/fileinfo constants in stubs (#8701)
Declare FFI::__BIGGEST_ALIGNMENT__ in stubs as well
Declare ext/ffi constants in stubs (#8695)
NEWS for GH-8685
NEWS for GH-8685
Better return types for `getBackingType` (#8687)
Implements socket ancillary data on FreeBSD. (#7708)
Improve error message, and add additional test.
Remove no longer used 'timezone_valid' flag
Only warn when an incorrect timezone is set through 'date.timezone'
Update wording of warning message, and reinstate 'UTC' fallback for ctor
Declare ext/exif constants in stubs (#8680)
Declare ext/enchant constants in stubs (#8679)
Do manual type checks because the engine doesn't
Partial revert of 6d96f39a68bb
Make vm_interrupt and timed_out atomic (#8327)
Verify if generated func info is up-to-date
Declare ext/dom constants in stubs (#8676)
Update PHP-Parser to 4.14
Regenerate optimizer function info
use sha256 in openssl test suite
Get rid of invalid assertion and cleanup zend_call_method
Verify internal types before abandoning call frame
Remove mysqli_close from clean_table.inc
[ci skip] Revert "Drop libmysql build from nightly" as PDO still accepts libmysql (#8664)
[ci skip] Drop libmysql build from nightly (#8663)
Revert "Make socket path shorter for ext/sockets/tests/socket_cmsg_{rights|credentials}.phpt"
Mark Windows mail tests as conflicting
Make socket path shorter for ext/sockets/tests/socket_cmsg_{rights|credentials}.phpt
Make ini_set invocation compatible with PHP 8.0
JIT: Add IBT support (#8636)
UPGRADING for libmysql change
Remove tests for libmysql
Remove mysqli_driver::$reconnect property
The INI mysqli.reconnect directive has been removed.
Remove MYSQLI_USE_MYSQLND constant and all the code with it
Remove libmysql
fpm sockets set listen back queue size to negative which trim down (#8638)
Refactor (again) CLI SAPI server_client struct to use zend_string* (#8605)
Session: Refactor basedir to be a zend_string in mod_files
Session: Refactor last key to be a zend_string in mod_files
Session: Use zend_string* consistently for key in mod_mm
Session: Use zend_string* consistently for key in mod_files
Session: use more appropriate types
Replace php_stdint.h header with standard headers (#8613)
php_mb_convert_encoding{,_ex} returns zend_string
Use fast text conversion filters to implement php_mb_convert_encoding_ex
Add assertions to help catch buffer overflows in mbstring text conversion code
Add more tests for mbstring encoding conversion
For JIS/ISO-2022-JP, treat a truncated escape sequence as error
Implement fast text conversion interface for QPrint
Implement fast text conversion interface for HTML-ENTITIES
Simplify code for converting UTF-8
Implement fast text conversion interface for Base64
Implement fast text conversion interface for UUENCODE
Implement fast text conversion interface for '8bit'
Implement fast text conversion interface for ISO-2022-JP-KDDI
Implement fast text conversion interface for ISO-2022-JP-MS
Implement fast text conversion interface for mobile variants of UTF-8
Implement fast text conversion interface for ISO-2022-JP-2004
Implement fast text conversion interface for SJIS-2004
Implement fast text conversion interface for EUC-JP-2004
Implement fast text conversion interface for mobile SJIS variants
Implement fast text conversion interface for UTF7-IMAP
Implement fast text conversion interface for SJIS-mac
Implement fast text conversion interface for ISO-2022-KR
Implement fast text conversion interface for '7bit'
Deal with compiler warning in file sapi/fpm/fpm/fpm_conf.c
Add C API for getting backed enum case by value
Add upgrading entry for DatePeriod property changes
Declare DatePeriod properties (#8534)
Move SplFileObject tests into subfolder
[ci skip] Improve latest NEWS entries to point to actual bug report
Quote when adding to connection string in (PDO_)ODBC
Update NEWS in 8.1 too
Update NEWS in 8.1 too
[ci skip] NEWS, UPGRADING
sockets add openbsd's SO_RTABLE option, equivalent of Linux's SO_MARK. (#8440)
Sockets: add constants TCP_KEEPALIVE, TCP_KEEPIDLE, TCP_KEEPINTVL, TCP_KEEPCNT (#8473)
[ci skip] NEWS
Add JIT guards for INIT_METHOD_CALL when the method may be modified (#8600)
Remove trailing whitespace from test
Mark test as XFAIL due to wrong assumptions
Remove custom alloca() (#8513)
Update NEWS
Properly fix tidy test failure on Windows
Quick fix test failure on Windows
Test tidy::$value when not null
Add upgrading entry for ext/tidy property changes
Declare tidyNode properties as readonly
Declare tidy properties
Add IBT support for fiber
[ci skip] Remove RC1 from 8.1.7 in the NEWS file
Update NEWS with mb_detect_encoding changes
Add some stub related todo comments
Declare ext/calendar constants in stubs (#8630)
Ensure vm_spec_handlers exists for all opcodes <= 255 so that user defined higher opcodes do not read outside buffer
mb_detect_encoding recognizes all letters in Hungarian alphabet
mb_detect_encoding recognizes all letters in Czech alphabet
Bump for 8.1.8-dev
Bump for 8.0.21
Disable zend_rc_debug during dtor of dl()'ed module (#8606)
Stop copying zend_module_entry (#8551)
Use proper cast
Minor refactoring of main/main.c and TSRM (#8608)
Drop remaining usage of u_char in favour of standard C99 uint8_t (#8611)
Use standard C99 uint8_t type instead of u_char type for crypt_freesec (#8610)
libmagic: use php_memnstr instead of memmem
Added a few missing punctuation marks in UPGRADING
Add upgrading entry for readonly classes
Remove special case for the error message of static properties in readonly classes
[skip ci] Add NEWS entry
Add support for class constants in stubs (#7434)
Remove XFAIL from sibling method call test
I shall never touch anything Windows related
Use proper function prototypes in win32/glob.c
Don't initialise pointers to zend_stat_t
Initialise zend_stat_t to fix MSAN build
Used string with biased hash for double deduplication
Assert no unrelated literals where unsupported
Remove separate valid_T set
Remove unused temporaries from taken map
Don't classify literals during compaction
Allow compacting LITERAL_VALUE with related literals
Revert "Refactor CLI SAPI php_cli_server_client struct to use zend_string (#8522)"
Panic with abort() (#8590)
[skip ci] UPGRADING note update, follow-up #8411 (#8598)
Add SO_MEMINFO socket option for gathering socket related info
Reduce the scope of XFAIL (#8592)
Build ext/zip as shared library by default on Windows
Adjust existing tests for fixed bugs
Integrate timelib 2021.12
Stop closing stderr and stdout streams (#8571)
Stop closing stderr and stdout streams (#8570)
Revert "XFAIL tests (GH-8588)"
XFAIL tests (GH-8588)
Stop closing stderr and stdout streams (#8569)
[ci skip] Update NEWS
Add extra test case that hase both EXCLUDE_START_DATE and INCLUDE_END_DATE
Add serialisation support for the new 'include_end_date' property
Emit EXT_STMT for each 'elseif' clause
Disable zend_rc_debug during dl() (#8552)
Add support for readonly classes (#7305)
Disable the read buffer in file_get_contents()
Add TCP_NOTSENT_LOWAT socket option
[ci skip] Order NEWS sections alphabetically
Add CURLOPT_MAXFILESIZE_LARGE option
Refactor CLI SAPI php_cli_server_client struct to use zend_string (#8522)
Update libmysqlclient to 5.7.38
[ci skip] NEWS
[ci skip] NEWS
[ci skip] NEWS
Do not optimize out ini_get() when the entry does not exist during compilation (#8507)
Do not optimize out ini_get() when the entry does not exist during compilation (#8507)
[ci skip] NEWS
Add static return type for DateTime*::createFrom*() when possible
Add "N" and "o" format specifiers to idate()
Add JIT guards for INIT_FCALL instructions and functions that may be modified
Test standard mail and imap on Windows CI
Update bug tracker links
ext/opcache/ZendAccelerator: fix accel_deactivate_now() prototype (#8541)
GH-8458: DateInterval::createFromDateString does not throw non-relative items are present
Test snmp on Windows CI
Drop useless network/syslog_basic.phpt (#8526)
Minimal refactoring of CLI SAPI (#8519)
Add ReflectionMethod::hasPrototype method
Add ReflectionFunction::isAnonymous()
Add generate_mbstring_dict.php
Add fuzzer for mb_convert_encoding
[ci skip] NEWS
[ci skip] NEWS
Use zend_register_ini_entries_ex / zend_unregister_ini_entries_ex (#8505)
Don't unnecessarily skip mb related tests
Adding missing NEWS entry
Deprecate ${} string interpolation
[ci skip] Mention selection of a veteran + 1 or 2 rookies
Add DatePeriod's __serialize and __unserialize methods (#8464)
Throw when calling ReflectionAttribute::__construct()
Reorder param parsing and reflection object retrieval
bump zip version
[ci skip] NEWS
[ci skip] NEWS
main: set IP_BIND_ADDRESS_NO_PORT if available when connecting to remote host
Support zend alloc USE_ZEND_ALLOC_HUGE_PAGES option on MacOS
Move FPM ACS fix NEWS entry to 8.0.20
Update NEWS entry with correct version for FPM ACL fix
Turn off "Expect" header in test
Update 32-bit only test
Update related test in ext/standard
Extended tests
Add support for serialising all DateInterval objects
Rename have_special_relative to from_string, fix serialisation constraint, and reorder fields
Add a few test cases for DateInterval
Show the 'have_special_relative' property in var_dumps, and disallow serialization if set
Add DateInterval's __serialize and __unserialize methods
Remove fake properties from DateInterval
Add DateTimeZone's __serialize and __unserialize methods
Add DateTime/DateTimeImmutable's __serialize and __unserialize methods
strlcpy/strlcat update to last openbsd version.
Close GH-8306: don't use of bitwise '|' with boolean operands
Refacto php_module_startup() (#8303)
Add skip for FPM resource heavy tests
Prepare for PHP 8.1.7
Use the new RETURN_THROWS() instead of just returning NULL
Return early when the timezone info is NULL.
Haiku fix ZTS build disabling `tsrm_ls_cache` usage.
Prepare for PHP 8.0.20
Reorder optimization passes to avoid miss-optimization
Add clarifying comment for SEND_VAL usage
Add missing SKIPIF for new ext/ffi test
Avoid setting ce for ref return_info
main/streams/streams: use copy_file_range() on Linux (#8413)
Update NEWS and www.conf with listen.backlog default change
fpm: listen backlog should default to -1 also on Linux
Minor refactoring of std string extension (#8196)
Use bit shift to set bitflags in standard/file.h (#8428)
Add missing news entry for GH-8421
Clear recorded errors before executing shutdown functions
Introduce CURLOPT_XFERINFOFUNCTION
Only check tracked files in verify-generated-files
Verify generated files are up to date in CI
[skip-ci] update UPGRADING
Add some const qualifiers in zend_string/hash (#8304)
Remove unnecessary bailout in fcall optimization
Remove unused macros
Move check for named params in fcall optimization earlier
Don't optimize trailing args for prototype fbc
sapi/*: move duplicate "--define" code to library
Don't specify ce for MAY_BE_REF STATIC_PROP_FETCH
Handle other DO_FCALL opcodes in NEW live range calculation
Remove unnecessary abstract function check in zend_get_call_op()
Check opcode rather than result_type for R/IS type inference
Error handling for UTF-8 complies with WHATWG specification
Check that MAY_BE_REF variables cannot have a ce
Don't set ce for by-ref return type
Move MAY_BE_REF check into COPY_SSA_OBJ_TYPE
Don't use CE for by-ref arguments
Don't use CE info from pi node for MAY_BE_REF var
Support fpm_get_socket_listening_queue on macOS
fileinfo: Re-add Apple flag
Improve and fix stub return types (#8368)
Refactor code to avoid duplication
style/readability updates
GH-7979: iterator advances when checking if valid
Run nightly on php org only unless triggered via workflow_dispatch
Use `zend_update_property` to set `SensitiveParameterValue::$value` (#8365)
SPL: minor refactoring (#8341)
Remove unused variable from gen_stub.php
Configure diff drivers for `php`, `phpt`, `c` and `h` in `.gitattributes` (#8343)
Prepare for 7.4.30
Add tz update into NEWS
Prep NEWS for 7.4.29 release
BZ2: Use EMPTY_SWITCH_DEFAULT_CASE
Move locks in TSRM.c to prevent races
Allow user to change SQLITE_DEFENSIVE if needed
Use more specific return types in SPL
Add null and false support to gen_stubs
Makefile: Clean up .gcda files in prof-gen.
Add `print_r()` to `function_arguments/sensitive_parameter_value.phpt` (#8340)
Preserve file-position when php://temp switches to temporary file
Improve type narrowing fix
Add debug assertion on type narrowing
Improve file/line information for narrowing warning
Remove issue_comment trigger on nightly
Add nightly for GitHub actions
Refactor SplFileObject CSV methods (#8317)
Add missing ZPP checks in SPL Directory (#8325)
Allow ``null`` and ``false`` as standalone types (#7546)
Add extra check for FPM proc dumpable on SELinux based systems
[skip ci] Remove superfluous backslash in UPGRADING
Stop including php_pcre.h from spl_iterators.h
Implement the "Redacting parameters in back traces" RFC
Use AS_ECHO([]) instead of obsolete $as_echo (#8321)
Minor refactoring of spl_directory.c
Updated to version 2022.1 (2022a)
Empty merge
Updated to version 2022.1 (2022a)
Empty merge
Updated to version 2022.1 (2022a)
Empty merge
Updated to version 2022.1 (2022a)
Implemented FR #51634: Can't post multiple fields with the same name
Use proper types in sodium_crypto_stream_xchacha20_xor_ic()
Regenerate optimized func infos
Mark ext/mysqli properties as readonly for documentation purposes
Bump version
Add sodium_crypto_stream_xchacha20_xor_ic()
Ensure correct target opline for exceptions thrown during yield from
Trcing JIT: remove unchecked type guards om ROPE_* instructions
FPM: Emit error for invalid port setting
Zend/zend_execute: remove duplicate deinitialization code
Restore memory_reset_peak_usage() declaration
Add missing #endif in stubs
Determine value of ZEND_MM_* during config and fix sign conversion (#6981)
Re-enable i386 tests on Azure Pipelines
Bump for 8.1.6-dev
Replace memcmp() with zend_string functions (#8216)
Register JSON_ERROR_NON_BACKED_ENUM constant (#8285)
spl_ptr_llist_offset() is not supposed to return NULL here
typo
run-tests.php: fix TypeError: Unsupported operand types: string * int <n> is mandatory for --show-slow and --set-timeout use <n> in help message instead of confusing [n]
Don't try to access memory outside string
line break before --prefix in php-fpm man page
ext/opcache: merge redundant code and "bool" refactoring (#8237)
fpm zlog_stream_buf_alloc_ex little simplifications. (#8224)
Use zend_string_to(upper|lower)() API directly
Remove strnatcmp_ex() wrappers
Use zend_result/bool in spl_array.c
Use ZEND_THROWS() where applicable in spl_array.c
Convert check + exception to assertion
Improve error message class type
ext/opcache/ZendAccelerator: move duplicate code into bzero_aligned()
ext/opcache/zend_shared_alloc: add zend_shared_alloc_aligned()
Remove unused include of stdbool.h
ext/opcache: C++ compatibility
Zend/zend_alloc: use bool and make internal variable static (#8230)
build: Extend m4 to support C++20
ext/opcache/ZendAccelerator: remove redundant check (#8222)
zend_mm_map_fixed using MAP_TRYFIXED on NetBSD.DragonFlyBSD
Use more appropriate types in JSON extension (#8194)
Skip test for preloading
Reset EG(filename_override) after fatal error
Refactor php_next_utf8_char() to use zend_result
Make DirectoryIterator current() / key() return types tentative
Improve sesson write failure message for user error handlers
Tracing JIT: Eliminate useless guards for CONCAT
Adjust filename/lineno for constant expressions
Adjust PHP_SETUP_LIBXML description to mention what it doesnt use action-not-found
Put packed back to attribute iterating after merge
Add tests for function parameter attributes to ext/zend_test
Added: [zend_]memory_reset_peak_usage() (#8151)
Allowing catching arg type deprecations in intl classes
Bump for 8.1.5-dev
Prepare for PHP 8.0.18
Allow setting full type info
Avoid possible [-Wstrict-prototypes] build warnings
fix [-Wstrict-prototypes] buid warnings
Mark failing JIT test with XFAIL
GitHub actions test with firebird, dblib and werror
Add NEWS entry for recent MBString bugfix (re: '7bit' encoding)
Migrate CI to GitHub actions
mb_check_encoding($str, '7bit') rejects strings with bytes over 0x7F
[ci skip] Don't run GitHub actions on forks
Disable ASSIGN optimization for values inferred for fatal errors.
Release lock and protect SHM before replaying warnings
Initialize int_codepoint in parse_code_point_param()
Prepare for 7.4.29
Add fix to NEWS
[ci skip] news
Free cached chunks when the requested memory limit is above real usage
[ci skip] Update README.md on ZE description
Haiku fix ZTS build, disabling tls model
Improve speed of dominators and loop identification algorithms
ext/opcache: check mkstemp() return value right after the call (#8031)
[ci skip] [Close stale PRs] Enable GitHub action
[Close stale PRs] Skip RFCs and "Waiting on Review"
Bump for 8.1.4-dev
Bump for 8.0.17-dev
Prevent array modification if it's captured by user error handler during index conversion
Optimize stripos/stristr
[ci skip] Close stale PRs with GitHub actions
[ci skip] [Zend] Update README.md with new Zend VM executors
Update php-parser to 4.13.2 in build/gen_stub.php (#7989)
Make gh7875.phpt more resilient
Strip MariaDB 10 prefix
[ci skip] Extend my maintainership of com_dotnet and gd
fuzzer support for FreeBSD, getting opcache location
[JIT] Print out more meaningful warning message
fix GH-7899 Regression in unpack for negative int value
fix GH-7899 Regression in unpack for negative int value
Remove JMPZNZ opcode
Added test
VS 17 == MSVC v143 == Visual Studio 2022 == cl 19.3x
Run mb_send_mail tests on Windows, too
Silence potential connection failure in SKIPIF section
Add support for custom property links
Preparing for 8.1.3-dev
Prepare for PHP 8.0.16
riscv64 support for fibers
Mark mysqli_driver properties readonly
Remove duplicated SKIP checks from mysqli tests (#7858)
Redefine PDOException::$code with correct type
mysqli_next_result_no_repeat_error.phpt must not use --EXTENSIONS--
Handle holes in zend_get_opcode_id()
mysqli_result::__construct should throw exceptions (#7855)
Add some more test cases for BCMath
Add helper for convertion to CHECK_VAR/FREE/NOP
Remove an incorrect JMPZNZ optimization
Remove bogus type of $object param in SplObjectStorage::offsetSet()
[skip ci] Update documentation of supported php versions (#7822)
iSeparate tests
Don't truncate subsecond precision in run-tests.php JUNIT output
Eliminate more VERIFY_RETURN_TYPE instructions
[ci skip] supportedOs Id for Windows 10 and 11 are the same
Skip abstract methods
Mark curl tests using http2.golang.org as XFAIL
Implement fast text conversion interface for CP5022{0,1,2}
Implement fast text conversion interface for JIS
Implement fast text conversion interface for GB18030
Implement fast text conversion interface for EUC-JP-MS
Implement fast text conversion interface for CP51932
Implement fast text conversion interface for EUC-CN
Implement fast text conversion interface for EUC-TW
Implement fast text conversion interface for CP936
Implement fast text conversion interface for CP932
Implement fast text conversion interface for EUC-KR
Implement fast text conversion interface for UHC
Implement fast text conversion interface for HZ
Implement fast text conversion interface for CP950
Implement fast text conversion interface for Big5
Prevent strict interpretation of tentative definition
Make sure SCCP can evaluate all functions pass1 can
Extract special function evaluation from pass1
Remove special chr/count handling in sccp function evaluation
Minor code cleanup in pass1
Reuse get_class_entry_from_op1() helper
Sink op_array scope case into get_class_entry()
Remove outdated FETCH_CLASS handling in FETCH_CLASS_CONSTANT optimization
Extract common replacement login in pass1
hash: Upgrade xxHash to 0.8.1
Remove unnecessary wrapper function
Don't exclude arrays from constant collection
Remove FETCH_CLASS+INSTANCEOF special case
Move FETCH_CLASS+INSTANCEOF special case out of update_op1_const()
Remove unnecessary INSTANCEOF special case in sccp
Remove unnecessary try_replace_op1() special cases
Don't replace SEND opcodes with different by-ref behavior
Remove redundant code in zend_optimizer_replace_by_const()
Bucket->key must be removed before destructor call, because destructor may update the same HashTable.
micro-optimization
Avoid void* arithmetic in sockets/multicast.c on NetBSD
Don't test hidden files that happen to end in .phpt
Azure CI: remove duplicates and add required libs
[ci skip] Update the min curl version in the sync-constants.php script
$context parameter of get_headers() is nullable
Reset Bucket->key of deleted HastTable elemets to NULL.
New internal interface for fast text conversion in mbstring
socket cmsg credential test fixes, "backporting" from the FreeBSD PR.
socket: ancillary credentials build fix for non linux systems.
pcntl add ECAPMODE from FreeBSD (#7716)
zend gdb detection fix on FreeBSD.
zend alloc USE_ZEND_ALLOC_HUGE_PAGES option support on solaris based systems (#7789)
Use new param API in ext/pcntl (#7751)
mb_convert_encoding will not auto-detect input string as UUEncode, Base64, QPrint
Move ctype test out from Zend and into ctype extension
Allow internal functions to declare if they support compile-time evaluation, add functions. (#7780)
sockets: add SO_INCOMING_CPU constant
Add triage label when removing feedback label
[skip ci] Document how to quickly check if jit .dasc files transpile, how to test the jit in different architectures. (#7768)
Avoid useless symbol table reattaching on retutn from an included op_array
Don't execute INCLUDE for empty op_arrays.
Don't call zend_attach/detach_symbol_table() for op_arrays without local variables
Oracle Client 10g is no longer supported
Implement php_handle_avif() using libavifinfo
Make strtolower() and strtoupper() do ASCII case conversion (#7506)
Use 64-bit multiplication on 64-bit systems
Move common code into helper
Preloading: don't remove INCLUDE_OE_EVAL nstructions with used result
Combine ADDREF/DELREF
macOS 10.14 runners are no longer available via Azure Pipeline
It's past time to drop linking support for Oracle Client 10g
Add oci_set_prefetch_lob()
Allocate less memory for EG(errors) when recording errors for opcache (#7744)
Remove range inference for booleans.
ZEND_INIT_FCALL is only produced when function exists at compile time (#7728)
Skip bug_36798.phpt for PDO_DBLIB
Separate "cold" code
Don't convert assign op operand types in opcache
Improve final/abstract methods in interfaces error messages
fix #81656: GCC-11 silently ignores -R
Report wireless network interfaces on Windows too
Use php/php-sdk-binary-tools.git for AppVeyor builds
Adjust security bug url
Cache method overrides of ArrayAccess in zend_class_entry
Add templates and workflows for GitHub issues
Add missing "return"
Add test
ws
Add test
Prepare for 8.1.2
Add missing zend_string_release_ex(tmp, 0) and cleanup
Bump for 8.0.15
Use proper functions
Prepare for 7.4.28
pcntl add forkx for solaris based systems. (#7654)
Optimize SplObjectStorage native read/write/has/unset dimension handlers
Restore line, removed by mistake in b9141223899674a46ced28cb9fdd211bd70c2c0f
Disable type narrowing optimization when we contruct SSA for JIT
Use interned string for calling count() in Zend VM
Use custom object instead of resource for soap server service
Optimize ArrayAccess method lookup
Improve performance of WeakReference/WeakMap. Avoid hash collisions on pointers. (#7690)
Add skip for FPM process idle flaky test
Reordering non bug entries
Placing core changes before anything else
Removed placeholder from NEWS
Sorting and standardize NEWS entries
Preparing for 8.1.1
Add unit tests for mb_detect_encoding on Polish text
Deprecate implicit dynamic properties
Add dark mode for phpinfo() (#7626)
Remove redundant test
Disable enchant on azure i386
Update to PCRE2 10.39
[ci skip] PHP 8.1.0 ships today
Optimize the destructor of WeakMap for large WeakMaps
add missing conditions
fix [-Wstrict-prototypes] build warnings in ext/gd
fix [-Wstrict-prototypes] build warnings in ext/gd
Verify that used SSA variables are defined
Update include_userstream_002.phpt
add missing cond.
Enable encoding detection for Polish text
fix gdImagePngCtxEx call with system libgd
Refactor GC data traversal loops
"Export" relevant GD macros
Use the standard _WIN32 instead of the custom MSWIN32 in libgd
Drop unused GD defines
fix [-Wstrict-prototypes] buid warnings
Add pdo_sqlite tests for empty filename and in-memory uri (#7662)
Use memrchr() when available
[ci skip] We use multiple CI providers, not only Travis
Add FPM test for php_admin_value doc_root usage
Update bundled boost asm to latest versions
Remove useless check
Micro-optimizations for WeakMap
Increase read timeout in FPM process idle test
Increase script sleep in FPM process idle test
Remove commented code in pass1
Update reflection test after stub change
Implement __serialize() and __unserialize() on GMP
Clarify that preg_match_all() cannot return null
Skip test under preloading
Assert hash is known when we claim it is
Add the --generate-optimizer-info option to the help of gen_stub.php
Add more specific array return type hints for various extensions - part 2
OpenBSD ZTS build fix
Extract code for reporting a zend_fetch_class() error
7.3.34 might be next
Safely reassign array in usort()
Safely reassign array in usort()
Optimize closures nested in other closures
Replace SKIPIF with EXTENSIONS
Remove unused `check_flags` argument from `zend_is_callable_check_func()`
[ci skip] Update NEWS
intl: Update grandfathered and redundant language tags
Add oci8.prefetch_lob_size
JIT: Partially fix handling of exceptions thrown in interrupt handlers
Partially fix handling of exceptions thrown in interrupt handlers
Use zend_string for DBA first/next key handlers
Use zend_string for DBA delete handler
Use zend_string for DBA exist handler
Use zend_string for DBA update handler
Use zend_string for DBA fetch handler
Drop dba_lock.name element
Allow constant folding bw_not on string
Declare properties in SOAP tests
Use cheaper memchr() instead of php_memnstr()
zend_memnstr() micro-optimization
The PHP-8.1 branch is now for 8.1.0
Improve strtr(), str_replace() and substr_count() performance
mysqli_reap_async_query error reporting (#7629)
Improve strtr() performance using SSE2 instructions
Remove redundant checks
Invalid condition in connect.inc
Refactor have_innodb function
Warn if return type on internal __toString() is missing
Add string return type to __toString() of internal classes
Drop pi nodes for both old/new pred in replace_predecessor
Don't call _zend_hash_index_find() for packed arrays
Combine variance obligation processing and error reporting
Add more specific array return type hints for various extensions - part 1
Refactor dba_(p)open() to be more sensible (#7610)
Remove XFAIL
Partially address bug #78647
Promote incorrect bzerr stream type to TypeError
Implement Stringable automatically for internal classes
Don't implement Stringable on traits
Remove unnecessary assertion
Suppress unused label warnings in SWITCH VM
Always initialize iterator_funcs_ptr
fpm allow process tracing/core dump on solaris systems. (#7548)
Enable more DBA drivers in CI (#7622)
Revert "Refactor php_com_cache_typelib()"
Use neutral language instead of default on Windows
Refactor php_com_cache_typelib()
Revert "Updated to version 2021.5 (2021e)"
Updated to version 2021.5 (2021e)
Updated to version 2021.5 (2021e)
Empty merge
Empty merge
Updated to version 2021.5 (2021e)
Empty merge
Updated to version 2021.5 (2021e)
Empty merge
Updated to version 2021.5 (2021e)
Add support for PCRE n modifier
Use more compact representation for packed arrays.
Update PHP-Parser version in gen_stub
Prepare for 7.4.27
Prep for 8.0.14
CLDR 40a0 uses a lowercase "temp" instead of "Temp" in ICU >= 70.1
Accommodate changes to canonicalized forms in ICU >= 70.1
Change UBool to bool for equality operators in ICU >= 70.1
Added NEWS entry for bug #81390
Handle FETCH_DIM_R after FETCH_DIM_FUNC_ARG in inference
Deprecate use of mbstring to convert text to Base64/QPrint/HTML entities/etc
Accept null and 0 for microseconds argument in stream_select()
Update libmysqlclient job to MySQL 8.0.27
Configuring for 8.1.0RC6
Removed debug code.
Inline "helper" macros
Use zend_result as return value for DBA handler
JIT: Avoid ZEND_CALL_RELEASE_THIS checks
JIT_G(current_frame)->stacj is always true.
JIT: Avoid dead type store
Remove tests for obsolete Oracle DB version
Remove test for obsolete Oracle DB version
DBA should not convert elements in-place if the key param is an array
Refactor DBA
Drop confusing ac local variable for ZEND_NUM_ARGS()
Inline DBA_GET2 macro
Inline DBA_ID_PARS macro
Inline DBA_GET2_3 macro
Inline DBA_ID_GET2(_3) Macro
Remove mysqlnd_unbuffered_skip_result and voidify skip_result
(mysqlnd_conn_data, restart_psession) never fails
Reset cannot fail. It was used in a condition, but it doesn't have to be.
(mysqlnd_conn_data, end_psession) never fails
pfc & vio init methods cannot fail
Deprecate partially supported callables
Remove (ZEND_)WRONG_PARAM_COUNT_WITH_RETVAL macros
fix for pcre2 10.38
Add ZEND_API for weakmap functionality via zend_weakrefs_hash_add/del
fix for pcre2 10.38
fix for pcre2 10.38
Remove bug76738.phpt
Add `CURLINFO_EFFECTIVE_METHOD`
Encode string offset error reason in extended_value
Use right frame
Print array defaults in reflection
Remove unused scope argument
Consolidate UNSET_DIM handling for string offset error
Consolidate string offset by reference errors
Remove impossible cases from string offset error handling
Drop FREE_OP_VAR_PTR() distinction
Add test cases for backed enum implementing interface
mb_detect_encoding will not return non-encodings
Improve detection accuracy of mb_detect_encoding
Remove unused scope argument
only check crypt algo if we use external libcrypt
add note in UPGRADING
Add --with-external-libcrypt build option display an error message if some algo not available in external libcrypt
Add --with-external-libcrypt build option display an error message if some algo not available in external libcrypt
Handle operand replacement in JMP_NULL
Remove stale variables from zend_vm_gen.php
Add FPM fix news
Tracinf JIT: Prevnt generation code for instruction that with cyclic dependency
Remove extra space before return type
Increase timeout on community job
remove closing bracket in bad place
Tracing JIT: propagete op1 type info of FETCH_DIM_FETCH_ARG in read mode
Tracing JIT: Use information about really called internal function return type to improve type inference.
JIT: Use more general type guard to prevent useless trace splitting
Always use direct pointer (not map_ptr slot) to access run_time_cache of a closure instance
Reduce indentation
JIT: Cleanup dead and duplicate code
Avoid non-immutable map_ptr indirection
bump zip ext version
bump zip ext version
missing shutdown in observer
The PHP-8.1 branch is now for 8.1.0RC5
JIT: Avoid generation of unused exit point for conditional braches with NULL/FALSE/TRUE operand
Don't replace tmp with cv in YIELD argument
[ci skip] typo
NEWS
Don't free FETCH_W operand if GLOBAL_LOCK
String default values are enclosed in quotes rather than apostrophes
Don't accept flags in ZipArchive::getStream()
Reduce threshold further in ext/date/tests/bug73837.phpt
Add missing $flags param to getStream()
Declare some properties in tests
Add ZipArchive::clearError, getStreamIndex and getStreamName methods
Generate tracing jit corpus in generate_all.php
improve configuration of pthread link for userfaultd thread under NTS (#7568)
Preserve key/value type invariant in range() type inference
Release trampoline on zend_call_function with active exception
Prefer userfaultfd over mprotect+SIGSEGV signal handling on linux for phpdbg watchpoints
Make weak ref notify robust against bailout
Remove now superfluous tests due to changes in tzdata
Revert "Updated to version 2021.3 (2021c)"
Updated to version 2021.3 (2021c)
Updated to version 2021.3 (2021c)
Empty merge
Empty merge
Updated to version 2021.3 (2021c)
Empty merge
Updated to version 2021.3 (2021c)
Empty merge
Updated to version 2021.3 (2021c)
Regenerate optimizer info
Flush error messages emitted during preloading
JIT ARM64: Use proper register
Bump config.guess/config.sub in all supported branches to support Apple Silicon
Bump config.guess/config.sub in all supported branches to support Apple Silicon
Check exception after undef var notice
Handle undefined dim in assign_dim_helper
Set opline before calling undef op helper
Add more specific array return type hints for various extensions - part 6 (#7474)
Make it clear that pg_last_notice cannot return false (#7564)
Reduce max input size in parser fuzzer
XFAIL: Return types cannot be inferred through prototypes
Don't start new block after loop free
Force UTC
Prepare branch for 7.4.26-dev
Add test for pg_put_line() and pg_end_copy()
Require libavif version >= 0.8.2
Reuse wrong string offset logic in jit
Use ephemeral port in test
JIT: Combine type guard with overflow detection
POST_INC_OBJ/POST_DEC_OBJ don't have optional result
Typo
Restore CE_CACHE clear on persist
Disable failing FPM test
Add the actual test for FPM prod idle timeout test with 6s sleep
Add FPM prod idle timeout test with 6s sleep
JIT: Eliminate useless EG(exception) checks after FETCH_DIM_*
Start new block after loop free
JIT: Avoid duplicate EX(opline) assignment
Don't populate CE_CACHE during compilation
JIT: Use zend_compare() instead of comapre_function()
Revert "Add FPM prod idle timeout test"
[ci skip] Add missing NEWS
Add FPM prod idle timeout test
Strict validation of conversion flags to mb_convert_kana
[ci skip] Remove erroneous XFAIL test
Revert "JIT: Use zend_compare() instead of comapre_function()"
Export AST for default value strings in reflection
Move TYPE_CHECK handling from sccp to inference
JIT: Use zend_compare() instead of comapre_function()
JIT: Allow register allocation for result of STRLEN and COUNT instructions
Return true for success instead of failure in PHP cURL setopt helpers
Use more specific types instead of int in cURL extension
Use zend_update_property_str() where appropriate
Voidify zend_ffi_zval_to_bit_field()
Use bool/zend_result instead of int in FFI
Create reference wrappers in SEND_UNPACK if necessary
Don't rely on HT internals in datefmt_format_object
Support specifying start position in compile_string
getTimestamp does not return false
Disable JIT in test replacing zend_execute_ex
Inline SKIP_LONG_HEADER... macro which is only used once
Optimize mb_str{,im}width for performance
Remove unused typedef 'mbfl_encoding_id'
Don't check for impossible error condition in mb_substr_count
Don't check for impossible error condition in mb_strwidth
Don't check for impossible error condition in mb_strlen
Rename php_mb_mbchar_bytes_ex to php_mb_mbchar_bytes
No need to null-terminate buffer in php_mb_chr
Rename php_mb_safe_strrchr_ex to php_mb_safe_strrchr
Voidify php_date_interval_initialize_from_hash()
Use bool/zend_result instead of int in Date extension
Use bool instead of zend_long in Calendar ext internal function handler
Refactor php_com_locate_typeinfo()
Voidify php_com_saproxy_create()
Voidify php_com_persist_minit()
Use standard bool/zend_result instead of int
Refactor php_com_olestring_to_string()
Refactor php_com_get_id_of_name()
Refactor php_com_do_invoke()
Add env var to disable skip cache
Update stub to show default of ENT_HTML401 (for documentation)
Ignore generated files by tests in extension skeleton
ARM64: range.phpt failed under RELEASE mode
Handle throwing destructor in BIND_STATIC
Convert exception during delayed autoload to fatal error
Add upper case functions to zend_operators.c and use them (#7521)
The PHP-8.1 branch is now for 8.1.0RC4
Remove outdated code in ASSIGN_DIM type inference
Check exception before using undef_result_after_exception()
Consistently set bailed_out flag
Undef result if undef dim warning promoted to exception
Check exception after QM_ASSIGN of undef var
Don't use else after return in php_string_tolower()
zend_std_get_static_method() should return NULL in case of exception thrown from user error handler
JIT ARM64: Move property load into right place
JIT: Call zend_hash_index_find() instead of _zend_hash_index_find() if we didn't check for packed array before
fpm allow to ptrace/make the the process dumpable for FreeBSD. (#7375)
JIT: Split zend_jit_hash_index_lookup_rw() into zend_jit_hash_index_lookup_rw() and zend_jit_hash_index_lookup_rw_no_packed().
Avoid __zend_malloc() wrapper in tracked_malloc()
JIT: Improve property access (Avoid unnecessary property address loading and exception check).
JIT: Wrong register
Start block at loop var free
JIT: Remove FETCH_THIS+FETCH_OBJ_* optimizations for closures for functon JIT introduced in d1a0b93c64818913ea9445c5c1997d5e497e0170.
Handle pi nodes in replace_predecessor
JIT: Avoid property type reloading
Update test expectation
JIT: Eliminate useless exception check
Remove unnecessary zend_user_iterator use in spl_array
Automatically determine whether to reuse get_iterator()
Initialize iterator_funcs_ptr upfront
JIT: Improve $this->property access in closures
Remove unnecessary zend_user_iterator use in spl_dllist_it
Remove unused flags from spl_heap_it
Speed up SQLite3Result::fetchArray() by caching column names
Avoid shell for proc_terminate() test
Remove zend_binary_zval_strcasecmp() APIs
Use ASCII lower case for misc case folding
Use locale-independent case conversion in mb_send_mail()
Try to fetch opcache.so path relative to binary
Further limit max input size in parser fuzzer
Bail on exception during delayed autoload
Tracing JIT: Remove incorrect assertion
Don't treat expression exit as terminator
Remove weird condition
Check for zend_shared_alloc() failures
Remove php_mysqli_persistent_helper_once (#7507)
Make IntlCalendar::roll() return type tentative
Tracing JIT: Record information about types of defined object properties and use it to optimize code for ASSIGN_OBJ_OP, PRE/POST_INC/DEC_OBJ and FETCH_OBJ_R/IS
Disable chdir in execute fuzzers
Disable custom execute_ex during function JIT fuzzing as well
Generate function-jit corpus in generate_all.php
Make sure dummy file for fuzzing exists
Add fuzzer for tracing jit
Don't unconditionally add array value type for undef
JIT: Disable recursive call optimization for VM without global register variables (ARM64 part)
Check for undef var in typed property assignment
JIT: Disable recursive call optimization for VM without global register variables
7.3.32 is next
[ci skip] Add missing CVE to NEWS
Check against FAILURE instead of different then SUCCESS
Voidify zend_optimize_script()
Voidify zend_worklist_prepare()
Voidify zend_ssa_unlink_use_chain()
Voidify zend_ssa_compute_use_def_chains()
Voidify zend_mark_cv_references()
Voidify zend_infer_ranges()
Voidify zend_ssa_find_false_dependencies()
Voidify zend_ssa_find_sccs()
Voidify zend_build_dfg()
Voidify zend_cfg_identify_loops()
Voidify zend_cfg_compute_dominators_tree()
Voidify zend_cfg_build_predecessors()
Voidify zend_build_cfg()
Voidify zend_analyze_calls()
Voidify zend_build_call_graph()
Use zend_string_equals_literal() macro
Use more appropriate types in Optimizer
[ci skip] Add missing NEWS entry
JIT: Move unusual checks for IS_REFERENCE to cold paths.
Use more specific return type for stream functions
Don't replace values in unreachable code in sccp
Optimize mbstring upper/lowercasing: use fast path in more cases
Use stack-allocated buffer in php_mb_chr
Simplify code for handling mbstring language aliases
Remove useless constant MBFL_ENCTYPE_MWC2
Add more tests for mb_decode_numericentity
Add more tests for mb_encode_numericentity
Use char literals in HTML numeric entity {en,de}coding functions
Add more tests for mb_substr
Bug #81390: mb_detect_encoding should not prematurely stop processing input
mb_detect_encoding with only one candidate encoding uses mb_check_encoding
Optimize text encoding detection for speed (eliminate Unicode property lookups)
Make setcookie() test more robust against the passage of time
Don't disable unrelated ext during configure
Use ephemeral ports in socket test
Update Unicode tables to 14.0.0
NEWS: Add note for bug #78987
NEWS: Add note for bug #78987
fileinfo: Capture more sizes for test as delivered by travis-ci
fileinfo: Capture more sizes for test as delivered by AppVeyor
fileinfo: Adjust value in test
libmagic: Update patch
JIT: keep register value across call
Try harder to clean up unreachable loop free block
Tracing JIT: Use packed array guards for ASSIGN_DIM_OP and allow to move them out of loops.
Don't jit FE_RESET_R with undef operand
Add missing scope check for readonly prop initialization
JIT: Removed wrong branch
Make it easier to run CLI server tests standalone
Replace SKIPIF with EXTENSIONS
Allow get_request_time() hook to fail
Undef result on throwing typed reference assignment
Don't leak header callback if headers already sent
Tracing JIT: Use recorded information about elements of arrays to generate better code for ASSIGN_DIM_OP.
Don't const evaluate increment of array in SCCP
Handle SWITCH_STRING with optimized away FREE
Add missing field initializer
Remove unnecessary const qualifier
Release observed function name table
Add observer_ prefix to test name
Tracing JIT: Record information about elements of arrays and use it to improve generated code (ASSIGN_DIM).
Add fuzzer for function JIT
Don't hardcode used sanitizers in fuzzer
Don't undef result operand if there is none
Avoid accessing literal operand on nop
Initialize UNUSED operands to sentinel value
Handle undef assignment to typed ref
JIT/arm64: fixed unsafe immediate encoding in commit d4ed6b6 (#7494)
Configuring for 8.1.0RC3
Apply fix for ARM JIT as well
Trigger assertion failure on SSA verification failure
Display DASM_S_UNDEF_PC argument
Check for no uses before removing result operand
Mark ASSIGN result as UNUSED in SCCP
Free recorded warnings if script not cached
Use wildcard for error message
Separate zend_array_type_info() to avoid loop inlining
Try to fix test
Properly check if BIND_STATIC may throw
BIND_STATIC may throw
Reset CE cache slots on opcache reset
Don't rely on libgd unused constants
Handle undef value in assign_dim jit
Allow using readonly as function name
Make OpenSSL tests less dependent on system config
typo
Change gen-stub.php to gen_stub.php in help text
fix [-Wmaybe-uninitialized] build warnings
Check that POST_INC/DEC has use in DFA optimization
Avoid use after free in internal prop type verification
Also make sure binary op operands can't be undef
Check whether expected types are present for compound op jit
JIT: fixed MUL+SEND optimization when MUL throws an exception
Apply fix to ARM JIT as well
Save register before throwing undef var notice
Remove extra space before param default values
Don't overwrite unwind exception
Improve class synopsis root element generation
The PHP 7.4 branch is for PHP 7.4.25 now
Prep for 8.0.12
JIT: prefer string reallocation instead of allocation/memcpy/deallocation
JIT: improved code for protected properties access
JIT: eliminate check for undefined constant if there is a persistent constant
JIT: Update run_time_cache slot in zend_jit_find_func helper
Remove unnecessary PHP_FUNCTION() declarations (#7472)
Report output from CLEAN (#7456)
Add more specific array return type hints for various extensions - part 4 (#7469)
Add more tests for mb_convert_kana
Remove unused MBFL_FILT_TL_*_MASK constants
Rename KANA2HIRA and HIRA2KANA constants (for mb_convert_kana)
Remove COMPAT2 conversion modes for mb_convert_kana
Add more tests for ISO-2022-JP-2004 text conversion
Add more tests for UTF7-IMAP text conversion
Add another test for SJIS-Mobile text conversion
Add more tests for UTF-7 text conversion
Add more tests for UCS-4 text conversion
Add another test for UCS-2 text conversion
Add more tests for ISO-2022-JP and JIS7/8 text conversion
Add more tests for ISO-2022-JP-KDDI text conversion
Add more tests for SJIS-mac text conversion
Treat truncated escape sequences for CP5022{0,1,2} as error
Declare CP50222 flush function as 'static'
Remove redundant NULL checks in mbstring
Remove some dead code from mbstring
Add more specific array return type hints for various extensions - part 3 (#7467)
Remove unnecessary argument from zend_throw_auto_init_*
Fully qualify ReturnTypeWillChange in deprecation message
Fully qualify ReturnTypeWillChange in deprecation message
Clean ext/opcache/minilua
Remove mysqli_close that prevented CLEAN from running properly
Support generate lldb command in run-tests.php (#7451)
Micro optimizations for xp_ssl.c (#7447)
Use --EXTENSIONS-- section for new test
Revert unintended tentative return type change
Properly escape the default value of string properties and enum cases
Slightly clean up is_callable implementation
Preparing for 8.1.0RC2
Remove leftover zval_ptr_dtor
Don't unnecessary fetch error in is_callable()
Simplify handler invocation in xsltprocessor
Simplify unserialize_callback_func handling
Drop IS_CALLABLE_CHECK_SILENT flag
Make zend_call_function() failure handling consistent
NEWS
NEWS + bump zip version
Avoid class name validation if it's already have IS_STR_CLASS_NAME_MAP_PTR flag.
Remove UNDEF checks in userstream implementation
Prepare for PHP 8.2 (bis)
Simplify SSL_set_mode() calls (#7444)
Simplify zend_forbid_dynamic_call() (#7443)
Add PHP-8.1 to scheduled builds as well
Add PHP-8.1 to azure pipelines
Restore dev version
Prepare for PHP 8.2
Prepare for PHP 8.1.0RC1
Avoid dangling pointer in curl header.str
Make it easier to run curl tests standalone
Upgrade timelib to 2021.08, which address some defects and performance
Use zend_long for resource ID
Mark private function as static
Remove unused variable from property generation code
Support generating internal enum decl from stubs
Add more tests for UTF7-IMAP text conversion
In UTF7-IMAP, reject the 2nd part of surrogate pair if it appears unexpectedly
Add another test for UTF-7 text conversion
Add another test for GB18030 text conversion
Add more tests for CP5022{0,1,2} text conversion
CP5022{0,1,2} supports 'IBM extension' codes from ku 115-119
Add test for mb_str_split on UCS-2 text
Use bool in mbfl_filt_conv_output_hex (rather than int)
mbstring no longer provides 'long' substitutions for erroneous input bytes
Add missing const qualitier in zend_register_internal_enum()
Minor cleanup in gen_stubs
Export zend_use_resource_as_offset()
Use array_set_zval_key() in zend_ast_add_array_element()
Error on resource ID space overflow
Make default value more explicit
Add UPGRADING for ini parser changes
Rename ZREG_FCARG1x/ZREG_FCARG1a into ZREG_FCARG1
Add more tests for UTF-8 text conversion
Add another test for UTF-16LE
Add tests for UCS-4 text conversion
Add tests for UCS-2 text encoding
Add tests for '7bit' and '8bit' text encodings in mbstring
UCS-4 conversion does not pass BOM through to output
Add test suite for mobile variants of UTF-8 (and fix bugs)
Add test suite for EUC-JP-WIN (or EUC-JP-MS) text encoding (and fix bugs)
Remove useless variable: mbfl_encoding_utf8_kddi_a_aliases
Extraneous trailing UCS-4 bytes are treated as error
Add more tests for SJIS-2004 text conversion
Add more tests for SJIS text conversion
Add more tests for ISO-2022-JP/JIS7/JIS8 text conversion
Add more tests for ISO-2022-JP-MS text conversion
Add more tests for ISO-2022-JP-KDDI text conversion
ISO-2022-JP-MS treats truncated multi-byte chars as error
ISO-2022-JP-KDDI text conversion doesn't swallow PUA codepoints
Test behavior of 'long' illegal character markers
Correct comment in mbfilter_ucs4.c
Simplify code for converting UHC to Unicode
Declare ARMSCII-8 conversion functions as 'static'
Output illegal character marker for 4-byte illegal characters > 0x7FFFFFFF
JIT: Better code for ADD/SUB/MUL and references in tracing JIT.
Generate optimizer func info from stubs for ext/standard - part 3 (#7426)
Specify a few array func info entries (#7425)
Use camelCase method names in OCICollection and OCILob (#7405)
JIT: Allow keeping result of FETCH_CONSTANT in a CPU register
Add support for generating MAY_BE_ARRAY_OF_REF func info flag (#7416)
JIT: Avoid useless EX(func) load
JIT: Avoid reloading of EX(run_time_cache)
JIT: Eliminate load of op_array->run_time_cache__ptr and use immediate value for immutable op_arrays if it's known at compile time
Use HAVE_SYS_PARAM_H
Enable getrandom() api on solaris-ish systems (#7417)
Don't expose wchar encoding to users (#7415)
Ensure stub files are processed in predictable order
str_replace() can return the original string
microptimization of SQLite3Result::fetchArray
JIT: Avoid reloading of EX(run_time_cache)
JIT: Avoid redundand checks of number of passed arguments
Avoid redundand argument type verification
JIT: Optimize zend_vm_stack_free_args()
Generate optimizer func info from stubs for ext/standard - part 2 (#7414)
Add haiku shared objects support in libtool
Avoid string copy in get_cfg_var()
Flush filter during non-strict encoding detection
Generate optimizer func info from stubs for ext/standard - part 1 (#7413)
Remove incorrect refcount info for addcslashes()
Generate optimizer func info from stubs for various extensions (#7409)
Generate optimizer func info from stubs for ext/gd and ext/pgsql (#7408)
Generate optimizer func info from stubs for ext/curl, ext/mysqli, ext/pcre (#7407)
imagecolorsforindex() cannot return false
Avoid redundand repeatable VM stack overflow checks
Limit internal function args during fuzzing
Limit internal function calls in execute fuzzer
Initialize method_lcname to suppress maybe-uninitialized warning
Update property read handler comments for DOMEntity
Explicitly store real map ptr base
Sync ext/mysqli optimizer func info entries with the stubs
Mark private compiler functions as static
Generate optimizer func info from stubs for ext/sodium (#7404)
Make a few unuseful DOMEntity properties readonly (#7406)
Generate optimizer func info from stubs for ext/date (#7403)
Backport speling fix
Generate optimizer func info from stubs for a few extensions - part 2 (#7401)
Use &Properties; entity in xpointer for inherited properties in class synopses (#7400)
Use FastZPP for SQLite3Stmt/SQLite3Result (#7392)
Generate a few missing optimizer function entries from stubs
Generate Zend, ext/spl and ext/json optimizer func info from stubs
DOMCharacterData::$data and DOMAttr::$value are writable
Add comments to grouped character properties
JIT: Code generation for ROPE_INIT, ROPE_ADD and ROPE_END with STRING operands
Combine control into one character group
Clean up function map production slightly
Combine punctuation into one character group
Return bool from php_unicode_is_prop()
Add more specific array type hints
Add support for generating optimizer function info from stubs (#7367)
Don't use sentinel value for unicode property lookup
7.3.31 is next
Declare a few missing function return types
Update NEWS
Dispatch using LANG_NEUTRAL instead of LOCALE_SYSTEM_DEFAULT
Reorder updates to avoid race conditions
Drop gz aliases from func info
Mark PDO::setAttribute() $value as mixed
Handle resource table reallocation during shutdown
Declare php_user_filter::$stream property
Remove php_user_filter::$filter property
Slightly clean up cookies handling
Move derefs into accessor macros
Implement mysqlnd_set_persistent_string (#7371)
Make internal SoapServer/SoapClient state private
Declare remaining SoapClient properties
Remove dead code
Use separate property to request digit auth
Declare SoapFault properties
Don't convert Error exception to SoapFault
Declare some SoapClient properties
Simplify some strtolower operations in ext/soap
Simplify constructor invocation in ext/soap
Declare SoapHeader properties
Declare SoapServer::$service property
Declare SoapVar properties
Declare SoapParam properties
Only assign $severity for ErrorException
Declare Directory properties
Add missing zend_test requirement to ffi test for bug80847
Test file cache mix (file -> shm)
Test file_cache prime shm + use file combination
Improve the success rate when use mkdir() in multiprocessing environment (#7383)
Backport Laravel test hack
Assert that file cache does not contain references
The master branch is now for 8.1.0RC1
Clean up recursive mkdir logic
Use zend_string for putenv key (#7379)
Reduce nesting in mkdir implementation
Use system allocator for putenv value
Run other RSHUTDOWN handlers if one fails
Prevent bailout during imap shutdown error reporting
Add test for getClass() error conditions
AIX/XCOFF support for fibers (#7338)
Remove full stop from error message
Reuse parts of normal executor shutdown for preloading
Set EG(active)=0 during preloading shutdown
Discard constants before preload_load()
Switch default PKCS7/CMS cipher to AES-128-CBC
Returned interned string from fgetc()
Replace macro with inline function (#7365)
Don't use custom object handlers for enum properties
Add support for replacing class synopses based on stubs (#7340)
Better specialization for packed/hash arrays
Lossless conversion for webp
Remove MYSQLND_SZ_T_SPEC
Remove unused mysqlnd portability macros
Remove mysqlnd local_tx functionality
Clear ce cache when persisting for file cache only
JIT: Use zend_hash_index_lookup() instead of zend_hash_index_add_new(EG(uninitialized_zval))
Eliminate "h < ht->nNumUsed" check in zend_hash_next_index_insert_new()
Use ZEND_HASH_FILL_* API.
Implement range inference for traces
Make private functions "static" and remove unused zend_inference_check_recursive_dependencies().
Refactor proc_open() implementation (#7255)
NEWS
implement openssl_256 and openssl_512 for phar singatures
switch phar to use sha256 signature by default
Add EXTENSIONS section
NEWS
add SHA256 and SHA512 for security protocol
Optimize "$x * 2" into "$x + $x"
Include class name in Serializable deprecation message
Require sqlite >= 3.7.7 for URI in DSN (#7347)
Always use CE_CACHE, remove TYPE_HAS_CE (#7336)
Use --EXTENSIONS-- instead of --SKIPIF-- in new test case
Use zend_string_equals_literal_ci()
Mark DOM classes as not serializable
Switch mysqlnd auth to EVP_PKEY API
Switch dh_param handling to EVP_PKEY API
Comment out ristretto255 scalar invert test
Fork openssl_error_string() test for OpenSSL
Prepare for PHP 8.0.11
Improve ristretto255 scalarmult exception messages
Prepare for 7.4.24
Add missing parts of previous commit
Remove special self/parent handling in get_class_name_map_ptr() (#7330)
Improve Range Inference
Use param API to create RSA key
Add missing unsigned qualifier
Use param API for openssl_pkey_get_details()
Extract public key portion via PEM roundtrip
Use param API for creating EC keys
Test calculation of EC public key from private key
Extract EC key initialization
Make CertificateGenerator not dependent on external config in OpenSSL 3.0
Import timelib 2021.07
Use OpenSSL NCONF APIs (#7337)
minimal fix for openssl 3.0 (#7002)
Upgrade timelib to 2021.06
Fake merge timelib upgrade to 2020.03 into master, which will get a 2021.x upgrade very soon
Upgrade timelib to version 2020.03
Drop TsHashTable (#7351)
Disable strict pixi requirement for libavif >= 0.9.1
Switch manual DSA key generation to param API
Switch manual DH key generation to param API
Do not special case export of EC keys
Generate pkcs12_read test inputs on the fly
Use different cipher in one more CMS test
Skip some tests if cipher not available
Use larger key size for DSA/DH tests
Use different algorithm in cms tests
Use different algorithm in pkcs7 tests
Avoid DH_compute_key() with OpenSSL 3
Extract php_openssl_pkey_derive() function
Add test for openssl_dh_compute_key()
Store whether pkey object contains private key
Relax error check
Use EVP_PKEY APIs for key generation
Use EVP_PKEY APIs for openssl_private_encrypt/public_decrypt
Use EVP_PKEY API for openssl_public_encrypt/private_decrypt
Avoid RC4 use in another test
Only report provided ciphers in openssl_get_cipher_methods()
Don't test legacy algorithms in SPKI tests
Use different cipher in openssl_seal() test
Adjust some tests for whitespace differences in OpenSSL 3
Reduce security level in some OpenSSL tests
Optimize openssl memory leak test
The master branch is now for 8.1.0beta3
SKIPIF to EXTENSIONS
typo
NEWS
NEWS
Update libmysqlclient job to MySQL 5.7.35
Remove a redundant expression
Add support for generating classynopses from stubs
Add additional double to string APIs
Remove FORMAT_CONV_MAX_PRECISION
Move php_gcvt to zend_gcvt
Remove declares inside functions as well
Remove dynamic defs from methods as well
Update OCI8 tests for oci8.old_oci_close_semantics deprecation
Test --preload in CI
Automatically skip ext/opcache tests under --preload
Skip some tests under --preload
Tweak some tests to be --preload compatible
Skip shebang on preload script
Don't reverse class order during preloading
Perform preloading attempt on copied class
Don't print preload warning for non-top-level classes
Drop HAS_UNLINKED_USES flag
Drop mysqlnd statistics triggers
Remove get_parameter_metadata
Remove mysqlnd_field_type_name
Clean up dependency resolution during preloading
DynASM/x86: Add missing escape in pattern.
Preload unlinked classes, remove preload autoload (#7311)
Add missing EXTENSIONS section
Use consistent line numbers for early binding errors
Extract early binding registration code
Don't use opaque for encoding detection score
Remove wrappers for *printf functions (#7313)
Reuse part of the class binding logic
Handle missing class when evaluating CONST_ENUM_INIT
Don't unlink preload file if test failed
Prevent mysqli::next_result from reporting errors from previous calls (#7304)
Increment refcounts in mutable data copies
Don't use IMMUTABLE flag to decide whether mutable_data is used
Allocate map_ptr for mutable_data during preloading
Don't force constant resolution for include preloading
Don't force property type resolution for include preloading
Remove special ctor handling in abstract class verification
Improve class inheritance error messages (#7307)
Add support for internal enums
[ci skip] UPGRADING: oci8.old_oci_close_semantics has been deprecated
Validate that promoted readonly properties have a type
Display the readonly property modifier when printing reflection info
Share zval_make_interned_string() helper
Remove redundant static_members/mutable_data cleanup
Remove zend_cleanup_internal_classes()
Assert that call to method always has called scope or object
Set called_scope in __callStatic closure trampoline
Add test for bug #80564
Always use separate static_members_table
JIT: avoid $this check in closures called from methods
Add support for generating readonly properties via stubs (#7297)
Remove unnecessary PDORow get_method / get_class_name handlers
Add explicit IntlPartsIterator::getRuleStatus() method
Backport libgd commit
Don't return reference from Fiber::getReturn()
Add RETURN/RETVAL_COPY_DEREF() macros
Migrate to PHP-Parser 4.12.0 and regenerate some arginfos
Sync the FPM openmetrics status with php-fpm_exporter
Extend resource reservation to Fibers (#7292)
Added test
retry ldap setup a few times in CI
FETCH_STATIC_PROP_IS may return undef
Print MAY_BE_INDIRECT in dump
Transfer MAY_BE_INDIRECT for VERIFY_RETURN
more fiber notifications (#7293)
Add support for verifying optimizer func info
Forbid multiple readonly modifiers
Set PROFITABILITY_CHECKS=0 on variation job
dom_import_simplexml() cannot return null
Sync JIT overloaded assign/inc/dec overloaded property
Sync JIT zend_check_string_offset()
Add variation job with RC_DEBUG=1
Don't enable rc_debug mode if module startup fails
Remove leading underscore for _zend_hash_find_known_hash (#7260)
drop unused header in fibers
Change release process to create branch at RC1
The master branch is now for 8.1.0beta2
Skip new preload test on Windows
Remove gcov mention from release process docs
Create interned strings for internal union types
Duplicate possibly persistent string in phar metadata clone
Create persistent interned string for password algos
Use single line phpdoc in stubs where possible
Drop serial denier functions
Not serializable flag permeation
Implement readonly properties
Indent stubs inside global namespace blocks (#7261)
Declare tentative return types for ext/dom (#6985)
Actually, abstract methods don't have a body
Set UNION bit for internal class union return type
Remove THREAD_LS
Move date timezone cache destruction to post deactivate
Add ZEND_ACC_NOT_SERIALIZABLE flag
Add str_replace/array_unique to ct eval list
getrandom support for DragonFlyBSD too.
Deprecate autovivification on false
Throw DomException for DOM out-of-memory error conditions
Avoid ASAN integer overflow warnings
Declare tentative return types for Zend (#7251)
Reduce size of conversion tables for CP936
Deprecate oci8.old_oci_close_semantics (#7258)
Don't track internal class dependencies
Skip test on 32-bit system
Provide bless_tests.patch for failing tests on AppVeyor
Don't return bool from Phar::offsetUnset()
Actually add the tentative type marker...
Add minimial tentative types to dom
DOMNamedNodeMap::count() cannot return false
DOMNodeList::count() cannot return false
Restore zend_atoi()
Add --bless option to run-tests.php
Add UPGRADING entry for socket options
sockets enabling SO_MARK socket option which is relatively similar  to FreeBSD's SO_USER_COOKIE giving a socket an identifier for packet filter,  giving a specific route table.
Declare tentative return types in ext/spl - part 3 (#7239)
Make syslog() binary safe
Handle both WARNING and UNRESOLVED during early binding
Narrow ArrayIterator::key() return type
Revert "IteratorIterator::getInnerIterator() can't return null"
IteratorIterator::getInnerIterator() can't return null
Drop register keyword
Use standard 64bit signed int type
Use standard 64bit unsigned int type
Refactor conversion function
Remove unused macro
Use standard bool type instead of boolean_e
Use standard bool type instead of bool_int
Allow objects in define()
Undef slot before destroying in unset_property
Declare the $value param of define() as mixed
Add exception check to zend_jit_fetch_obj_w_slow()
Add support for the never type in gen_stub.php
Declare tentative return types for ext/spl - part 2
Rename getStructFieldOffset/Type() parameter
Rename FFI `getFuncArg*` to `getFuncParameter*`, $arg_index->$index (#7236)
Drop incorrect cache_slot optimization for typed properties
Add first-class callables
Throw from MultipleIterator::key/current() for invalid iterator
Throw from SplObjectStorage::current() for invalid iterator
Remove null return type from msgfmt_parse_message()
Backport some intl stub changes from master
Eliminate null return value for Normalizer::normalize()
Deprecate $num_points parameter of image(open|filled)polygon
Deprecate strftime() and gmstrftime()
Deprecate SoapClient ssl_method option
Update NEWS for 7.4.22
Bump to 8.0.10
replace phpdbg custom opcode dumper with O+ dump (#7227)
Add limited support for new in initializers
Declare tentative return types for ext/spl - part 1 (#7115)
FFI::CType reflection API
Check internal function type consistency in zend_call_function
Add upgrading note
Use unsigned arithmetic in zend_atol
Remove zend_atoi() (#7232)
exit_status is no longer a true global
Verify exception on ZipArchive::getExternalAttributesName when $name is empty (#7230)
Remove incorrect uses of zend_atoi()
Return value from ZEND_ATOL
Don't return embedded HT from WeakMap get_gc() handler
Clean up gc_scan() implementation
Various ext/spl stub fixes
Deprecate filter.default
Fiber ucontext support (#7226)
Deprecate using the implicit default PgSQL connection
Deprecate direct access to static trait members
Remove unnecessary property name unmangling
Remove leftover handling of PHP4 constructors
Deprecate ctype_*() on non-string arguments
Temporarily disable imagecreatefromstring_avif.phpt on FreeBSD
Remove ctype tests for oct/dec int literals
Use newer PHP version in community job
Use function for ctype implementation
Don't handle unnamed arg in closure debug info
Deprecate auto_detect_line_endings
Deprecate strptime()
Skip bug_50755.phpt in repeat mode
Test Laravel 8.x against PHP 7.4
Remove unnecessary sockaddr memory allocation (#7219)
Deprecate imap NIL constant
Deprecate return by ref from void function
Deprecate FILTER_SANITIZE_STRING/STRIPPED
Deprecate odbc_result_all()
Deprecate mysqli::init()
Deprecate mhash
Deprecate IntlCalendar::roll() with bool argument
Deprecate FILE_BINARY and FILE_TEXT constants
Deprecate calling mb_check_encoding() without argument
Deprecate IAP functions on objects
Deprecate date_sunrise() and date_sunset()
Sccp new functions for ct (#7220)
Make ReflectionProperty/Method always accessible
AVIF support for getimagesize() and imagecreatefromstring()
Add support for final class constants
The master branch is now for 8.1.0beta1
Slightly clean up reflection constant printing
Ensure correct return type from SplFileObject::getCurrentLine()
SplFileObject::fgetcsv(): Consistently return false on failure
Add initialization checks to DirectoryIterator methods
Add test for weird fgetcsv behavior
Minor fgetcsv cleanup
Use some early returns in spl_directory
Slightly clarify current_zval handling in spl_directory
Declare tentative return types for ext/intl (#6986)
Code cleanup in mbfilter_uhc.c
Pure Intersection types (#6799)
Handle promoted exception in int|string type
Avoid OOB reads in create_name_with_username()
Add ext/reflection to execute parser corpus
phar: crc32: Extend and cleanup API for the new bulk crc32 functions
Reduce girl.avif by 4x
Add missing error condition to stream_context_set_option()
Handle out of order destruction of RecursiveIteratorIterator
Reduce stack usage in php_resolve_path()
Init STRLEN result when deprecation promoted to exception
Initialize retval on bitwise_not exception
Simplify registration of unresolved classes
Windows: allow GD ext without avif.dll
Move INHERITANCE_WARNING handling one layer up
Prefer EXPECT over EXPECTF
Disable lsan on new PDO firebird tests
7.3.30 is next
Remove table generation scripts which have not been used for years
Allow creating Graceful/UnwindExit and use when destroying a fiber (#7174)
Mention ReturnTypeWillChange attribute in the error message (#7183)
Implemented Fiber GC handler
Run phpunit job even if previous failed
Don't directly include zend_jit_gdb.c
optimize skip condition for the test
Removing obsolete tests
Remove " " being considered as an invalid filename for `is_file()`
Move the whole "cold" path into the "cold" function.
JIT/AArch64: Support shifted immediate (#7165)
make new API public (#7185)
The master branch is now for 8.1.0alpha3
Add host for php_network_getaddresses getaddrinfo failed error message. (#7181)
exposing few macOS socket options to give hints how to handle data,
UPGRADING: update information re: return type for internal methods (#7182)
Update NEWS
Allow build/gen_stub.php to process multiple CLI file args (#7179)
phar: use crc32 bulk method instead. (#6099)
NEWS: Add bug #81101 note
NEWS: Add bug #81101 note
pcre: Workaround bug #81101
pcre: Workaround bug #81101
Remove copying of fiber result to transfer value
Fiber cleanup
Rename Fiber::this() to Fiber::getCurrent() (#7155)
Flexible fiber bailout handling (#7163)
Convert some recently introduced zend_bool to bool
Deduplicate code for handling zend_type in inference
missing news/upgrading entry
Make can_elide_return_type_check() more robust
Extract helper for fetching class entry in optimizer
Do not expose fiber VM state management (#7170)
Add proper EXTENSIONS section for tests in Zend/
Refactor spl_array_has_dimension_ex()
remove specialized printing from phpdbg (#7156)
Minor formatting tweaks in mbfilter_euc_kr.c
When flushing CP5022x conversion filter, also flush next filter in chain
Strict conversion of UHC text to Unicode
Minor formatting tweaks in mbfilter_uhc.c
Mark CP932 and CP51932 encoding tests as 'slow tests'
Remove duplicate implementation of CP932 from mbstring
Add test suite for UTF-{7,8,16,32}
Improve documentation for contributors
Drop support for printf p modifier
Test ARM64 JIT on Travis (#7157)
JIT: Avoid too aggressive loop unrolling
Use different error condition in ACCEL_LOG_FATAL test
Prepare for 7.4.22
Drop fiber block hooks
Remove unnecessary IS_UNUSED check
Adds zend_fiber_startup at the right stage, moves setting of switch hooks to correct stage
reset blocking state on init
Prepare for PHP 8.0.9
Improve performance of AppVeyor test runs
Remove fiber context embedding
Add API to prevent Fiber switch in select contexts
Clean up some more function_exists() checks
Make some zend_test dependencies explicit
Remove unnecessary skipifs in date
Remove unnecessary curl skipifs
Remove unnecessary curl version guards in stubs
Remove unnecessary mbstring skipifs
Move test from intl to iconv
Add missing zend_test dependency
Move tests requiring pdo_sqlite into ext directory
Add missing dba extension requirement in pgsql test
Add some missing EXTENSIONS sections to misc tests
Remove duplicate entries in EXTENSIONS
Revert "hrtime implementation update for Mac"
Drop fast_div_function
Regenerate arginfo file
Use EXTENSIONS section for ldap
Make LDAPCONF test work on windows
Allow named args after unpack
define SO_ACCEPTFILTER separately where supported (#7146)
Remove temporary workaround for installing libavif
Use 16 instead of 15 bytes of random data in ReflectionReference->getId (#7148)
ditch remote
Set BUILD_CC for phpize
fix news
drop phpdbg web helper extension and wait command (#7144)
Add test for leaking prior context with symmetric coroutines
Destroy previous fiber context in trampoline as needed (#7143)
Change stack field to a pointer in fiber context
Reorganize zend_test and add custom fiber implementation tests (#7137)
Port skipif.inc files to EXTENSIONS
Port mbstring to use EXTENSIONS
Port curl, xml, xsql to use EXTENSIONS (#7140)
Migrate more SKIPIF -> EXTENSIONS (#7139)
Drop handling for PHP_CURL_HTTP_REMOVE_SERVER
Migrate SKIPIF -> EXTENSIONS (#7138)
Regenerate stubs
Create filter_null_on_failure.phpt 
Use non-cron builds on travis
fix bad refactor of #7136
Enable net_get_interfaces on IBM i PASE
Improve fiber interoperability (#7128)
Reorder conditions and always mark methods in SHM as ZEND_ACC_IMMUTABLE
Functions with static variables are not separated anymore. 9a1da9f61fe6f2fe9c714d78e1f0673b37f051ec missed this part.
bug81119.phpt requires ext/gmp
ditch function from zend_fiber
move zend_vm_stack_new_page into header for sharing with fibers
Add IntlDatePatternGenerator (#6771)
Add avif support to ext/gd
Mitigation for bug #81096
Avoid make_printable_zval() in other printf implementations as well
Avoid make_printable_zval in snprintf
Avoid make_printable_zval() in intl collator
Update NEWS for #77120
[Bug #77120] Handle OCI_SUCCESS_WITH_INFO returned from OCIStmtExecute
[Bug #77120] Handle OCI_SUCCESS_WITH_INFO returned from OCISessionBegin
Unify control & data transfer between fibers (#7120)
Typo
JIT/ARM64: Remove redundand x86 specific optimization for recursive calls
Make PRE_INC/PRE_DEC type inference more accurate
Rerun GC if destructors encountered
JIT/ARM64: Improve JIT for MOD instruction.
JIT/x86: Reuse code when MOD is going to be converted to AND.
Remove dom_nnodemap dtor_obj handler
Use free_obj in IMAP\Connection
Use free_obj handler in FTPConnection
Use free_obj handler in HashContext
Disable file_cache_only as well in optimizer pass test
Convert UConverter dtor_obj to free_obj
Remove redundant dtor_obj handlers in intl
Remove SimpleXMLElement dtor_obj handler
JIT/AArch64: Use only reserved TMP registers for EG(vm_interrupt) checks.
Remove explicit assignments of zend_objects_destroy_object
Support GC for RecursiveIteratorIterator
Don't perform recursive get_gc call
JIT/AArch64: Use only reserved TMP registers for EG(jit_trace_num) assignment.
Null out member after releasing
Use zend_string* for RecursiveTreeIterator prefixes
Simplify string management in RecursiveTreeIterator
JIT/AArch64: Use 'tbnz/tbz' to check the signedness (#7123)
Remove zend_make_printable_zval() use in debug code
Store cached string as zend_string
Remove dual_it dtor, add more GC roots
Litespeed sapi OpenBSD build fix (#3999)
sockets exposing TC_DEFER_ACCEPT to optimise tcp exchanges.
fdatasync disable warning on macOS. (#7122)
Preparing for alpha2
Adapted Travis CI urls
Expose inner dual_it iterator to GC
Disable file cache in optimizer_register_pass.phpt
Avoid MSVC unused variable warning in FastZPP
Add fiber type to better support custom fiber APIs (#7105)
fix optimizer pass registration test
Update deprecation message for incompatible float to int conversion
crc32 feature detection from auxiliary vectors on FreeBSD
Remove ZVAL_NEW_ARR() macro
Remove duplicated test
zip extension is now 1.19.3
JIT/AArch64: Complete logical_immediate_p() using DynAsm helpers
JIT/AArch64: Use LSL instruction (DynAsm was fixed by 2963214c15de46f35797b87bb3a84a35c2928f01)
JIT/AArch64: Use 'shifted register' if available (#7108)
JIT/AArch64: Optimize add+ldr to ldr (#7109)
pcre: Apply upstream patch for bug #81101 to bundled libpcre
pcre: Workaround bug #81101
Support custom passes in Optimizer
Improve Fiber::getReturn()
Alternative Fiber Internals Refactoring (#7101)
fix dtrace observer callback prototype
JIT/AArch64: [macos] Remove Clang warning due to -Wincompatible-pointer-types (#7098)
JIT/AArch64: Improved code generation for SL/SR and register allocation (#7096)
Split fiber status and flags (#7094)
Mark slow tests
pcntl_rfork: following-up suggestions.
"http://" -> "https://"
JIT Refactoring:
fix bug #72998
Separate common code
Speed up test case
Improve interface non-public method error message
JIT/AArch64: Code refactoring for macros (#7082)
Resolve CG(map_ptr_base) in disassembler
Try to fix libxml 2.9.12 tests
Add test for unsetting ReflectionClassConstant::$name
Skip test without ZMM
Implement "Deprecate implicit non-integer-compatible float to int conversions" RFC. (#6661)
Adjust memory limit in one more test
Don't automatically adjust memory_limit to 2M
Remove zend_set_memory_limit_ex() API
Skip pcntl_rfork() in arginfo test
Allow initializing assignment to PDOStatement::$queryString
fix stub for pcntl_rfork
Pull #6989 FreeBSD defines SO_ACCEPTFILTER
JIT/AArch64: Use ZR directly to zero FP register (#7081)
Export ENV in .sh file generated by run-tests
Correctly parse array_slice() argument in call_user_func_array() opt
Remove "inline" defines on Windows (#7071)
pcntl: Adding pcntl_rfork support.
pcntl add darwin specific flags for who/which especially (#7075)
JIT/AArch64: Use D registers for floating-point operations (#7080)
JIT/AArch64: [macos][ZTS] Support fast path for tlv_get_addr (#7042)
NEWS: UPGRADING.INTERNALS: Add PCRE2 10.37 info
Remove silly code from openssl_pkey_free() test
pcre2lib: Pull PCRE2 10.37
ext: Cleanup some dead assignments
Zend: Cleanup dead assignment in zend_compile_class_const
Add %0 format to run-tests.php
[skip-ci] Improve documentation for better clarity to readers (#7066)
Speed up ext/dba/tests/bug78808.phpt
Declare tentative return types for ext/standard (#7065)
Declare tentative return types for ext/oci8 (#7070)
Declare tentative return types for ext/phar (#7052)
Declare tentative return types for ext/snmp
Declare tentative return types for ext/session (#7005)
Convert exception during inheritance to fatal error
Improve memory allocation related code in zend_fibers (#7058)
Promote "Session is not active" warning to exception
Convert SKIPIF -> EXTENSIONS in new opcache test
Export zend_unary_op_produces_error() and use in optimizer
Add a few missing RETURN_THROWS();
Use early return in snmp
Generate tokenizer_data.c from zend_language_parser.y
Add zend_getpagesize() and reuse it in accelerator and fiber (#7057)
Don't add unnecessary extensions to the test INI for AppVeyor
Adjust run-tests.php to dynamic extension loading
Store base path as zend_string in Phar::buildFrom*
Accept regex as zend_string in Phar::buildFromDirectory()
Declare tentative return types for ext/zip (#7053)
Declare tentative return types for ext/json (#7051)
Add missing extern "C" in zend.h (#7056)
Remove all *_EXTERN_C() in C source files (#7054)
Add internal Fiber API (#7045)
Use ZEND_WIN32 instead of PHP_WIN32 (#7055)
libtool: Add CC tag explicitly
mysqli_get_client_info() cannot return null
Remove unnecessary return doc comment from PDOStatement::errorInfo()
Declare tentative return types for ext/mysqli (#6998)
Remove uses of TRUE/FALSE in mysqli/pdo_mysql
Update func info for mysqli_connect
Make tests compatible with libxml2 2.9.12
Do not verify the signature of ReflectionEnumUnitCase::getValue()
Declare tentative return types for ext/fileinfo
Declare tentative return types for ext/curl
Declare typed properties in ext/dom
Add missing type declarations in soap tests
Declare tentative return types for ext/soap
Update mysqli stub hash
Add comment for specialization in zend_hash_real_init_packed_ex()
Declare tentative return types for ext/sqlite3
Declare tentative return types for ext/simplexml
Convert some instanceof checks to assertions
Remove the redefinition of zend_error_info (#7044)
Use ZEND_TLS for spl (#7043)
Declare tentative return types for ext/tidy
Declare tentative return types for ext/pdo
Declare tentative return types for ext/xsl
Declare tentative return types for ext/xmlwriter
Declare tentative return types for ext/xmlreader
Convert check into assertion in ext/xmlreader
Remove some unnecessary null pointer checks in ext/xmlreader
Use arm64-graviton2 on Travis (#7016)
Remove commented code from get_method handler
Add error reporting to mysqli_options (#7036)
Declare tentative return types for ext/reflection
SimpleXMLElement::addAttribute() is a void function
Update version in php_version.h as well
Migrate skip checks to --EXTENSIONS-- for ext/gd
Always define valgrind replacement symbol for zend_string_equal_val
note in upgrading for b227a722859e83fdba230f746477f6322ae33609
ReflectionFunctionAbstract::getClosureUsedVariables
Disable ASSIGN + SEND_VAL fusion for cases when destroying of old value may throw an exception.
Add FreeBSD to CI (#6974)
Pass flags to #[Attribute] on internal attributes
Remove special UNREACHABLE_FREE handling in block pass
XFAIL two intl tests on FreeBSD
Detect musl libc to not set tls_model attribute on that platform
Add missing undefined variable warning an result initialization. (This fixes Zend/tests/bug78531.phpt without PROFITABILITY_CHECKS).
Don't assign to string offset after exception (This fixes Zend/tests/bug31098.phpt failure without PROFITABILITY_CHECKS)
Add mysqli.rollback_on_cached_plink to php.ini-*
Disable workaround for ICU bug on newer versions
JIT/AArch64: Link traces through exit tables.
JIT: Don't include zend_jit_trace_info.jmp_table_size into zend_jit_trace_info.code_size
Prep for 8.0.8
Use shell-free proc_open() in parallel run-tests.php
Skip posix_setrlimit() test on FreeBSD
Set default_socket_timeout in test
Report error from socket read on timeout
Reduce timeout in FTP PASV connection failure test
Drop test that is always skipped
Move preload_autoload assignment into preload_load()
Avoid accessing localhost in some soap tests
JIT/AArch64: Combine ADRP+ADD+LDR into ADRP+LDR
Remove bug49936.phpt
JIT/AArch64: Use ADR/ADRP if it makes sense
Disable FFI preload tests with opcache.preload_user
Skip unsupported socket option test on FreeBSD
Use different error condition in socket test
JIT/AArch64: Rename B_IMM26 into B_IMM.
Correct DWARF frame description.
Remove randominess from spl_object_hash
Relax error message expectation in socket test
Skip some strptime() tests on FreeBSD
Don't strictly check shmop size in test
Correct DWARF frame description.
Don't include object hash in SplObjectStorage debug dump
Work around incorrect NSIG on FreeBSD
Drop PHP_FUNCTION declares from php_pcntl.h
Use equals OR equal instead of >= && <=
Declare dynamic properties in ext/dom
Remove error suppression from zend_optimizer_eval_binary_op()
The PHP 7.4 branch is now for 7.4.21
Remove unnecessary #ifdef
JIT/AArch64: disable register allocation for expected ++/-- overflow case.
Generate veneers to perform long jumps.
DynASM/ARM64: Add abiulity to plug-in generation of veneers to perform long jumps.
Use symbolic labels for BL and ADR instructions
Use better code for trace exits. Don't store CPU registers that can't be used by deoptimizer.
Remove unused TMP4. Use intra-precedure call scratch registers for TMP2 and TMP3.
Allow to print JIT assemble without binary addresses (opcache.jit_debug=0x001) and with (opcache.jit_debug=0x401) for both ARM and x86.
Implemented AArch64 support for GDB/JIT interface.
Reenable PROFITABILITY_CHECKS
Peephole Code Optimization:
Use better code for prologue and fix code generaion for "return -1".
Revert the macro uses for Z_TYPE_P(val) in commit 1fff62b
Use fewer temporary registers if possible
Improve macro LONG_ADD_SUB_WITH_IMM
Remove the deprecated macros
Use macros CMP_*_WITH_CONST if possible
Use ADD_SUB_IMM for macros ADD_SUB_*_WITH_CONST*
Don't use TMP3 except ZTS
'lea' -> 'add'
Use proper macro
Use B/BL intead of BR/BLR if possible
Imroved code for constants loading
Imroved code for CV initialization
Use single instruction
Use less temporary registers
Introduce ADD_SUB_64_WITH_CONST/ADD_SUB_64_WITH_CONST_32/ADD_SUB_32_WITH_CONST macros
Introduce CMP_64_WITH_CONST/CMP_64_WITH_CONST_32/CMP_32_WITH_CONST macros
Optimize AArch64 code generator
Improve code for MUL overflow detection (less instructions and less temporary registers)
Don't optimize MUL into SHIFT if we have to check for overflow
Skip 64-bit related tests on 32-bit platforms
Temporary disable PROFITABILITY_CHECKS for better test coverage and to be in parity with AArch64 back-end.
Moved tests from ext/opcache/tests/jit/arm64 to ext/opcache/tests/jit
Revisit 32-bit logical operations with constants
Remove useless SAFE_MEM_ACC_WITH_UOFFSET*
Use TST_32_WITH_CONST macro
ZREG_REG0 is not available in x86 build
Attempt to fix Windows build
Support for tracing JIT
Support for tracin JIT (incomplete, but abble to run Zend/bench.php)
Add the missing parts for macros ZVAL_COPY_CONST and ZVAL_COPY_CONST_2
Implement trace patching
Implement obvious trace side exits
Support ZEND_JIT_ON_HOT_COUNTERS mode
Support ZEND_JIT_ON_PROF_REQUEST mode
Optimizing LONG MUL to SHIFT: add overflow detection for x86
Remove the unnecessary 'bvs' check for IS_NOT_IDENTICAL case
Enable register allocator (it was disabled because ZREG_NUM wasn't available for preprocessor) and fix few related problems.
Support for ZTS
Disable "red zone" usage (it leads to crashes).
Use "red zone" for HYBRID VM. Support for CALL VM and VM without global register variables.
Make bit helpers to be inline
Missed instruction
Duplicate return
typo
Added missed UNDEF_OPLINE_RESULT
Add the helper to check whether an immediate is valid for logical instructions
Support failed test case: switch_jumptable.phpt
Remove the TODO comments for DOUBLE CMP
Optimizing LONG MUL to SHIFT: refine the trigger condition and add overflow detection
Create C call frames for helper functions that perform nested calls
Disable unsuitable optimization
Wrong register
Support for interupts
Temporary diable JIT for SWITCH and MATCH instructions (SWITCH should work, MATCH is going to fail)
Get rid of NYI in call/return sequences
Implement exceptional stubs
Support for VERIFY_RETURN_TYPE, ISSET_ISEMPTY_CV, IN_ARRAY and ADD with array operands.
Get rid of NIY in spill code
Support for PRE/POST_INC/DEC_OBJ
Get rid of testing NIY_STUBs
Support for FETCH_THIS, FETCH_OBJ, ASSIGN_OBJ and ASSIGN_OBJ_OP
Support for BIND_GLOBAL
Support for TYPE_CHECK
Support for FETCH_CONST
Support for FE_RESET and FE_FETCH
Support for moving between allocated registers
Support for STRLEN and COUNT
Support for DEFINED
Support for FREE and FE_FREE
Support for missed IS_NOT_IDENTICAL cases
Support for ECHO with non-constant operand
Get rid of some NIY traps in DynADM macros
Support for more cases in INIT_METHOD_CALL, DO_FCALL* and RETURN
Support for SEND_VAL/SEND_VAR/SEND_REF/CHECK_FUNC_ARG/CHECK_UNDEF_ARGS
Support LONG MUL with overflow detection
Support for ASSIGN_DIM_OP
Support for ASSIGN_OP
Support for ISSET_DIM
Accurate RETVAL register usage
Don't use FPR1 for consistency with x86
Support for FETCH_DIM* and ASSIGN_DIM (exception handling is incomplete)
Support for IS_IDENTICAL/IS_NOT_IDENTICAL
Support for BOOL/BOOL_NOT with DOUBLE operand
Support for comparison opcodes
Support for CONCAT
Support for INC/DEC
Remove dead conditions
Support for LONG math (except of MUL overflow detection)
Revisit the encoding of immediate
Remove the duplicate macro DOUBLE_GET_ZVAL_DVAL
Updates for commits between 121a0f7 and 12dcf34
Support for DOUBLE math
Support for most cases of BOOL/BOOL_NOT/JMPZNZ/JMP[N]Z_EX
Support for RECV/RECV_INIT
Support for bitwise operations with non-integer arguments
Support for bitwise operations with the same operands ($a ^ $a)
Support for IS_LONG SUB and XOR.
Support for most "uncommon" ASSIGN cases
Added tests for ASSIGN
Trmporary disable PROFITABILITY_CHECKS for better test coverage
Avoid useless "flags" byte extraction (it was inspired by unsuitable x86 specific optimization)
Use NIY_STUB instead of NIY in stubs
Replace "brk #0" with "NIY" (Not Implemented Yet) macro
Support failed JIT test case: reg_alloc_002.phpt
Support failed JIT test case: reg_alloc_003.phpt
Support failed JIT test case: jmpz_ex_001.phpt
Support failed JIT test case: jmpz_001.phpt
Support failed JIT test case: send_var_ex_001.phpt
Support failed JIT test case: send_val_001.phpt
Support failed JIT test case: send_ref_001.phpt
Support failed JIT test case: mod_001.phpt
Support failed JIT test case: shift_right_003.phpt
Support failed JIT test case: shift_right_001.phpt
Support failed JIT test case: shift_left_002.phpt
Support failed JIT test case: shift_left_001.phpt
Support failed JIT test case: cmp_003.phpt
Support failed JIT test case: cmp_004.phpt
Support failed JIT test case: cmp_002.phpt
Support failed JIT test case: cmp_001.phpt
Support failed JIT test case: fetch_obj_001.phpt
Add necessary assertions on range for INIT_FCALL and DO_FCALL
JIT/AArch64: INIT_FCALL and DO_FCALL support for optimized function code-generation (1204/1205)
Replace --SKIPIF-- by --EXTENSIONS--
Support failed JIT test case: fetch_obj_003.phpt
Support failed JIT test case: fetch_obj_002.phpt
Support failed JIT test case: fetch_obj_004.phpt
Support failed JIT test case: fetch_dim_rw_001.phpt
Support failed JIT test case: fetch_dim_r_002.phpt
Support failed JIT test case: fetch_dim_func_args_001.phpt
Support failed JIT test case: assign_035.phpt
Support failed JIT test case: assign_036.phpt
Support failed JIT test case: assign_static_prop_001.phpt
Support failed JIT test case: assign_dim_002.phpt
Support failed JIT test case: assign_dim_op_001.phpt
Support failed JIT test case: assign_026.phpt
Support failed JIT test case: assign_025.phpt
Support failed JIT test case: assign_022.phpt
Support failed JIT test case: assign_024.phpt
Support failed JIT test case: assign_027.phpt
Support failed JIT test case: assign_012.phpt
Support failed JIT test case: assign_010.phpt
Support failed JIT test case: assign_002.phpt
Hybrid use of registers
Initial support of JIT/arm64
Handle explicitly nullable types in optional-before-required deprecation
Consistently treat optional-before-required as required
[ci skip] Removed incorrect news entry
Drop SXE_METHOD() macro
Use common formatting for backtraces (#6977)
Remove unnecessary LIBZEND_MM_ALIGN assignment
PDO MySQL: Check number of bounds params even if none are bound
Skip float truncation test under libmysql
Record warnings during early binding
Don't directly throw warning during method compatibility check
Properly push test artifacts
Support doc comments on enum cases (#6984)
Declare SNMP properties
Add support for tentative return types of internal methods
Use NO_DYNAMIC_PROPERTIES for Closure
Use zend_string_equals_* API in a couple of more place
Remove 'register' type qualifier (#6980)
Drop test-phpdbg and clean-phpdbg targets
Add pkg.m4 upstream
Disable -a mode without readline
Check RAND_egd after setting up openssl
Add UPGRADING/NEWS for full_path for file uploads
Optimize unpack() for named fields (#6958)
JIT/x86: disable register allocation for expected ++/-- overflow case.
Disable LSan for all PDO_Firebird tests
Add -Wstrict-prototypes compiler warning
Specify function pointer signature for scanf implementation
Use standard function signature instead of K&R in Intrl extension
Use standard function declaration style instead of K&R in libbcmath
Do not reuse errno as local variable name
Mark various functions with void arguments.
DynASM: Bump version to 1.5.0.
DynASM/ARM64: Add .long expr. Add .quad/.addr expr + refs.
JIT class methods only when class entry is completely persistent.
Add test for restoring error_reporting on fatal error during silencing
missing ;
php-fpm: fix Solaris port events.mechanism
Check parameters on compact() and throw warning if not string or array of strings (#6921)
Convert resources to objects in ext/pgsql
Move resource-object classes of PSpell to `\PSpell` namespace
Remove no longer used "log_errors_max_len" ini directive (#6838)
Initialize zpp varargs variables
Correct the argument names for ext/sodium functions
Switch register_tick_function back to zend_parse_parameters
Use uint32_t for number of variadic arguments in ZPP
Refactor register shutdown function mechanism
Add reproducer for possible issue with object return type inheritance (#6961)
Don't autoload classes during covariant type check against mixed
Move resource-object classes of LDAP to `\LDAP` namespaces (#6963)
Remove unnecessay NULL
Do not free tick function entry
Move fiber stack allocation within try
Revert "Remove no longer used "log_errors_max_len" ini directive (#6838)"
Add entries for log_errors_max_len INI directive removal
Revert "Remove no longer used "log_errors_max_len" ini directive (#6838)"
Rename sanitizer members for clarity
Remove no longer used "log_errors_max_len" ini directive (#6838)
Move FTP extension class `FTPConnection` to `FTP\Connection`
use getnameinfo instead of gethostbyaddr
Refactor register_tick_function mechanism (#5828)
Remove no longer used "log_errors_max_len" ini directive (#6838)
Add entries for new Sodium functions to NEWS
Expose libsodium's Ristretto255 API (#6922)
Add entries for new behavior of PDO_ODBC server info/version attributes
Revert "Disable destructors on fuzzer bailout"
Add sanitizer fiber switching support
Catch and repeat zend_bailout in fibers
Use smart_str_extend() instead of smart_str_alloc()
Update msan job to Ubuntu 20.04
Skip some tests under msan
Remove getservbyname() variation tests
Use SOL_TCP instead of getprotobyname() in tests
Remove custom curl build on community job
Property handle unset name on ReflectionClassConstant
Remove unnecessary error handler replacement in SPL
Throw directly instead of replacing error handler in ext/date (#6954)
Update community, coverage and file cache jobs to Ubuntu 20.04
Store SplFileObject open_mode as zend_string
Use zend_string_concat3 in one place
Implement server type/version for PDO_ODBC getAttr (#6935)
Refactor php_date_initialize_from_hash()
[skip-ci] Update UPGRADING file with new `IMAP` namespace
Disable destructors on fuzzer bailout
get rid of inet_addr usage
fix litespeed build
Simplify unpack logic (#6908)
Add simple Firebird payload fake server to test suite
opcache: more reliable way to get the current binary on solaris/illumos
get rid of inet_aton and inet_ntoa use inet_ntop iand inet_pton where available standardize buffer size
Update http->https in license (#6945)
Check current_execute_data instead of flags in fiber destructor
Add CONFLICTS file for PDO firebird tests
Convert IMAPConnection to IMAP\Connection
Update version in php_version.h as well
Rethrow exceptions in fiber destructor
openssl_pkcs7_read: input is data not filename
Reset for 8.0.7
Close generator already in dtor phase
Don't treat failed assignment as initialization
Reset PHP-7.4 for 7.4.20
Use EXTENSIONS instead of SKIPIF section
Implement mysqli_fetch_column (#6798)
Improve fiber backtraces
Minor fiber fixes
Re-enable observer fatal error test
Use sapi/cli/php to run tests for faster failure (#6931)
Slightly clarify zend_wrong_parameter_error() implementation
Also destroy classes in reverse order with ZTS
Remove some unnecessary exception type checks
Don't duplicate internal prop info (#6929)
Replay warnings during inheritance (#6928)
Use common struct to store error information
Show used git commit in community tests
Remove accidentally added flag
Don't use separate static variables in inherited methods
Partially deprecate Serializable
Filter return value of ReflectionClassConstant::getModifiers()
Add ZEND_CLASS_CONST_FLAGS() macro
Look up func info using function name rather than lcname of call
Remove FR/FX macros
Remove UNKNOWN_INFO func info entries
Remove incorrect func info for array_reduce() and pos()
filter_var_array() may return array_of_ref
fetch_assoc may return array_key_long
Remove assert_options() return value info
password_get_info() may return array_of_null
getdate() may return array_key_long
pg_connect() may return rcn
Make date/time type arguments of IntlDateFormatter ctor optional
Remove incorrect format argument
7.3.29 is next
Add missing NEWS entry for #80710
Remove variable registration code from rfc1867
Remove spaces around version built type
Implement Fibers
Use zend_string for pgsql_trim_message
Don't store resolved pgsql field/table oids as resources
Store pgsql le_string as zend_string
exclude markdown
Revert "Exclude more text-only paths from azure pipelines (#6876)"
Use typed properties in ext/zip
Check liveness in PDO_ODBC
Export gzfwrite()
Exclude more text-only paths from azure pipelines (#6876)
Add test case for errorCode()
Add ZEND_ASSERT to stmt->errorCode
Revert "fileinfo: Obey POSIX in pattern conversion"
fileinfo: Obey POSIX in pattern conversion
fileinfo: Pull upstream tests
Slightly clean up error_reporting() implementation
Export zend_error_zstr_at()
Use interned strings for error_get_last()
Convert last_error_file to zend_string
Convert error filename to zend_string
Remove useless masking
Make some exception properties typed
PHPDBG: fix bug parsing 3-word opcodes
Accept null for microseconds argument in stream_select() (#6879)
Get rid of private final methods (#6892)
Introduce zend_error_unchecked()
Use typed property in PDOException
Use typed property in RegexIterator
Use typed properties in php_user_filter
Use typed properties in ext/curl
Remove php includes from sccp.c
Remove unnecessary php.h includes from Zend/
Update config.guess (#6886)
Reset property table for disabled classes
Use -Wno-implicit-fallthrough for pcre
Update mysql version on libmysqclient job
Refactor PGSQL extension to use zend_string*
Boolify do_exec()
Formalize return type to zend_result for PGSQL_API functions
ValueError if lengths is less than 0
Use ZEND_ASSERT() instead of plain assert()
Use ZEND_NUM_ARGS() explicitly
Boolify _php_pgsql_link_has_results()
Boolify _php_pgsql_detect_identifier_escape() and rename it
Drop -Wno-implicit-fallthrough compiler flag
Use ZEND_FALLTHROUGH instead of a comment in PDO
Signal that the stream option passed is an error
Prefer ZVAL_COPY
Remove generic dtor+ctor from SPL dllist
Implement never return type
Add crypto_stream_xchacha20 to ext/sodium (#6868)
Handle debug_print_backtrace() from main script
Backport "ignore some opcodes in the JIT check"
Update mysqli arginfo hash
Update php_version.h
Better support for cross-compilation
Speed up array_column for consecutive objects of the same class
Add ASan and UBSan options (#6825)
Add test suite for mUTF-7 (IMAP) encoding
Catch and handle errors in mUTF-7 (IMAP) conversion
Code cleanup in mbfilter_utf7imap.c
Catch and handle errors in UTF-7 text conversion
Code cleanup in mbfilter_utf7.c
Refactor mbfl_filt_tl_jisx0201_jisx0208 by moving kana conversion into helper function
Simplify code for working with halfwidth/fullwidth kana conversion filter
Remove unneeded 'filter_ctor' member from mbfl_convert_filter struct
Remove unused 'next_filter' member from mbfl_filt_tl_jisx0201_jisx0208_param struct
Remove useless function mbfl_filt_tl_jisx0201_jisx0208_init
Remove AMD64 jobs from Travis
Implement debug_print_backtrace() on top of zend_fetch_backtrace()
Keep fci->object unchanged
Stop inserting fake frames on VM stack.
Handle ref return from Iterator::key()
Destroy file handle earlier in execute fuzzer
Implement zend_print_flat_zval_r() using smart_str
Micro optimizations for http_fopen_wrapper.c (#6864)
mysqlnd: Free empty param bind
Silence the deprecation notice on var_dump
Mysqli bind in execute (#6271)
Add fsync() and fdatasync() functions
Add zend_ulong_to_str() API
Add functions to convert i64/u64 to string
Add tests for mysqli property writing
Enforce types when writing to mysqli dynamic properties
Initialize fast class cache
Call zend_generator_check_placeholder_frame() only for frames with ZEND_CALL_GENERATOR flag
Put back inadvertedly removed NEWS entries
8.0.6 is the next version
Prepare for 7.4.19
change PHP_EGG_LOGO_DATA_URI to php8 elePHPant called InPHPinity
Prepare NEWS for 7.4.18RC1
Use zend_throw_unwind_exit() for assert.bail (#6826)
Deprecate unused mysqli constants (#6850)
SplPriorityQueue performance improvements (#6859)
Add some documentation to the embed SAPI (#6856)
Use fast class cache
PDO: Respect connection transaction state for dtor rollback
Disable ifunc support on openbsd
Remove the "getdir" function which was introduced accidentally
Don't use range information from a prototype method
Update zend_alloc.c
Increased test compatibility
SplHeap: replace zend_parse_parameters with ZEND_PARSE_PARAMETERS* macros
Go back to not reporting startup leaks
Remove unused properties in mysqlnd (#6849)
Revert "Don't allocate temporary file cache memory on arena"
Don't report leak on unclean_shutdown during startup
Refactor dom_has_feature() to use zend_string*
Refactor SNMP extension a bit
Test interned_strings_buffer=0 in CI
Don't allocate temporary file cache memory on arena
Don't evalutae ZEND_AST_CLASS_CONST to ZEND_AST_CONSTANT ar compile-time. Keep at to run-time and use Fast Class Cache during run-time evaluation.
Don't suppress startup leaks
Free expanded filename in php_init_config()
Explicitly set interned_strings_buffer in logging tests
Add known strings for jit autoglobals
Remove special handling of method named during preloading
Accept zend_string instead of zval in compile_filename
Don't leak accel key if interning fails
Don't leak include_path if it cannot be interned
Use Fast Class Cache
Use Fast Class Cache to speedup object unserialization
Use zend_string_equals_(literal_)ci() API more often
Avoid destructor call for LONG keys
Prevent call of var_push_dtor_value() on hot path.
Fast Class Cache
Drop unused fgetss_state member
Don't mark non-refcounted phi as live
Improve fix for #80783
Support more than NGROUPS_MAX groups on macos
Display error message when posix_getgroups() test fails
Migrate skip checks to --EXTENSIONS--, p4
unserialize() optimization
unserialize() optimization
Update version in main/php_version.h as well
Introduce pseudo-keyword ZEND_FALLTHROUGH
Add missing break; in Zlib extension
Skip test on 32bit, as the timestamp range is outside 32bit range
fileinfo: Update the patch
Upgrade timelib to 2021.03 and fix many date/time issues
Use zend_hash_append*() in zend_fetch_debug_backtrace()
Use ZEND_HASH_FILL_* API for explode()
Extend ZEND_HASH_FILL_* API with ZEND_HASH_FILL_GROW and use it to optimize get_declared_classes()
Make tokenizer_data_gen.php compatible with older PHP
fileinfo: Turn back the WS check mitigation
Update zend_vm_gen.php with zend_vm_opcode.c/h changes
Ignore some opcodes in JIT check
Add zend_get_opcode_id() to get opcode id from name
fileinfo: Update libmagic.patch
fileinfo: More VS compat
.gdbinit: make zbacktrace show the correct stack when switching threads
fileinfo: Restore config.h for libmagic
fileinfo: Port libmagic 5.40
micro-optimization
Set expectations
Migrate skip checks to --EXTENSIONS--, p3
Attempt to fix ext/spl/tests/bug67359.phpt broken by f323baa845b51e00e8116bc55fa40400a0f70e44
update release process doc (#6829)
clear only neccessary part of spl_filesystem_object
We don't have to clear zend_object structure, it's initialized by zend_object_std_init() anyway.
Reduce number of stat() calls
Avoid reading of property name in ASSIGN_OBJ if it can be accessed through run-time cache slot.
Avoid reading of property name in FETCH_OBJ_R/IS if it can be accessed through run-time cache slot.
Migrate skip checks to --EXTENSIONS--, p2
DynASM/ARM64: Add VREG support.
Changed PowerPC CPU registers used by Zend VM to work around GCC bug.
Remove reference to $GLOBALS. We don't create an actual variable for $GLOBALS any more .
Use better function
We don't create an actual variable for $GLOBALS any more.
Handle reference zvals when outputting superglobals in phpinfo()
Simplify auto-globals checks
Remove zero size special case for copy_to_stream
Align types with the output of zend_hash_num_elements()
[skip-ci] Update UPGRADING documents for the new argument for fputcsv()
Removed mentions of git.php.net from the documentation
Use ZVAL_TRUE() directly
Removes 'Parallel Edition' output in tests
Update NEWS and UPGRADING for FPM addition of pm.max_spawn_rate
Add extra run test for pm.max_spawn_rate
Max spawn child processes rate an once
Remove unnecessary property unmangling in trait binding
Free static variables in execute fuzzer
Improved JIT for TYPE_CHECK opcode
Improve JIT for IS_IDENTICAL
Improved type inference for FE_FETCH_R
Drop unneessary if branch and adjust arg_num type
XFAIL on WIN64 because of problem in libffi
Revert "Do not check exact values of unstable metrices in FPM status test"
Replace function with macro
Do not check exact values of unstable metrices in FPM status test
Move system independent code out from x86 specific header
Move x86 dependent code out from platform independed parts.
Properly initialize PS(mod) on RINIT
Use capstone disassembler, if available.
Revert "Use better function"
Migrate skip checks to --EXTENSIONS--, p1
strtr() optimization
Support VERIFY_RETURN_TYPE elision with unused operand
Use zend_string* instead of char*
Use better function
Remove unused READDIR_R lock
run-tests: use the EXTENSIONS section for skipping
Use ServerClientTestCase in a test for default_socket_timeout=-1
Update NEWS for FPM process renaming on macOS
fpm master/child process rename, enable on mac os.
Upadate NEWS and UPRADING with info about FPM openmetrics format addition
Add support for openmetrics formatting to FPM status
Convert resources to objects in ext/ldap
Use zend_hash_lookup()
Add zend_hash_lookup() and zend_hash_index_lookup() functions. Thet search for an element with given key/index and add an empty one (NULL), if no found.
micro-optimization
Install de_DE locale on azure
Support prototypes in call graph
XFAIL on WIN64 because of problem in libffi
Add missing rc1/rcn to return type initialization
Allow inferring narrowed return type
Update one more use of NO_AUTOLOAD
Update mysqli stub hash
Update opt test
Don't imply SILENT from NO_AUTOLOAD
Additional fix for bug #80847. On x86_64 part of structure may be passed in CPU registers.
"zend-test" was renamed to "zend_test"
Destroy constant values before object store
Deprecate OO style mysqli::get_client_info method
Add enums to UPGRADING [ci skip]
Implement enums
Use zend_string_equals() API instead of strcmp() in various places
Use zend_string_equals() API instead of strcmp() in COM extension
Use zend_string_equals() API instead of strcmp() in Date extension
Use zend_string_equals() API instead of strcmp() in Filter extension
Use zend_string_equals() API instead of strcmp() in PGSQL extension
Use zend_string_equals() API instead of strcmp() in SOAP extension
Use zend_string_equals() API instead of strcmp() in main.c
Use absolute paths in tokenizer_data_gen.php
Initalize return_value before use
imagecolortransparent() cannot return null
Return bool from imageinterlace()
Avoid unnecessary static_variables persistence
8.0.5 is next
Simplify attribute persistence
Declare PDORow::queryString property
Add API to fetch bool value for PDO attribute values
Use standard PDO way for fetching integer attribute values
Validate string is numeric for integer PDO attribute value
Promote DOM invalid state errors during property access
Change Zend Stream API to use zend_string* instead of char*.
Add tokenizer_data_gen to build process
Don't check executability
Check for WRONG_PROPERTY_INFO
Revert "Remove some unnecessary explicit header dependencies"
Automatically run zend_vm_gen.php if zend_vm_def.h changes
Remove some unnecessary explicit header dependencies
Check for php program in autoconf
run-tests.php: class for test file loading
Add sanity check for type of read_property return value
NEWS for 7.4.18
Prepare for 7.4.17RC1
Add missing skipif sections to ext/dom tests
Add comment explaining empty default case
Boolify pdo_dbh_attribute_set()
Boolify pdo_hash_methods()
Boolify pdo_stmt_describe_columns()
Voidify internal pdo_sqlstate_init_error_table()
Remove php_pdo_str_tolower_dup() function
Change the default error mode of mysqli
Assert that stmt is set in PDORow
Update ubuntu on i386 job
Downgrade security level in tests using TLS < 1.2
Use typed properties in ext/mysqli
Use zend_objects_not_comparable in PDO
Add CLEAN sections to mysqli and PDO mysql tests
ext/opcache: fix configure output while checking mmap MAP_ANON support
Deprecate mysqli driver_version property
Remove dead mysqli_driver_construct() function
Clean up mysqli_driver test cases
Remove redundant macros in mysqli_driver implementation
Remove unused mysqli global
client_info is a constant and doesn't need a connection
Use zend_string* & more legible API for php_get_display_errors_mode()
Return early on php display error for better legibility
hash: xxhash: Use canonicalization routine from existing API
Remove deprecated code
Inline "array" part of FE_FETCH_R handler into HYBRID VM
zend_verify_recv_arg_type_helper is not "cold".
Avoid repeatable work when error_reporting() is called with the same argument few times.
Inheritance cache optimization
Use spl_filesystem_object.file_name for SPL_FS_DIR as a cache and prevent multiple file name reconstruction.
LiteSpeed SAPI v7.9: Process manager keeps forked child process alive for longer time based on load. Reduces PM overhead for busy setup.
Add supports for FreeBSD's PROT_MAX to let mprotect knows X flag can be applied in addition.
Reduce date test threshold further
Print error code if CreateMutex() fails
typo
Reduce threshold in ext/date/tests/bug73837.phpt
Update mysqli tests to work with newer MySQL server
Make the nocache tag actually work
Add mechanism to skip the skipif cache
run-tests.php: Preserve .php on leak in one more place
Cache haschildren/getchildren methods of recursive iterators.
Remove duplicated SSL_CTX_set_verify()
Avoid useless date conversion
Explicitly print reference wrappers in debug_zval_dump()
Switch to new ZPP
Switch to new ZPP
Loop invariant code motion
Add test cases for bcmath ValueErrors
Replaced deprecated `hw.ncpu` with `hm. logicalcpu`
Add const to zend_extension_version_info.build_id
Optimized object conversion to array without rebulding properties HashTable
Optimized object encoding without rebulding properties HashTable
Declare XMLReader properties
Always remove HT iterators, even for uninit HT
Optimize serializing class names
Optimized object serialization without rebulding properties HashTable
Incomplete class may have only single "MAGIC_MEMBER"
Change the order of properties used in foreach(), var_dump(), serialize(), comparison, etc. Now properties are ordered according to their layout in zend_object structure.
Added UPGRADING note.
Reference dynamic functions through dynamic_defs
Change the order of properties used for var_dump(), serialize(), comparison, etc. Now properties are ordered according to their layout in zend_object structure.
run-tests: drop support for ancient Valgrind versions
Clarify types in XmlReader property handling
Remove useless conditional #ifdef
serialize() optimization
Optimize out zend_strpprintf() usage for simple concationaton
Improve SPL directory and stat() cache using zend_srting* instead of char*
Remove quicktester
skip test with openssl < 1.1.0
Capture Microsoft-defined HRESULT exit codes exit codes
crc32 module, clang spurious warning removal.
Speed up __sleep() and __wakeup() calls
mysqlnd pam fix test error message
Update NEWS
Switch few functions useful in Symphony apps to new ZPP API.
Allow pointer to end of memory in IS_UNSERIALIZED()
zend_compile.c: fix typo
run-tests: add skip cache
run-tests: fixed exit code not being set on BORKED tests
Update php_version.h to proper version number
Remove free_chunk API
Remove resize_chunk API
Generate class entries from stubs for com, standard, xmlreader, xmlwriter, xsl, zip, Zend
Don't resolve special class names
NEWS: Associate FR to xxHash additions
UPGRADING: Add note about xxHash secret and fix a typo
hash: Implement secret support for xxh3 and xxh128
Revert "Remove class validation. zend_lookup_class_ex() performs it anyway."
Remove class validation. zend_lookup_class_ex() performs it anyway.
Reduce ZPP API overhead
Attempt to fix ext\standard\tests\file\basename_bug66395_variation2-win32.phpt and ext\standard\tests\file\pathinfo_basic1-win32.phpt
Improve basename(). Avoid calling mblen() for ASCII compatible locales.
Properly relove self::CONSTANT at compile time
We don't need map_ptr slots for op_array.run_time_cache during preloading.
Generate ext/spl class entries from stubs
Initialize property to UNDEF on unserialize overwrite
Avoid signed integer overflow in substr()
Don't use unmangled name if property not found
Avoid writing zend_vm_opcodes.h if it did not change
Coding style tweaks for zend_vm_gen.php
Color LEAK&FAIL like a failure
Prep for 8.0.4
unserialize() optimization. Omit class name validation before hash lookup, and perform it only before autoloading.
Remove generated zend_jit_x86.c on `make clean`
Add support for generating properties with union type of multiple classes
Handle incomplete result set metadata more gracefully
Generate class entries from stubs for ldap, libxml, mbstring and mysqli
Mark resource-like objects as non-comparable
Improved unserialize() performance. Checks for object propery "visibility change" were moved, to be performed only if name/visibility had been really changed.
Improve class entry generation
PHP-7.4 is now 7.4.17-dev
Microoptimization of STRLEN and IN_ARRAY opcodes (based on https://github.com/php/php-src/pull/4981)
Add dependency tracking for header files
cURL: make possible to send file from buffer string
Increase timeout on asan job
Suppress OpenSSL error on missing optional config
Delref only after successful allocation
Adapt test case for libcurl 7.75.0+
Use typed proprety for Transliterator::$id
Used typed properties for reflection $name and $class
Generate class entries for snmp, soap, sockets, sodium, sqlite3, sysv*, tidy
Avoid repeatedly calling strlen in FPM setproctitle implementation
Persist class name before methods, because it may be used insted of "self"
CI: add --depth 1 to git clone for speed
Use VM_MAKE_TAG for macos memory tag
Remove stray mentions of mbstring.func_overload
Generate class entries from stubs for phar, posix, pspell, readline, reflection, session, shmop
Generate class entries from stubs for oci8, odbc, openssl, pcntl, pdo, pgsql
Generate zend class entries based on stubs
Enable class entry generation for sapi extensions
Optimize Traversable unpacking in zend_vm_def.h
Revert "Implement fetching TLS TCB offset on MacOS"
Deprecate passing null to non-nullable arg of internal function
Implement fetching TLS TCB offset on MacOS
Allow all scalar types in ini_set()
Avoid useless SHM data duplication
Sort some decls in spl_iterators.h
Handle warnings during sccp function evaluation
Update func info after password_get_info() change
Don't return null from password_get_info()
run-tests: fix JUnit counts
Don't throw additional Error in require_once if exception already thrown
Link unbound simple classes (without parent/intefaces/traits) in first place.
Unserialize op_array->scope before passing to zend_file_cache_unserialize_type(). Don't use scope of closures.
Use zend_type.ce_cache__ptr for caching class resulution during argument/result type checks
Make mysqli_ssl_set() arguments nullable
Reuse single map_ptr slot for indentical class names
Make finfo_open() $magic_database nullable
Don't pass null action to __doRequest
Clarify that location is required in do_request
Regenerate arginfo file
Accept null $location in SoapClient::__setLocation()
Make SoapVar arguments nullable
Add missing classes to stubs
Optimize ZEND_COUNT opcodes on arrays in the jit
Use IS_ALIAS_PTR to make distinct between aliasses and real classes
Added Inheritance Cache.
Properly check imagegd() signature
Make imagegd $file parameter nullable
Use E_ERROR to report arginfo/zpp mismatch
Make NumberFormatter ctor $pattern nullable
Make IntlDateFormatter ctor $pattern nullable
Remove a few more unnecessary @generate-function-entries annotations
Generate ext/intl class entries from stubs
Implicitly enable function entry generation when class entry generation is enabled
Make Phar $fileNotFoundScript nullable
Make createDocument() $namespace nullable
Make getElementsByTagNameNS $namespace nullable
Add support for string keys in array unpacking
Remove usage of float keys in arrays
Avoid C4090 level 1 warning
Generate class entries from stubs for another batch of extensions
run-tests.php: move JUnit stuff into a class
Skip two gettext tests under --repeat
Restore Laravel test workaround
Properly render 2+ namespaces functions in build/gen_stub.php
Properly render 2+ namespaces functions in build/gen_stub.php
Use ST_Y() instead of the deprecated/removed Y() in test
Try SIGTERM before SIGKILL in opcache restart
Add IL compat flag to Windows builds
Generate class entries for a few extensions
7.3.28 is next
Update year to 2021
Remove unnecessary cast in snmp_set_oid_output_format
Add missing derefs in CurlFile
Revert "Updated to version 2021.1 (2021a)"
Document .dtor_obj and .free_obj
XFAIL observer_error_05.phpt test
Create .php and .sh on valgrind failure
crc32 mac build fix
Add missing stub for SodiumException
NEWS
NEWS
Remove useless zend_update_class_constants() calls
Move optimizer into core
Observe fake closures
Rm unneeded function
Rm unneeded function
Alternative fix for bug 77423
Update version
Allow observer handlers disabling optimization in RETURN opcode handler, that may cause loss value of returned local variable.
Remove unused mmap member in phpdbg_file_source
Skip dummy frames allocated on CPU stack of zend_call_function(). (Usage of "current_observed_frame" varible looks unsafe to me).
Add missing resource key warning for unset()
Add support for generating class entries from stubs
Distinguishing opcache SHM on stats tools for Mac
Improve switch continue warning
Remove unnecessary TRUE/FALSE defines in tidy
Allow specifying sqlite3 DSN (file:/) in PDO SQLite
Updated to version 2021.1 (2021a)
Empty merge
Updated to version 2021.1 (2021a)
Empty merge
Updated to version 2021.1 (2021a)
Empty merge
Updated to version 2021.1 (2021a)
Improve error message for leading comma in keyed list assignment
Disable jit in observer opline test
Add documentation of array_is_list() to UPGRADING
Add missing stub for SNMPException
Add missing stub for com_exception
Add missing SKIPIF clause for recently introduced test case
Accept zend_string in zend_prepare_string_for_scanning
Add array_is_list(array $array) function
Add missing SKIPIF clauses to new test cases
Skip preloading test on windows
Update 'East Asian Width' table to comply with Unicode 13.0
Next is 8.0.3
Use zend_string_equals() in PDO
Update NEWS and version
Update NEWS for PHP 7.4.15RC1
Rename zend-test to zend_test
Use standard C99 64bits int types
php_pdo_register_driver() might fail
Remove unnecessary (char*) casts
Refactor PDO's last inserted ID handler to use and return zend_string
Refactor PDO doer handler to use zend_string
ldap_search() and friends can return array
Keep JIT region executable under ZTS
Observe unused return values in JIT
Disable opcache optimizations during some observer tests
Mark classes cached by opcache by ZEND_ACC_CACHED flag and prevent useless copying and desrpoying of immutable data.
Avoid modification of trait info
Delete an outdated comment for read_property and read_dimension. [ci skip]
gen_stub: Also verify implementation-alias
SplFileObject::fgets() cannot return false
gen_stub: Don't use $aliasMap during verification
Sync gzgets signature with fgets
Use ENT_QUOTES|ENT_SUBSTITUTE default for HTML encoding and decoding functions
gen_stub: Compare phpdoc return type in --verify
Sync datefmt_get_calendar_object signature
Sync intlcal_create_instance() and IntlCalendar::createInstance()
Sync date_diff and DateTime::diff return type
gen_stub: Allow additional text after @return
gen_stub: Automatically add function name to exceptions
posix: adding freebsd specific rlimit constants
Remove redundant posix_getrlimit_basic.phpt
hrtime implementation update for Mac
Curl: Add CURLOPT_DOH_URL option
Skip bug77423 if filter extension is unavailable.
Remove useless constant MBFL_ENCTYPE_MBCS
Remove unused macros from mbfilter_cp51932.c, mbfilter_iso2022jp_mobile.c
Remove useless mbstring encoding 'JIS-ms'
Remove useless mbstring encoding 'CP50220-raw'
CP5022{0,1,2}: treat truncated multibyte characters as error
Add test suite for CP5022{0,1,2}
Protect against buffer overflow in xxhash unserialization
Limit unserialization element count more aggressively
Check for append to $GLOBALS
Replace zend_bool uses with bool
Print "interned" instead of fake refcount in debug_zval_dump()
Build PDO OCI and OCI8 on azure
compare_function() returns zend_result
Remove the convert_to_long_base function
CP5022{0,1,2}: treat unrecognized escapes as error
CP5022{0,1,2}: use JISX0201 for U+203E (overline)
CP5022{0,1,2}: convert Unicode codepoints in 'user' area (0xE000-E757) correctly
CP5022{0,1,2}: convert characters in ku 0x2D (13th row) correctly
Stricter handling of erroneous input when converting CP5022{0,1,2} text encoding
[skip-ci] Add minimal build instruction for Fedora
Add test to verify file_get_contents error with folder
JIS7/JIS8 encoding: treat truncated multibyte characters as error
JIS7/JIS8 encoding: handle invalid 2nd byte for Kanji correctly
JIS7/JIS8 encoding: use JISX0201 for U+203E (overline)
JIS7/JIS8 encoding: treat unrecognized escapes as error
Add comment explaining why ISO-2022-JP-2004, etc strings end with ESC ( B
ISO-2022-JP-2004 conversion: handle invalid characters correctly
ISO-2022-JP-2004 conversion: treat unrecognized escapes as error
ISO-2022-JP-2004 conversion: represent backslash and tilde as ASCII
Remove zend_locale_sprintf_double()
Make convert_to_*_ex simple aliases of convert_to_*
Remove Z_PARAM separate params where they don't make sense
Remove SEPARATE_ZVAL_IF_NOT_REF() macro
Remove SEPARATE_ARG_IF_REF macro
Remove flakiness from tests
Always use CG(arena) for unin type lists
socket_create_pair() can no longer return NULL
Use arc4random_buf on macOS
Add support for union types for internal functions
Use ephemeral port in socket_create_listen_used.phpt
Remove unused bind_hash member
Cleanup:
Add MSSQL setup to Azure Pipelines build
PHP array cannot refer to EG(symbol_table) any more. Replace corresponding checks by ZEND_ASSERT().
Revert fix for bug 76813 and re2c version bump
PHP array cannot refer to EG(symbol_table) any more. Replace corresponding checks by ZEND_ASSERT().
Fuzzer: Gracefully handle hashes that cannot be serialized
Add guard if lvalue of assignment may be a reference, but wasn't a reference during recording
Better CPU registers usage
Remove redundand IS_INDIRECT checks (they were necessary for $GLOBALS handling)
NEWS: Add xxhash note [ci skip]
UPGRADING: Add xxHash notes [ci skip]
hash: Use hrtime() in the bench script [ci skip]
hash: Implement xxHash
Rename ``zip_ent`` parameter to ``zip_entry`` for consistency
Remove some unnecessary zend_delete_global_variable uses
Switch name variable to zend_string
Switch bound_param_map to zend_string
Remove freeq member
Refactor PDO placeholder's quoted string to zend_string
Refactor PDO's quoter handler to return a zend_string
Clean up remaining opcodes for foreach([] as $x)
Fold dirname in sccp for non-windows platforms
Avoid modifying the return value of readline_completion_function()
Make fetch_* OO same as func
Remove unnecessary INDIRECT checks in JIT helpers
Remove some INDIRECT handling in standard library
Remove some INDIRECT handling in VM
Restrict allowed usages of $GLOBALS
Update UPGRADIN.INTERNALS
Voidify PDO's fetch_error handler
Boolify PDO's preparer handler
Voidify PDO's closer handler
Boolify PDO's quoter handler
Boolify PDO's set_attribute driver function
Boolify PDO's transaction handlers
Formalize pdo_dbh_check_liveness_func() return type to zend_result
Add/expand comments for PDO handlers
Convert strcmp() usage to zend_string_equals_literal()
Add missing SKIPIF clause for require_hash.phpt
Update instructions regarding web-php/include/version.inc
Prevent double-free of Phar ZIP stream
gdbinit: use ____print_str to print htable keys
Implement Explicit octal notation for integers RFC
[ci skip] Add forgotten NEWS entry (bug 80560)
Manually store CURLOPT_PRIVATE data
Remove method member from php_curl_callback
Remove unused still_running member
Reduce memory usage of SplObjectStorage
Don't allocate php_curl_handlers separately
Don't allocate php_curlm_handlers separately
Use single typedef for curl callbacks
Export php_getenv() API
Try to fix intermittent failures of stream_server_reneg_limit.phpt on macos
Throw ValueError instead of TypeError for malformed GMP number
Use php_random_bytes() in mt_srand() and uniqid()
Avoid throwing warnings in mysqlnd
SQLite3::query() cannot return null
Mac M1 crc32 detection support
Disable non-cron travis jobs
[ci skip] Update NEWS
[ci skip] Update NEWS
Skip tests under asan
[ci skip] Unpdate NEWS
rename COMPILER and ARCHITECTURE macro (too generic)
ZipArchive methods do not return NULL
Use Z_PARAM_OBJ macros when zval isn't needed
Use RETURN_THROWS() in a few places
Remove superfluous return statement.
Remove redundant check in SplObjectStorage->count
Initialize EX(call)->func by single instruction
Reuse value stored in %r0 instead of immediate operand
Add support for generating methodsynopses from stubs
Bump minimum re2c version to 0.13.7
php_formatted_print() throws on failure
Replace sort() function calls with ksort() in basic ksort test
DateTime*::getOffset() no longer returns false as of PHP 8.0.0
[skip ci] fix typo in NEWS
Eliminate redundand comparison insructions
Add a few other RETURN_THROWS()
Update hash for IMAP stubs after adding final qualifier
IMAP: Declare `IMAPConnection` class as `final` (stub+test)
IMAP: Disallow direct `new IMAPConnection()` construct
Add regression test for bug #76770
Support native types in PDO SQLite
FTP: Disallow direct `FTPConnection` construction
EXPECTF imap_errors() test's authentication error
Make imap_errors() test no hang
Optimize Dovecot configuration for IMAP tests
Rewrite PDO result binding
Don't use explicitly nullable column in bug_73234.phpt
Add CONFLICTS file for PDO firebird tests
PDO Firebird: Use recreate table
Suppress zend_signals warnings if pdo_firebird loaded
Add IMAP resource to object conversion to UPGRADING
Convert IMAP resource to object
Build PDO Firebird on Azure
Show slow SKIPIF sections as well
Build PDO odbc on azure
PDO: Honor ATTR_STRINGIFY_FETCHES for booleans
Description typo
Bundle PECL OCI8 3.0.1
Retrofit NEWS
Revert "DateTime:: and DateTimeImmutable::getTimestamp() may return false"
DateTime:: and DateTimeImmutable::getTimestamp() may return false
Convert file_info resources to objects
Back memory stream by a zend_string
Remove unused smax member from memory stream
Remove unused pdo_pgsql_column member
Try to fix azure pipelines config
Add basic libmysqlclient CI job
Move fetch_all implementation out of mysqlnd
Make mysqli_stmt_next_result available under libmysql
PDO MySQL: Make test libmysql compatible
PDO MySQL: Handle boolean parameter binding with libmysql
MySQLnd: Support cursors in store/get result
PDO MySQL: Use correct type when setting INT_AND_FLOAT_NATIVE
Skip invalid file descriptor test on Mac
MySQLnd: Remove mnd_malloc/free etc.
MySQLnd: Avoid some reallocations in PS decoder
PDO MySQL: Use native types for results
MySQLnd: Clean up and optimize mysqlnd result set handling
Drop support for max_length in mysqli_fetch_fields()
Detect overlarge step for character range()
PDO MySQL: Use mysqlnd column names
Prepare for 7.4.15
Prepare for PHP 8.0.2
Next is 8.0.2
MySQLnd: Drop free_result_internal
Optimize out result value of ASSIGN, ASSIGN_OP and INC/DEC opcodes, if possible.
MySQLnd: Simplify management of zval row buffer
7.3.27 is next
Remove mysqlnd_extension enum
MySQLnd: Remove unused fetch_field_data method
Remove very old -no-cpp-precomp compatibility flag on Mac
JIT: Update invalid opcache.jit INI value message to include "tracing" and "function" values
IBM i PASE doesn't support ITIMER_PROF
Add more tests that document late static binding
JIT disabled build fix.
Add Windows support for OCI 19
Drop pdo_mysql_prepare_load_data.phpt
Use zmm for row_c data
Remove unused flag
mysqlnd_error_info_init() cannot fail
Remove more OOM checks
Remove MYSQLND_STRING_TO_INT_CONVERSION define
MySQLnd: Remove some unnecessary allocator failure checks
MySQLnd: Remove fail thresholds from infallible allocators
PDO: Store/pass query_string as zend_string
Allow building dblib with machine-dependent libdir
Disallow version_compare() $operator abbreviations
UPGRADING.INTERNALS: Document hash init signature changes [ci skip]
UPGRADING: Document algorithm specific hash options [ci skip]
hash: Support custom algo parameters
Remove bug41347.phpt as the error cases are already tested
PDO MySQL: Don't skip two LOCAL_INFILE tests with libmysqlclient
PDO MySQL: Unskip bug_41125.phpt
PDO MySQL: Use stmt_next_result with libmysqlclient as well
Allow drivers to omit error code
Eliminate some repeatable IS_REFERENCE checks
EXTERN_C wrapping for GC buffer APIs
Backport fix for bug #70066
Perform early guard type check for result of FETCH_CONSTANT
Remove unnecessary more_results() checks
Add ifdef for mysqlnd only function
PDO MySQL: Extract common code for handling PS results
PDO MySQL: Use set_row_count() helper
PDO MySQL: Make sure nextRowset() works with partially consumed result
PDO MySQL: Handle error during closeCursor()
Make XFAILED test less broken
Handle changing column count in mysqlnd result binding
PDO MySQL: Normalize handling of empty stored procedure result set
Handle column count change in PDO MySQL
Enable XFAILed test
ldap_exop_whoami() does not return TRUE
Avoid unnecessary checks
Clarify and assert that printf() and friends never return NULL
Increase timeout on msan job
Return early from php_search_array()
Standardize behaviour for int message number between functions
Add tests for passing a UID instead of a message number
Upload coverage data to codecov.io
fix mysqli_stmt_get_result_metadata_fetch_field test for mariadb
Remove PHP 5 mysqli tests
Backport fix for bug #78750
Make is_file() and friends return false when path contains 0-byte
Don't disable phpdbg on macos
Ensure consistent error message in phpdbg parser
Don't throw from imagecreatefromstring() with too short string
Flesh out HashTable insertion APIs
Backport IMAP test modernization to PHP-8.0 branch
Bug #80447 (Strange out of memory error when running with JIT)
Don't try to open null file
Disable stack reuse optimization for x86 PIC code. It may clobber local variable used for Global Offset Table.
Determine run-tests executables consistently
Don't pass null to strlen()
Don't use scope when validating Attribute
Add const modifier for zend_extension members
Don't mark cpu_supports functions as always inline
Skip test if JIT is not available
hash: Add build dir for ext/hash/murmur
Preallocate stack space for JIT in execute_ex() to eliminate JIT prologue/epilogue.
Drop all JIT related XFAILS from phpdbg test suite
Next attempt to fix bug #80368
Rename XmlParser to XMLParser for consistency with XMLWriter/XMLReader
Suppress stream errors in mysqlnd
Hide phpdbg/JIT incompatibility macro (JIT is disabled for phpdbg)
Add additional entries to unserialize corpus
Disable JIT with incompatible third-party extensions
Only replace IN_ARRAY result type for JMPZ/JMPNZ
php_tidy_create_node() expects a fixed set of node_types
Use ephemeral ports in mcast_ipv*_recv.phpt
tidy::repairFile() and ::repairString() return string|false
Respect strict_types during sccp function call evaluation
Remove duplicate str_split check, fix test expectation
Don't check for throwing calls in sccp function evaluation
Handle exceptions during SCCP function evaluation
Only use travis for cron jobs
Make sure zend_cpu_supports_pclmul() is always defined
Avoid direct calls to zend_cpu_supports()
Assert that cpuinfo is initialized before use
Move avx check into a macro
Update PECL package release date
Eliminate deafd stores
Remove -dev from ZEND_VERSION
Convert U+00AF (MACRON) to 0x8150 (FULLWIDTH MACRON) in some SJIS variants
Convert U+FF5E (FULLWIDTH TILDE) to 0x8160 (WAVE DASH) in SJIS variants
Convert U+203E (OVERLINE) to 0x8150 (FULLWIDTH MACRON) in some SJIS variants
0x7E is not a tilde in Shift-JIS{,-2004}
0x5C is not a Yen sign in CP932 (or CP51932)
0x5C is not a backslash in Shift-JIS-2004
Enhance handling of CP51932 encoding
Combine MBFL_ENCTYPE_MWC2{BE,LE} constants
Combine MBFL_ENCTYPE_WCS{2,4}{BE,LE} constants
Don't pass invalid JIS X 0212, JIS X 0213, and Windows-CP932 characters through
Don't pass invalid JIS X 0208 characters through
Enhance handling of CP932 text encoding
Bugfixes for findInvalidChars (helper for mbstring test suite)
Add UPGRADING note for PDO::inTransaction()
Reindent more mysqli tests
Reindent ext/mysqli tests
Allow running tidy.php on specific directory
Use diferent temporary register (%r0 may keep a method address)
Allow PHP_CURL_APIs to be imported by DLLs
[ci skip] Update generate_patch.sh
Use pkg-config for libargon2
Sync README with package.xml
[ci-skip] Use HTTPS for links on PHP ini files
zip extension is 1.19.2
zend_jit_trace_stack_frame.stack can't be NULL
Keep value of register before possible side exit
Remove some incorrect mixed parameter types
UPGRADING: (real) cast has been removed
Use MIN/MAX when dumping RANGE[]
8.0 branch should be prepping for 8.0.1
Prepare NEWS file for GA
Added missing deoptimization code for trampoline handling
Export zend_is_callable_at_frame
Short-circuit get_gc for currently running generator
Update NEWS for 8.0.0
Update NEWS for PHP 8.0.0RC5
Provide unused retvals to observers
Fire open observer end handlers after a zend_bailout
Trampoline cleanup
Add --repeat flag to usage info of run-tests.php
[ci skip] Add note that imagedestroy() no longer has an effect
Inline pair production in json parser
Strip trailing line breaks and periods from Windows error messages
Don't assume libmysqlclient library name
Remove assertion
Handle errors during next_result()
Stop on fake frame
Retain reference to share handle from curl handle
[Observer+JIT] Save opline before calling begin/end handlers
[Observer] Save opline before calling begin/end handlers
Consolidate all single-byte encodings in one source file
Enhance mbstring support for UCS-2 text
Leading BOM is stripped for UTF-32
Add test suite for SJIS-mac encoding
Unicode -> SJIS-mac conversion doesn't reject valid codepoints after a bad transcoding hint
SJIS-mac encoding conversion: Stop the carnage of innocent Unicode codepoints
Convert Unicode halfwidth Yen sign to MacJapanese halfwidth Yen sign
SJIS-mac encoding conversion: handle invalid (or truncated) 2nd byte for Kanji correctly
Add test suite for SJIS-2004 encoding
Don't mangle non-Japanese chars which appear after a 'combining' kana in SJIS-2004
SJIS-2004 encoding conversion: handle invalid (or truncated) 2nd byte for Kanji correctly
Don't redundantly flush mbstring filters multiple times
Test EUC-JP and Shift-JIS more thoroughly
PHP-7.4 is now for 7.4.14
Update NEWS for 8.0.0
Update NEWS for PHP 8.0.0RC4
Add integration test for symfony preloading
7.3.26 is next
Use true/false instead of TRUE/FALSE in intl
Remove mbstring identify filters
Treat non-ASCII characters as erroneous when converting ASCII text
Remove useless byte{2,4}{be,le} encodings from mbstring
Remove embedded property from mysqli_driver
Skip preload test under asan
Rename PhpToken::getAll() to PhpToken::tokenize()
Update version in 7.4 branch
Split tests for compatibility with ICU 68.1
Stabalize IMAP parallel testing, again
Raise E_WARNING on PHP related errors
Move stack overflow checks out of the loops
report about ZSTD compression availability
only display libzip both headers/library versions if they differ
Backport preloading trait fixup fixes
End output handlers in preload shutdown
getlastmod() can return false
Assert that references are not persisted
Don't xfail method_static_var.phpt
Don't disable opcache for generic tests
Make all IMAP fetch*() tests conflict with the default mailbox
hash: murmur: Initialize final hash explicitly
Don't disable early binding during preloading script
Report parse errors during preloading
Allow unlinked classes when performing in_compilation variance check
Don't ignore internal classes during preloading
Preserve trait method alias name during preloading
Modernize IMAP tests
Improved error message for typed class properties with null as default value
Add test suite for ARMSCII-8 encoding
Optimize (AND FIX) mb_check_encoding (cut execution time by 50%+)
Add test suite for KOI8-U encoding
Remove dead code from mbfilter_koi8u.c (and do general code cleanup)
All bytes are valid in KOI8-U encoding
Add test suite for KOI8-R encoding
Remove dead code from mbfilter_iso8859_{2,4,5,9,10,13,14,15,16}.c
Remove dead code from mbfilter_koi8r.c
All bytes are valid in KOI8-R encoding
Add test suite for CP850 encoding
Remove dead code from mbfilter_cp850.c (and do general code cleanup)
All bytes are valid in CP850 encoding
Add test suite for CP866 encoding
Remove dead code from mbfilter_cp866.c (and do general code cleanup)
All bytes are valid in CP866 encoding
Add test suite for CP1254 encoding
Add test suite for CP1251 encoding
Test cases for mbstring encodings are less repetitive
Rename opcache.jit_max_loops_unroll to opcache.jit_max_loop_unrolls
hash: murmur: Suppress sanitize warnings under GCC
Bump minimal OpenSSL version to 1.0.2
UPGRADING: Add murmurhash note [ci skip]
NEWS: Add murmurhash info [ci skip]
hash: Add MurmurHash3 with streaming support
Add test suite for CP1252 encoding
Convert numeric string array keys to integers correctly in JITted code
Add --repeat testing mode
FIxed bug #80299
Create TSSA loops for recursive call/return traces and move invariant type guards out of loops.
Use constant size string in hash bench.php
Handle errors during PDO row fetch
Report gone away error in one more place
Retain QUIT_SEND connection state
Handle mysqli errors in more cases
Sync test with master
Don't force rebuild of symbol table, when populating $http_response_header variable by the HTTP stream wrapper
Check for null dbh methods in get_gc
Update NEWS for 8.0.0RC4
Update NEWS for PHP 8.0.0RC3
Don't throw for out of bounds offsets in strspn()
Parameter type and name fixes in ext/standard
Skip bug46024.phpt under asan
UTF-32 conversion treats truncated characters as illegal
Add identify filter for UTF-32{,BE,LE}
Improve error handling for UTF-16{,BE,LE}
UTF-16 text conversion handles truncated characters as illegal
Add missing observer tests
Better JIT support for aliases
Deny serialization of finfo objects
Deny cloning of fileinfo objects
Consistent error handling in mysqli_poll
Re-enable laravel tests
Don't set xdebug.default_enable in run-tests
Declare may_retry_reparse_point on windows only
Remove dated results from ext/hash/bench.php
Raise E_WARNING on PHP related errors
Use separate directory in dit_004.phpt
Document breaking change in strspn/strcspn
Revert "Make ReflectionUnionType final"
Make ReflectionUnionType final
Define config var PHP_JSON
Throw Value/TypeError for invalid $bodies in imap_mail_compose()
waitpid in ftp server tests
Allow running session tests in parallel
Require stubs to declare return types for magic methods when possible
Use ephemeral port in more server tests
Use ephemeral port in ftp tests
Make GC default threshold handling consistent
Don't allow passing unknown named params to class without ctor
Missed warning
Run arginfo/ZPP verification tests in strict mode as well
Checj type guards before loading values into CPU registers
Avoid register allocation for ASSIGN into aliased variable (it might be indirectly changed into IS_REFERENCE)
Don't crash on uninitialized tidy object
Properly validate ArrayObject::asort() argument
Accept zend_string in highlight_string API
Make highlight_string() accept string in zpp
Remove unused pasv_listen() function
Don't leak pcntl last_error across requests
Don't leak json error_code across requests
Don't leak pcre error_code across requests
Updated to version 2020.4 (2020d)
Updated to version 2020.4 (2020d)
Empty merge
Empty merge
Updated to version 2020.4 (2020d)
Empty merge
Updated to version 2020.4 (2020d)
Remove unused single.leaf member
Don't allow properties on former resource objects
Don't allow properties on GdImage
Simplify and fix generator tree management
Convert pspell resources to objects
NEWS for gdFont conversion
Convert gdFont from resource to object
Convert FTP resource to object
Update bcmath.scale when calling bcscale()
More accurate live range construction
Eliminate useless mov(s)
Add test for zend_extension loading
Eliminate dead type store
Improve JIT for fetching character form string
Add char* cast to avoid compiler warnings
Properly fix #80220
Improve register allocator (register reuse)
Improve register allocator (give preference to loop variables).
Increase timeout on file cache job
Avoid partial register stall
Use zero-extended mov insted of sign-signed movsxd
Use zend_accel_error_noreturn in more places
Add zend_accel_error_noreturn() helper
Don't use global for array_walk_fci
Disable Laravel testing
Add additional initialization checks to SplFileInfo
Updated to version 2020.3 (2020c)
Updated to version 2020.3 (2020c)
Empty merge
Empty merge
Updated to version 2020.3 (2020c)
Empty merge
Updated to version 2020.3 (2020c)
Check PDOStatement initialization during iteration
Remove IGNORE_URL_WIN macro
Add test suite for ISO-8859-x encoding verification and conversion
Do not pass invalid ISO-8859-{3,6,7,8} characters through silently
Add identify filter for ISO-8859-8 (Latin/Hebrew)
Add identify filter for ISO-8859-7 (Latin/Greek)
Add identify filter for ISO-8859-6 (Latin/Arabic)
Add identify filter for ISO-8859-3 (Latin-3)
Add identify filter for ISO-8859-16 (Latin-10) encoding
Properly handle NULL output start filename
Remove unused global
Make sure output start filename is not freed early
[ci skip] Make it clear what GD uses instead of resources
Verify parameter names of function aliases
DragonFlyBSD build update for opcache JIT part.
Avoid refcounting when return CV (similar to optimization in VM).
Change $controls parameter to default to null in ext/ldap
Skip arginfo test under msan
Adapt test expectation to cURL 7.73.0
Sync zpp in phar interceptors
Mark ldap_exop() param as UNKNOWN
More arginfo/zpp verification
Initialize calendar_long variable
Allow passing $tag for non-authenticated encryption
Sanity check zpp max argument count
Remove unused IS_SJIS1 and IS_SJIS2 macros
Added missing side exit
Update NEWS for 8.0.0RC3
Update NEWS for PHP 8.0.0RC2
Normalize mb_ereg() return value
mUTF-7 (UTF7-IMAP) conversion: handle illegal (non-RFC-compliant) input correctly
Add 'mUTF-7' alias for UTF7-IMAP encoding
Add comment explaining mUTF-7 to mbfilter_utf7imap.c
Add identify filter for UCS-2, UCS-2BE, and UCS-2LE encodings
Add mbstring identify filter for 'binary' encoding
Add identify filter for UTF-16, UTF-16LE, UTF-16BE
Don't accept null in pg_unescape_bytea()
Update ext/odbc parameter names
Use $statement in mysqli
Prepare for 7.4.13
Ignore memory leaks reported for some libc-client functions
Give preference to live-ranges with register hints to improve register reuse.
Update ext/pdo_pgsql parameter names
Update ext/pgsql parameter names
Update ext/sodium parameter names
Avoid useless register allocation
Update ext/phar parameter names
7.3.25 is next
Handle illegal bytes properly when converting to '7bit' encoding
Add mbstring identify filter for '7bit' encoding
Refactor mbfl_ident.c, mbfl_encoding.c, mbfl_memory_device.c, mbfl_string.c
Remove useless constants MBFL_CHP_{CTL,DIGIT,UALPHA,LALPHA,MSPECIAL}
Remove useless validity check when converting UTF-16LE -> wchar
Refactor UTF-16LE -> wchar conversion code
Avoid compiler warnings related to mbstring flush functions
Perform trace range propagation
Change parameters types from int to bool
Eliminate dead stores
Improve parameter names in ext/intl
Improve parameter names in ext/pdo_sqlite
intl: report more information about message pattern parse errors
Add GC support for PDO driver data
Revert "Add missing X509 purpose constants"
Add missing X509 purpose constants
Detect self-addition of array more accurately
Deindirect source elements in zend_hash_merge
Backport schedule in yaml
Avoid non-object in FE_FREE
XMLReader::open() and XMLReader::xml() are now static
Remove return types from XMLWriter stubs
Add compiler flags which aren't included in -Wall or -Wextra
Add -Wno-logical-op compiler flag to Sodium extension
Change imap_mail_compose() $body param to $bodies
Suppress bogus [-Wlogical-op] warning from GCC
Don't specify symfony branch
Eliminate dead load
Update ext/gd parameter names
Update to mime-db 1.45
Remove string length limit from levenshtein()
Add support for Solaris 11.4 openpty implementation.
Add scheduled builds to yaml pipeline
Keep the same JIT code for PHP-8.0 and master (workaround against PHP-8.0 ABI freeze)
Enable Azure pipeline builds on PHP-8.0
Make iconv errno support test pass on Solaris.
Eliminate more dead type stores
Removed broken php_url_encode_hash macro
Revert "Change calling convention of zval_update_constant[_ex]() to fastcall."
XFAIL test broken by timelib update
Eliminate more dead type stores
Prepare for PHP 8.1
More precise type information for datefmt_format()
Improve parameter names in ext/oci8
Eliminate more dead type stores
Eliminate dead type stores
Cleanup (expand and remove simple macros)
Update ext/imap parameter names
Update ext/snmp parameter names
Make compression_type nullable in a few more places
Update ext/soap parameter names
Updated to version 2020.2 (2020b)
Empty merge
Updated to version 2020.2 (2020b)
Empty merge
Updated to version 2020.2 (2020b)
Updated to version 2020.2 (2020b)
Empty merge
Updated to version 2020.2 (2020b)
Empty merge
Updated to version 2020.2 (2020b)
Make Phar $format and $compression arguments nullable
Accept bool in SoapClient::__doRequest
Update ext/com_dotnet parameter names
Accept bool in snmp_set_(quick|enum)_print()
Update ext/xsl parameter names
Update ext/xml parameter names
Update ext/dba parameter names
Change calling convention of zval_update_constant[_ex]() to fastcall.
Pass arguments to cdecl functions through preallocated stack slots
Add more hints for register allocator
don't display default value for variadic
Optimize out MAY_BE_LONG +/- 0 and MAY_BE_DOUBLE +/- 0.0
Update ext/ffi parameter names
Update ext/spl parameter names
Avoid namespaced class symbol clashes in gen_stub
Support "static" type in gen_stub
Update ext/tidy parameter names
Improve parameter names in ext/sqlite3
Eliminate check
Make $use_less_memory a boolean parameter
Update ext/bz2 parameter names
Update ext/pcntl parameter names
Optimize out double memory load
Update ext/sockets parameter names
Update ext/calendar parameter names
Update ext/posix parameter names
Review parameter names in ext/xmlreader
Don't separate array parameter
Expose php_during_module_startup() and php_during_module_shutdown()
Use range inference to eliminate useless comparisons
Add @generate-legacy-arginfo tag
Update PDO parameter names
Improve gen_stub.php - drop --legacy option, generate file is exists - add --help option - add debug "Saved ..." message
Review parameter names in ext/pspell
Review parameter names in ext/zlib
Throw from XmlReader::expand() if DOM extension missing
add note about is_callable change
Declare FFI\CType in namespace
Use a subrountine to check for valid OID strings
Support specifying linkage for generate-function-entries
Add partial namespace support to gen_stub
Add gen_stub --legacy flag
Review parameter names in ext/ftp
Return correct result code for division by zero
Review parameter names in ext/exif
Review parameter names in ext/enchant
Review parameter names in ext/pcre
Copy optimization for (BINARY_OP/ACCIGN + SEND_VAL)
Add UPGRADING note for substr() behavior
[ci skip] moved soap fix to 7.4.11
[ci skip] moved soap fix to 7.3.23
Review parameter names in ext/sysvshm
Review parameter names in ext/sysvsem
Review parameter names in ext/sysvmsg
Clenup BINARY_OP + SEND_VAL optimization
Add test instantiating all objects
Allow empty needle in grapheme_str*pos, grapheme_str*str
Support GC for AppendIterator
Improve parameter names in ext/xmlwriter
Backport of a partial fix for bug Bug #76982 (memory leak declaring closure in included file).
Remove deprecated functions from php-ldap
Review parameter names in ext/gettext
Review parameter names in ext/shmop
Review parameter names in ext/session
Give preference to ENTER->RECURSIVE_CALL trace over ENTER->RETURN
Review parameter names in ext/readline
Review parameter names in ext/opcache
Review parameter names in ext/json
bump version to 7.2.35-dev
Removed duplicate conditions
Revert "Use external iterator instead of via the internal pointer"
Update NEWS for 8.0.0rc2
Update NEWS for PHP 8.0.0rc1
Prepare for PHP 8.0 RC1
[ci skip] Add 7.4.11 security fixes to NEWS
[ci skip] Add 7.3.23 security fixes to NEWS
Update iconv parameter names
Warning promotion: Throw on writing invalid XML tag names
Update ext/standard parameter names
Improve parameter names in ext/ldap
Harmonize ldap_rename_ext with ldap_rename parameter names
Rename $link parameters to $ldap in ldap functions
Improve parameter naming in ldap_rename
Improve parameter naming in ldap_exop_passwd
Improve parameter naming in ldap_connect
Improve parameter naming in ldap_set_option ext/ldap/ldap.stub.php
Explicitely mark nullable strings
Remove dummy_ber parameter from ldap_first_attribute and ldap_next_attribute
Set all parameters to ldap_sasl_bind as NULL by default
Default bind dn and password to NULL in ldap_bind_ext
Default bind dn and password to NULL in ldap_bind
Make URI parameter in ldap_connect default to NULL
bump zip extension version
Promote E_NOTICE to Value/TypeError in PostgreSQL extension
Update ext/tokenizer param names
Allow tracing JIT cooperate with function JIT.
Make handling of NULL bytes in file paths more consistent (WIP)
Don't accept dir handle in Directory methods
Tracing JIT support for preloaded scripts
Remove unused variable
Update gmp+bcmath parameter names
Keep track information about used JIT trigger in ZEND_FUNC_INFO(op_array)->func_info.flags
Use external iterator instead of via the internal pointer
Make the $filter parameter of ReflectionClass::get*Constants() nullable
Reflection param renames amendment
Rename a few parameters in ext/filter
Zend parameter renames amendment
Synchronize php.ini-development and php.ini-production
Add call_user_func_array() backward incompatible change
[ci skip] typo
Do not decode cookie names anymore
Update UPGRADING
Update UPGRADING
Update NEWS & UPGRADING
Update PDO parameters for named arguments.
Move invariant type guard out of loop
Another pass making some failure states unconditional erros in PDO
Make various failure conditions in PDO unconditional errors
Do not register quoter handler in ODBC
Drop ZPP check in PDO MySQLi test
Dump class names
Promote notice to ValueError for invalid hint key
Improved trace selection rules
Promote warnings in ext/xsl
Remove unused XSL_DOMOBJ_NEW() macro
Consistently handle out of bounds offsets in iconv_strpos()
Extensions should have the final say on their compiler flags
Simplify iconv_strpos implementation
Missed opline guard
Throw warning for invalid iconv charset
Skip one more imap test under asan
Update mbstring parameter names
Make mysqli_warning constructor private
Rename mysqli parameters to be more logical
Clean up spl_fixedarray.c
Allow attributes to be applied to property/constant groups
Make constexpr compilation robust against multiple compilation
Honor strict_types=1 for attributes, improve backtraces
Do not decode cookie names anymore
Skip test with ICU version < 58
Pass zend_execute_data instead of zend_function to fcall init
Promote warning to ValueError for Spoofchecker::setRestrictionLevel()
Inverse logic in do_fetch() to reduce a level of indentation
Drop do_bind argument in do_fetch(_common)() in PDO
Use callable type in register_shutdown_function()
Rename $qualifier/$owner params to $catalog/$schema
Add proper count() parameter type
Promote a few forgotten warnings to exceptions
Update ext/odbc stub hash
Improve parameter names in ext/curl
Unify 32-bit/64-bit str_split tests
Normalize substr() behavior
Remove outdated link to bug report
Improve parameter names in ext/hash and ext/openssl
Update fileinfo parameter names
Use proper skipif section
Skip imap_lsub_basic.phpt under asan
Add option to print parameter name stats to gen_stub
Skip unnecessary unknown() frames
More precise type in mysqli_result constructor
Clear error flag instead of toggling it
Improve trace selection (avoid blacklisting of trace that may be linked).
Promote warnings to Error in IMAP extension
Replace ZEND_JIT_TRACE_STOP_RETURN_HALT and ZEND_JIT_TRACE_STOP_HALT by separate ZEND_JIT_TRACE_HALT flag.
Remove unused --temp-urlbase option from run-tests.php
Improve PDO::inTransaction() support for MySQL
Clean up file created during testing
Consistent error handling for fgetcsv/fputcsv
for consistency use  for all *Name methods
Tweak some macro definition on Windows
Promote warnings to error in DOM extension
Drop usage of E_RECOVERABLE_ERROR in Session extension
Add proper default values for optional arguments in IMAP
Refactor imap_mail()'s internal implementation to use zend_strings
Try to fix test
Handle out-of-bounds offset consistently in grapheme_* API
Skip IMAP test which chokes on ASAN build
Promote pack/unpack format errors
Convert unpack offset warning to ValueError
Use C zpp for get_class_vars()
Support uuencoding empty string
stream_bucket_new() cannot return false
stream_get_transports/wrappers cannot return false
Don't return false for empty string in soundex()
Skip if https wrapper isn't present
http_build_query() cannot fail
html_entity_decode() cannot fail
Validate phonemes parameter of metaphone()
substr_compare() cannot return false
Check string bounds in strspn/strcspn
Promote substr_replace warnings
substr_replace() cannot return false
Ficed 32-bit JIT (inconsistent CPU stack state)
Promote count() warning to TypeError
Drop -1 mode for collator_is_numeric()
Drop Hex support in numeric strings for Intl collator
Return empty array for no rows in pg_fetch_all()
Throw warning for failed object to int/float conversion
Convert exception instanceof checks to assertions
Make constant redeclaration a warning
Promote invalid field to ValueError in pgsql
Remove redundant check
Check linker compatibility directly from HMODULE
Drop some connection retries in IMAP test
pg_unescape_bytea() can only fail on OOM
Promote PDORow property write to Error
Remove dead code
Promote warnings to Error in COM extension
Synchronize GET_CLASS/GET_CALLED_CLASS opcodes with functions
Assert on unknown list entry type
Remove unnecessary check
Use proper parameter type in Closure::bindTo() signature
Improve default value handling of Exception constructors
Move arm64 job to cron
Use assertion for null-termination string
Standardize mbstring and string on using 'string' as a parameter name.
Deprecate pgsql function aliases
Initialize attributes for internal functions
Add support for `@implementation-alias` in stubs
Update README for how to setup IMAP tests
Consolidate the usage of "either" and "one of" in error messages
Only check linking in PHP_TEST_BUILD
Separate Closure::bind() implementations
Adjust the order of method modifiers in stub
Add system ID entropy API
Set-up IMAP in Azure
Drop skipifemb.inc
Support NO_BACKSLASH_ESCAPES with newer libmysqlclient
mysqli_set_charset now throws an mysqli_sql_exception when incorrect charset is provided
Assert that all switch cases are covered
Use MyISAM engine for new test
Run tidy
Apply tidy to SKIPIF and CLEAN section as well
Bug #80107 Add test for mysqli_query() fails for ~16 MB long query when compression is enabled
Cleanup observer API and add JIT support
Update the default values of xmlwriter_write_dtd_entity()
Remove support for EXT_NOP
Remove specialization of SPEC(OBSERVER) handlers
Support for ZEND_COMPILE_EXTENDED_STMT
Remove vestiges of embedded mysql from tests
Use ephemeral ports during curl tests with dev server
Support ephemeral ports in debug server
Allow http tests to run in parallel by using ephemeral ports
Remove checks for old libmysqlclient versions in tests
Update to PCRE2 10.35
Enable unixODBC in azure
Drop support for libmysqlclient < 5.5
Add missing mysqlnd checks to stubs
pdo_mysql/mysqli (native) libmysqlclient_r no-longer used
mysql: native mysql-8.0 uses _Bool
mysqli: use native api
ext/soap: Compare Set-Cookie header case-insensitively
mysqli: Promote warning in field_seek
Change int parameter types to bool when the parameter behaves as bool
Generate arginfos
Display string default values in stubs more uniformly
Display types in stubs more uniformly
Accept GMP|string|int union in GMP functions
Update xmlreader arginfo hash
Update php_xmlreader.stub.php
XMLReader::getAttributeNs() can no longer return false
Optimize code for FETCH_THIS + INIT_METHOD_CALL/ASSIGN_OBJ_OP/etc
Changed the wording of the error message
Remove unused GMP_ABS() macro
Exclude trait methods from call-graph
Avoid ubsan warning due to memcpy null
JIT for INIT_METHOD_CALL
missing fix for test for new param. name
Add some ValueErrors to ext/date
Update NEWS for 8.0.0RC1
Update NEWS for PHP 8.0.0beta4
Promote warnings to Error in MySQLi extension
fix mbfl function prototypes re-add mbfl_convert_filter_feed API re-add pointer cast
Tracing JIT for INIT_DYNAMIC_CALL (closure only)
Remove unintendedly committed test
Adjust ext/openssl parameter names
Promote a few remaining errors in ext/standard
Promote warnings to Error in SNMP extension
Check `ReflectionReference::fromArrayElement` with union types
Promote warning to Error in ODBC extension
Use ValueError instead of exceptions in SPL extension
Use normal error in SPL for uninitialized objects
Use normal error in SPL for 'An iterator cannot be used with foreach by reference'
Convert warning to assetion in MySQL PDO driver
Add missing param type to pcre reflection test
Add GC_TRY_ADDREF macro
7.3.24 is next
The next release here will be 7.4.12
micro-optimization
Renumber ZEND_ACC_... constants
Promote some warnings to ValueError in OCI8
Avoid segfault if module/extension version is not defined
Support for reference
Simplify zend_jit_pre/post_inc/dec_typed_ref() helpers
Rename zend_error_notify APIs to zend_observer_error*
JIT for PRE/POST_INC/DEC_OBJ
Promote warnings to Errors in PostgreSQL extension
Update array parameter names for named parameters
Promote Warnings to Error in PostgreSQL PDO driver
Convert Division by 0 warnings to Error per the Engine Warning RFC
JIT for ASSIGN_OBJ_OP
Convert E_ERROR to Error exception in mysqli_result iterator
Drop some dead code
Slightly improve error handling in DatePeriod::__construct()
Declare array|int and object-of-class|int types in stubs
Make mb_send_mail() consistent with mail()
Add Z_PARAM_OBJ_OF_CLASS ZPP macro
Unmark tests as XFAIL on Windows
Allocate Windows 64 shadow stack space
Remove @jit Docblock support for now due to dev-time constraints
Convert warnings to assetions in OCI PDO driver
Mark tests as XFAIL on Windows
Mark tests as XFAIL on Windows
Use Error for uninitialized SQLite object
Improve parameter handling in ext/openssl
Normalize behaviour of DNS function on Windows
Handle missing result_var in binary_op_result_type
Promote some warnings in BCMath to Errors
Use string|int union types in pgsql
Make argument type error message consistent for variadics
Also forbid null bytes in mail()
Clean up ext/session errors
Consolidate new union type ZPP macro names
Refactor ReflectionMethod::__construct()
Throw ValueError on null bytes in mb_send_mail()
Remove the duplicate line in zend_ast.c
Add missing condition on azure community job
Eliminate repeatable class guards and unnecessary IS_UNDEF property checks
JIT for ASSIGN_OBJ
Avoid gap in AST_CLASS child nodes for attributes
fix zend_hash_get_current_key_type_ex proto
fix zend_hash_get_current_key_ex proto
Simplify error type filter
Squash compile warnings the easy way
Make PDO_OCI test more resilient
Skip PDO test for Oracle
Attempt to fix bug #80014 (PHP 8.0 beta2 crashes with default JIT flags due to hardware incompatibility)
Added FFI\CType::getName() method
Eliminate unnecessary IS_INDIRECT guards
Avoid more exception checks
More pgsql func info fixes
JIT for ASSIGN_DIM[_OP] with first IS_VAR + IS_INDIRECT operand
Use proper int type for parameter
Use PGSQL_RETURN_OID() in more places
Add stub for pgsql extension
Remove deprecated pgsql signatures
Eliminate unnecessary exception checks
Promote some warnings in MBString Regexes
Promote pgsql no link to Error exception
Remove deprecated multi-parameter form of pg_connect()
Make array_multisort() signature more variadic
Test snmp on azure
Mark snmp tests as conflicting
Suppress uninitialized variable warning in snmp
Allow array_diff() and array_intersect() with single array argument
Improve error messages mentioning parameters instead of arguments
Wildcard output differences in snmp tests
Tracin JIT support for FETCH_DIM_W/RW with IS_VAR + IS_INDIRECT first operand.
Avoid use of remote_port in snmp
Pass correct op_info to zend_jit_fetch_dim()
Flesh out ZEND_HASH_REVERSE_FOREACH_* macros
JIT for FETCH_DIM_W/RW insructions
Don't handle missing value in zend_verify_arg_error()
mb_str_split is already documented on php.net
JIT for IN_ARRAY instruction.
Try to fix 32-bit setcookie tests, again
add socket_ce and socket_import_file_descriptor in public API
Suppress unused variable in snmp
Run the opcache-only configuration only for scheduled builds
Try to fix setcookie() tests on 32-bit
micro-optimization
JIT for FETCH_LIST_R
Make null byte error a ValueError
Always use PCRE for mbstring.http_output_conv_mimetypes
Promote warnings to errors for set(raw)cookie()
Support more placeholders in bless_tests.php
Require $method parameter in openssl_seal/openssl_open
Promote warnings in exif
Revert "Update libzip on macos"
Revert "Manually build re2c on macos"
decbin/decoct/dechex optimization.
Catch type errors so test completes and doesn't diff
Accept updated error number generated by the latest Oracle version
Yes, and mask the dir path too.
Adjust assignment line number for match
Reduce input size limit in execute fuzzer
Add "const". Move constant strings to read-only memory.
Promote warnings to exceptions in ext/intl
Don't allow dynamic properties on generators
Don't leave behind temporary file in bug70362.phpt
Drop support for crypt() without explicit salt
Allocate temporary PCRE match data using ZMM
Avoid large eval inputs in fuzzer
Accept zend_string instead of zval in zend_compile_string
Private/public split curl header
Remove some unnecessary HAVE_EXTNAME guards
Opcache JIT, code simplification for Haiku.
Add phpunit to community project tests
Throw on invalid mb_http_input() type
Improve handling of `#[` attributes in `php -a`
Improve handling of `#[` in `php -a`
Handle null encoding in mb_http_input()
Reenable s390x on travis
Promote warnings to exceptions in ext/ldap
Use ZPP instead of custom type checks
Use the canonical order of types in array|string ZPP error messages
Add the Z_PARAM_ARRAY_HT_OR_NULL and Z_PARAM_OBJ macros
Extract common flock code
Release call trampolines in zpp fcc
Update travis to bionic
Make gethostbyname() test more liberal
Disable InfiniteIterator class while fuzzing
Avoid duplicate octal warning during heredoc scan ahead
Avoid unnecessary IP initiliaization on trace linking
Cleanup macro/function names
Load EX(opline) in one instuction if possible
Reorder DynAsm macros (no other changes)
Error promotions in SPL
Warning to Error promotion in ext/standard
If we don't know the return address, just escape to VM, instead of adding side exit. Remove unnecessary exception checks.
Use symbolic constants in Japanese kana conversion code (not magic numbers)
Remove unused 'from' field from mbfl_buffer_converter struct
Add comment to mbfilter_tl_jisx0201_jisx0208.h
Remove unneeded function mbfl_filt_ident_common_dtor
Remove unneeded function mbfl_filt_conv_common_dtor
Refactor mbfl_convert.c
Try to fix windows build
Add Z_PARAM_ITERABLE and co
Refactor parts of SPL Dir/SplFileObject
Don't intern compiled_filename
Remove CG(filenames_table)
JIT for FE_FETCH_R
Skip test if A: drive exists
Handle memory limit error during string reallocation correctly
JIT for FETCH_CONSTANT
Reorder switch cases for consistency between zend_jit() and zend_jit_trace()
libmagic: Update patch
Update NEWS, UPGRADING
Change Attribute Syntax from @@ to #[]
Revert "libmagic: Move the allocation on the stack"
JIT for FE_FETCH_R
libmagic: Constify arg
libmagic: Move the allocation on the stack
Extend function blacklist in execute fuzzer
Micro-optimization
X86: Fast CRC32 computation using PCLMULQDQ instruction
Added missing helper
Improved JIT for VERIFY_RETURN_TYPE
Move custom type checks to ZPP
Minimal JIT support for JMP_NULL
Preallocate zval for unused result of internal function on CPU stack
Disable ifunc resolvers under dataflow sanitizer
Assert there are children in zend_generator_get_child()
Update NEWS for 8.0.0rc1
Update NEWS for PHP 8.0.0beta3
Add zend_observer API
Eliminate useless EG(exception) checks aftr FE_RESET/FE_FETCH
Add more precise type info for stubs
Eliminate some EX_CALL_INFO() checks
Check for null EX(func) in write_property
Prepend compiler warning flags to CFLAG instead to append them
Avoid null pointer UB in accel blacklist
Promote warnings to exceptions in ext/soap and ext/xmlwriter
Promote warnings to exceptions in ext/tidy
Add explicit double cast
Code cleanup in mbstring.c
Comment constants in mbfl_consts.h, remove unused ones
Add comment on mbstring East Asian Width table
Don't guard mbstring code with #ifdef HAVE_MBSTRING
Remove redundant includes from mbstring (and make sure correct config.h is used)
Remove useless definition of NULL in mbfl_string.h
Optimize php_unicode_convert_case (cuts mbstring case conversion time ~15%)
Remove unused functions from mbstring
Separate implementation of mb_{en,de}code_numericentity
Use new-style argument parsing macros in mbstring.c
Inline unneeded indirection for mbstring memory management
Additional tests for mbstring extension
Prevent com::__construct() to modify the $server_name array
Add tests for nullsafe operator on delayed oplines
More agressive "packed array" guards insertion
Check update constant failure in ReflectionClassConstant::__toString()
Perform type guard checks before IS_UNDEF checks (check IS_UNDEF during deoptimization)
Update timelib to 2020.02
Update timelib to 2020.01
Promote warnings to exceptions in ext/ftp
Update timelib to 2018.04
Add test for bug #80039
Correctly report failure in zend_handle_undef_args()
Make MAX_IFD_NESTING_LEVEL an actual nesting level
Improve error_handing replacement functions
libmagic: Update patch [ci skip]
EXTENSIONS: Update fileinfo maintainership info [ci skip]
NEWS: Add libmagic note [ci skip]
libmagic: Remove unneeded includes
fileinfo: Followup fixes
fileinfo: Upgrade to libmagic 5.39
Support cli_server.color on Windows
Avoid ubsan warning with dummy cache slot addr
Remove unnecessary cache_slot arguments
Rehash function table after disabling functions
Don't mark variadic functions as ZEND_FASTCALL
Improve type declarations for Zend APIs
Don't load IP when entering inlined function
Promote incomplete class to modification to Error
Promote ArrayObject modification during sorting to Error exception
Throw Error instead of E_ERROR when calling method on incomplete class
Remove unused BG(str_ebuf) global
Export and reuse zend_is_valid_class_name API
Use zend_string when storing incomplete class name
Store incomplete_class entry as normal global
Avoid useless IP load
Remove useless register allocations
Replace "mov %eax, %ecx; shl $1, $ecx" by "lea (%eax,%eax), %ecx"
Generate execute corpus in generate_all.php
Don't assert when comparing uninit DateTimeZone objects
Require non-negative length in stream_get_contents()
Use zend_dval_to_lval() in spl_offset_convert_to_long()
Update operands range information accoring to the taken branches and use this indormation to eliminate useless overflow checks.
Add experimental "execute" fuzzer
Allow removing non-existing key from WeakMap
Clean up strtok implementation
Eliminate ZSTR_IS_INTERNED() check
Catch potential exceptions during to string conversion
Enforce memory limit in tracked allocation mode
Check interrupt only if the link is a part of the loop.
Rename zend_jit_var_may_be_modified_indirectly() into zend_jit_var_may_alias()
Check reference guard once
Use "movaps" instead of "movsd" to copy the whole %xmm register.
Property handle read_property exception in fetch_property_address
Lowercase method name in zend_call_method()
Separate COM::__construct()s $server_name array
Drop various unused macros/APIs
Avoid socket path clash in test
Improved JIT for FETCH_DIM_R/IS and ISSET_DIM_OBJ
Prevent ResourceBundle double-construction
Prevent double-construction of NumberFormatter
Prevent double-construction of IntlGregorianCalendar
Prevent double-construction of IntlRuleBasedBreakIterator
Use guard to check if array is packed or hash
Prevent negative array index access
Avoid priniting "array [long, string] of"
Don't enable --with-mm in CI
Record information about packed arrays
Promote warnings to exceptions in ext/pcre
Infer information about packed/hash arrays and use it for JIT
Ensure RuleBasedBreakIterator constructor throws on failure
Promote warnings to exceptions in ext/simplexml
Clean up BreakIterator create_object handler
Avoid double-free
Promote warnings to exceptions in ext/shmop
Promote warnings to exceptions in ext/pcntl
Remove bogus REGISTER_LONG_CONSTANT
Remove useless same_zval function
Promote warnings to exceptions in ext/phar
Promote warnings to exceptions in ext/xmlreader
Don't return temporary from SXE write_property handler
Simplify change_node_zval implementation
Move AVOID_REFCOUNTING type info flag into a separate bit
Support for CASE_STRICT
JIT for MATCH and CASE_STRICT instructions
Promote warning to exception in ext/enchant
Promote warning to exception in ext/posix
Promote warnings to exceptions in ext/filter
Drop a spurious zend_string_release
Clean up setlocale implementation
Remove php_my_setlocale workaround
Check for duplicate names in gen_stub.php
further network libraries detection for Haiku system.
Check variadic parameter for type and duplicate name
sapi/fpm/config.m4: check for libapparmor's aa_change_profile()
Remove custom hacks from gen_stub.php after PHP-Parser upgrade
Update PHP-Parser from 4.3.0 to 4.9.0
Squash a Linux compile warning
fileinfo build fix proposal for haiku.
sqlite3 linkage issue on some systems/package combination fix.
ensure installed ini don't interfere
OCI8 classes were already renamed in 8; this now follows the new-new standard
Better register usage for ASSIGN_DIM_OP
Better registers usage
cleanup unused parameters
efree() doesn't use line number arguments (pass zeros)
micro-optimization
Promote warnings to exceptions in ext/gd
Load zval type into register to eliminate double load
Shrink live intervals of IS_VAR/IS_TMP_VAR
Update NEWS w.r.t to bugfix #79968
Check for exception after $this destruction
Promote warnings to exceptions in ext/pspell
Update NEWS for 8.0.0beta3
Update NEWS for PHP 8.0.0beta2
Don't add guard for empty()
7.3.23 is next
Prepare for 7.4.11
JIT extension may be NULL
JIT for ZEND_ISSET_ISEMPTY_CV
Promote warnings in ext/zip
Removed outdated/duplicated code
Properly patch jmp tables
Promote various OpenSSL warnings into Errors
Add `run-tests.php --context [n]` option.
Promote warnings to exceptions in ext/curl
Null terminate the sodium_crypto_kx_keypair() result
Reduce cost factors in sodium password_hash tests
Improve test portability
Avoid fatal error in session handler
Use variadic signature for PDOStatement::fetchAll()
Add a few callable method parameter types to ext/sqlite3
Don't assert mysql->mysql is non-null
Simplify mysqli_stmt_bind_param() implementation
Use normal zpp in mysqli_result::__construct()
Remove dummy aliases for mysqli constructors
Return empty string from SplFileInfo::getPathname()
Add missing initialization check to RegexIterator::getRegex()
Use ZPP callable check for ldap_set_rebind_proc()
Use ZPP callable check for Windows specific functions
Allow number_format to be only passed 3 arguments
Colorize --show-diff, only on stdout
Add some missing DatePeriod initialization checks
Add a missing null check in simplexml
Use zpp C in pg_fetch_object
Use Z_PARAM_CLASS in PDOStatement::fetchObject()
Throw Error on uninitialized XMLWriter
Throw on uninitialized SimpleXMLElement
Avoid fatal error on not found class in mysqli_fetch_object()
Check missing parameter types in stubs
Add all the missing parameter types to stubs
Use a dedicated method for MultipleIterator::countIterators()
Replace fatal error in SplFileInfo with exception
Throw Error exception in DOM_GET_OBJ
Switch to mime-db as source of extension => MIME map
Make strftime tests musl compatible
fix test expectation
Drop redundant arg count check
Support NO_COLOR environment variable in run-tests.php
Recognize gnu-libiconv location on alpine
Small CS fix
Disable report_zend_debug by default
Rename standard array function parameters to $array
Drop php_pdo_get_exception_base() function
SAVE_OPLINE in NULL_HANDLER
Autogenerate function entries for COMPersistHelper
Remove practically unused parameter
Remove unnecessary function entry array
Make sure string is NUL byte terminated.
Check the correct list
Skip bug70417.phpt if lsof output looks wrong
Check permissions in pcntl_unshare_03.phpt
Don't check specific message in socket_shutdown.phpt
Only test one error in socket_strerror() test
Remove some unnnecessary null checks in openssl
Improve X509_PKEY management in OpenSSL
Expand upgrading note for namespaced name change
proc_open/openpty: DragonFlyBSD build fix.
Revert "Make diff section contents red(-)/green(+) in run-tests.php"
Make diff section contents red(-)/green(+) in run-tests.php
Use short array values in run-tests.php
Add many missing closing PHP tags to tests
Promote various warnings to Error in GMP extension
Add colours to test results in run-tests.php
Drop '#if 0' in mysqlnd_debug() from the MySQLnd extension
Remove some duplicate iconv path logic
Remove PHP_ICONV_H_PATH
Remove giconv support
Remove more leftovers of PHP_DEFINE handling
opcache gdb: Set the EI_OSABI value for NetBSD.
Add another round of missing parameter types to stubs
Add UPGRADING.INTERNALS notes for zend_object* changes
Accept zend_object* in zend_update_property
Accept zend_object* in zend_unset_property
Accept zend_object* in zend_get_exception_base
Accept zend_object in zend_read_property
Prevent tempnam tests conflicts
Don't use PHP_DEFINE in iconv
Add more argument types to stubs
Reapply "Explicitly validate popen mode"
Revert "Explicitly validate popen mode"
Add type information to test-runner
Promote warnings to Error in FileInfo extension
Mention security in step 3, as otherwise it might be overlooked
Avoid getThis() usages in zip extension
Explicitly validate popen mode
Add GLOB_BRACE skipif
Temporarily disable s390x job
Prefer strtoll over atoll
Check ps -p availability in process title test
Add privilege check in pcntl_unshare test
Only force log startup errors if display_startup_errors disabled
Normalize error message capitalization
Backport bless_tests.php changes from PHP 8
Unset ai_canonname field in dump
Check ps -p availability in proc_nice test
Set AI_CANONNAME flag in socket_addrinfo test
Add ipv6 skipif to test
Improve privilege check in pcntl_setpriority() test
Suppress warning in pcntl_unshare skipif
Use standard types in fopencookie test
Remove posix_kill() test
Relax error message check
Check whether setlocale -a is available
Suppress warning in pcntl_unshare skipif
Use standard types in fopencookie test
Remove posix_kill() test
Relax error message check
Check whether setlocale -a is available
Update NEWS for 8.0.0beta2
Update API version numbers
Revert "Prepare for PHP 8.1"
FPM: Prevent warning with raising pm.max_children for shared pool
Prepare for PHP 8.1
Update API version numbers
Relax precision in atan test
Relax precision in hypot test
Add compatibility define for PHP_CHECK_GCC_ARG
XFAIL status-listen FPM test
Manually build re2c on macos
Add opcache.jit=tracing|function values, make on/yes/true synonym for tracing.
bump version to 7.2.34-dev
Cleanup snmp after resource to object migration
Add upgrading note for the resource to object migration in ext/sockets
Minor grammar/consistency fixes in upgrade guide
Convert resources to objects in ext/sockets
Deprecate libxml_disable_entity_loader()
Bump libxml version requirement 2.7.6 => 2.9.0
FPM: Add pm.status_listen option
Promote warnings to exceptions in ext/gettext, ext/sysvmsg and ext/xml
[RFC] Only unserialize Phar metadata when getMetadata() is called
Make http stream wrapper advertise HTTP/1.1 by default
Removed space from bug55086.phpt
set -ex on travis/compile.sh
Promote "undefined array key" notice to warning
Don't suppress notices in rfc1867 tests
[ci skip] Add missing NEWS entries
Convert SPL illegal offset type into TypeError
datetime: new format "p", same as "P" but returning "Z" for UTC
Enforce __set_state() parameter type
Update NEWS
Enable libxml entity loader test case on Windows
Drop the unneeded pointer casting
Add a bunch of missing argument types to stubs
Improve a few parameter names in ext/spl
Convert the $ttl parameter of ldap_exop_refresh() to int
Default assert.exception to 1
Bump timeouts, again
Ensure correct signatures for magic methods
Add a few missing types to stubs
Bump timeout again
Convert resources to objects in ext/openssl
Allow overriding completion in `auto_prepend_file`
Get rid of empty function entries
Implement named parameters
Throw ValueError on empty tag in enchant_broker_request_dict()
Change leftover RETURN_FALSE to RETURN_THROWS() from 4095c0a
Promote empty filename to ValueError in BZ2 extension
ValueError for empty path in stream code
Warning to ValueError promotion in Intl extension Part 1
Update i386 job to Ubuntu 20.04
Also run function jit tests on macos
Make check in RECV_VARIADIC more precise
Document the signature change of zend_get_closure_method_def()
Remove more unused func_info fields
We check result type guard in FETCH_DIM_R/IS only if index is long or string.
Add type inference support for RECV_VARIADIC
Remove unused recv_arg_info from func_info
Remove some dead code in RECV type inference
Clear result type for exit point caused by JMPZ_EX/NZ_EX
Add missing RETURN_THROWS()
Add a few missing parameter types in stubs
Skip tests leaking because of preloading failure.
Check non-zero in is_power_of_two()
Increase timeout on asan job
Improve wording and spelling consistency in UPGRADING
Force type update if the previous value was in register only
Don't skip fcall guard for method calls from trait
Amendment to OPcache base file removal
Update azure macos builds to 10.15
Run function JIT tests in nightly build
Consider op1 literal of FETCH_OBJ_R
Load ptoper IP value
Remove PHP_CHECK_GCC_ARG()
Temporary disable abstract test usage for inferring previous type of variables (previous value may be in CPU register and type of the stack slot may be inconsistent).
Prevent test case from stalling
Handle bindto error
Move patch to right place
Try to fix laravel PHP 8 incompatibility
Use inline function instead of macro
Implement 'Saner Numeric Strings' RFC:
Permit trailing whitespace in numeric strings
Refactor user streams to use ZPP class check
Check for EG(exception) after leaving function frame
Prevent incorrect optimization
Check for shm_open() in libroot to support Haiku
Implement Shorter Attribute Syntax
Move asserts to better places
Updated NEWS
fix memory leaks in ext/ldap/ldap.c
fix memory leaks in ext/ldap/ldap.c
Replace ZEND_JIT_TRACE_MAX_EXIT_COUNTERS constant by opcache.jit_max_exit_counters configuration directive
Avoid redundand EX(opline) initialization
Always record ZEND_JIT_TRACE_START and ZEND_JIT_TRACE_END
Update abstarct stack before guard to keep proper type in side trace
Consolidate Parameter Names For ext/simplexml
Consolidate Parameter Names For ext/dom
Correct assertion
Remove unused func_info variable
Automatically enable DASM_CHECKS in debug mode
Remove unused fields
More accurate checks to eliminate reloading
Emit diagnostic on dasm_link() failure
[skip ci] Add zend.exception_string_param_max_len to UPGRADING
Properly cleanup in case of abort because too many functions in single trace.
Mention that an API bump must be done with RC1
JIT internal functions with return type in debug mode
Prevent setting of incorrect continuation counters
Last pass of 'More consistent parameter names for date/time functions'
Add AST export support for nullsafe operator
type in comment
Another pass of improving ext/date argument names
PHP-7.4 is 7.4.10-dev now
[RFC] Make string length for getTraceAsString() configurable
Cleanup argument handling in ext/reflection
Support class+mask union for internal argument
More consistent parameter names for date/time functions
Result of branching opcode in side trace is unknown
Validate collator earlier during sort
Avoid UNKNOWN default in PDO::query()
Add the Z_PARAM_PATH_OR_NULL() and Z_PARAM_ZVAL_OR_NULL() macros
Make nested ternary without parentheses a compile error
Implement nullsafe ?-> operator
Address some compiler warnings.
Security: update to LiteSpeed SAPI v7.7 to address an buffer overflow, and some log message tunings.
Cleanup abstract test usage
Use zend_call_method in SoapFault::__toString()
Simplify user_stream_create_object
Allow keeping result of FETCH_DIM_R in CPU register
Cleanup SPL instantiation code
Don't record "fake" closures
Remove no longer needed stdint compatibility defines
We track only arguments of user functions on abstract stack
Avoid register reloading
Try to fix 32-bit NTS build
Make test decimal to binary conversion expectation more tolerant
Revert "Disable tracing JIT on AppVeyor"
Change type of max_num_args to uint32_t
Export zend_register_error_notify_callback() with ZEND_API
Accept unsigned instead of enum pdo_attribute_type
Reserve WIN64 shadow space
php.ini cleanup
Separate and fix deoptimization code generator
Treat namespaced names as single token
Improved number to string comparison semantics
Prevent incorrect trasing JIT TSSA usage for range() result type inference
Check dual_it validity in CallbackFilterIterator::accept()
Drop no-op dasm_growpc() call
Mark zend_jit_patch memory accesses as unaligned
Move checks after zpp in opcache_is_script_cached()
Update NEWS
Use ZPP callable check for oci_register_taf_callback()
Some cleanup in OCI8 extension for PHP 8
Disable tracing JIT on AppVeyor
Support optional comma in closure use list
Improve argument types and names in ext/ctype
Give zend_pass_function an arginfo
Tweak zend_test arginfo/zpp
Switch to tracing JIT by default
Cleanup argument handling of Zend functions and methods
add ZipArchive::CM_XZ constant (in upcoming libzip 1.8.0)
Run arginfo / zpp mismatch tests for methods as well
Check for missing arginfo arguments
Avoid recording of uninitialized variable
Check for redundant func info
Separate __call and __soapCall implementations
Add stubs for PDO PGSql extension methods
Add stubs for PDO SQLite extension methods
Disable JIT for PHPDBG
Move SOAP_SERVER_BEGIN_CODE() after zpp
Make ReflectionGenerator final
Stricter verification of func info against arg info
Adjust Doctrine workaround in community job
Switch to tracing JIT by default
Use different temporary register
Next is PHP 8.0.0beta1
Remove some redundant func info
Update NEWS for PHP 8.0.0alpha3
Remove null from highlight_* return types
Prepare for 7.4.10
Remove bool return type from assert_options
Call zpp_none in PharFileInfo::__destruct()
7.3 is now 7.3.22-dev
Use ZPP callable check in readline extension
Use ZPP callable for PDO Sqlite
Explode _php_image_output_ctx() into multiple functions
Keep CPU regesters used by deoptimizer
Preserve original ce_flags when registering class
Fetch pdo stmt after zpp
Update method signature in test
Use zpp for PDO fetch mode
Add common code for magic method assignment
Directly assign magic methods
Remove unused lc_class_name variable
Report magic method names as written
Unify magic method visibility check
Remove old code (BP_VAR_RW warning)
Unify magic method return type checks
Unify static/non-static check for magic methods
Add missing arg num check for __set_state
Clean up zend_check_magic_method_implementation
Rename OCI8 classes to use standard names so arg stub parsing works
Bump OCI8 version to 3.0 so a PHP 8 PECL release can be made
Revert "Switch to tracing JIT by default"
Switch to tracing JIT by default
Skip upload_2G.phpt if disk_free_space() <= 2GB
Use proper methods for php_user_filter implementation
Move SessionHandler sanity checks after zpp
Only set DIT type on successful initialization
Remove spurious return true from DOMXPath::registerPhpFunctions()
Use string|array type in DOMXPath::registerPhpFunctions()
Add missing zpp_none call in Exception::__wakeup
Convert SPL fatal error to Error exception
Drop useless zend_accel_script_persistable() function
Drop unused param in zend_parse_arg_class_name_or_obj()
Add error notification callbacks to UPGRADING.INTERNALS
Parse parameters in zend_test_void_return()
Some zpp cleanup in pgsql
Remove some zpp quiet uses in pgsql
Add missing image_type_to_extension() argument
Introduce error notification callbacks that are run independant of zend_error_cb
Side exit on overflow
Throw correct exception from ArrayObject sort methods
Add missing param to DatePeriod::__construct()
JMP optimization
Eliminate useless exception checks
Eliminate some reference-counting
Revert "Drop freetype from i386"
cleanup
cleanup
Enable further tests on Windows
Check type guard on result of FETCH_OBJ_R/IS instructions
#79657 was cherry-picked in 7.4.7
Ignore inheritance rules on private methods
Check type guard on result of FETCH_DIM_R/IS instructions
Remove type argument from zend_get_zval_ptr
Retrofit description of recent PR changes
Reduce scope of preload compiler_options
Check for name vs ce in a few more places
Tracing JIT for SWITCH instructions
Better support for 64-bit .aword constants
Use different scratch register
Support socketpairs in proc_open()
Remove out-dated comment
Put debug function behind ifdef
Add user upgrading note for no_separation change
Add upgrading note for crypt change
Restore warning
Use consistent types
Improved reference-counting inference
Add upgrading note
define COMPILER and ARCHITECTURE from environment
Improve output of tokens in Parse Errors
JIT for array merging
Add another doctrine workaround
Check for undef var in verify return jit
Unbork tests for PDO_Firebird
debug_zval_dump(): Don't skip recursion detection on first level
Addd upgrading notes about OCI8
Removed the "oci_internal_debug" function and its alias. Also deprecated the "ocifetchinto" function.
(ffi) fix ifdefs for non-windows systems without long double
Export php_gd_libgdimageptr_from_zval_p()
[skip ci] Consistent match test closing tags
Don't generate JSON scanner and parser during configure
Retain the original formatting character in test
Review the usage of apostrophes in error messages
Use dedicated function for illegal offset type error
Add missing addref for MATCH_ERROR operand
Promote Notice to Warning in libmagic
Add stubs for SAPIs
Enable further ext/standard/tests/file tests on Windows
Restore registers
Drop dead prototype
Add zend_wrong_parameter_error to reduce the size of ZPP macro
Enable symlink_link_linkinfo_is_link_* tests on Windows
enable ext/ldap/tests on azure
fix some ext/ldap/tests
Mark test as XFAIL for Windows/JIT/Release builds
Implement match expression
Make tracing JIT to support operator overloading independently from opcache.optimization_level ini directive.
Bad function detection
Prevent trace recorder reenterancing
Move assert() to right place
Use ZPP string|array union check in PCRE extension
Voidify some ZEND_API functions
Prevent parallel test conflicts
Remove FREE_UNFETCHED concept
Switch back to FREE_UNFETCHED_OP_DATA
Use RIP-relative addressing
Revert "Partial fixed bug #79649 (Altering disable_functions from module init corrupts memory)"
Align jumptables
Support JIT jumptables on x64
Use ZPP callable check in zend built in functions
[skip ci] Add info on how to check for PHP NULL when using the ZPP callable check
UPGRADING - note about ReflectionType::isBuiltin()
JIT support for opcache restart
Use HashTable directly instead of zval
Use small counter values for testing
Use information about recorded classes for speculative FETCH_OBJ optimization
Change zend_get_known_property_offset() into zend_get_known_property_info() and cleanup
Add declared properties to LibXMLError
Report len as -1 instead of INT_MAX
Skip special function optimization for redeclared disabled functions
Prep for 7.2.33
Prep NEWS for 7.2.32 release
More accurate reference-counter inference (with support for ext/intl/tests/bug72241.phpt)
Revert "More accurate reference-counter inference"
Handle dim_w undefined variable notice in JIT as well
Check for undef variable exception in SEND_VAR JIT
JIT support for undefined index/offset handling
Don't use deprecated curly brace offset syntax
Don't use deprecated curly brace offset syntax
Assert no exception if using NEXT_OPCODE()
Assert exception set in HANDLE_EXCEPTION()
Remove #undefs from vm_gen
Remove ZEND_VM_EXPORT functionality
Remove no_separation flag
Explicitly create references in UConverter callbacks
Don't allow separation in array functions
Don't allow separation in CallbackFilterIterator
Disallow separation in a number of callbacks
Don't allow separation in callback filter
Update NEWS for 8.0.0alpha3
Update NEWS for PHP 8.0.0alpha2
Refactor levenshtein()
Remove proto comments from C files
Remove requirements for proto comments from CODING_STANDARDS
Avoid some unnecessary uses of no_separation=0
refactor: class constants parsing
More accurate reference-counter inference
More accurate reference-counter inference
[skip-ci] Add README for ext/mysqli tests
Add string or object ZPP macros
ReflectionMethod::invoke() object is not optional
Correctly determine arg name of USER_ARG_INFO functions
[skip ci] add upgrade note
define build system and provider on Windows
display info about system used to build and its provider
Reuse warning function
Added stubs for ext/oci8
Use zend_string_equals API in a couple places
Removed already implemented TODO comment
Skip test if SeCreateSymbolicLinkPrivilege is not given
Better instruction selection
Enable readlink_realpath_* tests on Windows
JMP optimization
Enable most lstat_stat_* tests on Windows
Update php_version.h
Treat attribute argument lists like normal argument lists
Add support for forcing regeneration of arginfo files
Load constant value only if necessary
Extract test helper function for SeCreateSymbolicLinkPrivilege check
Update to PCRE2 10.35
Remove leftover debug comment
Eliminate useless exception checks
Handle SO_ options only at SOL_SOCKET level
Use correct ZPP mechanism in get_class_methods()
Allow different error message for errno 58
Skip enchant test under asan
Check that "tokenizer" extension is available in gen_stub.php
Add iterator get_gc function for generators
Add get_gc handle for object iterators
[ci skip] (Hopefully) clarify meaning
Document zend_hash_sort and zend_ts_hash_sort signature change
Add ldap_count_references()
Replace ISO_8859-* with ISO8859-* aliases for MBString
Remove generator iterator member
Revert "Update to PCRE2 10.35"
Remove bogus generator iterator dtor
Update to PCRE2 10.35
Promote warning to exception in ldap_set_rebind_proc()
Update outdated arginfo hashes
Assume offsetof() exists
Remove unnecessary ieeefp.h include
Add upgrading note for apache module name
Extract some common fuzzer code
Add unserializehash fuzzer.
Make HashContexts serializable.
Mark Keccak functions that contain expected misaligned accesses.
Move __alignof__ support check into main configure.ac.
SHA-3 Keccak_Hash: Store Keccak_HashInstance in the main context.
Improve "VirtualProtect() failed" error messages
Add ZPP macros for class name or object parameters
Move to alpha2 section
Replace EXPECTF when possible
Tracing JIT support for include() and generators
Don't record "fake" closures
Don't accept objects instead of arrays in curl
Make exit() unwind properly
Implement Attribute Amendments.
Remove restriction on method call inlining
Don't inline static call to instance method
Drop non-well formed numeric strings from math function tests
Drop non-well numeric string in Intl test
Drop non-well formed numeric strings in array function tests
Drop non-well formed numeric strings in strings function tests
Simplify and fix php-cgi detection
Haiku proc_open build fix, *pty api resides on the BSD library
Better leak fix for cgi -s / -w
Cache __unserialize() instead of unserialize()
Use cheaper zend_hash_find_ex() to handle IS_CONST index
Clear last error before shutting down memory manager
[ci skip] Various typo fixes in stub comments and CHANGES file
Move exception check to cold path.
Optimization for +/- int(0)
Improve tracing JIT for FETCH_THIS + FETCH_OBJ_*
Don't throw warning if exception thrown during dom validation
Avoid warning on exception in xsl ext
ensure all files have same date in official archives
Avoid $this check
Cheaper exception checks
Don't include trailing newline in comment token
Make sorting stable
Increase timeout on sanitizer job
Don't use iterator_funcs_ptr if it is null
Remove useless prototype for spl_heap_get_iterator
Correct comment in plain_wrapper.c (refers to microseconds, not milliseconds)
Update UPGRADING.INTERNALS re: removed --disable-inline-optimization switch
Sort extensions alphabetically
Generate tabs in generate_mime_type_map.php
Introduce InternalIterator
Make SimpleXMLElement a RecursiveIterator
Add the ZEND_ACC_NO_DYNAMIC_PROPERTIES flag to Shmop
Convert shmop resources to opaque objects
Clean house in cryptographic hashing code
Remove unnecessary PHPDoc-alike blocks from tests
Remove deprecated DES fallback in crypt()
Enforce min/max rounds in sha256/sha512 crypt
Handle *0 / *1 more consistently
Properly initialize displaysize
Add ZEND_ACC_NO_DYNAMIC_PROPERTIES flag to SysvMessageQueue
Add flag to forbid dynamic property creation on internal classes
Add test case for previous commit
Mark phpdbg test as XFAIL on Windows with JIT enabled
Skip two curl tests under asan
Include stub hash in generated arginfo files
Increase failure threshold for 'extensive backtracking' fileinfo test
Remove outdated PHPDoc from ext/enchant's stub
Improved JIT for RECV and RECV_INIT instructions
Use standard bool type in EXIF extension
Deprecate the procedural API of ext/zip
Replace exceptional code by side exit to VM
Cleanup and better register usage
Reduce amount of "cold" code generated for FETCH_OBJ_* instructions
Simplify `_crypt_extended_init_r`, and fix redundant initialization on Win32/Solaris
Remove unnecessary initialization in phpdbg webhelper
Enable dba on azure
Improve JIT for SEPARATE_ARRAY
Avoid convert_to_long_ex usage in readline
Restore XFAIL on fpm test
Update azure pipelins to ubuntu 20.04
Improve spill code
Avoid register spilling
7.3 is now 7.3.21-dev
PHP-7.4 is now 7.4.9-dev
Consistent file naming.
Use ZPP callable check for preg_replace_callback() $callback argument
Also allow casting CurlMultiHandles
Correct implementation of joaat hash.
make bcpowmod stricter by not returning false, instead throw exception
Haiku opcache jit build update
SplHeap: Avoid memcpy on overlapping pointer
sapi/fpm/config.m4: add a new --with-fpm-apparmor configure flag.
Mark failing tests as XFAIL for now
Allow casting CurlHandle to int
Clean up some unused code (and fix some comments) in build scripts
Return void from php_jpeg_emit_message()
JIT for FETCH_OBJ_W
Removing HTML Functionality from run-tests.php
Generate temporary config file when generating certificates
Forbid use of <?= as a semi-reserved identifier
MAY_BE_INDIRECT inference
check for broken libzip versions
Update libzip on macos
Call zpp in enchant_broker_*_dict_path with libenchant-2
Use ZEND_TOSTRING_FUNC_NAME
Add reference to phpweb/bin/createReleaseEntry
Un-XFAIL FPM tests
Downgrade server security level in security level test
Add SubjectAltName support to certificate generator
Add missing NEWS entry
Downgrade security level in tests using TLS < 1.2
Generate certificates for bug69215.phpt
Generate certificate for bug68920.phpt
Generate certificate for bug65729.pem
Don't generate spurious warning is security_level not supported
Remove the deprecated parameter of curl_version()
Migrate some tests to certificate generator
Don't use ternary in ini default
Use guards for ZEND_FETCH_OBJ_R/IS to eliminate repeatable checks
Remove bug48187.phpt
Update release-process.md wrt. new bin/createReleaseEntry
Use sha256 as digest algorithm in certificate generator
Remove unneeded --disable-inline-optimization build parameter
Suppress zend signals check in two readline tests
Convert resources to objects in ext/zlib
Improve error messages of ext/zlib
Use zend_is_constructor()
Add ZVAL_OBJ_COPY macro
Convert CURL resources to objects
Update CREDITS
Improved JIT for SEPARATE_ARRAY
Tracing JIT support for PHP references in ASSIGN instruction
Add mbregex skipif
cleanup
Use ZEND_UNREACHABLE() instead of ZEND_ASSERT(0)
Eliminate a dead check
Tracing JIT support for PHP references in array related instructions
Convert resource to object in Sysvshm extension
FR #79344: xmlwriter_write_attribute_ns: $prefix should be nullable
Remove debug code from usleep()
Use "lea" to add/sub register with constant
Improved JIT for ZVAL_COPY_DEREF
Optimize parallel test runner startup
Implements an openpty wrapper for solaris based systems
Made sure zpp is always called and refactored some existing zpp calls.
Added JIT debug flag to dump the size of generated code (opcache.jit_debug=0x200)
Added note
Change GC_COLLECTABLE flag into GC_NOT_COLLECTABLE to simplify GC_MAY_LEAK() check
FETCH_FIM_R/IS JIT improvement
Drop freetype from i386
Use shared setup.yml on azure
Use GC stack in nested data removal
Avoid out of range float to int cast in exif
Suppress deprecation warning in sockets.c
Revert accidental change
Initialize indentation_uses_spaces field
Move label to correct position
Use unused attribute for _dummy
Update fuzzer readme
Use cheaper variant of zend_hash_index_find()
Update NEWS wrt. bug 79681
More efficient check for valid class name
Explicitly start postgres on azure
Also support absolute Windows filenames
Simplify spl_autoload_perform() implementation
Remove called_scope inheritance in zend_call_method()
Remove autoload_running flag
Cleanup SPL autoload implementation
Control VCRT leak reporting via environment variable in debug builds
Setup RETURN counters for nested frames
Partial fixed bug #79649 (Altering disable_functions from module init corrupts memory)
A helper to trace executed source lines
Tracing JIT support for megamorphic calls
Avoid unnecessary linking of Windows DLLs
Remove obsolete __lambda_func handling
[ci skip] Update NEWS
Back up fake_scope in zend_call_function
Add zend_call_known_function() API family
Tracing JIT support for real dynamic calls
Use standard boolean type as zend_bool typedef
Remove some special-casing in zend_call_method()
Add missing terminators in zend_language_parser.y
Make zend_argument_error_variadic static
Add helper APIs for maybe-interned string creation
Optimize out no-op `yield from` statements
Don't allow variables as attribute name
Constify char * arguments of APIs
Disable mysqlnd compression on msan build
[skip ci] typo
Deprecate function aliases in oci8 extension.
Update NEWS and UPGRADING for the OpenSSL ext CMS addition
Add support for Cryptographic Message Syntax (CMS)
Add $filter parameter for ReflectionClass::(getConstants|getReflectionConstants)
Allow defining of uname value for reproducible builds
Remove duplicate zend_try
move comment
Add tests to check mismatching function signatures
Refactor IntlBreakIterator::next() handling
Convert code path which should never happen to assertion
encode param is optional
Remove unnecessary "poo" rmdirs
bump zip version
Implement "Constructor Promotion" RFC
micro-optimization
Drop hard-coded /W3 default in favor of custom CFLAGS
Update intl test suite for ICU 67.1
Free attribute validators on shutdown
Don't leak attributes on internal classes
Respect --program-prefix/suffix when installing phar
Pass zend_string message to zend_error_cb
Avoid useless "mov"
in_array() avoid internal property access as we have the arrlen already
Add upgrading note for Attributes RFC
Add Attributes
Add guard for FETCH_DIM_FUNC_ARG
Prefer shorter x86 instructions
Implement #47074: phpinfo() reports "On" as 1 for the some extensions
Improved tracing JIT for FETCH_OBJ_R/IS
Remove MYSQLND_COMPRESSION_WANTED define
mysqlnd: Remove unnecessary check for HAVE_ZLIB
Tracing JIT for FETCH_DIM_FUNC_ARG and FETCH_OBJ_FUNC_ARG when they are used in READ mode (to pass by value).
"call_info" doesn't matter
Avoid useless register reload
Avoid useless REFCOUNTED check
Use cheaper zend_rethrow_exception() instead of zend_throw_exception_internal()
Report len as -1 instead of INT_MAX
Skip new watch point test under asan
Handle VM interrupts after DO_ICALL through side exits
%d out token IDs in test
Avoid reference counting when RETURN CV
Added missed helper
Skip new test case on Windows when JIT is enabled
Tracing JIT support for indirect CV modification (may be incomplete)
Afdded misse MAY_BE_ARRAY_* flags
Add some mixed types
Add UPGRADING note for pty support
Add UPGRADING note for xmlrpc unbundling
Move upgrading note for mixed
update node-fetch url
Use ZPP callable check for spl_autoload_register.
Unbundle ext/xmlrpc
Add upgrading notes about the deprecated functionality in ext/enchant
Convert enchant resources to opaque objects
Support libzip 1.6 on Windows
Allow tracing JIT generate code when function exits from VM (e.g. for magic __get/__set)
Remove json checks in fuzzer SAPI
Don't add guards that are not going to be checked
Clean up calls to extension_loaded('json') in tests
Build fix for newer versions of NetBSD.
Ensure Exception::getFile/getLine return type is correct
Run Symfony tests in per-component
Re-enable Symfony test on PHP 8
Make Exception::$previous a typed property
Make Exception::$trace typed array property
Avoid recording of uninitialized types. VM doesn't set Z_TYPE() for IS_VAR when passes class_entry reference.
Add some mixed parameter types and fix UNKNOWN default values in ext/xmlrpc
Extract code for declaring Exception/Error properties
Convert Exception::getMessage() result to string
Split "opcache.jit_max_recursion_unroll" into "opcache.jit_max_recursive_calls" and "opcache.jit_max_recursive_returns". It's possible to disable recording of "recursive return loops" setting opcache.jit_max_recursive_returns to 0.
Use automatic port assignment in socket_import/export test
Add a side exit on enter to function if it may be called with different number of arguments.
Keep information about SEND_UNPACK/SEND_ARRAY in call_info
always build json statically
[RFC] Always enable JSON support in php 8.0
Mark several phpdbg tests as xfail
Add support for * width and precision in printf()
Add support for %h and %H in printf()
Return empty array instead of null from enchant APIs
Tweak style and grammar in proc_open.c
Avoid compiler warnings in proc_open.c
Set proper jit_extension for inherited methods
Let's try to fix the JIT compiler warning
Improve type error messages when an object is given
Enable phpdbg tests on AppVeyor
Make phpdbg test portable
Allow generators to have a real return type of `mixed` or `object`
Add (expected) release date, and new header for 7.4.8
This bug fix was cherry picked into 7.4.6
Support catching exceptions without capturing them to variables
Respect typed references in catch assignment
Clarify ZEND_CATCH code
Improve language in error messages
7.3.20 will be next
proc_open FreeBSD build fix
Annotate internal functions with the mixed type
Promote warning related to operator overloading in ext/gmp to an exception
ZEND_ACC_IMMUTABLE may be reset for closures
Keep trace number in EG(jit_trace_num) instead of EG(reserved)[zend_func_info_rid]
Check for ZEND_HANDLE_EXCEPTION opcode before accessing opline trace info.
Replace warning code by side exit to VM
Reorder conditions to save one instruction in recursive return loop
PGSQL and POD_SQL: don't include pg_config.h
Fail in `./configure` when no opcache shm backends exist
Refactor ZPP API to use uint32_t as everywhere else
[skip-ci] Update UPGRADING
Remove depreacted curly brace offset syntax
Show diffs for failed tests on Azure CI
Add support for the mixed type
Raise ext/pgsql requirements to PostGreSQL 7.4
Prevent CGG reordering if hanlers order is defined by zend_vm_order.txt
run-tests: refactor
run-tests: echo message and exit if no tests found
Use EX(run_time_cache) instead of RUN_TIME_CACHE(&EX(func)->op_array)
simplification
Allow counter settings to be "zero" to disable corresponding counter
Missed label
Better condition
Prefer already cached version of the script
More [-Wundef] warnings fixed in POSIX extension
Add --enable-memory-sanitizer flag
[skip ci] Add a README for Opcache's JIT.
Add file cache job on azure
Add --file-cache-prime/use options to run-tests
Update msan symbolizer path
Generate function entries for ext/zip
Slightly deduplicate run-tests code
Add support for replaying warnings in opcache
Don't require rc=1 for function static variables
Disable JIT in file cache test
Tracing JIT SHM data initilaizarion must be done at MINIT
typo
Make number of root and side traces configurable
Use light version of zend_array_destroy() to free arrays without refcounted elements and string indexes.
Bump version
Separate common code
Generate method entries for Closure
Make JIT parameters configurable through opcache.jit_... options
Extract zend_foreach_op_array()
Keep ZEND_FUNC_INFO() for all run-time JIT triggers
Put Xdebug 3 into 'off' mode for run-tests.php
Put Xdebug 3 into 'off' mode for run-tests.php
Wrong condition
Tracing JIT with -O1 doesn't need to do type inference and abstract stack maintaining
func_info should be empty
JIT refactoring to allow run-time changes of JIT options (triggers, optimization_level, debug flags, etc)
Improve error messages for invalid property access
relax test (TS issue)
Adjust bogus checks in FPM as HAVE_FPM_LQ is always defined
Drop check for HAVE_NSLDAP
Use ZEND_FCI_INITIALIZED macro
Remove some uses of zend_inline_hash_func
fixed typo of bug id (#79599)
master doesn't been affected since we are not passing errcontext now
Added HALT symbol
Remove unused variable
Improve error message for deprecated methods
Remove generated zend_jit_x86.c upon make distclean
Check compatibility with proper runtime DLL
Canonicalize bison error during ini parsing
Add stubs for some SAPIs
Tracing JIT support for delayed call chain
Convert resource to object in Sysvmsg
Avoid duplicating the proc_open cleanup logic
Further refactoring of proc_open.c
Don't leak memory if wrong resource type is passed to proc_open
Add PTY support to proc_open (again after 16 long years)
Properly detect CRC32 APIs on aarch64 from configure
Removed pure zpp tests in the imap extension
Allow null callback to array_filter()
Set "hybrid_ret_counters" only after links to "function entry" traces.
Revert "doc for enchant Object move"
Revert "convert enchant resources to objects of new classes - EnchantBroker - EnchantDict add OO interface deprecate enchant_broker_free* (use unset instead) deprecate ENCHANT_MYSPELL and ENCHANT_ISPELL constants"
Revert "add myself as enchant maintainer"
doc for enchant Object move
convert enchant resources to objects of new classes - EnchantBroker - EnchantDict add OO interface deprecate enchant_broker_free* (use unset instead) deprecate ENCHANT_MYSPELL and ENCHANT_ISPELL constants
Assert on unknown type in zend_get_type_by_const()
Use zend_zval_type_name() API where possible
Rename zend_zval_get_type() API
Convert resource to object in XML-RPC extension
Better trace_buffer packing
Honor script time limit when calling shutdown functions
Use new Fast ZPP macros for string|int parar types
utime is always available on Windows
skip when mbstring missing (no warning)
run-tests: extract usage message
run-tests: cs fixes (cleanup)
Replace zend_jit_trace_info.loop_kind by zend_jit_trace_info.flags
Prevent usage of uninitialized class entry
Test setting SplDoublyLinkedList iterator mode to IT_MODE_LIFO
SplDoublyLinkedList uses iteration flags in iterator struct
Remove useless prototype for spl_dllist_get_iterator
Display errors in shutdown function timeout test
zend_timeout is not a signal handler function
Drop multi_convert_* APIs
Trim trailing whitespaces and fix code style
run-tests: remove use of FILE_BINARY constant
Remove zend_qsort
Skip test on big-endian architectures
Avoid useless manual instruction encoding
Move EG(vm_interrupt) checks at the end of the trace loops
[ci skip] Update NEWS
bump version to 7.2.32-dev
Update NEWS
Refactor mb_substitute_character()
Deprecate old ReflectionParameter type declaration APIs
Remove old ARG_COUNT() macro
Update AppVeyor for enchant-2
Don't reset SIGG(running) when calling zend_on_timeout
Use standard key behavior in array_column()
Only use ifunc resolvers if __builtin_cpu_supports+init available
Reapply "Remove configure checks for supported instruction sets"
Add get_resource_id() function
Use supported printf format on Win64
Don't check directory atime in lstat_stat_variation10.phpt test
Add `pkg-config` to the build list
drop use of extract_epi16
Skip test if bigint type is unsupported by active TDS version
Set non-default error mode to maintain expected behavior
Update FreeTDS version detection related to bug #72969
Make float to string casts locale-independent
Use SSE2 instructions do url_encode
cleanup
Change parameter meaning.
Use proper "cost"
Avoid loop throgh side_exit from the first trace instruction.
Ensure ctype_string is NULL for C locale
More accurate tracing JIT for RETURN with unknown return address
Rename locale_string to ctype_string
Remove redundant htmlentities() tests
Folder marks
Really fix test case
Evaluate str_starts_with and str_ends_with on constants
Don't respect mbstring.internal_encoding in htmlentities()
Add quiet parameter to internal HTML entities API
Clean up determine_charset() implementation
Throw warning if invalid internal_encoding ini is specified
Prevent taking side traces for exceptional cases. Always exit to VM interpreter.
Remove no_language from mbfl_string
Only allow "pass" as input/output encoding
Rename the recently introduced Sysvsem class to SysvSemaphore
Return false from failed mb_convert_variables()
Enable test on Windows
Avoid Program Counter guard in side trace started from Fake Init Fcall guard.
Use int|string Fast ZPP macro in Reflection
Initial support for IS_INDIRECT. Avoid type guards for IS_INDIRECT.
Promote warning to exception in ZipArchive::extractTo()
Drop BF_ASM constant as it's always 0
Remove out-dated comments
Convert resource to object in ext/sysvsem
Careful cleanup
add myself as enchant maintainer
enchant: bump license version
Add zend_array_release() function
Revert "Move declaration at top of the block"
Move declaration at top of the block
Use correct variable
Make numeric operations on resources, arrays and objects type errors
Add str_starts_with() and str_ends_with()
Spec mbfl allocators as infallible
Remove persistent allocators from libmbfl
Change the default PDO error mode to exceptions
Perform isupper check using sse2 as well
Extract one more function from proc_open() implementation
Clean up proc_open() implementation
Remove unused is_persistent flag
Use ZPP int|string and add ValueError for Windows codepages
Add basic sapi_windows_cp_conv() test
Use libenchant2 if available on Windows
Use libenchant-2 when available
Use ZPP check for string|int|null arguments in array_column()
Add Fast ZPP string|int type check
Don't raise bogus warning if writing completely failed
Remove is_persistent flag from proc_open implementation
Convert UNKNOWN default values to null in ext/date
Convert UNKNOWN default values to null in ext/calendar
Convert UNKNOWN default values to null in ext/bcmath
Remove the deprecated is_real() function
Avoid spurious failures of MySQL INSERT packet overflow test
Try to make regression test for Bug #69900 consistent
Better handling of IS_UNDEF variables
Replace ZEND_ASSERT() by conditional compilation abort. Prevent endless loop through ESCAPE code.
Use ascii lowercase if locale is default C
Do not inherit LC_CTYPE locale from environment
Revert "Insert one more debug output"
Completely remove disabled functions from function table
Revert "Show eventual output of clean sections"
doc enchant changes
remove deprecated call and deprecate function to be removed in libenchant v2 add LIBENCHANT_VERSION constant
Code tweaks: Remove unneeded semicolons
Treat invalid characters in basename() consistently
Clean up naming in basename() implementation
Improved tracing JIT for nested calls
Reduce test parallelism on ARM64 CI
manage ZEND_DEP_FALIAS in gen_stub
Pass worker ID to clean scripts
white space fixes
JIT: Save opline before calling zend_timeout
Remove redundant addref+dtor
Remove dead code
Make 045.phpt busy wait
Enclose contents of CLEAN sections in PHP tags
Insert one more debug output
Check `__set_state` structure
Allow optional trailing comma in parameter list
Show eventual output of clean sections
Less conservative fix
Clarify that FFI::cdef() does not return NULL
Improve JIT code for FCALL with "fake" INIT and avoid fcall_guard if possible.
Bump version
Folder mark
Use ascii lowercase if locale is default C
update NEWS
Also zend_str_tolower_dup_ex
Use EXPECT instead of EXPECTF when possible

EXPECTF logic in run tests is considerable, so lets avoid it
# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
#
# On branch tests/use-simpler-expect-section
# Your branch is behind 'fork/tests/use-simpler-expect-section' by 1 commit, and can be fast-forwarded.
#   (use "git pull" to update your local branch)
#
# Changes to be committed:
#	modified:   Zend/tests/005.phpt
#	modified:   Zend/tests/bug27669.phpt
#	modified:   Zend/tests/bug51827.phpt
#	modified:   Zend/tests/bug63206.phpt
#	modified:   Zend/tests/bug63206_1.phpt
#	modified:   Zend/tests/bug63206_2.phpt
#	modified:   Zend/tests/incompat_ctx_user.phpt
#	modified:   Zend/tests/instanceof_001.phpt
#	modified:   Zend/tests/unexpected_ref_bug.phpt
#	modified:   ext/date/tests/012.phpt
#	modified:   ext/date/tests/DatePeriod_wrong_recurrence_on_constructor.phpt
#	modified:   ext/date/tests/DateTimeZone_listAbbreviations_basic1.phpt
#	modified:   ext/date/tests/date_parse_001.phpt
#	modified:   ext/date/tests/date_parse_error.phpt
#	modified:   ext/date/tests/gmmktime_basic.phpt
#	modified:   ext/date/tests/mktime_error.phpt
#	modified:   ext/date/tests/timezone_abbreviations_list_basic1.phpt
#	modified:   ext/fileinfo/tests/finfo_set_flags_basic-mb.phpt
#	modified:   ext/fileinfo/tests/finfo_set_flags_basic.phpt
#	modified:   ext/filter/tests/007.phpt
#	modified:   ext/filter/tests/008.phpt
#	modified:   ext/filter/tests/010.phpt
#	modified:   ext/hash/tests/hash_hkdf_edges.phpt
#	modified:   ext/hash/tests/hash_hmac_file_basic.phpt
#	modified:   ext/json/tests/json_last_error_msg_error.phpt
#	modified:   ext/libxml/tests/bug76777.phpt
#	modified:   ext/pcre/tests/preg_replace_error2.phpt
#	modified:   ext/pcre/tests/split2.phpt
#	modified:   ext/phar/tests/phar_isvalidpharfilename.phpt
#	modified:   ext/phar/tests/pharfileinfo_chmod.phpt
#	modified:   ext/phar/tests/pharfileinfo_setmetadata.phpt
#	modified:   ext/phar/tests/stat2_5.3.phpt
#	modified:   ext/posix/tests/posix_getgrgid_error.phpt
#	modified:   ext/posix/tests/posix_getpgid_error.phpt
#	modified:   ext/posix/tests/posix_getpwuid_error.phpt
#	modified:   ext/posix/tests/posix_getsid_error.phpt
#	modified:   ext/posix/tests/posix_initgroups.phpt
#	modified:   ext/posix/tests/posix_kill_error.phpt
#	modified:   ext/posix/tests/posix_strerror_error.phpt
#	modified:   ext/reflection/tests/ReflectionClass_hasProperty_002.phpt
#	modified:   ext/reflection/tests/ReflectionMethod_getClosure_error.phpt
#	modified:   ext/reflection/tests/ReflectionMethod_invokeArgs_error3.phpt
#	modified:   ext/reflection/tests/ReflectionObject_getName_basic.phpt
#	modified:   ext/reflection/tests/ReflectionProperty_isDefault_basic.phpt
#	modified:   ext/reflection/tests/ReflectionProperty_setValue_error.phpt
#	modified:   ext/session/tests/bug79221.phpt
#	modified:   ext/session/tests/session_cache_limiter_error.phpt
#	modified:   ext/spl/tests/bug61347.phpt
#	modified:   ext/spl/tests/fileobject_005.phpt
#	modified:   ext/spl/tests/iterator_045.phpt
#	modified:   ext/spl/tests/regexIterator_setMode_error.phpt
#	modified:   ext/spl/tests/spl_heap_is_empty_basic.phpt
#	modified:   ext/sqlite3/tests/sqlite3_40_setauthorizer.phpt
#	modified:   ext/sqlite3/tests/sqlite3stmt_getsql_expanded.phpt
#	modified:   ext/standard/tests/array/005.phpt
#	modified:   ext/standard/tests/array/009.phpt
#	modified:   ext/standard/tests/array/array_diff_assoc_error.phpt
#	modified:   ext/standard/tests/array/array_diff_error.phpt
#	modified:   ext/standard/tests/array/array_diff_key_error.phpt
#	modified:   ext/standard/tests/array/array_filter.phpt
#	modified:   ext/standard/tests/array/array_filter_variation10.phpt
#	modified:   ext/standard/tests/array/array_key_exists_variation3.phpt
#	modified:   ext/standard/tests/array/array_map_error.phpt
#	modified:   ext/standard/tests/array/array_merge.phpt
#	modified:   ext/standard/tests/array/array_push.phpt
#	modified:   ext/standard/tests/array/array_slice.phpt
#	modified:   ext/standard/tests/array/array_unshift.phpt
#	modified:   ext/standard/tests/array/array_walk.phpt
#	modified:   ext/standard/tests/array/array_walk_error2.phpt
#	modified:   ext/standard/tests/array/array_walk_recursive1.phpt
#	modified:   ext/standard/tests/array/array_walk_recursive_error2.phpt
#	modified:   ext/standard/tests/array/array_walk_recursive_variation7.phpt
#	modified:   ext/standard/tests/array/array_walk_variation7.phpt
#	modified:   ext/standard/tests/array/uasort_variation8.phpt
#	modified:   ext/standard/tests/array/usort_variation8.phpt
#	modified:   ext/standard/tests/assert/assert_variation.phpt
#	modified:   ext/standard/tests/file/auto_detect_line_endings_1.phpt
#	modified:   ext/standard/tests/file/auto_detect_line_endings_2.phpt
#	modified:   ext/standard/tests/file/basename.phpt
#	modified:   ext/standard/tests/file/fscanf.phpt
#	modified:   ext/standard/tests/file/fscanf_variation10.phpt
#	modified:   ext/standard/tests/file/is_dir_variation3.phpt
#	modified:   ext/standard/tests/file/is_executable_error.phpt
#	modified:   ext/standard/tests/file/is_executable_variation3.phpt
#	modified:   ext/standard/tests/file/is_file_variation3.phpt
#	modified:   ext/standard/tests/file/is_readable_error.phpt
#	modified:   ext/standard/tests/file/is_readable_variation3.phpt
#	modified:   ext/standard/tests/file/is_uploaded_file_basic.phpt
#	modified:   ext/standard/tests/file/is_writable_error.phpt
#	modified:   ext/standard/tests/file/is_writable_variation3.phpt
#	modified:   ext/standard/tests/file/move_uploaded_file_basic.phpt
#	modified:   ext/standard/tests/general_functions/get_include_path_basic.phpt
#	modified:   ext/standard/tests/general_functions/include_path.phpt
#	modified:   ext/standard/tests/general_functions/is_array.phpt
#	modified:   ext/standard/tests/general_functions/is_bool.phpt
#	modified:   ext/standard/tests/general_functions/is_float_64bit.phpt
#	modified:   ext/standard/tests/general_functions/is_int_64bit.phpt
#	modified:   ext/standard/tests/general_functions/is_null.phpt
#	modified:   ext/standard/tests/general_functions/is_numeric.phpt
#	modified:   ext/standard/tests/general_functions/is_object.phpt
#	modified:   ext/standard/tests/general_functions/is_scalar.phpt
#	modified:   ext/standard/tests/general_functions/is_string.phpt
#	modified:   ext/standard/tests/general_functions/ob_get_length_basic.phpt
#	modified:   ext/standard/tests/general_functions/php_uname_error.phpt
#	modified:   ext/standard/tests/general_functions/print_r.phpt
#	modified:   ext/standard/tests/general_functions/print_r_64bit.phpt
#	modified:   ext/standard/tests/general_functions/var_dump_64bit.phpt
#	modified:   ext/standard/tests/general_functions/var_export-locale.phpt
#	modified:   ext/standard/tests/image/image_type_to_extension.phpt
#	modified:   ext/standard/tests/math/lcg_value_basic.phpt
#	modified:   ext/standard/tests/network/inet.phpt
#	modified:   ext/standard/tests/network/ip_x86_64.phpt
#	modified:   ext/standard/tests/random/random_int.phpt
#	modified:   ext/standard/tests/serialize/bug45706.phpt
#	modified:   ext/standard/tests/streams/bug61115.phpt
#	modified:   ext/standard/tests/streams/bug78662.phpt
#	modified:   ext/standard/tests/streams/stream_set_timeout_error.phpt
#	modified:   ext/standard/tests/strings/chr_error.phpt
#	modified:   ext/standard/tests/strings/fprintf_error.phpt
#	modified:   ext/standard/tests/strings/htmlentities24.phpt
#	modified:   ext/standard/tests/strings/htmlspecialchars.phpt
#	modified:   ext/standard/tests/strings/ltrim.phpt
#	modified:   ext/standard/tests/strings/metaphone.phpt
#	modified:   ext/standard/tests/strings/parse_str_basic1.phpt
#	modified:   ext/standard/tests/strings/parse_str_basic3.phpt
#	modified:   ext/standard/tests/strings/printf_error.phpt
#	modified:   ext/standard/tests/strings/rtrim.phpt
#	modified:   ext/standard/tests/strings/soundex.phpt
#	modified:   ext/standard/tests/strings/sprintf_variation15.phpt
#	modified:   ext/standard/tests/strings/sscanf_error.phpt
#	modified:   ext/standard/tests/strings/str_ireplace.phpt
#	modified:   ext/standard/tests/strings/stristr.phpt
#	modified:   ext/standard/tests/strings/strrchr_variation1.phpt
#	modified:   ext/standard/tests/strings/strrchr_variation2.phpt
#	modified:   ext/standard/tests/strings/strtolower.phpt
#	modified:   ext/standard/tests/strings/strtoupper1.phpt
#	modified:   ext/standard/tests/strings/strval_error.phpt
#	modified:   ext/standard/tests/strings/substr.phpt
#	modified:   ext/standard/tests/strings/trim1.phpt
#	modified:   ext/standard/tests/strings/vfprintf_error1.phpt
#	modified:   ext/standard/tests/time/strptime_error.phpt
#	modified:   ext/tokenizer/tests/001.phpt
#	modified:   ext/xmlreader/tests/static.phpt
#	modified:   ext/xmlwriter/tests/bug41326.phpt
#	modified:   tests/output/stream_isatty_err.phpt
#	modified:   tests/output/stream_isatty_in-err.phpt
#	modified:   tests/output/stream_isatty_in-out-err.phpt
#	modified:   tests/output/stream_isatty_in-out.phpt
#	modified:   tests/output/stream_isatty_out-err.phpt
#	modified:   tests/output/stream_isatty_out.phpt
#
# Changes not staged for commit:
#	modified:   run-tests.php
#
# ------------------------ >8 ------------------------
# Do not modify or remove the line above.
# Everything below it will be ignored.
diff --git a/Zend/tests/005.phpt b/Zend/tests/005.phpt
index f4abfb6c51..413f3205ad 100644
--- a/Zend/tests/005.phpt
+++ b/Zend/tests/005.phpt
@@ -13,7 +13,7 @@ var_dump(strcasecmp("01", "01"));
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 int(0)
 int(-3)
 int(-1)
diff --git a/Zend/tests/bug27669.phpt b/Zend/tests/bug27669.phpt
index 7067c23e0d..9cd845e337 100644
--- a/Zend/tests/bug27669.phpt
+++ b/Zend/tests/bug27669.phpt
@@ -10,5 +10,5 @@ Bug #27669 (PHP 5 didn't support all possibilities for calling static methods dy
     $y[0] = 'hello';
     A::{$y[0]}();
 ?>
---EXPECTF--
+--EXPECT--
 Hello World
diff --git a/Zend/tests/bug51827.phpt b/Zend/tests/bug51827.phpt
index 6c3d721716..1a2d9bdf39 100644
--- a/Zend/tests/bug51827.phpt
+++ b/Zend/tests/bug51827.phpt
@@ -13,7 +13,7 @@ register_shutdown_function('ABC');
 register_shutdown_function('exploDe');
 
 ?>
---EXPECTF--
+--EXPECT--
 int(1)
 
 Fatal error: Uncaught ArgumentCountError: explode() expects at least 2 parameters, 0 given in [no active file]:0
diff --git a/Zend/tests/bug63206.phpt b/Zend/tests/bug63206.phpt
index dc7bb1fd1d..6aba55eca1 100644
--- a/Zend/tests/bug63206.phpt
+++ b/Zend/tests/bug63206.phpt
@@ -22,7 +22,7 @@ set_error_handler(function() {
 $triggerNotice1++;
 $triggerNotice2++;
 ?>
---EXPECTF--
+--EXPECT--
 Second handler
 Internal handler
 Second handler
diff --git a/Zend/tests/bug63206_1.phpt b/Zend/tests/bug63206_1.phpt
index f08f913824..d054211638 100644
--- a/Zend/tests/bug63206_1.phpt
+++ b/Zend/tests/bug63206_1.phpt
@@ -22,5 +22,5 @@ restore_error_handler();
 
 $triggerNotice++;
 ?>
---EXPECTF--
+--EXPECT--
 Second handler
diff --git a/Zend/tests/bug63206_2.phpt b/Zend/tests/bug63206_2.phpt
index 7a2bf38543..a4a67f577e 100644
--- a/Zend/tests/bug63206_2.phpt
+++ b/Zend/tests/bug63206_2.phpt
@@ -22,5 +22,5 @@ restore_exception_handler();
 
 throw new Exception();
 ?>
---EXPECTF--
+--EXPECT--
 Second handler
diff --git a/Zend/tests/incompat_ctx_user.phpt b/Zend/tests/incompat_ctx_user.phpt
index 8c7461e4f7..3fe0456175 100644
--- a/Zend/tests/incompat_ctx_user.phpt
+++ b/Zend/tests/incompat_ctx_user.phpt
@@ -16,5 +16,5 @@ try {
     echo "Exception: " . $e->getMessage() . "\n";
 }
 ?>
---EXPECTF--
+--EXPECT--
 Exception: Non-static method A::foo() cannot be called statically
diff --git a/Zend/tests/instanceof_001.phpt b/Zend/tests/instanceof_001.phpt
index 27170420f0..02b7d59baf 100644
--- a/Zend/tests/instanceof_001.phpt
+++ b/Zend/tests/instanceof_001.phpt
@@ -17,7 +17,7 @@ var_dump($c[0] instanceof stdClass);
 var_dump(@$inexistent instanceof stdClass);
 
 ?>
---EXPECTF--
+--EXPECT--
 bool(true)
 bool(true)
 bool(true)
diff --git a/Zend/tests/unexpected_ref_bug.phpt b/Zend/tests/unexpected_ref_bug.phpt
index 0d78410d1a..172b1e6224 100644
--- a/Zend/tests/unexpected_ref_bug.phpt
+++ b/Zend/tests/unexpected_ref_bug.phpt
@@ -15,5 +15,5 @@ $my_var = str_repeat("A", 64);
 $data = call_user_func_array("str_replace", array(&$my_var, new Test(), "foo"));
 echo "Done.\n";
 ?>
---EXPECTF--
+--EXPECT--
 Done.
diff --git a/ext/date/tests/012.phpt b/ext/date/tests/012.phpt
index ee8faf1c00..0997ef047c 100644
--- a/ext/date/tests/012.phpt
+++ b/ext/date/tests/012.phpt
@@ -13,7 +13,7 @@ var_dump(date_isodate_set($dto, 2006, 100, 15));
 var_dump($dto->format("Y/m/d H:i:s"));
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 object(DateTime)#1 (3) {
   ["date"]=>
   string(26) "2006-01-23 00:00:00.000000"
diff --git a/ext/date/tests/DatePeriod_wrong_recurrence_on_constructor.phpt b/ext/date/tests/DatePeriod_wrong_recurrence_on_constructor.phpt
index 715ea63dc9..f96753b019 100644
--- a/ext/date/tests/DatePeriod_wrong_recurrence_on_constructor.phpt
+++ b/ext/date/tests/DatePeriod_wrong_recurrence_on_constructor.phpt
@@ -14,6 +14,6 @@ try {
     echo $exception->getMessage(), "\n";
 }
 ?>
---EXPECTF--
+--EXPECT--
 DatePeriod::__construct(): The recurrence count '0' is invalid. Needs to be > 0
 DatePeriod::__construct(): The recurrence count '-1' is invalid. Needs to be > 0
diff --git a/ext/date/tests/DateTimeZone_listAbbreviations_basic1.phpt b/ext/date/tests/DateTimeZone_listAbbreviations_basic1.phpt
index cb948e9df5..670dcb2ee3 100644
--- a/ext/date/tests/DateTimeZone_listAbbreviations_basic1.phpt
+++ b/ext/date/tests/DateTimeZone_listAbbreviations_basic1.phpt
@@ -22,7 +22,7 @@ echo "\n-- Format a sample entry --\n";
 var_dump( $abbr["acst"] );
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing DateTimeZone::listAbbreviations() : basic functionality ***
 string(5) "array"
 int(144)
diff --git a/ext/date/tests/date_parse_001.phpt b/ext/date/tests/date_parse_001.phpt
index 0d58c1f8e9..36f8d9bbdd 100644
--- a/ext/date/tests/date_parse_001.phpt
+++ b/ext/date/tests/date_parse_001.phpt
@@ -14,7 +14,7 @@ Test basic date_parse()
     var_dump(date_parse(""));
     echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 array(12) {
   ["year"]=>
   int(2006)
diff --git a/ext/date/tests/date_parse_error.phpt b/ext/date/tests/date_parse_error.phpt
index 24b0094c9e..6a5180fdfb 100644
--- a/ext/date/tests/date_parse_error.phpt
+++ b/ext/date/tests/date_parse_error.phpt
@@ -17,7 +17,7 @@ $invalid_date = "2OO9-02--27 10:00?00.5";
 var_dump( date_parse($invalid_date) );
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing date_parse() : error conditions ***
 
 -- Testing date_parse() function with unexpected characters in $date argument --
diff --git a/ext/date/tests/gmmktime_basic.phpt b/ext/date/tests/gmmktime_basic.phpt
index 303bd9b010..f96b635c08 100644
--- a/ext/date/tests/gmmktime_basic.phpt
+++ b/ext/date/tests/gmmktime_basic.phpt
@@ -22,6 +22,6 @@ $year = 2008;
 var_dump( gmmktime($hour, $min, $sec, $mon, $day, $year) );
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing gmmktime() : basic functionality ***
 int(1218182888)
diff --git a/ext/date/tests/mktime_error.phpt b/ext/date/tests/mktime_error.phpt
index e40e40f38d..8bdb61df7b 100644
--- a/ext/date/tests/mktime_error.phpt
+++ b/ext/date/tests/mktime_error.phpt
@@ -35,7 +35,7 @@ try {
 }
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing mktime() : error conditions ***
 
 -- Testing mktime() function with Zero arguments --
diff --git a/ext/date/tests/timezone_abbreviations_list_basic1.phpt b/ext/date/tests/timezone_abbreviations_list_basic1.phpt
index b3bf7c84a1..0640b8a83d 100644
--- a/ext/date/tests/timezone_abbreviations_list_basic1.phpt
+++ b/ext/date/tests/timezone_abbreviations_list_basic1.phpt
@@ -22,7 +22,7 @@ echo "\n-- Format a sample entry --\n";
 var_dump( $abbr["acst"] );
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing timezone_abbreviations_list() : basic functionality ***
 string(5) "array"
 int(144)
diff --git a/ext/fileinfo/tests/finfo_set_flags_basic-mb.phpt b/ext/fileinfo/tests/finfo_set_flags_basic-mb.phpt
index 50a1559f58..855acaaed8 100644
--- a/ext/fileinfo/tests/finfo_set_flags_basic-mb.phpt
+++ b/ext/fileinfo/tests/finfo_set_flags_basic-mb.phpt
@@ -25,7 +25,7 @@ $finfo = new finfo( FILEINFO_NONE, $magicFile );
 var_dump( $finfo->set_flags( FILEINFO_MIME ) );
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing finfo_set_flags() : basic functionality ***
 bool(true)
 bool(true)
diff --git a/ext/fileinfo/tests/finfo_set_flags_basic.phpt b/ext/fileinfo/tests/finfo_set_flags_basic.phpt
index 95f2648f51..fe2921b560 100644
--- a/ext/fileinfo/tests/finfo_set_flags_basic.phpt
+++ b/ext/fileinfo/tests/finfo_set_flags_basic.phpt
@@ -25,7 +25,7 @@ $finfo = new finfo( FILEINFO_NONE, $magicFile );
 var_dump( $finfo->set_flags( FILEINFO_MIME ) );
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing finfo_set_flags() : basic functionality ***
 bool(true)
 bool(true)
diff --git a/ext/filter/tests/007.phpt b/ext/filter/tests/007.phpt
index dc966b8cc9..b5f285342b 100644
--- a/ext/filter/tests/007.phpt
+++ b/ext/filter/tests/007.phpt
@@ -23,7 +23,7 @@ var_dump(filter_has_var(INPUT_POST, ""));
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 bool(true)
 bool(true)
 bool(false)
diff --git a/ext/filter/tests/008.phpt b/ext/filter/tests/008.phpt
index 75e0968c62..1d4d64529d 100644
--- a/ext/filter/tests/008.phpt
+++ b/ext/filter/tests/008.phpt
@@ -9,7 +9,7 @@ var_dump(filter_list());
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 array(21) {
   [0]=>
   string(3) "int"
diff --git a/ext/filter/tests/010.phpt b/ext/filter/tests/010.phpt
index 14f8db01af..46b6044668 100644
--- a/ext/filter/tests/010.phpt
+++ b/ext/filter/tests/010.phpt
@@ -17,7 +17,7 @@ var_dump(filter_var(1, 0, array()));
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 array(7) {
   [0]=>
   int(1)
diff --git a/ext/hash/tests/hash_hkdf_edges.phpt b/ext/hash/tests/hash_hkdf_edges.phpt
index cee86ae82e..ceb21631d1 100644
--- a/ext/hash/tests/hash_hkdf_edges.phpt
+++ b/ext/hash/tests/hash_hkdf_edges.phpt
@@ -25,7 +25,7 @@ catch (\Error $e) {
 }
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing hash_hkdf(): edge cases ***
 Length < digestSize: 98b16391063ece
 Length % digestSize != 0: 98b16391063ecee006a3ca8ee5776b1e5f
diff --git a/ext/hash/tests/hash_hmac_file_basic.phpt b/ext/hash/tests/hash_hmac_file_basic.phpt
index 4569c46c35..11b9d05738 100644
--- a/ext/hash/tests/hash_hmac_file_basic.phpt
+++ b/ext/hash/tests/hash_hmac_file_basic.phpt
@@ -57,7 +57,7 @@ echo "sha256(raw): " . bin2hex(hash_hmac_file('sha256', $file, $key, TRUE)). "\n
 unlink($file);
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing hash_hmac_file() : basic functionality ***
 gost: 94c39a40d5db852a8dc3d24e37eebf2d53e3d711457c59cd02b614f792a9d918
 haval128,3: f1cea637451097d790354a86de3f54a3
diff --git a/ext/json/tests/json_last_error_msg_error.phpt b/ext/json/tests/json_last_error_msg_error.phpt
index 75b06f72a2..0eb55c4c66 100644
--- a/ext/json/tests/json_last_error_msg_error.phpt
+++ b/ext/json/tests/json_last_error_msg_error.phpt
@@ -14,6 +14,6 @@ try {
 }
 
 ?>
---EXPECTF--
+--EXPECT--
 string(8) "No error"
 json_last_error_msg() expects exactly 0 parameters, 1 given
diff --git a/ext/libxml/tests/bug76777.phpt b/ext/libxml/tests/bug76777.phpt
index 5e15024b81..c50e52203f 100644
--- a/ext/libxml/tests/bug76777.phpt
+++ b/ext/libxml/tests/bug76777.phpt
@@ -29,7 +29,7 @@ libxml_set_external_entity_loader(function($p,$s,$c) {
 $dom=new DOMDocument($xml);
 $dom->schemaValidateSource($xsd);
 ?>
---EXPECTF--
+--EXPECT--
 NULL
 string(15) "nonexistent.xsd"
 array(4) {
diff --git a/ext/pcre/tests/preg_replace_error2.phpt b/ext/pcre/tests/preg_replace_error2.phpt
index 2401e0bb49..d7748bf954 100644
--- a/ext/pcre/tests/preg_replace_error2.phpt
+++ b/ext/pcre/tests/preg_replace_error2.phpt
@@ -29,7 +29,7 @@ try {
 }
 echo "Done";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing preg_replace() : error conditions ***
 
 Arg value is: this is a string
diff --git a/ext/pcre/tests/split2.phpt b/ext/pcre/tests/split2.phpt
index 5fafee3b87..3d9714a420 100644
--- a/ext/pcre/tests/split2.phpt
+++ b/ext/pcre/tests/split2.phpt
@@ -19,7 +19,7 @@ var_dump(preg_split('/(\d*)/', 'ab2c3u'));
 var_dump(preg_last_error() == PREG_RECURSION_LIMIT_ERROR);
 
 ?>
---EXPECTF--
+--EXPECT--
 array(15) {
   [0]=>
   string(0) ""
diff --git a/ext/phar/tests/phar_isvalidpharfilename.phpt b/ext/phar/tests/phar_isvalidpharfilename.phpt
index 8b9088b9b3..d44c0603e9 100644
--- a/ext/phar/tests/phar_isvalidpharfilename.phpt
+++ b/ext/phar/tests/phar_isvalidpharfilename.phpt
@@ -72,7 +72,7 @@ var_dump(Phar::isValidPharFilename('dir.phar.php', false));
 --CLEAN--
 <?php
 rmdir(__DIR__ . '/.phar');
---EXPECTF--
+--EXPECT--
 bool(false)
 bool(false)
 bool(false)
diff --git a/ext/phar/tests/pharfileinfo_chmod.phpt b/ext/phar/tests/pharfileinfo_chmod.phpt
index 822b5ac628..26d7257602 100644
--- a/ext/phar/tests/pharfileinfo_chmod.phpt
+++ b/ext/phar/tests/pharfileinfo_chmod.phpt
@@ -24,5 +24,5 @@ $b->chmod(0666);
 ?>
 --CLEAN--
 <?php unlink(__DIR__ . '/' . basename(__FILE__, '.clean.php') . '.phar'); ?>
---EXPECTF--
+--EXPECT--
 Phar entry "a" is a temporary directory (not an actual entry in the archive), cannot chmod
diff --git a/ext/phar/tests/pharfileinfo_setmetadata.phpt b/ext/phar/tests/pharfileinfo_setmetadata.phpt
index 38e23f706d..8b4385ad5f 100644
--- a/ext/phar/tests/pharfileinfo_setmetadata.phpt
+++ b/ext/phar/tests/pharfileinfo_setmetadata.phpt
@@ -40,7 +40,7 @@ echo $e->getMessage(), "\n";
 --CLEAN--
 <?php unlink(__DIR__ . '/' . basename(__FILE__, '.clean.php') . '.phar'); ?>
 <?php unlink(__DIR__ . '/' . basename(__FILE__, '.clean.php') . '.tar'); ?>
---EXPECTF--
+--EXPECT--
 Phar entry is a temporary directory (not an actual entry in the archive), cannot set metadata
 Phar entry is a temporary directory (not an actual entry in the archive), cannot delete metadata
 Write operations disabled by the php.ini setting phar.readonly
diff --git a/ext/phar/tests/stat2_5.3.phpt b/ext/phar/tests/stat2_5.3.phpt
index 19acc3ba99..9e9e158602 100644
--- a/ext/phar/tests/stat2_5.3.phpt
+++ b/ext/phar/tests/stat2_5.3.phpt
@@ -35,7 +35,7 @@ include $fname3;
 --CLEAN--
 <?php unlink(__DIR__ . '/' . basename(__FILE__, '.clean.php') . '.phar.tar'); ?>
 <?php unlink(__DIR__ . '/' . basename(__FILE__, '.clean.php') . '.tar'); ?>
---EXPECTF--
+--EXPECT--
 bool(true)
 is_link
 bool(false)
diff --git a/ext/posix/tests/posix_getgrgid_error.phpt b/ext/posix/tests/posix_getgrgid_error.phpt
index e9dbe2a6ce..36ffcf4952 100644
--- a/ext/posix/tests/posix_getgrgid_error.phpt
+++ b/ext/posix/tests/posix_getgrgid_error.phpt
@@ -20,7 +20,7 @@ var_dump( posix_getgrgid($gid));
 
 echo "Done";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing posix_getgrgid() : error conditions ***
 
 -- Testing posix_getgrgid() function with a negative group id --
diff --git a/ext/posix/tests/posix_getpgid_error.phpt b/ext/posix/tests/posix_getpgid_error.phpt
index 19e306b2ee..85f12d4917 100644
--- a/ext/posix/tests/posix_getpgid_error.phpt
+++ b/ext/posix/tests/posix_getpgid_error.phpt
@@ -22,7 +22,7 @@ var_dump( posix_getpgid($pid) );
 
 echo "Done";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing posix_getpgid() : error conditions ***
 
 -- Testing posix_getpgid() with negative pid  --
diff --git a/ext/posix/tests/posix_getpwuid_error.phpt b/ext/posix/tests/posix_getpwuid_error.phpt
index 365033b689..b4ec515e74 100644
--- a/ext/posix/tests/posix_getpwuid_error.phpt
+++ b/ext/posix/tests/posix_getpwuid_error.phpt
@@ -20,7 +20,7 @@ var_dump( posix_getpwuid($uid) );
 
 echo "Done";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing posix_getpwuid() : error conditions ***
 
 -- Testing posix_getpwuid() function negative uid --
diff --git a/ext/posix/tests/posix_getsid_error.phpt b/ext/posix/tests/posix_getsid_error.phpt
index 8e05a23496..08080230aa 100644
--- a/ext/posix/tests/posix_getsid_error.phpt
+++ b/ext/posix/tests/posix_getsid_error.phpt
@@ -15,5 +15,5 @@ PHP Testfest Berlin 2009-05-10
 <?php
 var_dump( posix_getsid(-1) );
 ?>
---EXPECTF--
+--EXPECT--
 bool(false)
diff --git a/ext/posix/tests/posix_initgroups.phpt b/ext/posix/tests/posix_initgroups.phpt
index 20cf8cef8b..c77acfe3a4 100644
--- a/ext/posix/tests/posix_initgroups.phpt
+++ b/ext/posix/tests/posix_initgroups.phpt
@@ -11,5 +11,5 @@ if (!function_exists('posix_initgroups')) die('skip posix_initgroups() not found
 var_dump(posix_initgroups(NULL, NULL));
 
 ?>
---EXPECTF--
+--EXPECT--
 bool(false)
diff --git a/ext/posix/tests/posix_kill_error.phpt b/ext/posix/tests/posix_kill_error.phpt
index 89474c4994..ea9b4f45dc 100644
--- a/ext/posix/tests/posix_kill_error.phpt
+++ b/ext/posix/tests/posix_kill_error.phpt
@@ -28,7 +28,7 @@ var_dump( posix_kill($pid, 999) );
 
 echo "Done";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing posix_kill() : error conditions ***
 
 -- Testing posix_kill() function with invalid signal --
diff --git a/ext/posix/tests/posix_strerror_error.phpt b/ext/posix/tests/posix_strerror_error.phpt
index 60b096656a..2792ff5b3b 100644
--- a/ext/posix/tests/posix_strerror_error.phpt
+++ b/ext/posix/tests/posix_strerror_error.phpt
@@ -20,7 +20,7 @@ echo gettype( posix_strerror($errno) )."\n";
 
 echo "Done";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing posix_strerror() : error conditions ***
 
 -- Testing posix_strerror() function with invalid error number --
diff --git a/ext/reflection/tests/ReflectionClass_hasProperty_002.phpt b/ext/reflection/tests/ReflectionClass_hasProperty_002.phpt
index a135939052..607fead65c 100644
--- a/ext/reflection/tests/ReflectionClass_hasProperty_002.phpt
+++ b/ext/reflection/tests/ReflectionClass_hasProperty_002.phpt
@@ -16,7 +16,7 @@ var_dump($rc->hasProperty(1));
 var_dump($rc->hasProperty(1.5));
 var_dump($rc->hasProperty(true));
 ?>
---EXPECTF--
+--EXPECT--
 Check invalid params:
 bool(false)
 bool(false)
diff --git a/ext/reflection/tests/ReflectionMethod_getClosure_error.phpt b/ext/reflection/tests/ReflectionMethod_getClosure_error.phpt
index 728ddf9265..7e45eec411 100644
--- a/ext/reflection/tests/ReflectionMethod_getClosure_error.phpt
+++ b/ext/reflection/tests/ReflectionMethod_getClosure_error.phpt
@@ -43,7 +43,7 @@ try {
 }
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing ReflectionMethod::getClosure() : error conditions ***
 
 -- Testing ReflectionMethod::getClosure() function with invalid object --
diff --git a/ext/reflection/tests/ReflectionMethod_invokeArgs_error3.phpt b/ext/reflection/tests/ReflectionMethod_invokeArgs_error3.phpt
index 113cabbbeb..c3bab48d6f 100644
--- a/ext/reflection/tests/ReflectionMethod_invokeArgs_error3.phpt
+++ b/ext/reflection/tests/ReflectionMethod_invokeArgs_error3.phpt
@@ -69,7 +69,7 @@ try {
 }
 
 ?>
---EXPECTF--
+--EXPECT--
 Non-instance:
 string(72) "Given object is not an instance of the class this method was declared in"
 
diff --git a/ext/reflection/tests/ReflectionObject_getName_basic.phpt b/ext/reflection/tests/ReflectionObject_getName_basic.phpt
index 1885695cb1..94ad1e2c7b 100644
--- a/ext/reflection/tests/ReflectionObject_getName_basic.phpt
+++ b/ext/reflection/tests/ReflectionObject_getName_basic.phpt
@@ -15,7 +15,7 @@ $r3 = new ReflectionObject($r2);
 var_dump($r3->getName());
 
 ?>
---EXPECTF--
+--EXPECT--
 string(8) "stdClass"
 string(1) "C"
 string(16) "ReflectionObject"
diff --git a/ext/reflection/tests/ReflectionProperty_isDefault_basic.phpt b/ext/reflection/tests/ReflectionProperty_isDefault_basic.phpt
index 1472615178..7defcb76e0 100644
--- a/ext/reflection/tests/ReflectionProperty_isDefault_basic.phpt
+++ b/ext/reflection/tests/ReflectionProperty_isDefault_basic.phpt
@@ -25,7 +25,7 @@ reflectProperty("TestClass", "prot");
 reflectProperty("TestClass", "priv");
 
 ?>
---EXPECTF--
+--EXPECT--
 **********************************
 Reflecting on property TestClass::pub
 
diff --git a/ext/reflection/tests/ReflectionProperty_setValue_error.phpt b/ext/reflection/tests/ReflectionProperty_setValue_error.phpt
index f58590b3ea..1f0c2b5f2b 100644
--- a/ext/reflection/tests/ReflectionProperty_setValue_error.phpt
+++ b/ext/reflection/tests/ReflectionProperty_setValue_error.phpt
@@ -32,7 +32,7 @@ $propInfo = new ReflectionProperty('TestClass', 'pub2');
 var_dump($propInfo->setValue($instanceWithNoProperties, "NewValue"));
 var_dump($instanceWithNoProperties->pub2);
 ?>
---EXPECTF--
+--EXPECT--
 Protected property:
 Cannot access non-public member TestClass::$prot
 
diff --git a/ext/session/tests/bug79221.phpt b/ext/session/tests/bug79221.phpt
index b0972c4697..0813457035 100644
--- a/ext/session/tests/bug79221.phpt
+++ b/ext/session/tests/bug79221.phpt
@@ -40,6 +40,6 @@ session_start();
 var_dump($_SESSION);
 session_destroy();
 
---EXPECTF--
+--EXPECT--
 array(0) {
 }
diff --git a/ext/session/tests/session_cache_limiter_error.phpt b/ext/session/tests/session_cache_limiter_error.phpt
index 284649e277..d291d531c0 100644
--- a/ext/session/tests/session_cache_limiter_error.phpt
+++ b/ext/session/tests/session_cache_limiter_error.phpt
@@ -89,7 +89,7 @@ fclose($fp);
 echo "Done";
 ob_end_flush();
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing session_cache_limiter() : error functionality ***
 
 -- Iteration 1 --
diff --git a/ext/spl/tests/bug61347.phpt b/ext/spl/tests/bug61347.phpt
index b83f48f7ff..4b4f9eaedf 100644
--- a/ext/spl/tests/bug61347.phpt
+++ b/ext/spl/tests/bug61347.phpt
@@ -21,7 +21,7 @@ var_dump(isset($b[37])); //true
 var_dump(isset($b['no_exists'])); //false
 var_dump(empty($b['b'])); //true
 var_dump(empty($b[37])); //true
---EXPECTF--
+--EXPECT--
 bool(false)
 bool(false)
 bool(false)
diff --git a/ext/spl/tests/fileobject_005.phpt b/ext/spl/tests/fileobject_005.phpt
index e26a8d7aea..cce4a7d6a6 100644
--- a/ext/spl/tests/fileobject_005.phpt
+++ b/ext/spl/tests/fileobject_005.phpt
@@ -27,6 +27,6 @@ $fo->fwrite("blahlubba");
 $path = __DIR__.DIRECTORY_SEPARATOR.'fileobject_005.txt';
 unlink($path);
 ?>
---EXPECTF--
+--EXPECT--
 bool(true)
 string(4) "blah"
diff --git a/ext/spl/tests/iterator_045.phpt b/ext/spl/tests/iterator_045.phpt
index 63d78cc78e..e245b95688 100644
--- a/ext/spl/tests/iterator_045.phpt
+++ b/ext/spl/tests/iterator_045.phpt
@@ -88,7 +88,7 @@ $it->testUnset($unsets);
 $it->show();
 
 ?>
---EXPECTF--
+--EXPECT--
 Exception: MyCachingIterator does not use a full cache (see CachingIterator::__construct)
 Exception: MyCachingIterator does not use a full cache (see CachingIterator::__construct)
 MyCachingIterator::testSet()
diff --git a/ext/spl/tests/regexIterator_setMode_error.phpt b/ext/spl/tests/regexIterator_setMode_error.phpt
index 4816896d8a..3b0eaf1d66 100644
--- a/ext/spl/tests/regexIterator_setMode_error.phpt
+++ b/ext/spl/tests/regexIterator_setMode_error.phpt
@@ -18,7 +18,7 @@ try {
 }
 
 ?>
---EXPECTF--
+--EXPECT--
 int(0)
 string(14) "Illegal mode 7"
 int(0)
diff --git a/ext/spl/tests/spl_heap_is_empty_basic.phpt b/ext/spl/tests/spl_heap_is_empty_basic.phpt
index 4a90734ad4..abf64f8d9d 100644
--- a/ext/spl/tests/spl_heap_is_empty_basic.phpt
+++ b/ext/spl/tests/spl_heap_is_empty_basic.phpt
@@ -22,7 +22,7 @@ var_dump($heap->isEmpty());
 $heap->extract();
 var_dump($heap->isEmpty());
 ?>
---EXPECTF--
+--EXPECT--
 bool(true)
 bool(false)
 bool(true)
diff --git a/ext/sqlite3/tests/sqlite3_40_setauthorizer.phpt b/ext/sqlite3/tests/sqlite3_40_setauthorizer.phpt
index 994c67e0c3..459beeca53 100644
--- a/ext/sqlite3/tests/sqlite3_40_setauthorizer.phpt
+++ b/ext/sqlite3/tests/sqlite3_40_setauthorizer.phpt
@@ -69,7 +69,7 @@ try {
 }
 
 ?>
---EXPECTF--
+--EXPECT--
 int(1)
 Unable to prepare statement: 23, not authorized
 bool(true)
diff --git a/ext/sqlite3/tests/sqlite3stmt_getsql_expanded.phpt b/ext/sqlite3/tests/sqlite3stmt_getsql_expanded.phpt
index 3f9fe84130..9a893c590d 100644
--- a/ext/sqlite3/tests/sqlite3stmt_getsql_expanded.phpt
+++ b/ext/sqlite3/tests/sqlite3stmt_getsql_expanded.phpt
@@ -44,7 +44,7 @@ var_dump($db->close());
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 Getting expanded SQL statement
 string(21) "SELECT 42, 'php', 43;"
 Execute statement
diff --git a/ext/standard/tests/array/005.phpt b/ext/standard/tests/array/005.phpt
index c51e98a67b..ed9f0458c4 100644
--- a/ext/standard/tests/array/005.phpt
+++ b/ext/standard/tests/array/005.phpt
@@ -69,7 +69,7 @@ var_dump( current($mixed_array[1]) );
 
 echo"Done";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing Error Conditions ***
 NULL
 
diff --git a/ext/standard/tests/array/009.phpt b/ext/standard/tests/array/009.phpt
index c62be0d27c..fc10d293ff 100644
--- a/ext/standard/tests/array/009.phpt
+++ b/ext/standard/tests/array/009.phpt
@@ -71,7 +71,7 @@ foreach ($varient_arrays as $sub_array )  {
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing basic operations ***
 -- Iteration 1 --
 int(0)
diff --git a/ext/standard/tests/array/array_diff_assoc_error.phpt b/ext/standard/tests/array/array_diff_assoc_error.phpt
index 6aa7864ee9..69015289e2 100644
--- a/ext/standard/tests/array/array_diff_assoc_error.phpt
+++ b/ext/standard/tests/array/array_diff_assoc_error.phpt
@@ -33,7 +33,7 @@ try {
 
 echo "Done";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing array_diff_assoc() : error conditions ***
 
 -- Testing array_diff_assoc() function with zero arguments --
diff --git a/ext/standard/tests/array/array_diff_error.phpt b/ext/standard/tests/array/array_diff_error.phpt
index d269f010b8..889c5ce1b2 100644
--- a/ext/standard/tests/array/array_diff_error.phpt
+++ b/ext/standard/tests/array/array_diff_error.phpt
@@ -33,7 +33,7 @@ try {
 
 echo "Done";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing array_diff() : error conditions ***
 
 -- Testing array_diff() function with zero arguments --
diff --git a/ext/standard/tests/array/array_diff_key_error.phpt b/ext/standard/tests/array/array_diff_key_error.phpt
index e957abce1c..80ff5728fe 100644
--- a/ext/standard/tests/array/array_diff_key_error.phpt
+++ b/ext/standard/tests/array/array_diff_key_error.phpt
@@ -28,7 +28,7 @@ try {
     echo $e->getMessage(), "\n";
 }
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing array_diff_key() : error conditions ***
 
 -- Testing array_diff_key() function with less than expected no. of arguments --
diff --git a/ext/standard/tests/array/array_filter.phpt b/ext/standard/tests/array/array_filter.phpt
index a1b18bd234..2cb21ca609 100644
--- a/ext/standard/tests/array/array_filter.phpt
+++ b/ext/standard/tests/array/array_filter.phpt
@@ -28,7 +28,7 @@ var_dump(array_filter($array3, "even"));
 var_dump(array_filter(array()));
 
 ?>
---EXPECTF--
+--EXPECT--
 Odd :
 array(3) {
   ["a"]=>
diff --git a/ext/standard/tests/array/array_filter_variation10.phpt b/ext/standard/tests/array/array_filter_variation10.phpt
index 265daf1fb4..ff88d7a7f8 100644
--- a/ext/standard/tests/array/array_filter_variation10.phpt
+++ b/ext/standard/tests/array/array_filter_variation10.phpt
@@ -56,7 +56,7 @@ try {
 
 echo "Done"
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing array_filter() : usage variations - using array keys in 'callback' ***
 0 = 0
 1 = 1
diff --git a/ext/standard/tests/array/array_key_exists_variation3.phpt b/ext/standard/tests/array/array_key_exists_variation3.phpt
index 4a6409bb1f..ef6cf45139 100644
--- a/ext/standard/tests/array/array_key_exists_variation3.phpt
+++ b/ext/standard/tests/array/array_key_exists_variation3.phpt
@@ -34,7 +34,7 @@ foreach($keys as $key) {
 
 echo "Done";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing array_key_exists() : usage variations ***
 
 -- Iteration 1 --
diff --git a/ext/standard/tests/array/array_map_error.phpt b/ext/standard/tests/array/array_map_error.phpt
index 4739bbf663..b41871e1c4 100644
--- a/ext/standard/tests/array/array_map_error.phpt
+++ b/ext/standard/tests/array/array_map_error.phpt
@@ -38,7 +38,7 @@ var_dump( array_map('callback2', $arr1, $arr2, $arr3) );
 
 echo "Done";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing array_map() : error conditions ***
 
 -- Testing array_map() function with one less than expected no. of arguments --
diff --git a/ext/standard/tests/array/array_merge.phpt b/ext/standard/tests/array/array_merge.phpt
index 08ecbf7147..75007779fa 100644
--- a/ext/standard/tests/array/array_merge.phpt
+++ b/ext/standard/tests/array/array_merge.phpt
@@ -83,7 +83,7 @@ var_dump(array_merge());
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing array_merge() basic functionality ***
 
 --- Iteration 0 ---
diff --git a/ext/standard/tests/array/array_push.phpt b/ext/standard/tests/array/array_push.phpt
index 227a520ac1..78076b8fc4 100644
--- a/ext/standard/tests/array/array_push.phpt
+++ b/ext/standard/tests/array/array_push.phpt
@@ -60,7 +60,7 @@ var_dump( $mixed_array[2] );
 
 echo"\nDone";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing Edge Conditions ***
 int(11)
 int(1)
diff --git a/ext/standard/tests/array/array_slice.phpt b/ext/standard/tests/array/array_slice.phpt
index d19f5195d6..a76277883a 100644
--- a/ext/standard/tests/array/array_slice.phpt
+++ b/ext/standard/tests/array/array_slice.phpt
@@ -68,7 +68,7 @@ foreach ($var_array as $sub_array)
   var_dump (array_slice($var_array[2], -3, -2, false) );
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Iteration 1 ***
 
 *** Variation with first two Arguments ***
diff --git a/ext/standard/tests/array/array_unshift.phpt b/ext/standard/tests/array/array_unshift.phpt
index 9ebe83391e..265de4e846 100644
--- a/ext/standard/tests/array/array_unshift.phpt
+++ b/ext/standard/tests/array/array_unshift.phpt
@@ -12,7 +12,7 @@ var_dump($a);
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 int(1)
 array(1) {
   [0]=>
diff --git a/ext/standard/tests/array/array_walk.phpt b/ext/standard/tests/array/array_walk.phpt
index 1f5457c9f7..151c9c70d0 100644
--- a/ext/standard/tests/array/array_walk.phpt
+++ b/ext/standard/tests/array/array_walk.phpt
@@ -24,7 +24,7 @@ try {
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 int(1)
 int(0)
 string(4) "data"
diff --git a/ext/standard/tests/array/array_walk_error2.phpt b/ext/standard/tests/array/array_walk_error2.phpt
index dfc95d3af8..e5aeadcdc0 100644
--- a/ext/standard/tests/array/array_walk_error2.phpt
+++ b/ext/standard/tests/array/array_walk_error2.phpt
@@ -54,7 +54,7 @@ try {
 
 echo "Done";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing array_walk() : error conditions - callback parameters ***
 Exception: Too few arguments to function callback1(), 2 passed and exactly 3 expected
 Exception: Too few arguments to function callback2(), 3 passed and exactly 4 expected
diff --git a/ext/standard/tests/array/array_walk_recursive1.phpt b/ext/standard/tests/array/array_walk_recursive1.phpt
index 472cb1032d..d4d3e7d8eb 100644
--- a/ext/standard/tests/array/array_walk_recursive1.phpt
+++ b/ext/standard/tests/array/array_walk_recursive1.phpt
@@ -24,7 +24,7 @@ try {
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 int(1)
 int(0)
 string(4) "data"
diff --git a/ext/standard/tests/array/array_walk_recursive_error2.phpt b/ext/standard/tests/array/array_walk_recursive_error2.phpt
index f1686d7acd..2509c95f60 100644
--- a/ext/standard/tests/array/array_walk_recursive_error2.phpt
+++ b/ext/standard/tests/array/array_walk_recursive_error2.phpt
@@ -54,7 +54,7 @@ try {
 
 echo "Done";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing array_walk_recursive() : error conditions - callback parameters ***
 Exception: Too few arguments to function callback1(), 2 passed and exactly 3 expected
 Exception: Too few arguments to function callback2(), 3 passed and exactly 4 expected
diff --git a/ext/standard/tests/array/array_walk_recursive_variation7.phpt b/ext/standard/tests/array/array_walk_recursive_variation7.phpt
index a0c159d71d..a1cbdad2bd 100644
--- a/ext/standard/tests/array/array_walk_recursive_variation7.phpt
+++ b/ext/standard/tests/array/array_walk_recursive_variation7.phpt
@@ -33,7 +33,7 @@ echo "-- Anonymous function with null argument --\n";
 var_dump( array_walk_recursive( $input, function() { echo "1\n"; }));
 echo "Done"
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing array_walk_recursive() : anonymous function as callback ***
 -- Anonymous function with one argument --
 int(2)
diff --git a/ext/standard/tests/array/array_walk_variation7.phpt b/ext/standard/tests/array/array_walk_variation7.phpt
index 0354782eda..3689f8a798 100644
--- a/ext/standard/tests/array/array_walk_variation7.phpt
+++ b/ext/standard/tests/array/array_walk_variation7.phpt
@@ -33,7 +33,7 @@ echo "-- Anonymous function with null argument --\n";
 var_dump( array_walk( $input, function() { echo "1\n"; }));
 echo "Done"
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing array_walk() : anonymous function as callback ***
 -- Anonymous function with one argument --
 int(2)
diff --git a/ext/standard/tests/array/uasort_variation8.phpt b/ext/standard/tests/array/uasort_variation8.phpt
index d27cd569c0..b6abdeaef3 100644
--- a/ext/standard/tests/array/uasort_variation8.phpt
+++ b/ext/standard/tests/array/uasort_variation8.phpt
@@ -29,7 +29,7 @@ var_dump($array_arg);
 
 echo "Done"
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing uasort() : built in function as 'cmp_function' ***
 -- Testing uasort() with built-in 'cmp_function': strcasecmp() --
 bool(true)
diff --git a/ext/standard/tests/array/usort_variation8.phpt b/ext/standard/tests/array/usort_variation8.phpt
index 55ff362d41..4a750ccefa 100644
--- a/ext/standard/tests/array/usort_variation8.phpt
+++ b/ext/standard/tests/array/usort_variation8.phpt
@@ -31,7 +31,7 @@ var_dump( usort($temp_array2, 'strcmp') );
 var_dump($temp_array2);
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing usort() : usage variation ***
 
 -- Testing usort() with built-in 'cmp_function': strcasecmp() --
diff --git a/ext/standard/tests/assert/assert_variation.phpt b/ext/standard/tests/assert/assert_variation.phpt
index a28ea58d5a..7b550b36d1 100644
--- a/ext/standard/tests/assert/assert_variation.phpt
+++ b/ext/standard/tests/assert/assert_variation.phpt
@@ -67,7 +67,7 @@ var_dump($rao=assert_options(ASSERT_CALLBACK));
 echo "ini.get(\"assert.callback\") => [".ini_get("assert.callback")."]\n\n";
 var_dump($r2=assert(0 != 0));
 echo"\n";
---EXPECTF--
+--EXPECT--
 Initial values: assert_options(ASSERT_CALLBACK) => [f1]
 Initial values: ini.get("assert.callback") => [f1]
 f1 called
diff --git a/ext/standard/tests/file/auto_detect_line_endings_1.phpt b/ext/standard/tests/file/auto_detect_line_endings_1.phpt
index c79082ecdb..5a4ff0a10f 100644
--- a/ext/standard/tests/file/auto_detect_line_endings_1.phpt
+++ b/ext/standard/tests/file/auto_detect_line_endings_1.phpt
@@ -15,7 +15,7 @@ var_dump(fgets(STDIN));
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 string(1) "1"
 string(8) "fooBar1
"
 string(8) "fooBar2
"
diff --git a/ext/standard/tests/file/auto_detect_line_endings_2.phpt b/ext/standard/tests/file/auto_detect_line_endings_2.phpt
index f33a055e08..3994f1ee3b 100644
--- a/ext/standard/tests/file/auto_detect_line_endings_2.phpt
+++ b/ext/standard/tests/file/auto_detect_line_endings_2.phpt
@@ -16,7 +16,7 @@ var_dump(fgets($stdin));
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 string(2) "on"
 string(8) "fooBar1
"
 string(8) "fooBar2
"
diff --git a/ext/standard/tests/file/basename.phpt b/ext/standard/tests/file/basename.phpt
index 8352f4da4b..7a98e833a3 100644
--- a/ext/standard/tests/file/basename.phpt
+++ b/ext/standard/tests/file/basename.phpt
@@ -138,7 +138,7 @@ check_basename( $file_path_variations );
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing basic operations ***
 
 --Iteration 1--
diff --git a/ext/standard/tests/file/fscanf.phpt b/ext/standard/tests/file/fscanf.phpt
index 6605b795ff..4acadc6169 100644
--- a/ext/standard/tests/file/fscanf.phpt
+++ b/ext/standard/tests/file/fscanf.phpt
@@ -75,7 +75,7 @@ echo "Done\n";
 $filename = __DIR__."/fscanf.dat";
 unlink($filename);
 ?>
---EXPECTF--
+--EXPECT--
 int(0)
 NULL
 int(1)
diff --git a/ext/standard/tests/file/fscanf_variation10.phpt b/ext/standard/tests/file/fscanf_variation10.phpt
index f657c07005..507ed8e22d 100644
--- a/ext/standard/tests/file/fscanf_variation10.phpt
+++ b/ext/standard/tests/file/fscanf_variation10.phpt
@@ -82,7 +82,7 @@ $file_path = __DIR__;
 $filename = "$file_path/fscanf_variation10.tmp";
 unlink($filename);
 ?>
---EXPECTF--
+--EXPECT--
 *** Test fscanf(): different float format types with resource ***
 
 -- iteration 1 --
diff --git a/ext/standard/tests/file/is_dir_variation3.phpt b/ext/standard/tests/file/is_dir_variation3.phpt
index e82d9ae034..1cf1f25138 100644
--- a/ext/standard/tests/file/is_dir_variation3.phpt
+++ b/ext/standard/tests/file/is_dir_variation3.phpt
@@ -30,7 +30,7 @@ foreach($dirnames as $dirname) {
   var_dump( is_dir($dirname) );
 }
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing is_dir() with Invalid arguments: expected bool(false) ***
 bool(false)
 bool(false)
diff --git a/ext/standard/tests/file/is_executable_error.phpt b/ext/standard/tests/file/is_executable_error.phpt
index ad90d64435..e77ca86349 100644
--- a/ext/standard/tests/file/is_executable_error.phpt
+++ b/ext/standard/tests/file/is_executable_error.phpt
@@ -10,7 +10,7 @@ echo "\n*** Testing is_exceutable() on non-existent directory ***\n";
 var_dump( is_executable(__DIR__."/is_executable") );
 
 echo "Done\n";
---EXPECTF--
+--EXPECT--
 *** Testing is_exceutable() on non-existent directory ***
 bool(false)
 Done
diff --git a/ext/standard/tests/file/is_executable_variation3.phpt b/ext/standard/tests/file/is_executable_variation3.phpt
index 92ad3320d3..802dbfdf7e 100644
--- a/ext/standard/tests/file/is_executable_variation3.phpt
+++ b/ext/standard/tests/file/is_executable_variation3.phpt
@@ -40,7 +40,7 @@ foreach( $invalid_files as $invalid_file ) {
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing is_executable(): usage variations ***
 
 *** Testing is_executable() on invalid files ***
diff --git a/ext/standard/tests/file/is_file_variation3.phpt b/ext/standard/tests/file/is_file_variation3.phpt
index d33b01dfb3..5bdb63e37c 100644
--- a/ext/standard/tests/file/is_file_variation3.phpt
+++ b/ext/standard/tests/file/is_file_variation3.phpt
@@ -39,7 +39,7 @@ foreach([
   clearstatcache();
 }
 ?>
---EXPECTF--
+--EXPECT--
 float(-2.34555): 0
 string(1) " ": 0
 string(0) "": 0
diff --git a/ext/standard/tests/file/is_readable_error.phpt b/ext/standard/tests/file/is_readable_error.phpt
index 1520eb4d20..c8a6c34fa0 100644
--- a/ext/standard/tests/file/is_readable_error.phpt
+++ b/ext/standard/tests/file/is_readable_error.phpt
@@ -11,7 +11,7 @@ var_dump( is_readable(__DIR__."/is_readable.tmp") );
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing is_readable() on non-existent file ***
 bool(false)
 Done
diff --git a/ext/standard/tests/file/is_readable_variation3.phpt b/ext/standard/tests/file/is_readable_variation3.phpt
index 97c794d1b7..f7eebdc2b8 100644
--- a/ext/standard/tests/file/is_readable_variation3.phpt
+++ b/ext/standard/tests/file/is_readable_variation3.phpt
@@ -37,7 +37,7 @@ foreach( $misc_files as $misc_file ) {
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing is_readable(): usage variations ***
 
 *** Testing is_readable() on miscellaneous filenames ***
diff --git a/ext/standard/tests/file/is_uploaded_file_basic.phpt b/ext/standard/tests/file/is_uploaded_file_basic.phpt
index d053244a79..3e5bf6320c 100644
--- a/ext/standard/tests/file/is_uploaded_file_basic.phpt
+++ b/ext/standard/tests/file/is_uploaded_file_basic.phpt
@@ -30,7 +30,7 @@ var_dump(is_uploaded_file('random_filename.txt'));
 var_dump(is_uploaded_file('__FILE__'));
 
 ?>
---EXPECTF--
+--EXPECT--
 bool(true)
 bool(false)
 bool(false)
diff --git a/ext/standard/tests/file/is_writable_error.phpt b/ext/standard/tests/file/is_writable_error.phpt
index e2a38412cd..f01e69b13d 100644
--- a/ext/standard/tests/file/is_writable_error.phpt
+++ b/ext/standard/tests/file/is_writable_error.phpt
@@ -14,7 +14,7 @@ var_dump( is_writeable(__DIR__."/is_writable") );
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing is_writable() on non-existent file ***
 bool(false)
 bool(false)
diff --git a/ext/standard/tests/file/is_writable_variation3.phpt b/ext/standard/tests/file/is_writable_variation3.phpt
index c5843a5abf..167d874ac2 100644
--- a/ext/standard/tests/file/is_writable_variation3.phpt
+++ b/ext/standard/tests/file/is_writable_variation3.phpt
@@ -37,7 +37,7 @@ foreach( $misc_files as $misc_file ) {
   clearstatcache();
 }
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing is_writable(): usage variations ***
 
 *** Testing is_writable() with invalid filenames ***
diff --git a/ext/standard/tests/file/move_uploaded_file_basic.phpt b/ext/standard/tests/file/move_uploaded_file_basic.phpt
index 7af8748fe2..b80c052691 100644
--- a/ext/standard/tests/file/move_uploaded_file_basic.phpt
+++ b/ext/standard/tests/file/move_uploaded_file_basic.phpt
@@ -50,7 +50,7 @@ var_dump(move_uploaded_file($_FILES['file2']['tmp_name'], $destination4));
 unlink($destination4);
 
 ?>
---EXPECTF--
+--EXPECT--
 Valid move
 bool(true)
 bool(true)
diff --git a/ext/standard/tests/general_functions/get_include_path_basic.phpt b/ext/standard/tests/general_functions/get_include_path_basic.phpt
index bb7ccf542b..c17d5d3e71 100644
--- a/ext/standard/tests/general_functions/get_include_path_basic.phpt
+++ b/ext/standard/tests/general_functions/get_include_path_basic.phpt
@@ -20,7 +20,7 @@ if (ini_get("include_path") == get_include_path()) {
 }
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing get_include_path()
 string(1) "."
 PASSED
diff --git a/ext/standard/tests/general_functions/include_path.phpt b/ext/standard/tests/general_functions/include_path.phpt
index 56327500ea..06e806b3a2 100644
--- a/ext/standard/tests/general_functions/include_path.phpt
+++ b/ext/standard/tests/general_functions/include_path.phpt
@@ -31,7 +31,7 @@ var_dump(get_include_path());
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 string(1) "."
 NULL
 string(1) "."
diff --git a/ext/standard/tests/general_functions/is_array.phpt b/ext/standard/tests/general_functions/is_array.phpt
index 200ecbd6ac..37de6d5a5b 100644
--- a/ext/standard/tests/general_functions/is_array.phpt
+++ b/ext/standard/tests/general_functions/is_array.phpt
@@ -103,7 +103,7 @@ echo "Done\n";
 fclose($fp);
 closedir($dfp);
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing is_array() on different type of arrays ***
 -- Iteration 1 --
 bool(true)
diff --git a/ext/standard/tests/general_functions/is_bool.phpt b/ext/standard/tests/general_functions/is_bool.phpt
index 7c8d693a1b..70aaed9c3f 100644
--- a/ext/standard/tests/general_functions/is_bool.phpt
+++ b/ext/standard/tests/general_functions/is_bool.phpt
@@ -134,7 +134,7 @@ fclose($fp);
 closedir($dfp);
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing is_bool() with valid boolean values ***
 -- Iteration 1 --
 bool(true)
diff --git a/ext/standard/tests/general_functions/is_float_64bit.phpt b/ext/standard/tests/general_functions/is_float_64bit.phpt
index dc6df0f109..1815e53c00 100644
--- a/ext/standard/tests/general_functions/is_float_64bit.phpt
+++ b/ext/standard/tests/general_functions/is_float_64bit.phpt
@@ -131,7 +131,7 @@ foreach ($not_floats as $value ) {
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing is_float(), is_double() and is_real() with float values***
 -- Iteration 1 --
 bool(false)
diff --git a/ext/standard/tests/general_functions/is_int_64bit.phpt b/ext/standard/tests/general_functions/is_int_64bit.phpt
index e5c6ce77e0..8e5e9332c0 100644
--- a/ext/standard/tests/general_functions/is_int_64bit.phpt
+++ b/ext/standard/tests/general_functions/is_int_64bit.phpt
@@ -136,7 +136,7 @@ foreach ($not_int_types as $type ) {
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing is_int(), is_integer() & is_long()  with valid integer values ***
 --Iteration 1--
 bool(true)
diff --git a/ext/standard/tests/general_functions/is_null.phpt b/ext/standard/tests/general_functions/is_null.phpt
index 4fc325c744..6560707e57 100644
--- a/ext/standard/tests/general_functions/is_null.phpt
+++ b/ext/standard/tests/general_functions/is_null.phpt
@@ -134,7 +134,7 @@ fclose($fp);
 closedir($dfp);
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing is_null() with valid null values ***
 -- Iteration 1 --
 bool(true)
diff --git a/ext/standard/tests/general_functions/is_numeric.phpt b/ext/standard/tests/general_functions/is_numeric.phpt
index 491aa5d15b..8883c57ac2 100644
--- a/ext/standard/tests/general_functions/is_numeric.phpt
+++ b/ext/standard/tests/general_functions/is_numeric.phpt
@@ -152,7 +152,7 @@ fclose($fp);
 closedir($dfp);
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing is_numeric() with valid numeric values ***
 -- Iteration 1 --
 bool(true)
diff --git a/ext/standard/tests/general_functions/is_object.phpt b/ext/standard/tests/general_functions/is_object.phpt
index dd0e7689fd..8a5ac1bcbe 100644
--- a/ext/standard/tests/general_functions/is_object.phpt
+++ b/ext/standard/tests/general_functions/is_object.phpt
@@ -145,7 +145,7 @@ fclose($fp);
 closedir($dfp);
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing is_object() with valid objects ***
 -- Iteration 1 --
 bool(true)
diff --git a/ext/standard/tests/general_functions/is_scalar.phpt b/ext/standard/tests/general_functions/is_scalar.phpt
index f7ef3f5317..6a89da9f56 100644
--- a/ext/standard/tests/general_functions/is_scalar.phpt
+++ b/ext/standard/tests/general_functions/is_scalar.phpt
@@ -112,7 +112,7 @@ fclose($fp);
 closedir($dfp);
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing basic operations ***
 -- Iteration 1 --
 bool(true)
diff --git a/ext/standard/tests/general_functions/is_string.phpt b/ext/standard/tests/general_functions/is_string.phpt
index 7760f79831..a4ef7a47b1 100644
--- a/ext/standard/tests/general_functions/is_string.phpt
+++ b/ext/standard/tests/general_functions/is_string.phpt
@@ -147,7 +147,7 @@ fclose($fp);
 closedir($dfp);
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing is_string() with valid string values ***
 -- Iteration 1 --
 bool(true)
diff --git a/ext/standard/tests/general_functions/ob_get_length_basic.phpt b/ext/standard/tests/general_functions/ob_get_length_basic.phpt
index 46d5d2d0f6..0eb1adf9ee 100644
--- a/ext/standard/tests/general_functions/ob_get_length_basic.phpt
+++ b/ext/standard/tests/general_functions/ob_get_length_basic.phpt
@@ -32,7 +32,7 @@ dump_string_length( '' );
 dump_string_length( null );
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing ob_get_length() : basic functionality ***
 bool(false)
 int(26)
diff --git a/ext/standard/tests/general_functions/php_uname_error.phpt b/ext/standard/tests/general_functions/php_uname_error.phpt
index 23859a33ac..c64c15b404 100644
--- a/ext/standard/tests/general_functions/php_uname_error.phpt
+++ b/ext/standard/tests/general_functions/php_uname_error.phpt
@@ -13,7 +13,7 @@ echo "\n-- Testing php_uname() function with invalid mode --\n";
 var_dump( php_uname('z') == php_uname('z') );
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing php_uname() - error test
 
 -- Testing php_uname() function with invalid mode --
diff --git a/ext/standard/tests/general_functions/print_r.phpt b/ext/standard/tests/general_functions/print_r.phpt
index 3f24a5bc9d..d2ec63f5b4 100644
--- a/ext/standard/tests/general_functions/print_r.phpt
+++ b/ext/standard/tests/general_functions/print_r.phpt
@@ -276,7 +276,7 @@ closedir($dir_handle);
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing print_r() on integer variables ***
 
 -- Iteration 1 --
diff --git a/ext/standard/tests/general_functions/print_r_64bit.phpt b/ext/standard/tests/general_functions/print_r_64bit.phpt
index a0e9e148c6..5df1637dbd 100644
--- a/ext/standard/tests/general_functions/print_r_64bit.phpt
+++ b/ext/standard/tests/general_functions/print_r_64bit.phpt
@@ -280,7 +280,7 @@ closedir($dir_handle);
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing print_r() on integer variables ***
 
 -- Iteration 1 --
diff --git a/ext/standard/tests/general_functions/var_dump_64bit.phpt b/ext/standard/tests/general_functions/var_dump_64bit.phpt
index 0600775f58..7b74761586 100644
--- a/ext/standard/tests/general_functions/var_dump_64bit.phpt
+++ b/ext/standard/tests/general_functions/var_dump_64bit.phpt
@@ -279,7 +279,7 @@ closedir($dir_handle);
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing var_dump() on integer variables ***
 -- Iteration 1 --
 int(0)
diff --git a/ext/standard/tests/general_functions/var_export-locale.phpt b/ext/standard/tests/general_functions/var_export-locale.phpt
index bdc61d9928..9f9cd0e896 100644
--- a/ext/standard/tests/general_functions/var_export-locale.phpt
+++ b/ext/standard/tests/general_functions/var_export-locale.phpt
@@ -307,7 +307,7 @@ echo "\nDone";
 
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing var_export() with integer values ***
 
 *** Output for integer values ***
diff --git a/ext/standard/tests/image/image_type_to_extension.phpt b/ext/standard/tests/image/image_type_to_extension.phpt
index 249df57943..448aac4e99 100644
--- a/ext/standard/tests/image/image_type_to_extension.phpt
+++ b/ext/standard/tests/image/image_type_to_extension.phpt
@@ -33,7 +33,7 @@ image_type_to_extension()
     var_dump(image_type_to_extension(0));
 ?>
 Done
---EXPECTF--
+--EXPECT--
 Constant: IMAGETYPE_GIF
 	With dot: .gif
 	Without dot: gif
diff --git a/ext/standard/tests/math/lcg_value_basic.phpt b/ext/standard/tests/math/lcg_value_basic.phpt
index 95811c6f3c..ca76b5c836 100644
--- a/ext/standard/tests/math/lcg_value_basic.phpt
+++ b/ext/standard/tests/math/lcg_value_basic.phpt
@@ -24,7 +24,7 @@ if ($i != 100) {
 echo "MATHS test script completed\n";
 
 ?>
---EXPECTF--
+--EXPECT--
 MATHS test script started
 
  lcg_value tests...
diff --git a/ext/standard/tests/network/inet.phpt b/ext/standard/tests/network/inet.phpt
index 29b4aa0e6b..b25265446f 100644
--- a/ext/standard/tests/network/inet.phpt
+++ b/ext/standard/tests/network/inet.phpt
@@ -35,7 +35,7 @@ foreach ($array as $val) {
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 string(9) "127.0.0.1"
 string(13) "255.255.255.0"
 bool(false)
diff --git a/ext/standard/tests/network/ip_x86_64.phpt b/ext/standard/tests/network/ip_x86_64.phpt
index c659eb70fb..dd81bde55c 100644
--- a/ext/standard/tests/network/ip_x86_64.phpt
+++ b/ext/standard/tests/network/ip_x86_64.phpt
@@ -29,7 +29,7 @@ var_dump(long2ip(-110000));
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 int(2130706433)
 string(9) "127.0.0.1"
 int(167772161)
diff --git a/ext/standard/tests/random/random_int.phpt b/ext/standard/tests/random/random_int.phpt
index 94654a7f72..6fd04420ee 100644
--- a/ext/standard/tests/random/random_int.phpt
+++ b/ext/standard/tests/random/random_int.phpt
@@ -15,7 +15,7 @@ var_dump(is_int(random_int(PHP_INT_MIN, PHP_INT_MAX)));
 var_dump(random_int(42,42));
 
 ?>
---EXPECTF--
+--EXPECT--
 bool(true)
 bool(true)
 bool(true)
diff --git a/ext/standard/tests/serialize/bug45706.phpt b/ext/standard/tests/serialize/bug45706.phpt
index cc71dec4e6..c29081cab7 100644
--- a/ext/standard/tests/serialize/bug45706.phpt
+++ b/ext/standard/tests/serialize/bug45706.phpt
@@ -12,7 +12,7 @@ $s = serialize($x);
 $s = str_replace("Foo", "Bar", $s);
 $y = unserialize($s);
 var_dump($y);
---EXPECTF--
+--EXPECT--
 array(2) {
   [0]=>
   object(__PHP_Incomplete_Class)#3 (5) {
diff --git a/ext/standard/tests/streams/bug61115.phpt b/ext/standard/tests/streams/bug61115.phpt
index 3caffde232..ce6b57651c 100644
--- a/ext/standard/tests/streams/bug61115.phpt
+++ b/ext/standard/tests/streams/bug61115.phpt
@@ -13,5 +13,5 @@ try {
     echo $e->getMessage(), "\n";
 }
 ?>
---EXPECTF--
+--EXPECT--
 Object of class Closure could not be converted to string
diff --git a/ext/standard/tests/streams/bug78662.phpt b/ext/standard/tests/streams/bug78662.phpt
index e874d5aef6..2ea00b67b1 100644
--- a/ext/standard/tests/streams/bug78662.phpt
+++ b/ext/standard/tests/streams/bug78662.phpt
@@ -26,7 +26,7 @@ var_dump(fwrite($f, "bar"));
 var_dump(fread($f, 100));
 ?>
 Done
---EXPECTF--
+--EXPECT--
 bool(false)
 bool(false)
 Done
diff --git a/ext/standard/tests/streams/stream_set_timeout_error.phpt b/ext/standard/tests/streams/stream_set_timeout_error.phpt
index 7dcc645422..64e9aa5773 100644
--- a/ext/standard/tests/streams/stream_set_timeout_error.phpt
+++ b/ext/standard/tests/streams/stream_set_timeout_error.phpt
@@ -41,7 +41,7 @@ fclose($server);
 
 echo "Done";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing stream_set_timeout() : error conditions ***
 
 -- Testing stream_set_timeout() function with a closed socket --
diff --git a/ext/standard/tests/strings/chr_error.phpt b/ext/standard/tests/strings/chr_error.phpt
index 2603b69210..b6bd9973b6 100644
--- a/ext/standard/tests/strings/chr_error.phpt
+++ b/ext/standard/tests/strings/chr_error.phpt
@@ -26,7 +26,7 @@ try {
 }
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing chr() : error conditions ***
 
 -- Testing chr() function with no arguments --
diff --git a/ext/standard/tests/strings/fprintf_error.phpt b/ext/standard/tests/strings/fprintf_error.phpt
index 1ffc188051..bfef30a75b 100644
--- a/ext/standard/tests/strings/fprintf_error.phpt
+++ b/ext/standard/tests/strings/fprintf_error.phpt
@@ -29,7 +29,7 @@ try {
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing Error Conditions ***
 Wrong parameter count for fprintf()
 Wrong parameter count for fprintf()
diff --git a/ext/standard/tests/strings/htmlentities24.phpt b/ext/standard/tests/strings/htmlentities24.phpt
index f2abfd5ba8..2a04bd345e 100644
--- a/ext/standard/tests/strings/htmlentities24.phpt
+++ b/ext/standard/tests/strings/htmlentities24.phpt
@@ -37,7 +37,7 @@ var_dump( htmlentities($str, ENT_COMPAT) );
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 *** Retrieving htmlentities for 256 characters ***
 string(12) "636872283029"
 string(12) "636872283129"
diff --git a/ext/standard/tests/strings/htmlspecialchars.phpt b/ext/standard/tests/strings/htmlspecialchars.phpt
index 6e5c5fac36..5677da6fe2 100644
--- a/ext/standard/tests/strings/htmlspecialchars.phpt
+++ b/ext/standard/tests/strings/htmlspecialchars.phpt
@@ -37,7 +37,7 @@ var_dump( htmlspecialchars($str, ENT_COMPAT) );
 
 echo "Done\n"
 ?>
---EXPECTF--
+--EXPECT--
 *** Retrieving htmlspecialchars for 256 characters ***
 string(12) "636872283029"
 string(12) "636872283129"
diff --git a/ext/standard/tests/strings/ltrim.phpt b/ext/standard/tests/strings/ltrim.phpt
index 51287e04d7..8ac57ca92e 100644
--- a/ext/standard/tests/strings/ltrim.phpt
+++ b/ext/standard/tests/strings/ltrim.phpt
@@ -41,7 +41,7 @@ var_dump( ltrim($str, "\nusi") );
 echo "\nDone\n";
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Output for Error Conditions ***
 
  *** Using heredoc string ***
diff --git a/ext/standard/tests/strings/metaphone.phpt b/ext/standard/tests/strings/metaphone.phpt
index 2bc16b3248..a6b52e3934 100644
--- a/ext/standard/tests/strings/metaphone.phpt
+++ b/ext/standard/tests/strings/metaphone.phpt
@@ -24,7 +24,7 @@ foreach($array as $str) {
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 string(0) ""
 string(0) ""
 bool(false)
diff --git a/ext/standard/tests/strings/parse_str_basic1.phpt b/ext/standard/tests/strings/parse_str_basic1.phpt
index 60277fa184..38652ba0fa 100644
--- a/ext/standard/tests/strings/parse_str_basic1.phpt
+++ b/ext/standard/tests/strings/parse_str_basic1.phpt
@@ -27,7 +27,7 @@ var_dump(parse_str($s1, $res3_array));
 var_dump($res3_array);
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing parse_str() : basic functionality ***
 
 Basic test WITH undefined var for result arg
diff --git a/ext/standard/tests/strings/parse_str_basic3.phpt b/ext/standard/tests/strings/parse_str_basic3.phpt
index 25b5f8745d..0ea88a365b 100644
--- a/ext/standard/tests/strings/parse_str_basic3.phpt
+++ b/ext/standard/tests/strings/parse_str_basic3.phpt
@@ -73,7 +73,7 @@ var_dump(parse_str($str, $res));
 var_dump($res);
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing parse_str() : basic functionality ***
 
 Test string with array values and results array
diff --git a/ext/standard/tests/strings/printf_error.phpt b/ext/standard/tests/strings/printf_error.phpt
index 62591e9e6f..e9fc0a4383 100644
--- a/ext/standard/tests/strings/printf_error.phpt
+++ b/ext/standard/tests/strings/printf_error.phpt
@@ -61,7 +61,7 @@ try {
 }
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing printf() : error conditions ***
 
 -- Testing printf() function with Zero arguments --
diff --git a/ext/standard/tests/strings/rtrim.phpt b/ext/standard/tests/strings/rtrim.phpt
index 223a839f58..2fc531faad 100644
--- a/ext/standard/tests/strings/rtrim.phpt
+++ b/ext/standard/tests/strings/rtrim.phpt
@@ -42,7 +42,7 @@ var_dump( rtrim($str, "ing") );
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 *** Output for Normal Behaviour ***
 string(10) "rtrim test"
 string(13) "rtrim test   "
diff --git a/ext/standard/tests/strings/soundex.phpt b/ext/standard/tests/strings/soundex.phpt
index ef61ac495e..c4acc2ff68 100644
--- a/ext/standard/tests/strings/soundex.phpt
+++ b/ext/standard/tests/strings/soundex.phpt
@@ -30,7 +30,7 @@ foreach ($array as $str) {
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 bool(false)
 string(4) "0000"
 string(4) "F650"
diff --git a/ext/standard/tests/strings/sprintf_variation15.phpt b/ext/standard/tests/strings/sprintf_variation15.phpt
index 07774a92ec..66d85647ff 100644
--- a/ext/standard/tests/strings/sprintf_variation15.phpt
+++ b/ext/standard/tests/strings/sprintf_variation15.phpt
@@ -74,7 +74,7 @@ foreach($string_values as $string_value) {
 
 echo "Done";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing sprintf() : string formats with string values ***
 
 -- Iteration 1 --
diff --git a/ext/standard/tests/strings/sscanf_error.phpt b/ext/standard/tests/strings/sscanf_error.phpt
index ffaefb8418..0af8f9ed14 100644
--- a/ext/standard/tests/strings/sscanf_error.phpt
+++ b/ext/standard/tests/strings/sscanf_error.phpt
@@ -20,7 +20,7 @@ try {
     echo $exception->getMessage() . "\n";
 }
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing sscanf() : error conditions ***
 
 -- Testing sscanf() function with more than expected no. of arguments --
diff --git a/ext/standard/tests/strings/str_ireplace.phpt b/ext/standard/tests/strings/str_ireplace.phpt
index a5a35769e4..c360004a14 100644
--- a/ext/standard/tests/strings/str_ireplace.phpt
+++ b/ext/standard/tests/strings/str_ireplace.phpt
@@ -44,7 +44,7 @@ var_dump($Data = str_ireplace("\n", "<br>", $Data));
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 string(0) ""
 string(8) "aaaaaaaT"
 string(8) "aaaaaaaT"
diff --git a/ext/standard/tests/strings/stristr.phpt b/ext/standard/tests/strings/stristr.phpt
index 7b1b5312a1..09e6cff53c 100644
--- a/ext/standard/tests/strings/stristr.phpt
+++ b/ext/standard/tests/strings/stristr.phpt
@@ -14,7 +14,7 @@ stristr() function
     var_dump(md5(stristr("\\\\a\\", "\\a")));
     var_dump(stristr("tEsT sTrInG", " "));
 ?>
---EXPECTF--
+--EXPECT--
 string(11) "tEsT sTrInG"
 string(6) "sTrInG"
 string(6) "sTrInG"
diff --git a/ext/standard/tests/strings/strrchr_variation1.phpt b/ext/standard/tests/strings/strrchr_variation1.phpt
index a75dd96bbf..f28571ba7f 100644
--- a/ext/standard/tests/strings/strrchr_variation1.phpt
+++ b/ext/standard/tests/strings/strrchr_variation1.phpt
@@ -81,7 +81,7 @@ for($index=0; $index<count($needle); $index++) {
 }
 echo "*** Done ***";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing strrchr() function: with various double quoted strings ***
 -- Iteration 1 --
 string(16) "lo123456he #4 A "
diff --git a/ext/standard/tests/strings/strrchr_variation2.phpt b/ext/standard/tests/strings/strrchr_variation2.phpt
index 2ff6720fb9..e6e510dd55 100644
--- a/ext/standard/tests/strings/strrchr_variation2.phpt
+++ b/ext/standard/tests/strings/strrchr_variation2.phpt
@@ -81,7 +81,7 @@ for($index=0; $index<count($needle); $index++) {
 }
 echo "*** Done ***";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing strrchr() function: with various single quoted strings ***
 -- Iteration 1 --
 string(22) "lo123456he \x234 \101 "
diff --git a/ext/standard/tests/strings/strtolower.phpt b/ext/standard/tests/strings/strtolower.phpt
index 7c7e2bb4c7..041b66a00c 100644
--- a/ext/standard/tests/strings/strtolower.phpt
+++ b/ext/standard/tests/strings/strtolower.phpt
@@ -65,7 +65,7 @@ else
 
 echo "*** Done ***";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing strtolower() with 128 chars ***
 00 => 00
 01 => 01
diff --git a/ext/standard/tests/strings/strtoupper1.phpt b/ext/standard/tests/strings/strtoupper1.phpt
index c243ff10c7..6c7434ba16 100644
--- a/ext/standard/tests/strings/strtoupper1.phpt
+++ b/ext/standard/tests/strings/strtoupper1.phpt
@@ -65,7 +65,7 @@ else
 
 echo "*** Done ***";
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing strtoupper() with 128 chars ***
 00 => 00
 01 => 01
diff --git a/ext/standard/tests/strings/strval_error.phpt b/ext/standard/tests/strings/strval_error.phpt
index a363e26f24..88cca824a6 100644
--- a/ext/standard/tests/strings/strval_error.phpt
+++ b/ext/standard/tests/strings/strval_error.phpt
@@ -25,7 +25,7 @@ try {
 }
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing strval() : error conditions ***
 
 -- Testing strval() function with object which has not toString() method  --
diff --git a/ext/standard/tests/strings/substr.phpt b/ext/standard/tests/strings/substr.phpt
index fe687ed1ae..6028c17008 100644
--- a/ext/standard/tests/strings/substr.phpt
+++ b/ext/standard/tests/strings/substr.phpt
@@ -66,7 +66,7 @@ var_dump (substr("abcdef" , 2, NULL) );
 echo"\nDone";
 
 ?>
---EXPECTF--
+--EXPECT--
 --- Iteration 1 ---
 
 -- Variations for two arguments --
diff --git a/ext/standard/tests/strings/trim1.phpt b/ext/standard/tests/strings/trim1.phpt
index 1ad504c61d..a31d7213a1 100644
--- a/ext/standard/tests/strings/trim1.phpt
+++ b/ext/standard/tests/strings/trim1.phpt
@@ -49,7 +49,7 @@ var_dump( trim($str, "us\ning") );
 
 echo "\nDone";
 ?>
---EXPECTF--
+--EXPECT--
 string(0) ""
 string(0) ""
 string(1) "0"
diff --git a/ext/standard/tests/strings/vfprintf_error1.phpt b/ext/standard/tests/strings/vfprintf_error1.phpt
index f2057ea388..fdaecd6fb3 100644
--- a/ext/standard/tests/strings/vfprintf_error1.phpt
+++ b/ext/standard/tests/strings/vfprintf_error1.phpt
@@ -42,7 +42,7 @@ $file = 'vfprintf_error1.txt';
 unlink( $file );
 
 ?>
---EXPECTF--
+--EXPECT--
 -- Testing vfprintf() function with more than expected no. of arguments --
 Wrong parameter count for vfprintf()
 Wrong parameter count for vfprintf()
diff --git a/ext/standard/tests/time/strptime_error.phpt b/ext/standard/tests/time/strptime_error.phpt
index d7eb11fc55..87965cd1a2 100644
--- a/ext/standard/tests/time/strptime_error.phpt
+++ b/ext/standard/tests/time/strptime_error.phpt
@@ -24,7 +24,7 @@ $format = '%b %d %Y %H:%M:%S';
 var_dump( strptime('foo', $format) );
 
 ?>
---EXPECTF--
+--EXPECT--
 *** Testing strptime() : error conditions ***
 
 -- Testing strptime() function on failure --
diff --git a/ext/tokenizer/tests/001.phpt b/ext/tokenizer/tests/001.phpt
index 8e58c81891..006377d5e9 100644
--- a/ext/tokenizer/tests/001.phpt
+++ b/ext/tokenizer/tests/001.phpt
@@ -129,7 +129,7 @@ echo token_name(0x8000000F), "\n";
 
 echo "Done\n";
 ?>
---EXPECTF--
+--EXPECT--
 T_INCLUDE
 T_INCLUDE_ONCE
 T_EVAL
diff --git a/ext/xmlreader/tests/static.phpt b/ext/xmlreader/tests/static.phpt
index 1c6cb5b870..a722e31105 100644
--- a/ext/xmlreader/tests/static.phpt
+++ b/ext/xmlreader/tests/static.phpt
@@ -22,7 +22,7 @@ while ($reader->read()) {
     echo $reader->name, "\n";
 }
 ?>
---EXPECTF--
+--EXPECT--
 books
 books
 books
diff --git a/ext/xmlwriter/tests/bug41326.phpt b/ext/xmlwriter/tests/bug41326.phpt
index 886e149261..c04ffe3167 100644
--- a/ext/xmlwriter/tests/bug41326.phpt
+++ b/ext/xmlwriter/tests/bug41326.phpt
@@ -35,7 +35,7 @@ $xw->endElement();
 $xw->endDocument();
 print $xw->flush(true);
 ?>
---EXPECTF--
+--EXPECT--
 <?xml version="1.0"?>
 <test>
  <foo/>
diff --git a/tests/output/stream_isatty_err.phpt b/tests/output/stream_isatty_err.phpt
index 55a25f1c9f..e7c1038350 100644
--- a/tests/output/stream_isatty_err.phpt
+++ b/tests/output/stream_isatty_err.phpt
@@ -13,7 +13,7 @@ STDERR
 require __DIR__.'/stream_isatty.inc';
 testToStdErr();
 ?>
---EXPECTF--
+--EXPECT--
 STDIN (constant): bool(true)
 STDIN (fopen): bool(true)
 STDIN (php://fd/0): bool(true)
diff --git a/tests/output/stream_isatty_in-err.phpt b/tests/output/stream_isatty_in-err.phpt
index 2554eb4689..73514955d4 100644
--- a/tests/output/stream_isatty_in-err.phpt
+++ b/tests/output/stream_isatty_in-err.phpt
@@ -13,7 +13,7 @@ STDIN STDERR
 require __DIR__.'/stream_isatty.inc';
 testToStdErr();
 ?>
---EXPECTF--
+--EXPECT--
 STDIN (constant): bool(false)
 STDIN (fopen): bool(false)
 STDIN (php://fd/0): bool(false)
diff --git a/tests/output/stream_isatty_in-out-err.phpt b/tests/output/stream_isatty_in-out-err.phpt
index 496bdd100e..9b65e8861b 100644
--- a/tests/output/stream_isatty_in-out-err.phpt
+++ b/tests/output/stream_isatty_in-out-err.phpt
@@ -13,7 +13,7 @@ STDIN STDOUT STDERR
 require __DIR__.'/stream_isatty.inc';
 testToStdOut();
 ?>
---EXPECTF--
+--EXPECT--
 STDIN (constant): bool(false)
 STDIN (fopen): bool(false)
 STDIN (php://fd/0): bool(false)
diff --git a/tests/output/stream_isatty_in-out.phpt b/tests/output/stream_isatty_in-out.phpt
index d58e9aa05c..c2bb346854 100644
--- a/tests/output/stream_isatty_in-out.phpt
+++ b/tests/output/stream_isatty_in-out.phpt
@@ -13,7 +13,7 @@ STDIN STDOUT
 require __DIR__.'/stream_isatty.inc';
 testToStdOut();
 ?>
---EXPECTF--
+--EXPECT--
 STDIN (constant): bool(false)
 STDIN (fopen): bool(false)
 STDIN (php://fd/0): bool(false)
diff --git a/tests/output/stream_isatty_out-err.phpt b/tests/output/stream_isatty_out-err.phpt
index e3ec1237bc..dc113a9720 100644
--- a/tests/output/stream_isatty_out-err.phpt
+++ b/tests/output/stream_isatty_out-err.phpt
@@ -13,7 +13,7 @@ STDOUT STDERR
 require __DIR__.'/stream_isatty.inc';
 testToStdOut();
 ?>
---EXPECTF--
+--EXPECT--
 STDIN (constant): bool(true)
 STDIN (fopen): bool(true)
 STDIN (php://fd/0): bool(true)
diff --git a/tests/output/stream_isatty_out.phpt b/tests/output/stream_isatty_out.phpt
index 3ea4996ac4..f18c986c5a 100644
--- a/tests/output/stream_isatty_out.phpt
+++ b/tests/output/stream_isatty_out.phpt
@@ -13,7 +13,7 @@ STDOUT
 require __DIR__.'/stream_isatty.inc';
 testToStdOut();
 ?>
---EXPECTF--
+--EXPECT--
 STDIN (constant): bool(true)
 STDIN (fopen): bool(true)
 STDIN (php://fd/0): bool(true)

# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
#
# Date:      Mon Apr 27 21:01:47 2020 +0200
#
# On branch tests/use-simpler-expect-section
# Your branch and 'fork/tests/use-simpler-expect-section' have diverged,
# and have 1 and 1 different commits each, respectively.
#   (use "git pull" to merge the remote branch into yours)
#
# Changes to be committed:
#	modified:   Zend/tests/005.phpt
#	modified:   Zend/tests/bug27669.phpt
#	modified:   Zend/tests/bug51827.phpt
#	modified:   Zend/tests/bug63206.phpt
#	modified:   Zend/tests/bug63206_1.phpt
#	modified:   Zend/tests/bug63206_2.phpt
#	modified:   Zend/tests/incompat_ctx_user.phpt
#	modified:   Zend/tests/instanceof_001.phpt
#	modified:   Zend/tests/unexpected_ref_bug.phpt
#	modified:   ext/date/tests/012.phpt
#	modified:   ext/date/tests/DatePeriod_wrong_recurrence_on_constructor.phpt
#	modified:   ext/date/tests/DateTimeZone_listAbbreviations_basic1.phpt
#	modified:   ext/date/tests/date_parse_001.phpt
#	modified:   ext/date/tests/date_parse_error.phpt
#	modified:   ext/date/tests/gmmktime_basic.phpt
#	modified:   ext/date/tests/mktime_error.phpt
#	modified:   ext/date/tests/timezone_abbreviations_list_basic1.phpt
#	modified:   ext/fileinfo/tests/finfo_set_flags_basic-mb.phpt
#	modified:   ext/fileinfo/tests/finfo_set_flags_basic.phpt
#	modified:   ext/filter/tests/007.phpt
#	modified:   ext/filter/tests/008.phpt
#	modified:   ext/filter/tests/010.phpt
#	modified:   ext/hash/tests/hash_hkdf_edges.phpt
#	modified:   ext/hash/tests/hash_hmac_file_basic.phpt
#	modified:   ext/json/tests/json_last_error_msg_error.phpt
#	modified:   ext/libxml/tests/bug76777.phpt
#	modified:   ext/pcre/tests/preg_replace_error2.phpt
#	modified:   ext/pcre/tests/split2.phpt
#	modified:   ext/phar/tests/phar_isvalidpharfilename.phpt
#	modified:   ext/phar/tests/pharfileinfo_chmod.phpt
#	modified:   ext/phar/tests/pharfileinfo_setmetadata.phpt
#	modified:   ext/phar/tests/stat2_5.3.phpt
#	modified:   ext/posix/tests/posix_getgrgid_error.phpt
#	modified:   ext/posix/tests/posix_getpgid_error.phpt
#	modified:   ext/posix/tests/posix_getpwuid_error.phpt
#	modified:   ext/posix/tests/posix_getsid_error.phpt
#	modified:   ext/posix/tests/posix_initgroups.phpt
#	modified:   ext/posix/tests/posix_kill_error.phpt
#	modified:   ext/posix/tests/posix_strerror_error.phpt
#	modified:   ext/reflection/tests/ReflectionClass_hasProperty_002.phpt
#	modified:   ext/reflection/tests/ReflectionMethod_getClosure_error.phpt
#	modified:   ext/reflection/tests/ReflectionMethod_invokeArgs_error3.phpt
#	modified:   ext/reflection/tests/ReflectionObject_getName_basic.phpt
#	modified:   ext/reflection/tests/ReflectionProperty_isDefault_basic.phpt
#	modified:   ext/reflection/tests/ReflectionProperty_setValue_error.phpt
#	modified:   ext/session/tests/bug79221.phpt
#	modified:   ext/session/tests/session_cache_limiter_error.phpt
#	modified:   ext/spl/tests/bug61347.phpt
#	modified:   ext/spl/tests/fileobject_005.phpt
#	modified:   ext/spl/tests/iterator_045.phpt
#	modified:   ext/spl/tests/regexIterator_setMode_error.phpt
#	modified:   ext/spl/tests/spl_heap_is_empty_basic.phpt
#	modified:   ext/sqlite3/tests/sqlite3_40_setauthorizer.phpt
#	modified:   ext/sqlite3/tests/sqlite3stmt_getsql_expanded.phpt
#	modified:   ext/standard/tests/array/005.phpt
#	modified:   ext/standard/tests/array/009.phpt
#	modified:   ext/standard/tests/array/array_diff_assoc_error.phpt
#	modified:   ext/standard/tests/array/array_diff_error.phpt
#	modified:   ext/standard/tests/array/array_diff_key_error.phpt
#	modified:   ext/standard/tests/array/array_filter.phpt
#	modified:   ext/standard/tests/array/array_filter_variation10.phpt
#	modified:   ext/standard/tests/array/array_key_exists_variation3.phpt
#	modified:   ext/standard/tests/array/array_map_error.phpt
#	modified:   ext/standard/tests/array/array_merge.phpt
#	modified:   ext/standard/tests/array/array_push.phpt
#	modified:   ext/standard/tests/array/array_slice.phpt
#	modified:   ext/standard/tests/array/array_unshift.phpt
#	modified:   ext/standard/tests/array/array_walk.phpt
#	modified:   ext/standard/tests/array/array_walk_error2.phpt
#	modified:   ext/standard/tests/array/array_walk_recursive1.phpt
#	modified:   ext/standard/tests/array/array_walk_recursive_error2.phpt
#	modified:   ext/standard/tests/array/array_walk_recursive_variation7.phpt
#	modified:   ext/standard/tests/array/array_walk_variation7.phpt
#	modified:   ext/standard/tests/array/uasort_variation8.phpt
#	modified:   ext/standard/tests/array/usort_variation8.phpt
#	modified:   ext/standard/tests/assert/assert_variation.phpt
#	modified:   ext/standard/tests/file/auto_detect_line_endings_1.phpt
#	modified:   ext/standard/tests/file/auto_detect_line_endings_2.phpt
#	modified:   ext/standard/tests/file/basename.phpt
#	modified:   ext/standard/tests/file/fscanf.phpt
#	modified:   ext/standard/tests/file/fscanf_variation10.phpt
#	modified:   ext/standard/tests/file/is_dir_variation3.phpt
#	modified:   ext/standard/tests/file/is_executable_error.phpt
#	modified:   ext/standard/tests/file/is_executable_variation3.phpt
#	modified:   ext/standard/tests/file/is_file_variation3.phpt
#	modified:   ext/standard/tests/file/is_readable_error.phpt
#	modified:   ext/standard/tests/file/is_readable_variation3.phpt
#	modified:   ext/standard/tests/file/is_uploaded_file_basic.phpt
#	modified:   ext/standard/tests/file/is_writable_error.phpt
#	modified:   ext/standard/tests/file/is_writable_variation3.phpt
#	modified:   ext/standard/tests/file/move_uploaded_file_basic.phpt
#	modified:   ext/standard/tests/general_functions/get_include_path_basic.phpt
#	modified:   ext/standard/tests/general_functions/include_path.phpt
#	modified:   ext/standard/tests/general_functions/is_array.phpt
#	modified:   ext/standard/tests/general_functions/is_bool.phpt
#	modified:   ext/standard/tests/general_functions/is_float_64bit.phpt
#	modified:   ext/standard/tests/general_functions/is_int_64bit.phpt
#	modified:   ext/standard/tests/general_functions/is_null.phpt
#	modified:   ext/standard/tests/general_functions/is_numeric.phpt
#	modified:   ext/standard/tests/general_functions/is_object.phpt
#	modified:   ext/standard/tests/general_functions/is_scalar.phpt
#	modified:   ext/standard/tests/general_functions/is_string.phpt
#	modified:   ext/standard/tests/general_functions/ob_get_length_basic.phpt
#	modified:   ext/standard/tests/general_functions/php_uname_error.phpt
#	modified:   ext/standard/tests/general_functions/print_r.phpt
#	modified:   ext/standard/tests/general_functions/print_r_64bit.phpt
#	modified:   ext/standard/tests/general_functions/var_dump_64bit.phpt
#	modified:   ext/standard/tests/general_functions/var_export-locale.phpt
#	modified:   ext/standard/tests/image/image_type_to_extension.phpt
#	modified:   ext/standard/tests/math/lcg_value_basic.phpt
#	modified:   ext/standard/tests/network/inet.phpt
#	modified:   ext/standard/tests/network/ip_x86_64.phpt
#	modified:   ext/standard/tests/random/random_int.phpt
#	modified:   ext/standard/tests/serialize/bug45706.phpt
#	modified:   ext/standard/tests/streams/bug61115.phpt
#	modified:   ext/standard/tests/streams/bug78662.phpt
#	modified:   ext/standard/tests/streams/stream_set_timeout_error.phpt
#	modified:   ext/standard/tests/strings/chr_error.phpt
#	modified:   ext/standard/tests/strings/fprintf_error.phpt
#	modified:   ext/standard/tests/strings/htmlentities24.phpt
#	modified:   ext/standard/tests/strings/htmlspecialchars.phpt
#	modified:   ext/standard/tests/strings/ltrim.phpt
#	modified:   ext/standard/tests/strings/metaphone.phpt
#	modified:   ext/standard/tests/strings/parse_str_basic1.phpt
#	modified:   ext/standard/tests/strings/parse_str_basic3.phpt
#	modified:   ext/standard/tests/strings/printf_error.phpt
#	modified:   ext/standard/tests/strings/rtrim.phpt
#	modified:   ext/standard/tests/strings/soundex.phpt
#	modified:   ext/standard/tests/strings/sprintf_variation15.phpt
#	modified:   ext/standard/tests/strings/sscanf_error.phpt
#	modified:   ext/standard/tests/strings/str_ireplace.phpt
#	modified:   ext/standard/tests/strings/stristr.phpt
#	modified:   ext/standard/tests/strings/strrchr_variation1.phpt
#	modified:   ext/standard/tests/strings/strrchr_variation2.phpt
#	modified:   ext/standard/tests/strings/strtolower.phpt
#	modified:   ext/standard/tests/strings/strtoupper1.phpt
#	modified:   ext/standard/tests/strings/strval_error.phpt
#	modified:   ext/standard/tests/strings/substr.phpt
#	modified:   ext/standard/tests/strings/trim1.phpt
#	modified:   ext/standard/tests/strings/vfprintf_error1.phpt
#	modified:   ext/standard/tests/time/strptime_error.phpt
#	modified:   ext/tokenizer/tests/001.phpt
#	modified:   ext/xmlreader/tests/static.phpt
#	modified:   ext/xmlwriter/tests/bug41326.phpt
#	modified:   tests/output/stream_isatty_err.phpt
#	modified:   tests/output/stream_isatty_in-err.phpt
#	modified:   tests/output/stream_isatty_in-out-err.phpt
#	modified:   tests/output/stream_isatty_in-out.phpt
#	modified:   tests/output/stream_isatty_out-err.phpt
#	modified:   tests/output/stream_isatty_out.phpt
#
# Changes not staged for commit:
#	modified:   run-tests.php
#

# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
#
# Date:      Mon Apr 27 21:01:47 2020 +0200
#
# On branch tests/use-simpler-expect-section
# Your branch is up to date with 'fork/tests/use-simpler-expect-section'.
#
# Changes to be committed:
#	modified:   Zend/tests/005.phpt
#	modified:   Zend/tests/bug27669.phpt
#	modified:   Zend/tests/bug51827.phpt
#	modified:   Zend/tests/bug63206.phpt
#	modified:   Zend/tests/bug63206_1.phpt
#	modified:   Zend/tests/bug63206_2.phpt
#	modified:   Zend/tests/incompat_ctx_user.phpt
#	modified:   Zend/tests/instanceof_001.phpt
#	modified:   Zend/tests/unexpected_ref_bug.phpt
#	modified:   ext/date/tests/012.phpt
#	modified:   ext/date/tests/DatePeriod_wrong_recurrence_on_constructor.phpt
#	modified:   ext/date/tests/DateTimeZone_listAbbreviations_basic1.phpt
#	modified:   ext/date/tests/date_parse_001.phpt
#	modified:   ext/date/tests/date_parse_error.phpt
#	modified:   ext/date/tests/gmmktime_basic.phpt
#	modified:   ext/date/tests/mktime_error.phpt
#	modified:   ext/date/tests/timezone_abbreviations_list_basic1.phpt
#	modified:   ext/fileinfo/tests/finfo_set_flags_basic-mb.phpt
#	modified:   ext/fileinfo/tests/finfo_set_flags_basic.phpt
#	modified:   ext/filter/tests/007.phpt
#	modified:   ext/filter/tests/008.phpt
#	modified:   ext/filter/tests/010.phpt
#	modified:   ext/hash/tests/hash_hkdf_edges.phpt
#	modified:   ext/hash/tests/hash_hmac_file_basic.phpt
#	modified:   ext/json/tests/json_last_error_msg_error.phpt
#	modified:   ext/libxml/tests/bug76777.phpt
#	modified:   ext/pcre/tests/preg_replace_error2.phpt
#	modified:   ext/pcre/tests/split2.phpt
#	modified:   ext/phar/tests/phar_isvalidpharfilename.phpt
#	modified:   ext/phar/tests/pharfileinfo_chmod.phpt
#	modified:   ext/phar/tests/pharfileinfo_setmetadata.phpt
#	modified:   ext/phar/tests/stat2_5.3.phpt
#	modified:   ext/posix/tests/posix_getgrgid_error.phpt
#	modified:   ext/posix/tests/posix_getpgid_error.phpt
#	modified:   ext/posix/tests/posix_getpwuid_error.phpt
#	modified:   ext/posix/tests/posix_getsid_error.phpt
#	modified:   ext/posix/tests/posix_initgroups.phpt
#	modified:   ext/posix/tests/posix_kill_error.phpt
#	modified:   ext/posix/tests/posix_strerror_error.phpt
#	modified:   ext/reflection/tests/ReflectionClass_hasProperty_002.phpt
#	modified:   ext/reflection/tests/ReflectionMethod_getClosure_error.phpt
#	modified:   ext/reflection/tests/ReflectionMethod_invokeArgs_error3.phpt
#	modified:   ext/reflection/tests/ReflectionObject_getName_basic.phpt
#	modified:   ext/reflection/tests/ReflectionProperty_isDefault_basic.phpt
#	modified:   ext/reflection/tests/ReflectionProperty_setValue_error.phpt
#	modified:   ext/session/tests/bug79221.phpt
#	modified:   ext/session/tests/session_cache_limiter_error.phpt
#	modified:   ext/spl/tests/bug61347.phpt
#	modified:   ext/spl/tests/fileobject_005.phpt
#	modified:   ext/spl/tests/iterator_045.phpt
#	modified:   ext/spl/tests/regexIterator_setMode_error.phpt
#	modified:   ext/spl/tests/spl_heap_is_empty_basic.phpt
#	modified:   ext/sqlite3/tests/sqlite3_40_setauthorizer.phpt
#	modified:   ext/sqlite3/tests/sqlite3stmt_getsql_expanded.phpt
#	modified:   ext/standard/tests/array/005.phpt
#	modified:   ext/standard/tests/array/009.phpt
#	modified:   ext/standard/tests/array/array_diff_assoc_error.phpt
#	modified:   ext/standard/tests/array/array_diff_error.phpt
#	modified:   ext/standard/tests/array/array_diff_key_error.phpt
#	modified:   ext/standard/tests/array/array_filter.phpt
#	modified:   ext/standard/tests/array/array_filter_variation10.phpt
#	modified:   ext/standard/tests/array/array_key_exists_variation3.phpt
#	modified:   ext/standard/tests/array/array_map_error.phpt
#	modified:   ext/standard/tests/array/array_merge.phpt
#	modified:   ext/standard/tests/array/array_push.phpt
#	modified:   ext/standard/tests/array/array_slice.phpt
#	modified:   ext/standard/tests/array/array_unshift.phpt
#	modified:   ext/standard/tests/array/array_walk.phpt
#	modified:   ext/standard/tests/array/array_walk_error2.phpt
#	modified:   ext/standard/tests/array/array_walk_recursive1.phpt
#	modified:   ext/standard/tests/array/array_walk_recursive_error2.phpt
#	modified:   ext/standard/tests/array/array_walk_recursive_variation7.phpt
#	modified:   ext/standard/tests/array/array_walk_variation7.phpt
#	modified:   ext/standard/tests/array/uasort_variation8.phpt
#	modified:   ext/standard/tests/array/usort_variation8.phpt
#	modified:   ext/standard/tests/assert/assert_variation.phpt
#	modified:   ext/standard/tests/file/auto_detect_line_endings_1.phpt
#	modified:   ext/standard/tests/file/auto_detect_line_endings_2.phpt
#	modified:   ext/standard/tests/file/basename.phpt
#	modified:   ext/standard/tests/file/fscanf.phpt
#	modified:   ext/standard/tests/file/fscanf_variation10.phpt
#	modified:   ext/standard/tests/file/is_dir_variation3.phpt
#	modified:   ext/standard/tests/file/is_executable_error.phpt
#	modified:   ext/standard/tests/file/is_executable_variation3.phpt
#	modified:   ext/standard/tests/file/is_file_variation3.phpt
#	modified:   ext/standard/tests/file/is_readable_error.phpt
#	modified:   ext/standard/tests/file/is_readable_variation3.phpt
#	modified:   ext/standard/tests/file/is_uploaded_file_basic.phpt
#	modified:   ext/standard/tests/file/is_writable_error.phpt
#	modified:   ext/standard/tests/file/is_writable_variation3.phpt
#	modified:   ext/standard/tests/file/move_uploaded_file_basic.phpt
#	modified:   ext/standard/tests/general_functions/get_include_path_basic.phpt
#	modified:   ext/standard/tests/general_functions/include_path.phpt
#	modified:   ext/standard/tests/general_functions/is_array.phpt
#	modified:   ext/standard/tests/general_functions/is_bool.phpt
#	modified:   ext/standard/tests/general_functions/is_float_64bit.phpt
#	modified:   ext/standard/tests/general_functions/is_int_64bit.phpt
#	modified:   ext/standard/tests/general_functions/is_null.phpt
#	modified:   ext/standard/tests/general_functions/is_numeric.phpt
#	modified:   ext/standard/tests/general_functions/is_object.phpt
#	modified:   ext/standard/tests/general_functions/is_scalar.phpt
#	modified:   ext/standard/tests/general_functions/is_string.phpt
#	modified:   ext/standard/tests/general_functions/ob_get_length_basic.phpt
#	modified:   ext/standard/tests/general_functions/php_uname_error.phpt
#	modified:   ext/standard/tests/general_functions/print_r.phpt
#	modified:   ext/standard/tests/general_functions/print_r_64bit.phpt
#	modified:   ext/standard/tests/general_functions/var_dump_64bit.phpt
#	modified:   ext/standard/tests/general_functions/var_export-locale.phpt
#	modified:   ext/standard/tests/image/image_type_to_extension.phpt
#	modified:   ext/standard/tests/math/lcg_value_basic.phpt
#	modified:   ext/standard/tests/network/inet.phpt
#	modified:   ext/standard/tests/network/ip_x86_64.phpt
#	modified:   ext/standard/tests/random/random_int.phpt
#	modified:   ext/standard/tests/serialize/bug45706.phpt
#	modified:   ext/standard/tests/streams/bug61115.phpt
#	modified:   ext/standard/tests/streams/bug78662.phpt
#	modified:   ext/standard/tests/streams/stream_set_timeout_error.phpt
#	modified:   ext/standard/tests/strings/chr_error.phpt
#	modified:   ext/standard/tests/strings/fprintf_error.phpt
#	modified:   ext/standard/tests/strings/htmlentities24.phpt
#	modified:   ext/standard/tests/strings/htmlspecialchars.phpt
#	modified:   ext/standard/tests/strings/ltrim.phpt
#	modified:   ext/standard/tests/strings/metaphone.phpt
#	modified:   ext/standard/tests/strings/parse_str_basic1.phpt
#	modified:   ext/standard/tests/strings/parse_str_basic3.phpt
#	modified:   ext/standard/tests/strings/printf_error.phpt
#	modified:   ext/standard/tests/strings/rtrim.phpt
#	modified:   ext/standard/tests/strings/soundex.phpt
#	modified:   ext/standard/tests/strings/sprintf_variation15.phpt
#	modified:   ext/standard/tests/strings/sscanf_error.phpt
#	modified:   ext/standard/tests/strings/str_ireplace.phpt
#	modified:   ext/standard/tests/strings/stristr.phpt
#	modified:   ext/standard/tests/strings/strrchr_variation1.phpt
#	modified:   ext/standard/tests/strings/strrchr_variation2.phpt
#	modified:   ext/standard/tests/strings/strtolower.phpt
#	modified:   ext/standard/tests/strings/strtoupper1.phpt
#	modified:   ext/standard/tests/strings/strval_error.phpt
#	modified:   ext/standard/tests/strings/substr.phpt
#	modified:   ext/standard/tests/strings/trim1.phpt
#	modified:   ext/standard/tests/strings/vfprintf_error1.phpt
#	modified:   ext/standard/tests/time/strptime_error.phpt
#	modified:   ext/tokenizer/tests/001.phpt
#	modified:   ext/xmlreader/tests/static.phpt
#	modified:   ext/xmlwriter/tests/bug41326.phpt
#	modified:   tests/output/stream_isatty_err.phpt
#	modified:   tests/output/stream_isatty_in-err.phpt
#	modified:   tests/output/stream_isatty_in-out-err.phpt
#	modified:   tests/output/stream_isatty_in-out.phpt
#	modified:   tests/output/stream_isatty_out-err.phpt
#	modified:   tests/output/stream_isatty_out.phpt
#
# Changes not staged for commit:
#	modified:   run-tests.php
#

# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
#
# Date:      Mon Apr 27 21:01:47 2020 +0200
#
# On branch tests/use-simpler-expect-section
# Your branch is up to date with 'fork/tests/use-simpler-expect-section'.
#
# Changes to be committed:
#	modified:   Zend/tests/005.phpt
#	modified:   Zend/tests/bug27669.phpt
#	modified:   Zend/tests/bug51827.phpt
#	modified:   Zend/tests/bug63206.phpt
#	modified:   Zend/tests/bug63206_1.phpt
#	modified:   Zend/tests/bug63206_2.phpt
#	modified:   Zend/tests/incompat_ctx_user.phpt
#	modified:   Zend/tests/instanceof_001.phpt
#	modified:   Zend/tests/unexpected_ref_bug.phpt
#	modified:   ext/date/tests/012.phpt
#	modified:   ext/date/tests/DatePeriod_wrong_recurrence_on_constructor.phpt
#	modified:   ext/date/tests/DateTimeZone_listAbbreviations_basic1.phpt
#	modified:   ext/date/tests/date_parse_001.phpt
#	modified:   ext/date/tests/date_parse_error.phpt
#	modified:   ext/date/tests/gmmktime_basic.phpt
#	modified:   ext/date/tests/mktime_error.phpt
#	modified:   ext/date/tests/timezone_abbreviations_list_basic1.phpt
#	modified:   ext/fileinfo/tests/finfo_set_flags_basic-mb.phpt
#	modified:   ext/fileinfo/tests/finfo_set_flags_basic.phpt
#	modified:   ext/filter/tests/007.phpt
#	modified:   ext/filter/tests/008.phpt
#	modified:   ext/filter/tests/010.phpt
#	modified:   ext/hash/tests/hash_hkdf_edges.phpt
#	modified:   ext/hash/tests/hash_hmac_file_basic.phpt
#	modified:   ext/json/tests/json_last_error_msg_error.phpt
#	modified:   ext/libxml/tests/bug76777.phpt
#	modified:   ext/pcre/tests/preg_replace_error2.phpt
#	modified:   ext/pcre/tests/split2.phpt
#	modified:   ext/phar/tests/phar_isvalidpharfilename.phpt
#	modified:   ext/phar/tests/pharfileinfo_chmod.phpt
#	modified:   ext/phar/tests/pharfileinfo_setmetadata.phpt
#	modified:   ext/phar/tests/stat2_5.3.phpt
#	modified:   ext/posix/tests/posix_getgrgid_error.phpt
#	modified:   ext/posix/tests/posix_getpgid_error.phpt
#	modified:   ext/posix/tests/posix_getpwuid_error.phpt
#	modified:   ext/posix/tests/posix_getsid_error.phpt
#	modified:   ext/posix/tests/posix_initgroups.phpt
#	modified:   ext/posix/tests/posix_kill_error.phpt
#	modified:   ext/posix/tests/posix_strerror_error.phpt
#	modified:   ext/reflection/tests/ReflectionClass_hasProperty_002.phpt
#	modified:   ext/reflection/tests/ReflectionMethod_getClosure_error.phpt
#	modified:   ext/reflection/tests/ReflectionMethod_invokeArgs_error3.phpt
#	modified:   ext/reflection/tests/ReflectionObject_getName_basic.phpt
#	modified:   ext/reflection/tests/ReflectionProperty_isDefault_basic.phpt
#	modified:   ext/reflection/tests/ReflectionProperty_setValue_error.phpt
#	modified:   ext/session/tests/bug79221.phpt
#	modified:   ext/session/tests/session_cache_limiter_error.phpt
#	modified:   ext/spl/tests/bug61347.phpt
#	modified:   ext/spl/tests/fileobject_005.phpt
#	modified:   ext/spl/tests/iterator_045.phpt
#	modified:   ext/spl/tests/regexIterator_setMode_error.phpt
#	modified:   ext/spl/tests/spl_heap_is_empty_basic.phpt
#	modified:   ext/sqlite3/tests/sqlite3_40_setauthorizer.phpt
#	modified:   ext/sqlite3/tests/sqlite3stmt_getsql_expanded.phpt
#	modified:   ext/standard/tests/array/005.phpt
#	modified:   ext/standard/tests/array/009.phpt
#	modified:   ext/standard/tests/array/array_diff_assoc_error.phpt
#	modified:   ext/standard/tests/array/array_diff_error.phpt
#	modified:   ext/standard/tests/array/array_diff_key_error.phpt
#	modified:   ext/standard/tests/array/array_filter.phpt
#	modified:   ext/standard/tests/array/array_filter_variation10.phpt
#	modified:   ext/standard/tests/array/array_key_exists_variation3.phpt
#	modified:   ext/standard/tests/array/array_map_error.phpt
#	modified:   ext/standard/tests/array/array_merge.phpt
#	modified:   ext/standard/tests/array/array_push.phpt
#	modified:   ext/standard/tests/array/array_slice.phpt
#	modified:   ext/standard/tests/array/array_unshift.phpt
#	modified:   ext/standard/tests/array/array_walk.phpt
#	modified:   ext/standard/tests/array/array_walk_error2.phpt
#	modified:   ext/standard/tests/array/array_walk_recursive1.phpt
#	modified:   ext/standard/tests/array/array_walk_recursive_error2.phpt
#	modified:   ext/standard/tests/array/array_walk_recursive_variation7.phpt
#	modified:   ext/standard/tests/array/array_walk_variation7.phpt
#	modified:   ext/standard/tests/array/uasort_variation8.phpt
#	modified:   ext/standard/tests/array/usort_variation8.phpt
#	modified:   ext/standard/tests/assert/assert_variation.phpt
#	modified:   ext/standard/tests/file/auto_detect_line_endings_1.phpt
#	modified:   ext/standard/tests/file/auto_detect_line_endings_2.phpt
#	modified:   ext/standard/tests/file/basename.phpt
#	modified:   ext/standard/tests/file/fscanf.phpt
#	modified:   ext/standard/tests/file/fscanf_variation10.phpt
#	modified:   ext/standard/tests/file/is_dir_variation3.phpt
#	modified:   ext/standard/tests/file/is_executable_error.phpt
#	modified:   ext/standard/tests/file/is_executable_variation3.phpt
#	modified:   ext/standard/tests/file/is_file_variation3.phpt
#	modified:   ext/standard/tests/file/is_readable_error.phpt
#	modified:   ext/standard/tests/file/is_readable_variation3.phpt
#	modified:   ext/standard/tests/file/is_uploaded_file_basic.phpt
#	modified:   ext/standard/tests/file/is_writable_error.phpt
#	modified:   ext/standard/tests/file/is_writable_variation3.phpt
#	modified:   ext/standard/tests/file/move_uploaded_file_basic.phpt
#	modified:   ext/standard/tests/general_functions/get_include_path_basic.phpt
#	modified:   ext/standard/tests/general_functions/include_path.phpt
#	modified:   ext/standard/tests/general_functions/is_array.phpt
#	modified:   ext/standard/tests/general_functions/is_bool.phpt
#	modified:   ext/standard/tests/general_functions/is_float_64bit.phpt
#	modified:   ext/standard/tests/general_functions/is_int_64bit.phpt
#	modified:   ext/standard/tests/general_functions/is_null.phpt
#	modified:   ext/standard/tests/general_functions/is_numeric.phpt
#	modified:   ext/standard/tests/general_functions/is_object.phpt
#	modified:   ext/standard/tests/general_functions/is_scalar.phpt
#	modified:   ext/standard/tests/general_functions/is_string.phpt
#	modified:   ext/standard/tests/general_functions/ob_get_length_basic.phpt
#	modified:   ext/standard/tests/general_functions/php_uname_error.phpt
#	modified:   ext/standard/tests/general_functions/print_r.phpt
#	modified:   ext/standard/tests/general_functions/print_r_64bit.phpt
#	modified:   ext/standard/tests/general_functions/var_dump_64bit.phpt
#	modified:   ext/standard/tests/general_functions/var_export-locale.phpt
#	modified:   ext/standard/tests/image/image_type_to_extension.phpt
#	modified:   ext/standard/tests/math/lcg_value_basic.phpt
#	modified:   ext/standard/tests/network/inet.phpt
#	modified:   ext/standard/tests/network/ip_x86_64.phpt
#	modified:   ext/standard/tests/random/random_int.phpt
#	modified:   ext/standard/tests/serialize/bug45706.phpt
#	modified:   ext/standard/tests/streams/bug61115.phpt
#	modified:   ext/standard/tests/streams/bug78662.phpt
#	modified:   ext/standard/tests/streams/stream_set_timeout_error.phpt
#	modified:   ext/standard/tests/strings/chr_error.phpt
#	modified:   ext/standard/tests/strings/fprintf_error.phpt
#	modified:   ext/standard/tests/strings/htmlentities24.phpt
#	modified:   ext/standard/tests/strings/htmlspecialchars.phpt
#	modified:   ext/standard/tests/strings/ltrim.phpt
#	modified:   ext/standard/tests/strings/metaphone.phpt
#	modified:   ext/standard/tests/strings/parse_str_basic1.phpt
#	modified:   ext/standard/tests/strings/parse_str_basic3.phpt
#	modified:   ext/standard/tests/strings/printf_error.phpt
#	modified:   ext/standard/tests/strings/rtrim.phpt
#	modified:   ext/standard/tests/strings/soundex.phpt
#	modified:   ext/standard/tests/strings/sprintf_variation15.phpt
#	modified:   ext/standard/tests/strings/sscanf_error.phpt
#	modified:   ext/standard/tests/strings/str_ireplace.phpt
#	modified:   ext/standard/tests/strings/stristr.phpt
#	modified:   ext/standard/tests/strings/strrchr_variation1.phpt
#	modified:   ext/standard/tests/strings/strrchr_variation2.phpt
#	modified:   ext/standard/tests/strings/strtolower.phpt
#	modified:   ext/standard/tests/strings/strtoupper1.phpt
#	modified:   ext/standard/tests/strings/strval_error.phpt
#	modified:   ext/standard/tests/strings/substr.phpt
#	modified:   ext/standard/tests/strings/trim1.phpt
#	modified:   ext/standard/tests/strings/vfprintf_error1.phpt
#	modified:   ext/standard/tests/time/strptime_error.phpt
#	modified:   ext/tokenizer/tests/001.phpt
#	modified:   ext/xmlreader/tests/static.phpt
#	modified:   ext/xmlwriter/tests/bug41326.phpt
#	modified:   tests/output/stream_isatty_err.phpt
#	modified:   tests/output/stream_isatty_in-err.phpt
#	modified:   tests/output/stream_isatty_in-out-err.phpt
#	modified:   tests/output/stream_isatty_in-out.phpt
#	modified:   tests/output/stream_isatty_out-err.phpt
#	modified:   tests/output/stream_isatty_out.phpt
#
# Changes not staged for commit:
#	modified:   run-tests.php
#
Reduce code duplication using for loop
Slipt error messages while checking magic methods attributes
Check func_info consistency
Mark passthru() as RC0
Make array_rand() type info more accurate
Remove MAY_BE_FALSE from range() type info
Avoid throw expression leaks
Show all tests on AppVeyor
SessionUpdateTimestampHandler class was never implemented
Remove unnecessary register qualifier
Use information about classes returned by internal functions
Pass existing lcname to check_magic_method_implementation
Use zend_string in zend_check_magic_method implementation
Test xml_error_string() and xml_get_error_code()
Remove duplicate tests
Ensure bcmath scale is between 0 and INT_MAX
Add helper APIs for get_gc implementations
SSE2 str_tolower
Add macro to get ini target address
Add case insensitive find_ptr hash functions
Add gen_stub.php to devel pack
Generate method entries from stubs for Zend classes
Clean section of test not working due to short open tags
Check Serialization magic methods structure
Use the default type error message for Exception::__construct()
Generate methods entries from stubs for ext/spl
Nothing in codebase cares whether platform has fpclass()
Avoid STORE of register inherited from parent trace
Skip life range with LOAD and single use
cleanup
Updated to version 2020.1 (2020a)
Empty merge
Updated to version 2020.1 (2020a)
Empty merge
Updated to version 2020.1 (2020a)
Abort register allocation if no candidates
Use zend_make_tmp_result() helper in more places
Accept result znode in zend_compile_class_decl()
Use return in compile_expr for consistency
Update intl test suite for ICU 67.1
Test XSLTProcessor::importStylesheet() with invalid stylesheet
Remove dead checks for LOG_FILE paths, replace with CONFIG_ONLY option
Add additional preg_match test case
Make throw statement an expression
More accurate life range termination
Add get_debug_type() function
Remove support for libmysqlclient 5.0
Remove unneeded prototype for spl_array_get_iterator
Remove unused 'ce_get_iterator' field from spl_fixedarray_object
Remove unused 'ce_get_iterator' field from spl_heap_object
Drop unnecessary stdint and inttypes header checks
Skip non-existing properties returned by __sleep()
Tests for the default case of the parameter of xml_parser_get_option() and xml_parser_set_option(). These cases are, as of now, not being tested.
Document change to ReflectionMethod->isConstructor/isDestructor
Add additional preg_match test case
Reorder conditions
Upgrade to PCRE2 10.34
Diagnose missing format specifier at end of string
Emit diagnostic on unknown printf specifier
Remove some redundant sprintf variation tests
printf: Unify error case
printf: Report error if missing padding character
Promote warnings to Errors in sockets's extension.
Remove redundant vfprintf/vsprintf variation tests
Reuse registers allocated for parent trace in side traces
Register allocation is useless if JIT just calls standarad VM handlers
Generate zend_builtin_functions FEs from stubs
Removed old TODO
Add crude memory limit to tracked alloc
Make gen_stub parallelism safe
Ensure hash_update_stream() always returns the same hash when $length = 0
Remove support for EBCDIC
Don't rand() in test
Register allocator and deoptimizer for tracing JIT.
Improve a last couple of argument error messages
Apply doc root fix for FPM
Generate function entries from stubs
Speed up ZEND_SWITCH_STRING/ZEND_SWITCH_LONG for wrong type
Generate function entries from stubs for mysqli Closes GH-5420
Enhance test failure SH script to allow gdb, valgrind, rr as alternative modes.
Remove ZEND_ACC_DTOR flag
Early return if variadic type check fails
Enable JIT for AppVeyor CI
zend_timeout() may access EX(opline)
Revert unintended test change
Align magic methods' camelCase with documentation
Improve registers reuse
Add S390X architecture as a Travis job
Allow using prototypes when optimizing arg passing
Move test to its folder
Improve error messages for magic methods by appending method's class
Remove OP_RANGE_EX distinction
Use proper macro
Removed unused parameter
Force short_open_tag=0 in run-tests.php
Remove return value from llist apply functions
Make zend_list_free return void
Adjust zend_write_func signature
More precise ifunc resolver return type
Suppress SIG_ERR cast warnings
fix test using short_tag
workaround typo in system libgd 2.3.0
Add -Wextra compiler warnings and exclude the trigger happy ones
Add -Wno-type-limits compiler flag to Sodium extension
Add -Wno-ignored-qualifiers compiler flag to Tidy extension.
Add missing CVE
Make gen_stub.php compatible with PHP 7.1 again
Remove XFAIL from tests for 'bug' 48770
Update NEWS for 7.2.31
Remove XFAIL section of a passing COM test
Add zend_string_concat2 API
Update CREDITS for PHP 7.2.30
Update NEWS for PHP 7.2.30
Improve socket cmsg space handling.
Always use __invoke callable name for objects
Add zend_create_member_string() API
NEWS
Use UNKNOWN default for socket_connect()
Don't leak peername if accept fails
Add Intl resource bundle files for big-endian architecture.
Improve some TypeError and ValueError messages
Added missed '~'
Generate method entries for ext/intl
Increase timeout on ubsan/asan job
Remove PDO::dbh_constructor()
Generate method entries from stubs for curl, ffi, pdo, phar
Generate function entries from stubs for a couple of extensions
Syntax errors caused by unclosed {, [, ( mention specific location
Remove int6store()
Add NEWS entries [ci skip]
Generate method entries for ext/session and ext/reflection
Generate method entries for ext/dom
Adapt assertion as mbfl_strwidth returns a size_t
Generate method entries for ext/xsl
Lowercase NULL to null in stubs
Generate method entries from stubs for a couple of extensions
Add missing visibility modifiers in stubs
Add support for generating method entries from stubs
Improve the default value format in incompatible signature error messages
Add missing parameter to the stub of mysqli_real_connect
Refactor and remove dead code in mb_ereg(i)_replace
Separate zend_jit_dump_lifetime_interval() function
Register allocator refactoring
Mark $time argument of touch() as UNKNOWN as well
Mark spl_autoload_register function arg as UNKNOWN
Mark fgets() argument as UNKNOWN
Change parameter default to always available value
Make touch() $atime parameter UNKNOWN
Mark rand/mt_rand args as UNKNOWN
Mark array_walk $userdata arg as UNKNOWN
Make stream_socket_enable_crypto() session stream nullable
Accept null context in stream_socket_(client|server)
Add Z_PARAM_RESOURCE_OR_NULL()
Export the zend_string_concat3() API
Export API for fetching internal func default
Convert if blocks to assertions and adapt stubs accordingly
Cache MBFL encoding for Oniguruma regex functions.
cleanup
Don't get number of passed arguments from "fake" INIT frames
Add test to make sure internal param default eval doesn't error
Store default parameter values of internal functions in arg info
Add php_cli_server_connect() helper
Make mysqli_poll test more deterministic
Update mb_strrpos() stub
Dump information about trace side exits
Relax overly strict test expectation
Update stack type, only if necessary
Revert "Went to fast and forgot to update tests"
cleanup
Revert "cleanup" (wrong commit)
cleanup
Remove most uses of _default_get_name()
Eliminate uses of _default_load_name()
Optimize internal name fetching in reflection
Assert that arginfo parameter name is present
Free room for information about register allocation at astact stack and at trace_exit_info. Implement simple deoptimizer.
Save CPU regesters on side exit for deoptimization
Minor register allocator refactoring
Inline a ZEND_NUM_ARGS() variable
Clean up constructor handling in com_dotnet
Improve some ValueError messages
Generate function entries for another batch of extensions
Add missing stub for xmlrpc_get_type()
Promote invalid case mode to ValueError in mb_case_converter
mb_scrub() can't return false anymore
Promote some warnings to ValueError in mbstring
Convert some if blocks to assertions
Generate functions entries from stubs for another set of extensions
Move variable declaration closer to its usage
Improve gen_stub.php
Generate function entries from stubs for a couple of extensions
Annotate function aliases in stubs
Went to fast and forgot to update tests
Verify that all stubs have a return type
Stubs: Store information per-class
Remove now unnecessary PHP_FUNCTION() declarations
Generate function entries from stubs
Do not include the same stub multiple times
Promote unknown encoding throws in encoding array/string list
add some output when generating arginfo
Move gen_stub.php to build directory and install it so phpize can take care of it, and thus extension can use it as it is already in Makefile
Refactor mb_substr_count()
Convert if branch to assertion in mb_strlen
Promote mb_str_split warning to ValueError
Improve code flow
Use ZEND_NUM_ARGS() macro instead of custom variable
Promote empty string warning to ValueError in mb_ord()
Skip fpm tests not designed to be run as root
Allow fpm tests to be run with long socket path
news / UPGRADING for zip 1.19.0
- add ZipArchive::EM_UNKNOWN constant - add ZipArchive::EM_TRAD_PKWARE constant - cleanup hack for libzip 1.3.1 (have only exist for a few days) - add ZipArchive::isCompressionMethodSupported() method (libzip 1.7.0) - add ZipArchive::isEncryptionMethodSupported() method (libzip 1.7.0) - bump version to 1.19.0-dev
Prevent imap mail tests from borking instead of skipping
use a better setter for zip_error_t
Remove <default> prefix from reflection dump
Display property default value in reflection dumps
Show property type in reflection export
Avoid control flow warning
Enable error diagnostic for check_default_conf_path.phpt
Remove unnecessary check in runtime_compile_time_binary_operands.phpt
Make division by zero error check more accurate
Unify checks for binary operator errors for ct eval
Don't convert binop operand types in opcache
Improve "unsupported operands" error
Remove op_func from TRY_BINARY_OP1 macro
Add NEWS entryc [ci skip]
Promote unsupported encoding warnings to ValueError
Use php_mb_get_encoding instead of mbfl_name2encoding to get encoding
Move encoding fetching out of php_mb_convert_encoding()
Remove unnecesary check in php_mb_check_encoding()
Refactor operator implementations
Use explicit helper
Encoding argument is always MBREX(current_mbctype)
Add additional operator exception handling tests
Remove unused argument form convert_object_to_type()
Display nullability in type error messages for internal functions
Clean up silent/noisy flag in convert_to_number
Convert some unknown encoding warnings to ValueErrors in ext/mbstring
Promote some warnings to Errors in Zend basic functions
The 7.4 branch is now for 7.4.6
Make cast_object handler required
Improve undefined variable error messages
Clarify SimpleXML comparison logic
Add a ZEND_UNCOMPARABLE value
Report object cast failures internally
Make sure php_get_internal_encoding() returns non-empty
Make sure mbstring.internal_encoding deprecation is always thrown
Next is 7.3.18
Drop wchar header check as always defined since C95
Clarify that return throws
mb_detect_order(): Use proper array|string argument
Remove persistent arg from parse_encoding_array()
mb_check_encoding(): Make var a proper array|string arg
mb_detect_encoding(): Use proper array|string parameter
Do constant evaluation for str_contains in opcache
mb_convert_variables(): Make $from an array|string argument
mb_convert_encoding(): Make $input a proper array|string arg
mb_convert_encoding(): Make $from_encodings a proper array|string arg
Add test to make sure that (self::class)::method() is not forwarding LSB
Parse mb_convert_encoding() encodings only once
Properly report unknown encoding in encoding lists
cleanup
Move encoding fetching outside php_mb_stripos()
Remove unnecessary NULL check
Initialize variable numbers
Disable Symfony test on PHP 8
Don't check directory nlink in stat tests
SCCP: Optimize strpos with empty needle
Allow numeric [UG]ID in FPM listen.{owner,group}
NEWS
BIND_GLOBAL and BIND_STATIC don't use value of the first operand
Removed useless variable
Add missing 'skip' to bug79332.phpt skip message
Remove rand_r implementation
Remove HAVE_REALPATH checks
Add PhpToken class
Check abstract method signatures coming from traits
Explicitly declare the char as signed in zend_ffi_val.
Explicitly declare the char as signed in zend_ffi_val.
Separate zend_jit_var_supports_reg() and cleanup
Add stubs for SplDoublyLinkedList
Add new line before basic-block labels (except for the first BB0)
Always print numeric opline numbers
Clean up php_exec() implementation a bit
Rename "var" to "stack". This is an abstract stack that holds TSSA variable numbers.
Make SSA dump format controlled by opcache.jit_debug more readable (always print opcode number). This doesn't affect dumps controlled by opcache.opt_debug_level.
Improve error messages of ext/hash
Promote warnings to exceptions in ext/hash
Add stubs for SPL iterators
Improve error messages of various extensions
Improve error messages of ext/reflection
Add test file
Handle NULL caller_call_opline
Don't use quiet zpp in RecursiveIteratorIterator ctor
Add stubs for SplFileInfo et al.
Minor cleanup in spl_direcotry
Repair ext_skel.php to create the basic framework for a PHP extension
Skip ftruncate_bug76422 if disk_free_space() <= 4GB
Add tracing JIT guards for INTI_FCALL_BY_NAME and INIT_NS_FCALL_BY_NAME
bump zip version
Note that `active => true` has to be kept for `$QA_RELEASES`
JIT for INIT_NS_FCALL_BY_NAME
add missing test
fix test, thanks Indrek
CAST to the same type mat be JIT-ed as QM_ASSIGN
ZipArchive::open(): Using empty file as ZipArchive is deprecated
unneeded after fix
NEWS
NEWS
JIT for FETCH_THIS
Mention which categories to use for patch releases
Change jit_trace_stack_frame layout
ZEND_MAKE_REF can't throw
JIT for STRLEN
JIT for ECHO and variable string operands
JIT for SEND_FUNC_ARG
JIT for ZEND_CHECK_FUNC_ARG
Improve argument error messages in ext/standard
Eliminate run-time check
Improve FFI test suite for Windows
Improve build instructions in README
Clarify session.cookie_samesite="None"
Improved JIT for BIND_GLOBAL
Revert "Fetch for read in nested property assignments"
bump zp to 1.18.1 + doc
Fetch for read in nested property assignments
Make bug52820.phpt more robust
Explicitly start mysql
Use "set -e" in some pipeline steps
Use different scratch register in read_obj
Explicitly pass scratch register to SAVE_VALID_OPLINE
Result of ASSIGN may be different from the assigned value when LHS is a typed reference
Use zend_fetch_arg_info_type()
Use _const_op_type() for converting constant into type info
Improve type inference
Clean up a few more places
Remove object auto-vivification leftovers in type-inference
Drop support for iconv without proper errno setting
Improved JIT for ZEND_ASSIGN
bump verison to 7.2.30-dev
[ci skip] Update NEWS
[ci skip] Update NEWS
Store informaton about class
Slightly deduplicate code
Remove "safe" argument from ZVAL_PTR_DTOR
Remove unnecessary cast
Add stubs for SplObjectStorage and MultipleIterator
Add stubs for SplHeap and SplPriorityQueue
Add str_contains() function
Don't specify ports in socket_export_stream-4.phpt
[ci skip] Update NEWS
Emit warning about type narrowing for tracing JIT as well
Tracing JIT (it doesn't support register allocation yet)
Accept const op_array in zend_build_call_map
Add assertions for DIM_W/RW uses
Also remove dead arguments
Remove dead type narrowing code
Check asserts early
identation fix
Call global code of preloaded script in global context
Remove deprecated (real) cast
Avoid "Anonymous class wasn't preloaded" error by lazely loading of not preloaded part of a preloaded script
Update Unicode tables to 13.0.0
Export FFI::__BIGGEST_ALIGNMENT__
Allow to fetch function address
Folder mark missed
Export FFI::__BIGGEST_ALIGNMENT__
Allow to fetch function address
Check for sys/auxv.h before using it.
Enable better trait conflict error message
Require non-absolute trait method refs to be unambiguous
Add some stubs for SPL
Perform some maintenance work on the XSL extension
Enclose INI values containing {TMP} in quotes
Improve type inference for COALESCE
Regenerate the VM
Improve error message of foreach
Remove DOM_GET_THIS macro
proper fix
fix use after free
Regenerate reflection stubs
PHP-7.4 is now 7.4.5-dev
Skip test on Windows if privileges are insufficient
Remove unnecessary uses of CHECK_SILENT
Remove NO_ACCESS flag for zend_is_callable()
Add test for bug #63816
[ci skip] fix for #72374 is no more a BC break
better fix for #72374
[ci skip] Tweeks to release-process.md
upgrade information about changs in Zip
drop old constant with bad name, kept until now for BC
- make status, statusSys properties and   ZipArchive::getStatusString() method   available after archive is closed
NEWS
add lastId property to ZipArchive
Use separate typedef for bucket comparison function
Implement interfaces after all methods available
PDO_OCI: Add test of the phpinfo output
zip_file_replace don't need ZIP_FL_OVERWRITE
Remove empty "interface gets implemented" handlers
Small code cleanup
Resolve trait alias refers to earlier
this test needs json
PHP-7.4 is now 7.4.5-dev
Add test for bug #69084
Store aliased name of trait method
Next is 7.3.17
Updated maintainer ranges
bump zip version + NEWS
- add ZipArchive::FL_RECOMPRESS, FL_ENCRYPTED, FL_OVERWRITE, FL_LOCAL, FL_CENTRAL constants - add optional "flags" parameter to ZipArchive::addEmptyDir, addFile and addFromString methods - add "flags" options to ZipArchive::addGlob and addPattern methods   keeping previous behavior having FL_OVERWRITE by default - add ZipArchive::replaceFile() method
add myself as zip maintainer
Native Windows support for mysqlnd sha256 authentification
Abstract over crypto operations
Automatically implement Stringable interface
Define Stringable with __toString():string method
Update libmagic.patch
Add stubs for IntlChar
Improve argument error messages in ext/sodium
Add upgrading note regarding merge of RFC for new DOMParentNode/DOMChildNode APIs.
Remove generated lexer
[RFC] Implement new DOM Living Standard APIs in ext/dom
Update ext maintenance ranges
Try to fix msvc build
Add stubs for UConverter
Update MySQLi function info
Try to fix intermittent FPM failures
Avoid duplicate calls to interface implementation handler
fix test
NEWS
NEWS
Use type-checked ref assignment in UConverter
Use {0} to initialize instead of {NULL}
Avoid more null arithmetic
Use EX_NUM_TO_VAR() in more places
Remove more null arithmetic UB
Remove mergesort implementation
Add upgrading node regarding fix for bug #79271
Avoid null arithmetic UB in EX_VAR_TO_NUM
Add test for bug #60161
Change argument error message format
Require all internal functions to have arginfo
Add stubs for COMPersistHelper
Remove deprecated capture_session_meta OpenSSL stream context
Get rid of method mapping of BreakIterator classes
Add stubs for Intl BreakIterator
Reorder checks in object ref assignment
Give arginfo to SplFileInfo::_bad_state_ex()
Add missing zend_test stubs
Add ext/mysqli stubs
Add preg_last_error_msg() function
Avoid used of "named fn" in ext/standard
Remove unnecessary checks in breakpoint iterator
Use serialize_precision for var_dump()
Enable ext/sodium in CI
Add skipif for argon2id in test
Don't treat any WS as start of header
Reduce code duplication in HTTP header checks
Reduce code duplication in HTTP header checks
Update Travis build config
Second go at fixing [-Wmissing-field-initializers] compiler warning in PDO
Add rand() to ext/standard stub
Don't use asm arithmetic under msan
Add test for bug #78569
Update Ubuntu version on Azure
Make SPL doubly linked list smaller
Update UPGRADING
Remove restore_include_path()
Improve comment on RFC 1867 filename handling
Remove the deprecated reflection export methods
Create memory stream in exif fuzzer
Handle static return type in AST printer
Add stubs for aliases
Don't use VLA in mysqlnd auth
Handle EXIF offsets in a principled manner
Deprecate required param after optional
Remove extra tab in NEWS [ci skip]
bump version to 7.2.29
Add return types to FFI methods
Add proper return types to final phar methods
Remove mysqli reflection tests
[ci skip] I still help to maintain these extensions
Make quoting of cmd execution functions consistent
Rename php_dom_create_interator() to php_dom_create_iterator()
Update NEWS [ci skip]
Create a new console for each test worker on Windows
Make type error messages more consistent
Improve generated names for anonymous classes
Add static return type
Use strlen for INI_* macros
Disable instantiation of zero size FFI\CData objects
Revert "Replace @param annotations with type declarations"
Mark bug76348.phpt as online test
[skip ci] Skip 2 tokenizer tests if tokenizer isn't loaded
Replace @param annotations with type declarations
Constrain number parameter of numfmt_format to int|float
Update bundled config.guess and config.sub
Clarify that token_get_all() never returns false
Add stubs for zend_test
Add arginfo for HashContext::__construct()
Add const modifier for name strings
Improved the check
Remove value from comment in php.ini files
Reset required_num_args for disabled functions
var_dump(): Don't skip recursion detection on first level
Removed unused macro
Reuse SEPARATE_ARRAY() macro
Add UPGRADING notes
Allow arbitrary expressions in new/instanceof using () syntax
Treat magic constants like normal constants
Make class constants fully dereferencable
Unify array and object dereferencability
Split into fully_dereferencable and array_dereferencable
Split class_constant from constant production
Make encapsed strings fully dereferencable
Add support for $obj::class
Remove CURLOPT_PASSWDDATA block CURLOPT_PASSWDDATA was removed from curl as of 7.10.8
Save delayed call frame
Always invoke zpp in ReflectionProperty::getValue/isInitialized
Rename reflection stub file
Deref slow-path ASSIGN_OBJ result
Remove hint to security purpose of disable_functions
Add stubs for NumberFormatter
Update release-process.md
Update bundled stdxx check macros
Skip test case on x86 where it otherwise fails [ci skip]
Simplify COM_ERR_CONST definition for x64
PCRE: Only remember valid UTF-8 if start offset zero
PCRE: Check whether start offset is on char boundary
Removed ext/zip/tests/oo_namelocate.zip
Enable -msse2 on m32 builder
typo
Make ASSIGN, ASSIGN_OP, INC and DEC opcodes to return IS_TMP_VAR instead of IS_VAR.
Try to fix Windows build
Basic JIT support for verify return
Make opcodes to return de-refereced values of typed references (in the same was as for non-typed)
Remove spurious const qualifier from function return type
Remove ZEND_ACC_IMPLEMENT_INTERFACES flag
Remove ZEND_ACC_IMPLEMENTS_TRAITS flag
Remove ZEND_ACC_INHERITED flag
Adjust XFAIL tests due to TypeErrors
Remove unnecessary condition as always true.
Promote invalid mode/unknow option from Warning to ValueError for plain streams.
Address path is 104 bytes on macOs compared to 108 on Linux
Add various stubs for Intl
Add stubs for IntlCalendar
Add stubs for IntlDateFormatter & MessageFormatter
Next is 7.3.16
Reindent phpt files
Enable formatting of phpt files in tidy.php
Apply tidy formatting
Add bundled jit libraries to exclude list
Add tidy.php to enforce formatting
Relax test expectation
zip ext is now 1.17.1
Export zend_type_to_string() with ZEND_API
add test
NEWS
NEWS
Add WHITESPACE_SENSITIVE run-tests section
Disable parallelism for FPM tests
Clean up the generation of the parsers
Bison: enable all the warnings and fix them
Added opcache extension to inis
inline by hand to avoid uninitialized variable warning
We don't need "safe" destruction anymore
These EG(current_execute_data) = EX(prev_execute_data) assignments are useless now
Export zend_dump_op() and add ZEND_DUMP_NUMERIC_OPLINES flag to print oplines as "dddd" instead of "Ld+"
Use "%empty" in the parsers, instead of comments
Zip: version is now 1.17.0 change for Windows (which have libzip 1.4 by default) update NEWS
add ZipArchive::registerProgressCallback and ZipArchive::registerCancelCallback methods
Add NEWS entry for new ReflectionProperty methods.
Promote mysqli warnings to exceptions
Revert "Make BG(syslog_device) per request"
fix cross compilation failure due to size_t typecast in define
Update test for warning -> fatal error change
Add SKIPIF to test requiring mbregex
Reset trampoline on executor startup
Restore digit check in mb_decode_numericentity()
Enable ZipArchive::setMtime(Name|Index) on Windows
Better overflow check for entity decoding
Reset MBREX(search_re) in RSHUTDOWN
zip extension version is now 1.16.1
zip: more constants
Backport 7d2ef3d2e540885dec26d91dad061bff1621ad07 into 7.4
Use "%define parse.error verbose"
Avoid shift UB for large arrays
Only fetch to_encoding once in mb_convert_encoding()
Make BG(syslog_device) per request
Enable support for LIBZIP_VERSION
Throw an exception if default_dir not set, but required
zip: fix lib check
Perform map ptr base arithmetic through uintptr_t
Don't index NULL pointer when fetching non-existent constant
- bump zip extension version to 1.16.0 - add ZipArchive::setMtimeName and ZipArchive::setMtimeIndex methods
Convert ZEND_ECHO operand to string after sccp
Convert some warnings into ValueErrors in the standard file extension
- bump zip extension version to 1.15.6 - add ZipArchive::LIBZIP_VERSION - skip bug53885.phpt with libzip 1.6.0 (empty file is no more valid archive)
Remove state pointer argument from php_strip_tags
Add CURLOPT CURLOPT_HTTP09_ALLOWED available since 7.64.0
Upgrade bundled PCRE2 to 10.34
Add mention about empty needles for strrch() functions in UPGRADING [ci skip]
Allow empty needle in mb_strrchr()
Convert warnings to ValueError in mb_strpos function family.
Make test independent of online XSD schema
Add ZipArchive::CM_LZMA2 constant (since libzip 1.6.0)
Yet another check for php_strip_tags_ex()
Yet another check for php_strip_tags_ex()
Don't use CRLF when generating diffs
Also use zend_memnrstr in mbfl_strpos
Base mbfl_strpos on zend_memnstr
Extract calculation of offset from pointer
Handle mb_str(r)ipos offset consistently as well
Move offset error checking into mbfl_strpos
Add #defines for mbfl_strpos error conditions
Allow variadic arguments to replace non-variadic ones
Add unit test for bug #78902
Apply custom format/length modifier removal to spprintf
Enable UBSan in addition to ASan
Make MSVCRT memory leak checking usable for the test suite
More checks for php_strip_tags_ex
Add ValueError for invalid mode in count()
Add UPGRADING notes [skip ci]
Add ReflectionProperty::getDefaultValue and ReflectionProperty::hasDefaultValue
Don't leak encoding_str
next will be 7.2.28
Use smaller batch size in run-tests.php when appropriate
Don't start unnecessary processes with run-tests.php -j
Avoid some @count() suppressions in run-tests.php
Add sleep in FPM reload test
Prefer using declaring class rather than direct parent in error
Simplify __call fetching for static methods
Simplify constant updating for properties
Simplify ReflectionProperty::getDeclaringClass()
Drop the custom 'v' format from snprintf custom implementation.
Update NEWS wrt. sec fixes
fix test: fgetss() no longer exists
Update NEWS
Drop the custom I length modifier from snprintf custom implementation.
Speed up unserializing object properties
Remove unnecessary result variable
Eliminate uses of ZVAL_ZVAL and friends
Increase timeout in mysqli_reap_async_query test
Let's make this safer from maliciously crafted filename
minor cleanup
Bump required libcurl version to 7.29.0
Remove leftover ZEND_CAST code for (unset) cast.
Make error messages more consistent by fixing capitalization
Add support for deprecating constants
Update php.ini files to add missing FTP extension
Improve SSA representation of FE_FETCH
Use zend_type inside type lists
Disable optimizations for ASan instrumented builds
Remove useless skip check
Use proper printf() specifiers
Remove va_copy from zend_portability as it's always available since C99
Rename run-test.php to run-tests.php in the test packs
Add imagegetinterpolation()
Inline hot parts of bitwise instructions into hybrid VM
typo
Try to fix ZTS build
Use helper in one more place
Improve access to zend_map_ptr data
Handle one more case I missed
Make class name references use the class_name production
Don't use yystrlen()
Bring back test case support for older MySQL versions
Remove dead code and unused DEFINEs
Remove unnecessary whitespace sensitivtiy from some tests
Make constant() error handling consistent with plain const lookup
Move undefined constant error into get_constant_ex
Remove unused delimiter parameter in php_fgetcsv_lookup_trailing_spaces subroutine.
Silence potential taskkill error messages
Convert infallible mysqli checks to asserts
Remove unused MYSQLI_STATUS_CLEARED
Allows further tests to run on Windows
Use IS_WINDOWS
Replace fakemail with minimal PHP script
Unify mail related tests for *nix and Windows
Increase select timeout in FPM tester
Convert some warnings to Errors in BZip2
Convert some warnings to Error in zlib extension
[ci skip] Update UPGRADING
Avoid superfluous assignments
Bump version
Extract function
Revert "Display a message if select in FPM test timeouts"
Display a message if select in FPM test timeouts
Refer to method rather than function name in error message
Add warning and convert to exception in string offset assignment:
Allow empty needles in mb_strpos and mb_strstr function family.
Add warning and convert to exception in string offset assignment:
Make test more resilient
Renumber zval types, clarify allowed overlap
Increase sleep() time in test case
Bump version
Remove support for preloading on Windows
Throw Error when referencing uninit typed prop in __sleep
Revert "Extend CURLFile to support streams"
Rename skeleton stub file
Don't link against openssl 1.1 in curl
Clean up curl openssl check
Remove useless else branch
Throw exception for unconstructed intl objects
Remove duplicate test cases
Use RETURN_THROWS() in various places
Use RETURN_THROWS() after zend_fetch_resource*()
Add stubs for various intl functions
Use RETURN_THROWS() after try_convert_to_string()
Adding DateTime(Immutable)::createFromInterface()
Slightly increase tolerance in time_sleep_until() test
Try to fix intermittently failing test case
Don't enable sanitizer by default for Windows snapshot builds
Convert zend_parse_parameters_none() to fast ZPP
Use zend_parse_parameters_none() instead of zend_parse_parameters_none_throw()
Remove unnecessary strncpy in zip
Add test for bug #73816
Implement WeakMap
Use RETURN_THROWS() after zend_throw_exception() in reflection extension
Use RETURN_THROWS() after zend_parse_method_parameters()
Add test case for bug #78883
Extract functions for file cache type serialization
Update ZCSG(map_ptr_last) only if for_shm
Populate hashtable of __sleep() properties
Deref names returned by __sleep()
Extract php_var_serialize_nested_data() function
Use RETURN_THROWS() after zend_throw_exception() in most of the extensions
Switch hash() function to use fastzpp
Switch php_hash_fetch_ops() to use zend_string
Always delete tempfile created by ftruncate test.
Use RETURN_THROWS() after zend_throw_error()
Use RETURN_THROWS() after zend_type_error()
Use RETURN_THROWS() after zend_value_error()
Use RETURN_THROWS() during ZPP in the remaining extensions
[ci skip] Revert "Add test case for bug #78883"
Add test case for bug #78883
Remove superfluous compiler option
Use RETURN_THROWS() during ZPP in most of the extensions
Use ZEND_THROWS() during ZPP in the GD, gettext, GMP, and hash extensions
Use ZEND_THROWS() during ZPP in enchant, exif, fileinfo, filter, and FTP extensions
Use RETURN_THROWS() during ZPP in the date, dba and dom extensions
Use RETURN_THROWS() during ZPP in bz2, calendar, com_dotnet extensions
Also propagate include exceptions in opcache
Make url_stats in resolve_path quiet
Avoid undefined behavior
Properly propagate url_stat exceptions during include
Use RETURN_THROWS() during ZPP in main, sapi, win32, and Zend
Use RETURN_THROWS() when an exception is thrown
Convert zend_parse_parameters_none() to fast ZPP in standard lib
Add FILTER_VALIDATE_BOOL as alias for FILTER_VALIDATE_BOOLEAN
Regenerate stubs
Add test for bug #79031
Revert "Increase serialize_lock while decoding session"
Add missing skipif clause
Handle empty password fast path in caching_sha2_password
Handle error response during caching_sha2_password auth
Add support for caching_sha2_password in change user authentication
Support auth switch request during caching sha2 auth
Don't use PASSWORD() function in test
Specify explicit row order in PDO MySQL test
Skip bug77956.phpt if local_infile disabled on server
Don't check TIMESTAMP NOT NULL in fetch_field_flags test
Don't test the RENAME DATABASE query
Make GeomFromText tests compatible with MySQL 8
Skip test for clang builds
Clarify usage of max_fd in php_poll2() on Windows
cleanup
Partial fix for bug #79029
Build call graph before type inference
Implemented FR #78638 (__PHP_Incomplete_Class should be final)
Similar problem (#79022) also exists in Interfaces
Speed up ZEND_IS_IDENTICAL when it can't throw
Set opcode handler
Promote warning to exception for proc_open() when null byte is encountered
Remove unnecessary FN type information from OPCache
Promote warnings to exceptions in string search related functions
Promote warnings to exceptions in proc_open() function
Promote warrnings to exceptions in chgrp() function
Promote warning to exception in dns_check_record() function
Simplify constant expression
Make get_defined_vars() always return an array
Try to make proc_open_bug69900.phpt more robust
Remove unnecessary F0 type information from OPCache
Add stubs for standard library
Promote warnings to exceptions in stream-related functions
Add setAuthorizer method to SQLite3
Convert string|array union parameter types
RECV opcode optimization
Add upgrading note about implode() [ci skip]
Adjust test for notice->warning change
Avoid signed integer overflow in string offset check
Add destructor annotations in ini parser
fix release date
fix release date
fix release date
Add CONFLICTS tag
Rethrow generator exception even without active stack frame
More updates to CONTRIBUTING.md
Update CONTRIBUTING.md
Free buffer in php_verror even if it is empty
Avoid generation of "jmp" to next instruction
Avoid float to int cast UB in exif
Make "exception_handler_undef" stub to check EG(opline_before_exception) and undefine corresponnding result variable, if necessary. This fixes few invalid "exception_handler_undef" usages.
Update/fix NEWS [ci skip]
[ci skip] Update NEWS
[ci skip] Update  NEWS
Property names of internal classes from temporary extensins, loaded by dl(), may be emalloc-ed strings.
Set opcache.optimization_level=0 in test
Test fixes
Remove DateTime class registration test
Further reduce parse depth limit in mbstring fuzzer
Remove deprecated behaviour of passing encoding as third parameter in mb_strrpos()
Revert "Remove dead code in libmbfl, memory device"
Remove dead code in sanitizing_filter.c of the filter extension
Remove dead code in libmbfl, memory device
Limit parse depth in mbstring fuzzer
Introduce extra counter to avoid RTD key collisions
phar: fix offset*() prototypes
Remove support for mixing parameter order in implode()
Promote warnings to exceptions in password_*() functions
Add funcinfo for spl global functions
Return empty string instead of NULL in serialize().
uint/ulong removal may affect other platforms as well
Typo fix in php.ini-production
Add stubs for standard library
Promote warnings to exceptions in sapi_windows_* functions
Promote warning to exception in unserialize()
Promote warning to exception in parse_url()
Promote warnings to exceptions for some filter functions
Convert warnings to TypeError in php_spl.c
Remove ZEND_PARSE_PARAMS_QUIET from spl_autoload_register()
Free RSA public key in mysqlnd sha256 auth
Addirional fix for bug #78918
Speed up array_intersect/array_diff/array_filter
PHP-7.4 is now 7.4.2-dev
Set zend.exception_ignore_args=0 in run-tests.php
Improve error message
Add support for class_alias to preloading
Promote warnings to exceptions in *scanf() functions
Add stubs for another batch of standard functions
Return false when "Unable to fork"
Throw an exception when an invalid comparison operator is passed to version_compare()
Only accept string as the format parameter of *printf() functions
Remove phpdbg README
Export zend_init_func_run_time_cache()
Call zend_unregister_ini_entries() when unload extension loaded through dl() without MSHUTDOWN callback. Extensions with MSHUTDOWN should use UNREGISTER_INI_ENTRIES().
Extend CURLFile to support streams
Use curl_mime_*() functions if available
Use unmangled named in property type inheritance error
Convert warnings to ValueError
Remove dead commented code and dead code in-between KALLE_0 ifdefs.
Add type error on filename which contain null bytes in bzopen
Add type error on filename which contain null bytes in bzopen
Drop duplicate definitions of zend_isnan and friends
Remove unused function
Optimize return type checking
Use cheaper code for overflow +/-1
Try to restore laravel & symfony community jobs
Restore PDOStatement::setFetchMode() signature
Remove CV limitation when determining value from type in SCCP
Add DCE support for ARRAY_KEY_EXISTS
Move isinf, isnan, and isfinite to zend_portability.h
Capitalize first character of error message.
Convert Errors to ValueErrors
Add upgrading notes about removed functionality that were deprecated in PHP 7.4
Remove FILTER_SANITIZE_MAGIC_QUOTES filter
Remove magic quotes legacy
Remove ezmlm_hash() function
Remove money_format() function
Remove convert_cyr_string() function
Remove hebrevc() function
Capitalize the initial letter of the error message of htmlspecialchars() function
Support "string or array" in zpp
Promote warning to exception in file_get_contents() function
Promote warnings to exceptions in settype() function
Promote warning to exception in log() function
Update/fix remaining opcache zend_func_info.c signatures
Remove opcache signatures duplicating reflection
Make more opcache signatures consistent with reflection
Remove obsolete configure checks for isinf, isnan, and isfinite
Remove configure checks for asinh, acosh, atanh, log1p, hypot
Remove now obsolete configure checks for INFINITY and NAN.
Remove custom implementation for inifinity and NAN as we can now rely on C99
Remove unnecessary C99 checks for maths functions
Preload: Better reason message for internal parents on windows
Add ReflectionMethod::getClosure() change to UPGRADING
Make some opcache types consistent with reflection information
Next is 7.3.14
next is 7.2.27
Add fuzzing badge to README
Upgrade to Oniguruma 6.9.4
Add missing skip checks
Partially revert "Adapt test cases for Oniguruma 6.9.4"
Refactor JIT to reduce back-end dependency from SSA representation.
Adapt test cases for Oniguruma 6.9.4
Don't keep QM_ASSIGN with IS_UNUSED result
Remove no-op check for 'use strict;'
typos
Prevent parallel test conflicts
Open opcache.error_log with 'a' flag
Document the need for merging NEWS sections before x.y.0
Consolidate NEWS for 7.4.0 release
Handle reallocated root buffer during GC destroy phase (v2)
Handle reallocated root buffer during GC destroy phase (v2)
Promote warning to value error in strpbrk()
Added environment LSAPI_CLEAN_SHUTDOWN to control clean shutdown. Update SAPI version to LiteSpeed v7.6 .
Make test more resilient
Make the UPGRADING note about ArrayObject more explicit.
Make opcache infer array_key_exists is non-null bool
Convert apache2handler arginfo to php stubs
Remove clearstatcache function prototype defned twice
Update NEWS
Add union return types with one class
Add stubs for PDO
Convert the example skeleton extension to use arginfo stubs
Speed up foreach/FE_FREE (optimize for arrays without gc)
Add NEWS entry for bug #76601 fix
Do not let PHP-FPM children miss SIGTERM, SIGQUIT
Add missing zend_parse_parameters_none()
Add stubs for the Locale component of Intl
Support union types for args in gen stubs
Support single class unions in gen stubs
Handle reallocated root buffer during GC destroy phase
Support the same handler for multiple opcodes
Optimize int === int/double === double
Zend Engine version is no longer in -dev
PHP-7.4 is now 7.4.1-dev
password_hash() can't return false
Make the $num_points parameter of php_imagepolygon optional
Add more CONFLICTS tags
Optimize $x === null into is_null($x)
ws
Optimize is_scalar($x) into a TYPE_CHECK opcode
Make test more resilient
iconv_strlen() cannot return a string
Add union return types for function stubs
Properly declare methods
ext/dom: Replace usages of PHP_FUNCTION and aliases with PHP_METHOD.
Make test runner runnable without arguments
Add support for union types in stubs
Wrap php_random.h in C++ portability macros
Implement union types
Make zend_type a 2-field struct
Convert ext/dom to use arginfo stub.
Clean DONE tags from tests
Reduce reallocations in exif parsing
Reduce size limit in parser fuzzer
Add stubs for standard lib functions
Promote register_tick_function() callback validation warning to an exception
Remove PHP_SLEEP_NON_VOID as it is not useful anymore
Add compile warning for "confusable" types
Wrap hrtime in `extern "c" {}`
Remove outdated comments in test
Disable ifunc resolvers under thread sanitizer as well
Add UPGRADING note about default object from empty value
Move extra checks after zpp in get_browser()
Remove bogus skipifs in get_browser tests
7.3.13 is next
Bump for 7.2.26-dev
Remove obsolete oniguruma.patch
Remove dead code `ext/mysqlnd/mysqlnd_net.c`.
Add stubs for IntlTimeZone
Add a test for ReflectionClass:getInterfaceNames()
Remove support for array_key_exists() with objects
Make test more robust
Revert "Remove configure checks for supported instruction sets"
Remove dead code related to inherits props in reflection
Store pointer to property_info in reflection
Add ext/phar arginfo stubs
Reduce oniguruma retry limit in fuzzer
Print Client Library Version in phpinfo
Explicitly specify ubuntu versions on azure pipelines
Remove unused code
Accept int parameter in the first place
Promote some warnings to exceptions in standard lib
Allow generating stubs for directory
zend_parse_parameters_throw() is obsolete
Add missing ZPP checks
Finish OpenSSL arginfo stubs
pdo_oci: Add support for setting and getting the oracle OCI 18c call timeout value.
Don't skip RECV instuctions when function uses type hints
Add stubs for WeakReference
Remove configure checks for supported instruction sets
Elevate warnings to ValueErrors in ext/calendar
Cleanup return values when parameter parsing is unsuccessful
Cleanup return values for Intl when parameter parsing is unsuccessful
Don't use chunking for stream writes
Add UPGRADING note for stream_read() change
Add more openssl stubs
Optimize creation of empty arrays in json_decode
Make "unterminated comment" into a parse error
Warn on strtr(["" => "x"])
Promote mt_rand() min/max warning to ValueError
Add stubs for various standard functions
Use ArgumentCountError in IntlGregorianCalendar ctor
Update documentation/comment for GH-4860
Add stubs for directory and file functions
Don't check $this existence in object opcodes
Add missing refcount increment
Allow to call XMLReader::open() and ::XML() statically
Remove some RETURN_FALSE on exception
Add Z_PARAM_STRING/ARRAY_OR_NULL convenience macros
Don't accept objects for options in password_hash()
Promote base_convert "invalid base" errors to ValueError
Throw "Unsupported operand types" error when using ** on arrays
Expect number argument in round()
Convert phpdbg arginfo to php stubs
Small phpdbg cleanups
Small ext/dom cleanups
Skip test case on non Windows platforms
Try to fix asan warning in scalar_constant_defaults.phpt
Skip test case on non Windows platforms
Try to fix 32-bit fprintf test
Update NEWS for 7.4.0RC6
Update NEWS for PHP 7.4.0RC5
Implement #78270: Support __vectorcall convention with FFI
Add support for Interbase 1 dialect
Add missing zend_parse_parameters_none()
Remove ability to unbind $this of closures if used
Define IS_WINDOWS in the test runner
Elevate warnings to Error Exceptions in ext/bcmath
Convert warnings to Errors in sprintf() functions
Remove redundant variable rv and optimize code
Optimize array_slice for packed arrays with large offsets
Revert "Add missing zend_parse_parameters_none()"
Add missing zend_parse_parameters_none()
Try one more FD in ext/standard/tests/file/php_fd_wrapper_04.phpt
Remove generic type annotations
Replace EXPECTF by EXPECT
Improve reflection arginfo stubs
Add stubs for ext-reflection
Add ARM64 CI to Travis
Optimize VERIFY_RETURN_TYPE for TMP operands as well
Check class linking in VERIFY_RETURN_TYPE optimization
Simplify travis setup scripts
Optimize instanceof_function
Check type is set when verifying variadic args
Remove recursive check from instanceof_interface
Optimize instanceof_class/interface
Clean up and clarify instanceof_function_ex()
Remove unnecessary type checks in verify_missing_return_type
Don't check ZEND_TYPE_IS_SET() in zend_check_type()
Skip IntlTimeZone::getOffset() error tests on non-x86
Skip large ftruncate test if large files not supported
Don't test "blocks" in lstat_stat_variation7.phpt
Increase FD used in php://fd test
Use posix_getuid() to check for root in pcntl_setpriority() test
typo and better wording
Added suppot for glob() wildcard matching in ffi.preload directive
Reverting push to wrong repo
Update alloc patch
Ignore ZEND_FFI_TYPE_OWNED flag
Don't autoload when checking property types
JIT: Add option to disable SSA checks
JIT: Handle typed refs in assign dim
Allow array_splice() length to be null
Document the changes to substr functions
Use ICU's CXXFLAGS when using pkg-config
Add "-pthread" to EXTRA_LDFLAGS_PROGRAM as well
Added missing call to ZipArchive::close()
JIT: Check exception after jit_assign_dim_op_helper
JIT: UNDEF result on "Illegal offset type" exception
add new ffi.preload  option in php.ini and display ini entries in MINFO
bump version
set versions for release
Allow loading FFI bindings through ffi.preload directive
Accept null lengths for substr functions()
Add Z_PARAM_LONG_OR_NULL macro
Add a run with opcache to the coverage job
Update NEWS
add NEWS entry
Revert "Add tests for ReflectionZendExtension"
Add tests for ReflectionZendExtension
Add ext/sodium arginfo stubs
Add NEWS for the fixed bug #74083
Skip fpm bug #74083 test on Windows
Add (slow) test for fpm concurrent reloads #74083
Block signals during fpm master initialization
Improve the error message in timeout tests
Add tests for DOMEntityReference
Improve exif tag name fetching
Implement a cache for exif tag name lookups
Limit the amount of errors generated during exif parsing
Properly handle non resources passed to socket_select()
Update array access syntax deprecated
Clenup "smart branch" handling
Pass cache slot when printing type errors
Integrate property types with variance system
Relay on DO_ICALL/DO_UCALL opcode to avoid generation of useless code
Change port to avoid collision with others tests
Clenup "smart branch" handling
Import timelib version 2018.03
Test an error case with DOMDocument::createEntityReference
Silence undefined index warning when openssl not available.
Prevent parallel testing conflicts
Add Zend class/interface arginfo stubs
Update NEWS for 7.4.0RC5
Update NEWS for PHP 7.4.0RC4
Promote "Cannot use parent" to fatal error
Use "const" qualifier
Use "const" qualifier
Drop checkpoint that leaded to use after free
Add "-pthread" to EXTRA_LDFLAGS_PROGRAM as well
Reduced number of CFG pass iterations
Just return after exception has been thrown
Add stubs for ext-sockets
Appveyor: switch master to VS 2019
Azure: Publish code coverage results
Add upgrading note for round(-0.0) change
Remove configure checks for ltp when using --enable-gcov
Add fdiv() function
NEWS
Use clean shutdown on uncaught exception
Don't specify method return values in stubs
Use RT_CONSTANT() or CT_CONSTANT() macro depending on ZEND_ACC_DONE_PASS_TWO flag
Replace port already used
JMP optimization cleanup.
Revert/redo pass_two only once
Removed #if HAVE_DFA_PASS
Revert "Don't buid static libaraies when only DSO required"
Revert "Link executable files using non PIC object files. This reduces PIC overhead and improves performance."
Return error_zval form get_property_ptr_ptr on exception
Eliminate CHECK_VAR instructions for defined CVs
Explicitly check for exceptions in by-ref obj prop assign
Use php stream in exif fuzzer
Also check for exception after stream_eof
Separate common code and add few more patterns
Report error if stream_read is not implemented
Set display_startup_errors=0 when running skipif
One more place
Move ECHO handling into common switch
Cleanup JMP optimization. Remove duplicate code (conditional jums with constant operand)  and outdated commented code.
Cleanup JMP optimization pass
Avoid float to int cast UB in exif
typo and cleanup
Remove redundant components < 0 check
Actually remove the YIELD key specialization
Reduce YIELD key specialization
Reduce YIELD_FROM specialization
Reduce ZEND_THROW specialization
SAMRT BRANCH improvement.
Otimize out useless QM_ASSIGN
Add missing zend_parse_parameters_none() checks
Avoid file clash in root_check skipifs
Reduce oniguruma limits in fuzzing sapi
Don't check type of simple parameter default values
Handle "non well formed" exception during ZPP
Add pcre_get_compiled_regex_cache_ex() with local_aware flag
Added "const" qualifier
Encapsulate all SMART BRANCH related logic inside macros. Result of SMART BRANCH may be uninitialized (on exception).
Add missing SKIPIFs in exif tests
Check for exception after applying stream filters
7.3.12 is next
next is 7.2.25
add librt for opcache
Check for object_init_ex() failure in user filter factory
Comparison cleanup:
Expect appropriate parameter type in the first place
Set session.gc_probability=0 in bug78624.phpt
Check num required args is correct in debug builds
Backport fix for uaf during pcre jit fallback
Bail out if JUNIT is not enabled
Don't test default serialize max_depth
Delete temporary .post files of run-tests.php
Convert string function arginfo to PHP stubs
Convert count_chars invalid mode error to ValueError
Limit retry_limit test to oniguruma >= 6.9.3
Update opcache return type info for gd functions
Update zend_func_info for pcre/curl/iconv/json
Remove redundant zend_func_info for zlib/hash/session
Remove redundant func info for ctype/bc/fileinfo
Update zend_func_info for zend, array extensions
Remove most uses of ZEND_PARSE_PARAMETERS_END_EX()
Explicitly declare empty parameter list
Just return on failing ZPP
Add missing zend_parse_parameters_none()
Add MBString arginfo stubs
Add stubs for ext-xmlrpc
Add support for mbstring.regex_retry_limit
Update NEWS
ext/dom: Add global registerNodeNS flag on DOMXPath ctor and property.
Add missing zend_parse_parameters_none()
Add ext/pspell arginfo stubs
Add arginfo stub for JsonSerializable
Make sure T_ERROR is returned for all lexer exceptions
Improve diagnostic on PCRE JIT mmap failure
Split intl tests for ICU 65
Prefer optimization without JMPZNZ instruction
Replace "unexpected character" warning with ParseError
fix #78624: session_gc return value for user defined session handlers
Remove "finally" restriction.
Simplify protection from infinity loops
Moved non-constant JMP optimizations from pass1 to pass3. Removed useless "break"s, that stopped optimization too early.
Avoid "$a = $a + ..." to "$a += ..." conversion (compound assignments work slower). Added DFA optimization patters (e.g. "$a = $a + 1" to "++$a"), that previously worked only for compound assignments.
Move obvious optimization patterns from pass1 directly to compiler
Added missing rules
Added missing rules
Cleanup JMP optimization rules
Optimizer cleanup
Updated to version 2019.3 (2019c)
Empty merge
Updated to version 2019.3 (2019c)
Empty merge
Updated to version 2019.3 (2019c)
Promote warnings to error in array_flip()
Avoid file clash in root_check skipifs
Prune opcache func info
Promote warnings to errors in array_push()
Convert some notices to warnings
Allow SA_RESTART for SIGALRM
Remove irrelevant tests (they were failed because of warning to exception chenge in parameter parsing API).
Revert "Save opline before fallible arg type check in recv_init jit"
Suppress fsockopen error in ldap_set_rebind_proc_error.phpt
Limit input size in exif fuzzer
Require a space ofter run-tests "warn"
Save opline before fallible arg type check in recv_init jit
Improve bless tests script to minimize diffs
Add --enable-fuzzer-msan flag
Remove func copy optimization for private method with static vars
Add missing skip keyword in tests
Update NEWS for 7.4.0RC4
Update NEWS for PHP 7.4.0RC3
Update regarding changed OpenSSL default config path
Pass mode to open() in exif fuzzer
Mark test as borked when skipif produces invalid output
Just return after throwing a ValueError
Convert GD Resources to objects
Skip tests for old versions instead of marking them XFAIL
Remove most uses of the ERROR type
Restore "avoid exception check" optimization and add EG(exception) check only on slow path.
Add max_depth option to unserialize()
Elevate warning to ValueError for invalid ZipArchive object
Properly clean up files created by test cases
Add missing zend_parse_parameters_none()
Add ZipArchive arginfo stubs
Don't use asm arithmetic under msan
Convert libxml arginfo to php stubs
Reduce memory used by token_get_all()
Don't throw warnings during heredoc scan-ahead
Add ext/snmp arginfo stubs
Don't return explicit value on failing ZPP
Add missing zend_parse_parameters_none()
Make fuzzing sapi i386 compatible
Remove unused zend_del_literal() function
More ZPP warning to error related test fixes
Initialize variables
Convert "Only arrays and Traversables can be unpacked" into Error
Promote write "use scalar as array" warning to Error
Remove unused mmap_file + mmap_len from basic_globals
Add test for illegal unset/isset offset
Convert "Illegal offset type" warnings to exceptions
Convert "cannot add element" warning to exception
XFAIL sapi/fpm/tests/log-bwd-multiple-msgs-stdout-stderr.phpt
Enable ubsan stack trace printing on community job
Handle resources used as array keys consistently
Throw Error when writing property of non-object
Update opcache zend_func_info after wbmp/xml_parser changes
Don't generate useless stubs
Limit max length for parser fuzzer
Avoid code dupliction
Cleanup CFG optimization
Adding ldap stubs for arginfo
Remove mention of PHP major version in Copyright headers
Increase serialize_lock while decoding session
Remove xfail on bug70219.phpt
Just return on throwing ZPP
Add missing zend_parse_parameters_none()
Add SimpleXML arginfo stubs
Use nproc instead of hardcoded number
[ci skip] Update UPGRADING.INTERNALS
Add check_only parameter to get_closure handler
Add new entries for exif and unserialize fuzzing corpus
Avoid signed shift
Update NEWS
Use cheaper code for scalar type check
Change ZEND_RECV and ZEND_RECV_VARIADIC to use extended_value for cache slot (instead of op2), to be consistent with ZEND_RECV_INIT.
Check that type is set in ZEND_TYPE_IS_MASK()
Cleanup ext/dom: Additional unimplemented code following 25bfac4
Use ZEND_TYPE_IS_SET() when checking for property types
Skip test on 32-bit
Don't set nullability flag for parameters without type
Update error messages in some more tests
Canonicalize typed prop/param default value errors
Check for nullable void type earlier
Canonicalize typed properties error message
Standardize type printing in reflection
Change representation of zend_type from type code to MAY_BE_* mask
Skip test on 32-bit
Commit regenerated var_unserializer.c
Remove commented code
Allow lookup of distro-packaged QDBM headers on Debian
Added arginfo stubs for IMAP extension
Add missing zend_parse_parameters_none()
Add skip reasons
Just return on ZPP exception
Remove unused parameter
Add ext/tidy stubs
Properly use zend_parse_method_parameters()
Add ext/dba stubs
Employ zend_parse_method_parameters()
Remove unused parameter
[ci skip] Add phar + imap maintainer email
Make MSVC happy again
Convert soap functions arginfo to php stubs
Convert pcntl functions arginfo to php stubs
Don't buid static libaraies when only DSO required
Clean up JSON parser
Convert IMAP function aliases
Don't make argument nullable based on AST null initializer
Indicate entry is skipped in error message
Remove unstable test output
Change instructions to use oniguruma from git
Optimize access to thread local cache.
Add instructions for building an instrumented libonig
Convert session functions arginfo to php stubs
Add debugging code to usleep()
Backport MAP_JIT fixes from PCRE2 10.33
Change XMLWriter resources to objects
Upgrading notes for removed ext/dom classes.
Cleanup ext/dom: Removal of unimplemented dummy classes.
Update NEWS for 7.4.0RC3
Update NEWS for PHP 7.4.0RC2
Revert "Update NEWS for PHP 7.4.0RC2"
Revert "Update NEWS for 7.4.0RC3"
Increase timeout in test
Implement NUL byte checks for dbnames
Enable --with-mhash on CI
Check for exception after calling count_values()
Monitoring anonymous pages on mac via vmmap tag
Add tilde to allowed status/ping path
Improve test usleep_basic by inlining its output
Update NEWS for 7.4.0RC3
Update NEWS for PHP 7.4.0RC2
Move scripts out of corpus/ directory
Various improvements to fuzzer SAPIs
Add fuzzer SAPIs to the core
Make some session tests more robust
Sanity-check array/object lengths during unserialization
Add stubs for ext-hash
Add missing ZPP_none()
Stick with zend_long for ABI compatibility
Use XtOffsetOf() in url_scanner_ex
Define OBJ_PROP_TO_OFFSET() using XtOffsetOf()
Include stddef.h in zend_portability.h for offsetof() macro
Make constant and copy propagation only for IS_TMP_VAR operands
Use zval_try_get_tmp_string() instead of zval_get_tmp_string() for cheaper EG(exception) check
Avoid reloading
Reorder conditions
Load string once
Eliminate checks using ZEND_CONST_COND() macro
Allow throwing exception while loading parent class
NEWS
Improve "already declared" error message
Only allow "nearly linked" classes for parent/interface
Specify -fsanitize-no-recover
Improve Symfony test setup
Free history_get_history_state() result
Bump for 7.2.24
Raise minimal GCC version, Test with 4.8 is OK With 4.4: error: #pragma GCC diagnostic not allowed inside functions
PHP 7.3.10RC1 has been tagged
upgrading notes for ValueError/zend_value_error()
ceanup
Prefer ValueError over Error in GD
Port various autoconf bits to C99 compilers
NEWS entry, test and minor cleanup for FFI::isNull()
Drop regression test
add FFI::isNull() to check whether a FFI\CData is a null pointer
Stop after exceptions
Request #77863: PDO firebird support type Boolean in input parameters
raise ValueError from imagecreate/imagecreatetruecolor
add ValueError
clenup
Avoid hash value recalculation on each counter update
new_variable '{' expr '}' is deprecated as well
Mention that arg_info[-1] holds the return info
Add opcache return type for random_int()
Clarify that our usage of gettimeofday() is infallible
zip edxtension is now 1.15.5
fix type consistency after 8f897f1040f00210f4a5cdd82a88a1fe3e558955
Update NEWS
fix missing close bracket
Link executable files using non PIC object files. This reduces PIC overhead and improves performance.
Detect calls to abstract methods in get_method() already
Remove defines for specific oraldap versions
Remove support for umich_ldap
Remove nsldap support
Enable display_startup_errors by default
fix version
Revert "Microoptimization (avoid code duplication)"
Microoptimization (avoid code duplication)
Load execute_data without global regs
Remove HOT attribute from some VM handlers. Comparisons almost always followed by JMPZ/JMPNZ; JMPZNZ is rare used.
Remove --with-zlib-dir option from mysqlnd config
Warnings to Errors: imagesetstyle
Improve exception handling for abstract/deprecated calls
Warnings to errors in imageaffinematrix*()
Warnings to errors in imagecrop(auto)
Warnings to errors imageconvolution
Warnings become errors for imagepolygon et al
Negative checks for gamma
Warnings for image colour range check now throw exceptions
Warnings to errors for imagecreatefromgd2part
Warnings to Errors imagetruecolortopalette
Warnings to Errors imagecreate(truecolor)
Add ext/xmlreader stubs
Add missing zend_parse_paramters_none()
Add missing opcache return types for functions in spl
Declare nullable arguments in stubs
Add the last missing SKIPIF
Add missing SKIPIF (mbstring)
Add missing SKIPIF (xml)
Add missing SKIPIF (openssl)
Add missing SKIPIF (sqlite)
Add missing SKIPIF
Link executable files using non PIC object files. This reduces PIC overhead and improves performance.
Document opcache.preload_user directive
Report false for inherited private methods in method_exists()
Execute preload script under user defined by opcache.preload_user directive
Don't explicitly set return value on ZPP failure in ext/xml
Add ext/xml stubs
Avoid pointer UB in strip_header
Use unsigned subtraction in php_random_int()
Don't perform coercions in internal func return type assertion
Support computing func info from ret arg info for internal funcs
Remove duplicate func info for array_key_first/last
Add missing opcache return info for ext/standard.
Add new missing functions from ext/hash
Add zpp check to spl_classes()
Update NEWS for 7.4.0RC2
Update NEWS for PHP 7.4.0RC1
Clarify failure behavior of spl_iterator_apply()
Add missing argument checks
php_stream_from_zval can no longer return false
Don't explicitly set return value on ZFR failure in ext/xmlwriter
Add ext/xmlwriter stubs
Update PHP_API_VERSION
Make ReflectionType an abstract class
Update NEWS
Move isBuiltin() method from ReflectionType to ReflectionNamedType
Add arg type assertions to DO_ICALL
Free two bits in fn_flags by merging ZEND_ACC_HEAP_RT_CACHE/ZEND_ACC_USER_ARG_INFO and ZEND_ACC_DONE_PASS_TWO/ZEND_ACC_ARENA_ALLOCATED that may be used only for user/internal functions
Make error_reporting=E_ALL the default
Promote warnings to errors in substr_count()
Promote warnings to errors in substr_compare()
Drop E_STRICT notice in mysqli extension
Reenable alloca support on ZTS
Check zpp before other errors in SoapServer::addSoapHeader()
Remove bogus vcwd_open
Enable JIT on community_job
Add jit_bisect_limit
Remove duplicate md5/sha1 implementation
Avoid accessing undefined index in CLI server test
Don't call Reflection::export() in --rf etc implementation
Disable symfony build on master
Modernize some connectors in tests to remove env key duplication
Add job for community projects
Move and fix scandir related bug test
Promote warnings to errors in dir stdlib extension
Update NEWS
Promote warnings to errors in assert_options()
Promote Directory handler warning to error
Warnings to Errors hash_equals
Errorfy hash_pbkdf2
Warnings become errors for hash_hkdf
Warnings become errors hash stream functions (other than hash_init)
Warnings become errors hash_init
Warnings become errors hash_hmac hash_hmac_file
Promote warnings to errors in array_walk(_recursive)()
Promote warnings to errors in compact()
Promote warnings to errors in array_merge(_recursive)() and array_replace()
Addref static vars when not copying private method
Use explicit unaligned type in md5 implementation
Promote warnings to errors in extract()
Don't explicitly set return value on ZFR failure in ext/odbc
Set opcache.protect_memory=1 on Azure
Add missed mutability check
Add ext/odbc stubs
Remove delref in free_object_storage
Destroy error handlers before final GC run
Compute needle end only after checking it's non-empty
bump versions after release
set versions for release
Upgrade oniguruma lib to 6.9.3
Promote warnings to errors in max()
Promote warnings to errors in min()
Don't specify precedence for T_INC/T_DEC
Some pcntl cleanup
Add --with-pear to Travis build
add ffi to php.ini extension [ci skip]
Update SDK version for AppVeyor
Throw TypeError from VM implementation of get_class()
Add skipifs for zmm
Convert fileinfo functions arginfo to php stubs
Remove properties HT from nested GC data
Convert exif functions arginfo to php stubs
Remove memory exhaustion checks in php_chunk_split()
Improve strpos and strstr function family implementation
Don't use needs_live_range hook for "special" live ranges
Add ext\opcache stubs
Add assert arginfo stubs
Make arginfo printing of prefer-ref arguments nicer
Add ext/ffi stubs
Make sure that params with null default are marked nullable
Assert that symbol table is available in compact()
Replace deprecated libzip functions
Promote warnings to errors in array_rand()
Avoid duplicate "non well-formed" warning
Convert remaining array function arginfo to PHP stubs
Remove deprecated getaddrinfo flags
Promote warnings to errors in explode()
Deprecate AI_IDN_ALLOW_UNASSIGNED and AI_IDN_USE_STD3_ASCII_RULES
Also fix signature for passthru
Promote warnings to errors in str_pad()
Don't modify arrays passed by value
Add ext/gmp stubs
Remove unnecessary haystack length check in stripos()
Remove unnecessary NULL check
Make string size calculation in chunk_split more precise
Add some header and html function stub
Add stubs for ext/ftp
Skip memory_limit test without ZMM
Update Oniguruma to 6.9.1
Remove 'bogus' error condition in str_pad()
Promote warning to error in zend_forbid_dynamic_call()
Promote warnings to errors in str_repeat()
Don't explicitly set return value on ZPP failure in ext/iconv
Add ext/iconv stubs
Relax closure $this unbinding deprecation
Avoid strncat use in proc_open
Replace strncat in filter implementation
Support variable element size in spl heap implementation
Empty merge
Suppress deprecation warning on IDNA2003 ICU methods for clang
Promote warnings to errors in chunk_split()
Promote warnings to errors in str_word_count()
Promote warnings to errors in wordwrap()
Promote warnings to errors in dirname()
Promote warnings to errors in str_split()
Promote warnings to errors in strtr()
Promote warnings to errors in array_pad()
Promote warnings to errors in array_column()
Normalise strr(i)pos offset messages with str(i)pos ones.
Add stub for ext zlib
Promote warnings to errors in array_combine()
Promote warnings to errors in array_multisort()
Promote warning to error in array_chunk()
Promote warnings to errors in range()
Remove dead code in base64.c
Remove some unnecessary RETURN_FALSE
ensure proper settings for test
Update NEWS for 7.4.0RC1
Update NEWS for PHP 7.4.0beta4
Add Curl ext PHP stubs
Add Calendar ext PHP stubs
Don't use C++ style comments
fix the problem for connect_attr, set db condition, and add a new attribute _server_host
Add stubs for filter extension
Remove some unnecessary RETURN_FALSE uses
Add sha1 arginfo stubs
Add pageinfo arginfo stubs
Add metaphone arginfo stubs
Add md5 arginfo stubs
Cleanup unnecessary if guard clause to free buffer.
Don't explicitly set return value on ZPP failure in ext/calendar
Remove useless error check for bin2hex()
Suppress deprecation warning on IDNA2003 ICU methods
Don't explicitly set return value on ZPP failure
Don't explicitly set return value on ZPP failure
Revert "Move to non deprecated API on suitable ICU versions"
Creating stub for ext bz2
Add lcg arginfo stubs
Add ftok arginfo stubs
Support typed variadic args in gen_stubs
appveyor: exclude some documentation paths
Empty merge
Empty merge
Update NEWS
creating stubs for echant ext
Unify ZPP handling in ext/sqlite3
Don't repeat yourself
Convert sqlite3 functions arginfo to php stubs
Normalize SimpleXML::asXML() argument handling
Empty merge
Empty merge
Update credits_ext.h
Add hrtime arginfo stubs
Add some stubs at ctype ext
add some stubs for array func in basic_functions
Added arginfo stub for posix extension
Bump for 7.2.23
Next will be 7.3.10
Bump version numbers
Add myself to extension maintainer list
Add inet_ntop and inet_pton stubs
Don't return persistent string from get_cfg_var()
Mark PCRE locale key as local persistent
Remove dead code
Added zip arginfo stubs
Adjust GC count in SPL test
Remove removed nested data from GC count
Don't include non-refcounted structures in GC count
Generalize delref assertion
Add crypt() function's stub
add syslog arginfo stubs
Don't destroy properties array with unset GC type
Update the date class arginfo the new format
Add a prefix to differeniate between class methods and functions
Intern alias old_name early
Add readline arginfo stubs
Add missing argument checks
Add missing parameters to __set_state() methods
Don't explicitly set return value on ZPP/ZFR failure
Added arginfo stubs for sysvmsg
Support regenerating all stubs
Added shmop arginfo stubs
Added arginfo stubs for sysvsem
Added arginfo stubs for svsvshm
Remove some misleading RETURN_FALSE
Don't explicitly set return value on ZPP failure
Claim maintainership of ext/com_dotnet
Don't throw manual exceptions on ZPP failure
Add com_dotnet function stubs
Arginfo stubs for tokenizer
Add support for callable to the stub generator [ci skip]
Add crc32 stub
Updated to version 2019.2 (2019b)
Empty merge
Updated to version 2019.2 (2019b)
Empty merge
Updated to version 2019.2 (2019b)
Extend color component range checks
Use TypeError for preg_replace type check
Add GD function stubs
Add stubs for PCRE extension
Add partial openssl stubs
Add BCMath PHP stubs
Convert gettext functions arginfo to php stubs
Add base64_encode / base64_decode stubs
Convert json functions arginfo to php stubs
Handle preprocessor conditions inside classes
Fallback to curl in gen_stub if wget fails
Expand preprocessor support in gen_stubs
Add some basic_functions stubs
Don't short-circuit MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE
Make uninitialized DateTime an Error
Generate arginfo from PHP stub files
Added asserts to catch GC errors when refcount goes below zero.
Skip test when SIGKILL is not defined
Add UPGRADING note about stream_set_option() and includes
Skip test if ext/json is not available
Make extension compatibility check more liberal
Inline zend_zval_ptr() in executor explicitely (only on hot paths)
typo
Preloading is not comatible with dl() function
Don't set GC_HAS_DESTRUCTORS flag if destructors were already called
Update NEWS for 7.4.0beta3
Update NEWS for PHP 7.4.0beta2
Support calling convention specific function name mangling
Add test for bug #78363
Remove upgrade-pcre.php script
Add test for bug #78356
Revert "Use RW fetch for argument unpacking"
set version for release
Update NEWS
add php-keyring.gpg update step
Handle RW UNPACK in inference
Use RW fetch for argument unpacking
Add security related NEWS entries [ci skip]
add security NEW entries + reorder [ci skip]
Update NEWS
Don't explicitly install homebrew
Update NEWS [ci skip]
Document how to generate ffi_parser.c
file encoding cleanup: remove bom in win32 files
Mention also API versions bumps
Remove duplication
Remove .post files only for passing tests
Addded missing NEWS/UPGRADING entries for PDO "??" escape
Throw notice for plain wrapper fread/fwrite errors
Bump PHP_JSON_VERSION to PHP_VERSION
Remove AC_FPM_POLL
Remove outdated Libtool hack for macs
Mark _get_zval_ptr_deref as unused
Avoid over-specialization
Reordering
Delay dereference
Remove php_openssl_cipher_get_version()
Avoid reloading
Simplify TMP/VAR operand releasing
Update NEWS for 7.4.0beta2
Update NEWS for PHP 7.4.0beta1
Don't skip uninitialized typed props in get_class_vars()
Revert "Drop free_filename field from zend_file_handle"
Avoid references in TMP var
Try to fix macos build
Cleanup of remaining E_STRICT in tests
Update NEWS for 7.4.0beta2
Update NEWS for PHP 7.4.0beta1
Update NEWS
Update NEWS
Update NEWS
Remove HAVE_OCILOBISTEMPORARY and HAVE_OCICOLLASSIGN
Add upgrading entries
Also report errors from Zend stream reader operation
Report errors from stream read and write operations
Special-case rc=1 self-referential arrays in ReflectionReference
Revert "Add ReflectionReference::getRefcount()"
cleanup gd build with system libgd - drop need to use libpng with system libgd - drop need to use libjpeg with system libgd - drop need to use libXpm with system libgd - drop need to use libfreetype with system libgd - improve configure comments
Remove HAVE_PQPUTCOPYEND
Remove HAVE_DSA_DEFAULT_METHOD
Remove superfluous HAVE_GD_BUNDLED checks
Remove test for bug #77185
Drop superfluous ENABLE_GD_TTF
Add deprecations to UPGRADING
Deprecate unbinding $this from non-static closure
Deprecate allow_url_include
Deprecate restore_include_path()
Deprecate convert_cyr_string()
Deprecate (real) cast
Deprecate implode() with swapped parameter order
Deprecate FILTER_SANITIZE_MAGIC_QUOTES
Deprecate is_real() function
Deprecate money_format()
Deprecate hebrevc()
Deprecate ezmlm_hash()
Deprecate encoding as 3rd param to mb_strrpos()
Deprecate Reflection export() methods
Deprecate array_key_exists() on objects
Deprecate get_magic_quotes_gpc() and get_magic_quotes_runtime()
Reduce number of workers in test
Initialize static_members_table
Evaluate constant in class scope
Prevent use after free in fpm_event_epoll_wait
improve temporary fix for system libgd
Remove build.mk usage
Remove some unused HAVE_* symbols
Remove HAVE_LIBZIP
Checked in LiteSpeed SAPI 7.5, addressed two main problems in "clean shutdown" introduced in 7.4.3, 1. falls in an infinite loop because PHP engine's inconsistent state, now override the ITIMER_PROF to 0.1 second, clean shutdown must finish before that. 2. generate too much error log, we completely disable "error_reporting" before calling php_request_shutdown().
Renamed MySQLi test to remove duplicate 'mysqli_'
Move HAVE_SQLITE3_CLOSE_V2 to pdo_sqlite
Update changelog
Remove HAVE_LOCALE_H and locale.h check
Remove unused sqlite symbols
Put oniguruma include path to proper CFLAGS
Move Oniguruma related config stuff to where it belongs
Use run-time cache to avoid repeatable hash lookups in ZEND_DECLARE_CLASS_DELAYED
Deprecate alternative array access syntax
Use run-time cache to avoid repeatable hash lookups when creating anonymous functions and classes
ZEND_DECLARE_ANON_CLASS doesn't need to skip anything now. It's immediatelly followed by ZEND_NEW.
Remove safe_mode directive when installing ext/phar
Remove remaining lightnings from run-tests.php
Remove duplicate socklen_t check
Remove lightning
Convert E_STRICT into E_NOTICE for htmlentities() function
Ref #77388: Don't pass BAD_ESCAPE_IS_LITERAL
Remove Z_PARAM_ZVAL_DEREF
Update NEWS and UPGRADING wrt. opcache.cache_id [ci skip]
Use regedit to register event source
Update changelogs
Remove unused defines
Update changelog
Remove unused MISSING_MSGHDR_MSGFLAGS
Remove duplicate AC_PROG_CPP call
Update changelog
Remove unused HAVE_SHM_MMAP_ZERO and HAVE_SHM_MMAP_FILE
Allow multiple cache instances per user/host on Windows
Revert "Remove Windows syslog script and syslog.reg"
Avoid duplicate fstat() for includes
Avoid duplicate fstat() for includes
Avoid extra specialization for cold opcodes
Use reported fstat filesize for PHP streams
Revert "Avoid unused fstat() call"
Avoid unused fstat() call
Remove old hack
Avoid double buffering in Zend streams
Added specialization for comparison instructions and QM_ASSIGN
Simplify functions checks in m4
Separate "cold" and common unspecialized code
Update changelog
Remove unused build checks
Provide type info
Remove ZEND_HANDLE_MAPPED
Drop free_filename field from zend_file_handle
Introduce zend_stream_init_filename()
Introduce zend_stream_init_fp() API
Slit INC/DEC opcodes into hot/cold parts and remove specialized versioins for LONG_OR_DOUBLE.
Remove unused _get_zval_ptr_cv_BP_VAR_UNSET function
Remove ZEND_HANDLE_FD
Convert short tag to standard tag in Zend test file
Update NEWS [ci skip]
move NEWS entry [ci skip]
Replace deprecated conditions by ZEND_ASSERT.
Use ZEND_HASH_FOREACH APIs in a few more places
Support <?php followed by EOF
next is 7.2.22
Canonicalize file-names in zip tests
Delay IS_UNDEF checks
Small typo and proto name fix
Remove win32/php_stdbool.h
Remove unused files
Remove Windows syslog script and syslog.reg
Remove some *.dsp/*.dsw leftovers
Combine SKIP_TOKEN+RETURN_TOKEN into one macro
Move shebang handling into the lexer
Sync mysqlnd version with PHP version
typo [ci skip]
Emit T_BAD_CHARACTER for unexpected characters
Remove unused is_constructor arguments
vectorize string-escape with NEON
Remove usage of PHP_AIX_LDFLAGS
Symbol HAVE_PCRE has been removed
Remove conditional calls of always available macros
Remove unsed zts check for sqlite3
Remove duplicate PTHREADS template define
Remove timelib outdated defines
Remove PHP_MYSQL variable
Update changelogs
Remove php_multiple_shlib_versions_ok
Remove unused recode extension artefacts
Remove checks for always enabled spl and pcre
Remove WARNING_LEVEL fix for QNX
Convert all php_error_docref0 to php_error_docref
Remove tsrm_config_common.h
No more need to cater to pre-PHP-5.3 or PHP-6 versions
Don't split T_INLINE_HTML at partial PHP tag
Use TRY_ADDREF/TRY_DELREF in soap
Update NEWS and UPGRADING wrt. ext/recode unbundling
Removed ext/recode
Swap implode() argument order in the test helper
Remove duplicate XtOffsetOf() definitions in php.h
Remove unused tsrm_strtok_r() function
Remove unnecessary uses of allow_url_include in tests
Remove unnecessary uses of restore_include_path() in tests
Swap implode() argument order in some tests
Improve bless_tests
Use common code for double math
Revert "Temporarily skip test"
Allow GOTO style helpers in HYBRID VM
Separate "cold" parts of comparison instructions
Separate "cold" parts of binary op instructions
Remove redundant 64-bit ezmlm_hash() test
Add ZEND_DEP_ME macro
Convert short tag to standard tag in Zend test file
Switch to using shell-less proc_open() in various server tests
Support redirect+null descriptors in proc_open
Don't call Reflection::export() internally
Include test name in JUnit testcase name
Make proc_open_bug64438.phpt more robust
neon vectorization for base64
[AArch64] Use crc32 instructions when available
Add server conflict to soap custom content type test
Refactor undefining PACKAGE_* symbols
Remove TSRM/tsrm_config.w32.h
Drop support for JIT without SSE
Set expectation to reduce hot code fragmentation
Align segments on huge page boundary only for x86
Read from original address
Add CONFLICTS to recognized sections
Additional fix for mysqli_fork test
Implement array access notice in JIT
Throw notice on array access on illegal type
Reduce cost for GC references to strings and resources in JIT
Reduce cost for references to strings and resources
Rename support_strings to !is_list
Simplify two unserialize() tests
Clean up DateTimeZone::getLocation() test
Avoid invalid array access in fcgi.inc
improve libargon2/libsodium compatibility
Use e.g. instead of less common f.e. [ci skip]
Relax argon2 mem_cost down to 64k, bump time_cost to 4
Avoid unintended inlining
Upgrade to SQLite 3.28.0
Remove duplicated code for (PRE|POST)_DEC_(OBJ|STATIC_PROP) opcodes
Update NEWS for 7.4.0beta1
Update NEWS for PHP 7.4.0alpha3
Catch up with current procedures
Add zend.exception_ignore_args [ci skip]
Update NEWS [ci skip]
Update NEWS [ci skip]
Update NEWS [ci skip]
Add ReflectionReference::getRefcount()
Catch up with recent changes [ci skip]
Remove APACHE symbol
Refactor genif.sh
Make busy wait busier
Delay EG(exception) check on slow path
Remove redundant variable declaration
Deprecate passing invalid character to base_convert etc
Remove C89 checks for signal.h and strerror
JIT: Reading php binary symbols list on FreeBSD
Update libmagic patch
Remove INPUT_SESSION and INPUT_REQUEST
Implement FR #77230: Support custom CFLAGS and LDFLAGS from environment
Simplify PHP_CHECK_PDO_INCLUDES calls
Remove some unused variables
Provide argon2i(d) password hashing from sodium when needed
Simplify expression and remove the possibility of div by 0
Remove PHP_DEBUG_MACRO
Remove some more Apache 1 left overs
Mention that zend_parse_parameters should not be tested
Disable jit on msan job
Move footer to the end of configure output
Remove PTHREADS_ASSIGN_VARS
Always generate interrupt check in jit
Remove superfluous assignment
Eliminate useless checks
Temporarily skip test
Backport fe_reset_rw case
Make sure all cases of fetch_dim_w adjustment are handled
Optimize integer in_array with strict=true
Removed die('skip wurstuoppe');
Replace ZEND_ASSIGN_ADD (and others) by ZEND_ASSIGN_OP, ZEND_ASSIGN_DIM_OP, ZEND_ASSGIN_OBJ_OP and ZEND_ASSIGN_STATIC_PROP_OP
Add test
Preloading: Don't move conditional functions to back to scripts
Compact literals: Don't insert unmergeable keys
Assert that HT entries using add_new APIs are really new
Improve zend_binary_assign_op helpers. Reorder opcode numbers to make ADD-POW and ASSIGN_ADD-ASSIGN_POW opcodes sequencional.
Introduce and use ZEND_VM_INLINE_HANDLER() to avoid ZEND_RETURN exception
[ci skip] Remove NEWS entry
Preloading: Relax known type restrictions
Preloading: Also handle trait methods outside main script
Split destructor
Preloading: Prevent autoloading while resolving constants
Set PROPERTY_TYPES_RESOLVED flag for internal classes
Better optimization in RELEASE build. ZEND_ASSERT(s) prevented optimization
improvements to cli server
Improve unlinked class diagnostics during preloading
Avoid use of random ports in some socket tests
Remove curl_basic_017.phpt
Skip pcntl_sigwaitinfo() test under asan/msan
Optimization of INC/DEC helpers
Removed mysqlnd stats from phpinfo page
Enable option checking on CI
Remove libtool and automake from azure installs
Remove PHP_CHECK_CONFIGURE_OPTIONS
Remove some old BeOS artefacts
Remove check for ApplicationServices/ApplicationServices.h
azure: exclude some documentation paths
Backport test fix
simple ignore arguments in exceptions implementation
Implement SQLite extended result code functionality
update NEWS [ci skip]
PDO: support username & password specified in DSN
Update proto comment for proc_open
Remove unused (module|request)_shutdown_for_exec
Separate slow code
Use string destructor instead of general zval_ptr_dtor_nogc()
Eliminate exception checks
Add missing SKIPIFs
Setup msan on azure
Generate less code in compile time binary op test
Skip perf-sensitive fileinfo tests
Add missing SKIPIFs
opcache huge pages: Little fix for FreeBSD
Initialize last_line in phpdbg globals
Micro-optimization
Remove TSRM_BASIC_CHECKS
Remove not needed checks for functions
Remove unused check for struct cmsghdr
Clarify #if indentation in time limit implemementation
Run file_put_contents_variantion8 in separate directory
Msan: Unpoison buffer written by file cache
Don't use fast_memcpy under msan
Msan: Unpoison getrandom() syscall result
Undef opline result on mod/shift error in jit
Add some tolerance to time_sleep_until() test
Disable RTLD_DEEPBIND under memory sanitizer
Update NEWS [ci skip]
Update NEWS [ci skip]
Update changelogs [ci skip]
Sync functions checks
Remove unused build specific symbols
Remove HAVE_LIMITS_H check
Remove HAVE_DEV_ARANDOM
Update timelib to 2018.02
Update NEWS [ci skip]
Update NEWS [ci skip]
Update libmagic.patch [ci skip]
Set buffer to NULL to prevent double free (Kamil Dudka at redhat)
Add tests from fix #78183 from PHP-7.2
implement support for workers in cli-server on platforms supporting fork
add ini config details to php-config
Clean up files after the tests are run
Update changelogs [ci skip]
Remove HAVE_ERRNO_H from libgd
Increase timeout of asan job on master
Use strcmp() in phpdbg_eol_global_update
Disable ifunc resolvers if memory sanitizer is used
Remove phpdbg_xml_asprintf()
Mark ifunc resolver functions as unused
Set up asan+ubsan scheduled build on azure
Avoid reliance on arena details on phpdbg oplog
Update error message in libmysql test
Add tracked arena allocator
Add support for proc_open() with a command array
Reduce overhead
implement tsrm_is_shutdown API
Use the portable zend_strndup() instead of strndup()
Free ZTS lock in opcache
run-tests: Don't pass --INI-- settings to --SKIPIF--
Bugfix #78208 Needs rehash with an unknown algo should always return true.
Catch up with some recent changes [ci skip]
Remove HAVE_STRCOLL check
Sync HAVE_HASH, HAVE_HASH_EXT, PHAR_HASH_OK symbols
Remove posix_getlogin_basic.phpt test
Don't use zmm for PHPDBG_G(exec)
Add tracked allocator mode
Show actual enchant version if possible
Separate common code abd eliminate useless checks
Inline hot path
Make zend_hash_rehash() a void function
Clean headers checks
Avoid double checks on early binding
Remove warnings for bison and re2c checks
Remove unused HAVE_DATE and HAVE_SPL symbols
Remove HAVE_STRTOD and strtod check
Set Computer English language for credits sorting
Remove stream_socket_sendto.phpt
Private methods don't have to be duplicated
Use ldap_destroy instead of ldap_unbind_ext
[ci skip] Mention HAVE_HASH_EXT
Reorder conditions to minimize number of checks on fast path
Remove always true/false conditions, remove dead conde and simplify code.
Replace previosly checked conditions by ZEND_ASSERT()
Cleanup
FFI: Perform bitfield operations byte-wise
run-tests: Don't die unnecessarily
Set ZEND_ACC_LINKED flag after early binding (for consistency)
Reduce overhead of delayed early binding
Prevent useless hash lookups
Update NEWS for 7.4.0alpha3
Update NEWS for PHP 7.4.0alpha2
Keep lowercased parent class name as second argument of DECLARE_CLASS to avoid extra work at run-time
Avoid confusing gotos in phar_split_cache_list
Don't force USE_ZEND_ALLOC=0 in run-tests.php
Split test case
Add debugging code to time_sleep_until test
Remove unused zend_verify_arg_type() function
Properly shut down font cache mutex
Add explicit cast to uint32_t.
Free cert in php_openssl_load_stream_cafile()
Cleanup
Don't try to exclude zreg_none
Make ZEND_SEND_* flags unsigned
Avoid ub in shift overflow check
Dasm: Perform unaligned stores through unaligned pointers
Additional fix for bug #78185 (File cache no longer works)
Support TGA reading
Avoid shift ub for regsets
Remove leftover check
Handle misaligned ifreq on macos
Handle gr_mem misalignment on macos
Update NEWS
Rename test file to reflect the appropriate ticket number
Check for dlsym as well
Handle gethostbyname misalignment on macos
SOAP: Avoid indexing into null pointer
FFI: Use signed arithmetic for pointer offset
In php_needle_char() use well-defined double->integer cast
Avoid address calculation overflow
Bail out earlier in zend_memnrstr
Disable float division by zero sanitizer for div_function
Change indexing scheme for symtable_cache
fix test for Windows and for parallel run
improve test clean section
move NEWS entry
add test for #78185
imagecolorallocate(): Check that RGB components are in-range
Avoid overflow in mul range calculation
Backport "Avoid UB in overflow checks"
Avoid memset/memcpy null ub in block pass
Avoid signed shift ub in php_sdl
Remove copy argument from php_glob_stream_get_path/pattern
Suppress shift UB in gd_itofx()
Suppress overflow UB in zend_strtod
imageloadfont: Perform overflow check before calculation
Phar: Avoid negative zip dates
Avoid memcpy UB in streams
Avoid more UB in round()
Use unsigned char in _crypt_extended_r
Use unsigned chars in php_uuencode()
Avoid overflow UB in is_numeric_string
fix setcookie Max-Age to use php_time
export php_time
Avoid UB in overflow checks
refactor a little more to add some more useful error messages and raise the limits on waiting for slow machines
Separate check for process creation and ability to accept connections
Document removal of uint and ulong typedefs
Resolve discrepencies between second value yielded by gettimeofday and time, fixes #69044
Remove ZPP tests from ext/ldap
Turn system_id into a true global
Update NEWS
fix flaky socket test
move NEWS entry
Implement SQLite3 backup API
Improve create_verify_dir() diagnostics
Attempt to fix JIT on Mac OSX ZTS build
Add types to a couple of builtin functions
Remove XFAIL mark
Avoid uninitilized field access
Accept null for preg_quote delimiter argument
Simplify pm.start_servers calculation in docs
Add syslog.filter=raw
Add debug output to posix_getlogin() test
Make ext/curl/tests/bug48203_multi.phpt more robust
Remove unnecessary short_open_tags use in tokenizer test
zend_func_info: Remove null from methods with non-null return type
Enable intl on macos
Report test failures on macos
Remove bogus quieting in AppendIterator::append()
ctor_params of mysqli_fetch_object should use "a"
Don't verify arginfo types for internal functions
Allow null for weak scalar arg of internal func in arginfo
bugs in fpm logging #4273 #4007
Use uint64_t for time_sleep_until calculations
Prevent parallel test conflict
Make opcache zend_func_info consistent with Reflection for ctype
this mtime comparison makes assumptions that cannot always hold true
gettimeofday cannot be used to reliably implement high precision process synchronization
Set correct default version
Set correct default version
PHP-8.0 should run JIT tests, always [ci skip]
PHP-7.4 branch should not run JIT tests, ever [ci skip]
This test is flaky, and some of it doesn't make sense.
Remove dead code in sockets extension [ci skip]
fix flaky socket tests
Remove file/005_variation.phpt
Make curl_multi_info_read.phpt more robust
Remove useless param in php_snmp_error()
disable this test temporarily
Turn add_index_zval and add_next_index_zval into inline function
enable JIT only in master for macosx
fix mac tests on azure
Backport 96a12578c13b5c37195b10526fcdc669b795644d
Backport 91a6cdbff5ebd1ca4db1d6e8c42d3265ce80ace4
More edge case fixes that may cause bug #78106
Attempt to fix edge conditions that may cause bug #78106
Implement numeric literal separators
disable phpdbg on i386 builds [ci skip]
Throw TypeError instead of warning in case of invalid path
Some more string conversion handling, fixing bug #77958
Avoid converting zval when not needed
Revert "ext/standard: Use PKG_CHECK_MODULES to detect the Argon2 library"
Remove superfluous CLEAN sections
Condition some azure jobs on schedule trigger
Add BMP support to PHP info
Add test for bug #78106
Reenable -Werror for macos build
Suppress -Wtautological-compare in dasc file
Determine thread ID on macos
Don't throw warning if testing multiple ports
test for bug #78151
temporarily disable werror on mac in master because of build failures in JIT
Revert "micro-optimization"
Constify some char* arguments or return values of ZEND_API
Mark label as potentially unused
Add do...while(0) for RETURN_* and ZVAL_* APIs
Enable -Werror on macos builds
Skip syntax errors in skipif conditions
Don't warn if libcurl SSL library not detected
we are not running database tests on macos, there is no need to install mysql or start pg
we are not running database tests on macos, there is no need to install mysql or start pg
Make ATTRIBUTE_UNUSED more portable
Use memset instead of brace initialization
Update NEWS for 7.4.0alpha2
Update CREDITS for PHP 7.4.0alpha1
Update NEWS for PHP 7.4.0alpha1
Remove always true condition
Mark some operand fetching funs as ATTRIBUTE_UNUSED
Try to control ZEND_MM_ALIGNED_SIZE type
Remove MYSQLND_LLU_SPEC/MYSQLND_LL_SPEC
Enable -Werror on m32 build
Remove unused php_mbX_int_to_char() functions
Guard functions by SO_PASSCRED
Simplify GD null byte injection tests
Preserve CFLAGS/LDFLAGS for curl ssl check
Suppress int to char conversion warnings
Use labs() on long integer
Don't use sqlite3_aggregate_count()
Update credits pre-release
fix flaky zip tests, order is OS dependent
add comment about pg_config/pkgconfig
Revert option rename
Use %define api.pure instead of %pure-parser
fix flaky sockets test - form of response is OS dependent
fix flaky test on OSX
Revert "ext/pgsql: Use PKG_CHECK_MODULES to detect the pq library"
fix flaky gd tests
disable phpdbg on macosx, it's not well tested there and is skewing results [ci skip]
ext/standard: Use PKG_CHECK_MODULES to detect the Argon2 library
ext/ldap: Use PKG_CHECK_MODULES to detect the libsasl2 library
Remove unused gmp_unary_ui_op() function
Remove unused _setEdgePixel() and getPixelOverflowColorTC() functions
Remove safeboolean use in gd_jpeg.c
Remove unnecessary short_open_tag INI directive in tests
Build with ldap and ldap sasl on azure
Remove ext/ldap/tests/bug76248.phpt
Be more precise about possible types for mysqli methods
This reverts 0e5d4ea55554872fe72e5d984b73fc21abc561fe to fix the build on MacOSX
Next is 7.3.8
Support full variance if autoloading is used
Register class before fetching parent
use XFAILIF rather than XFAIL to avoid warnings [ci skip]
use XFAILIF rather than XFAIL to avoid warnings [ci skip]
Add specialized pair construction API
next is 7.2.21
next is 7.2.21
drop docker until tested locally
checkout depth of one doesn't always work with batched builds, it seems
Add get_mangled_object_vars() function
i386 build
Remove ldap zpp tests
Delete opcache flags for php 8.0's removed mbereg*() aliases
Clean up opcache func flags for set_socket_blocking
Rest of c3e78efecfca85fc497357cc31ad4c6f4f7181aa
ext/pgsql: Use PKG_CHECK_MODULES to detect the pq library
micro-optimization
watchpoints have flaws in implementation
BIND_LEXICAL has a meaningless line number
fix flaky ipv4 loopback test
Extend wildcard files section in EditorConfig [ci skip]
Simplify LiteSpeed SAPI module version
Use PHP_VERSION for zend modules
azure macos
azure image update [not skipping on purpose to test new configuration]
Restored NEWS entry
Enable STRICT_TRANS_TABLES in new test
Use batch mode on Azure
ext/xsl: Use PKG_CHECK_MODULES to detect the EXSLT library
ext/xsl: Use PKG_CHECK_MODULES to detect the XSLT library
[ci skip] Catch up with 642b8d00e01170eb934c1adb56bcf43c9c4aecd4
Use zero port in socket_(export|import)_stream-4-win.phpt
Try to fix Windows build
Use ZEND_ASSUME() to perform the following check only on "slow" path.
Support for exceptions thrown during "Array to string conversion" error processing
Reduce over-specialization for quite seldom instructions
php_zip_pcre: Match pattern before stating for directories
Remove possible false return value from get_object_vars()
Update release-process.md
Cheaper checks for exceptions thrown from __toString()
fix test
Revert "this test is flaky on azure, and can't see why from current output"
junit testcase classname is used as filename on azure
this test is flaky on azure, and can't see why from current output so refactored, and restored an accidentally removed check (resource)
Prevent generation of specialized ZEND_ASSIGN_OP_..._STATIC_PROP handlers, that call unspecialized helper, anyway.
fix flaky posix test
Deprecate ReflectionType::__toString()
Make sure array_splice() always returns an array
Allow exceptions in __toString()
Use zero port in socket_(export|import)_stream-5.phpt
ignore first gets time which is usually a few ms only
Make mysqli_connect arguments explicitly nullable
keep DIR option to --with-unixODBC for old versions without libodbc.pc
Avoid concurrent directory writes in FilesystemIterator test
Add return type to some array_* functions
add azure pipelines badge to readme [ci skip]
Actually load opcache on Azure
Reload tsrmls_id in release builds as well
ext/zip: Replace $LIBZIP_LIBDIR with $LIBZIP_LIBS
Try to fix phpdbg + opcache compatibility
PHP 7.4 is built with Visual Studio 2019 on Windows
Try to make 17result.php more robust
Azure: Don't build zend-test as shared
Use a common setup macro to detect the Expat library
should be or
always run
run/publish test on success and failure
always run/publish tests, even when failing
always run/publish tests
this was in 7.3.5, not 7.3.6
correct zts flags for 7.4
get the name of the branch right
Set up CI with Azure Pipelines
Prevent use of TLS 1.3 in stream_server_reneg_limit.phpt
Clear errors after SSL_CTX_load_verify_locations()
Make "MySQL server has gone away" errors more consistent
Finish func_info updates for ext/standard
Expect string argument in hexdec, octdec, bindec
remove reverted commit from changelog
Update ZPP docs
Add Z_PARAM_NUMBER and use it for some functions
Remove zpp L specifier
ext/zip: Remove un-needed symbol check for zip_open
ext/zip: Add PHP_EVAL_LIBLINE to replace PHP_ADD_LIBRARY_WITH_PATH
ext/ffi: Remove symbol check for ffi_open
ext/enchant: Pass $ENCHANT_LIBS to PHP_CHECK_LIBRARY to fix shared builds
ext/skeleton: Update use of PHP_CHECK_LIBRARY
Convert fetch_resource warnings into TypeErrors
Don't involve output check in the test
Add return type for string functions
Add boolean return type for ctype extension functions
Add double return type for math functions
Add return type for bcmath extension functions
Update SDK version for AppVeyor
skip where no groups available
only clear when showing in parallel runner
Change ZPP only if compiled with ICU >= 64
Update tests for ICU 64
SimpleXMLElement and ResourceBundle implement Countable
Remove confusing spkstr checks
Update tests for ICU 64
Add junit support for parallel test runner
run-tests: Remove redundant 'suites' key
A few more func info updates
Better hot/cold code splitting
Remove stream_socket_sendto.phpt
Use TypeError instead of warning in implode()
Add CONFLCITS file for fpm
Convert some warnings to TypeErrors in array functions
Mark sapi_windows_set_ctrl_handler.phpt as XFAIL
Don't specialize "cold" handlers
Removed useless specialization. Specialized handlers called not specialized helpers.
Reduce register pressure by reloading values on CPUs with few general purpose registers
Update the DatePeriod read/write handlers
Add a test for bug #65672
Ensure the internal properties cannot be overwritten
Disable "bad" optimisations only for emulation loop
Add boolean return type for is_* functions
[ci skip] Update libmagic.patch
[ci skip] Update year
[ci skip] Update NEWS
Add test for bug #78075, json detection
have parallel test runner respect NO_INTERACTION
Partially reapply ba40f505e5804a5f62a1e220b0dce9d417a27f4d
Ported limagic 5.37
Remove get() object handler
Run sapi tests when running all tests
Update phpdbg oplog test
Update cli reflection test
Remove two zpp tests in sapi/cli/tests
escapeshellarg/escapeshellcmd: Throw TypeError instead of E_ERROR
Update more func info information for ext/standard
Enable JIT in Travis build
zend_assign_to_variable() optimization
Disable JIT for ext/ffi/tests/200.phpt
Don't JIT functions with many blocks
Mark "cold" functions
Bump API numbers
Remove set() object handler
Specify get_property_ptr_ptr handler for DatePeriod
Add tests for DatePeriod properties
zend_do_fcall_overloaded() doesn't have to be exported
Update NEWS for 7.3.6
Remove unused variable
add NEWS entries for sec fix
disabled functions must not have return type
These macros should not expect any argument
Avoid cold code duplication
Restore the execute bit for run-tests.php
Replace ZVAL_COPY() and ZVAL_COPY_VALUE() for IS_OBJECT by cheaper macros
Respect optimization_level when running JIT inference
Avoid usage of internal get/set object handlers. They are going to be removed in PHP-8. Scalar FFI values now should be accessed through special "cdata" property.
SCCP: Don't perform partial object propagation for typed props
Revert accidental changes
hebrev/hebrevc: Don't return false for empty string
Update MAY_BE_NULL info for more ext/standard functions
Avoid double copying
Update MAY_BE_NULL for parts of ext/standard
Update MAY_BE_NULL func_info for Zend functions
Remove FUNC_MAY_WARN
Allow array_merge() / array_merge_recursive() without arguments
Add return type information to some ext/standard functions
zend_func_info: Remove unnecessary type callbacks
Put phpinfo() related code into cold code segment
bump version after release
Update NEWS
Prevent parallel test conflicts
Remove special handling of zero-arg funcs in func_info
BIND_STATIC of implicit binding may be undef
Enable pcre valgrind support only in DEBUG build (it affects performance)
ext/xml: Use PKG_CHECK_MODULES to detect the Expat library
Align .text segment for better huge pages usage
Make more tests run on Windows
Accept flags argument in zend_lookup_class_ex()
Add fpmi to the opcache supported sapis
Upgrade bundled PCRE2 to 10.33
Use PKG_CHECK_MODULES to detect valgrind, and share build config with pcre
Define minimum required libffi version
Add UPGRADING/NEWS entries
Deprecate use of parent where no parent exists
list net/interfaces, trying to get the error on windows when possible
Split up "parent" test cases
Implement basic variance support
Avoid early-binding on unresolved types
Prevent further potential test conflicts
fix notice in run-tests
Prevent potential test conflict
run-tests improvements:   Add XLEAK section, this is made necessary by the support   for valgrind tools other than memcheck.   XLEAK is to a leaking test what XFAIL is to a failing test.   Tidy up summary a little to exclude Expected Fail and Expected Leak   when there are no expected fail/leaks
Forbid use of not fully linked classes
Don't require NO_ESCAPE for partial arrays in SCCP
add support for valgrind tools to run-tests.php
Mark bug44811.phpt as an online test
Use a different URL in bug44811.phpt
.text segment may be not the first one
Use PKG_CHECK_MODULES to detect unixODBC
Don't evaluate functions with partial array arguments
Handle partial arrays in zend_is_true() checks
Extract ct_eval_binary_op()
Improve SCCP debug code
sodium: fix shared build
enchant: fix shared build
fix typo breaking shared build
Prevent test case failure
Support content_type stream context option in soap
use {TMP} placeholder in phpt tests
Prevent race condition in opcache_reset()
Revert "Rename *.l files to *.re"
[ci skip] Migrate Coding standards docs to Markdown
Move CODING_STANDARDS to CODING_STANDARDS.md
Make chr ZPP failure message consistent with ext/standard
[ci skip] Join Zend engine docs-alike files to readme
Enhance makedist script
Rename *.l files to *.re
Move copyright/license headers to CONTRIBUTING.md
Add enchant pkg-config notice in UPGRADING
Use PKG_CHECK_MODULES to detect the Enchant library
Use *.data for tests data files
Use *.data for fixture files
Update UPGRADING about LiteSpeed
Rename configure --with-litespeed to --enable-litespeed
Rename *.tif to *.tiff for consistency
Update NEWS regarding re-tagging 7.3.6RC1
Removed ability to compile PHP without EX(run_time_cache). ZEND_EX_USE_RUN_TIME_CACHE was always defined.
Bump for 7.2.20
Update changelogs
Rename *.dat to *.data for common file type
Enhance the tokenizer data generator script
Warn about non well-formed arguments in bcmath
Add RETURN_EMPTY_ARRAY() / RETVAL_EMPTY_ARRAY()
Moved NEWS entry
Prevent further potential test conflicts
Prepare 7.3.7-dev
Prevent test conflicts
Update changelog
Use pkg-config for sqlite3 and pdo_sqlite
Add extensions naming conventions to ext_skel.php
Convert CRLF to LF
Remove example file for pgsql extension
Add ping to the fpm test for bug #77934
Implement spread operator in arrays
Check for supported libffi ABI
ARM64 may be big endian
Load 8 bytes at a time in hash_func. (Sebastian Pop)
Require semicolon after SAVE_CURL_ERROR()
Support content_type stream context option in soap
Deprecate and ignore $version parameter of curl_version()
Convert CRLF to LF
[ci skip] Remove outdated fastcgi info in favor of the manual
[ci skip] Refactor libgd docs
[ci skip] Migrate intl error conventions docs to Markdown
[ci skip] Migrate oci8 README to Markdown
[ci skip] Migrate tests READMEs to Markdown
[ci skip] Migrate libxmlrpc README to Markdown
Normalize comments in *nix build system m4 files
Prevent race conditions
Remove unused variable
Remove duplicate variables
Use PKG_CHECK_MODULES to detect the iODBC library
Use PKG_CHECK_MODULES to detect the systemd library
Using PDO instead because of consistency
list interfaces/adding just "binary" state status.
Remove dead DEBUG_CFLAGS setting
Remove unused symbol definition
Remove redundant memory.h file
Simplify ext/mbstring/libmbfl/config.h creation
Integrate libmbfl docs to README.md and LICENSE
Convert CRLF to LF in *.wsdl files
Remove ffi README in favour of docs
Prevent race condition
Rename *.jpeg files to *.jpg
Bump config.guess and config.sub
Remove unused variables
NEWS and UPGRADING for the scatter filter
Implemented the gdScatter filter I wrote almost 10 years ago
Remove unused variable
Remove dead code from configure.ac
Disable checking for library in ext skeleton
Disable checking for library in the ext skeleton
Updated LiteSpeed SAPI to 7.3.2 to allow request header value length up to 64K.
Remove unused functions
Update the extension template file to use PKG_CHECK_MODULES
Remove unused functions
Remove redundant example/test libsodium.php file
Remove unused example/test fileinfo.php script
Remove example PHP script from FFI
Remove vcsclean script
Add {TMP} placeholder for PHPT INI sections
Use fast zpp for ReflectionClass constructor
Improve PHP hash function. See Daniel Lemire's blog post https://lemire.me/blog/2016/07/21/accelerating-php-hashing-by-unoptimizing-it/
Optimize $name/$class property population in reflection
Refactor inheritance type check implementation
Deduplicate inheritance type check implementation
Deprecate CURLPIPE_HTTP1
[AArch64] Use NEON to initialize zend_hash
Add --with-ffi on Travis
Avoid some maybe uninitialized warnings in ffi
speed up increment and decrement operators with overflow detection
speed up add and sub operators with overflow detection
Use PKG_CHECK_MODULES to detect the ffi library
Deprecate left-associative ternary
Always generate fatal error for LSP failures
[AArch64] use rev64 to reverse strings
Remove outdated info from README.ZEND_MM
Convert CRLF line endings to LF
Convert CRLF line endings to LF
Remove empty section
[ci skip] Add password registry RFC to changelog
[ci skip] Rename libbcmath license file to LICENSE
[ci skip] Move OpenLDAP license to redistributable info file
Improved code for unordered comparison
Rename uppercase JPG file to lowercase jpg
[ci skip] Move wddx to dedicated section
Remove phpextdist
Remove duplicate test file
Remove duplicate getimagesize_variation_003 test
Properly initialize variable
Re-add common PDO tests to Firebird test suite
Update `NEWS` with changes made at #4093
NEWS
Include the request method in CLI server logs
Remove test-pcntl script
PDO_Firebird test update, round 2
Rewrite PDO_Firebird tests to not depend on ext/interbase
Add more missing CURL_VERSION_* constants
Implement arrow functions
Don't try to disable the already removed ext/interbase
Okay, too quick to merge, these are only relevant to 7.4
Remove some more interbase leftovers
NEWS for ext/interbase unbundling
Remove this leftover
Move ext/interbase to pecl/database/interbase
Use ZEND_HASH_FOREACH with direct callback, instead of callbacks
Update NEWS wrt. sec fixes
fix typo
Also, use ZEND_ACC_PRELOADED for classes
Remove TSRM configuration header
Add tests for bug77943
Add UPGRADING entries
Use PKG_CHECK_MODULES to detect the zip library
Use PKG_CHECK_MODULES to detect the libsodium library
Always use pkg-config from the host architecture
Properly initialize out parameter
fixed typo
Adds json_encode test for unpacked arrays
Extend CURLFile to support streams
Simplify checking of *nix build tools
Remove unused TSRM/readdir.h header
Make MySQLPDOTest::extractVersion() more liberal
Enhance the buildconf force option
Automatically remove aclocal.m4 if present
Update NEWS with added TLS 1.3 info
Enable TLS 1.3 by default
Added tls 1.3 support for PHP
[ci skip] Remove outdated and redundant Apache README
Update NEWS
Update NEWS
Little detection change proposal.
PHP, meet MySQL
Enable -Werror in CI
Use better macros
settype() optimization
Remove html_errors from INI Quick Reference as INI values are identical to Engine values
Use ZEND_TRY_ASSIGN_REF_... macros for arguments passed to internal function by reference
Use ZEND_TRY_ASSIGN_REF_... macros for arguments passed to internal function by reference
Use ZEND_TRA_ASSIGN_REF_... macros for by reference arguments of internal functions.
JIT profiling other BSD build fixes
news entry for litespeed
Optimize constant SWITCH_LONG and SWITCH_STRING
Don't eliminate BIND_STATIC if it may cause undefined constant warning
Move Autoconf Archive macros to a common m4 dir
Move acinclude.m4 to build/php.m4
Simplify libxmlrpc bundling and building
Implemented JIT for SWITCH_LONG/SWITCH_STRING
Make DateInterval objects uncomparable
Remove duplicate zend_unset_timeout()
[ci skip] Remove CLI sapi README
Remove sinclude from tsrm.m4
Remove unused BIND_STATIC insructions
Use _zend_hash_find_known_hash() for IS_CONST operand
Add gcc global register for aarch64
Improved LSAPI_End_Response_r() .
Refactor Zend/acinclude.m4 local macro
Updated visual text elements using markdown
Remove php.gif from the project root directory
Refactor docs files for bcmath library
Move ucgendata README to generator file header
Remove zend.ico
Added test for imagecolorclosesthwb
Add test for date timestamp
Update changelog
Update changelog
Update changelogs
Remove PHP_SETUP_KERBEROS m4 macro
Use PKG_CHECK_MODULES to detect the kerberos libraries
Update Git repository for Windows build tool kit
Remove HAVE_PCRE, as ext/pcre is always available
Keep EX(opline) in consistency when call engine and helper functions
Use php-sdk-2.2.0beta5 on AppVeyor
Remove dead "props" member from date objects
Check assert only when RC_DEBUG is enabled
Rename --enable-libxml to --with-libxml to meet naming guidelines
Use PKG_CHECK_MODULES to detect libxml2
Remove support for --with-libxml-dir
Add a dl() test to Travis
Don't initialize return value before calling user functions
Don't initialize return value before calling user functions
Join build makefiles together
It's safe to keep old string if it's stored not in SHM.
Remove some uses of deprecated internal_encoding settings in tests
Eliminate FETCH $GLOBALS followed by FETCH_DIM/UNSET_DIM/ISSET_ISEMPTY_DIM
Simplify generated_lists generation
ext/pcre/config0.m4: add ac_cv_have_pcre2_jit variable
next is 7.2.19
Improved support for "context threading" (not enabled).
Don't overwrite iterator count during real init
Prepare main branch for PHP 7.3.6
s/mysql_connect()/mysqli_connect() in php.ini
Partial fix for bug #77903
Use curl_mime_*() functions if available
execute_data->return_value is not used for internal functions
Remove not needed extension generated files gitignores
Add test for curl_version()
Both readlink args should not point to the same buffer
Zero sockaddr struct
Correctly destroy reference in ArrayObject sort
Removed tests that always (or almost always) true
Suppress some maybe uninit warnings in jit
Try to fix stat_variation3-win32.phpt
Avoid maybe uninit warning in libmagic
Disable strict aliasing warnings
Updated NEWS
Remove functions from func_info that were removed in PHP 7
Remove HAVE_* for always available extensions
Disable PACKAGE_* preprocessor symbols
Remove PHP_READDIR_R_TYPE
LiteSpeed SAPI 7.3, better process management, new API function litespeed_finish_request().
Try to fix windows build
Don't use php_strtok_r in build_tablename
Avoid uninit warning in ftp
Remove dubious memcmp optimization in iconv
Avoid uninit warnin in http_fopen_wrapper
Avoid uninit warning in dtoa
Avoid misc uninitialized variable warnings
Avoid uninitialized variable warnings in gmp
Add test for get_cfg_var with array variable
Avoid unitialized variable warning in soap
Remove dubious memcmp optimization in iconv
Avoid uninit warnin in http_fopen_wrapper
Avoid uninit warning in dtoa
Avoid misc uninitialized variable warnings
Avoid uninitialized variable warnings in gmp
Add test for get_cfg_var with array variable
Avoid unitialized variable warning in soap
Include libpq-fs.h on Windows, too
Enable -Wall on release builds for GCC
Remove odd variable assignment in escape_analysis
Regroup expressions in php_schema.c to avoid array bounds warnings
Avoid potentially-uninitialized warnings in readline
Mark zend_bailout() as a noreturn function
Use EMPTY_SWITCH_DEFAULT_CASE in php_unicode.c
Run compile step under travis_wait
Avoid directory clash in realpath tests
Backported call frame initialization improvement
Replace "ZEND_CALL_CTOR" hack by additional live-range
Added test
Work around -Walloc-size-larger-than bug
Use readdir() instead of readdir_r()
Remove curl gnutls locking
Remove incorrect mbstring includes
Remove unused function prototype
Remove restrict zend_portability define
Add script to generate libmagic.patch
Avoid code duplication
Remove the readline thread-safety warning
Remove unused rcsid variables
Avoid curl ssl callback warnings with OpenSSL 1.1
Improved code generated for RETURN in methpods and closures
Avoid onig match param unused variable warning
Use zend_quiet_write instead of ZEND_IGNORE_VALUE
Suppress warnings using zend_quiet_write
Don't build JIT if the host architecture doesn't support it
Mark zend_jit_print_regset as unused
Suppress write() warnings in jit_perf_dump.c
Generate ZEND_COUNT for sizeof()
Make tsrm_env_lock() void
Check for ZEND_CALL_RELEASE_THIS only if ZEND_CALL_CLOSURE is not set
Removed old constants (they are redeclared as macros)
Simplify call frame initialization
Support VirtualProtect for opcache.protect_memory
Ensure double slashes are replaced by the path normalization
Remove posix_getlogin() check from posix_getpwnam() test
Make zlib include_path tests more robust
fix a spell mistake
Eliminated unreachable jumps
Use release for regex in imap
Remove redundant $this args in SplObjectStorage implementation
Removed too strict register allocation constraint.
Don't split basic block after RECV, if function checks type hints
Eliminated check for assignment to itself
Micro-optimization
Compare only "significant" bits
Remove duplicated substitude for Makefile
Repare SWITCH VM
Remove HAVE_STRERROR
ext/xml: Use object instead of resource
Added range options to the float validation filter
Preserve keys in emulate_read_fd_set()
Change to php.net mail address
Avoid time(NULL) call if explicit timestamp given
[ci skip] Ignore Opcache Jit generated files
Add AS_HELP_STRING to Opcache JIT option
Add AS_HELP_STRING to phpdbg options
[ci skip] Mention docs dir
Remove checks for locale.h, setlocale, localeconv
Remove HAVE_SIGNAL_H
Remove HAVE_LIMITS_H
Refactor AC_INIT in configure.ac and PHP versions
Always use ZEND_SECURE_ZERO() when cleaning up data
[ci skip] Update release process docs to Markdown
Follow up #77849 PDOStatement objects in undefined state after clone
Update Appveyor CI to php-sdk-2.2.0beta4
[ci skip] Bring release process docs up 2 date
Add opcache.lockfile_path and opcache.lockfile_path to ini settings
typo
JIT register dump, fix BSD build.
Optimized "smart branch" instructions
Make is_identical() functions return zend_bool (instead of int)
unused variable
Avoid code generation for BB with single VM instruction
jump optimization
Avoid useless code generation for RECV opcodes
Ref #76801 remove old file source from file_sources hash in case of file included more than once
Use inlined HYBRID VM handlers for DO_FCALL* and ZEND_RETRUN
Remove RC1 and RCN from scalar types.
JIT code improvement for ocache.jit=1 (IP consistency)
Improve JIT code for smart branches
array_merge() may return argument with incremented reference counter
Clean ext/spl/tests/bug42364.phpt files after tests
Use fastcall calling convention
Improved comparison opcode handlers
Use fastcall calling convention
Remove dead JPEG2000 code
Avoid NEW opcode inlining when opcache.jit=1
Avoid generation of dead jumps
Update NEWS
bump versions after release
Added comments
fix paste issue
Pointer arithmetic on void pointers is illegal
typo
Removed checks for required object handlers
Eliminate hash lookup for immutable op_arrays
Use Zend MM for JIT temporary buffres allocation
fix zts jit build
Updated to version 2019.1 (2019a)
Updated to version 2019.1 (2019a)
Empty merge
Empty merge
Updated to version 2019.1 (2019a)
Unfortunately, travis CI has old oniguruma library
Added JIT compiler for x86 and x86_64
Update NEWS & UPGRADING
Update NEWS
Improve ascii check
Rework conditions and make them more future proof
Implement stricter CRT check
Rework the VS version evaluation
Implement stricter extension compatibility check
typo [ci skip]
correct readme [ci skip]
Add fallbacks for older oniguruma versions
Use wchar_t as native type in C
Move README files to a dedicated docs directory
[ci skip] Add ffi_parser.c info
Join README.GIT-RULES and CONTRIBUTING.md
[ci skip] Mention PHP_PROG_BISON and PHP_PROG_RE2C
No need for scoping anymore
Refactor PHP_PROG_BISON and PHP_PROG_RE2C
tsrm environment lock
Partial support for GCC mode attribute.
Removed declaration inside for loops
Allow usage of incomplete types for external variables, function parameters and return values
Add mbstring.regex_stack_limit to php.ini-*
Added support for more GCC extensions: attributes, __extension__, __asm__ (ignored)
Deprecate unparenthesized concatenation and addition/subtraction
Ignore "__format__" attribute
Allow incomplete array variables - extern const char * const sys_errlist[]
Remove php7.spec.in file
Change the precedence of concatenation
Add additional protected visibility prototype test
Revert "Switch to bison location tracking"
Implement RF bug #72777 - ensure stack limits on mbstring functions.
fix build: readline support must be disabled by default in phpdbg
Validate subject encoding in mb_split and mb_ereg_match
Validate pattern against mbregex encoding
Support for __restrict and few GCC attributes
Use semantic predicates to simplify lookahead and reduce backtracking
Treat abstract ctors the same, regardless of origin
Make line numbers for inheritance errors more precise
Consider phpdbg as cli
Validate interoperability between libsodium and libargon for argon2i(d) hashing
Increase default time cost for argon2 password hashing
more work on phpdbg conditional breaks
Add minimum required PHP version to run-tests.php
remove last enable-maintainer-zts mention from source
Add zend_error_at API that accepts a filename and lineno
Make PCRE cache per-request on CLI
[ci skip] Join contributing and patches docs
[ci skip] Update NEWS
[ci skip] Update NEWS
Regenerate parser
Update README.RELEASE_PROCESS
Don't use parallel testing with -j1
Drop lightning for concurrent worker count
Make run-tests.php compatible with php 7.0-7.2
TSRM cleanup for PHP8
Enhance Autoconf version checking
[ci skip] Move CREDITS from root to README
Remove enable-wddx from Travis compile as it WDDX has been unbundled as of PHP 7.4
[ci skip] Remove text editor modelines
fix bug #76801: phpdbg too many open files error
For consistency with Windows, and because ZTS is not experimental or a "maintainer" feature, this commits renames --enable-maintainer-zts to --enable-zts in the autotools build, and related documentation
ensure pcre.jit=1 for this test
ensure pcre.jit=1 for these tests
Implement new custom object serialization mechanism
Remove HAVE_PCRE/HAVE_BUNDLED_PCRE checks
Make zend_hash_sort() return void
Deduplicate code in zend_builtin_functions.c
Switch to bison location tracking
Try to create interned strings in preg_split as well
Cleanup add_offset_pair API
fix test
Remove usage of HAVE_HASH_EXT and COMPILE_DL_HASH as ext/hash is always available (master only)
Sync the changes to ext/filter with 7.4, now that it works.
Unbundle ext/wddx
NEWS
Mark bug76348.phpt as online test
Upgrade deprecated directives and use non-posix bison
Remove extension readmes
Bump versions for 7.2.18
comment out sqlite3.defensive = 1 follow common practice, this is the default value
Prepare main branch for PHP 7.3.5
fix test for upcoming pcre2 10.33
Respect OFFSET_CAPTURE when padding preg_match_all() results
Don't create a new array for empty/null match every time
Revert unintended change
Use zend_string for subpat_names table
Improve white-space handling
Avoid copying subpat twice if named subpats are used
This should be redundant too as we use a centralized PCRE install
Remove the PCRE checks from ext/filter. pecl/filter is obsolete and since PCRE is a hard dependency for PHP, it will always be available.
micro-optimization
Leave bundled generated files untouched
Optimization for ASCII data
Don't use random mode in mysqli_query test
Avoid unnecessary global variable
Add bison version check to configure
Accept zend_string* instead of char* in php_pcre_match_impl()
Simplfy test case
Make test independent of icu version
Allow DateTimeImmutable in datefmt_format_object()
Partial fix for bug #77751
Remove x86 bit test optimization
Don't disable object slot reuse while running shutdown functions
[ci skip] Update changelog
Sync AC_CHECK_SIZEOF m4 macro calls
Remove unused variables
Remove outdated README for ext/json
remove unneeded AC_REQUIRE([AC_PROG_YACC]) thanks Peter Kokot for noticing
Remove duplicate PHP_C_BIGENDIAN check
Move distribution generator script to scripts/dev
Enhance the buildconf script
snmp: remove unused var
[ci skip] Remove make install step from README
check for bison binary, not yacc this fixes compilation with recent bison
check for bison binary, not yacc this fixes compilation with recent bison
[ci skip] Update changelog
bump minimum bison version to 3.0 after last parser changes
bump minimum bison version to 3.0 after last parser changes
snmp: remove unused var
[ci skip] Add Bishop Bettini as maintainer for phar & imap
Make credits script executable from other paths
Use separate output files in xmlreader tests
Replace dirname(__FILE__) by __DIR__ in tests
Added test for #77535 fix
Don't immediately destroy curl pushfunction
Remove unnecessary precedence/associativity annotations
Add tests to XMLReader
Clean build system
Remove HAVE_STRFTIME
ext/session: remove the redundant convert_to_long
updated NEWS
Implemented a faster way to access predefined TSRM resources - CG(), EG(), etc.
Integrate README.EXT_SKEL to help option
test reversed
[ci skip] Mention removed m4 macros
Sync with ZEND_ENABLE_STATIC_TSRMLS_CACHE enablement in ext/mbstring
Better data packing
Avoid reinitailization of ZTS cache pointer. Initialize it once in TSRM.c
Switch to use ZTS cache
Cleanup unused module globals
add --enable-rtld-now in upgrade info
use DL_LOAD in litespeed
add --enable-rtld-now build option to change dlopen behavior
weakrefs upgrading note
zend_weakrefs
Die hard if mc.exe or mt.exe not found
SQLite3: add DEFENSIVE config for SQLite >= 3.26.0 as a mitigation strategy against potential security flaws
SQLite3: add DEFENSIVE config for SQLite >= 3.26.0 as a mitigation strategy against potential security flaws
Free trampolines from get_closure in is_callable
Closure::fromCallable() supports only regular methods and magic method invoked through __call()/__callStatic(). It doesn't support method of internal classes invoked through C object or class handlers. This commit prevents crash described at bug #77708, but doesn't implement the desired behavior.
Reset fields
Adjust tests for zpp TypeError change
Remove some unnecessary error handler setting
Intl: Don't separately report "bad arguments" errors
Make zpp failures always throw, independent of strict_types
drop unused parameter from zend_startup
Remove function_table var from the caller
curl_exec: remove bad check for CURLE_PARTIAL_FILE
This option doesn't exist for a long time.
Use EXPECT when possible
Add meaningful error message for ext/zip
Speed up TLS wrapper test for min and max versions
Speed up TLS wrapper tests when SSLv3 disabled
Don't use Opcache with the master test process
Update libmagic.patch [skip ci]
Sync with behavior change in OpenSSL 1.1.1b
More zpp error/variation test removals
Give Peter credit for his work on the Unix build system
Clean *nix build system
Add AS_HELP_STRING to *nix build configure options
More zpp error/variation test removals
More zpp error/variation test removals
ws
Oops, forgot error parameter
Add support for MemorySanitizer
Add support for MemorySanitizer
Refactor README.md file
Update editorconfig
Remove legacy AC_CHECK_TYPE calls for uint and ulong
More zpp error/variation test removals
Cleanup some checks in zend_compile.c
Update maintainership years
Prolong my extension maintainership
fix news
bump versions after release
Remove more zpp error tests
Remove unnecessary check for always available extension
Remove more zpp error/variation tests
Remove custom error handler in mbstring tests
Remove more zpp error tests
Remove tests for zpp failure conditions
add NEWS entry
Update NEWS
Replace --with-gd by --enable-gd for Travis
Update NEWS
Move Makefile.global and Makefile.gcov to build directory
Revert "Detect invalid uses of parent:: during compilation"
Replace PHP_TM_GMTOFF with AC_CHECK_MEMBERS
Remove mkinstalldirs, install-sh and missing
add NEWS entries
Don't generate script for proc_open_pipes tests
Use separate output files in x2gd tests
Use separate directories for win32 dir tests
Update NEWS
[ci skip] Remove oniguruma and libzip leftovers
Remove outdated hack for AIX 4
Remove AC_PROG_CC_C_O
Heedlessly enable thread LS cache for ext/hash.
Update NEWS
Remove LIBZEND_CHECK_INT_TYPE and PHP_CHECK_TYPES
Update NEWS
Remove obsolescent AC_HEADER_STDC and memcpy check
Use separate files for SplFileObject::setCsvControl() tests
curl_error: return an empty string if no error occurred
Check for NULL GC type in objects_store_del
Unused parameter
Keep original debug info
Enable Posix Shared Memory on Linux
Convert extract() prefix to string zpp arg
Test for function posix_getpwnam() basic functionality
NEWS
Removed pdo_odbc.db2_instance_name
Remove PHP_DECLARED_TIMEZONE and HAVE_DECLARED_TIMEZONE
Free map_base_ptr during post_startup
Don't remove CONST CAST in CONCAT operand
Remove unnecessary convert_to_string_safe macro
Don't return inside _DO_THROW macro
Remove more leftovers of mysqli embedded server
Sync with 7be0e06b482e5bf14eaf4fe9a882d8b72d644038
Remove dead code
Remove mysqli embedded server support
Sync with behavior change in OpenSSL 1.1.1b
Use zpp string argument in imagecreatefromstring()
Disable test parallelization on AppVeyor with opcache
Mark ext/xmlreader/tests/bug70309.phpt as online test
Remove unused package2.xml file
Remove not needed PHP_PDO_PEAR_CHECK m4 macro
Remove ZEND_FP_EXCEPT macro and HAVE_FP_EXCEPT
Remove unused PHP_AC_BROKEN_SNPRINTF m4 macro
Remove deprecated PHP_EXTENSION m4 macro
Delay array to string conversion notice until runtime
Uncomment cleanup for runtime_compile_time_binary_operands.phpt
Add runtime_compile_time_binary_operands.phpt
Sync types in .gdbinit, improve property dumping
Make regex replacements in zend_vm_gen.php more obvious
Update NEWS
Update NEWS
Revert "Disable bug77390.phpt"
Print empty string in test for but 77390 just once
Use spaces instead of tabs in bug 77390 test
Remove unused PHP_AC_BROKEN_SPRINTF and AC_ZEND_BROKEN_SPRINTF
Replace Hebrew characters with escape sequences
Disable bug77390.phpt
Remove result def during jmp_set optimization
Use separate files in phar tests
Stricter validation for popen mode argument on Windows
Avoid potentially superfluous string reallocation
Properly clean up test case
Use different method to suppress "false" memory leak reports
While the compiler does not have the FBC set for zend_get_call_op, optimizer does, and so incorrectly results in ignoring these flags.
Revert "zend_get_call_op ignoring compiler flags zend_get_call_op will ignore ZEND_COMPILE_IGNORE_USER_FUNCTIONS and ZEND_COMPILE_IGNORE_USER_FUNCTIONS, breaking the intention of these flags"
Remove unused PDO_MYSQL_LIB_CHK m4 macro
Remove use of file resources from string function tests
Make (v)fprintf tests more robust
Make zip oo_addglob test more robust
Don't parallelize dba tests
zend_get_call_op ignoring compiler flags zend_get_call_op will ignore ZEND_COMPILE_IGNORE_USER_FUNCTIONS and ZEND_COMPILE_IGNORE_USER_FUNCTIONS, breaking the intention of these flags
Enable parallel tests on AppVeyor
Add special "all" conflict
Print more precise warning for unresolved constants
Reinstall pcntl tick handler on each request (it cleared after the first request).
[ci skip] Update changelog
Remove unused PHP_SYS_LFS m4 macro
Remove unused PHP_SOLARIS_PIC_WEIRDNESS m4 macro
Remove unused PHP_TARGET_RDYNAMIC m4 macro
Remove unused AM_SET_LIBTOOL_VARIABLE m4 macro
fix #77642: typo "incompatibe" in Zend/zend_compile.c [ci skip]
Supress memory leak reports
Don't use uniqid for temporary POST data files
Add a --shuffle mode to run-tests
Remember __COMPILER_HALT_OFFSET__(s) in preloaded scripts
Support passing single file to bless_tests.php
Use PHP_BINARY by default in run-tests.php
Enable parallel tests on Travis
OpenSSL: Improve non-blocking eof test
Make zip oo_addpattern test more robust
Use "modify" error message for FUNC_ARG fetch as well
Implement fine-grained conflict handling
Make proc_open_bug69900.phpt more robust against parallelization
Make ext/spl/tests/bug42364.phpt more robust
Disable preloading for sensetive opcache tests
Prevent error reporting during preloading request start-up
Use zend_parse_parameters_none() in XmlWriter::openMemory()
Added reference to parser generator
Simplify even more - use PHP_VERSION directly
Bump FFI extension version to PHP_VERSION
Correct skipif use for OCI8 password tests
Correct skipif use for OCI8 password tests
Skip tests f oci8 extension is not loaded
Reorder conditions
Use ZEND_ACC_REUSE_GET_ITERATOR flag instead of run-time class modification
Don't preload tests without --FILE-- section
Order of classes may matter
Don't restrict preloading with "open_basedir" directive.
Rename non-existing site phpdbg.com to localhost
begin handlers are currently invoked without access to the arguments being sent, this moves the opcode after SEND
Better new-line handling
Remove some zpp failure tests
Remove ability to import case-insensitive constants from typelibs
Check for USER_FUNCTION
Accurate handling of not preloaded classes
Avoid port conflicts in stream socket tests
Remove spurious + before --CREDITS--
Avoid file conflicts in mail tests
Avoid file conflicts in XmlWriter tests
Avoid port conflicts in ext/sockets tests
Make parallel run-tests compatible with IO capture tests
Better line handling
Filter preloading warning messages
Don't try to eliminate requre/include with stream wrappers
Stop PHP in case of fatal error during preloading
ws
Prepare main branch for PHP 7.3.4
bump version to 7.2.17-dev
ZEND_COMPILE_EXTENDED_INFO split Currently a tool may not decide between debugging and profiling behaviour: We split ZEND_COMPILE_EXTENDED_INFO into ZEND_COMPILE_EXTENDED_FCALL and ZEND_COMPILE_EXTENDED_STMT We define ZEND_COMPILE_EXTENDED_INFO as ZEND_COMPILE_EXTENDED_STMT|ZEND_COMPILE_EXTENDED_FCALL
fix build with external libpcre2
fix build with external libpcre2
Indicate that tidy's object methods expect 0 args
use pkg-config for libedit
add readline_list_history with libedit >= 3.1 and mingweditline
gd imageloadfont, verify error while reading header
added basic test for UConverter::setSourceEncoding()
added basic test for UConverter::getDestinationEncoding()
added basic test for UConverter::getSourceEncoding()
UPGRADING entry for pcntl_unshare [skip ci]
run-tests.php: fix typo
Implement pcntl_unshare
Sync header and footer with the rest of the files
Use "quick" macro variants for known argument numbers
run-tests.php: experimental parallel testing support
Make MADV_HUGEPAGE conditional on USE_ZEND_ALLOC_HUGE_PAGES
Use mremap in zend_mm_chunk_extend if available
Release constant names during preloading
Don't suppress errors during in preload testing
Don't catch opcache_compile_file failures during preloading
Handle exception patterns in bless_tests.php
Test the warning for giving full path to dl()
Tests for XMLWriter write cdata and raw
SplDoublyLinkedList Iterating a DLL by reference shouldn't be permitted
Range of new tests for xmlreader functionality and exceptions/errors
Remove unused --copy option from the makedist
Move some scripts from root directory to scripts/dev/
run-tests.php: fix all tab-space indentation inconsistency
run-tests.php: move all top-level code into a function
Link anonymous classes during preloading
Don't assume that all includes have been executed
Set filename & lineno information for preload inheritance error
Handle bailouts during preload linking
Deprecate marking typelibs to load constants case-insensitively
Avoid useless code duplication, because of unused specialization
Unify clone method error message
Reduce slow code size
Avoid uninitialized entries in properties_info_table
Deprecate case-insensitive constants via typelib import
Suppress zend_throw_error during preload constant resolution
Add preloading support for typed properties
Add a --preload testing mode to run-tests.php
Assign (un)serialize_func during compilation
properties_info_table may be in arena or shm
gd imageloadfont test while reading header
Add test to function posix_getlogin()
Create posix_getpwnam_basic_01.phpt
Add basic test for posix getgrnam
Small change in the test to pass
Added basic stream_filter_register test
use local resources instead remote
Remove outdated pgsql README
Use #ifdef instead of #if
Make ABI of SIMD optimized functions independent of compiler flags
Remove bogus ctor checks in get_class_methods() + reflection
Work around compiler flag dependent ABI
Add UPGRADING entry for ad75511c8e
Missing param in arginfo_pdostatement_setfetchmode
http_build_query add type cases
Refactor timelib.m4
Implement ReflectionReference
Update NEWS and UPGRADING [ci skip]
Change the way timer queue timer is deleted
Add test socket_setopt() basic functionality
Implement mb_str_split()
Use TSRM macros
More accurate handling of global registers (allow VM with single global register)
Correct section number in UPGRADING
typo
Adding bunch of FreeBSD socket options flags specifics.
Make pid & uid available while handling realtime signals
Remove "defensive copy" of DatePeriod properties
Test mb_str* functions for 'unknown encoding' warnings
Avoid dependency on "struct flock" fields order.
Replace broken binary SDK version
Update SDK version for AppVeyor
Deprecate ext/wddx
security fix - by default 'local infile' is disabled: - set default for mysqli.allow_local_infile=0 - explicitly disable PDO::MYSQL_ATTR_LOCAL_INFILE in case of lack of driver options - add getAttribute support for PDO::MYSQL_ATTR_LOCAL_INFILE - update existing tests where needed - add new tests [checking default value and setting on] the 'local infile' in ext/mysqli and ext/pdo_mysql
Add missing braces in UPGRADING example
Don't silence fatal errors with @
Add bless_tests.php
Remove oniguruma lines from CONTRIBUTING
Add UPGRADING notes for oniguruma unbundling
Unbundle oniguruma in config.w32
Add MB_ONIGURUMA_VERSION and use it in a version dependent test
Unbundle oniguruma
Enable C99 in autoconf
Validate subject encoding in mb_split and mb_ereg_match
Validate pattern against mbregex encoding
Disable PEAR by default
Return empty str from quotemeta() on empty str
Improve UPGRADING note
regenerate with re2c 1.0.3
PDO_OCI tracing attribute PR merge
pdo_oci: Add client identifier and module attrs
pdo_oci: Register new attr constants and add tests
pdo_oci: Add PDO_OCI_ATTR_ACTION and CLIENT_INFO
Added test for non existent file for iptcembed
Expand FTP delete basic test with "unknown file" coverage
Tests for readline() without input
Added test for openssl_pkcs12_export_to_file_error
Tests the 'Dynamically loaded extensions are not enabled' warning for dl()
Test function quotemeta() - using an empty string is given as str.
Add test case for pcntl_setpriority basic behaviour
Added test for xml_parser_set_option
fnmatch error when pattern or filename too long
[ci skip] Update changelog
Delete duplicate test file
Tests for __set_state magic method
Add test for date_time_immutable invalid arguments
Added basic test for ZipArchive::unchangeName()
Added basic test for ZipArchive::unchangeIndex()
Implement FR #77377 handle CTRL+C in Windows
Add test for null return on version_compare with bad operator
Test to verify that closures can't be instantiated
Add test for pcntl_getpriority() basic behaviour
readline - add basic test
updated typo in test
Update and fix remaining year ranges (2019)
Implement the negative_array_index RFC
Add ZEND_TRY_ASSIGN_BOOL API
Add ZEND_TRY_ASSIGN_BOOL API
Sync test with changes in libcurl 7.64.0
Sync test for libcurl 7.64.0
[ci skip] Move OPcache configure option changes
Simplify checks
Remove ZEND_OVERLOADED_FUNCTION and corresponding call_method object handler
[ci skip] Update changelog
Remove two more zpp variation tests
Use pkg-config for ICU, as the old icu-config has been deprecated
Remove --disable-opcache-filecache option
Use pkg-config for ICU, as the old icu-config has been deprecated
Require icu-uc and icu-i18n next to icu-io
Remove major version from apache module
Remove unnecessary setting of error_reporting in intl tests
Remove $errcontext argument to error handlers
Some more test removals
Remove zpp variation tests
Remove copyright years.
fixed typo in UPGRADING.INTERNALS
Removed ldap_sort and LDAP_DEPRECATED build flag
Mark ldap_control_paged_result and ldap_control_paged_result_response as deprecated
Reset common fields of EG(trampoline)
Added note anout object habdlers API change
ext/com_dotnet support for new object handlers API
More accurate get_properties() usage.
Reuse cache_slot
Refactor zend_object_handlers API to pass zend_object* and zend_string* insted of zval(s).
Make array_slice $length param a nullable integer
Remove local variables
[ci skip] Add missing notes regarding gc_status()
Properly check for array_replace_recursive in sccp.c
Try to fix serialization_miscTypes_001.phpt
Make session_cache_expire() arg an integer
Make mb_ereg(i) argument a normal string argument
Make mb_ereg_replace() pattern argument a string
Deprecate mb_ereg_replace with non-string pattern
Remove bareword fallback for constants
Remove support for case-insensitive constants
gmp_random() was removed
Revert "Don't silence fatal errors with @"
Don't silence fatal errors with @
Remove unnecessary CLI checks in tests
Remove -1 crop mode
Remove intl Normalizer::NONE
Remove error_reporting assignments in some tests
Remove support for __autoload()
Remove more leftovers from invalid static calls
Removed read_exif_data() alias
Require at least one arg for mktime/gmmktime
Remove ability to specify 'salt' in password_hash()
opcache/FreeBSD huge code page pragma support
Take out some last remnants of the yearly copyright range
Adios, yearly copyright ranges
Take out some last remnants of the yearly copyright range
Adios, yearly copyright ranges
Remove yearly range from copyright notice
Remove year range from copyright notice
Remove static calls to non-static methods
Forbid unbinding $this from methods
Remove ability to declare userland case-insensitive constants
Prepare main branch for PHP 7.2.16
Remove 'e' modifier for mb_ereg_replace()
Remove support for legacy constructors
Migrate finfo away from legacy ctor
Migrate SOAP away from legacy constructors
Remove support for custom assert() function
Remove FILTER_FLAG_(SCHEME|HOST)_REQUIRED
Remove (unset) cast
Always treat needles as strings
Remove fgetss and friends
Remove deprecated mbregex aliases
Remove each()
Remove special treatment of strings in asserts
Make special assert() handling independent of compiler flags
Add UPGRADING entries for removed functionality
Require second argument on (mb_)parse_str()
Remove mbstring.func_overload
Remove track_errors and $php_errormsg
Remove create_function()
Remove deprecated gmp_random() function
bump versions of all the things
Remove deprecated INTL_IDNA_VARIANT_2003
Remove deprecated png2wbmp() and jpeg2wbmp()
Remove deprecated image2wbmp()
Avoid mention of php7 in credits script
Bump API numbers
Upgrade branches in GIT-RULES
Clear NEWS, UPGRADING and UPGRADING.INTERNALS
zend_compile.c: zend_is_variable(). Removed unnecessary checks. Naming according to internal logic.
Update and integrate openssl client proxy test
Add a test for fragmented SSL packets
Don't hide real peak usage.
Remove unused prototype in mbstring
Allow strip_tags with an array of allowed tagnames
Reduce amount of updated memory
Delay hash table allocation
Disallow PHP startup, in case some ext ext/standard sub-module is not initialized sucessfully.
Revert "Prefix error_code with underscore in FastZPP implementation"
Improve wording
Add flag to disable jumptable optimization
Make more tests run os MacOS
Remove the "o" serialization format
Prepare main branch for PHP 7.3.3
Implement ??= operator
Make tokenizer test robust against token renumbering
Most opcodes that don't consume their OP1 operand, must be terminated with real consumer, and don't have to be checked. These checks are replaced by ZEND_ASSERT.
Use SSA instead of bogus reverse linear scan.
[ci skip] List FFI extension
Use ZEND_FUNC_FREE_LOOP_VAR flag to avoid useless iterations.
[ci skip] Add opcache.preload directive
Avoid double live ranges recalculation.
[ci skip] Note preloading and ext/ffi in UPGRADING
Remove superfluous variable
Live ranges construction optimization
Use pkg-config to detect and configure for system libgd
Implement single-pass live range calculation
Checkin LiteSpeed SAPI 7.2.
Update NEWS [ci skip]
Update NEWS [ci skip]
Skip test on unsuitable build
Sync with upstream
Make test output more reliable
Add additional no_sanitize_address attributes
Micro-optimization
Optimize zend_handle_fetch_obj_flags()
Improved ZEND_TRY_ASSIGN... API to avoid unnecessary double copying and reduce code bloat.
List me in the openssl maintainers
Removed useless Z_REFCOUNTED_P() checks.
Reduce slow code size
Micro-optimization
Extend zend_get_property_offset() to return property_info for typed properties.
Separated zend_assign_to_typed_prop()
Reuse zend_incdec_typed_ref() and separate zend_incdec_typed_prop()
Separated zend_binary_assign_op_typed_ref() and zend_binary_assign_op_typed_prop() helpers
Add dummy get_gc handler for iterator wrapper
Document pkg-config related changes
Migrate ext/gd to pkg-config
Use fastcall calling convention
Removed missed and unused function declaration
Refactor subset of openssl module.
document open_basedir and realpath cache coupling in php.ini
Added FFI extension
Revert removal of private __clone() methods
Change zend_try_array_init_size arg to uint32_t
Kill this new and insanely annoying warning
Update SDK version for AppVeyor
Implement typed properties
ext/openssl: port to pkg-config macro and consistently require its use
Improve openssl_random_pseudo_bytes()
Generate certs for openssl tests on the fly
Remove unused variables and functions
Remove unnecessary Z_PARAM_ZVAL_DEREFs
Return only debug props in PDORow
Use serialize_deny handler in PDORow
Manually initialize PDORow handlers
Incase of invalid read
Require that write_property value is not a reference
Revert visibility
Update oniguruma.patch wrt. latest security fixes
Sync NEWS with 7.3.1
Make operator swapping depend on IGNORE_OVERLOADING flag
Bump for 7.1.27
Sync NEWS with 7.3.1
Don't swap operands of ZEND_MUL
cleanup merge
Prefix error_code with underscore in FastZPP implementation
Const changes
Simplify the command factory
Remove unnecessary uses of object_and_properties_init
Mark const what should not be changed
Update tests due to data changes in tzdata 2018i
Updated to version 2018.9 (2018i)
Empty merge
Updated to version 2018.9 (2018i)
Empty merge
Updated to version 2018.9 (2018i)
[ci skip] fix NEWS
[ci skip] fix NEWS
Still leaking for some reason, XFAIL for now, I'll look into it later.
Still leaking for some reason, XFAIL for now, I'll look into it later.
Add NEWS
Add NEWS
Add NEWS
[ci skip] Add NEWS
Regenerate certs for openssl tests
Preserve aspect ratio for width or height
Remove separate *nix system build for Zend engine
const-ify some functions
Add type safety for mysqlnd plugin developers
Resolve parent::class at compile-time if possible
Detect invalid uses of parent:: during compilation
Support parent::class inside constexpr contexts
Handle self::class separately from __CLASS__ in const eval
Revert visibility
Don't replace self::class with __CLASS__ during const eval
Introduce separate ZEND_AST_CLASS_NAME AST node
Add NEWS entry for bug #77357
Possible fix for bug #77357
Regenerate certs for openssl tests
Possible fix for bug #77287
Disable ifuncs on FreeBSD
Partial fix for bug #75426
Test commit
skeleton: support PHP 7.2
Use ZEND_PARSE_PARAMETERS_NONE in pcre
Update NEWS
Drop _ex from zend_compile_class_ref_ex
Entry get lost while merging
Update NEWS
Regenerate certs for openssl tests
Drop deprecated /Gm compile option
Increase timeout for test on AppVeyor
Add memory check to the test
[ci skip] Update NEWS
Micro optimization
Eliminate zend_string_destroy() wrapper in release build
Revert HASH_FLAG_INITIALIZED into HASH_FLAG_UNINITIALIZED.
Added missing invalidations.
Use HT_IS_INITIALIZED() and HT_INVALIDATE() macros instead of hackish HT_FLAGS assumtions.
Removed useless check
Respect static method visibility
Tune ARRAY_KEY_EXISTS opcode handler for speed and code size
Add performance improvement section to UPGRADING
Add SCCP support for ZEND_ARRAY_KEY_EXISTS
Implement ZEND_ARRAY_KEY_EXISTS opcode to speed up array_key_exists()
Update NEWS [ci skip]
Update NEWS [ci skip]
Update NEWS [ci skip]
Remove preg_options param from pcre_get_compiled_regex()
Migrate ext/zlib to use pkg-config
Reduce agressive inlining
Removed transparent wrapper
Update binary SDK version for AppVeyor
Require pkg-config for external PCRE
ext/gd: use --with instead of --enable
Respect EG(vm_stack_page_size)
Create object only after parameter checks
Removed useless zval_ptr_dtor(return_value)
Micro optimization
Removed dead condition
Avoid code duplication
Backport later interned strings destruction.
Added note about changes in class declaration opcodes
Update API use due to changes in timelib 2018.01RC3
Upgrade timelib to 2018.01RC3
Removed /e modifirer and fixed ws.
Added specialized code for small arrays
Added specialized code for small arrays
Reuse add_property_zval_ex() instead of code duplication
Removed add_get_assoc_*() and add_get_index_*() API functions
Replace add_index_zval() and add_next_index_zval() functions by macros
Replace zend_hash_apply... with ZEND_HASH_FOREACH...
[ci skip] Add missing entry for bug 77020
Reorder conditions
 missing entry for #77020
Reduce executor size
bump to 7.2.15-dev
Prepare main branch for 7.3.2
CFG construction: Avoid code duplication
Implement SQLite3Stmt::getSQL method, returning the original statement SQL, eventually expanded
Allow empty $escape to eschew escaping CSV
Improve unserialize()
Improve unserialize()
Resolve imagecropauto() default $mode quirk
Implement FR #72510: systemd service should be hardened
Provide is_zend_ptr() function to check if a pointer lays in Zend MM heap.
Split php_array_merge_or_replace_wrapper() into php_array_merge_wrapper() and php_array_replace_wrapper(). Avoid array duplication when merging with an empty array.
Update NEWS
Remove BOM
Update/fix UPGRADING
LOL I had 2.10 on my mind
Set AC_CONFIG_AUX_DIR to build directory
Link to the fast_zpp RFC
Bundle the new test
Improve test portability
Update for newer Oracle versions
ext/curl: port to pkg-config macro and consistently require its use
Back to -dev
ext/pdo_pgsql: drop unneeded code
ext/intl: Use pkg-config to detect icu
Add OCI8 changes
Add oci_set_call_timeout() and bump version to 2.10.0
Upgrade internal OCI call
Enable Oracle Database DBOP tracing attribute
Update OCI8 README
Convert some parameter parsing to the Fast Parameter Parsing API
add imap.enable_insecure_rsh in php.ini
Note that PECL install now works on PHP 7.3
Don't skip with 18c DB
missing entry for #77020
missing entry for #77020
Bump OCI8 version
Update NEWS
Update NEWS
When releasing an oci8 connection always set the resource to null.
Reorder conditions
Improve zend_check_live_ranges()
Stop passing CG(active_op_array) between internal compiler functions.
SQLite3: Separating parameters binding in a function
ZEND_VERSION should be in sync with PHP_VERSION and friends
Note additional RM tasks
Add note that release manager karma is required
Remove outdated note regarding Windows
MD5 checksums are history
Drop unnecessary HASH_OF uses in ext/oci8
Simplify based on feedback from nikic
Sync with test files
Stable releases also should be on frontpage
scripts/dev/gen_verify_stub can also be used for stable releases
5.6.40 will be next. probably not
Remove commented zend_ini_displayer_cb
Remove unused import_used_extension utility value
Add LDAP information in UPGRADING
Sync NEWS [ci skip]
Update UPGRADING with info about FPM logging changes
Mark preloaded op_arrays
[ci skip] Prepare NEWS for 7.3 GA
Remove old generated files
Add forked and maintained extension in php-src from GCOV
Replace LT_AC_PROG_SED with AC_PROG_SED
Clean up unnecessary ternary expressions and simplify some returns
Don't need interactive progress on git clones in Travis
Regenerate certificates for openssl tests
Improve test for bug77022
Regenerate certificates for openssl tests
Remove support for Rhapsody code name
Replace AC_CHECK_FILE with test -f
Update NEWS [ci skip]
Sync behavior of gdImageAutoCrop() with upstream
[ci skip] remove test per discussion on github
fix bad assumption of strncmp return value
Require SQLite ≥ 3.7.4 for ext/sqlite3
[ci skip] Add myself as sqlite3 maintainer, officially
Handle potential sqlite3_bind_*() call failures
Deny (un)serialization of SQLite3, SQLite3Stmt and SQLite3Result
Add DISPLAY_INI_ENTRIES for imap
[ci skip] Add missing extension maintainership years
Support huge pages on FreeBSD
Improve fix for #76046
Avoid early reference check
Added ZEND_COMPILE_WITHOUT_EXECUTION and ZEND_COMPILE_PRELOAD to determine when PHP compiler is invoked by opcache_compile_file() or preloading.
update NEWS
Check column number before trying to fetch the value
Use zend_empty_array
Remove redundant __clone() methods from Reflection
Remove redundant Exception::__clone() method
User serialize_deny for PDOStatement as well
Switch PDO to use serialize_deny
Use serialize_deny for CURLFile
Remove redundant Generator::__wakeup() method
Add re2c checking with error exit code
ext/sodium: remove redundant code
ext/sodium: Correct base64 decoding with unpadded variants
[ci skip] PHP 7.1 is now security-only branch
[ci skip] Preliminary fix for NEWS
Clean up server-tests.php remains
Document --show-mem as a valid run-tests.php option
Don't preload functions and classes declared outside of preloaded scripts (e.g. by eval code).
Refactored script creation and classes/functions copying.
Remove unused do_free parameter from ADD_INTERNED_STRING
Prep for 7.1.26
Re-commit MySQL 8 cached SHA auth support
Remove unecessaries SKIPIF sections for necessary extensions
Implement password mechanism registry
Remove redundant continue in for loops
Define __APPLE_USE_RFC_3542 for new ipv6 constants
Bump for 7.2.14
Disable rsh/ssh functionality in imap by default (bug #77153)
Disable rsh/ssh functionality in imap by default (bug #77153)
Disable rsh/ssh functionality in imap by default (bug #77153)
Disable rsh/ssh functionality in imap by default (bug #77153)
Disable rsh/ssh functionality in imap by default (bug #77153)
Improved error messages
[ci skip] Update NEWS wrt. php-7.3.0RC6 tagging
NEWS
NEWS
NEWS
Delay exceptional case check
fixed typo
Optimization
Disable rsh/ssh functionality in imap by default (bug #77153)
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
Add test for bug #77047
FIX #77047: fixes regex for "time" data type
[ci skip] Update NEWS
[ci skip] Update NEWS
Simplify assignment on 64-bit
Remove some mentions of RECOVERABLE_ERROR in tests
Check for zero SplPriorityQueue extract flags earlier
Optimize SplPriorityQueue implementation
Use ZEND_THIS macro to hide implementation details in extensions code.
micro-optimization
Remove unused variables
Remove missing SKIPIF sections for mbstring tests
Split zend_objects_store_put() into hot/cold parts
[ci skip] Update UPGRADING
Rework magic data once more
typo
[ci skip] Update NEWS
Add openssl_x509_verify() function
Implemented preloading RFC: https://wiki.php.net/rfc/preload.
Added possiblity to avoid signal handlers reinitialization on each request.
Eliminate useless $this related check
Eliminate useless $this related checks
Replace zend_parse_method_parameters() by zend_parse_parameters() and avoid useless checks.
Replace getThis() by EX(This), when additional check is not necessary.
Validate length on socket_write
Support SQLite3 @name notation
Remove lexer files generated by RE2C
Update libmagic.patch [ci skip]
Update libmagic.patch [ci skip]
Fork test with pcre.jit=0
Rework magic data
Rework magic data
Sync one more upstream libmagic piece
Suppress already used warning
Ignore getaddrinfo failed message
Clean testfile
Skip SQLite3::loadExtension tests if SQLITE_OMIT_LOAD_EXTENSION defined
Use new option name in travis/compile.sh
Add putenv for setlocale for gettext tests
Remove do_bind_inherited_class; use do_bind_class
Avoid needless string duplication
ext/gd: Use pkg-config to detect the availability of freetype2
Avoid double copying
*printf() optimization and v*printf() warning message fix.
Removed dead checks
Reorder conditions and set expectation.
Micro-optimization
[ci skip] Update NEWS wrt. php-7.3.0RC5 tagging
Update NEWS [ci skip]
Update NEWS [ci skip]
Update libmagic.patch [ci skip]
Update libmagic.patch [ci skip]
Declare function proto in header
Declare function proto in header
NEWS
Implement handling for JIT recognition when cross compiling
Backport 7f5f4601 for 7.2
Rework places in libmagic regarding previous CVE-2014-3538 fixes
Change the way JIT availability is checked
Future-proof email addresses
Future-proof email addresses...
Update email addresses.  We're still @Zend, but future proofing it...
This test needs to log to stdout
Keep original value of "prototype"
Call function_add_ref() in proper place
Updated to version 2018.7 (2018g)
Empty merge
Updated to version 2018.7 (2018g)
Empty merge
Updated to version 2018.7 (2018g)
Reslove inherited op_array references once afrer all optimizations.
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
fix bug #77079
Add missing null initialization
Remove redundant mbfl_string_init calls
Use zend_string for mbstring last encoding cache
Stop Apache if PHP wasn't started successful.
Execute zend_post_startup() with module_initialized flag set.
Removed dead code
Optimize substr() edge-case conditions
[ci skip] Update UPGRADING
Add TIDY_TAG_* constants supported by libtidy 5
Add is_iterable to opcache Optimizer
Don't wrap php_module_shutdown() with zend_try. executor_globals are released in ZTS build, and this leads to crash.
Improved shared interned strings handling. The previous implementation worked incorrectly in ZTS build. It changed strings only in function/class tables of one thread. Now all threads gets the same shared interned strings. Also, on shutdown, we don't try to replace SHM interned strings back to process strings, but delay dettachment of SHM instead.
Don't use request heap at shutdown
Don't optimize function if inference failed
Improve "narrowing" error message
Remove unused var
Remove ext/json parser files generated by bison
Normalize .gitignore
Make php_plain_files_wrapper to be writable (workaround for swoole)
bump versions
Remove phpdbg parser files generated by bison
Refetetch function name on exceptional path to allow better code on fast code path.
fix typo in sysvsem.c
bump to 7.2.13-dev
[ci skip] Update NEWS wrt. php-7.3.0RC4 tagging
Inlining in the most frequently used code paths
Use persistent strings only for persistent connections
Updated to version 2018.6 (2018f)
Empty merge
Updated to version 2018.6 (2018f)
Empty merge
Updated to version 2018.6 (2018f)
Defragment two Zend related Makefile fragments together
[ci skip] Remove automake and aclocal in comments
Simplify mb_gpc() code
Use C++ symbols with C++11, take 2
Rename two *.php files in tests folders
Remove mkdep.awk
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
Mark "top-level" functions.
Don't initialize static_member_tables during start-up, when inherit internal classes.
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
Remove outdated PEAR artefacts
Revert "Use C++ symbols, when C++11 or upper is compiled"
Use C++ symbols, when C++11 or upper is compiled
Added new line
Remove stamp-h
Move all testing docs to qa.php.net
[ci skip] Update UPGRADING wrt. tidyp support
Run CI tests under opcache.protect_memory=1
Micro optimizations
Mark "top-level" classes
Immutable clases and op_arrays.
Remove the "auto" encoding
Add vtbls for EUC-TW encoding
Remove unused variable makefile_am_files
Classify object handlers are required/optional
Add support for getting SKIP_TAGSTART and SKIP_WHITE options
Remove some obsolete config_vars.mk occurrences
Remove bsd_converted from .gitignore
Remove configuration parser and scanners ignores
Remove obsolete buildconf.stamp from .gitignore
[ci skip] Add magicdata.patch exception to .gitignore
Remove outdated ext/spl/examples items from .gitignore
Remove unused test.inc in ext/iconv/tests
Remove value from --CGI-- section
Sync leading and final newlines in *.phpt sections
Sync leading and final newlines in *.phpt sections
Sync leading and final newlines in *.phpt sections
Sync leading and final newlines in *.phpt sections
Remove assignment irrelevant for release build
Trim trailing whitespace in *.phpt
Trim trailing whitespace in *.phpt
Trim trailing whitespace in *.phpt
Trim trailing whitespace in *.phpt
Trim trailing whitespace in tests
Sync leading and final newlines in source code files
Sync leading and final newlines in source code files
Sync leading and final newlines in source code files
Sync leading and final newlines in source code files
[ci skip] Update NEWS
ext/sodium: sodium_pad(): do not copy any bytes if the string is empty
ext/sodium: Use a correct max output size for base64 decoding
ext/sodium: Avoid shifts wider than 32 bits on size_t values
Trim trailing whitespace in source code files
Trim trailing whitespace in source code files
Trim trailing whitespace in source code files
Trim trailing whitespace in source code files
Require SQLite ≥ 3.5.0 for ext/sqlite3 and ext/pdo_sqlite
Convert CRLF line endings to LF
Convert CRLF line endings to LF
Convert CRLF line endings to LF
Convert CRLF line endings to LF
Upgrade timelib to 2018.01RC1, to fix bug #77007
Upgrade timelib to 2017.08, to fix bug #77007
Update news with further fixed bugs due to timelib upgrade
Restore array_key_exists() compatibility for ArrayObject
Update release process information to include the improved bumpRelease script
More straightforward count() on ArrayObject with object
Remove unnecessary get_hash_table return value checks
Remove redundant HASH_OF in mail.c
Use ARRAY_OR_OBJECT arg in http_build_query
Remove unnecessary HASH_OF uses in mbstring
Drop unnecessary HASH_OF uses in ext/oci8
Remove HASH_OF uses in ext/filter
Modernize the AC_PRESERVE_HELP_ORDER macro call
Remove leftover code dealing with curl wrappers
Remove some redundant uses of HASH_OF
Remember redundant check in filter.c
Specify timezone in test
Add UPGRADING notes
Don't overload get_properties for ArrayObject
Migrate ext/date to get_properties_for where appropriate
Introduce get_properties_for() handler
[ci skip] Update UPGRADING about Autoconf version
Bump minimum Autoconf requirement to 2.68
[ci skip] Update NEWS
Added test case for bug #75577
Added test case for bug #75577
[ci skip] Update NEWS wrt. php-7.3.0RC3 tagging
During size calculation, pointer should be kept unchanged
Add missing packaging entries
Add constants from curl 7.56 to 7.61
[ci skip] Note the required configure changes for bundled libzip
Update and refactor shmop extension's README
Enforce C++11 in ext/intl
Initialize ce->parent_name to NULL
Remove unstable dns tests
Use the locally defined constants for dns record types
[ci skip] Update NEWS and UPGRADING wrt. unbundling libsqlite
Unbundle libsqlite3
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
Add test for bug #76942
Add test for bug #76942
Optimize MySQL statement execute without parameters
Use the locally defined constants for dns record types
Use HT_MIN_SIZE when duplicating an empty array
Remove unused backpatch_count field
Ensure target is \0 terminated
Clarify that the get_properties handler is required
Allow to disable pcre.jit when system library is used as it is for now broken on some arch (s390x...)
Update NEWS [ci skip]
Add constants from curl 7.50 to 7.55
libzip has been unbundled in master only
Reuse delivered length
Add compatibility bit
Removed wrong reference counting
Update UPGRADING [ci skip]
Refactor php_sys_readlink
Update NEWS [ci skip]
Update NEWS [ci skip]
Update NEWS [ci skip]
Update NEWS [ci skip]
More careful handling of function prototypes
Avoid code duplication and don't miss env restore
Hopefully last round of size_t fixes, this makes the remaining php_hash_ops use size_t over an int
typo
bump zip extension version
Remove $ext_shared usage for ext/hash in the Unix build script (Thanks Christoph for the notice)
Second round of fixing compiler warnings in ext/hash. Lots of the signatures that previously was unsigned int is now size_t, there was a fair bit of inconsistency there already and this commit should make it all sync nicely
Avoid method compatibility check with itself
Added assertions
Write to correct smart_str
Reflection: Copy invoke function also in the variadic case
Remove uses of apply_with_arguments API in reflection
Update hash tests for consistency in their titles and remove the skipif sections (except for the mhash related tests)
Implemented RFC "Always available hash extension"
Some reflection cleanups
Don't fall back to vtbl_pass if no matching vtbl found
typo
Make ZEND_ACC_IMMUTABLE and ZEND_ACC_HAS_TYPE_HINTS to be common (for functions and classes)
Rename ZEND_ACC_NO_RT_ARENA into ZEND_ACC_HEAP_RT_CACHE and use it for pseudo-main op_arrays.
Allocate only necessary space for static properties of internal classes in ZTS mode.
Turn accel_activate into module callback.
Bump phpdbg version to PHP_VERSION
Get rid of accel_deactivate() calback
Update .gitignore to include the Windows deplister program (win32/build/deplister.c)
Bug > Feature Request
NEWS and UPGRADING
Use already set variable
Deprecate unbinding of $this of non-static methods
Generalize compile_typename
Remove and refactor ext/spl/examples
Remove outdated soap examples
Remove unused ext/bz2/php_bz2.def
Remove redundant ce from reflection property_reference
Only store zend_type inside reflection type_reference
Bump versions for 7.1.24-dev
Remove dead code (only IS_ARRAY may relive zendi_convert_scalar_to_number()), and micro-optimization.
Rename ext/snmp/tests/bigtest.sh to bigtest
[ci skip] Sync licenses
Remove unused and untouched ext/libmbfl/tests files
Avoid useless store and checks in xlat_table.
Removing last unused
Last few changes : 	. force the nls_date_format 	. add the scale to the return of the function 	. add tests on some function return 	. removing unused variables
[ci skip] Mention php_pdo_mysql_sqlstate.h in the contributing info
Remove outdated ext/ctype/ctpye.xml reference document
Remove outdated OOP examples Zend/tests/zend2.php.txt
Remove unused files
Make ext/session/mod_files.sh executable
Remove unused ext/exif/tests/test6.jpg
Bump version
Remove unused ext/enchant/tests files
Remove unused "dummy" member in reflection_object
Reformat macros in php_reflection.c
Removed unused function
Update NEWS wrt. php-7.3.0RC2 tagging
Terminate smart string correctly
Make usable for PECL OCI8 release for PHP 7.x
Backport master branch comment typo fix
Make tests portable across PHP 7.x versions
Remove $id from phpinfo as already done in PHP-7.3
And strip trailing tabs too...
Sync EXPECT usage with PHP-7.3
Remove trailing whitespace to help keep branches in sync
Remove trailing whitespace to help keep branches in sycn
Remove outdated zlib readme file for windows build
Rename *.php files in ext/dom tests to *.inc
Rename *.php files in Zend/tests to *.inc
Sync ext/spl/README with current set of example files
Bump minimum libxml version to 2.7.6
Handle binary_op failure in overloaded assigns
Remove unnecessary base64_encode() return value check
[ci skip] Update NEWS
Drop WE_DONT_COPY_IN_BUFFERED_AND_UNBUFFERED_BECAUSEOF_IS_REF
Remove duplicate test file
Drop ext/spl/spl.php
[ci skip] Update UPGRADING.INTERNALS
Rename *.p5c files to *.inc
Add directory structure to the contributing docs
Add test for bug #76909
Upgrade PCRE2 to 10.32
Update NEWS and UPGRADING wrt. PR 2760
Remove HAVE_TIME_H
cs
Changes : . Add the distinction between NUMBER and FLOAT types . Changing BFLOAT text to be BINARY_FLOAT . Changing BDOUBLE text to be BINARY_DOUBLE . Add the data types names for NCHAR, NVARCHAR and NCLOB . Few changes in the tests
fixing comments
Update oci_statement.c
Add the PDOStatement::getColumnMeta() function to the pdo_oci driver
Update to SQLite 3.25.1
Use macro
Improved hash copying
Drop unused variable
Turn zend_hash_exists() into inline function
Use zend_hash_find() instead of zend_hash_exists()
Micro-optimization
Remove zend_hash_exists()
Remove zend_hash_exists()
Improve ZEND_VM_SMART_BRANCH()
Remove unused methods-on-non-objects-nested.inc
Class constants and default property values can't be IS_REFERENCE anymore.
Upgrade PCRE2 to 10.32
Remove server-tests.php
Simplify buffer management in php_intl_idn_to_46()
Remove invalid free
Drop --without-libzip option from Travis
Remove bundled libzip
drop support for bundled libzip (linux)
Drop unused variable
Remove legacy add_*_unset() macros
Remove add_method() macro
Add spectre switch for suitable vc14 versions
Replace ZEND_ACC_ANON_BOUND, ZEND_ACC_UNRESOLVED_PARENT and ZEND_ACC_UNRESOLVED_INTERFACES with single ZEND_ACC_LINKED.
Remove HAVE_STDARG_H
Remove HAVE_STRING_H
Remove my_estrdup() and my_efree() macros
Remove ZEND_EARLY_BINDING_* constants
Remove ZEND_OBJECTS_STORE_HANDLERS macro
Remove unused ZEND_CT and ZEND_RT constants
Remove unused HAVE_BROKEN_GLIBC_FOPEN_APPEND
Use different loop terminating conditions
Allow switching back to Zend MM heap.
Remove __USE_GNU defines
Don't export anything in php_sysvmsg.h
Set correct error code and adapt test
Switch Travis build to Xenial
Don't install libt1-dev on travis
Remove unused MREMAP_MAYMOVE compatibility define
Remove unused HAVE_MEM_MMAP_ANON and HAVE_MEM_MMAP_ZERO checks
Remove __GNUC__ guard around stddef.h include
Don't use xml resource in openssl test
Remove PHP_XML_INTERNAL defines
Perform final GC before the object store is freed
Remove HAVE_STDIO_H
Make PHP development tools files executable
Explain why the test was skipped
Remove HAVE_STDLIB_H
Remove HAVE_SYS_VARARGS_H
Use EXPECT instead of EXPECTF when possible
Remove unnecessary destroy wrappers
Remove unused ZEND_FILE_LINE in i_zval_ptr_dtor
Don't hard-code object number in expectation
Remove checks for libxml < 2.6.11
Remove IS_EXT_MODULE defines
Make ext/xml API private
Update to SQLite 3.25.0
Silence ar warning
Revert "Implement #67331: Have parse_ini_file add empty entries"
Implement #67331: Have parse_ini_file add empty entries
Change default of $variant param of idn_to_ascii() and idn_to_utf8()
Require ICU ≥ 50.1
Sync version for vc++ 15.9
Remove zend_check_private()
Simplify __clone() visibility check (magic methods still don't respect ZEND_ACC_CHANGED).
Make visibilty check in is_callable() to be consistent with zend_std_get_method()
Backport changes for OpenSSL 1.1.1 CI integration
Remove colliding file from CI image
Split error code into "cold" functions and cleanup.
Micro-optimization (condition reordering)
typo
More possibly colliding libs to remove from the test image
Micro-optimization
Avoid unnecesury iterations over parent classes, in case of no overriden private properties.
Show all unmatched errors when test failed
Add debug message for failing test parts
Optimize method/property visibility checks
Improve error code matching
Update binary SDK version for AppVeyor
Better ZEND_ACC_CHANGED handling
Optimisation: Check for private property in parent class makes sense only if we already found a property info. Check for property started with "\\0" makes sense only if we didn't find property info.
Simplify method visibility checks
5.6.39 will be the next
Use Zend API helper functions
This increment is not necessary anymore.
Additional fix for bug #76860.
[ci skip] Update NEWS wrt. php-7.3.RC1 tagging
Renumber ZEND_ACC_... flags
Removed weird test, trait can't be "static" or "final".
Drop unused variable
Use mnemonic names
Get rid of ZEND_ACC_IMPLICIT_PUBLIC
Added test for bug #76860 (Missed "Accessing static property as non static" warning). It's already fixed by previous commit.
Squashed commit of the following:
7.0.33 next
Sync NEWS [ci skip]
add NEWS for 76582
Enforce ordering of property compare in object comparisons
Skip test on unsuitable env
Update NEWS
Make a copy unconditionally
Remove not needed checking for <errno.h>
Remove HAVE_ASSERT_H
Add test for bug #76850
Remove empty PHP tags from test
Report mem leaks to stderr if no Win debugger is present
Use combined assignment contanation operator
Support fixed address mmap without replacement
Remove netware header
Sync with recent changes to default libcurl build
Sync with recent changes to default libcurl build
Get rid of ZEND_ACC_CTOR, ZEND_ACC_DTOR and ZEND_ACC_IMPLEMENTED_ABSTRACT
Remove HAVE_STDDEF_H
Restore NEWS entry [skip ci]
Remove unused buildsystem files in TSRM
Remove AC_FUNC_UTIME_NULL
Remove AC_FUNC_MEMCMP
Remove AC_HEADER_DIRENT
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
Revert all MySQL auth related changes
Escape trigraph sequence
Keep collision list ordered from higher to lower buckets.
Update grammar and clarify wording in couple places
Update to Oniguruma 6.9.0
Remove AC_HEADER_TIME
Remove AC_C_CONST
[ci skip] Update NEWS
Improve fix for bug #76829
Revert changes in test file
Switch to staging series on AppVeyor
NEWS for #76818
fix double cast to int on 32-bit
Remove AC_FUNC_VPRINTF
Remove AC_STRUCT_TM macro
Make PHP development tools files and scripts executable
Prep for 7.1.23
Update NEWS
Revert "Support fixed address mmap without replacement"
Revert "Don't report mmap failure if it is expected"
Make more tests run on Linux
Implement #64517: Add AC_ARG_PROGRAM macro
Allow opcache_compile_file() to perform compilation even if opcache is disabled.
Perform run-time binding reusing HashTable bucket (without new bucket insertion).
Change some permissions from 755 to 644
Added check for "user" method
Removed incorrect efree() (run_time_cache(s) are usually allocated in CG(arena)).
[ci skip] Update NEWS wrt. php-7.3.0beta3 tagging
Revert "Removed redundand code"
bump to 7.2.11-dev
Removed redundand code
Store zlog stream in each child so it can be reused
Cleanup class linking
Move zend_verify_abstract_class() into zend_inheritance.c
Avoid function copying
Refactor stat implementation
Remove some old parts of the php
Remove Doxygen configuration
Replace HAVE_ST_BLOCKS with HAVE_STRUCT_STAT_ST_BLOCKS
ZEND_DECLARE_CLASS, ZEND_DECLARE_INHERITED_CLASS and ZEND_DECLARE_INHERITED_CLASS_DELAYED don't need return value anymore.
Perform "early-binding" directly during compilation
Keep information about unresolved parent class in zend_class_entry->parent_name
mkdist.php: recursively check dll dependencies
Keep information about unresolved interfaces in  zend_class_entry->interface_names. Move interface implementation code into ZEND_DECLARE_*CLASS opcodes. Remove ZEND_ADD_INTERFACE and ZEND_VERIFY_ABSTRACT_CLASS opcodes.
Simplify regression test
Replace zend_class_entry->traits by persistent zend_class_entry->trait_names. Move trait binding code into ZEND_DECLARE_*CLASS opcodes. Remove ZEND_ADD_TRIAIT and ZEND_BIND_TRAITS opcodes.
Change zend_lookup_class_ex() and zend_fetch_class_by_name() prototypes to accept optional lower-case class name as zend_string*, instead of zval*.
Increase memory_limit to prevent test failures
Use zend_class_entry/zend_function type names instead of _zend_class_entry/_zend_function tags.
Introduced ZEND_COMPILE_IGNORE_OTHER_FILES compiler option, to allow "separate" file compilation (unaffected but previously compiled files), without CG(function_table)/CG(class_table) manipulation.
Unify unpack checking in compile_special_func()
Don't report mmap failure if it is expected
Stop using zend_function->reserved[] space.
Removed op_array->static_variables duplication code. They can't be "shared" during comilation.
Drop dead code
Cleanup
Don't use second operand of BIND_STATIC instruction.
Support fixed address mmap without replacement
Removed dead code
Avoid directly adding to string literal
Avoid hash lookups in BIND_STATIC and BIND_LEXICAL opcode handlers. Encode static variable offset into opline->extended_value.
[ci skip] Correct minor typo (GC_GLAGS to GC_FLAGS)
Make array parsing parameters error messages consistency with ZPP failure
Map ERROR_PRIVILEGE_NOT_HELD to EACCES
Use stable deps on AppVeyor for now
Add regression test for bug #68175
Add test for bug #76738
Update binary SDK version for AppVeyor
[ci skip] Update NEWS
Cleanup
Followup fix for ef9ed19e, see also bug #76738
DOMDocument::formatOutput attribute sometimes ignored
Cheaper checking
Micro optimization & fixed invalid key handling
Update NEWS
Update NEWS
Added a note
Update NEWS
Update NEWS
fix man page installation
Added NEWs
Cleanup
Followup fix for ef9ed19e, see also bug #76738
[ci skip] Update NEWS wrt. php-7.3.0beta2 tagging
Revert "DOMDocument::formatOutput attribute sometimes ignored"
Sync with e0fe6674
Update NEWS [ci skip]
Update NEWS [ci skip]
Update NEWS [ci skip]
Drop spl/internal documentation
[ci skip] Update NEWS
Quell GCC warning on mixing || and &&
[ci skip] Update NEWS regarding SameSite cookie support
Remove more unecessaries percent signs
Remove invalid SKIPIF sections and make more tests run
Update libmagic.patch [ci skip]
[ci skip] Extended class naming rule
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
Remove unecessaries percent signs
fpm process name, FreeBSD 12.x using new setproctitle_fast
Use php_openlog instead of openlog in FPM
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
Use php_openlog instead of openlog in FPM
Make test run on non debug builds
Add missing skip conditions
Remove outdated comment with PEAR xmlrpc dependency
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
Remove asan incompatible options
Use inliner cache also for non ext/sapi sources
Update UPGRADING.INTERNALS wrt. Same Site Cookies
Missing piece for the inliner cache
Update maintainer info [skip ci]
Improve cleanup
Remove superfluous checks of always available functions
Cleanup unused items
Roll NEWS for 7.2.10
Enable inline reader cache
Create and expose php_sys_symlink() and php_sys_link()
Make test run on non zts builds
Remove invalid SKIPIF sections
Give a reason why the test was skipped
Add \PDO::SQLITE_ATTR_READONLY_STATEMENT
Suppress more irrelevant clang warnings
Remove needless version checks
Unused var
Unused var
[ci skip] Typo
[ci skip] Ugh, whitespace
[ci skip] Clarify difference between security & regular bugfixes
UPDATE README.GIT-RULES wrt. PHP-7.3
bump version
Prepare UPGRADING(.INTERNALS) for PHP 7.4
Prepare for PHP 7.4
Update API version numbers
Update UPGRADING wrt. samesite cookie RFC
Support for samesite cookies with array syntax
implement same site cookie see https://bugs.php.net/bug.php?id=72230 see https://tools.ietf.org/html/draft-west-first-party-cookies-07 see https://scotthelme.co.uk/csrf-is-dead/
Improved method visibility checks
Simplified property name to string conversion
Removed useless IS_UNDEF checks
Remove TSRM_CHECK_GCC_ARG and LIBZEND_CPLUSPLUS_CHECKS
Update NEWS [ci skip]
Update NEWS [ci skip]
Update NEWS [ci skip]
Use better macros
Loop optimization
Make more tests run on 64bit plataforms
Give a reason why the test was skipped
Remove superfluous SKIPIF sections of always available functions
Added missing define
Removed duplicate code. zend_fetch_dimension_address_LIST_w() was a copy of zend_fetch_dimension_address_W(), ZEND_FETCH_LIST_W_SPEC_CV_... a  copy of ZEND_FETCH_DIM_W_SPEC_CV_...
Remove superfluous SKIPIF sections of always available constants
Replace obsolete AC_TRY_FOO with AC_FOO_IFELSE
Remove superfluous SKIPIF sections of always available interfaces
[ci skip] Document RETSIGTYPE
Remove superfluous SKIPIF sections of always available functions
Run tokenizer_data_gen.sh to reorganize tokens
Remove obsolete AC_TYPE_SIGNAL
Upgrade deprecated AC_OUTPUT macro calls
Upgrade AX_FUNC_WHICH_GETHOSTBYNAME_R to serial 8
Trim trailing whitespaces in build files
[ci skip] Note HAVE_ST_BLKSIZE and HAVE_ST_RDEV
Replace obsolete AC_STRUCT_ST_BLKSIZE and AC_STRUCT_ST_RDEV
[ci skip] Note removal of PHP_PROG_LEX
Remove unused PHP_PROG_LEX macro
Remove unused libmbfl build system related files
Replace obsolete AC_AIX with AC_USE_SYSTEM_EXTENSIONS
Trim trailing whitespaces in build files
Upgrade AX_CHECK_COMPILE_FLAG macro to serial 6
Remove unused Git ident attributes from zip extension
Reverts some changes from 7ec64a83
Improved assignment to "next" element of array ($a[] = ...)
Remove superfluous check for PHP 7+ tests
Sync with ab8094c6
Use better check
Remove extra semicolons
Pack zend_constant.flags and zend_constant.module_number into reserved space inside zend_constant.value.
Documented ZEND_ACC_* flags (values are kept unchanged, except for ZEND_ACC_IMMUTABLE, that was introduced in 7.3 anyway)
Remove unused variables
Remove extra semicolons
Replace obsolete AC_TRY_CPP with AC_PREPROC_IFELSE
typo
Don't need interactive progress on git clones in Travis
Encode parent class name as IS_CONST operand in DECLARE_INHERITED_CLASS and DECLARE_ANON_INHERITED_CLASS opcodes (eliminate FETCH_CLAS S opcode).
Regenerate scanners using re2c version >= 1.0.0 (newer version, at least, produce less code)
Split add/sub_function(s) into fast and slow parts
Remove obsolete macro AC_DECL_YYTEXT
Remove unused Git attributes ident
Better name: ZEND_PROPERTY_HAS => ZEND_PROPERTY_NOT_EMPTY
Give a meaningful name
Micro-optmization
Update NEWs
Update NEWs
Removed the generated-tests library, this is a left Zöe's phpruntests repository it seems and never fully implemented. The only times this part of the code has been touched throughout the years has been minor PRs and entire php-src grep commits.
Avoid code duplication
Remove some dead code
Use better destructor (key may be only IS_STRING or IS_LONG).
API cleanup. Removed useless filename and lineno arguments, used in DEBUG build. The patch doesn't break source compatibility of public API (only binary compatibility).
Micro-optimization
Give a reason why the test was skipped
Use variables that already received ZEND_NUM_ARGS()
Return bool from zlog_stream_set_msg_{prefix,suffix}
Update NEWS and UPGRADING with info about syslog.filter
Rename none syslog.filter to all and update ini description
Add syslog.filter INI for filtering syslog messages
Add UPGRADING notes for deprecations
Deprecate pdo_odbc.db2_instance_name
Deprecate string.strip_tags filter
Deprecate fgetss() and gzgetss()
Deprecate defining a free-standing assert() function
Deprecate non-string needles in string search functions
Deprecate undocumented mbereg_* aliases
Move GMP bug 74670 test file to tests dir
[ci skip] Add new global MBString constants to UPGRADING
Removed and fixed unused variables
Update binary SDK version for AppVeyor
5.6.38 will be next
Removed redundand code
Matching loops optimization
Micro optimizations
fix ext_skel continue
Reorder conditions
Move "/e" modifier check into regex compiler
Allocate array of proper size
Perform checks for propertis started with '\\0' only for dynamic properties
add info about zend_class_entry.iterator_funcs
Improved "Fast Shutdown".
Update NEWS for 7.3.0beta1
Use __cpuid_count() from cpuid.h instead of custom assembly
7.0.32 next
Inline FETCH_CONST and DEFINED handlers into "hybrid" executor.
Reduce overhead of case-insensitive constants deprecation for "fast path"
[ci skip] Update NEWS
Improve implementation of array_key_first() and array_key_last()
Add implementation and tests for new methods - array_key_first(array $a) Returns the key of the first element or null - array_key_last(array $a) Returns the key of the last element or null
FILTER_FLAG_(SCHEME|HOST)_REQUIRED are now deprecated
Deprecate explicit use of FILTER_FLAG_SCHEME|HOST_REQUIRED
NEWS
Add NEWS
Deprecate case-insensitive constants
Remove use of case-insensitive constants in tests
Flatten strip_tags state machine (GCC overoptimized this function, producing enormpous amount of code).
Make more tests run and fix SKIPIF sections
Test http_response_code function
Small tweaks to php scripts
Small tweaks to php scripts
[ci skip] Update php.ini-production
Regroup the ifdef'd occurrences
Trail long path support also for deletion
Improve test
Distinguish two error messages
Avoid early allocation
[ci skip] Add dates to maintainer names
[ci skip] Update next version
Export stdClass objects using (object) cast (fixes #48016)
Improved user iterator implementation to reduce zend_class_entry memory consumption and avoid race condition during resolving/caching of user iterator functions of internal classes in ZTS build.
Support long path also when reading from file cache
Mark conditions unexpected
Changed structure of zend_class_entry.trait_aliases and zend_class_entry.trait_precedences to avoid keeping "intermediate" trait references, that are used only during inheritance.
Make error messages more speaking
Switch to ioutil routines to support long path in file cache
Remove these two old and outdated files we never use:
[ci skip] Document changes to php_add[c]slashes
Avoid copying
[skip ci] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
Use ZVAL_COPY_DEREF()
Avoid useless copying
Removed deprecated condition
Optimization
Sync callback signature with libxml2 2.9.8
Skip test on incompatible servers
Avoid useless checks for public functions
Combined few checks into one
Avoid reloading
Add missing flag
Eliminated check
Move to size_t for string length
Remove conflicting declaration
Eliminated reference-counting and EG(exception) check
Uze ZVAL_COPY_DEREF() instead of ZVAL_DEREF() and ZVAL_COPY()
The session_array global is not used at all, so comment it out for now
Added test to accompany the FILTER_SANITIZE_ADD_SLASHES filter
Added the 'add_slashes' sanitization filter (FILTER_SANITIZE_ADD_SLASHES) as an alias to 'magic_quotes' (FILTER_SANITIZE_MAGIC_QUOTES) so we can move past our "magical" legacy.
Update NEWS for log related changes in FPM
Refactore FPM logging
Update NEWS and UPGRADING for fpm_get_status addition
Migrate fpm_get_status test
Implement fpm_get_status
Add missing INI directives to curl phpinfo
Bump Autoconf version in configure.ac to 2.64
Replace AC_CONFIG_HEADER with AC_CONFIG_HEADERS
Warn if continue is used on switch
Add UPGRADING for mb_ereg changes
adds support for named subpatterns to `mb_ereg_replace`
adds support for named captures to mb_ereg & mb_ereg_search
Add test for PR #2382
random_bytes improvements for FreeBSD (from 12.x serie)
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
Bump version
Forgotten one replacement
rename ref_dtor_func to rc_dtor_func
Rename zval_dtor_func and ref_dotr_func
Revert "Rename _zval_dtor_func to _ref_dtor_func"
Rename _zval_dtor_func to _ref_dtor_func
fixes typo in daemonization DEBUG message after fork: acknoledge -> acknowledge
Use zval_ptr_dtor() instead of zval_dtor() in in-place array/object conversion functions
Optimize array to object casting
Conversion related optimizations
Optimize object to array casting
Avoid useless checks in object_init()
Reduce error buffer size
Use zval_ptr_dtor() imstead of zval_dtor()
It's safer to use zval_ptr_dtor() for iterator keys.
Use zval_ptr_dtor() to replace bound variables (original values nay be circular structures).
Use zval_ptr_dtor_nogc() instead of zval_dtor() inplaces where circular-references are not possible
Use zval_ptr_dtor_nogc() in JSON parser (it can't produce circular data structures)
Use zval_ptr_dtor() instead of zval_dtor() in internal functions that destroy new created object (This is safer and produces less code)
Replace zval_dtor() with specialized destructors
Use zval_ptr_dtor() instead of legacy zval_dtor(), to destroy unused values returned from PHP functions (they may be circular data structures).
Replace zval_dtor() with specialized destructors
Replace zval_dtor() with specialized destructors
Don't keep dangling pointer to function_name
Use zval_ptr_dtor() instead of zval_dtor() in internal functions that destroy new created object (This is safer and produces less code)
NEW and UPGRADING
Removed legacy zval_dtor() usage. It doesn't work with zvals with refcount == 0, anyway.
Argument unpacking with Traversables and non-integer keys. Changed error message, added UPGRADING note and test.
Added test case for bug #76539 for master only as the behavior has been restored
Replace legacy zval_dtor() by zval_ptr_dtor_nogc() or even more specialized destructors. zval_dtor() doesn't make a lot of sense in PHP-7.* and it's used incorrectly in some places. Its occurances should be replaced by zval_ptr_dtor() or zval_ptr_dtor_nogc(), or even more specialized destructors.
[ci skip] Document GC_C() → zend_gc_get_status()
se zval_ptr_dtor_str() instead of zend_string_release_ex(Z_STR(*), 0)
concat_function() micro optimization
SEND_UNPACK should throw exception on Traversable with non-integer keys
Avoid useless copying and conversion
API cleanup. Removed unused functions (kept compatibility macros).
Do not continue extract()ing after an exception has been thrown
[ci skip] Update NEWS
Add missing autoconf m4 quotes
Remove BOM
[ci skip] Document zend_parse_parameters_none()
Remove sqlite and xmlrpc extension versions from phpinfo output
str_replace() micro-optimization
Update NEWS for 7.3.0beta1
bump to 7.2.9-dev
Eliminated REFCOUNTED checks on persistent constant operands in SEND_VAL[_EX] and QM_ASSIGN.
Better hot/cold code splitting
Another fix for bug #63217
Add $ before property name in error message
Partial revert of 30156d588c07e26d4e752ddb62344e96854d4773
Remove unnecessary explicit argc check
Remove METHOD_NOTSTATIC checks in reflection
Remove the forked test and adjust the original one
Avoid magic method hash lookups
Avoid string comparisons for magic methods (all magic methods start with "__")
Update libs_version.txt
Add ssl/tls streams options for min and max proto version
Update NEWS, UPGRADING and default php.ini files with syslog changes
Add syslog's ident and facility parameters to config
Make newly introduced bug76556.phpt more resilient
Add test for void return type on internal function
Add ext/sodium to php.ini-*
Add zend_update_static_property_ex API
Add zend_read_static_property_ex API
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
Check return value of pcre2_maketables()
Removed INIT_OVERLOADED_CLASS... macros
cleanup
Changed php_add[c]slashes prototypes (removed should_free argument)
Update SDK version for AppVeyor
Sync versions for VC++ 15.8
[ci skip] Document new typedef zif_handler
[ci skip] Announce emails should not be cross-posted
[ci skip] Update NEWS
Don't ignore commits on NEWS, etc. on AppVeyor
DOMDocument::formatOutput attribute sometimes ignored
Update NEWS
Update NEWS
Store unmangled name in ReflectionProperty
Optimize ReflectionProperty constructor
Update Coding style
Update UPGRADING wrt. PCRE2
Remove duplicated code (keep destroy_zend_function() for compatibility)
Moved very rare exception check into a single place.
Remove outdated comments about PHP 3
Add test for issue #1400
Update NEWS
Update NEWS
Minor cleanup in regards to magic_quotes in tests:
Cleanup conditions
Restored zend_array_element_type() prototype
Make FETCH_R/IS, FETCH_DIM_R/IS, FETCH_OBJ_R/IS, FETCH_STATIC_PROP_R/IS return TMP_VAR, instead of VAR.
Remove unnecessary uses of z/ parameters
typo
Lazy function copying from op_cache SHM into process memory
[ci skip] Remove obsolete task
Micro-optimization
Update array_element_type inference for previous change
Use COPY_DEREF for DIM_IS and LIST_R as well
[ci skip] fixed typos
Added note about zend_function.reserved[] fields usage
Improved type inference. Result of opcodes using ZVAL_COPY_DEREF can't be MAY_BE_REF.
Remove useless PHPDBG_* constants
Prepare tests for ICU 62.1
Use COPY_DEREF instead of COPY_UNREF
Update http to https
numner => number
Remove expr_without_variable
Remove obsolete version checks in tests
[ci skip] Update NEWS
If there's no setlocale, char tables are not used
Don't discard char tables just generated
add note about php_url struct changes
Improve locale character tables handling and reduce pattern cache size
Reduced overhead of magic method calls (__get/__set/__unset/__isset/__dectructor/__clone).
retval shouldn't be NULL
Reduce spl_autoload() overhead
Added parenthesis
Avoid duplication of "shadow" property_info
Make new openssl ext tests in 7.2 consitent
Use unix NL in all openssl ext tests
Make code in openssl ext tests more consistent
RFC: Argon2 Password Hash Enhancements Implementation of Argon2id per RFC https://wiki.php.net/rfc/argon2_password_hash_enhancements
Bump phar and hash extension version to match PHP version
Avoid reusing zend_function.common.prototype for magic things (use reserved fields instead).
Gereralize VA macro expansion mechanism
Update NEWS
Update NEWS
Revert "ICU 59+ requires C++11 and errors out without the option"
Remove unnnecessary DEREF parameter
Remove code duplication
Move class constant definition to the right enum file
Update NEWS for 7.3.0alpha3
Report unknown variables passed to compact()
phar module, unsignedness check changes. while at it, correcting seemingly subtle bug when checking extension validity.
use defined macro
ICU 59+ requires C++11 and errors out without the option
only warning when the flag is true
Remove old SVN keywords substitutions
Remove Git ident attribute from the iconv extension
Remove SVN revision from phar phpinfo output
Remove old SVN keywords substitutions from the zip tests
Add NEWS entries
[ci skip] Mention new hrtime() in NEWS
Bump snmp extension version to PHP version
Remove assertion
Update NEWS
[ci skip] Update NEWS
Bump fileinfo extension version to PHP release version
Bump intl extension version to PHP release version
Bump PHP_JSON_VERSION to 1.7.0
Bump extension, module and PHP API numbers for 7.3
Remove old and unused warnings when building apache
Avoid useless stream buffer copying and workaround with chunk_size manipulation.
Revert braces inside condition
Make $locale parameter to BreakIterator ctors optional
php_json_escape_string() optimization
erealloc() is infallible
emalloc never returns null
Remove old SVN keywords substitutions from xsl and sockets tests
emalloc() never returns NULL
Added num_roots to gc_status
Removed "gc_" prefix.
Allow access to some garbage collection internals (Benjamin Eberlei)
Port FPM test 023 and 024 to the new FPM testing
Rewrite FPM tests
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
Enable HRTime on OpenBSD
NEWS
NEWS
Add OPSYS_CPM constant as documented and to match libzip naming
supplemental fix for bug #76427
Update data tables for Unicode 11
Remove dead code for ADD_STRING/ADD_CHAR optimization
Skip tests when Oniguruma is disabled
Correct NEWS
Remove inappropriate FreeLibrary calls
Remove inappropriate FreeLibrary call
The ZEND_EXTENSION change is merged with xdebug now so we can drop this for master only
Remove revision from OCI8 extension
Deprecate image2wbmp()
Optimizer: Don't propagate constants into MAKE_REF
[ci skip] Update NEWS
[ci skip] Update NEWS
Add check for variable size array feature
Error on by-ref assign to overloaded prop returning ref
Use .= where possible
Remove unncecessary parantheses
Remove unused variable old_php
Remove exif version from the phpinfo output
Don't use UNREFs during array operations
Deduplicate code using php_timezone_to_string()
cast to int to disable compilation warnings.
Sync phpinfo output for pdo_pgsql
Avoid leaking the urandom fd
Enable IPv6 in Travis
Update NEWS for 7.3.0alpha2
Inline few small opcode handlers into hybrid executor
bump versions
Added const modifier
76363: added jsm extension to list of mime types
Added parentheses
Fastcall calling convention is not comaptible with variable number of arguments
Micro-optimizations
NEWS for 7.2.8
Update to SQLite 3.24.0
Embed zend_leave_helper() into hybrid executor to avoid call overhead.
Cleanup
[ci skip] Remove trailing WS
Remove enchant version from the phpinfo output
Remove some old occurrences of configure.in
Sync tidy phpinfo extension version
Normalize the ldap extension version in phpinfo output
Normalize Reflection phpinfo() output
[ci skip] Update libmagic.patch
Remove unnecessary decls, php.h is included
Align the ported place with libmagic
Sync sysvsem and sysvshm versions in phpinfo
[ci skip] Add UPGRADING note
Update README.REDIST.BINS
Normalize SimpleXML phpinfo output
Remove revision for recode from phpinfo
Normalize the POSIX phpinfo output
Normalize filter phpinfo() output
Normalize sysvmsg phpinfo() output
Removed "dead" code (zend_hash_update() never fails)
Use hrtime() for timing tests
Do one test build with AVX
Export standard object handlers, to avoid indirect access
Optimize zend_new_array() for special case, when size <= HT_MIN_SIZE
Use SSE/AVX instructions
Use SSE2 instruction to reset HashTable
Avoid rehashing of "packed" array
Eliminate some checks for zero character inside an inclue file name
Avoid agressive inlining in rarely used paths
Marked rarely used opcodes as "cold" (e.g. ADD_CONST_CONST ususaly optimized out).
Remove build system files of bundled library libbcmath
Revert "Avoid reference-counting"
Removed useless zval_ptr_dtor()
Replace unused generic zend_hash_*add_or_update() functions by compact implmentations.
_zend_hash_index_add_or_update_i() optimization
Update year range in hrtime c and h files
Remove unused binary_pipes option
Add note about heredoc BC break
Removed dead code
Translate correct C++ version with suitable compiler
Separate common code into helper function
Avoid reference-counting
Use zend_string_release_ex() instread of zend_string_release() in places, where we sure about string persistence.
Added missing debug arguments
Adds print_global_vars to gdbinit
Add missing opcache.opt_debug_level ini directive
Enhance the ext_skel.php script file
UPGRADING tweaks
Update to Oniguruma 6.8.2
Add some upgrading notes for mbstring
fix phpdbg disabling chroot support
Export php_date_get_interval_ce() and php_date_get_period_ce() for extension use
Update NEWS
indent
unnecessary branch
Allow pecl like usage in ext/pdo, refs #2955
[ci skip] Update NEWS
Refix the tests once more
Update NEWS with info about bug #76296
Add test for bug #76296
[ci skip] Add upgrading note
Implemented winsock info import/export
Allow appending an arbitrary suffix to the packages
Extend compile conditions
Dump obsolete EBCDIC support
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
Update NEWS and UPGRADING for openssl_pkey_derive
Add openssl_pkey_derive
Update SDK version for AppVeyor
bump versions
Avoid useless checks, using zend_string_efree(), in cases where the string is known to be a temporary allocated zend_string.
Destroy function arguments in direct order
Cleanup
Bit test optimization
Updated to version 2018.5 (2018e)
Empty merge
Updated to version 2018.5 (2018e)
Empty merge
Updated to version 2018.5 (2018e)
Use "fastcall" calling convention
Use iteration instead of recursion
micro optimization
Use add/sub instead of inc/dec
micro optimisation
Update _bits_per_char to use with new PHP 7.1. or greater
Optimize zend_hash_find() for the most usual case
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update libs_version.txt
Changed worst HashTable load factor from 1.0 to 0.5
zend_fcall_info_cache.calling_scope is not used by zend_call_function() and doesn't have to be initialized. It's used only as a result of zend_is_callable() in forward_static_call and spl_autoload.
zend_is_callable() improvement
Implemented Request #76178 (Class constants are slow: they should be inlined at runtime)
Update libmagic.patch
Use suitable datatypes
Reuse the struct timespec based pieces in libmagic
Reuse strcasestr implementation from libmagic
The SO_PASSCRED constant is conditionally defined
Port libmagic 5.33
Bit check micro-optimization
Don't store values of PHP_SAPI and PHP_BINARY in file cache, because it may be used by different SAPI.
Allocate default ini values into persistent memory
Avoid using _N in SSE code
Switch to more robust config for external pcre2
Revamp pcre config for build with external lib
Update NEWS
5.6.37 will be next
update NEWS for 7.2.5
7.0.31 next
[ci skip] Update NEWS
Add a bit of defensive conding for bug #76155
Implement output verbosity seting for nmakefile
Avoid strlen calls for regexes
Move to unsigned types in phar
Make openssl_error_string test work in OpenSSL 1.1.1
No Content-Type header if MIME type is unknown
reset imap_errorstack after outputting it
Implement flexible heredoc/nowdoc syntax
[ci skip] Update NEWS with fpm acl fix
Support using acl_* functions on *BSD
[ci skip] Update UPGRADING
[ci skip] Update NEWS
bump versions
next is 7.2.6
Update bundled libsqlite to 3.23.1
Updated LiteSpeed SAPI to 7.1 .
Update NEWS
Rethink conditions
Expose functionality for NFKC_Casefold normalization
Sync normalizer_get_raw_decomposition() to allow passing form
Replace the deprecated API by the newer one available with ICU 56+
Check feature availability as ICU < 49 is still supported
Use recommended way to handle utf*.h headers and obsolete symbols
Group common flags
Rename var
Move to non deprecated API on suitable ICU versions
Use recommended options for explicit UnicodeString constructors
[ci skip] Update UPGRADING
Eliminate useless checks
Use "fastcall" calling convention
[BUGFIX] allow php_admin_value to override value set in php.ini without restriction, like adding an extra directory to open_basedir.
Sync fix for bug #72498 for 32-bit
Remove warnings from inet_pton()/inet_ntop()
[ci skip] Update NEWS
[ci skip] Update NEWS
Update bundled libsqlite to 3.23.0
Prefer reloading key->h
Dereference child1 only after NULL check
Simplify namespace access
Utilize the recommended way to handle the icu namespace
Revert the automatic namespace addition
Better explanation for the opcache.max_wasted_percentage ini setting since it was pretty confusing before
Better explanation for the opcache.max_wasted_percentage ini setting since it was pretty confusing before
Update NEWS with FPM fixes
Prevent modifying of getenv result
68440: ensure backwards compatibility with FPM_SOCKETS var; fix sockname size
Cache negative defined() results
Switch to PostgreSQL 10 for AppVeyor tests
Update binary SDK version for AppVeyor
Adjust tests for ICU 61.1 compatibility
[ci skip] 5.6.36 will be next
Test ini file reporting functions
Remove, or fix, unused variables
Be consistent in is_executable on a directory in any stream wrapper.
Update libs_versions.txt
7.0.30 next
[skip ci] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
Do not set PR_SET_DUMPABLE by default
Do not set PR_SET_DUMPABLE by default
Add support for rl_completion_suppress_append and rl_completion_append_character
Remove redundant warning in array_push() and array_unshift()
Sync version for VC++ 15.7
Implement #51368: php_filter_float does not allow custom thousand separators
Followup fix for bug #75729
Updated to version 2018.4 (2018d)
Empty merge
Updated to version 2018.4 (2018d)
Empty merge
Updated to version 2018.4 (2018d)
Small improvements to run-tests
main/php_ini.c: build empty php_load_zend_extension_cb() when !HAVE_LIBDL
Don't use optimize pragmas with clang
Drop double CHECK_NULL_PATH check for PHARs
Use ZEND_ARG_ARRAY_INFO in DateTime*::__set_state
Add missing skip prefix for some SKIPIF messages
Remove "hot" mark from JMP(Z|NZ|ZNZ) with IS_CONST operand
Mark few more opcode handlers as "hot".
[ci skip] Add normalizer_get_raw_decomposition to UPGRADING
Add normalizer_get_raw_decomposition function
Optimize zend_hash_real_init()
Make ZEND_ISSET_ISEMPTY_CV specialised across ISSET/ISEMPTY and HOT (the handler is really small, so inlining affects executor size insignificantly)
Allow extra specialisation for ISSET/ISEMPTY handlers
Reduce overhead of extra-specialization for opcode handler selection.
Update SDK version for AppVeyor
Micro optimization
Micro optimization
Rework datatypes wrt warnings
Update to Oniguruma 6.8.1
Use const pointers
Reuse new alignment macros
Eliminate cast
Set tests exit status by defaul - also in other instance.
Set tests exit status by default.
Mark non exported symbol as static
Use const pointers
Use const pointers where appropriate
Switch to placeholder matching
Sync test with newer output
Use const pointers at some appropriate places
slashchars are 16 bytes aligned
Optimized str_rot13 with SSE2 instructions
Workaround VA macro expansion difference with VC++
Optmized AST creation
Use cheaper functions
PHP scanner optimization
Reduce var scope
zend_ast_destroy() optimization
Mark zend_ast_export() as "cold".
PHP scanner optimization
Remove unused argument
Keep initialized object_handlers structures in read-only memory.
Upgrade binary SDK version for AppVeyor
Move constant array into read-only memory
bump versions
PHP scanner optimization
Revert "Handle scanner error in first place (don't hide them from ext/tokenizer) and cheaper whitespace handlig."
Handle scanner error in first place (don't hide them from ext/tokenizer) and cheaper whitespace handlig.
Avoid useless iterations
next is 7.2.5
Get rid of useless SET_UNUSED()
Moved compiler helper functions from zend_opcode.c to zend_compile.c
Revert "More accurate symbolic constraints oferflow/unserflow handling (better fix for bug #76074)."
More accurate symbolic constraints oferflow/unserflow handling (better fix for bug #76074).
Forgot NEWs
Forgot NEWS
Use literal as format
Use string literal as format
Provide core includes for the resource compiler by default
Replaced usafe reference from SHM to process memory with SHM to SHM reference
Added NEWS entry
Enable more asan checks
Disable function call under address sanitizer
Add is_countable function
Make some skipped tests run, and fix some skip messages
ext/sockets: make AI_IDN usage optional
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update link
Update to Oniguruma 6.7.1
Test ReflectionZendExtension class
Remove return types from some magic method in protos
Document new configurue options
Disable PGO for phpdbg
Remove unused assignment
Remove unused assignment
Exclude /Qspectre for clang analyzer
Guard platform dependent code
[ci skip] Update NEWS
[ci skip] Update NEWS
Eliminate conditional branches
Added expectation
Avoid double copying
Avoid double copying
Use reference counting instead of duplication
Avoid double copying and string length recalculation
[ci skip] Use float instead of double in proto
Memory leak fix, for arg_info of internal functions with type hints (ZTS build only).
Replaced usafe reference from SHM to process memory with SHM to SHM reference.
Don't keep HashTable.pDestructor in SHM and always set it into ZVAL_PTR_DTOR in zval_array_dup(). Keeping pointer to a function in SHM is not safe because of ASLR.
AST is not COPYABLE anymore and its reference-counter doesn't have to be initialized by 2.
Set and keep HASH_FLAG_STATIC_KEYS for all HashTables stored in SHM (or file cache).
Typo
Reverted e6d6fcedf71a658c49b7c2eb55305cf5970ec681 and overdesign introduced in ae64dd6d566de448d20232436e1aba25c611357c. Now we have just indexex, pointers and linked list od unused buffers.
Include username into the file cache path
Separate duplicated code into a zend_ini_parse_bool() function.
Reflect native instruction set in snap filename
Add intrinsics info to configure output
Switch to better GC address representation
Make distinct between indexes/numbers, GC addresses and pointers to gc_root_buffers. Perform conversion through macros.
correct condition for leaks in run-tests.php
add ability to show valgrind output with --show-mem
GC API cleanup
Added NEWS entry
Switch to siple "commpression" scheme
Combines common codes
micro-optimization
Cleanup
Get rid of casts
Tunning for fast paths
Improve help message
Cleanup
Remove TSRMLS_*
Attempt to fix build with gcc-4.8
Improve GC color checks
Implemented simple adaptive GC threshold selection.
Attempt to fix build again
Attempt to fix build reported fails in containers
GC improvement
fix news date
Tunning for new GC_TYPE_INFO layout
Update NEWS
typo
revert last change, for PHP7 no need to do strlen() + 1 for hash look up.
[BUGFIX] calling php_ini_activate_per_host_config() with correct name length.
Simplify GC_FLAGS cand CG_INFO checks
5.6.35 is next
Change CG_TYPE_INFO() layout to provide more room for GC_INFO()
Use macros to update specific parts of GC_TYPE_INFO() (direct assignments to GC_TYPE(), GC_FLAGS() and GC_INFO() are prohibited)
Constify readonly var
release LiteSpeed SAPI 7.0. add CRIU support. add support for [PATH=] and [HOST=] sections in php.ini
Completely hide GC implementation details into zend_gc.c
Revert "[ci skip] Add missing return types to protos"
Get rid of IS_OBJ_USE_GUARDS and IS_OBJ_HAS_GUARDS flags
7.0.29 next
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
[ci skip] Update NEWS
Avoding memory allocation
Avoding memory allocation
Avoding memory allocation if no translastion found
[ci skip] Update NEWS
[ci skip] Remove space between function name and open parentheses
[ci skip] Add missing return types to protos
[ci skip] Set FPM maintainership
Use int instead of long in protos
Improve similar_text(), reduce recursive call to php_similar_char()
Allow generation of VM map
Test ReflectionClass::getReflectionConstant method
Remove duplicated tests
remove support for string|unicode in tests
improve extension skeleton generator
Reorganize make_real_object() related code
Move exceprional code into helper & zend_fetch_var_address_helper() micro-optimization.
Move result address calculation from specialized handlers to less specialized helpers
Mark exceptional helpers as "cold"
Move exceptional code into helpers
Optimized php_stripslash with SSSE3 instr
Added expectation
Move exceptional code into helpers
Use EXPECT instead of EXPECTF when possible
Move cold code, duplicated by specializer, into helper functions
Sync --enable-native-intrinsics to pecl
[ci skip] Sort recent NEWS entries alphabetically
Update binary tools SDK branch for AppVeyor
Separate slow path with make_real_object() and related code into "cold" function.
[ci skip] run-tests.php: add missing put section
Simplified the codes (the penalty of loading unaligned address is negligible)
Separate cold paths of ISSET_ISEMPTY_DIM_OBJ
fix ZEND_VM_SET_OPCODE_HANDLER cannot set user opcode handler
dos2unix
Add a test for iterating SXE properties by reference
Convert iterator by reference errors to exceptions
Report unknown sections in run-tests.php
Simplify code
Add basic cppcheck suppressions file
Reduce var scope
Added tracer to collect frequency of opcode handler call chains
Added VM instrumentation ability
Don't add empty include path
Elimintate duplicate error message
Reduce struct size by 8 bytes on 64-bit
Remove explicit params count check
Use more jobs with cppcheck
Allow optional ignorance of operator overlaoding. Optimizer takes into account possibility of operator overloading at default optimization level, but ignores this possibility at "unsafe" level (opcache.optimization_level=-1).
Reduce struct size by 8 bytes on 64-bit
Remove duplicated assignment
Reduce struct size by 8 bytes on 64-bit
Refactoring duplicated ZPP with a switch
Share identical arginfos
Remove duplicated informations in tests
Test more functions of ftp
Test more functionalities of SPL
Avoid multiple wcslen() calls
Reduce var scope
Reduce variable scope
Remove effectless assignment
More mysqli func info fixes
Handle overloaded GMP operators in type inference
Disable negative range inference
Avoid multiple wcslen calls
change layout
Move map out of loop
Remove redelcaration of zend_parse_parameters_none
Use zend_parse_parameters_none_throw
Add RC flags in init_func_return_info
Optimized strrev with SSSE3
change argument parsing
Remove unnecessary cast
Remove duplicated assignment
Reduce variable scope
Remove always true condition
Reduce var scope
Reduce var scope
Update NEWS
Explicitly sort live ranges by start opnum
Avoid live range references in opcodes
Handle special case when SSE only requested for 32-bit build
Rework --with-codegen-arch and --enable-native-intrinsics config
Reduce var scope
Remove always true condition
Simplify declaration
Simplify declaration
Wrap var depending on conditional compilation
Simplify REFCOUNTED checks
Don't make expectations about non-constant zval refcauntability
Remove unnecessary conditions and improve assignment
Reduce var scope
Reduce var scope
Reduce variable scope
Added missed "return"
Improved ZPP to reduce amount of generated code.
Move exceptional code into "cold" helpers
Reduce variable scope
Use explicit for more type safety
Reduce variable scope
Remove condition that is always false
Reduce variable scope
Use Z_TYPE_INFO_REFCOUNTED() macro
Optimize "backup" functions of inlined opcode handlers for size
Added ability to manually sort opcode handlers (not used yet)
Added simple VM instrumentation ability
Avoid generation of rarely used specialized handler
Avoid inlining of rarely used handlers
Better error message when fail to find test file
Remove getmxrr alias dns_get_mx test
Optimized fast_memcpy with AVX instructions
Upgrade bundled PCRE2 to 10.31
add pkg-config example in extension skeleton
factorization of duplicated code
Revert "Added return type for some basic functions"
Remove empty sections in tests
Added return type for some basic functions
Now working on 7.2.4-dev
Now working on 7.2.4-dev
bump versions
Extend skipif check
Added SSE3 detection
Revert "Improve conversion loop"
Micro optimization
Extend intrinsics config with AVX and AVX2
Update author info
Optimized base64_encode/decode with SIMD instructions
fix unknown opcode overflow error
Add test for bcpwmod
fix #68406
Removed unused variables
Remove trailing whitespace in inc files
Enhancements and fixes for print_pi in gdbinit
Remove getmxrr alias dns_get_mx test
Sync opcache.optimization_level default value
[Bug 75448] In case of failure, mysqli::prepare() returns NULL instead of FALSE
Align overflow error messages with upstream
Remove tested code
Avoid conditions inside loop
Improve loop vectorization
Improve loop vectorization
Remove unused function
Remove unused files
typo
Update README.GIT-RULES
Refactor testing READMEs
fix #74519 strange behavior of AppendIterator
Use bool instead of boolean
Remove space between function name and open parentheses
Increase ext/ftp coverage
Remove unused variable
Remove unused variable
Match strpos() behavior with mbstring.func_overload
Improve conversion loop
Remove unnecessary CE_STATIC_MEMBERS() checks
Removed "dead" code
One cache slot is enough
Moved "zval.u2.cache_slot" into free room of "zend_op"
Use low bits
Avoid repeatable ARG_SHOULD_BE_SENT_BY_REF() checks in FETCH_*FUNC_ARG and following SEND_VAR_EX. Perform the check once in a new CHECK_FUNC_ARG opcode and reuse in the following FETCH_*FUNC_ARG and SEND_FUNC_ARG (SEND_VAR_EX replacement).
Finer conditions, so /Qspectre is already usable with latest vc15
fix bug #75916 DNS_CAA record results contain garbage
Adjust manual zpp-like error message implementations
Remove no longer necessary type-name special cases
Use bool instead of boolean while throwing a type error
Use int instead of integer in type errors
strcoll isn't always available
Add and fix SKIPIF sections
Use bool instead of boolean in proto
Remove superfluous PHP version check in tests
Remove superfluous SKIPIF sections in more tests
Cleanup some tests - remove unnecessary sections
Bump libcurl requirement to 7.15.5
Script to check the sync of cURL constants with online docs
Add CURLOPT_REQUEST_TARGET constant
Remove checks for unicode.semantics ini option
Simplify E_STRICT handling in mysqli tests
Remove some references to E_STRICT in tests
Remove superfluous SKIPIF sections in tests
Remove superfluous SKIPIF sections in SPL tests
Avoid another unused opline warning
Avoid VM warning if building without global regs
If the target attribute is available, attach it explicitly
Remove superfluous SKIPIF sections in Zend tests
Set max_requests to 0
Remove superfluous SKIPIF sections in Reflection tests
Add missing SKIPIF sections
Add missing SKIPIF section
Use %d when expecting line number in tests
Use int instead of integer in proto
Use 7za for packaging
Sync gdImageCrop() with upstream
Break dependency between IS_TYPE_REFCOUNTED and ZEND_CALL_FREE_EXTRA_ARGS
Added note about changed VM instructions
Switch to the new PHP SDK version on AppVeyor
typo
Ensure there are no line breaks in the error msg
[ci skip] Update NEWS
[ci skip] Update NEWS
Changed CATCH instruction format (extended_value moved into op2, op2 into result, result into extended_value)
Changed FETCH_CONSTANT instruction format (extended_value moved into op1)
Changed FETCH_CLASS instruction format (extended_value moved into op1)
Compress handlers table
Sync with timelib 2017.06
Avoid redundand mask extraction
Avoid redundand mask extraction
Make IS_UNUSED to be zero.
Use correct certs for SNI server tests with separate key and cert
Use correct certs for SNI server tests
Change FETCH/ISSET instruction modifiers: - Get rid of ZEND_ISEMPTY and ZEND_ISSET_ISEMPTY_MASK. Use just single ZEND_ISSET bit to make distinct between isset() and empty() - Use ZEND_FETCH_GLOBAL, ZEND_FETCH_LOCAL and ZEND_FETCH_GLOBAL_LOCK as bitmask - Removed unused ZEND_FETCH_STANDARD - Extended ZEND_FETCH_ARG_MASK
Implement configuration option for explicit native intrinsics
Use the correct freeing function
Remove explicit intval() param count check
Don't loop over indexes in Phar::extractTo()
[ci skip] Update NEWS.
fixed Big_endian issue on s390x for stream test cases
Be consistent in clearing out in php_iconv_string()
Update `mb_preferred_mime_name` tests
Add unknown encoding warning test for mb_encoding_aliases
Simplify returns in generate-phpt
Drop the ext/intl/doc directory
Add RtlSecureZeroMemory to explicit_bzero() compile case
Restore initial values on graceful server restart.
Show the tidyp name, if it was used
Add missing define after e7da9685
Tidy extension update to be able to either use tidy or tidyp at configure time
Revoke the gcc only restriction
Add tests for `json_decode` with depth below 0
ext/session: catch incompatible configure flags earlier.
Reimplement ASCII conversion using aligned routine
Macrify the common operation
Updated to version 2018.3 (2018c)
Empty merge
Updated to version 2018.3 (2018c)
Empty merge
Updated to version 2018.3 (2018c)
Move useful macro into zend_portability.h
Implement intrinsic function resolving per MINIT
Remove padding just merged since 7.3 isn't released yet.
Use Z_EXPECTED_LONG to initialize FAST_ZPP parsing loop
BigEndian fix for ignore_user_abort. Use zend_bool to match OnUpdateBool
Access extra data stored in zval through macros
Update to SQLite 3.22.0
[ci skip] Update NEWS
[ci skip] Update NEWS
Removed commented unoptimized code
Use OBJ_FLAGS() macro to access object flags (even if they are currently stored together with GC_FLAGS)
Use OBJ_FLAGS() macro to access object flags (even if they are currently stored together with GC_FLAGS)
Use HT_FLAGS() macro
Introduce mcros to access HashTable iterators counter
ws
Access HashTable.u.flags through HT_FLAGS() macro.
NetBSD has its own unoptimizable memset version since 2013
Implement SSE2 based ASCII to UTF-16 conversion
Get rid of IS_TYPE_COPYABLE.
Use reference-counting instead of duplication
Only persistent referencecounted  strings should be duplicated.
Usee reference-counting instead of duplication
Avoid useless duplication
Move invariant code out of loop
Use reference-counting instead of duplication and separation, if really necessary.
Removed IS_TYPE_COPYABLE flag from IS_STRING zvals.
Moved IS_CONSTANT_VISITED_MARK, used for protection from recursive self-referencing class constants, from zval.u1.v.type_flags into zval.u2.access_flags.
Updated NEWS
Expand SEPARATE_STRING()
Removed useless SEPARATE_STRING() (zend_string_extend() performs separation anyway)
Clenaup SEPARATE_ZVAL...() macros (the behavior is unchanged)
Add missing closing fold
Eliminate duplication, increment_string() performs it anyway.
Send by reference without duplication
ZVAL_COPY_OR_DUP() instead of ZVAL_DUP()
More effecient array duplication
More effecient array duplication
More effecient conversion
Use ZVAL_COPY() instead og ZVAL_DUP(), because fault is an object
Use zval_copy_ctor_func() instead of _zval_copy_ctor_func().
Add switches for Spectre variant 1 mitigation
Scalar types don't have reference counter
Eliminate duplication
Use ZVAL_DUP() instead of zval_copy_ctor()
Resource is not copyable (just refcounted)
Simplified conversion
Eliminate separations
Eliminate useless separations
Eliminate useless separations
Avoid separation and simlifyed conversion
Don't use ifunc if compiling with __SSE4_2__ deinfed
Eliminate useless separation
Eliminate useless separation
Eliminate useless separations
A cheaper way to clone reference value.
Use SEPARATE_ARRAY
Use SERPARATE_ARRAY
Use SEPARATE_ARRAY
Replaced separation with destructor
Removed useless separation
Avoid array duplication and in-place modification
A cheaper way to reset type flags.
7.0.15 next
Added zendi_smart_streq() for smart string equality check
Inline function
The cpu setup is still needed when ifunc is supported
Avoid EG(vm_interrupt) check on forward JMP
Separate the cpuinfo initialization part and call it at startup
next is 7.2.3
Replace checks with asserts
Removed reference to the obsolete zend_vm_use_old_executor()
Use fastcall calling convention
Added missed header file
Added ZEND_API zend_cpu_supports
Removed recursive call
Put ZEND_FASTCALL into the proper place.
Optimize zval_dtor_func()
[ci skip] Update NEWS
[ci skip] Update NEWS
Added missing #if to allow compilation withput ZEND_MM_CUSTOM
Manual CSE
Added missed PHPAPI
Restore change committed by accident
Allow pecl like usage in ext/phar, closes #2955
Optimized php_addslashes with SSE4.2 instructions
Remove double include of fpm_scoreboard.h
Add test for bug #66960
Sync for upcoming vc++ 15.6 version raise
[ci skip] Update NEWS
[ci skip] Update NEWS
Try to fix yield from GC issues
Simplify non-linear generator yield from tree
Don't directly access refcount in interbase
Avoid duplicate addition of generators in yield from tree
Unify EOL
Extend test, latest cURL ships also with smb and smbs
Cleanup (at persistence stage we may get only "user" functions; regular op_arrays can't be referenced from different places)
Add missing clean sections
[ci skip] Update UPGRADING
Use ZEND_CLOSURE_OBJECT() macro to resolve closure op_array to closure object through address calculation, instead of op_array->prototype reuse. (reapply 781e1573afdc7c336b3577ceabc9c65cafea17e8, now it should be OK).
Improve Closure::call(). Eliminate zend_fcall_info_init() call and reset ZEND_ACC_CLOSURE flag.
Reorder zend_op_array fields for better data locality and packing
Get rid of zend_op_array.early_binding
Revert "Use ZEND_CLOSURE_OBJECT() macro to resolve closure op_array to closure object through address calculation, instead of op_array->prototype reuse." (this patch is incomplete or wrong)
Use ZEND_CLOSURE_OBJECT() macro to resolve closure op_array to closure object through address calculation, instead of op_array->prototype reuse.
Revert "Add possibility to lower timer resolution"
Avoid, most offten unnecessary, memory load.
Add possibility to lower timer resolution
Mark FETCH_OBJ_R and INIT_METHOD_CALL as HOT_OBJ for (UNUSED+CONST and CV+CONST)
Added abiliy to mark object specific handlers with most often used operand types as HOT. (UNUSED+CONST and CV+CONST)
Convert "sparse switch" statements into sequences of "if" with the most probable conditions first
Strength reduction
minor optimize on strstr
Added expectation
cleanup
Remove HashTable holes in functions and class tables.
Removed unused array
Backport narrowing fix to 7.1
Allow commas in specializer conditions
Update NEWS
remove false dup
Implement high resolution monotonic timer function hrtime()
Use stack allocated zvals
Use GC_ADDREF
Avoid abs() type mismatch warnings
net/if.h requires sys/socket.h on OpenBSD
Remove trailing whitespace in C++ files
PHP 7.1 is the new hotness
Change assertion
Optimized FETCH_CLASS before INSTANCEOF out if possible
Don't prevent loading odbc and pdo_odbc for tests
Re-enable ODBC tests
Added a <in deps path> for includes and libs on configure
Use PHP_WIN32
Kill the references to C:\winnt (Windows 2000), which we don't support, also remove the note about Windows NT based OS, as we only support NT anyway
Added entry on UPGRADING
Trailing whitespaces on Zend
Trailing whitespaces on win32
Trailing whitespaces on sapi/*
Trailing whitespaces on ext/*
Happy new year (Update copyright to 2018)
Happy new year (Update copyright to 2018)
Revert "Enable ODBC tests on AppVeyor"
Enable ODBC tests on AppVeyor
Skip on Travis-CI
Extend skip section
2018
missing changelog entries + fix version and date
missing changelog entries
2018
Trailing whitespaces
Enable replacing const to INSTANCEOF
php 5.6.34 is next
Happy new year (Update copyright to 2018)
Skip test for pdo_odbc
[ci skip] update NEWS
Remove unnecessary initialization:w
regenerated with newer re2c
year++
year++
year++
Update NEWS
Use GC_FLAGS_SHIFT in a few more places
Use seialize_precision instead of precision in all json tests
Use ZEND_FAST_CONCAT instead of ZEND_CONCAT for CONST operands.
Use IS_EQUAL instead of CASE when first operand is CV or CONST. Removed CASE handlers that duplicated IS_EQUAL.
Removed useless specialization
Use free_obj for intl ResourceBundle
zend_fcall_info_cache.initialized is removed (zend_fcall_info_cache is initialized if zend_fcall_info_cache.function_handler is set).
zend_fcall_info_cache.initialized is removed (zend_fcall_info_cache is initialized if zend_fcall_info_cache.function_handler is set).
Use zend_hash_find() instead of zend_hash_find_ptr() to avoid double check
Use zend_hash_find() instead of zend_hash_find_ptr() to avoid double check
Updated NEWS
Combine READY_TO_DESTROY, EXTRACT_ZVAL_PTR and FREE_OP_VAR_PTR into single, better optimized, macro.
Use zval constructors instead ZVAL_COPY if we know the types
Add _IS_NUMBER as cast_object() target type
Cheaper reference construction
Avoid overhead of memory allocation and useless referene-counting in implode()
Remove unnecessary type check
Remove unnecessary readobj==writeobj checks
Remove EH_SUPPRESS mode
Revert to Postgres 9.6, AppVeyor seems to have issues with 10
Update tool path
Switch AppVeyor to PostgreSQL 10 for tests
[ci skip] update NEWS
pdo_odbc has no driver API for quoting, skip the test
Separate exceptional code into cold functions.
Ensure expected items delivered in same order
Adapt test
Add info about thread API used
Update libmagic.patch, also reflecting PCRE2 changes
Update libmagic.patch
fileinfo: fix misleading indentation in libmagic
Tell the diff by returning NULL, if system has no ODBC data sources
Templatize driver name in the expected string
Bump libcurl requirement to 7.12.1
Return false for instanceof on literal
Avoid strlen call
NEWS
display headers (buildtime) and library (runtime) versions in phpinfo (libzip >= 1.3.1)
Compile the blacklist pattern with JIT
Avoid strlen call
Remove opcache.inherited_hack
Document removal of opcache.fast_shutdown
Put interned strings into regular SHM memory if there is no space in shared interned_strings_buffer.
fixed "unused function" compilation warning
Use cheaper API
Added integrity check before dfa
Updated NEWS
Transmit phpdbg webdata len in little-endian
Improve explicit_bzero implementation
Add test for bug #75681
Improve fix for bug #75687
Move includes in ps_title.c
Use known string "file" in stream layer
[ci skip] update NEWS
[ci skip] update NEWS
Drop unused code
Drop unused code
Modernize realpath and integrate quick variant into virtual_file_ex
Array addition is not commutative
Remove duplicate handlers for commutative operations
Move constants into read-only data segment
typo
Turn "pdo_stmt_methods" into constants.
Turn "php_stream_wrapper"s into constants Keep non-constant "php_stream_wrapper"s in API functions and callbacks for compatibility.
Move constants into read-only data segment
[ci skip] update NEWS
[ci skip] update NEWS
Move constants into read-only data segment
Move zend_object_iterator_funcs structures into read-only data segment
Use fastcall calling convention for objects and resources API
Manual loop optimizaton. Cost of the loops body is still the same, but the loop headers are improved.
Disable some "bad" GCC optimizations
Improved branch prediction and code locality
Set default value for some properties in generate-phpt
Prep NEWS for PHP 7.2.2
typo
Avoid reallocation and double copying of variable names.
Added special cases for array_diff(), when first argument is an empty array or an array with single element.
Use cheaper API
Use cheaper functions
Add gmp_kronecker()
Add gmp_perfect_power()
Add gmp_lcm()
Add gmp_binomial()
Avoid temporary string creation and destruction.
Reduce number of hash collisions during dulicate address detection.
Sync known vc++ versions in 7.1
Add vc++ 19.12 to the known list
Apply calling convention explicitly to the function, not to the decl.
Use "fastcal" calling convention for internal PHP functions on x86
Remove outdated TODO files
Update coding standards
ext/imap/config.m4: fix ac_cv_u8t_decompose check
Make ini formatting more consistent
Make sizeof formatting consistent
Remove RAND_RANGE() macro
Implement list() reference assignments
Move temporary allocation to the stack
Use cheaper ascii conversion for mode
Revamp fopen implementation, rely on open
Put missing signature into header
Cleanup
Rework mkdir impl and expose wide char variant
Remove dead code
Move declarations
Improve ioutil access impl and refactor tsrm_win32_access
Revamp unlink() implementation and improve error handling
Allow delete-sharing mode for CreateFile by default
Improved shared interned string table implementation (use less memory and more CPU cache friendly)
Use cheaper SEPARATE macros
Removed useless separations
Cleanup type conversion
Cleanup type conversion
Cleanup type conversion
Use array specific functions
Added assertion
SEPARATE_STRING() micro optimization
Avoid duplication
Intern string constant values
typo
Avoid unnecessary duplication
Wrap functions necessary only for ZTS build with #ifdef
Use local labels
Use inline assembler for fast_memcpy()
Optimization of init_func_execute_data()
Removed useless LOAD_OPLINE()
bump versions
Remove tutorial for building IMAP on windows
[ci skip] update NEWS
[ci skip] update NEWS
7.0.28 is next
[ci skip] update NEWS
Use unsigned comparison instructions
Implemented x86 and x86_64 assembler functions for zend_string equality check. They take into account zend_string layout (value alignment and trailing padding) and perform comparison by double or quad words.
fix build with older gccs: label attributes are only available with gcc 5+
Introduce ZEND_EXTENSION() to the Windows build system
Remove this redundant define
Use zend_string_equal*() API for zend_string equality check instead of direct memcmp() usage.
Use dtor unconditionally in error case
Use cheaper functions
fix build of intl/calendar
Rework junit output
Implement junit test results upload to AppVeyor
Consider Xdebug for tmi ini generation, too
Set trailing zero
Use interned strings as variable names
Use cheaper functions
Avoid strings duplication (zend_hash* and printf may work with non zero terminated strings)
Avoid function duplication
Functions must be stored with lowercase keys
Replace always true condition with ZEND_ASSERT()
Avoid visibility checks for classes without predefined properties
Only functions of temporary modules have to be unregistered here
Use interned strings for function names
Intern persistent constant names in first place
Use zend_string_tolower() where it's possible (to avoid reallocations). Allow zend_string_tolower_ex() to create parsistent strings
Try to intern unserualized string keys
Define floorf if system doesn't have it (follow up for 22c48761)
Intern auto global name strings in first place
Revert "Revert "ext/sodium: pwhash: do not warn on low parameters"" This reverts commit a1845b7fdb5916b0951146ca18bb67ca83854733.
[ci skip] update NEWS
[ci skip] update NEWS
Update NEWS
Revert "ext/sodium: pwhash: do not warn on low parameters"
Revert "ext/sodium: throw exceptions instead of errors"
Add configure check for asm goto support
Follow up on bug #75574 for FCGI side
NEWS
NEWS
NEWS
better fix for #75514
ensure no merge commit during submodule update
ext/sodium: throw exceptions instead of errors
[ci skip] update NEWS
[ci skip] update NEWS
CONCAT/FAST_CONCAT micro-optimization
ext/sodium: pwhash: do not warn on low parameters but raise an explicit error if these are too low
Prefer "GNU asm goto" to __builtin_saddl_overflow() for overflow detection. This allows generation of significantly better code.
Keep up with Linux extension to POSIX.1-2001 getcwd()
Sync with the POSIX signature
drop -dev from Zend version
Update NEWS
Update NEWs (added bug entry)
Bugfix net_get_interfaces() on NetBSD
Add net_get_interfaces()
Prepare NEWS file for release - set release date - merge all alpha/beta/RC entries - clean entries already in 7.1
Add note on PAX headers in tarballs
Improved fix
Make sure properties are initialized before cloning
Print PHP version in phpinfo() func html title
Subtract one zval from memset
Add zend_object_alloc() API
Make sure string property/class const values are interned
We don't check for Windows in the win32/ directory, as files here are only compiled on Windows anyway
PCRE is always available, PHP can't be built without it anyway so these checks makes no sense anymore
fix constant defined undefined behavior warning
Introduced zend_hash_find_ex() that may avoid unnecessary hash value check.
Avoid second hash value check
TYPE_CHECK instruction changed. Now it keeps in extended_value a type mask. This makes check for "boolean" cheaper and allows check combination e.g. (is_string($a) || is_null($a))
Don't mix TYPE and TYPE_INFO
Delayed unlikely checks for uninitialized variables
add 7.1 NEW entries
Add test for negative lengths in mb_strcut()
Add tests for mb_language()
typo
Allowed modification of VM stack page size. Exported few functions. Green light for Fibers/Coroutines.
Eliminate cast
Enable JSON1 for bundled libsqlite
63911: Compare opcodes of the op_array to determine different functions
Check for binary_location allocation failure
[ci skip] update NEWS
[ci skip] update NEWS
[ci skip] update NEWS
Switch to ZMM routines, closes #2917
Ensure shift doesn't overflow, closes #2916
seemingly a tiny typo error in pcre module.
Optimized zend_is_true() for objects (in most cases, it doesn't need to call the conversion handler).
Better fix bug #75540 Segfault with libzip 1.3.1 - only 1.3.1 is affected - fix use after free
NEWS
NEWS
NEWS
fix bug #75540 Segfault with libzip 1.3.1
Use appropriate macro
Remove useless condition
Use log1p from the CRT
Keep the compile time condition for the label use
Remove unused assignment
Update SDK version for AppVeyor
Use cheaper checks
Move adjust_for_fetch_type directly after emission
Minor fetch type adjustment cleanup
Backport some printf() fixes to 7.2
Enable and fix printf() format warnings
Reverted incorrect changes to setlocale()
Missed change
Avoid unnecessary reference-counting on strings.
Removed "_" from API functions.
Refactor ASCII to wide conversion
Remove duplicate check for already loaded extension
[ci skip] update NEWS
Add missing ifdef
Remove padding
Refine allocation
Unroll loop for ASCII check
NEWS
Use single memory pool for result metadata and result set.
Add missing var declarations for phpize mode
Regenerate cp map
Cleanup. Make difference between MYSQLND_ROW_BUFFER and MYSQLND_MEMORY_POOL_CHUNK (the last one is completely removed).
Use better buffer reallocation strategy
Embeded zend_list into st_mysqlnd_error_info, to avoid extra allocation/deallocation.
Try to fix AppVeyor build
Reduce sleep intervals in basic sleep tests
Initialize jit global
Clarify bin_to_readable code
Use mnd_emalloc/mnd_efree
Reimplemented MYSQLND_MEMORY_POOL to avoid allocations ouside of pool. Store all data related to result set in the pool.
update NEWS
Update NEWS
Use already available pattern length, fix signedness warnings
Add skipif as this test became only valid with JIT compiled in
Run mysqlmd commands in one step (without separate create/run/free).
Use mnd_erealloc()
Use stack-allocated packets.
Remove unused file
Skip test if no PCRE_JIT_SUPPORT
Added PCRE_JIT_SUPPORT flag
[ci skip] update NEWS
Eliminated redundand code
We don't need to calculate size of offset array, because pcre2_match_data_create() already takes size in pairs.
Put hardcoded value into macro
Patch core for PCRE2 support
Allow creating $_SERVER from $_ENV, but not $_ENV from $_SERVER.
Bugfix#75515 php://streams behaving greedily
next version is 7.2.1
NEWS
NEWS
Avoid overflow
Update NEWS
Treat DATETIME2 columns like DATETIME
Use TDS version attribute to determine whether to skip tests
Expose TDS version as \PDO::DBLIB_ATTR_TDS_VERSION attribute on \PDO instance
More robust handling of stringified column data  - Use at least the FreeTDS maximum when converting datetime data  - Pass buffer length to dbconvert()  - Use dbconvert() return value to set string lengths or handle errors  - Move shared code into shared function
[ci skip] update NEWS
[ci skip] update NEWS
[ci skip] update NEWS
Update README.EXT_SKEL
Optimized parse_iv2()
Output column data for easier debugging
Use Zend MM heap for non-persistent ini entry values.
Don't reintroduce split_bc_num()
bump versions
Updated bundled libsqlite to 3.21.0
Revert "date module, replacing abs call with the llabs's like one due to bigger type"
7.0.27 next
date module, replacing abs call with the llabs's like one due to bigger type
Revert BC break caused by fixing bug #74035
Scale support for bcmod()
[ci skip] Update UPGRADING.INTERNALS
Don't touch inline if C++ is compiled
Mention spl_object_id in UPGRADING notes
Allow trailing commas in function and method calls
Unused var
Removed workaraouns for inconsistent zvals (REFCOUNTED+INTERNED). They should be fixed now.
Don't intern strings in-place if their refcoung greater than 1
fix wrong check of definition_phi->constraint.range.max_ssa_var
erealloc() optimization
Added RC_DEBUG exception
Disable RC_DEBUG for FPM initialisation
Update libs_version.txt
Added RC_DEBUG exception
Added RC_DEBUG exception
Start RC_DEBUG at the end of MINIT and finish in MSHUTDOWN after all worker threads are terminated.
Switch back from "request" interned strings storage to "permanent" in MSHUTDOWN
last_message is always allocated in Zend MM heap
Don't dup after fetch_dimension_const
Small browscap cleanup
Use persistent strings for preloaded phar files
Note to UPGRADING about Spoofchecker::setRestrictionLevel()
Added exceptions for ZEND_RC_DEBUG
Sync and fix tests for ICU 60.1 compat
Added exceptions for ZEND_RC_DEBUG
Use interned strins for output handler aliases and conflict checkers names.
Use interned strings for browscap files parsed at MINIT
Overlad functions once in MINIT (instead of on each requestr in RINIT)
Yet one /nologo
RC manipulation cleanup 2
Revert "Use zend_get_executed_filename_ex"
Made "result", "statement" and "last_message" to always use Zend MM heap. (even for persistent connections these entities don't relive request boundary)
Use interned strings for "magic" property of internal classes. (not copyied into SHM)
Reverted incomplete fix and too strict asserts.
Mark persistent connection related data as "thread-local".
Persistent resources are "thread-local". Register persistent resources through new functions zend_register_persistent_resource()/zend_register_persistent_resource_ex().
PCRE cache is "thread-local"
Allow reference-counting on "thread-local" persistent zvals
Use zend_get_executed_filename_ex
RC manipulation cleanup
Use interned strings for hash algorithm names (not copyied into SHM)
Use interned strings for stream transports
Use Zend MM heap
Avoid reference counting (the value may be a persistent string)
Use size_t instead of int, use more specific format string
Use interned strings for persistent stream wrappers and filters
Use known strings for reflection properties
Remove decade-old commented-out code
Change checks that should be always true into ZEND_ASSERT() (some edge cases may be trapped here).
Workaroud for inconsistent ZVALs in AST produced by compiler (strings may be REFCOUNTED and INTERNED at the same time).
Intern file names and class constants in first place (they may be interned later during constant substitution)
Always calculate calculate string hash value on attempt of interning
Add /nologo
single check is enough
These functions are always available, exif can't be cross version compiled anyway
Added zend_hash_add_new_mem/zend_hash_str_add_new_mem. Use them to add new elements into PCRE cache (we checked the existance before).
Improved zend_hash_str_add/update functions
Use internet strings for EG(ini_entries)
Remove some unnecessary duplications
Remove zend_get_parameters(_ex) APIs
Prevent reference-counting on persistent zvals (internal constants, default properties and constants of internal classes). New macro ZVAL_COPY_OR_DUP() is used perform duplication, if necessary. This should eliminate related race-coditions in ZTS build and prevent reference-counting bugs after unclean shutdown.
Implemented request #62055 (Make run-tests.php support --CGI-- sections)
Rethink the version checks
Proper ICU version check for restriction levels availability
Add missing ICU version check
Prevent leaking x509 and csr resources if it is not requested
Extend and speed up pkey export tests
Rewrite openssl_csr_get_subject test to improve coverage
Add openssl_csr_get_public_key test
Extend openssl_pkcs7_* tests to cover resource cert
openssl: add basic openssl_csr_export_to_file tests
Extend openssl_csr_sign test to cover cert resource
Set different invalid path in openssl_pkcs12_export so it is more unlikely to exist
Extend openssl_x509_parse to cover cert resource
Rename and test resource cert in openssl_x509_checkpurpose test
Extend openssl_x509_check_private_key to test resource cert
Extend openssl_x509_fingerprint test to cover resource cert with sha1
Revert array_slice passthrough optimization
Yet one attempt to mitigate the unzip error on AppVeyor
Ensure SDK is checked out before asking for version
ws
Update UPGRADING.INTERNALS
Don't use the cache dependency, SDK version is handled in script
Remove status check on the SDK repo and add version check
Better fix for bug #75451 (Assertion fails while foreach on empty xpath query)
Use abbrev
Catch with the latest AppVeyor unzip errors
We don't use a specific model for a MAKERNOTE so remove these checks that doesn't do anything anyway
Remove these old comments, as for the TODO, there is already a FR for this
Re-enable AppVeyor cache
make sure run-tests reports exit status upon prerequisite error
Remove implicit constants from test case
Remove --with-libmbfl configure option
Add tests for UConverter::getStandards()
convert spaces to tabs in ext/ftp/tests/server.inc
Add tests for ftp_rename
Don't optimize input arrays with suffix holes
Skip test on PostgreSQL 10
array_slice() passthrough for preserve_keys=true as well
Do not create a new array when slicing all of input array.
Use per-request heap instead of system one
Extend zend_register_class_alias_ex() with additional argument to allow creating persistent or per-request aliases
Makrk persistent resources and references with GC_PERSISTENT flag
Apply upstream patch for CVE-2017-14107
Backport and apply upstream patch for CVE-2017-14107
Encapsulate reference-counting primitives. Prohibit direct update of GC_REFCOUNT(), GC_SET_REFCOUNT(), GC_ADDREF() and GC_DELREF() shoukf be instead. Added mactros to validate reference-counting (disabled for now). These macros are going to be used to eliminate race-condintions during reference-counting on data shared between threads.
Reverted constant related change (this should be handled togrther with ohter constant related places)
Binary SDK 2.0.12 stable
Removed useless reallocations
Backport tests
Restore object copying on magic method calls (It was removed in master only).
Avoid reallocations when concatenate with empty string
Update NEWS
Update NEWS
Zend MM related tunning.
Don't create plist files when using clang analyzer
Reduce smart_string related reallocations and make them Zend MM friendly.
5.6.33 is next
use trusty explicitly
These tests all assume that IPV6 is available.
fix the travis build for PHP-5.6 using precise instead of trusty
fix the travis build for PHP-5.6 using precise instead of trusty
Update NEWS for 7.2.0RC6
Update NEWS for PHP 7.2.0RC5
Parametrize the expected value to avoid platform false positives
Decref default_link when clearing
Avoid HashTable allocations for empty arrays (using zend_empty_array).
Update timezonemap.h, which needs to match the bundled TZ db
[ci skip] update NEWS
[ci skip] update NEWS
[ci skip] update NEWS
[ci skip] update NEWS
Apply upstream patch for CVE-2016-1283
Made run_time_cache to keep "offset" to dynamic properties Buckets (instead of index).
Add support for zlib/level context option
NEWS entry for pg_close() fix
Removed useless reference-counting and copying
Update libmagic.patch
Fail hard when re2c is not found or the version requirement not met
Updated to version 2017.3 (2017c)
Empty merge
Updated to version 2017.3 (2017c)
Empty merge
Updated to version 2017.3 (2017c)
Empty merge
Updated to version 2017.3 (2017c)
Use run-time cache to keep position of dynamic properties in HashTable to access them without hash lookup.
realloc() can return NULL
Renaming cache folder is not a solution, too. Disable cache for now.
Revert "Rename build cache folder and separate sdk"
Rename build cache folder and separate sdk
Revert "Invalidate the whole cache when .appveyor.yml was changed"
Invalidate the whole cache when .appveyor.yml was changed
Remove these ancient ldap parts for Windows thats no longer relevant
Simplify tsrm cache update
Missed skip
With ICU 58+, set the default restriction level to high
Add Spoofchecker::setRestrictionLevel() and corresponding constans
Add TZ and Unicode versions to intl MINFO
Reenable AppVeyor cache
Disable AppVeyor cache to unlock build
Rework these new tests to match with diffs in ICU 58, 59 and upcoming 60
[ci skip] Update NEWS
[skip ci] Update NEWS
[ci skip] Update NEWS
Add test for newer ICU version
Further test fixes for ICU >= 58
Version checks
Yet two wrong version checks
Sync some tests for compat with ICU 58.1, PHP 7.1+ part
Sync some tests for compat with ICU 58.1+
Add skip for incompatible ICU version
Add test for strnatcmp() align left cases
Clean and sync .gitignore
Update filter docs and tests
Remove tidy examples
Remove tokenizer PHP example script
Remove PHP code examples from xmlreader
Refactor ext/phar License info
Add tests to XMLReader::expand error paths
Update .editorconfig with some more configs
Remove CHANGES from sapi/cgi
Convert some mysqlnd file encodings to UTF-8
Escape newline on curl config.m4
Constify key access for hash and formal params
Extend zend_string API to avoid reallocation in zend_string_init_interned()
Move to php-sdk-2.0.0beta3 for Appveyor
Moved ZCG(function_table) back into accel_acrivate. It should be unique per thread.
Move a part of opcache initialization into post_startup phase (when all extensions already loaded).
Backport 7ff13badda58b966ff8fbcc61add48bb5b14117b into 7.0+
Cleanup cfg flags & Added ZEND_FUNC_HAS_EXTENED_INFO
Implemented request #69592: allow 0-column rowsets to be skipped automatically
One more folder to delete in AppVeyor image
Added test
Make assertions in DO_ICALL and CALL_TRAMPOLINE to be consistent with DO_FCALL.
Revert "Allow internal functions to return values by reference (this was disabled in implementation of DO_ICALL, but enabled in DO_FCALL)."
Allow internal functions to return values by reference (this was disabled in implementation of DO_ICALL, but enabled in DO_FCALL). However, don't require internal functions returning by reference to return a reference. Mark unserialize() as returning by reference and remove unwrap_reference hack, to allow proper returning of self referenced arrays using a reference. Currently unserialize() is the only internal function that may return a reference.
Try to fix test
Reuse interned strings from opcache SHM, if possible.
Move to next binary SDK version for AppVeyor
Prevent crash on ext/pdo_mysql/tests/bug_39858.phpt when built with libmysql
Properly fix #75363 and address some other leaks with cert
Remove PHP code examples from xmlwriter extension
Update NEWS
Update NEWS
Prevent from being affected by local php.ini
Added skipf
`memcmp` begins from the second char.
PHP must not create circular arrays when element is assigned by value.
Small improvement with zend_memnstr (tianhe1986)
It looks like i should've taken joint response on ext/fileinfo long ago
Put php-sdk-2.0.12beta1 for AppVeyor
[ci skip] update NEWS
Cleanup irrelevant info
Upgrade bundled libmagic to 5.31
Test requires mbstring – skip if not available
Revert "Update NEWS for PHP 7.2.0RC4"
Revert "Update NEWS for 7.2.0RC5"
Update NEWS for 7.2.0RC5
Update NEWS for PHP 7.2.0RC4
bump version
AST don't have to be COPYABLE anymore.
[ci skip] Add NEWS entry for bug #75349
Update NEWS for 7.2.0RC5
Update NEWS for PHP 7.2.0RC4
Renumber types and type_flags
Always use IS_CONSTANT_AST (IS_CONSTANT is removed).
Move dev to 7.0.26
Make GMP more usable by third-party extensions.
Changed zend_ast_ref structure to use only one allocation, removing dichotomy between heap/arena ASTs.
Use zval_ptr_dtor_nogc() in places where circular zvals are not possible
Update README information for the libmbfl library
Refactor mbstring READMEs
Remove code examples from dom extension
Remove old apache_hooks occurrence
Remove some old apache2filter occurrences
Remove unused Travis configuration for sapi/phpdbg
Remove README from ext/tidy in favor of the PHP docs
Remove outdated README from ext/com_dotnet
Remove done TODO file from date extension
Bugfix #74556 stream_socket_get_name() returns null bytes on MacOS
Add line numbers to Optimizer debug output
Add line numbers to Opcache's zend_dump_op() debug output
HASH_FLAG_PERSISTENT renamed into IS_ARRAY_PERSISTENT and moved into GC_FLAGS (to be consistent with IS_STR_PERSISTENT).
Refactored recursion pretection
Join untracked files to root .gitignore
Remove ident gitattribute for Zend/RFC/
Remove PHP examples from simplexml
Remove enchant PHP example
Use PHP_VERSION for exif
Removed unused flags
Changed the way VM accesses constant operands in 64-bit builds.
Bumped ext/oci8 version
Don't pass useless arguments
Use dereferenced value
Remove done TODO line from ext/date
Remove outdated README from ext/gmp
Remove exif PHP example files
Typo in status.html
Change ident gitattribute for ext/ext_skel.php
Remove ident gitattribute for ext/zip/php_zip.c
NEWS
NEWS
ext/sodium: untab tests
ext/sodium: import secretstream test
ext/sodium: sodium_compare() is always available
ext/sodium: fix funky indentation
ext/sodium: move pwhash_scrypt() after pwhash()
ext/sodium: checks for crypto_box_SEALBYTES are not required
ext/sodium: explicitly include <string.h>
ext/sodium: zend_parse_parameters -> zend_parse_parameters_throw
ext/sodium: fix funky indent on zend_parse_parameters_throw() calls
ext/sodium: import bindings for secretstream
ext/sodium: add crypto_pwhash_str_needs_rehash()
ext/sodium: +base64 codecs (timing-safe)
ext/sodium: add arginfo definitions that will be required later
ext/sodium: sort prototypes
Restored code for BOOL variables
NEWS
Guard against AI_NUMERICSERV not being defined.
Guard against AI_NUMERICSERV not being defined.
ext/sodium: fix pwhash_argon2i test
Remove done and old TODO file from ext/mysqli
Remove EXPERIMENTAL files from fileinfo and pdo_odbc stable extensions
NEWS
Revert --with-pcre-valgrind by default in debug build
Apply upstream patch for CVE-2016-1283
[ci skip] hash_hmac_algos() is new in PHP 7.2.0
Updated NEWS
fix bug #75222 DateInterval microseconds property always 0
ext/sodium: call crypto_pwhash_argon2id() explicitly if required
ext/sodium: avoid tautological comparisons
ext/sodium: signing empty messages is fine
Split CFG after RECV independently from ZEND_ACC_HAS_TYPE_HINTS flag.
Update NEWS for 7.2.0RC4
Update NEWS for PHP 7.2.0RC3
Create $http_response_header even if not used
Change EXTENSIONS file encoding from iso-8859-1 to utf-8
Remove some old sapi/apache_hooks and sapi/apache leftovers
Added missed ~
Remove empty and done TODO file for CLI SAPI
Update NEWS
Update NEWS
Compiler warning
Using "enum" types as bit-fields is not portable.
ext/sodium: avoid negations on unsigned values
Added support for VLV controls request and response
Added support for SORT controls
Added skip when control are not supported by the test ldap server
Avoid memory leak when creating paged control value
Added ldap_rename_ext and its test
Indexing controls by OID when parsing them
Avoid returning iscritical field when parsing response controls
Added ldap_delete_ext and its test
Added ldap_mod_*_ext methods for modification with controls
Added ldap_add_ext and preread/postread support and tests
Added ldap_bind_ext to pass controls and get result object
Improved a bit error handling to avoid passing commands with incomplete controls
Added support and test for LDAP_CONTROL_VALUESRETURNFILTER
Removed client controls alltogether
Added support for controls in ldap_modify_batch
Added controls support to ldap_compare
Added controls support to ldap_rename
Using new control syntax for MANAGEDSAIT control when deleting references
Added controls support to ldap_delete
Added support for controls in ldap_add, ldap_modify, ldap_mod_*
Added a test for assertion control
Added a test for PROXY_AUTHZ control on ldap_exop
Added support for assert control value encoding
Added controls support to ldap_exop
Added controls support to ldap_search, ldap_list and ldap_read.
Added controls support to ldap_parse_result and ldap_exop_passwd
Sync json parser defs
Refactored array creation API. array_init() and array_init_size() are converted into macros calling zend_new_array(). They are not functions anymore and don't return any values.
ext/sodium: throw an exception if only the prefix of a hex string is valid
rename test
[ci skip] Update NEWS
Use private names for new libpcre symbols.
NEWS
Remove pointless preprocessor directive
[ci skip] Update UPGRADING wrt. PR 2742
Optimize POST_INC_OBJ + FREE into PRE_INC_OBJ (in the same way as simple POST_INC)
Allow removing of unused func_get_args() and func_get_num_args().
Property access micro-optimization. (ZEND_WRONG_PROPERTY_OFFSET and ZEND_DYNAMIC_PROPERTY_OFFSET are hidden, use one comparison instead of two on fast paths. "Negative" offsets are reserved for future optimizations).
Update lib_versions.txt
Move to next binary SDK version for AppVeyor
Removed IS_TYPE_COPYABLE flag.
reworked test
Structures comming from "unknown sources" should be marked as escaping.
Avoid redundand iterations, checks and reloads
added credits for #phptestfest
reworked the tests, created test cases for defalte, gzip and unsupported brotli
typo
Added test. Invalid usage doesn't affect escape_satte of arrays/objects and shouldn't prevent SCCP on "proper" paths.
Revert "Mark incorrectly used arrays and objects as escaping"
Added debug output
Improved reference dependencies analysis
[ci skip] update NEWS
[ci skip] update NEWS
Mark incorrectly used arrays and objects as escaping
added basic zlib_get_coding_type() test
fix tests for 32-bit
Properly update string type flags
Revert "Properly update string type flags"
Properly update string type flags
Update NEWS for 7.2.0RC3
Update NEWS for PHP 7.2.0RC2
bump versions
drop symbol definition, and not defined anywhere
[ci skip] update NEWS
[ci skip] update NEWS
[ci skip] update NEWS
Move dev to 7.0.25
Disable eliminatin of empty basic block with multiple predecessors
Add test for ftp functions with bogus resource
Refactor ftp_append test to clean temporary files
fix bug #75173 incorrect behavior of AppendIterator::append in foreach loop
Narrow typeinfos down for zend_parse_paramenters_none
[ci-skip] Add NEWS entry for bug #75185
[ci-skip] Add missing UPGRADING entry for commit 0d0f7cd
Fork test to keep up with libxsl >= 1.1.30
Add symbol to libxml exports
Improved JMP optimization
Use system libzip by default
Not sure why these lines are removed :<
Update NEWS
They should always be equal (zend_call_graph.c:#109)
Optimize truncation to zero scale in bc_raisemod()
Added gd func infos
Added fileinfo func infos
Remove unused member
Collect all jump optimisations in a single optimization pass. Run this pass twice (after SCCP and after DCE).
Added ctype func infos
Added getext func infos
Added filter func infos
Add exif func infos
Add bcmath func infos
Func info for pgsql
Complete func infos for session and sodium
Do not include BC for zend_symbtable_add_new on 7.2/master
Add BC define for users of the typoed zend_symbtable_add_new
Improve sodium "invalid parameters" error messages
Complete func info for mysqli
Removing client controls attribute from ldap_exop signature
Revert "drop support for bundled libzip (linux)"
Revert "try to switch to something more recent than a 5 years old distro..."
remove bundled libzip config for .w32
try to switch to something more recent than a 5 years old distro...
add libzip-dev for travis build
UPGRADING
drop support for bundled libzip (linux)
Add test for rand with inverted min and max
Improving a bit code quality in ldap_exop function
fixes PR #2722, no clue how it broke ...
Add test for curl_mutli_close on non curl multi resource
Add support for SQLite open flags
Add tests for sapi/cli option combinations
fixed mbstring extension compiled broken with archlinux
Add tests for setrawcookie function for success scenario
Comments
Add missing null termination
Add test for invalid SoapFault parameters
Use zpp_throw() in SOAP constructors
Test is_soap_fault() function
Update NEWS that did not get updated in #2442
Remove unused temporary variables
Control transfer opcodes can't be replaced by QM_ASSIGN
Proper replacing of constant call
Replace used constant instructions by QM_ASSIGN
UPGRADING
NEWS
Upgrade timelib to 2017.05beta9
Remove redundant checks in ext/gd
Add test for bug #75155
NEWS
improve warn (bzip2 requires libzip >= 1.3.0)
libzip 1.3.0 supports also bz2 compression
Prevent duplicate debug output
Added skipif.inc
Yet one DLL to ignore
Remove dead allocations of non-escaping objects
Objects with constructors escape
Make for exclusion per regex
Extend ignore list for DLLs to not to look after
Copy dependencies of the core DLL in `nmake snap` for statically-compiled extensions when packaging builds
Improved check to avoid removing of dead code that may throw exception.
Remove dead construction of non-escaping arrays and objects
Extend SCCP to support properties of non-escaping objects
move AC_DEFINE in the right position (in bundled lib conditon)
Automatically load OpenSSL configuration file
Do not explicitly initialize and clean up OpenSSL for OpenSSL 1.1
Support for implicit array/object allocations
Detect undefined variable usage
Extend SCCP pass with support for elements of non-escaping arrays
Removed support for BeOS, development for BeOS was supported 17 years ago.
Remove this old obsolete TODO file
ext/sodium: the second parameter of sodium_hex2bin() is optional
ext/sodium: AI_StringRef_And_String -> AI_StringRefAndString for consistency
ext/sodium: sort functions list
Update NEWS for 7.2.0RC2
Update NEWS for PHP 7.2.0RC1
Added few Optimizer tests
Accurate handling of ZEND_ASSIGN_OBJ
Check for user defined classes
Escpaing objects can't have destructors, so their assignment don't make side effects and may be eliminated.
Aliased varaibles may escape
Make assignment to elements of non-esaping arrays and objects removable by DCE pass.
Enable escape analysis
Include variables with false dependencies into equi escape sets.
Move to next bin SDK version for AppVeyor
Improve pkg-config usage - use default path when run using --with-curl=/usr (for debian) - fallback to headers search when libcurl.pc not found - issue warnings for explanation
Update to SQLite 3.20.1
Added method DateTime::createFromImmutable()
Sync strlcat() implementation
Remove superfluous checks of register_internal_class retval
NEWS
Switch from curl-config to pkg-config for curl extension
update libs versions
Test that readline respects open_basedir
Enable PGO for Opcache
Switch to non deprecated PGO options
sodium ext: if it's a length, call it "length"!
sodium ext: add bindings for sodium_pad() and sodium_unpad()
sodium ext: restore sodium_remove_param_values_from_backtrace() call
sodium ext: sync sodium_crypto_kdf_derive_from_key() with the standalone ext
sodium ext: Constants were renamed SODIUM_* Adjust error messages accordingly.
From documentation, only the sign of returned value is relevant
Jani is not a member of the QA team anymore, and have not been for years
Kill compiler warnings in ext/phar
Kill compiler warnings in ext/standard
Kill compiler warnings in ext/xml
Kill compiler warnings in ext/hash
Kill a compiler warning in ext/mysqlnd
Kill compiler warnings in ext/com_dotnet
Kill a compiler warning
Use ZEND_HASH_APPLY_SHIFT macro instead of hard-coded literal
Consolidate Valgrind logic into a single var and class
constify some vars that are never changed once set
Initial implementation of Escape Analysis (disabled yet).
timelib now have a function for this, use it
sodium ext: If sodium_init() returns 1, this is fine.
Update NEWS
Update NEWS
Update NEWS
Correct default value in master
Correct default value
Attempt to fix unstable test
Retroactively correct NEWS omission
Use wide char API for the event log
[ci skip] update NEWS
openssl: add basic openssl_get_cert_locations test
Remove param values from backtrace in exception thrown from ZPP throw
Change zend_parse_parameters() to zend_parse_parameters_throw() in ext/sodium
Replace magic values with constants
Follow up on ed9c16ad5def47d1c8ae2787f53dccfac893ce5f
Turn php_syslog() into wrapper for syslog and split lines
[ci skip] update NEWS
[ci skip] update NEWS
[ci skip] update NEWS
NEWS
NEWS
NEWS
Add dump env target
Make ext/zend_test report itself as zend-test in `php -m'
We don't use these makefiles for compiling PHP extensions anymore (PHP4 era)
Get rid of all these old package[2].xml files, most of these had no had a release since PHP4, or any release at all in close to 10 years, some even did not have a package registered at pecl
Implemented FR #74781 (Add the latest PG_DIAG_* const)
More accurate reference counting inference
bump versions
EXPECT instead of EXPECTF
cli_get_process_title() may not be empty before set
Not skipping test on Windows and test against CLI instead
Added: tests for cli_get_process_title / cli_set_process_title
Do the revert properly, and put back fraction support in 7.1
Revert "Upgrade timelib to 2017.05beta7"
Revert "Remove removed header files from configuration files."
Added timelib version to phpinfo()
Added few more jump threading optimisation patterns
cleanup
Remove removed header files from configuration files.
Upgrade timelib to 2017.05beta7
Made test 32/64-bit independent
Skip 64-bit related test
Update NEWS for 7.2.0RC1
Update NEWS for PHP 7.2.0beta3
move dev to 7.0.24
Update NEWS
Update NEWS
Prepare for PECL release
Test cleanup improvements, files might be locked in the test process
fix test cleanup
[ci skip] update NEWS
[ci skip] update NEWS
Order live ranges according to "start" position
Sync OCI8 on PHP 7.x branches
Skip this test if ext/session is not available
Note deprecation of $errcontext
Added missing config.x.in files for ext_skel
Reset utf8_invalid in json scanner
Update NEWs
Update NEWS
Remove mistakingly added line
Sync makefile options for phpize
sodium ext: Use _ietf_ vs _IETF_ consistently
sodium ext: No need for #ifdef crypto_aead_chacha20poly1305_IETF_
Sodium ext: Isolate a return statement for consistency
sodium ext: The default password hashing function is not supposed to be Argon2i
sodium ext: long -> zend_long
sodium ext: Add missing "return" statements after zend_throw_exception()
JSON: fix config.w32 / Install headers on windows
Add new enum options defined in MySQL 5.7
Unify EOL
fix test target for phpize
Regenerate by re2c 0.16
Refactor php_url struct to save memory dup in common cases
Optimized ucfirst(Avoid duping string if possible)
Optimize mb_chr()
Optimize mb_ord()
Store input and output filters in mbfl encodings
Separate mbfl filters into three categories
Check for empty string in mb_ord()
Added controls parameters to ldap_exop so that control support can be added later
Add test for curl_share_close
win32 for pdo_sqlite
use AC_DEFINE + win32
Also check for invalid codepoints in mb_ord()
Return false on invalid codepoint in mb_chr()
Always use Unicode codepoints in mb_ord() and mb_chr()
Revert/fix substitution character fallback
Revert/fix mb_substitute_character() codepoint checks
Change getimagesize() and friends to report image/bmp
Increase expected timing on Travis
Rework automatic interactive cli activation
[ci skip] update NEWS
[ci skip] update NEWS
update NEWS
Adjust ftp arginfos for optional mode
Default ftp_append() mode to FTPTYPE_IMAGE
Add ftp_append to create a new file or append data to an existing file (RFC959)
Bug #74975: Different serialization for classes
take care of compile warnings.
Implement spl_object_id(object $x) : int
fix build with old system libsqlite (sqlite3_close_v2 may be missing)
fix build with old system libsqlite (sqlite3_errstr may be missing)
fixed #endif comments
Update NEWS
Update NEWS for 7.2.0beta3
Update NEWS for PHP 7.2.0beta2
Update to SQLite 3.20.0
Optimize array_unique()
Updated NEWS
Updated NEWS
Updated NEWS
Test to cover the change in ce1a0d97
fix test
fix NULL deref
Update NEWS
Req #74963 (Improved error message on fetching property of non-object)
Req #74963 (Improved error message on fetching property of non-object)
Reduce EXIF test image sizes, there is still one large image left that I will look into reducing if possible (bug50845.jpg)
Lowercase the file extension
Reduce EXIF test image sizes, there is still one large image left that I will look into reducing if possible (bug50845.jpg)
Lowercase the file extension
remove casts
remove dup of the binary file, rely on a test runtime copy instead
Shrink another large image
sodium ext: skip scrypt if it is not available
sodium ext: fix tests/pwhash_argon2i description
sodium ext: check hash length for scrypt
sodium ext: no need for #ifdef crypto_aead_chacha20poly1305_IETF_NPUBBYTES
sodium ext: check that message sizes are safe, to avoid hitting abort() in libsodium
Shrink test image
sodium ext: use unexpand -t 4 --first-only to convert from spaces to tabs
It's `--SKIPIF--`, not `--SKIP--`
Skip this test if ext/gd is not available
Add support for webp in imagecreatefromstring
sodium ext: let crypto_pwhash() accept an optional algorithm identifier
fix c89 compat
Reduce struct size, on 64-bit by 8 bytes each
remove cast
adjust signature and remove casts
move zend_ato*() to size_t and remove casts
remove cast
Implement full case mapping
Use case-folding for case insensitive comparisons
Use MPH for case maps
Avoid some unnecessary mbfl_strlen() calculations
Don't store titlecase if same as uppercase
Drop implementation-specific character properties
ODBC Solid is not supported in our build system on Windows, so remove this #ifdef
Removed support for ODBCRouter
add missing makefile fragment for .w32
relax test on travis
fix up porting mistakes
Move cwd_state and path related routines to size_t
Simpler fix for #74974
Update NEWS
Update NEWS
Bugfix #74993 Wrong reflection param into for some intl: lookup_*() methods
[ci skip] update NEWS
[ci skip] update NEWS
[ci skip] update NEWS
[ci skip] update NEWS
Update NEWS
Update NEWS
Expose oci_unregister_taf_callback()
Update NEWS
Skip these enchant tests if no dicts or providers are installed
fix data types
size_t fixes
Handle character ranges in ucgendat generically
Port ucgendat to PHP
Add warning for change session id when session is active
add new test to uncoverage SQLite3 method.
Make transfer mode optional, set default to binary
Remove obsolete function names from CODING_STANDARDS file
minor loop optimizations, closes #2633
Bail on invalid configure args if this is a snapshot build (as suggested by Anatol)
switch to binary sdk 2.0.9 for appveyor
Update copyright year to 2017
[ci skip] update NEWS
Add test for bug #74903
Followup on 0ec147d3 for another place
Ensure binary mode for OpenSSL I/O
Followup on 0ec147d3 for another place
Ensure binary mode for OpenSSL I/O
Combine conditions for the automatic interactive console activation
sodium ext: don't reinvent sodium_increment() and sodium_add()
openssl: Add openssl_pkcs12_export_to_file tests
Update PHP 5 version to 7 in header comments
Add MBFL_SUBSTR_TO_END mode to mbfl_substr
Add hash_hmac_algos() for filtered is_crypto methods
Remove more obsolete length checks
Change layout of case mapping table
remove cast
fix warnings and datatype
adjust datatype, used for position handling
Adjust datatypes and reorder which saves 8 bytes on 64-bit
Update Unicode data for Unicode 10
Update ucgendat for more bidi properties
Another fix for bug #69267
Partial fix for bug #69267
Remove confusing null checks in mb_send_mail
fix skipif
Change Côme's name to Come, sorry but Visual Studio just butchers everything =(
Redesigned ext_skel to be written entirely in PHP with no dependencies, this means it will now run on Windows without Cygwin and other nonsense.
FAST_ZPP variant of zend_parse_parameters_none(), ZEND_PARSE_PARAMETERS_NONE()
Use compatability zend_isnan() instead of POSIX isnan()
touch yet more places for datatypes
add missing header
--with-mp is only available for VS anyway, so don't make the argument available if it doesn't have any effect
sync libmbfl allocator with the size_t changes
Mitigation for ssize_t issue in 22a5f554a8766d63fd2c2ce91a90ebacb13c0f6a
sodium ext: require libsodium >= 1.0.8
sodium ext: define crypto_aead_chacha20poly1305_ietf_KEYBYTES if needed
sodium ext: remove redundant and obsolete macros
sodium ext: remove redundant and obsolete macros
[ci skip] update NEWS
[ci skip] update NEWS
[ci skip] update NEWS
win32/install.txt is no more, just copy INSTALL instead
remove casts and ensure no out of bounds access
Free the HMODULE handle after use
Free the HMODULE handle after use
Free the HMODULE handle after use
Test case for bug #64739
Point to the online documentation for installation of PHP in INSTALL, and remove the almost duplicate win32/install.txt, one place for all docs should be enough
Don't bail configure on Windows if a configure argument was not found, this mimics that of the Unix build system.
sodium ext: delete copypasta from sodium_crypto_kdf_derive_from_key()
sodium ext: use crypto_scalarmult_BYTES for points coordinates
sodium ext: clear the hash state after we're done hashing
sodium ext: drop unused code /via @remicollet
Update NEWS
Update NEWS
Move the define into the header to reduce diff for future upgrade
Update NEWS
Update NEWS
sodium ext: use crypto_scalarmult_BYTES for points coordinates
fixed comments
increment sdk version
Only write single terminating byte
Use fast zpp in mb_strlen()
Directly use encodings instead of no_encoding in libmbfl
remove another cygwin instance in AppVeyor run
sodium ext: clear the hash state after we're done hashing
Temporary fix for windows build
Free last_used_encoding_name in RSHUTDOWN
Added ldap_exop_refresh helper for EXOP REFRESH operation on dds overlay
Reduce number of encoding conversions in case conversion
Optimize php_unicode_tolower/upper for ASCII
Add basic mbstring encoding cache
Add php_mb_get_no_encoding() helper function
Switch libmbfl to use size_t
Optimize php_unicode_is_lower/upper for ASCII
Using LDAP_CONTROL_MANAGEDSAIT constant in ldap tests instead of string oid
Directly accept encoding in php_unicode_convert_case()
Add php_mb_get_encoding() convenience function
Optimize php_unicode_is_prop()
Avoid unnecessary encoding lookups in mbstring
fix dir separator in test
Do not allow using traits/interfaces/abstract classes as stream wrappers
Remove version checks for MySQL < 5.0
Add oci8_failover.c to config.w32, follow up for commit 1b797f7a
Keep resource of enclosing stream, because it may be referenced from other place(s). This fixes valgrind warnings on Zend/tests/type_declarations/scalar_basic.phpt
Separate the fast-patch
Convert CONCAT into FAST_CONCAT for non-object operands
Reset globals on startup or restart
Remove dead live ranges and FREE instructions
Remove live ranges
Removed Bird(broken)step support from ODBC
Remove old references to SAPIs and extensions no longer in the core
Don't reuse compare_function operands
Add notes for cutting release branches
Remove dead JMP/JMPZ/JMPNZ/JMPZNZ (DCE pass can't remove them)
Constant evaluation of few more constant functions
Disabled compile-time constant DOUBLE to STRING evaluation (its result depends on run-time 'precision' setting)
bump versions
Leftover from 5230541ef59e0637d5522293a7d099bf18ce6af3
Update NEWS for 7.2.0beta2
Update NEWS for PHP 7.2.0beta1
sodium ext: drop unused code /via @remicollet
Prepare for PHP 7.3
Bump all API numbers in prep for 7.2 fork
sodium ext: implement sodium_crypto_kdf()
Exclude ext/ftp from AppVeyor test run
move to 7.0.23 for dev
fix regression introduced by 0782a7fc6314c8bd3cbfd57f12d0479bf9cc8dc7
Added NEWS entry
gc_check_possible_root() may throw exception.
Constant evaluation of in_array() (support for more cases).
fix missing var for phpize
Add support for OpenSSL security level
Constant evaluation of in_array() (support for more cases).
Separate ISSET_ISEMPTY_CV/UNSET_CV from ISSET_ISEMPTY_VAR/UNSET_VAR
Removed vim mode lines. zend_vm_opcodes.h loses these lines after regeneration. Lines in zend_vm_def.h lead to insertion inthe middle of zend_vm_execute.h.
Allocate additional slot for third argument
fix new password related pieces wrt failing tests
fix typo
fix missing var for phpize
Refactor password_hash()
Refactor password.c
Provide zend_string wrappers for php_base64_(en|de)code
Make functions in openssl.c more consistent
Make consitent naming and improve CS in xp_ssl
Allow setting SNI cert and pk in separate files
Bump PHP_JSON_VERSION to 1.6.0
[ci skip] Remove CSV leftovers from json code - $Id$
Introduce internal php_json_encode_ex to allow extensions setting depth
Add JSON_INVALID_UTF8_SUBSTITUTE and JSON_INVALID_UTF8_IGNORE
Add test for bug #74923
update NEWS
update NEWS
Tweak
Added goblal optimisation passes based on data flow analyses using SSA form: SCCP - Sparse Conditional Constant Propagation, DCE - Dead Code Elimination and removing of unused local variablesi.
Bump OCI8 version for recent patch
WS
Ensure that the stream position is kept between reads
Turn off EXIF_DEBUG so Travis don't complain at me
Don't add a new line to undefined tags in EXIF_DEBUG mode
update NEWS
disable --with-pcre-valgrind on travis
fix default args for --with-pcre-valgrind
sodium ext: remove unused sodium_randombytes_*() prototypes
Enable valgrind support for PCRE by default in debug builds
add oniguruma.patch to ease future upgrades
SIZEOF_SIZE_T doesn't exist on AIX and POWER8 (ppc64le), keep using SIZEOF_LONG
fix fold
add next vc15 toolset to the list
Revert "Enable whole program optimization for builds without PGO, too"
extend comment
cleanup discontinued target
sodium ext: add bindings for keygen() functions
sodium ext: sort prototypes
Resources should be closed during object destructioin, not during freeing.
Guard against AppVeyor losing deps issue
increase poll timeout as false positives mitigation
Value of EG(user_exception_handler) should't relive request boundary
sodium ext: remove function names before exception messages
sodium ext: update the crypto_kx_*() API to the libsodium one
Revert "fix macro redifinitions"
Remove debug code
We need to check for the length here too, or we crash and no one likes that! :(
* Implemented #65187 (exif_read_data/thumbnail: add support for stream resource) * ext/exif now uses FAST_ZPP
Remove extraneous configure flag
Revert "remove excessive checks and fix warnings"
parametrize zip names
Upgrade bundled PCRE to 8.41
Updated NEWS file with LDAP changes
Filled in NEWS file with ext/ldap last modifications
change order, allow to build as shared extension
restore file deleted by mistake in a merge commit
remove excessive checks and fix warnings
fix macro redifinitions
fix symbol availability and ws
Remove this for now, as not found
fix authors
NEWS for Sodium
fix CREDITS file
Squashed commit - Add ext/sodium
update NEWS
update NEWS
switch to next binary tools sdk version
fix datatype
Revert "Add more constants, improve comments, and add tests"
eliminate casts
remove checks for eol dependencies
improve test
Small fix in ext/ldap, Moved vars definitions to the beginning of the block using them
ZipArchive implements countable, added ZipArchive::count() method
Upgrading note for #74837
Implement Countable for DomNodeList and DOMNamedNodeMap (Request #74837)
#73594 tests only check the extra params if dns_get_record is successful
fix uninitialized var
fix comparison warning
comply with POSIX signature
fix warning
remove some casts
cleanup casts
remove useless cast
eliminate casts
sync vim mode lines in main
[ci skip] update NEWS
[ci skip] update NEWS
[ci skip] update NEWS
Silent compiler warning
Deprecated the read_exif_data() alias
Add myself as exif maintainer
update libs versions
Added test case for bug #73115 which was fixed by recently fixed bugs
We currently don't use the guessing code, so don't compile it
Add missing NEWS entry, update UPGRADING
This should be EXPECT instead of EXPECTF
fix command
Expand sb's name and capitalize my own
Write the URL on a new line, so that it is easier copyable
Added missed dump of "main" script code
replace the stack var by a macro
[ci skip] sync NEWS
minor fix for web announce
news entry for 74819
news entry for 74651
news entry for 74111
news entry for 74435
news entry for 74603
add missing NEWS entry for #74087 and also fix the formatting
move NEWS entry to the correct place, also bump the version
Keep information about SSA variables, that may be modified indirectly.
Added constants for known ldap controls OID and tests for ldap_get/set_option for controls
Added support for controls to ldap_get_option
[ci skip] sync NEWS
NEWS for oniguruma
Patch from the upstream git https://github.com/kkos/oniguruma/issues/60 (CVE-2017-9228)
Patch from the upstream git https://github.com/kkos/oniguruma/issues/59 (CVE-2017-9229) b690371bbf97794b4a1d3f295d4fb9a8b05d402d Modified for onig 5.9.6
Patch from the upstream git https://github.com/kkos/oniguruma/issues/58 (CVE-2017-9227)
Patch from the upstream git https://github.com/kkos/oniguruma/issues/57 (CVE-2017-9224)
Patch from the upstream git https://github.com/kkos/oniguruma/issues/55 (CVE-2017-9226) b4bf968ad52afe14e60a2dc8a95d3555c543353a Modified for onig 5.9.6 f015fbdd95f76438cd86366467bb2b39870dd7c6 Modified for onig 5.9.6
valid_symbol_table removed
Improve fix for #74145
Update NEWS
Drop duplicate dtors in update_opN
Drop useless allocation in php_filter_callback
Drop dead abstract method check from zend_call_function()
Adapt for 32-bits which fails at different offset (49 vs 38)
further sync for vim mode lines
vim folds and mode lines yet
fix datatype
fix datatype
add missing include guards
vim folds and modelines
Check for exceptional cases before actual constant evaluation.
Separate constants propagation code shatred between "first" and "block" passes into helper functions.
[ci skip] sync NEWS
Update NEWS for 7.2.0beta1
Update NEWS for PHP 7.2.0alpha3
update NEWS
update NEWS
update NEWS
Test ldap_exop_passwd with less parameters to be sure it works
Changed API to avoid using passing result by reference
Compile/optimisation-time constants can't be circular, but in general may be reference-countable. It's better to use zval_ptr_dtor_nogc() to release them.
Get rid of old compatibility macros
Revert "Avoid run-time checks performed at compile-time."
[ci skip] update NEWS
Added missed opcodes
Removed unused variables left over by LDAP EXOP patch
Removed TSRMLS_CC instances left over by LDAP EXOP patch
Swapped position of retoid and retdata as retoid is almost never used
Removed two step syntax for EXOP helpers, one call workflow is enough
Improved ldap_exop test to encode&decode a passwd EXOP to test sending/recieving data
Removed TODOs regarding implementing passwd and whoami exops based on ldap_exop
Added constants for standard EXOPs
Removed ldap_refresh function as I’m not sure how to fix/use/test it
Added EXOP features based on patch from http://cvsweb.netbsd.org/bsdweb.cgi/pkgsrc/databases/php-ldap/files/ldap-ctrl-exop56.patch
Add NEWS entry and a test for Bug#71412
yet one C++ compat fix
fix C++ compat
Updated NEWS
Updated NEWS
Apply fix for #69356 to "Sent SQL"
Use inlined version of zval_ptr_dytor() in var_destroy() loop
Use inlined version of zval_ptr_dtor() in array_map() loop
Use zval_ptr_dtor_nogc() for data that can't be circular
Split zend_init_execute_data() into zend_init_func_execute_data() and zend_init_code_execute_data()
We don't have to use "persistent" heap with PHP-7 HashTable(s).
[ci skip] update NEWS
[BUGFIX] fixes the issue that a value from .user.ini displays in phpinfo(), but not applies. [BUGFIX] when lsapi used the php_value has higher priority then ini_set when called from the script by itself .
Avoid string duplication in preg_split()
Bug #74815 crash with a combination of INI entries at startup
Removed deprecated checks.
Cleanup. Removed unused functions and unimplemented prototype. Avoid useless "dtor_obj" calls.
upgrading: doc about ZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX
Removed EG(valid_symbol_table). Used EG(active) instead.
Release temporary string reference
Remove superfluous semicolons
Produce a better exception message when IntlDateFormatter constructor fails.
Remove unused variable op2. It is redeclared later.
Implement object type annotation
Expose inflate_get_status() and inflate_get_read_len() functions
Add more constants, improve comments, and add tests
Add OPENSSL_DONT_ZERO_PAD_KEY constant to prevent key padding
Drop soap_hash_str_find_deref()
Only compute callback name in error cases
Extract zend_get_callable_name() API
Move va_copy compatibility code into zend_portability.h
Remove unnecessary string copy
Don't leave holes in func_get_args() and backtraces
Remove invalid check of dictionary content and add initialization of dictionary if raw compression used
not about zend_arg_info.class_name
Update NEWS
note about IS_TYPE_IMMUTABLE
note about php_pcre_replace*
ZEND_ACC_CLONE is removed
fix version
[ci skip] update NEWS
[ci skip] update NEWS
Relax test condition, as OpenSSL 1.1.x out differs in EOL only
Make inference robust against infinite loop
Reseet EG(active) a bit early.
Reuse "nIndex"
fix method "eof"
Remove superfluous branch
fix news
Update NEWS with info about openssl pkcs7 read and verify changes
Add openssl_pkcs7_read and output P7B in openssl_pkcs7_verify
Minor refactor of load extension by name impl
Allow loading PHP and Zend extensions by name
Add test for bug #52480
fix bug #73471 PHP freezes with AppendIterator
fix news
fix bug #74780 parse_url() borken when query string contains colon
shutdown_executor() refactoring (reuse opcache fast request shutdown code)
We don't need any special handling for CG(unclean_shutdown) at this point, because in case of exit() or die() all destructors must be already called before.
Setting CG(unclean_shutdown) in fast shutdown doesn't make a lot of sense (it was set to prevent memory leak messages, but we doesn't check memory leaks in RELEASE build anyway).
Avoid useless duplication
Use persistent heap only for persistent connections.
Use request heap.
Clear alocated memory blocks, only if this is really necessary.
Update NEWS
Update NEWS
Add bug #74625 to package.xml
Add IN bind case to bug74625.phpt
Remove use of obsolete create_function()
Update OCI8 version test and package.xml
Added specialized FE_FETCH_R handler for iteration over array
FE_RESER/FE_FETCH optimisation
bump versions
Update NEWS for 7.2.0alpha3
Update NEWS for PHP 7.2.0alpha2
Split requested size as expected by CreateFileMapping.
NEWS entries for 7.2.0alpha2
move next
Update NEWS
PDO_OCI: support IC 12.2 in configure option
Mention OCI8 TAF callback support in UPGRADING
Bump OCI8 version
add test for bug #70700
Update NEWS
Update NEWS
Update NEWS
oci8 - Implementation of Oracle TAF Callback
add test for bug #60994
BUG #74737: Incorrect ReflectionFunction information for mysqli_get_client_info
Test ftp_ssl_connect() function : error conditions
Avoid useless dereferences and separations during paramter passing.
Optimization for fast path.
NEWS
Default single_dh_use and honor_cipher_order to true
NEWS
Compatibility with libargon2 versions 20161029 and 20160821
openssl: Add openssl_pkcs12_(read, export) tests
Regenerate and bump re2c version to 0.16
add test for strptime(): return false on failure
Next round on AppVeyor reliability.
VM refactoring, to avoid passing "execute_data" into helper functions that can access it using global register variable.
follow up on 0c992792220bbfb375d5dc8222beb2a55da8441a
fix ticks init in ts build
Refactored API for constant array element propagation
code de-duplication in ReflectionType::__toString and ReflectionNamedType::getName
Moved "Using $this when not in object context" exception code into single VM helper.
Change PHP_OS_FAMILY to "Darwin" instead of "Mac" for Darwin based systems (as suggested by Davey)
Use "Mac" instead of "OSX" to identify macOS in PHP_OS_FAMILY
Avoid run-time checks performed at compile-time.
NEWS
NEWS
NEWS
NEWS
Avoiding str duplication
Forgotten NEWs update
Forgotten NEWs update
Delete extra semicolon
Bump Modules API number for 7.2 to distinguish from 7.1
Improve and simplify UTF-8 validation in JSON
Use any TLS crypto method by default, don't use SSL
group the change for bug #74720
Add simple cli test for PATH/HOST ini sections
add UPGRADING note
update NEWS
update NEWS
Update to SQLite 3.19.3
Use reasonable SQLite3 module version
prevent multiple include using standard macros
cleanup
cleanup, MEMORY_LIMIT is not used anymore
X.Y.0 releases are more special than X.Y.(1+) releases
Create announcement entry on web-php even for non-stable
enforce exit status propagation and up the sdk version
Introduced "zif_handler" type (zif = zend internal function).
Improved new Zend Parameter Parsing API to avoid useless dereferences. This derefernce made sense only for explicit paramter passing by reference, but this feature was removed in PHP-7. The improvement is 100% backward compatible, only few "tricky" functions may be affected (e.g. extract and usort).
Change flags to use SQLITE3_OPEN_READ* constants instead of a fake-boolean, add tests on errors
Constify str in add_assoc_string_ex and add_assoc_stringl_ex
Updated some str functions to new parameter API
Clean up .gitignore
Removed empty stub.c file
Windows builds are no longer copied to downloads.php.net
Update to SQLite 3.19.2
preg_replace() optimization
Remove instructions to email internals-win@
relax this test again (still encounter erratic failure)
Update NEWS for 7.2.0alpha2
Update NEWS for PHP 7.2.0alpha1
Avoid string reallocations in html_entity_decode() and htmlspecialchars_decode()
Removed unused variable.
Avoid string reallocations in preg_quote()
Add note about publishing gpg key
Replace ASN1_STRING_data with ASN1_STRING_get0_data
Travis: Use opcache in release build
Implemented FR #71520
openssl_pkcs12_read: add missing BIO_free
Add basic test for posix_setegid function
Set timezone for intl/test/bug74298.phpt
Revert "merge PR #2290: enable opcache in CLI in 7.1+"
PCRE_EXTRA_MARK is useful only for preg_replace_callbakc(). Removed branch expectations.
Added support for PCRE JIT fast path API
Escape value passed to exec()
Ignore spurious stderr output from lsof
ZVAL_COPY_UNREF() micro-optimization
test for ErrorException::getSeverity();
improve dns (checkdnsrr) test coverage
test to function forward_static_call_array();
added test for imagecopymergegray(), added color check to test for imagecopymerge()
openssl: Add basic openssl_pkcs7_verify tests
Allow ReflectionClass::isIterable() to return true for Traversables
Rename ReflectionClass::isIterateable() to isIterable()
Exclude warm-up requests from callgrind profile.
clean
Use of bundled libzip is deprecated
NEWS
New optimization pattern
Update NEWS
Avoid double copying
ext/ldap/test: Test that ldap_connect() uses defaults from ldap.conf (openldap)
ext/ldap: Allow default host from ldap.conf to work.
Check for possible run-time function name resolution
trim() micro-optimization
reapply platform related onig patches
NEWS
NEWS
Patch from the upstream git https://github.com/kkos/oniguruma/issues/60 (CVE-2017-9228)
Patch from the upstream git https://github.com/kkos/oniguruma/issues/59 (CVE-2017-9229) b690371bbf97794b4a1d3f295d4fb9a8b05d402d Modified for onig 5.9.6
Patch from the upstream git https://github.com/kkos/oniguruma/issues/58 (CVE-2017-9227)
Patch from the upstream git https://github.com/kkos/oniguruma/issues/57 (CVE-2017-9224)
Patch from the upstream git https://github.com/kkos/oniguruma/issues/55 (CVE-2017-9226) b4bf968ad52afe14e60a2dc8a95d3555c543353a Modified for onig 5.9.6 f015fbdd95f76438cd86366467bb2b39870dd7c6 Modified for onig 5.9.6
Update Oniguruma to latest upstream version 6.3.0
Update opcode description
Added ZEND_FUNC_NUM_ARGS, ZEND_FUNC_GET_ARGS instructions, to implement corresponding builtin functions. Special optimisation for "array_slice(INT, func_get_args())" pattern.
Extend ZEND_SEND_ARRAY to eliminate array_slice() call for "call_user_func_array(_, array_slice(_, LONG, _))" pattern.
Don't allocate empty strings, use single interned string instead.
missing fix for another test
missing fix for test
add PREG_UNMATCHED_AS_NULL flag to allow distinguish between unmatched subpatterns and empty matches
further data type fixes to ext/dba
move dba handlers to size_t
fix hash build (when build dir != src dir)
fix typo
fix resetting cursor data if dba_firstkey failed
fix wrong define
fix c/p issue
enable ext/dba on AppVeyor
implement support for LMDB in ext/dba
fix identiation
Bugfix #74556 stream_socket_get_name() returns empty string
Added more EXIF MAKERNOTE formats:  - AGFA,  - Kyocera  - Ricoh  - Epson
Replace slow generic sha3 implementation by https://github.com/gvanas/KeccakCodePackage
Bugfix #74598 ftp:// ignores context
Improve conditions and visibility
[ci skip] update NEWS
Update NEWS
extend condition
Correct the location
Added NEWs
Remove accidently added byte
Added zend_parse_parameters_none_throw()
ext/ldap/test: Test that ldap_connect() uses defaults from ldap.conf (openldap)
Turn interactive mode on, if cli binary is clicked in filemanager
Added ZEND_GET_CLASS, ZEMD_GET_CALLED_CLASS, ZEND_GET_TYPE instructions, to implement corresponding builtin functions.
Added a test case for (docs) bug #74652
Added ZEND_COUNT instruction, to implement corresponding builtin.
"Countable" interface is moved from SPL to Core
ext/ldap: Allow default host from ldap.conf to work.
Improved UTF-8 validation in JSON
Remove `user=foo` from FPM test config
Skip FPM tests when running as root (unless requested)
Optimizer support for ZEND_IN_ARRAY
Added ZEND_IN_ARRAY instruction, implementing optimized in_array() builtin function, through hash lookup in flipped array
Allow overriding abstract methods
Run scripts/dev/credits
bump versions
Don't separate output arguments
Avoid useless string duplication
time to move next
Optimized parse_url() by using "known" strings
move to the next sdk version for AppVeyor
Update news
Updated func info
Use interned empty and "one char" strings.
Remove unused opcode handlers
follow up fix on bug #74022
Bugfix 63790 - Don't try to use Spoofchecker when unavailable
Implement writing to BLOBs in SQLite3
Removed useless dereferences
Added cleanup
Added test for bug #74600
Added test for bug #74596
Switch to HYBRID VM
improve error handling
fix wrong error check
Added missing "successors_count" update.
fix test
add test for bug #74589
avoid strlen in common case
variation of icu libraries causes failure
HYBRID VM cleanup
Update NEWs
Revert "fixing run-tests.php for variables_order="GPCS""
restore rev f9215b6519d4732498e598de9a3581297c60c4e8
switch to Postgres 9.6 for appveyor
restore rev 431e22fb4d2a23f6e522ec5e20503fd6ec7ca1f6
[ci skip] update NEWS
fixing run-tests.php for variables_order="GPCS"
fixing run-tests.php for variables_order="GPCS"
[ci skip] update NEWS
revert workaround for bug #74489 as it's fixed in the dependency lib
Removed always true condition
Remove typo from test header
Type hint inheritance check optimization
Constant class names are already verifyed by PHP compiler.
spl_autoload_call() optimization
Avoid useless checks
Ensure number_format() doesn't include sign for zero
typo
Cleanup
sync bin sdk version
[ci skip] update libs_versions.txt
[ci skip] update libs versions file
Add support for run-tests.php to output all test results
Update php.ini-* for deprecated track_errors directive
Update NEWS
Unused var
[ci skip] update NEWS
[ci skip] update NEWS
Don't use zend_try around dtor_obj() and free_obj()
Don't double initialize object properties
Added missing ZEND_VM_HOT define
Implemented HYBRID VM instruction dispatch method that takes advantages of both CALL and GOTO VMs.
Ignore ext/mbstring/oniguruma/oniguruma.h
[ci skip] update NEWS
[ci skip] update NEWS
[ci skip] update NEWS
[ci skip] update NEWS
Keep Z_IMMUTABLE*() macros for compatibility
Tests to ensure BC with undocumented behavior used in hacks
Drop unused variable
Support showing slow tests in run-tests.php
Add trailing comma syntax support for mixed and unmixed group use lists
Test ReflectionType support of iterable
Drop ZEND_API from zend_assert_valid_class_name
Test ReflectionType support of iterable
[ci skip] yet more info for new rm
use char* as we don't compile with UNICODE anyway
no vista anymore
Prefer using DIRECTORY_SEPARATOR in OpenSSL config path
Add oid_section to the testing openssl.cnf
Avoid unnecessary string copy
get rid of two strlen calls
[ci skip] update NEWS
[ci skip] update NEWS
Revert "Detect invalid port in xp_socket parse ip address"
Revert "Follow up patch regarding bug #74216, see bug #74429"
sync bin sdk version
Do not add already added object to the internal OpenSSL table
rely on bundle config, instead of system one
skip the test on OpenSSL < 1.1 for now
bump version after release
move next
[ci skip] update NEWS
[ci skip] update NEWS
Follow up patch regarding bug #74216, see bug #74429
don't backup older deps after upgrades
update SDK version for AppVeyor
prefer OpenSSL 1.1 with 7.2 as that's what is default
[ci skip] more upgrading notes
[ci skip] move item to right section
Remove --enable-one-shot as it's dead already for long
Support also no,shared configure arg vals by default
Add missing NEWS entries for 7.0.19
extend zlib export required for the recent libpng
yet one more export required from newer zlib
extend zlib export required for the recent libpng
Add some 'New RM' instructions
[ci skip] update NEWS
[ci skip] update NEWS
#74337 pointer returned by php_stream_fopen_tmpfile not validated in memory.c
Don't leak internal flags in reflection
Remove the ZEND_ACC_CLONE flag
Document which function flags are still free
Avoid exact floating point comparison
Update php_network.h
Enable more control over travis/compile.sh
Improve fix for #74456
Drop dead zend_optimizer_lookup_cv() function
ext/gettext: respect passed in library directory for all checks
Update to SQLite 3.18.0
[ci skip] update NEWS
[ci skip] update NEWS
improve/fix error handling
fix error handling
Improve accuracy of opline lineno information
export the main thread info
extend error map
Remove leftover code for generator stack page handling
Initialize retval in INCLUDE_OR_EVAL
Update step about uploading packages to downloads.php.net
Improve fix for bug #74442
Credit goes to Eric Norris for this one
Credit goes to Eric Norris for this one
Test for bug 74431
Add support for MySQL 8's Unicode types
missing news entry from 7.1.3
simplify and generalize crossplatform parts
unify behavior
extend flag to reduce re-link time
NEWS
NEWS
Rely on having unistd.h (which provides isatty function) rather than having the posix extension.
Add missing NEWS
Add missing NEWS
Pass explicit PHP version string to mkdist.php
Enable whole program optimization for builds without PGO, too
fixed bug #74413 wrong reflection on SQLite3::enableExceptions
Update NEWS
use php.exe from the SDK for packaging, not the one just compiled
remove no longer accurate comment
Fail hard if sed isn't found
fix re2c version comparison
Set flags on the right block
Move call/recv splitting into correct branch
Remove spurious `CG(context).in_finally` dingleberry
Forgot to commit test file...
Implement jumptable optimization
Support more than two successors in opcache CFG
Update NEWS
intergarte furher newer flag in FindFirstFileEx for win7+ only
another place
fix news
Update NEWS
Missed NEWS
Add NEWS entries
Add NEWS
Resolve bug #74188 (undefined statics raising with ?? operator)
pull-request/2456:     increase test coverage in calendar extension     consistent warnings in calendar extension
Switch to FindFirstFileEx with basic info level
Update NEWS with OpenSSL 1.1.0 support info
Add OpenSSL 1.1.0 support to PHP 7.0
Update NEWS
Remove unused var
zip ext is 1.14.0
external libzip neither requires zlib.h nor lib
Revert "extend skip section"
missing bits for php_sys_stat_ex so everything is handled with wide chars
Expose zend_ssa_is_no_val_use()
add existence check for clang lib dir and improve on x86
fix possible out of bounds buffer access
fix buffer overflow
basic ASAN suport for clang on Windows
hide clang warnings about unimplemented cli options
extend manifest with long path compat info
do compare on wchar's
Update CONTRIBUTING
Don't suppress warnings in tests
Remove superfluous allocation checks around ZMM-based functions
implement basic binary tools sdk version check
update sdk version for appveyor
Allow SSA construction with source information about CV used as result (DFG fix)
Allow SSA construction with source information about CV used as result
corrections to release process documentation
fix bug #74343 compile fails on solaris 11 with system libgd
Update tests and add NEWS entry for phpdbg opcode dump change
[ci skip] update NEWS
Add extended_value to phpdbg opcode dump
fixed typo
fixed typo
fixed typo
fixed typo
relax more this test
relax test failing in fast computer
Let MessageFormatter and IntlDateFormatter accept DateTimeImmutable as well
Disable block pass for large functions
prepare next
update NEWS
update NEWS
prepare next
update NEWS
update NEWS
deps updated, cherry-pick 88642decf9ab59d206db515990886b0761bfa835
add test for bug #74230
Don't retain mt_rand() seeds across requests
Forgot to update the output in the test too
Increased bcmath functions coverage tests using scale option parameter
always use staging deps for CI, that's what we have a CI for as well
Updated to version 2017.2 (2017b)
Updated to version 2017.2 (2017b)
Empty merge
Updated to version 2017.2 (2017b)
Empty merge
Added a test case to make sure microseconds work.
Add test for previous commit
Make sure lengths and refs are unsigned in unserialize()
parametrize crt, so only one place has to be changed
Change 'undefined constant' from E_NOTICE to E_WARNING and mention deprecation
adjust deps dir naming scheme
switch AppVeyor to vc15 for master
skip the test on OpenSSL < 1.1 for now
Use ZSTR_CHAR in token_get_all()
Simplify increment_lineno handling
fix version check at right place
Revert "fix wrong version check"
fix wrong version check
fix test warnings for OpenSSL 1.1
improve zlib version check for tests
make test more flexible to match different compressed strings
explicitly ignore php.ini for proc open tests
NEWS
Add PDO parameter types for national character set strings
Style cleanup
Remove unused field
Lower timeout in test for but #72333
update sdk version for appveyor and set explicit crt
Add note to the UPGRADING about JSON_OBJECT_AS_ARRAY priority changes
use extra flag to turn on php implementations
basic support for external libzip
define corresponding config macros, as we already trick symbols
Add news entry for bugfix 73991
Allow JSON_OBJECT_AS_ARRAY option to actually have meaning
Make test 002 for bug #65538 not to use https in cafile
Consume data by server in test for bug #72333
Disable block pass for large functions
Make test for bug #72333 a bit more reliable
Fugbix typo
Further optimize worklist management
Slightly optimize worklist management
Optimize DJ spanning tree back-edge check
Sort blocks in loop identification
Return FALSE if error_log fails to write all bytes
Use call_map to avoid linear call lookup
Add comma to comment in php.ini
Remove more unnecessary checks on Zend's allocator functions
Remove dead code from BCMath extension
Use zend_test shared for tests
fix shared compilation
Replace NEWS entry for #74159 with #72333
Remove unnecesary shadow of new_val
Minor optimizations to array_keys()/array_values()
Skip bug74159 test for OpenSSL lower than 1.0.1
Tidy up test for bug72333
Speed up test for bug72333
Tidy up setting of SSL_MODE_RELEASE_BUFFERS
Remove extra SSL mode settings
Drop unnecessary allocator return value checks
update binary sdk tools version for appveyor
rely on provided openssl.cnf to avoid possible failure with system defaults
Clean up __sleep() related code
zend-test extension to house code that is required for testing internal APIs, but that we would not want to expose for regular builds
Drop unnecessary checks of pemalloc() return value
Implement FR #74217: deterministic sqlite functions
Constify to void build warning for C++ ext. [-Wwrite-strings]
Add NEWS entry for bab0b99f
Drop outdated makerpm script
Pcntl: Make realtime signals available
Enable ccache on Travis
Try fallback on IPv4 ANYADDR when IPv6 ANYADDR fails
Detect invalid port in xp_socket parse ip address
move to hash API for interned strings ht management
drop redundant checks
sync with the incremental and inter-file analysis option
move to hash API
Ensure pointer alignment.
remove accidentially commited file
extend ccppcheck defs
Ensure pointer alignment.
Interned strings unification for TS/NTS
sync NEWS for bug #74159
improve signal globals consistency check for TS
do not try to handle signals, when globals are inconsistent
Zip: add support for encrypted archive
PHP bug #74004
Make sure we anchor this test to February
Add test-case from bug #55157
Update NEWS
Update NEWs
Remove dead code related to error constants
Remove PHP5-specific code
Updated to version 2017.1 (2017a)
Empty merge
Updated to version 2017.1 (2017a)
Updated to version 2017.1 (2017a)
Empty merge
make type consistent with glob_t.gl_pathc
make test slower again
prepare 7.1.4
prepare next
Revert "fix crash in phpdbg shutdown process when opcache is loaded"
fix crash in phpdbg shutdown process when opcache is loaded
Improve fix for bug #73807
fix command not found warning in ext/gd
Support run or test target invoked within debugger
fix test, yet master staging only
Update test for bug #74159
Update NEWS
Add test only (bug doesn't exists in 7.1)
Change PHP_OS_FAMILY slightly
report about OpenSSL 1.1 not supported during configure
pull-request/2393:
more appropriate var name
add folds
use the delivered global arg instead of fetching it
too many dashes
Increase WSDL cache version (7.0 wsdl cache is incomatible with PHP-5) Include WSDL cache version number into file name
fix test for libzip 1.2.0
initialize valid_symbol_table, important for the main thread
ftp_mlsd(): Parse the MLSD response
Unused var
Disable RTLD_DEEPBIND when compiling with AddressSanitizer (-fsanitize=address).
Make the ftp and stream tests more reliable.
Add json dep to test
[ci skip] update NEWS
[ci skip] update NEWS
fix typo
skip test
Make it slower
Add a test for hard_timeout(bug #74093)
Workaround to fix bug #74093 (Maximum execution time of n+2 seconds exceed not written in error_log)
Update to SQLite 3.17.0
Update NEWS
update NEWS
update UPGRADING.INTERNALS
The d_name member of struct dirent should be a pointer
Upgrade timelib to 2017.01
remove loop
fix loop
refactor php_win32_get_random_bytes(), take 2
Update NEWS
Update NEWS
run-tests: Exit 1 on BORKED tests
Revert "refactor php_win32_get_random_bytes()"
refactor php_win32_get_random_bytes()
Revert "move winsock specific stuff into dllmain"
move winsock specific stuff into dllmain
add missing datatype as sync for 5113909
Update NEWs
Added EG(flags) - executor global flags EG_FLAGS_IN_SHUTDOWN - is set when PHP is in shutdown state
newly added zend_object_store.no_reuse is redefined as a global zend_object_store_no_reuse, to avoid alignment issues
Add #ifndef restrict
ReflectionGenerator now sends ReflectionException as expected
Alignment fix, as per @nikic
The test scripts bug64720.phpt and bug68652.phpt were relying on the buggy behavior, when PHP returns "Undefined static property" error due to class entry corruption. With my fix for bug 74053, both tests return no errors now, I corrected the EXPECTF accordingly
use some dynamically generated NAN as well
rework fd521a22 to simplify for master, see github #2356
switch to smart str conversion routine to hide exact NAN type
Implement Parameter Type Widening RFC
Add UPGRADING notes for deprecations
Deprecate each()
Deprecate assert() with string argument
Deprecate mbstring.func_overload
Deprecate track_errors / $php_errormsg
Deprecate mb_parse_str() without second argument
Deprecate parse_str() without second argument
Deprecate (unset)
Deprecate __autoload()
Deprecate create_function()
Deprecate gmp_random()
Replace redundand checks with ZEND_ASSERT. We shouldn't get IS_OBJECTs without object_storage.
Arguments array can't make cycles
Remove unused variable
increase wait time in timeout_variation_9.phpt by 1 second
increase wait time in timeout_variation_10.phpt by 1 second
BUG #73998: Numeric properties are not accessible from get_object_vars
[ci skip] update NEWS
[ci skip] update NEWS
[ci skip] update NEWS
update NEWS
Remove obsolete version checks from tests
remove the reverted NEWS entry
sync NEWS with the reverted stuff
Revert "fixed bug #50989 (DOM support for LIBXML_NOXMLDECL)"
Revert "fix BC break introduced by #2346 (sebastianbergmann/phpunit#2454)"
Revert "Inheritance checks should not ignore parents if these implement an interface"
Revert "Added tests demonstrating the same effect with abstracts"
typo
fixed macro
fix possible NULL dereference
remove unused var
use zend_string API
fix test portability
fix test for 32bits (int -> float)
fix test for 32bits (int -> float)
fix test for 32bits (int -> float)
Refactor HashContext into an object.
add a primitive debug facility to sendmail
Revert "backport 51e1da6ea1e663908302e162ced1b7a8cb5aee05 into 7.0"
bump versions
Deprecate INTL_IDNA_VARIANT_2003
bump versions for next in dev
removed additional ";" from run-tests.php
Remove zend_version() checks from tests
Remove ZEND_CHANGES and README.namespaces
update NEWS
update NEWS
Securely zero the hash context key
fix BC break introduced by #2346 (sebastianbergmann/phpunit#2454)
move id initialization into ctor
fix system id initialization for multiple threads
Try fpm path for testing in sbin as it is default target
FTP: implement MLSD for structured listing of directories, decribed at https://tools.ietf.org/html/rfc3659
fixed bug #50989 (DOM support for LIBXML_NOXMLDECL)
Added tests demonstrating the same effect with abstracts
Inheritance checks should not ignore parents if these implement an interface
NEWS
Add test coverage for bug #72969
Expose DB-Library version as \PDO::DBLIB_ATTR_VERSION attribute on \PDO instance
style cleanup
Use modern autotools name of configure.ac instead of configure.in
[ci skip] add upgrading note about PHP_OS_FAMILY
[ci skip] news entry for PR #2337
Added (failing) testcase for bug #54382
add PHP_OS_FAMILY constant to determine on which os we are
dirname() should not normalize paths
make length check more robust
my NEWS handle is actually Mike)
Separate array in session upload progress
Enable HT RC assertions with escape-hatch
Check for old style constructor only if method is not found
use correct shift and fix slowlog bt in 7.1
use correct shift and fix slowlog bt in 7.1
move decl to correct place
preliminary fix for bug #73971, more refactoring is needed
Add variadic type and obj info macros
Switch to the v2 version of these functions. The sqlite3 docs suggest always using prepare_v2 and the close_v2 could potentially help with an fd leak we have been seeing
Add regression test for bug #47946
Use hash_ops->is_crypto in hash_init()
Add myself as primary maintainer of GD
Remove trailing tabs
backport 51e1da6ea1e663908302e162ced1b7a8cb5aee05 into 7.0
exclude debug code
ensure the string for conversion is \0 terminated and integrade additional path length check
NEWS
NEWS
Optimized extract(). Avoided double hash lookups and repeatable checks through loop splitting.
Update comment, incorrect since 224aaf94
update NEWS
Removing zmemcheck from .gdbinit
Disallow non-crypto hashes in HMAC and PBKDF2
Remove remnants of TSMRLS_* macro calls
DNS CAA record type implementation and tests for https://bugs.php.net/bug.php?id=73850
Add php_openssl_store_errors to bailouts
Change free to OPENSSL_free
NEWS
NEWS
Remove more TSRMLS_CC macros
updates to release docs
[ci skip] sync NEWS
fix changed symbol
Separate zend_fetch_static_property_address() into an inline function
Update NEWS
Make unserialize() ref unwrapping compatible with 7.0
Add additional serialize tests for fixed bugs
Add test ini_set with invalid time zone
Update more functions with path check
move some var declarations to the top for better grouping
fix AppVeyor failures with Opcache enabled
Add hash_hkdf()
Added test for "opcache: print restart reason" to basic_logging.phpt
Write $http_response_header to local var at end
opcache: print restart reason
opcache: print restart reason
opcache: print restart reason
fix remaining tests for Opcache runs
ensure the end path wouldn't contain double slashes
templatize the resource number
refix test
fix test
Avoid NULL dereference
Introduced "zend_type" - an abstraction for type-hinting representation.
Increase wait time for tests involving sockets to improve Travis relability
Remove redundant reference handling
update NEWS
update NEWS
Update to SQLite 3.16.2
added a note to opache.fast_shutdown why its not enabled by default in php.ini
Add support for "xfail" to phpt SKIPIF sections
Set a session path for this test
Set a session path for this test
Missing %s
Missing %s
More missing gc inis
Ok, maybe Nikita is right. We should default this on.
Missed one. This needs gc as well
Missed one. This needs gc as well
These tests rely on gc being enabled
These tests expect gc to be enabled
pull-request/1807: 	test for dns_get_record
Prevent fd leak in readdir_r that causes false negative on readdir_r implementation when compiled with AddressSanitizer
Compact literals: Deduplicate empty array literals
Un-XFAIL serialization test
Add print zend string function to gdbinit
Improved GENERATOR_CREATE opcode handler.
Revert "set more suitable defaults for opcache in ini and code"
Remove trailing whitespace
Explicitly allow NULL values for dblib compatibility
update release process notes
fix stub to accept user properly
merge PR #2290: enable opcache in CLI in 7.1+
set more suitable defaults for opcache in ini and code
update ip2long_varation2 test to skip for AIX, see bug #72973
[ci skip] news entry for #72974
[ci skip] news entry for issue #72974
improve and generalize the recognition of a cli sapi
Use proper file extension for the README
update NEWS
update NEWS
improve FPM tests (mostly for systemd build)
deflate_add(): Don't add unnecessary +1 to size
Add test for buf #65251
update NEWS
move various places to the centralized OpenSSL setup routine
use the new API for opaque symbol in OpenSSL 1.1.x
implement basic config support for OpenSSL 1.1.x
http_fopen_wrapper.c - Handle HTTP headers with varying white space
Rename fcgi_request.closed to .ended
Adapts the readme to the new test-possibility
Implement github PR #1736
update UPGRADING
fix wrong version
extend UPGRADING
add 'e' flag for fopen() to enable CLOEXEC
Remove superfluous variable reinit
PR #2211 don't supress warnings in tests
/guard is also a security flag
Revert "Test request47456.phpt for PR 1303" on PHP-7.0 and PHP-7.1
fix edge case leak
fix typo
fix typo
update NEWS and UPGRADING
update NEWS and UPGRADING
Return integer field types as native integers instead of strings
fix bad merge
Test request47456.phpt for PR 1303
fix build broken by #2124
fix acinclude, messed up by bad merge #2124
fix broken build scripts #2124
fix broken build scripts #2124
Some commentary, change free method
Conditionally free depending on how assignment happened
Update UPGRADING wrt. PR 1303
add stream_socket_sendto test from PR #1804
Update php.ini-development
Update php.ini-production
updated default per proposal
Increase realpath_cache_size default value
add skip when json not loaded
fix deps dir for test data preparations
5.6.31 is next
don't use separate deps for release branches
reenable appveyor cache
clean appveyor cache
sync libmagic.patch
revert year change on bundled lib files
add missing condition
wrong version
I am bad at counting (wrong date in news)
bump version after release
quick fix for the base branch version parsing, not perfect still
move dev to next
Add Z_EXTRA macro
Add tests for delayed __wakeup()
Implement delayed __wakeup
Update copyright header to 2017 in calendar.c
Update copyright headers to 2017
Update copyright header to 2017 in calendar.c
Update copyright headers to 2017
switch to the beta1 SDK for AppVeyor build
remove duplicate test
fix test
Implement #69606: Support BMPs (added in GD 2.1.0)
bring the year back
revert change in the broken file
add nmakefile fragment for json
fragment targets have to match the generated ones
add nmakefile fragment for pdo parser
fix open flags
improve nmake fragment
Update to SQLite 3.16.1
Make test case even more resilient
Make test case more resilient
make possible to pass also an arbitrary fragment file
Re-add var_unserializer.c
fix var name
implement makefile fragment support for nmake
Update copyright header for new file
Resolve conflict
better skip on files
Use correct string release function
set exclude AppVeyor branches and ignore builds on NEWS updates
Disable pdb generation for AppVeyor
Add NEWS entries
Optimize get_browser() using prefix and contains checks
Optimize browscap loading and representation
Add get_browser() test against larger corpus
Update copyright headers to 2017
news entry for PR #2267
news entry for PR #2267
news entry for PR #2267
Add (failing) testcase for bug #67474
Switch reflection to use smart_str
Add smart_str_append_printf
Make printf_to_smart_str(ing) the primitive printf operation
Export zend_s(tr)pprintf
Sync smart_string implementation with smart_str
Move smart_string to Zend
Flush stderr on win32 in cli_log_message
fix test
news entry for PR #2117
add news entry for PR #1414
news entry for PR #1414
FIx bug #70213
Revert "add news entry for PR #2263"
Revert "news entry for PR #2263"
add news entry for PR #2263
news entry for PR #2263
Add PHPAPI php_session_flush and php_session_destroy
Use new param API in pdo_sqlite
Use new param API in tokenizer
Use new param API in PDO
Use new param API in libxml
Use new param API in json
Add PHPAPI for session class entry
Use new param API in standard
Use new param API in standard/file
Use new param API in standard
Use new param API in standard/string
Use new param API in standard/basic_functions
Use new param API in standard
Use new param API in standard
Use new param API in standard/math
Use new param API in standard
Document the changes to lexical scoping in 7.1.
Use new param API in standard/array
Use new param API in standard
Update UPGRADING wrt. bug #72785
Use new param API in standard/streamsfuncs
Use new params API for throwable constructors in date
Support ZEND_PARSE_PARAMS_THROW in new ZPP API
Don't check for precise length in ecc.phpt
Another try at making concat_003 more reliable
Make Opcache tests using the cli server more reliable
define php_ap_map_http_request_error function for older httpd only
Use new param API in posix
Use new param API in date
Use new param API in ctype
Migrate curl to new parameters API
add old versions of httpd support
Convert bcmath to new parameter parsing API
Use zend_string in bcmath params
Correct function protos in intl/idn
Use zend_string in intl/idn
Simplify error path in intl/idn
fix uninitialized value
Disable AppVeyor fast_finish
Makes the sapi web server and curl tests more reliable
fork tests
New parsing parameters in curl
Reduce redundant storage of required number of parameters to required flag
Interpretation of curl_setopt values for boolean parameters
Remove extraneous parentheses in conditions
Path handling related refactorings
Finish remaining replacement uint => uint32_t
fix min supported versions
Update NEWS
Eliminate win95nt.h
Hmm actually it seems to be the other way around, Anatol?
Sync the default value of --with-odbcver with the hardcoded default for ODBCVER
move the defs to the right place
Increase timing quota for small string concat test
Drop some dead code in ext/reflection
add folds
fix possible null dereference
add UPGRADING and NEWS items
Raise the supported API to win7/server 2008r2
Revert "Reorder the oplines" (Break Zend/tests/return_types/bug71092.phpt)
Update NEWS and UPGRADING
Remove "register_globals" support codes from php/php_binary serializers. As a result, users may use PS_UNDEF_MAKER(=!) char for session variable name.
Add "Sent SQL" to debug dump for emulated prepares
Remove PDOStatement::activeQueryString()
deliver the real cp also if a constant is passed
Few micro-optimizations
update NEWS
update NEWS
Compatibility with Firebird & Oracle select syntax.
fix proto
Cursor is not opened on singleton selects.
fix arg spec and datatype, follow up on 73594
Add test for get_browser() in object mode
extend UPGRADING
update NEWS
fix C89 compat
replace default appveyor build version
Reorder the oplines
typo fixed
add Appveyor fast_fail
improve error check
bug fixed #61471 in apache2handler
turn mcrypt back on for Appveyor runs
add build status badge
add scripts for AppVeyor integration
Silence warning from unhandled enum
fix leaking streams and memory mapped files
turn mcrypt back on for Appveyor runs
add build status badge
add scripts for AppVeyor integration
Silence warning from unhandled enum
fix leaking streams and memory mapped files
chance CLI codepage, only when SAPI is initialized
add build status badge
add scripts for AppVeyor integration
Add an assertion
make timing check more forgiving in these tests
Skip tests when secure_file_priv dir not writable
Add missing UPGRADING entry. Manual is updated before 7.0 release.
extend skip section
Partially fix bug #70492
cleanup temporary data
Care about intput and output encoding, as per default encoding RFC
More fixes for bug #73089
fix typo
check for header availability
fix test portability
Update NEWS/UPGRADING for mcrypt
Include strings.h for strncasecmp
Silence warning from unhandled enum
Include unistd.h for getpid()
Compilation warning fix
Optimized memory handling of BIT fields. Less memory copies and less memory usage.
Add a bit more test cases (edge cases) to the BIT test case
Add a test case to test fetching of multiple rows with bit values.
Minor fix macro value
Add missing NEWS entry
Increased number of reserved resources (from 4 to 6)
Improved VM stack unwinding on exception. Now zend_throw_exception_hook() is going to be called only when exception is actually thrown and not going to be recalled for each unwinded finction.
better way to get ACP
adapt patch for 7.1
fix datatype for zpp, yet a followup on bug #73679
Update to SQLite 3.15.2
update NEWS
update NEWS
improve fix for bug #73679 with new capabilities available
fix leaking streams and memory mapped files
extend errno mapping
Update NEWS
Revert "Refix bug #73686"
Refix bug #73686
fix uninitialized member
Regenerated zend_vm_execute.h (fixed white spaces)
update NEWS
Disable C4101 warnings entirely on Windows
git clean section
Remove noop param hook
Clean up tabs and whitespace
update NEWS
update NEWS
Install ext/json headers
fix test compat with MySQL 5.7
Check if PHP is in execution state.
Remove "register_globals" support codes from php/php_binary serializers. As a result, users may use PS_UNDEF_MAKER(=!) char for session variable name.
Factor out common binary op code in range inference
update NEWS
fix leak, take 2
fix leak, take on 7.x
fix leak, take on 5.6
Update NEWS
COALESCE can't throw exception
Micro optimizations
This still leaks memory, I don't have enough knowledge in WDDX code to fix them :(
Use an inline handler instead of repeating logic for calling assign op helpers each time
fix test
fix test
fix ident
fix test
enforce the test ini usage for the child process
add pragma
suffix CS
Improve multiplication on x64.
Eliminated useless exception check
Eliminated useless exception checks (FE_RESET with array argument can't throw exception)
Eliminated useless exception check
Bump versions and NEWS for 7.1.1-dev
fork tests
Workaround for GCC-4.9.2 bug
fix condition
improve skipif
improve skipif
Simpler overflow check
fix dir separator
Update NEWS for the build
add skipif
Export zend_quick_get_constant()
Removed IS_TYPE_IMMUTABLE (it's the same as COPYABLE & !REFCOUED)
oops, changed in wrong place
add NEWS
Update UPGRADING with info about AEAD changes in openssl_(en|de)crypt
Do not add extra timeval entropy when OpenSSL 1.1 used
Clean up and fix php_openssl_dh_pub_from_priv
Added missing array key to $JUNIT
Add XFAIL for failing test
acinclude.m4: fix krb5-config detection and usage in PHP_SETUP_KERBEROS.
awk: syntax error
Add more mbfl string size checks (bug #73505)
Add more mbfl string size checks (bug #73505)
fix test
fix test portability
further normalizations, uint vs uint32_t
fix oniguruma.h copying
fix tests
remove generated file
upgrade to Oniguruma 6.1.2
fix spelling
update UPGRADING
Add a test for bug 73529
Remove more PHP 6 leftovers from tests
add test for bug #57547
Bump Zend Engine version
add test for FILEINFO_EXTENSION flag
Add test for bug #67516
fix test
apply the current Fedora's data patches
fix c/p mistake
catch up with new finfo constant
update libmagic.patch
maintain patch level
the vanilla data is used for now, seems everything is incorporated
more fileinfo test fixes
fix tests
Upgraded libmagic to 5.29
Updated to version 2016.10 (2016j)
Empty merge
Updated to version 2016.10 (2016j)
Empty merge
Updated to version 2016.10 (2016j)
Empty merge
Updated to version 2016.10 (2016j)
Update NEWS
5.6.30 will be next
CS (no leading space in comment for config option)
Use UTC instead of unavailable timezone in test
Make php_url_parse_ex() respect length argument
Cleanup parse_url() query/fragment handling
Cleanup parse_url() gotos
Export zend_do_fcall_overloaded()
update libs_versions.txt
update libs versions.txt
move dev to next
Micro-optimization
Removed useless (double) checks for EG(exception). (Bob)
Revert "fix invalid read, follow up on 97b65cc9"
fix invalid read, follow up on 97b65cc9
update NEWS
update NEWS
update NEWS
Add a test for bug 73498
remove TSRMLS_*
update php.ini-* for bug #69090
update php.ini-* according to changes for bug #69090
update NEWS
update NEWS
update NEWS
add test for bug #73452
Remove more NetWare leftovers
Backport 15ac4904 to 5.6
Remove this old obsolete code
Turn function into inline
Regenerated files
Update NEWs
Update NEWS
Revert "Added --enable-asm on Windows"
Kill some more strlen() calls and fix a possible missing NULL pointer check
Refactor: rename variables to match documentation
Added --enable-asm on Windows
Minor grammar
Remove the binary cast from unrelated tests
Remove the b prefix from literals on unrelated tests
No need to keep the version info for old VC versions we don't even support anymore
Update inline comment with VS.net 2017 + fix typo
Remove typo
Use $(CC) consistently in the Makefile
Remove undefined variable if ext/ftp was built with SSL
Shave off a strlen() call in ftp_mkdir()
Revert "Revert "Remove a few unused write warning""
Revert "Remove a few unused write warning (backport from master, oops)s"
Remove a few unused write warning (backport from master, oops)s
Cleanup tests version checks
Remove a few unused write warnings
fix #72180, #73219
Removed not used field
Update NEWS
make it possible to show specific help pages without interactive session
make it possible to show specific help pages without interactive session
make it possible to show specific help pages without interactive session
json_encode(): Detect recursion earlier
Update the ini scanner as from Dmitry's commit
Remove these NetWare leftovers
Updated the comment regarding what priority modes that are left out for the nice() implementation on Windows
Remove support for REALTIME_PRIORITY_CLASS in proc_nice() on Windows.
fix test portability
don't fail miserably, when an unknown vc version is used
Regenerated scanner
extend skipif
Disabled PHP call tracing by default (it makes significant overhead). This may be enabled again using envirionment variable USE_ZEND_DTRACE=1.
Revert "Introduced zend.enable_dtrace INI directive to enable/disable PHP call tracing"
Introduced zend.enable_dtrace INI directive to enable/disable PHP call tracing
extend skipif
add vc15 to the list
Revert "Remove PDOStatement::activeQueryString()"
RC inference fixes
Updated NEWS
Improvement for bug73297
Simplify ext/standard/tests/http/bug73297.phpt
http_fopen_wrapper.c - bug#73297 Skip past "100 Continue" responses
Add failing test for bug#73297
Updated NEWS
Improvement for bug73297
Simplify ext/standard/tests/http/bug73297.phpt
http_fopen_wrapper.c - bug#73297 Skip past "100 Continue" responses
Add failing test for bug#73297
Improvement for bug73297
Simplify ext/standard/tests/http/bug73297.phpt
http_fopen_wrapper.c - bug#73297 Skip past "100 Continue" responses
Add failing test for bug#73297
Updated NEWS
Improvement for bug73297
Prevent modification of immutable arrays (ext/mbstring/tests/bug26639.phpt failure with opcache.protect_memory=1)
Overflow check
Simplify ext/standard/tests/http/bug73297.phpt
http_fopen_wrapper.c - bug#73297 Skip past "100 Continue" responses
Add failing test for bug#73297
Added a note in UPGRADING about the new count() warning
Add expectations for invalid count() warnings
Add tests for invalid count() operations
Add warnings when counting invalid parameters
Skip 64-bit specific tests on 32-bit systems
VERIFY_RETURN_TYPE on references can't be eliminated
Remove PDOStatement::activeQueryString()
Accorate handling of too big inodes of chroot directories
"opcache.validate_root" is useless on Windows
fix gcov coverage
fix gcov coverage
fix gcov coverage
Use full path
keep ABI
news entry for #2196
new entry for #2196
Improve error message
Refactor and cleanup implementation.
Revert "Protect class based session save handler"
Protect class based session save handler
update NEWS
Add PDOStatement::activeQueryString()
Convert numeric keys in object/array casts
Update to SQLite 3.15.1
reduce realpath_cache_bucket size by 8 bytes on 64-bit
Properly escape all filenames when exporting breakpoints
phpdbg standard input changes
fix news
news entry for #1787 in 7.1
news entry for #1787
news entry for #1787
move declaration of vars to top
add test for #69587
fix bug #69587 DateInterval properties and isset
restore erroneously removed part
wrong numbers
news entry for #2166, fix news
Don't inline if function has ref arguments
fixed bug generated by fixes bug #73135
fix news
news entry for #2166
fixed bug generated by fixes bug #73135
phpt file to bug #73135
fixes bug #73135
news entry for calendar overflow fix
update phpdbg with stdin code change
Use "Standard input code" instead of "php://stdin"
Show "php://stdin" instead of "-" in error messages
Remove Netware support
added a test for date_interval_format function
fix erroneous line in confutils.js
Allow early-binding of ZEND_NEW args
Fcall optimization: Avoid FETCH_DIM_R with UNUSED op2
belated news entries
Don't elide undef var notice
Set result of FREE to unused in block pass
Range inference cleanup
Don't update proprties inplace.
add missing entry
add missing NEWS entry
add missing NEWS entry
improve lib name guessing for newer libtidy
sync NEWS
Remove binary casts from PHAR's default stub
Remove binary casts from PHAR's default stub
add missing NEWS entries
fix memory leak
Enable FTS4 and FTS5 for bundled libsqlite
avoid unneeded copying
update NEWS
update NEWS
Add test for bug #73448
Add hint that naive DateTime comparisions now are more likely to fail
Never return private part of the key from openssl_csr_get_public_key
add missing RETURN_STRINGL_CHECK
update NEWS
update NEWS
Introduce SKIP_IO_CAPTURE_TESTS group
Remove this check as discussed with Anatol
Complete the fix of bug #70172 for PHP 7
More int->size_t and string overflow fixes
More int->size_t and string overflow fixes
rename the tmp ini file, to keep it consistent with m4 variant
fix dir separator in test
fix dir separator
Add length check for bzcompress too - fix for bug #73356
More string length checks & fixes
More string length checks & fixes
Updated to version 2016.9 (2016i)
Empty merge
Updated to version 2016.9 (2016i)
Empty merge
Updated to version 2016.9 (2016i)
Empty merge
Updated to version 2016.9 (2016i)
Update NEWS
Intriduced ZEND_ACC_INHERITED class flag. It's going to be helpful for static optimisations, when "parent" is not known yet.
Change Big Endian backup implementations to use signed indexes
add run target
remove unreferenced var came in with merge
typo
Use more accurate types to avoid compiler warnings
prefer symbols read from the bin to those matching the naming scheme
remove debug out
fix link with deps pdb availability
Define X509_get_signature_nid for LibreSSL
use rather the makefile var
rename the env setting target and reuse it for build-snap
Introduce json encoder to fix globals related issues
fix condition
Drop dead code in zend_call_method
Cleanup zend_std_call_setter
Optimize __get etc
Skip if no jit is built
fix test run with autogenerated ini
generate test ini file, so shared exts are loaded for nmake test
additional env is generated for phpize, too
fix doc
extend info to float related constants
note to UPDRADING
update NEWS
Add VT100 support for Windows
Update NEWS
Typo
5.6.29 will be next
use rather the nmake var as it's evaluated on every run
prepend known bin folders to the path for nmake test runs
Remove unneeded macro check. This "hack" is replicated in php_pdo_dblib_int.h.
remove unread var
add myself to pdo_dblib CREDITS
yet another uninitialized pointer
fix uninitialized pointer
note to UPGRADING
Update curl_multi_info_read.phpt
add some float limits constants
remove dead code
reset also the cwd_length, when cwd is free'd
Update curl_multi_info_read.phpt
Update curl_multi_info_read.phpt
make config.w32 compatible with ICU 58
Revert "Update UPGRADING to reflect bug fix" This change was made in 7.0. Sorry for the noise.
Update UPGRADING to reflect bug fix
news for next rc
Export zend_analyze_calls() to allow building call trees.
fix version
set versions
move dev to 7.0.14
Updated to version 2016.8 (2016h)
Empty merge
Updated to version 2016.8 (2016h)
Empty merge
Updated to version 2016.8 (2016h)
Empty merge
Updated to version 2016.8 (2016h)
Try to fix LibreSSL build
Drop useless checks for DH and RSA
Update NEWS
Better fix for bug #73360
Turn IS_TYPE_COLLECTABLE zval flag into GC_COLLECTABLE zend_refcounted flag. This simplifies checks and allows reset this flag for "acyclic" arrays and objects.
update NEWS
Add tests for PDO::getAvailableDrivers
Remove DBDO-specific field
Save some more calls to strlen() on the CURLFile helper methods
updating cvs revisions of strlcat/cpy
Save a call to strlen(), since we can figure out the length of this constant value with sizeof() at compile time
Do not overwrite config.nice.bat if --with-config-profile is used on Windows
Update UPGRADING wrt. imageresolution()
remove redundant includes
fix Windows compilation
Add php_random_int internal API
Ignore the return value of sqlite3->busyTimeout() if their "API Armor" is not enabled.
news entry for pr #2135
news entry for pr #2152
news entry for #pr 2152
news entry for #pr 2152
Introduced HT_IS_PACKED() and HT_IS_WITHOUT_HOLES() macros. (Benjamin Coutu)
Implement #72612 (libxmlrc uses system malloc instead of PHP alloc routines)
T1Lib support was removed in 7.0
Poor copy/paste mistake, nobody saw I used getrusage.[c|h] as skeleton here!
Move these files to the same compilation batch instead of two
Ignore notices with headers already being defined to their magic HAVE_<name>_H define on Windows.
Improve the config.simple.bat for Windows a little;
Added config.simple.bat to .gitignore
Make proc_nice() more in line with that of Unix, as discussed with Anatol
Always include the header for nice() on Windows
Added config.simple for the Windows build system, this is pretty much like running configure for only the core of PHP and sapi/cli for quick and fast building.
update NEWS
update NEWS
sync NEWS
sync NEWS
Make this test meaningful
Install ext/json headers so that other extension can parse, too
Use our own domains to test getmxrr()
Remove superfluous checks for PNG support
Update NEWS
Update NEWS
Add PHP bindings for setting and getting the image resolution
Simply return FALSE from session_gc(). Error could be annoying because internal save handlers may return -1 when GC cannot be performed for reasons
Add save handler explanations for documentation purpose
Remove dead code
Use simple "one-pass" algorithm.
sync NEWS
Lower the value to 24 hours from 1 year, which due to a overflow in php_tvtoto (bug#71507) is just 17 days.
This is a very very old thing dated back to year 2009. MYSQL_OPT_READ_TIMEOUT was never a macro in mysqlnd but an enum value. So this never actually worked correctly. mysqlnd provides these so it is safe to have them when mysqlnd used.
news entry for pr #2158
NEWS and UPGRADING for utf8_encode() and utf8_decode() move
Move utf8_encode and utf8_decode to ext/standard
news entry for pr #2158
news entry for pr #2158
sync news from 7.1.0RC4
also fix 32bits test for microsecond
bump news version
Update 7.1 NEWS for bug #71148
Remove this old and long gone deprecated makefile. Netware was discontinued over 7 years ago and it is safe to say that no one is really maintaining support in php-src anyway for it
Change the semantics of proc_nice() for Windows to better match the values of the wmic output
Implemented proc_nice() for Windows (FR #49806)
Remove the old and way outdated Zend/RFCs folder, we use the wiki nowadays anyway
Use proper API
Various function info fixes
Various RC inference fixes
Normalize preg_replace_callback() return value
Mark functions as PHP_DEP_FE instead of manually emitting the notice
Update to SQLite 3.15.0
let s use the macro instead
RFC: Deprecate png2wbmp() and jpegwbmp()
import explicit_bzero + strlc* functions update since 1999 algorithms have changed and register k/w not necessary anymore.
Add tests
mb_check_encoding()/mb_convert_encoding() - Improve and add recursion detection.
sync NEWS
bump ext/zip version
Implement #72918: negative offset inside a quoted string leads to parse error
Update NEWS
use zend_error instead of zend_error_noreturn
add missing NEWS entries for 5.6.27
soap #69137 - Invert logic to be correct
missed piece for renaming
rename publicly exposed symbol to avoid name conflicts
Ignore non-executable opcodes in line mode of phpdbg_end_oplog()
fix gettimeofday proto availability
fix test
use already exported symbol
Revert "export symbol missing by phpdbg"
Syncronize with 5.6 - __toString should return ""
fix another mistake
export symbol missing by phpdbg
update len in fallback cases
fix wrong merge
fix test
finish 7.1 port
fix typo
followup with #73276 merge
fix test
avoid strlen
Bug #73218: add mitigation for ICU int overflow
Add more locale length checks, due to ICU bugs.
Clear FG(user_stream_current_filename) when bailing out
add test for bug #73037
Update UPGRADING
missed piece for renaming
Remove unused code
rename publicly exposed symbol to avoid name conflicts
add missing header for gd_error
fix syslog interference
Ignore non-executable opcodes in line mode of phpdbg_end_oplog()
fix gettimeofday proto availability
fix test
use already exported symbol
Revert "export symbol missing by phpdbg"
Syncronize with 5.6 - __toString should return ""
fix another mistake
Update NEWS
export symbol missing by phpdbg
update len in fallback cases
fix wrong merge
Add stdin command and -s command line parameter to phpdbg
fix test
finish 7.1 port
Addendum to #73234: Assume param types are nullable
fix typo
followup with #73276 merge
fix test
avoid strlen
Bug #73218: add mitigation for ICU int overflow
Add more locale length checks, due to ICU bugs.
Clear FG(user_stream_current_filename) when bailing out
Clear FG(user_stream_current_filename) when bailing out
Clear FG(user_stream_current_filename) when bailing out
Change Big Endian backup implementations to use signed indexes
fix tsrm
fix bug #73275 - crash in openssl_encrypt function
update NEWS
set versions and release date
sync NEWS
update NEWS
restore NEWS to the state before breach
update NEWS
update NEWS
add test for bug #73037
Added news entry.
add zend_bailout to cppcheck conf
Removed deprecated flag
since libdb isn't bundled, it needs a config option as well
Remove channels from getimagesize() results for WebP
fix leak
Add VP8X support to getimagesize() and friends
Add VP8L support to getimagesize() and friends
Revert "Added validation to parse_url() to prohibit restricted characters inside login/pass components based on RFC3986"
Implement #65038: IMAGETYPE_WEBP constant missing
Document that ext/shmop deals with resources as of PHP 7.0.0
Document that ext/shmop deals with resources as of PHP 7.0.0
Unify error handling of bundled and external libgd
fix datatype
Use better fix for preventing too early freeing of interned strings Works also with opcache now - just prevent zend_interned_strings_restore completely - zend_interned_strings_dtor will take care as phpdbg only ever uses one single request cycle per module cycle
ensure the flag doesn't overflow
Updated reference-counting inferece rules. The previous rules refected PHP-5 behavior and were completely wrong for PHP-7. (e.g. scalars don't have reference counters at all). This change shouldn't affect anything, because results of this inference are not used yet.
handle the stream->__exposed flag correctly
Enable QDBM support in ext/dba on Windows
catch up with stream datatypes
uint vs. uint32_t
reduce size of stream struct
prevent flags overflows
reduce size of stream bucket struct by 8 bytes on 64-bit
Improve support for microseconds with Date/Time
Update run command for allowing STDIN
Remove phpdbg fix targeting 7.1 which landed in 7.0
Bug #73218: add mitigation for ICU int overflow
Add more locale length checks, due to ICU bugs.
Added validation to parse_url() to prohibit restricted characters inside login/pass components based on RFC3986
Skip tests that rely on sessions if sessions aren't available
Remove mcrypt
Apparently negative wordwrap is a thing and should work as length = 0.
Really fix bug #73017
Move freeing of truecolor pixels to a function
Change gdImageTrueColorToPalette() to return success/failure
Implement request #33066: Add GD Image Function gdImageOpenPolygon()
Add support for gdEffectMultiply
Switch to libgd anti-aliased drawing API
Add proper escape sequences and reading stdin from file in phpdbg run command
acinclude.m4: fix krb5-config detection and usage in PHP_SETUP_KERBEROS.
Unwrap reference returns in cufa etc
Remove further remains of the old antialiasing support
Remove basically effectless gdImageAABlend()
Cleanup exception handling after zend_fetch_class_by_name
fix user filter bug
fix user filter bug
fix user filter bug
Use smart branch
Special handling for $php_errormsg and $http_response_header.
sync win32 makefile with makedist zendparse exports
zval_dtor_func_for_ptr() -> zval_dtor_func()
Better fix for bug #72854 (avoid extra copy and creating reference to stack variable)
5.6.28 is next
Updated to version 2016.7 (2016g)
Empty merge
Updated to version 2016.7 (2016g)
Empty merge
Updated to version 2016.7 (2016g)
Empty merge
Updated to version 2016.7 (2016g)
Handle resource keys in constexpr arrays
Check next_index_insert failure in ADD_ARRAY_ELEMENT
Prepare to Re-roll 7.1.0RC3
Combine code for keyed/unkeyed list()
fix exports which are now referenced by phpdbg
Update UPGRADING to reflect new reality
Update NEWS for 7.1.0RC4
fix exports which are now referenced by phpdbg
Update NEWS
Don't mark ReflectionType::__toString() as deprecated for now
Revert ReflectionType::__toString() behavior + deprecate
Ensure symtable exists before checking it
Add phpdbg generator command
prepare next
set versions
update NEWS
update NEWS
Ignore potentially misleading dberr values
update NEWS
update NEWS
Expose information about calls to "fake" closures (created through ReflectionFunction::getClosure), to allow extra specialization of RETRUN opcode handler.
update libs_versions.txt
update libs_versions.txt
On PHP-7.1 and above we have to check CALL_INFO instead of symbol_table.
Revert "update NEWS"
Add an include path for freetype which is relevant for cmake builds
Use SEND_USER for CONST|TMP as well
Refactor imagegammacorrect()
Add range inference for ZEND_STRLEN
Don't enforce palette conversion when writing GD images
update NEWS
update NEWS
skip this test for now as it seems to have issues running dev server
Update NEWS
fix every work call mmap
Rework FreeType related tests
Removed redundand code
update NEWS
update NEWS
phpdbg next command must stop when leaving function
update libs versions
update libs versions
Removed impossible condition
fix bug related to #865
update NEWS
update NEWS
Limit size of result set for test query
update NEWS
PHP bug 67130: nextRowset should work with unfetched rows
Move dtor before memory freed to avoid invalid read
Skip failing FreeType tests for now
Sync with libgd wrt. compilation units
Remove unused compilation unit
Port variable image resolution support from libgd 2.1.0
Port gdImageSetStyle() overflow check from libgd 2.0.29
Do not wrap user exception in case of custom JSON serialization
Updated NEWS
when needle is short, Sunday algorithm is slower than glibc memchr()
when needle is short, Sunday algorithm is slower than glibc memchr()
Add test for bug #72489
Make zval_ptr_dtor / _zval_dtor_func more robust
fix argon2 lib names
Use zend_string_free instead of efree
Disable add/sub asm for gcc 4.9 pic/pie builds
Updte NEWS
Prevent optimization of huge functions.
fix test (32bits)
fix ZTS build
Port optimization from external libgd
Removed unused function
Add CURLE_SSL_PINNEDPUBKEYNOTMATCH
update NEWS
Special handling for $php_errormsg and $http_response_header.
Mark change with relevant bug number
Implemented Bug #68776 mail() does not have mail header injection prevention for additional headers (PR 2060)
Remove unnecessary #ifdef
Skip ext/gd/tests/bug50194.phpt for now
Ship AX_CHECK_COMPILE_FLAG in a separate file to preserve its license.
Add pdo_dblib changes
Skip test for early TDS versions
Remove unused code which is also not there in external libgd
Update NEWS for 7.1.0RC3
Sync NEWS for bug #73072
fix erroneous resource destruction
Sync NEWS
Remove effectless --enable-gd-native-ttf and USE_GD_IMGSTRTTF
Add special case for earlier versions of TDS
Adjust error formatting so ext/pdo/tests/bug_43130.phpt passes with pdo_dblib
Free error and message strings when cleaning up PDO instances that use pdo_dblib
Add common suite
Explicitly allow NULL values for dblib compatibility
Add dblib-specific query
Remove test cases don't test distinct behavior
Handle SQLDECIMAL/SQLNUMERIC types, which are used by later TDS versions
Allow \PDO::setAttribute() to set pdo_dblib query timeouts
Micro-optimization
update NEWS
update NEWS
upgrade bundled sqlite to 3.14.2
add test for bug #73068
Update to SQLite 3.14.2
update NEWS
fix test portability
pick up the safe alloc pieces from 19866fb76cf4c95d904ebb0e08592cf38303fae9
missed semicolon
fix C89 conformity
Add check in fgetcsv in case sizeof(unit) != sizeof(size_t)
Also fix overflow in wordwrap
Add more checks for int overflow
I don't think 8cceb012a7aabf3c36ab7c2724a436f976cdd165 is needed
Update NEWS
Never quote values as raw binary data
Refactor according to libgd
Add check in fgetcsv in case sizeof(unit) != sizeof(size_t)
Add myself as pdo_dblib maintainer
Skip regression test for issue that has not yet been released in libgd
Skip test for external GD because of not yet published bugfix
Remove remaining zpp fallback code (master branch)
Skip tests for unpatched external libgd regarding libvpx
Remove zpp fallback code (always use Fast ZPP)
Split test for bundled vs. external libgd
Make test case more resilient
Replace md5 image comparision with test_image_equals_file()
fix bug category
sync NEWS
update NEWS
A picture is worth a thousand message digests
Add regression test for bug #73053
Use AX_CHECK_COMPILE_FLAG macro to check for -fvisibility=hidden support.
update NEWS
update NEWS
update NEWS
Bug #73058 crypt broken when salt is 'too' long
Remove handling for defined() and strlen() in opcache
Don't optimize (string) cast on arrays
Remove ignored --FAIL-- section from test case
Compile intval() etc to casts
Add fast paths for bitwise operators
Partially fix bug #67167 - Wrong return value...
Update NEWS
Update UPGRADING wrt. [RFC]: Add Argon2 to password_*
backport 59444347 and 3d7343f6
Update NEWS
Update NEWS
Update NEWS
Add ISSET_ISEMPTY_STATIC_PROP to smart branch list
Followup for bug #72785
Update NEWS
Update NEWS
Update NEWS
Allow to configure php-fpm slow log trace callers limit
Added array parameter support to mb_convert_encoding()
Unbreak FAST_ZPP dead code
Updated NEWS
Improve getaddrinfo implementation
Limit editorconfig to C code
Update UPGRADING wrt. commit c4fe264b
Updated NEWS
Updated NEWS
Updated NEWS
Change the name of the second parameter of image writer functions
Added editorconfig file
Implement #47456: Missing PCRE option 'J'
Use integer placeholders, since values can vary with the TDS version
phpdbg: couple of network function return checks. Possible overflow when copy the socket_path configuration.
Same issue as #72926 in another place.
Sync fix for bug #72910 with current upstream
Bump PHP_API_VERSION
Drop some pieces of commented-out code
Sync convert_to_null with VM cast behavior
Drop SXE_ELEMENT_BY_NAME
Drop unnecessary macro redefinition
Remove support for ORIGINAL_LIB_JPEG
fix leak and error check order
Replace `dirname(__FILE__)` with `__DIR__` in tests
Make test case more resilient
fix double free
improve fix
fix leak
fix leak
Update UPGRADING wrt. RFC: Implement socket_getaddrinfo()
Add skipifs to some mb path tests
fix leak
fix mem leak
Implement FAST_ZPP support for imagecolorat() and imagesetpixel()
Update to SQLite 3.14.1
Revert "PHP 7 compat"
PHP 7 compat
Allow array input for mb_check_encoding()
fix useless assignment
avoid needless function call
remove useless assignment
remove unused assignment
rewrite the getcwd part
fix leak
fix unused assignment
remove duplicated symbol
5.6.27 will be next
Revert 	39587c4817522f40a639f32f77f49595fab066f9 	8b7f594a2bcd67154274c5533274fe4d83a676fd Because of 	24fdffdacbfeaa20e8f08d44c7c61e3fb7ba9ac5
add extra test to protected behavior of compact and array string key order
fix unintentional bc break with compact('this') behavior
Update NEWS
Revert "Update UPGRADING"
Update NEWS and UPGRADING
Revert "Revert "Implement RFC Add session_gc() https://wiki.php.net/rfc/session-gc""
Revert "Revert "Add tests""
Update UPGRADING
Revert "Implement RFC Add session_gc() https://wiki.php.net/rfc/session-gc"
Revert "Add tests"
Update UPGRADING
Update NEWS for 7.1.0RC2
Update NEWS
Update NEWS
Update NEWS
Add tests
sync tests
add more defs for resource alloc/dealloc
add yet one define
Update NEWS
Implement \ArgumentCountError exception
fix version
fix typo
prepare for next
Test case for bug #72771
sync NEWS
Followup for bug #72971
set versions
sync NEWS
Update NEWS
fix HANDLE leak
update NEWS
update NEWS
update NEWS
ensure null termination
Allow optional splitting of basic blocks at RECV/RECV_INIT opcodes.
fix double free
fix double free
add note to UPGRADING.INTERNALS
extend help message
fix leak
fix search path
support also cppcheck for static analyze
add error check and fix leak
fix leak
Bump PHP_JSON_VERSION to 1.5.0
Update NEWS with info about a json_encode fail return
Add test for fixed bug #68992
Add initial failure checking for json_encode
fix leak
fix possible memory leak
fix dealloc mismatch
code cleanup.
Added .user.ini support. Added LSPHPRC support. update LiteSpeed SAPI version to 6.10 .
Implement RFC Add session_gc() https://wiki.php.net/rfc/session-gc
extend help msg
fix leak
extend clang vs compat options
fix leak
integrate clang analyzer
fix leak
add parentheses
fix clang compat
fix leak
fix leak
update NEWS
update NEWS
pdo_dblib: stringify uniqidentifier field
fix check for args by ref
backport relevant part from bug #72858 patch in 7.0
update NEWS
Remove redundant \t
Use integer placeholders, since values can vary with the TDS version
Make sure to copy the right amount of mem over.  IPv6 can be larger than struct sockaddr
Remove accidental NEWS and UPGRADING entries
Revert "Do not prepend ? on nullables in ReflectionType::__toString()"
op_arrays may be optimized independetly and "script" might be NULL
Don't keep dangling pointers.
Run ext/opcache/tests/*.phpt by default
call_user_func(_array): Don't abort on reference warning
sync shm* implementation signatures with POSIX
Adjust test so that it passes on more restrictive filesystems
Add .gitignore for fpm generated files
Do not expect error 0407006A in openssl_private_(en|de)crypt
extend readdir utf-8 name test
This is unecessary for 7.1 (IS_ERROR is an internal type)
Do not prepend ? on nullables in ReflectionType::__toString()
Revert "Append \ to class name returned from ReflectionType::__toString()"
fix TS issues with url rewrite globals
Improvements to fix #72714, suggested by nikic
update NEWS
update NEWS
update NEWS
Revert "Append \ to class name returned from ReflectionType::__toString()"
Improve fix for bug #72837
Update NEWS for 7.1.0RC1
Sync NEWS
Decouple DEBUG_FILE_UPLOAD from ZEND_DEBUG
update NEWS
update NEWS
fix format
avoid other efforts if memory mapping fails
Updated UPGRADING about function call args
fix test
map ell the err code
fix NEWS
Update GIT-RULES release list
Remove leftover of previous change
Remove outdate checks
Update support - Stefan is no longer maintaining FTP
Add myself as PDO_OCI maintainer
Prepare for OCI8 PECL release
Prepare for OCI8 PECL release
Prepare for OCI8 PECL release
fix test
sync NEWS
Make this inline like the many other variants we got of this function (win32/time.c, Zend/zend_virtual_cwd.c, ...)
Skip tests that are supposed to fail due to bugs in old external libgd
Further fix bug #72627 from Stas
Changing m_cost and t_cost to memory_cost and time_cost - Updating tests - Adjusting cost factors:  - memory_cost = 1 MiB  - time_cost = 2  - threads = 2
Make this test also a little more resilient
Make tests a little more resilient
Seems like I did a bad merge earlier, this should make PHP-7.0 sync with 7.1/master properly now
fix char * vs zend_string *
fix tests
Avoid duplicating string
Revert "fix tests"
fix leak
Update NEWs
Update NEWs
Unused label
fix test
Bug #72663 - part 3
Bug #72663 - part 2
Bug #72663 - part 1
Update NEWS
BLock test with memory leak
fix tests
Improve fix for #72663
Update comment
Unused var
update NEWS
update NEWS
fix test
fix blocking pipe stream option value
#72085: SEGV on unknown address zif_xml_parse
fix test cleanup
Append \ to class name returned from ReflectionType::__toString()
Cleanup parameter/return type checking code
fix tests
fix tests
add missing skipif section
Remove unused OCI8 macros
Return true for is_object() on Incomplete_Class
gettype(): Use "resource (closed)" instead of "unknown type"
Scrub UPGRADING and UPGRADING.INTERNALS
Hide (un)serialize data from ABI
put missing prototype and fix ts build
Set DSA or DH key only if pub key supplied
update UPGRADING
update NEWS
update NEWS
Return false if tag is not supplied or cannot be retrieved in AEAD
add declaration of functions
delete duplicate functions
Add test.
Bug 70195
Update NEWs
Require parameter to be an object if passed.
Show "or null" in TypeErrors for nullable arg_infos
Use non-deprecated %pure-parser
Corrected typo in comment
fix borked interbase patch
Check them in autoconf
add missing chunk to support mb path in symlink()
pull ps_title behind the logic to support the current codepage
fix typo
add missing mb path support chunk
ReflectionType improvements
Use size_t for path length
Check for string overflow
msql > mysqli, use a better extension name as an example in php.ini, as we do not have msql support anymore (Sorry Rasmus!)
Remove sql.safe_mode
We do not need to check the return value of php_win32_init_gettimeofday() anymore, as the symbol is always going to be available to us
The call to FreeLibrary() should be within the if, so we don't pass INVALID_HANDLE_VALUE to it, in case LoadLibrary() fails
Get rid of these slow calls to LoadLibrary()/GetProcAddress() calls on Windows, we require Windows Vista as bare minimum for PHP anyway, so it does not make any sense to do this slow emulation anyway.
Support "git worktree"
Preserve BC for rand() AND mt_rand() where min > max
Update to SQLite 3.14.0
Update NEWS and UPGRADING
pull-request/1099 Request #65081 - implemeting mb_scrub
pull-request/1100 Request #65081 mb_chr() and mb_ord()
Use checked add/sub intrinsics instead of asm for ++ and --
Use checked arithmetic intrinsics instead of asm, when possible
Add NEWS
Bugfix 72791: fix memory leak in PDO persistent connections
Add NEWS
Bugfix 72791: fix memory leak in PDO persistent connections
Don't copy mime types in CLI server
Class constant visibility modifiers are now supported
Remove obsolete Id tags
Bump version in OCI8 test
Update NEWS
Remove typo'd commit
Swap min/max if min > max
Allow min > max for mt_rand(). Bug #72784
Replace dead branch with ZEND_ASSERT()
Add test for bug #69107: finfo no longer detects PHP files
check malloc result
Implement #38992: invoke() and invokeArgs() static method calls should match
Update php_version.h
Avoid use of scratch space in HTTP fopen wrapper
Recognize TDS versions 7.3 and 7.4
Note about the recent change to the WSA version check on Windows
Added some extended info about ext/exif to phpinfo()
Remove void comment
Remove old $Id$ tags
Sync with 7.1 branch changes from Nikita & Dimitri to keep OCI8 code identical
News for 7.1
NEWS + UPGRADING for recent EXIF additions
Added support for Sigma/Foveon EXIF tags
Added support for Minolta EXIF tags
Added support for PENTAX EXIF tags
Remove this redundant entry for Canon
mt_rand 32/64-bit consistency
Added a warning in case --with-mp is combined with --enable-debug
Check the return value of dbconvert() in mssql_guid_string(), as it may return -1 in case the conversion failed. In that case false is returned.
Add assertion to prevent type narrowing
pefree() these (with persistent=0), as internally in zend_multibyte.c they do the same, and at the same time also cast them to void pointers to silence the compiler warnings.
NEWS and UPGRADING for recent fixes and additions to ext/exif
Added support for Sony pictures in EXIF as per requested in bug #72735
Split this test up to a 64bit version for more coverage
Implement request #27814
Clean up FR #72633
5.6.26 will be next
Use 'p' to validate a path in exif_imagetype() (like the other exif function already does)
Move fix for #72735 to 7.1.0beta3
improve the check, avoid strlen on NULL
Changed the way MAKERNOTE is handled in case we do not have a matching signature (Remi).
Do not add already added object to the internal OpenSSL table
- add a test for makernote (#72682) - reduce image size - add panasonic.jpg sample
improve the check, avoid strlen on NULL
update NEWS
update NEWS
update NEWS
update NEWS
Changed the way MAKERNOTE is handled in case we do not have a matching signature (Remi).
NEWS
Changed the way MAKERNOTE is handled in case we do not have a matching signature (Remi).
update libs_versions.txt
update libs_versions.txt
Minor revert of be3640150cb2f88d38a8d405b2bf708f04be39ef
fix paths in tests
clean removed functions (since they are alias)
NEWS
fix ts build
add skipif (needs json)
NEWS
It's packed array
Optmized array_rand
Optimized array_pad
Minor touches to the exif build script on Windows; ADD_EXTENSION_DEP() will already ERROR() out, so the WARNING() statement would never be returned anyway.
Update NEWS for 7.1.0beta3
update NEWS
cleanup table after test
- lastInsertId using Postgres Lastval() function
Folder marks
Optimized array_merge and cleanup
Optimized array_merge
prepare next
fix php_version.h
increase versions for 7.2
Optimized array_column (thanks to Benjamin Coutu)
fixed IS_REFERENCE handling
Removing Argon2d, changing config arg to --with-password-argon2
Make the expression more reasonble (by nikic)
Optimized array_reverse
update NEWS
update NEWS
Revert "upgraded to PCRE 8.39"
Also fix TSRM on Windows
Add missing TSRMLS_FETCH()
fixes bad address given to onig_error_code_to_str
update NEWS
add test for bug #72701
fix typo
add more errno handling
set errno in ioutil access routine
move error check to right place
document file cache fallback ini directive
fix and improve the ioutil cwd routine for nts
Implement FR #65462: Please add tests for gregorian and jewish overflow fixes
Revert "Make call_user_func() on reference args consistent"
Bug #69975 had already been fixed as of PHP 5.6.12
Update to SQLite3 3.13.0
Bug #6836 has already been fixed in PHP 5.6.24 and 7.0.9
Add new curl functions in UPGRADING
Update NEWS
cleanup the table after the test run
update NEWS
update NEWS
Implemented FR #72633 Postgres PDO lastInsertId() should work without specifying a sequence
update NEWS
update NEWS
Implement #72653: SQLite should allow opening with empty filename
Bugfix#70896 gmp_fact() silently ignores non-integer inputs
fix broken proto doc
upgraded to PCRE 8.39
fix missing header and conflicting symbol
fix compiler warning
fix data type
Cleanup gmp_sqrtrem() test
Further fixes wrt. bug #72668
use more suitable types here, too
change to more suitable datatypes
Update NEWs
update NEWS
update NEWS
Make phpize use PHP_PREFIX as the default location (windows)
Enable 'nmake test' on building extensions
update NeWS
update NEWS
Enable 'nmake test' on building extensions
Make phpize use PHP_PREFIX as the default location (windows)
Update NEWS
regenerate date parser with re2c 0.15.3
regenerate date parser with re2c 0.15.3
fix compiler warning
rework long path normalization stuf
More tolerance in another IntlCalendar test
Ensure session GC is not run during variation6.phpt
add folds
improve typedef and fix the fake function
add missing cast
correct comment
don't return long path prefix to script
fix test
fix test
Implement #52857: Access to gdImageSetClip() and gdImageGetClip()
Remove unused DEFAULT_KEY_LENGTH define
Change the name of the second parameter of image writer functions
Make sure TOKEN_PARSE mode is thread safe
Use OPENSSL_RAW_DATA in raw data decryption tests
Make base64_decode() in non-strict mode binary safe
Add NEWS entries
base64_decode: Add tests
base64_decode: Handle all invalid padding equally
base64_decode: strict: Fail on excessive padding
base64_decode: strict: Fail on truncated input
base64_decode: Avoid code duplication in failures
Require strict base64 in data URI
Require strict base64 in openssl_decode
Make IntlCalendar::getNow() test more tolerant
Update NEWs
FPM: add test for CVE-2016-5385
Typo..
Removed incorrect (leftover?) sentence in ini
Removed incorrect (leftover?) sentence in ini
Implement #47456: Missing PCRE option 'J'
Update NEWS for 7.1.0beta1
bump zip extension version
bump zip extension version
Update NEWS
Prepare NEWS for 7.2
Prepare NEWS for beta2
update libs_version.txt
update libs_versions.txt
update NEWs
Update NEWS for RFC: Additional Context in pcntl_signal Handler
Update NEWS with fixed OpenSSL 1.1 build
Add test case for imagecopyresampled() with alpha
regenerate date parser with re2c 0.13.5 to fix OSX issues
regenerate date parser with re2c 0.13.5
Regenerate with the -b flag, as we used to do.
Update NEWs
Update NEWS
Improve fix for #72520
Add missing X509_get_signature_nid for 1.0.1
Use always non const SSL cipher version string
update UPGRADING
sync NEWS
#72482, revert for 5.6 for now
Update NEWS
fix test out
fix test portability and expectation
#72482, Ilegal write/read access caused by gdImageAALine overflow
merge conflict
fix #72494, improve input color check and prevent issues when old gd are used, done before gd call
improve fix #72558, free contribRow as well
improve fix #72558, while (u>=0) with unsigned int will always be true
improve fix #72558, while (u>=0) with unsigned int will always be true
fix #72519, possible OOB using imagegif
fix #72512, invalid read or write for palette image when invalid transparent index is used
fix #72519, possible OOB using imagegif
Apparently some envs miss SIZE_MAX
fix #72519, possible OOB using imagegif
fix #72512, invalid read or write for palette image when invalid transparent index is used
Partial fix for bug #72613 - do not allow reading past error read
Partial fix for bug #72613 - do not treat negative returns from bz2 as size_t
add missing header to fix build
Increase array_rand() rehashing treshold
make constant name more descriptive
Optimize the n=1 case of array_rand()
update NEWS and UPGRADING
fix regex decls and c89 compat
Support Unicode characters in the local part of an e-mail address.
Update authors of openssl.c
Use opaque EVP_PKEY for new EC logic in openssl_pkey_new
Use opaque RSA, DSA and DH
Add missing creating of md_ctx in openssl_digest
Change sign method from ecdsa-with-SHA1 to SHA1
Add missing break in php_openssl_is_private_key
Use SHA1 instead of DSS1 in test for bug #41033
Hide setting server ECDH curve for OpenSSL 1.1
Do not use tmp_rsa_cb for OpenSSL 1.1
The DSS1 is not available in OpenSSL 1.1
Use opaque EVP_MD in phar_verify_signature
Move and use opaque pkey in openssl_dh_compute_key
Use opaque pkey in openssl_pkey_get_details
Use EVP_PKEY_base_id where possible
Use opaque EVP_PKEY in php_openssl_is_private_key
Do not use X509 props directly in openssl_x509_parse
Do not use X509_EXTENSION data directly as it is opaque
Wrap pkey id and rsa getters
Use opaque md ctx in openssl_sign and openssl_verify
Use opaque cipher ctx in openssl_seal and openssl_open
Use opaque EVP_MD_CTX in openssl_digest
Bump a minimal OpenSSL version to 1.0.1
Bump minimal OpenSSL version to 1.0.1
Update NEWS and UPGRADING with info about dropping SSL2
force SSL_OP_NO_SSLv2
Cleanup all SSLv2 code, whatever OpenSSL version is
add test
check the encoding of argument for mb_ereg, mb_ereg_replace, mb_ereg_search_init
add php_mb_check_encoding
correct macro names
Avoid uncollectable cycle in sxe_property_get_adr
Remove unnecessary use of sxe->tmp
Remove useless dtor handlers in intl
Un-XFAIL test case
Extend libxml exports
Add missing call opcodes in cleanup_unfinished_calls()
update NEWS
update NEWS
Update NEWS
Add NEWS entry
fix: bug72222 for PHP-5.6 reflection export of array consts
Unified behavior of modification of returned by reference value in finnally code.
Removed wrong warning
Updating config.w32 to correctly add Argon2RefLib to LIBS flag
Prevent wrong optimization
fix contirbutor name
Disable optimizer when it conflicts with phpdbg tests
CS fix and comments with bug ID
Add to NEWS
Update NEWS
Remove bogus zend_signal_shutdown symbol from header
Cleanup zend_/signal usage in phpdbg.c
Untouching old tests
Adding  to PHP library includes
Safer signal handler (no malloc() call)
missed dot
missed the dot
update NEWS
update NEWS
Updated NEWS
Updated NEWS
Updated NEWS
Partially fix #72506: idn_to_ascii for UTS #46 incorrect for long domain names
update NEWS
update NEWS
Make phpize set a proper build type (windows)
Updated NEWS
Updated NEWS
Updated NEWS
Updated NEWS
Updated NEWS
Updated NEWS
backport to 5.6 (we should not unset the default value)
Upate NEWS
Adding Windows build flag for --with-argon2
Rewrite watchpoints to be much more stable
Removing argon2 library files in favor of --with-argon2[=DIR]
show libtidy version in the info, if available
Update NEWS
Update NEWS
Bug #66836 has been fixed
Remove needless zeroing of anonymously mmap'd memory
Remove needless zeroing of anonymously mmap'd memory
update NEWS
fix config.w32 for new libtidy support
ext/tidy: work around a legacy libtidy bug in a test.
ext/tidy: update the configuration file test to not inspect output.
ext/tidy: fix expected test output with tidy-html5.
ext/tidy: fix non-deterministic expected output in two tests.
ext/tidy: fix DOCTYPE definitions in expected test output.
ext/tidy: add support for the new tidy-html5 library.
Credit Scott, who authored the ext/mcrypt deprecation RFC
Update for NEWS
Deprecate mcrypt and mdecrypt stream filters
Use PHP_DEP_FE instead of manually emitting deprecation warnings
Implement RFC: Deprecate (then Remove) Mcrypt
Add document for zend_gc_collect_cycles
Generate new .c file from .re file, as that was missing on my previous commit
move the internal only info into UPGRADING.INTERNALS
Implement RFC "Deprecate mb_ereg_replace eval option"
add comment and fix typo
added UPGRADING and NEWS notes
fix build with mod_winnt
Pass error severity to SAPI modules and raise corresponding error level in Apache
fix cli codepage reset
silence compiler noise
Reverting PASSWORD_DEFAULT to PASSWORD_BCRYPT
Add opcodes to zend_wrong_string_offset()
Adding test cases for Argon2i and Argon2d
Working implementation with password_hash, password_verify
Introducing Argon2 memory, time, and lanes constants
Implementing password_verify and password_get_info for Argon2
Updated NEWS
Ensure optind is correct when flags appear after dash-dash
Add optind param to getopt
Updated NEWS
Updated NEWS
Updated NEWS
update filter_var filters for ipv4 addresses to reflect rfc6890
Correct for connection with PDO::ATTR_STRINGIFY_FETCHES set to false
Updated NEWS
Updated NEWS
Implement #43269: Retrieve FD_SETSIZE within PHP
Updated NEWS
Updated NEWS
Backported bug #71144 (Segmentation fault when using cURL with ZTS)
fix bug #72024 (microtime() leaks memory)
Updated NEWS
NEWS
NEWS
add test for bug #72564 (7.x regression)
pnctl_signal(): add siginfo to handler args
Make mode selection part of mt_srand()
Use zend_bitset
This became unnecessary after #72543 is fixed
Mask DB usernames from expected test output for test portability
merge NEWS blocks
5.6.24RC1
Add NEWS entries
base64_decode: fix bug #72264 ('VV= =' shouldn't fail in strict mode)
base64_decode: remove redundant code
base64_decode: fix bug #72263 (skips char after padding)
base64_decode: fix bug #72152 (fail on NUL bytes in strict mode)
base64_decode: remove redundant check
base64_decode: reorder to fix out of bounds read
5.6.25 is next
Forbid use of array() in nested destructuring
Update NEWS and UPGRADING
oops, name test right
change long to zend_long, for uniformity
fix typo in configure message
Improve array_rand distribution
Updated to version 2016.6 (2016f)
Empty merge
Updated to version 2016.6 (2016f)
Empty merge
Updated to version 2016.6 (2016f)
Asynchronous signal handling without TICKs. Squashed commit of the following:
add tests for bug #72512
Rewrite test to avoid sending emails
Update NEWS and UPGRADING with missed DBA changes
Bump versions
Bump versions/dates for release of 7.1.0alpha3
Add NEWS entries
base64_decode: fix bug #72264 ('VV= =' shouldn't fail in strict mode)
base64_decode: remove redundant code
base64_decode: fix bug #72263 (skips char after padding)
base64_decode: fix bug #72152 (fail on NUL bytes in strict mode)
base64_decode: remove redundant check
base64_decode: reorder to fix out of bounds read
Update NEWS
Export php_date_get_interface_ce() for extension use
Alias rand to mt_rand
Use size_t instead of int for loop counter
Removed duplicate php.h include in SAPI.h
Removed a surplus condition in php_register_variable_ex()
fix error text
fix datatypes and add range checks
Closure::fromCallable(): Getting non-static method statically
Closure::fromCallable(): Better LSB handling
re-add range check
Closure::fromCallable(): Use fake closures
fix possible optimization bug
fix possible optimization bug
Don't enforce LSP if prototype method is private
fix typo
Split rand and mt_rand into separate files
Revert "fix datatype and add range check"
fix datatype and add range check
Some cleanup:
Update NEWS and UPGRADING
upgrading entry for Closure::fromCallable
news entry for Closure::fromCallable
set versions
prepare next version
Increase ODBCVER to 3.5 by default
Update PHP 5.5 NEWS entries with CVE info
add missing news entry
add missing NEWS entry
Update NEWS and UPGRADING
this was actually fixed in 5.6.23
Update NEWS
update NEWS
update NEWS
extend test
Update NEWS and UPGRADING
update NEWS
update NEWS
update NEWS
Prevent inlining through call_user_func() and call_user_func_array()
Introduce new CHECK_VAR instruction to keep warnings about undefined variables.
Disable inlining for $this->foo(), because $this may be not in object context
Disable inlining for $this->foo(), because $this may be used not in object context
Switch failure to register class back to E_ERROR
Inline simple constant functions
Remove openssl test 029 as it is incomplete
Return null instead of false
Add missed return replacing bail out
clanup
Swap type check order
Add parenthesis to if statements
Revert "Skip new OpenSSL ECC tests on 32bit"
Improve php-fpm systemd unit file
Add return code from json API functions
Skip new OpenSSL ECC tests on 32bit
Don't use FUNC_ARG fetches for call_user_func()
Make call_user_func() on reference args consistent
Remove assert for now
Use DO_UCALL for method calls
More type inferences fixes
Update NEWS
Updated NEWS
Update NEWS
Update NEWS and UPGRADING
Update NEWS
Update NEWS
Update NEWS
Implement curl server push
Refactor easy handle lookup
Refactor setup of handlers on copied curl handles
couple of resource leaks fixes and use after free's
Correctly add to the length of the final string
Correctly add to the length of the final string
Update NEWS
Add curl_multi/share_errno() curl_share_strerror()
Update NEWS with ECC curve support info
Improve openssl ecc keypair support implementation
Added editorconfig file
Adds initial support to generate and work with ECC public key pair
Use one place to define max length of double
Change default for serialize_precision to -1 (use mode 0)
Add decimal point in double serialization
Replace json.precision with serialize_precision
Avoid magic number. NUM_BUF_SIZE may be in header. Suggestions are appreciated
Add better value to test
Remove unneeded WS change
Remove unneeded output from test
Add cast
Enable 0 mode for echo/print
Simply use ndigit for flag for zend_dtoa mode
Add JSON_G(precision)
Initial patch for 0 mode float conversion. The magic number is better to be improved. Any suggestion where to define it?
Make LDAP_ESCAPE_DN compliant with RFC 4514
Align NEWS files with 7.0.8 and Changelog
Add CVE info for PHP 5.6.22
Add CVE info for PHP 5.6.23
Add missing entries for PHP 5.6.23
Fallback to kill() if raise() doesn't work
Add temporary workaround for raise() failure
Added ability to make non-local control transfer through interrupt function
Update NEWS
improve ZEND_MODULE_GLOBALS_BULK macro, fix data type
remove unused declarations
Use zend_sort in array_multisort (tests change is expected)
typo
Turn safe timeout handling into general interrupt handling ability.
yet another test rewrite
Update NEWS
Tiny tweak for `$header` initialization, it should always be an array
update NEWS
update NEWS
rewrite test
merge news entries from 5.5
Allow "proxy" ovjects to substitute their class names through get_class_name() handler (similar to var_dump() and others).
Regenerated html_tables.h to fix compilation warnings
fix test cleanup
fix dir separator in test
fix test
bump version after release
bump version for release
update NEWS
Enable Zend signals by default
Restored signed format specifier
Revert "sync tests with the latest format fixes"
sync tests with the latest format fixes
fix include order
fix typos
fix two remaining tests
fix test
re-fix leak
re-fix leak
Revert "fix leak"
Revert "fix leak"
fix leak
5.5.38 now
fix leak
bump zip version
remove the huge test file, generate it on the fly instead
remove the huge test file, generate it on the fly instead
remove the huge test file, generate it on the fly instead
Now the right bug #
update NEWS
fix tests
fix build
Improved support for zend-signals.
Improved support for zend-signals.
Use empty keys instead of _empty_ in json decoding
update NEWS
Zend signals should be installed after request startup (or regular signals may be installed before zend_signal_startup)
notes to UPGRADING.INTERNALS
Removed wrong HANDLE_UNBLOCK_INTERRUPTIONS()
notes to UPGRADING
Enable Zend signals by default
Reverted chunk committed by mistake.
Update NEWS
Update NEWS
Update NEWS
Protect OPcache from termination during SHM modification.
HANDLE_BLOCK/UNBLOCK_INTERRUPTIONS() protection on inter-process data is completely useless now. Historicaly, these macros were introduced as a protection from execution timeout handling, but we don't need them anymore after "safe execution timeout" implementation. These macros are still useful to protect from termination during inner process data modification, because of OS signals (e.g. SIGTERM during OPcache SHM update).
Cleanup zend_signal API
Removed unused callbacks
update NEWS
upgraded to PCRE 8.39
Add NEWS entry about OpenSSL AEAD
Update NEWS with info about OpenSSL error store
Remove test for incorrect fix of bug #69882
Remove expected openssl errors that are not needed anymore
Update NEWS (this bug also exists in 7.1-alpha)
Update NEWS
Update NEWS
Exception safety for direct CV assign of *CALL instrs
typo
Update NEWS
Update NEWS
fix SQLite info
update NEWS and UPGRADING
update NEWS
fix test portability
fix test portability
fix test portability
Add additional LDAP SASL constants
Update NEWS
Update NEWS
Update NEWS
More type inference fixes
Added NEWS entries
Add tests for LDAP_OPT_* constants
Add LDAP TLS Protocol Min constants
Add tests for the LDAP CRL check option
Implemented RFC: Replace "Missing argument" warning with "Too few arguments" exception Squashed commit of the following:
Added specialized handlers for SEND_VAR/SEND_VAR_EX opcodes.
Change default gd.jpeg_ignore_warning = 1
Updated to version 2016.5 (2016e)
Empty merge
Updated to version 2016.5 (2016e)
Empty merge
Updated to version 2016.5 (2016e)
These bugs are also in 7.1-alpha
Add missing LDAP constants
Maybe fix bug #72011
E_RECOVERABLE_ERROR -> thrown Error
Improve the signature
Unused var
C89 compatibility
Only allow single comma in tail
Implemented FR #72385 (Update SQLite bundle lib(3.13.0))
Cleanup
Add support for "instanceof" pi nodes
Use union for pi constraints
Cleanup
Switch zend_print_zval_r to use smart_str
Replace zend_ce_error with NULL and replace more E_ERROR with thrown Error
fix test portability
update NEWS
Value should not be a reference here
Update openssl_error_string to run and be more forgiving
EG(fake_scope) was always set to NULL wrongly
cast const away
Add iterable type to opcache
fix test out
fix test
sync with deleted file
fix tests
add flags to suppress the verbosity
Request #69489
Optimization
Delay IS_ERROR checks
5.6.23RC1
5.6.24 will be next
typo
Followup for bug #53432
cleanup
Replaced wrong check with proper ZEND_ASSERT()
Removed useless reference counting
This test was fixed together with fix for bug #70228
fix php_log_err macro
prevent invalid color index (palette only), may lead to crash
Better fix for bug #70228 (memleak if return in finally block)
Add CVE to #66387
Add CVE to #66387
Use LCA for object(ce) type joins
Cleanup
fix NEWS
fix NEWS
add missing NEWS entry
bump news file
Revert "bump news file"
bump news file
Added test
update NEWS
#72337 invalid dimensions can lead to segv
set versions
7.0.9 next
cleanup
Add test for bug #53735
micro-optimization
simplification
Improve type narrowing (check only SSA definitions).
fix ibase handle initialization, mostly compiler warnings
fix typo
hard_timeout ignored on TS
fix hard_timeout support in shutdown functions
fix broken skipif and add xfail for now
missing return
Limit covariance to array and Traversable
Check SKIP_SLOW_TESTS in issue0140.phpt
Don't optimize special dynamic calls to non-dynamic
Add new test for openssl_pkey_new
Add test for openssl_error_string
Remove openssl_x509_parse for OpenSSL 0.9.x
Covariance on inheriting classes with iterable
Forbid ?void
More explicit errors for return; vs return null;
Forbid "return;" for typed returns already at compile-time
Small generator-related cleanups
Add iterable tests
Add iterable to zend_get_type_by_const()
Add is_iterable() function
Add iterable pseudo-type
fix typo
update NEWS
Enable per-module logging in Apache 2.4+
update NEWS
added test for bug #47517
update NEWS
fix dangling pointer, phpdbg reveals it
fix known interned strings init with TS per request
update UPGRADING
update NEWS
fix typo
fix typo
Added backwards compability with php_log_err by using macro
Logging to syslog with dynamic error levels (related to #49467)
improve date header code
update NEWS
Added mandatory Date: header to built-in webserver
update NEWS
Added reflection test. Standardised filename for other tests.
Cleanup spurious changes.
Use "fast" assembler functions in "slow" ones. Mark assembler functions that changes memory.
cleanup
update NEWS
Add test for bug #72294
Remove a few references to $GLOBALS and clean up a bit
Also include ini_get
Forgotten test script for bug #72300
Add entry to UPGRADING
Correct inline comments regarding pass1/pass2 actions
fix test
fix test portability
better but longer way processing float/double and memory
No sure why this is failed in travis
Attempt to fix tests fails
Revert "fix #72155 (use-after-free caused by get_zval_xmlrpc_type)"
Split ZEND_SEND_VAR_NO_REF into ZEND_SEND_VAR_NO_REF and ZEND_SEND_VAR_NO_REF_EX (similar to ZEND_SEND_VAL) and remove ZEND_ARG_* flags.
Initialize only the necessary fields.
fix condition
update NEWS
fix test title
Add test for bug #72258
update UPGRADING
Expose missing flags from libzip at least >= 0.11.x
update UPGRADING
Expose missing flags from libzip at least >= 0.11.x
fix #72155 (use-after-free caused by get_zval_xmlrpc_type)
This is exported at implementation site, but no forward declaration can cause compile warnings
Forbid "yield from" in force closed generators
Added NEWS Entry
Test for bug #72221, segfault in zend_memnstr_ex
This is not a problem here
Revert "assert won't cause indrect var access if it's disabled"
assert won't cause indrect var access if it's disabled
Typo & cleanup
update NEWS
Expose missing flags from libzip at least >= 0.11.x
Add missing newlines to phpdbg's help for the run command.
Skip test which is 64bits only
Skip test which is 64bits only
5.5.37 now
update NEWS
fix test portability
Update NEWS
Better fix for bug #72135
Forbid dynamic calls to scope introspection functions
Allow empty property names
Ensure no entry predecessors for SSA construction
Replace BB end with BB len
Test for bug #72221, segfault in zend_memnstr_ex
Improve previous fix
Allow for [] = $array; (alias for list())
Added and fixed tests related to "finally" handling
Update CODING_STANDARDS
Added specialized handler for ZEND_FETCH_DIM_R opcode with only numeric indexes.
Move builtin_ctzl portability into zend_bitset.h
Use PHP_VERSION as OPcahce version
Mark assert() as INDIRECT_VAR_ACCESS
Inlined fast paths of the freqently execute handlers for FETCH_DIM_R.
Let's only read-only here
Specialize ZEND_ASSIGN_ADD and family according to value of opline->extended_value
IS_CONST operands don't have to be separated. Use reference-counting instead of duplication.
micro-optimisation
update NEWS
Tidy up
Remove unnecessary boundary checks
Resolve bug #72017
Revert "Revert the ABI break commit"
Revert "Revert "fix #72143 (preg_replace uses int instead of size_t on zend_string_allocs)""
Check if generator object is created by GENERATOR_CREATE when throw exceptions from generator function
Extend CAL_FLAGS from 8-bit to 16-bit
Revert "Check if generator object is created by GENERATOR_CREATE when throw exceptions from generator function."
Check if generator object is created by GENERATOR_CREATE when throw exceptions from generator function.
Correct name, it was typed in habitually
Revert the ABI break commit
Revert "fix #72143 (preg_replace uses int instead of size_t on zend_string_allocs)"
Typo.
Add Closure::fromCallable().
Update NEWS with info about JSON parser method
fix dir separator
Inference: $a[]= results in long keys
Inference: Use common handling for compound assign ops
Add COPY_SSA_OBJ_TYPE macro
fix #72143 (preg_replace uses int instead of size_t on zend_string_allocs)
fix #72143 (preg_replace uses int instead of size_t on zend_string_allocs)
fix #72206 (xml_parser_create/xml_parser_free leaks mem)
fix #72206 (xml_parser_create/xml_parser_free leaks mem)
fix #72209 (ReflectionProperty::getValue() doesn't fail if object doesn't match type)
Implement FIPS 180-4 algos: sha512/256 and sha512/224
Check in generated lexer
Raise compiler warning on octal overflow
improve 7132fe19c29c512d00a3afe101212ba15fa1f99e
Added news entries
PR#1905: directly copy to target memory
fix 1bb8a7b0b895af4a9e6b24101fe8fab5af64f86c
fix 1f52a03082b2816826bc5bd8c241f5d016d15395
missing efree()
Changed invalid pack format in unpack_error.phpt
Changed invalid pack format in unpack_error.phpt
fix #72180 (Env variables incorrectly pretty printed in config.nice, phpinfo)
fix #72180 (Env variables incorrectly pretty printed in config.nice, phpinfo)
Eliminated checks for (func->op_array.fn_flags & ZEND_ACC_GENERATOR) in fast path of DO_FCALL* handlers. This slightly improves calls to regular function and method calls in cost of a bit slower generator initialization. Separate call frame for generators, allocated on heap, now created by ZEND_GENERATOR_CREATE instruction.
Explicitly construct phi set during def propagation
fix dir separator in test
Removed useless code
update NEWS
comments for e,E,g,G
pack()/unpack() for Big Endian float/double and Little Endian float/double
Intern some known (and offten used) strings.
workaround the extra new line in the test out on another env
Added NEWS entry missed while doing merge
Committed by accident
Use main VM stack for generators. Only single call frame for generator itself is allocated on heap, call frames for nested functions are allocated on main VM stack. In case "yield" used in context of another function call, call stack has to be frozen and then restored.
prepare for 5.6.22RC1
add missing NEWS entry
prepare for 5.6.22RC1
add missing NEWS entry
Add php_json_yyparse for direct use in json ext
Added test
Allow for special case for the opcache zend extension
fix handle leak
The "flock" structure has to be writable on AIX.
set versions
prepare next 7.0.8
Don't HT_ASSERT rc=1 in zend_hash_apply functions
Add check for string overflow to all string add operations
update NEWS
update NEWS
Revert "Backport patch for bug #71820"
Remove unnecessary strlen check
Strlen cleanup (additions for previous one fix)
Add $http_response_header tests
Reimplemented Bob's commit bac6fdb0c52c924e726c5a78de8858bf27b6586b without insignificant renaming and white-space changes
Revert "Refactor zval cleanup into single function"
update NEWS
reorder entry alphabetically
Re-fix #72165
Refactor zval cleanup into single function
Add nullable parameter types
Implement nullable return types.
Micro-optimization
Update comments consistently (#var0 -> #v)
Refactor DFA pass for better readability
fix NEWS, patch for #71428 was reverted
correct wording
Inlined fast path
add compiler option to disable builtins (special case function calls)
change fcall and statement handlers to accept frame
add test fo rbug 71805
update libs versions
upate libs versions
Mark fcc as initialized for object calls
hide implementation details in tests
improve test coverage of multicatch
Added NEWS entry for socket_export_stream()
Implement socket_export_stream()
Updated NEWS
Backport of fixed for bug #71331 - Uninitialized pointer in phar_make_dirstream()
Use embedded json parser method structure
Drop dup declare with inconsistent linkage
Add missing update_constants in ReflectionClassConstant
Ensure an ORDER BY gets the expected row order
Add NEWS entry for rfc:multiple-catch
Allow catching multiple exception types in a single catch statement
fix test if unlink fails occasionally
fix dir separator in test
Update PHP 5.5 NEWS entries with CVE info
fix test
Export zend_pass_function to allow comparisons against it
Mark all $php_errormsg as refs to inhibit optimization
Create temporary sqlite db in test dir rather than cwd (and clean it up)
This function needs to be exported for extensions that implement complex zend objects
Reset IMMUTABLE flag when copy_ctor'ing AST
Drop dead code from update_constant
Revert code to use DUP instead of COPY
fix test
Expose some of the new curl constants to PHP userspace
news entry
Implement #51879 stream context socket option tcp_nodelay
Implement #51879 stream context socket option tcp_nodelay
Add CVE IDs PHP 7.0.0
Add CVE IDs PHP 7.0.2
Add CVE IDs PHP 7.0.3
Add CVE IDs PHP 7.0.4
Add CVE IDs PHP 7.0.5
Add CVE to bug #71912 (PHP 7.0.6)
Add CVE to bug #69719 (PHP 5.6.10)
Add CVE IDs PHP 5.6.12
Add CVE IDs PHP 5.6.13
Add CVE IDs PHP 5.6.14
Add CVE to bug #70976 (PHP 5.6.17)
Add CVE IDs PHP 5.6.18
Add CVE IDs PHP 5.6.20
Add CVE to bug #71912 (PHP 5.6.21)
Use unsigned shift to clear the bit.
fix constants availability
Simplified condition
size_t is unsigned and can't be negative
fix size_t signed comparison
Added CVE
Add NEWS entry for bug #71331 (fixed in 7.0.3)
Add NEWS entry for bug #71331 (fixed in PHP 5.6.18)
update NEWS
Added test
simplify expression
simplify expression
variable used out of scope
Don't initialize EX(call)->symbol_table on each function call. Keep it uninitialized, and check ZEND_CALL_HAS_SYMBOL_TABLE flag when necessary.
- get rid of EG(scope). zend_get_executed_scope() should be used instead. - ichanged zval_update_constant_ex(). Use IS_TYPE_IMMUTABLE flag on shared constants and AST, instead of "inline_change" parameter.
small whitespace fix
update NEWS
Support known static/method calls in call graph
Ct bind private/final $this method call args
update NEWS
update NEWS
Use zend_string_safe_alloc
fix/improve tests
Removed "zend_fcall_info.function_table". It was assigned in many places, but is never used.
fix merge
Updated NEWS
fix build
Use zend_string_safe_alloc
Optimize property guards for the most usual case with only one acive guard.
5.5.36 now
Skip test on ZTS build
Take pi defs into account when propagating defs
Make pi placement independent of phi placement
Drop some unnecessary checks
Introduce ZEND_BITSET_FOREACH macros
Make zval_ptr_dtor / _zval_dtor_func more robust
Adjust DFG allocation size
Make MAY_BE_ERROR handling more accurate
Mark zend_timeout as noreturn
Added news entry
Update run-tests.php
Add NEWS entry for ?? in constant scalar expressions
allow null coalescing (??) on constant expressions
Update NEWS
Safe execution timeout handling.
Reduced amount of code generated for interrupt handling. Improved ZEND_VM_INTERRUPT_CHECK() placement (always perform checks after opcode handler completion, when instruction pointer value is alredy changed to the next opcode).
Better fix for #71952
Add NEWS entry for rfc:intl.timezone.get-windows-id
Update IntlTimeZone methods for ICU 52
Prevent usage in GC after free.
Fully initialize DECLARE_CLASS/FUNCTION opcodes
combine conditions
mark frequent intermittent fpm test with XFAIL
prepare for 5.6.21RC1
Bump version in test
Drop left-over debugging statement in block pass
Drop unnecessary checks in get_closure
Adds new curl option CURLOPT_SSL_VERIFYSTATUS to enable OCSP verification
Add test for bug #72028
Don't copy args in Closure::__invoke()
Drop dead assignment
Cleanup condition in SEND_VAR_NO_REF
Use symtable lookup for arrays in array_column
Respect property visibility in array_column
Align NEWS entry format
Align NEWS entry format
Remove IS_VAR_RET_REF flag
update NEWS
Minor tweaks
Use DO_FCALL_BY_NAME instead of DO_FCALL, if possible
On second thoughts, keep this in sync with 5.6 for 71422
Optimize zend_binary_assign_op_dim_helper()
Move rare cases of DO_FCALL into separate helpers.
Separate unspecializeble code of INCLIDE_OR_EVAL into helper functions
ASSIGN_ADD micro optimization
Delay IS_UNDEF check for FETCH_DIM_W and family
Delay IS_UNDEF check for FETCH_DIM_R and family
Reuse zend_fetch_dimension_address_read() for FETCH_LIST
Added missing "goto"
update NEWS
Optimize ASSIGN_DIM (separate common unspecializeble code into helper functions).
Drop unnecessary ZEND_SEPARATE code
phpdbg: close file handles
fix skipif
Separate unspecializeble code of INIT_DYNAMIC_CALL into separate helper functions.
This only make sense on *nix
prepare next
update NEWS
fix version macro to check
handle dummy frame
Improve zend_leave_helper() by checking all rare conditions at once.
fix calendar segfault
update NEWS
Remove json parser depth methods and tidy it up
Add method hooking support to json parser
update NEWS
Enable configure without opcache-file and huge-code-pages
We should always serialize the op->handler
opcache config.m4: Use = for comparison
removed useless ckeck (ZEND_HANDLE_EXCEPTION never uses RETURN_VALUE)
fix indent
update NEWS
fix compat for ICU < 50
Added missing newline.
Changed to check for error with the new function that returns null if error is set
Added function to check error and return null if error is set.
Added tests for bug 70451 and 70452
update NEWS
update NEWS
Forbid binding methods to incompatible $this
Added missing "break"
Use return type hints for type inference and eliminate useless VERIFY_RETRUN_TYPE opcodes.
Improved fix for #71940
Remove debug code
Remove __halt_compiler from semi-reserved tokens
Optimized array_fill(). This is a perfect function for fast creation of packed arrays.
fix merge mistake
fix tests
PostgreSQL's PDOStatement::getColumnMeta() fills in table's name.
fix indent
fix test
fix bug #71667 (emulate how mssql extension names "computed" columns)
update NEWS
add 32-bit specific variont for #62498
skip test on 32-bit
make opcache lockfile path configurable
return zvals instead of strings, cast or not based on stringify attribute
fix test
add skip slow test
IS_CONST operands don't have to be separated. Use reference-counting instead of duplication.
Add driver-specific attributes for controlling calls to dbsetlogintime() and dbsettime()
update NEWS
Add driver-specific attributes for controlling calls to dbsetlogintime() and dbsettime()
RETURN micro optimization
update NEWS
fix and extend test
Don't roundtrip to the database to get the column type if you already know it
remove description for apache 1.3
update NEWS
update NEWS
Use STR_EMPTY_ALLOC macro instead
Initialize op_array->run_time_cache on slow path of INIT_FCALL opcode and omit corresponding check on fast path of DO_FCALL.
update NEWS
news entry #71428
news entry #69537
news entry #69537
news entry 71609
magical notation is magical
move this to standard [ci skip]
news updates
Fised possible use-after-free
Correctly store OpenSSL erorrs for encrypt_key
Store OpenSSL errors from CONF_get_string in SET_OPTIONAL_STRING_ARG
fix #69537: __debugInfo with empty string for key gives error
fix left-shifted/misaligned bounding-box + wrong kerning in imagettfbbox/imageftbbox
Dont ignore errors from FT_Get_Glyph
Added missing zend_parse_parameters_none() to mb_list_encodings()
fixed type inference mistake (typo)
fix #71287 (substr_replace bug when length type is string)
Flags ZEND_CALL_RELEASE_THIS and ZEND_CALL_CLOSURE should never be set together. Closures keep responsibility for releasing $this theirselves.
Use CALL_INFO flag to check if we need to destroy symbol_table. This saves one memory load on most RETURN opcodes.
Typo in NEWS
Manual CSE
remove unused params || woops
fix #71609: Segmentation fault on ZTS with gethostbyname
fix borked mainstream patch
fix test to not to cause false positives
Align NEWS entry format
Align NEWS entry format
update NEWS
Correct error messages
Expand UPGRADING and NEWS re: numeric strings changes
Removed shmop test leaking an shm segment
Warn about invalid strings in arithmetic
5.5.35 now
fix dir separator in test
remove unused param
update NEWS
Update tests
fix bug #71428: Validation type inheritance with = NULL
Bug #71428 work ... hopefully, fix drupal 8
Updated to version 2016.3 (2016c)
work on #71428
fix #70189 (SAPI sends empty Content-Type when default_mimetype is empty)
my commits are bad, and I feel bad (test for bug #71414)
fix #71414 (Interface method override inherited method and implemented in a trait causes fatal error)
Remove some dead defines
add test for bug
fix standard object handler for properties when type == BP_VAR_IS
add test for bug
fix standard object handler for properties when type == BP_VAR_IS
Remove HAVE_CRYPT checks
Move HAVE_ATTRIBUTE_ALIGNED check outside crypt block
Remove PHP_*_CRYPT constants
Ensure that all crypt() formats are supported
Evaluate arguments of new for classes without ctor
Print .0 in phpdbg opcode dumps
Allow specifying keys on list() elements
Updated to version 2016.3 (2016c)
Empty merge
Updated to version 2016.3 (2016c)
Empty merge
Updated to version 2016.3 (2016c)
update NEWS
update NEWS
Disable huge pages in the Zend allocator by default As per the discussion on internals, this is an expert feature that needs special system-level configuration and care.
Added ability to disable huge pages in Zend Memeory Manager through the environment variable USE_ZEND_ALLOC_HUGE_PAGES=0.
Convert ASSIGN_ADD $a, $b into $a = ADD $a, $b, if possible.
if there's no JIT support, no RINIT is really needed
Convert ASSIGN_ADD $cv, int(1) into PRE_INC $cv, if it's safe.
Disable huge pages in the Zend allocator by default As per the discussion on internals, this is an expert feature that needs special system-level configuration and care.
bug #71478 implementing feature request
Update test script
decrease the default PCRE JIT stack to 64K
Increase PCRE JIT stack size
Updated NEWS
Updated NEWS
array_dup should not copy the nApplyCount
Also protects object to array cast
Avoid data bypass delays between integer and floating point execution units on x86 CPUs.
Update NEWS
Update NEWS for efacdc3
Deduplicate NAN/INF portability, move to Zend
Drop some dead defines
Replace php_math_is_finite with zend_finite
Add extra ArrayObject::sort() test
FIX #71831: CURLOPT_NOPROXY applied as long instead of string
Unused var
typo
typo
Added ability to disable huge pages in Zend Memeory Manager through the environment variable USE_ZEND_ALLOC_HUGE_PAGES=0.
Enable DFA pass by default
Squashed commit of the following:
fix and update NEWS
fix and update NEWS
Update curl_multi_info_read.phpt
Backport patch for bug #71820
fix NEWS
NEWS
NEWS
Remove unnecessary pattern
Remove typo
Unnecessary anymore
Update NEWS
Change LONG constants into DOUBLE, if they are going to be used as DOUBLE.
Revert "Taking into account "undefined" variables"
prepare for 5.6.20RC1
Update curl_multi_info_read.phpt
More email fixing
update NEWS
fix #ifdef usage
Taking into account "undefined" variables
Transparently introduce type-specialized opcode handlers. This affects only PHP VM, and doesn't change anything else.
Small typo in UPGRADING doc
Convert LONG constants to DOUBLE, when later they are going to be used as DOUBLE
Updated to version 2016.2 (2016b)
Updated to version 2016.2 (2016b)
Empty merge
Updated to version 2016.2 (2016b)
Empty merge
Updated to version 2016.2 (2016b)
update libs versions
update libs versions
update libs versions
set RC1 versions
prepare next
update NEWS
fix uninitialized value
Mark uses in UNSET_VAR op1 + FE_FETCH_R op2 as no_val
Statically bind static method call arguments
fix pointer truncation on 64 bit
fix test
test to function hash_update_file();
Update hash_update_stream.phpt
test to function hash_update_stream();
test to function openssl_free_key($loaded_key);
Update curl_multi_info_read.phpt
Update curl_multi_info_read.phpt
test to function curl_multi_info_read();
test to function dns_get_mx();
Update NEWS
Added ability to avoid code generation for useless opcode handlers.
update NEWS
update NEWS
Allow usage of "TMPVARCV" pattern for cases when there is no difference in handling for TMP, VAR and CV operands.
Added possibility for extra specialization for SMART_BRANCH (e.g. IS_EQUAL+JMPZ superinstruction).
Remove NOPs after DFA pass.
fix build with clang on Winodws
fix error condition, part of bug #71753
More effecient fix for bug #71756
tsrm_win32_get_path_sid_key might returns NULL (Partially fix bug #71752)
fix invalid pointer on 64-bit
fix invalid pointer on 64-bit
Useless check (part of #71753)
object->ce should not be NULL
emalloc never returns NULL (partially fix for #71753)
Improve the codes (FETCH_DIM_R/IS is read context, we should not expose IS_REFERENCE)
Bug #71756 (Call-by-reference widens scope to uninvolved functions when used in switch)
tsrm_win32_get_path_sid_key might returns NULL (Partially fix bug #71752)
Add NEWS/UPGRADING for negative string offsets
mb_strpos()/mb_stripos(): Add support for negative offset
mb_ereg_search_setpos(): Add support for negative position
mb_strimwidth(): Add support for negative 'start' and 'width'
file_get_contents(): Add support for negative offset
Add negative offset support to iconv_strpos()
Add negative offset support to grapheme_strpos/stripos/extract()
substr_count(): Support negative values for '$offset' and '$length' parameters.
strpos()/stripos(): Add support for negative offsets
Add support for negative string offsets (syntax)
fix SKIPIF sections
fix directory separator
arena_alloc never returns NULL
Suppress warnings
fix regression introduced in 5683b6fa39
fix incompatible pointers on 64-bit
fix double free and move temps into local scope
add error check
fix ibase connection routine
fix initializer for empty_fcall_info
Eliminate usages of _PP macros
Additional improvements to crypt() detection code
ext/standard/config.m4: fix crypt() test segfaults in >=glibc-2.17.
Bump API numbers
Move semicolon into TSRMLS_CACHE_EXTERN/DEFINE
Disable upload_2G test on travis
unpack() function accepts an additional optional argument $offset.
show correct MINFO with libpq >= 9.5.x
Removed zend_fcall_info.symbol_table
PHP-7 zend_call_function() doesn't support symbol_table substitution
Better fix for IS_INDIRECT support in zend_hash_merge()
Going for 5.5.34
Introduce zend_symtable_exists_ind() for API consistency
fix wddx merge
Update NEWS
update NEWS
fix test file
update NEWS
Update NEWS
Use hash_exists_ind in symbol table
limit size of result set so unit test runs reliably
Maybe we should introduce a symtable_exists_ind
remove unused vars
fix possible pointer truncation on win64
Updated NEWS
extend check for add_flag
extend check for add_flag
LDAP - Added support to change the certificates verification
set version
add test for bug #68957
update NEWS
update NEWS
remove unneeded free parts
fix leaks and add one more NULL check
add NULL check
fix C89 compat
fix arg type
fix nmake clean in phpize mode
fix nmake clean in phpize mode
The test self should be fixed(maybe relates to env?)
Various SSA-related tweaks
test fixes
update NEWS
Support dropping rc1/rcn from dumps
Use quick check for first arguments
Use more general optimisation patterns
Set proper type flags (REFCOUNTED and COPYABLE) according to interned or regular string
Forbid exchangeArray() during sorting
Don't use ht applyCount for AO sorting protection
Remove recursion checks from AO get_properties
fix NEWS
fix NEWS
sync with improvements in NEWS
update NEWS
Port patch and test for bug #47803 to 7.0
update NEWS
add test for bug #47803
fix callback signature compat
add test for bug #71171
make ext/odbc test credentials configurable
Move free_chunk and resize_chunk into memory pool
Drop mysqlnd mempool refcount
missing include
update bundled libzip to 1.1.2
Remove check_std_props arg from get_hash_table
Don't recurse into USE_OTHER checking STD_PROP_LIST
Use USE_OTHER for ArrayIterator cloning
cleanup $Id
cleanup, ext/json is simple PHP now
Added comments about special functions
Evaluate ord(<string>), chr(<int>) and defined(<persistent-constant>) at compile time
Test that mt_rand() consistently produces the wrong results
Set proper type flags (REFCOUNTED and COPYABLE) according to interned or regular string
Better fix for bug #71622 (Strings used in pass-as-reference cannot be used to invoke C::$callable())
refix broken 20ca0b89bda3822001474514ab9dffd62c559f01
update NEWS
update NEWS
add test for bug #71625, 7 variant
add test for bug #71625
update NEWS
update NEWS
Bug #71596 Segmentation fault on ZTS with date function (setlocale)
fix ts buld
Sort 7.0.4 extensions by name, merge FPM entries
Remove TSRMLS_* from code, they are not used anymore
Remove TSRMLS_* from docs as it's not used anymore
fix ts buld
Missed semicolon
prep for 5.6.19RC1
5.6.20 is next
set versions
prepare next
yet two test fixes in openssl in 5.6
improve test
Save one strlen here
Backported fix for bug #71525
Added missing semicolon
More fixing for bug #71540
fix dir separator in test
fix dir separator in test
make sure the tests always uses same tz
fixed news entry
fix NEWS entry
update NEWS
Restore to the first version fix(sorry, mis-read the codes)
Update NEWS
fpm: call zend_signal_init() in child
Reset op_array->live_range if it is removed all by optimization
Combine conditions (good for other VM kinds)
It's better to support 5.3 as well
Update NEWS
updated NEWS
update NEWS
Store errors in openssl_random_pseudo_bytes
cleanup duplicated var
fix file lists with subdirs passed to EXTENSION()
Format string fixes
Simplify previous fix
Check length of string before comparing to :memory:
FIx bug #71569
Forbid yield from in by-reference generators
Remove ZEND_CALL_CTOR_RESULT_UNUSED
Combine conditions
Remove EXT_TYPE_UNUSED in favor of IS_UNUSED
Support partial GC for unfinished generators
fix version header
Add additional test coverage for html_entity_decode
Crude generator GC for value/key/retval
be more precise about the meaning of -n
be more precise about the meaning of -n
Update NEWS
Support CFG construction without live range splitting
Cleanup OP_DATA usage. Now only first operand of OP_DATA is used for ASSIGN_DIM, ASSIGN_OBJ and ASSIGN_OP (DIM/OBJ) instructions.
After DFA pass result of FE_FETCH may be CV
Store errors in openssl_dh_compute_key
Add entry for re-fix of #70976 in commit 14e4d393
Align spacing in make install messages
Removed wrong (old) code
Happy Year of Monkey (Forgot test of #71537)
Add entry for re-fix of #70976 in commit 14e4d393
Store errors in openssl_encrypt and openssl_decrypt
Update ReflectionClass_isArray.phpt
Store errors in openssl_digest
test to function ReflectionParameter::isArray
Specialize DO_FCALL (and variations) according to used/unused return value
Use extra specialization to eliminate run-time checks for conditions known at compile time in SEND_VAL_EX and SEND_VAR_EX.
Online test
Update NEWS
Specialize ASSIGN according to used/unused return value
Align NEWS entry format
Align NEWS entry format
Align NEWS entry format
Add 'serialNumberHex' variable to openssl_x509_parse
update NEWS
add missin NEWS entry
Split and clean up OpenSSL X509 tests
Add extra VM operand specialization
Remove use of register keyword in headers
Store errors in openssl_seal and openssl_open
Add back typedefs for php_uint32 and php_int32
Replace usage of php_hash_uint32 and php_hash_uint64 with uint32_t and uint64_t.
Replace usage of php_uint16 with uint16_t
Replace usage of php_int32 and php_uint32 with int32_t and uint32_t
Add missing fields to expected test output
Rename and clean up OpenSSL tests
fix build
fix build
Store errors in openssl_sign and openssl_verify
fix generating config.nice; again
use correct element size, avoid reading stack
use correct element size, avoid reading stack
check length first, prevent out-of-bounds read
check length first, prevent out-of-bounds read
update NEWS
Updated NEWS
Move pi placement into separate function
Rewrite openssl_error_string to use stored errors
reapply the sysconf error check patch
add error check to sysconf call
Updated to version 2016.1 (2016a)
Empty merge
Updated to version 2016.1 (2016a)
Empty merge
Updated to version 2016.1 (2016a)
Going for 5.5.33 now
fix dir separator
fix directory separator in test
update libs version
update libs version
update NEWS
fix tests
update NEWS
fix tests
fix NEWS
Update NEWS
update NEWS
Store errors in openssl_(public|private)_(en|de)crypt
fix extensions path for nmake install
fix extensions path for nmake install
use correct pointer in the math
use correct pointer in the math
Rename IS_ERROR into _IS_ERROR (to prevent redefinition on Windows).
Upgrade bundled PCRE to 8.38
Rename private.key to private_rsa_1024.key in new openssl_seal test
Rewrite OpenSSL SPKI tests to speed them up
Add private RSA keys with 2048 and 4096 bit long modulus
Rename private.key to private_rsa_1024.key
Store errors in OpenSSL PKCS7 functions
Store errors in openssl_pbkdf2
Remove version checks
Remove HAVE_SPL checks
Use handle as hash in SplObjectStorage
Also WIN32 side
Properly read any remaining data when closing FastCGI socket
revert test to the previous master state
yet one revert
Revert "adjust test for 7.0"
Revert "refix #69111 and one related test"
Revert "fix yet another leak"
add XFAIL
Revert "refix #69111 and one related test"
Revert "fix tests"
Revert "fix leak in 7.0"
remove NEWS entry
add XFAIL
Revert "fix leak in 5.6"
refix #69111 and one related test
opcache config.m4: Use = for comparison
phpdbg config.m4: make it detectable by old shells
fix tests
fix tests
Properly read any remaining data when closing FastCGI socket
fix yet another leak
Store errors in OpenSSL PKEY functions
Added entry to NEWS
Use the new timelib function for comparing times
Test + support for negative timestamps with microtime
Also test against equality
Compare agaist fraction when sse are equal
Added test for comparing dates with microseconds
fix wrong gc sequence
fix wrong gc sequence
Store errors in OpenSSL CSR functions
fix leak in 7.0
fix leak in 5.6
revert the API string as well
revert the API string as well
update NEWS
update NEWS
adjust test for 7.0
add test for bug #69111
sync NEWS
reset ext/session to the state of 7.0.2
update NEWS
update NEWS
refix bug #69111, crash in 5.6 only
update NEWS
NEWS
NEWS
update NEWS
update NEWS
reset ext/session to the state of 7.0.2
reset the ext/session to the state of 5.6.17
Test for void
Support void return type in reflection
Use special type IS_ERROR instread of EG(error_zval). (we still need EG(error_zval) for SPL support).
update NEWS
update NEWS
add missing headers for SIZE_MAX
backport the escapeshell* functions hardening branch
add tests
extend _SC_ARG_MAX usage onto platforms where it's available
Update error message. Missed to include in previous commit 46d4a371054f43fe8aeca14b83ba722adc84ac10
Store errors in OpenSSL PKCS12 functions
Use safe alloc functions when calculations are made on sizes.
Store errors in openssl_x509_checkpurpose
fix typo
Added test for bug #71443
add note on readline support
check for NULL and avoid crashes
check for NULL and avoid crashes
Improve the names
Update libmagic.patch for PHP-7.0
Update libmagic.patch for PHP-5.6
Remove dead code
Respect RC_INFERENCE during DFG construction
Don't insert duplicate predecessors
Use uint64_t for flags (warning)
Update NEWS and UPGRADING for PR #1701
json_encode: Escape U+2028 and U+2029 more often.
Store main errors in openssl_x509_parse
More accurate handling of isset() and unset()
Added optimization constraint (don't optimize result of NEW, because constructor may throw exception)
Return meaningful value
We don't need to dup zend_class_constant here.
Make op1/op2 decoding in phpdbg more complete
Don't print try-catch offset for FAST_RET w/o ev
Mark op1 of INIT_FCALL as NUM
Consolidate op1/op2 vm flags
Store errors in openssl_x509_fingerprint
Add missing macro
Typo (SKIPF -> SKIPIF)
Empty line
Cover overloaded functions
Let's add a class entry for testing
re-arrange NEWS
prepare 5.6.18RC1
Store errors in openssl_x509_export
5.6.19 will be next
fix ReflectionClass::__toString doc block omitted
fix ReflectionClass::__toString doc block omitted
improve fix for bug #71201
improve fix for bug #71201
improve fix for bug #71201
Mark isset($$var) as INDIRECT_VAR_ACCESS
Add support for Pi type constraints
Store errors in OpenSSL SPKI functions
Typo (ASSESS->ACCESS)
Use ZEND_FUNC_INDIRECT_VAR_ASSESS instead of ZEND_FUNC_TOO_DYNAMIC. Handle function with exceptions handlers and generators separately.
vc doesn't support #warning
reorder comments
get rid of win32_ prefix
check return values and cleanup the job object on exit
add 7.0.4 block to NEWS
bump version to 7.0.4-dev
set versions to 7.0.3RC1
trap also children exits on shutdown to avoid unhandled exceptions
integrate the /Gw compiler switch
fix compiler version check
integrate /Zc:inline switch
add proper noinline specifier for VC
fix test for 7.0, OpenSSL >= 1.0.2 disables SSLv2 by default
fork test
fix test
fork test
fork test for win32
fork test
add UPGRADING note for PHP_FCGI_CHILDREN on Windows
Use SUCCESS/FAILURE
Update NEWS
Remove unnecessary warning by warning reorder.
Remove unnecessary warning by warning reorder.
Add test for Bug #70133 (Extended SessionHandler::read is ignoring $session_id when calling parent)
PS(id) is zend_string *, use appropriate API
fork test
fork test
add WinEditLine support for CLI
add wineditline info to minfo
basic support for wineditline
config.w32 for ext/readline
Update NEWS
Move cleanup code to a separate function and export it. Export also other functions that can be of use for plugins
Improved fix for bug #68063 (Empty session IDs do still start sessions).
update NEWS
port 4308c868f94df1f2b99e80038ba5ea1076d919a7 to 7.0
update NEWS
Forgot to add const-ness to the macro
Convenience macros
update NEWS
implement FCGI children automatic restart and cleanup
Basic implementation for FCGI to respect PHP_FCGI_CHILDREN on Windows
commit 597db443cd6ce76b0dce590b9f51b5d4d610325e Author: John Bafford <john@bafford.com> Date:   Mon Jan 11 17:17:44 2016 -0500
Avoid incomplete zend_internal_function initialization.
Update NEWS
Update NEWS
Remove obj handlers ptr value from spl_object_hash()
Forbid double use() and use() of param
Trigger op_array_handler() if HAVE_OP_ARRAY_HANDLER is set
Follow up on bug #71270
fix the fix for bug #70976 (imagerotate)
fix the fix for bug #70976 (imagerotate)
Use php_session_abort()
partial test fixes, only obvious mistaking parts
remove the unnecessary condition part
Introduced BIND_STATIC opcode instead of FETCH_R/FETCH_W(static)+ASSIGN/ASSIGN_REF (similar to BIND_GLOBAL). In the future we may refer to static variable by index instead of name, to eliminate hash lookup.
fix possible buffer overrun in the errmsg string
integrate tsrmls cache
update NEWS for fixed bug #71132, fixed bug #71197
re-apply patch for github PR #1695
phpdbg: fix potential format string bug
Revert "update NEWS"
Revert "patch for github PR #1695"
Revert "patch for github PR #1695"
Make PI construction human-readable
Use worklist for DFG construction
update NEWS
update NEWS
Simplify code per Anatol.
Insert bug number.
Use strtoll() when apr_off_t is 64 bits.
update NEWS
patch for github PR #1695
fix out format
update NEWS
backport 9a07245b728714de09361ea16b9c6fcf70cb5685 from 7.0
further datatype and range check fixes for ibase
datatype fixes
fix typo for #ifdef
Store errors for some OpenSSL RAND handling
Add error storing to the OpenSSL CONF part
Use and fix storing errors in openssl_x509_export_to_file
Implement logic for OpenSSL error storing
Warn about passing tag for non AEAD modes
Align NEWS entry format
fpm: call zend_signal_init() in child
Add initial almost empty php_openssl_store_errors
update libs_versions.txt
update libs versions
allow static build of ext/ftp
update NEWS
Range&type inference for JMP_SET
more informative error message for opcache fallback
add SKIPIF condition
Add global data for storing OpenSSL errors
5.5.32 now
5.5.32 now
adjust release date for the delay
these will be part of 5.6.17 not 5.6.18
Moved buffer from heap to stack
Removed unecessary string dup
Moved buffer from heap to stack
updated NEWS
Patch for Heap Buffer Overflow in EscapeShell
set release date
fix NEWS and add some 7.0.2 entries
Update NEWS
improve fix for bug #71273
update NEWS
add NEWS entries for 7.0.2
re-apply the patch from 1785d2b805f64eaaacf98c14c9e13107bf085ab1
Replaced whitespaces with tabs and fixed aligments
Improve fix for bug #70976
fix merge mistake
Do not edit the value in place (might be relates to #71261)
Test error cases in openssl_decrypt for GCM mode
Comment out warning when cipher update fail
Duplicated i
Happy new year (Update copyright to 2016)
Test invalid auth tag length in encryption
remove duplicated skipif conditions
bump year which is missed in rev 49493a2
bump year which is missed in rev 49493a2
sync with new tests from 7.0 for ICU 55_1 and 56_1 compat
sync skipifs for ext/intl for ICU 55_* and 56_* compat
Happy new year (Update copyright to 2016)
Update header to PHP Version 7
Happy new year (Update copyright to 2016)
Happy new year (Update copyright to 2016)
Happy new year (Update copyright to 2016)
Test and fix encrypting empty IV for AEAD mode
Mark uses of scope functions in namespaces as TOO_DYNAMIC
Add an initial openssl decrypt GCM test
This should be better
Introduce BIND_LEXICAL
Add more aes-128-gcm test vectors
Forbid use() of auto-globals
Improve fix for bug #70976
Add an initial openssl encrypt GCM test
Drop extra line
Add CVE for #71105 (PHP 7.0.1)
Add AES CCM ciphers when linked with OpenSSL 1.0.1
Hatch elePHPant
Use ZEND_HASH_FOREACH
Don't reuse SSA var in UNSET_VAR
Remove leftovers of TSRMLS in code
Remove leftovers of TSRMLS in docs
Rearrange code to enable inner precedure inference
Remove mentions of "type hint" and "typehint"
Marked function as "cold"
test to function socket_getopt();
test to function socket_clear_error();;
test to function socket_shutdown();
Added call-graph analyses
test to function socket_send();
test to function gethostname ( void );
test to function DateTimeZone::getLocation();
test to function stream_get_transports();
test to function stream_get_wrappers();
test to function stream_socket_enable_crypto();
test to function stream_socket_get_name();
Create stream_socket_recvfrom.phpt
test to stream function set_file_buffer.phpt();
test to function PDO_getAvaliableDrivers;
test to misc. function connection_status();
test to function connection_aborted();
test to function memory_get_peak_usage();
Update default_mimetype ini setting description
These function docs are referencing zend_object_value but this should be zend_object
Add another DFA optimization pattern (ASSIGN -> QM_ASSING)
Superfluous semicolon
update NEWS
update NEWS
fix merge mistake
Added test for bug #71201
Bug #71201 round() segfault on 64-bit builds
Sort 7.0.1 extensions' entries
Added test for bug #71201
Bug #71201 round() segfault on 64-bit builds
Add CVE for #71020 (PHP 7.0.1)
Support for optimization introduced in DFA pass (it may change type of instruction return oprand to IS_CV)
This should never fail
This check become useless after 98885bfa1e5b4b33bbc356e221d734a1072804fe
Consolidate indirect string offset modification checks (Nikita, Dmitry)
Updated NEWS
Added support for HTTP 451
Remove live-range if the corresponding definition is deleted
Support for incompletely constructed SSA
Always create ARRAY_ELEM ssa var for ELEM_REF
Corrected error messages:
Updated NEWS
Added validation to parse_url() to prohibit restricted characters inside login/pass components based on RFC3986
Added test for (long-ago fixed) bug #70083
Updated NEWS
Skip "useless" SSA variables for INIT_ARRAY, ADD_ARRAY_ELEMENT, FE_RESET_R
Add ability to prevent "useless" SSA variable creation for "refcounting inference".
release only appropriate string
Make RC1/RCN inference more accurate (it's probably not 100% correct anyway)
update NEWS
7.0.3 next
Align NEWS entry format
Get rid of MAY_BE_DEF
Split MAY_BE_NULL from MAY_BE_UNDEF
Remove uses of VARs in extended_value
Revert "Partially fix bug #71129"
Align #71165 entry format
Partially fix bug #71129
Protect against overflows in pi constraints
typo agian :<
Add session module test
long -> zend_long in range inference
Extrace find_adjusted_tmp_var() function
Simplify bf/bt computation in pi placement
Added note to upgrading
Typo
Bug #71105 was fixed in 7.0.1 (commit 9374ba35)
Clone cannot return reference
Implemented FR #71159 (Upgraed bundled SQLite lib to 3.9.2)
Improved fix for #71127
Improve FR #48532 implementation (Allow pg_fetch_all() to index numerically). Made result type option be consistent with pg_fetch_row().
Improve FR #31021 implementation (pg_last_notice() is needed to get all notice messages). Now pg_last_notice() can clear stored notices.
Align NEWS entry format
Align NEWS entry format
Align news entry format: Implement FR -> Implemented FR
Align news entry format: Implement FR -> Implemented FR
Update NEWs
Implemented FR #48532 (Allow pg_fetch_all() to index numerically).
Implemented FR #31021 (pg_result_notice() is needed to get all notice messages).
Don't use deprecated API
Removed invalid efree() (arguments are allocated on VM stack and used without copying)
Added simple DFA optimisation pattern (just to prove the concept)
Add entry for session.lazy_write
fixed test
Remove sqlite extension leftover references (was removed in PHP 5.4)
Remove trailing spaces
Remove unused IS_TYPE_SYMBOLTABLE
Use do_alloca() instead of alloca()
Fallbuck to simple dump format if CFG wasn't constructed
Added e-SSA based DFA optimisation framework (incomplete)
Remove extra line
NEWS entry for #55651
Implement FR #55651 (Option to ignore the returned FTP PASV address)
Update NEWS
NEWS entry for #55651
NEWS entry for #55651
Implement FR #55651 (Option to ignore the returned FTP PASV address)
Fugbix typo
Update NEWS
Unused vars
Use FETCH_CLASS_EXCEPTION for instanceof
Support uwsgi sapi in opcache
Support uwsgi sapi in opcache
Support uwsgi sapi in opcache
Add result op for ASSERT_CHECK to fix SSA
Typo
Refactor password_hash to use random_bytes internally to generate salts
Added NEWS
Don't check non-CVs for UNDEF in BOOL(_NOT)
Do not swap operands in array addition
Retrieve tag in AEAD cipher mode encryption
Internal function argumensts cleanup (strict_types)
Optimize strtolower()/strtoupper()
Use format string
Drop superfluous assignment
Update README
Unused value casting should be `void`
Prepare for a PECL release
Prepare for a PECL release
update NEWS
backported 7c981192eb26fbb93be767cd6b2dc765d370bbab from 7.0
Remove BP_VAR_REF
ws fixes
dos2unix
Added e-SSA based DFA optimisation framework (incomplete)
NEWS
NEWS
Describe special meaning of IS_UNUSED oprerand
Use more compact description encoding schema to free some bits
Make 2nd arg of xml_set_object by value
Improve Optimizer debugging facility (print the meaning of extended_value)
Make duplicate class constant error for internal class
Make ZEND_CLONE return a TMP_VAR
Add missed tests for FETCH_GLOBAL_LOCK change
Drop two compiler TODOs
Reintroduce use of FETCH_GLOBAL_LOCK
Improved specializer:
Remove FETCH_STATIC_MEMBER flag
Make update_opN_const implementation symmetric
Improved specializer (Bob)
Align NEWS entry format for bug #71024
The first arg is optional
Return -1 seems bug here
Initialize bitset before processing the seconf BB (we skip the first one)
set release date
set release date
5.6.18 will be next
Apply local optimizatons to extended bacic block (this allows some optimizarions across few following BBs).
Explain the disabled optimization pattern
Improve debugging of non-local variables
fixed NEWS
update NEWS
update NEWS
Improved optimizer dubugging facility
ext/imap/config.m4: fix conftest segfault in utf8_to_mutf7 check, bug #66909.
update NEWS
ext/dba/config.m4: Autodetect Berkeley DB v5.3.
Bumped SAPI version to 6.9
Added "mod_auth_basic" to apache module list.
Add sanitizing checks for request data.
Clear secret after use.
More verbose error messages
ext/dba/config.m4: Autodetect Berkeley DB v5.3.
fix path separator in test
Bumped SAPI version to 6.9
Added "mod_auth_basic" to apache module list.
Add sanitizing checks for request data.
Clear secret after use.
Bumped SAPI version to 6.9
Added "mod_auth_basic" to apache module list.
Add sanitizing checks for request data.
Clear secret after use.
end is unsigned, this was broken if start == end == 0
Remove useless check
Delete empty live-ranges
Don't create live-range across NOPs and some other instructions
move the entry into the correct NEWS block
Update NEWS
Avoid construction of empty live-ranges because of OP_DATA instruction
prepare 7.0.1RC1
PHP_MD5_CTX is now always used due to fix for #71204
PHP_MD5_CTX is now always used due to fix for #71204
Update random.c
Expose php_random_bytes as a first-class API within internals
Removed useless checks
Added NEWS entry
Implemented the RFC `Support Class Constant Visibility`.
Revert "fix typos "paramer" -> "parameters""
update NEWS
Simplify AAD condition
fix typos "paramer" -> "parameters"
fix typos "paramer" -> "parameters"
typofix
Implement AAD setting
standard tsrm usage for seven
update NEWS with fixed bug #70831
standard tsrm usage for seven
Disable PEAR in Travis build
Fugbix typo
Add php_openssl_cipher_update to group enc and dec logic
Missed one place
Set AEAD tag or tag_len if supplied
Sort items alphabetically
Align NEWS entries format
Align NEWS entries format
Add PDO_Firebird fix in NEWS
Add PDO_Firebird fix in NEWS
Add PDO_Firebird fix in NEWS
Use LL_MASK for SQL_INT64 data formatting
NEWS for 8907da99b83204958cb2308ec12aa9e490372150
remove PHP 5 NEWS entries
remove PHP 5 NEWS entries
SIZEOF_SIZE_T doesn't exist on AIX, keep using SIZEOF_LONG
Add AEAD IV init
Add a method for checking if the underlying stream is valid.
remove older UPGRADING entry, bug #38409 is already fixed in 5.6
Update random.c
arrange NEWS for final and fix one NEWS mistake
Order the NEWS
Space
Set called_scope in Closure::call (fixes bug #70987)
Forbid namespace\int type hint as well
Change line endings: Windows to Unix
ZEND_SPACESHIP supports
Always lower name
Revert "Improved fix for Fully qualified (leading backslash) type names must fail"
fix NEWS
Improved fix for Fully qualified (leading backslash) type names must fail
rearrange NEWS for RC8
Improve test portability
Give the possibility of the client to pass a factory
Update NEWS
Also fixed 'r'
Indent (not sure why it was messed)
Revert "Added back support for undocummented host:port syntax"
Revert "Using default port in ldap_connect when NULL is passed (this was the behavior prior to 5.6.11)"
Align NEWS entries format
Add NEWS entry for #61751
Align NEWS entries format
Output stderr on real stderr in phpdbg
Add NEWS entry for #61751
Add test for bug (count on symbol table)
Improved fix for bug (count on symbol table)
Add bug #70957 and #70958 releated test in refection
Remove unused variable
Port fix to 7.0
Revert "Added back support for undocummented host:port syntax"
Revert "Using default port in ldap_connect when NULL is passed (this was the behavior prior to 5.6.11)"
cleanup
Port the fix of 5.6 to 7.0
Update test script
Unused var
Improved fix for bug #70944
conflicts variable name
cleanup
Refactored CFG based optimization using new CFG representation.
Improved previously fix a little
Update NEWS
This seems better
Stablize test on Windows
typo
Proper optmisation of "goto" into the middle of "try" block.
NEWS
Don't keep wrong jump target in last CATCH.
minor fixes
Add void return type
Eliminate unreachable live ranges
Eliminate unreachable catch blocks
Extended Debug info with live-ranges and excepton-table.
Added internal debug log for block pass.
Two step optimization for JMPZNZ L,L; L: JMPZ L+1; L: JMPNZ L+1.
Revert "Add some const-ness to the protocol frame codec"
Don't use the specific translated name but use the macro for this
Skip first basic block (we skiped it before)
More const and moved the declaration of php_mysqlnd_scramble() to mysqlnd_auth.h
constify parameters
Rename from previous acronym (ppec became pfc)
Bring consistency to the class by renaming the methods too (from the old temporary name)
Add some const-ness to the protocol frame codec
Improve the test
mysqlnd refactoring: - move MYSQLND_READ_BUFFER to own file
cleanup
cleanup
Don't undo/redo "pass two" for jump targets in opcache optimizer.
mysqlnd refactoring: - reorganize the statistics code a bit. There is one mysqlnd specific function,   for convenience, in mysqlnd_statistics.c - namelyu _mysqlnd_get_client_stats().   The mysqlnd specific stats macros are moved to mysqlnd.h to keep   mysqlnd_statistics.h from being mysqlnd specific.
mysqlnd refactoring : - move the command buffer out of the networking code to the protocol frame   codec.
News for fixed bug #68344
- Remove dead macrom mysql_list_fields() - Small optimizations here and there
Unused var
Addtional fixes of #70918
Revert pushed by mistake
Added back support for undocummented host:port syntax
Move password checkign to php_openssl_cipher_init
Use the same CS for all json tests
Update mime type generator script to keep track of additional mime-types
Added support for CSS/JavaScript source maps
Update mime type generator script to keep track of additional mime-types
fix test title
update NEWS
Remove no longer applicable optimization
Update NEWs
Squashed commit of the following:
Use distinguishable error messages.
Revert "Remove assumption that extensions are in ext/ext-name"
SKIP on slow debug version PHP
MNDR: - constify some parameters to MYSQLND_RES functions
MNDR: - cleanup in mysqlnd_result.c - switch from zend_ulong to size_t for lengths. Accordingly change   mysqli and pdo_mysql for this.
MNDR: - rename mysqlnd.c to mysqlnd_connection.c
MNDR: - less dereferencing in mysqlnd_ps . Dereference stmt->conn only once and   use a stack variable. Also make the source cleaner.
MNDR: - remove unused macros
MNDR: - move things out of mysqlnd_priv.h
MNDR: - remove inclusion of uneeded headers
MNDR: - move the command factory to own file - mysqlnd_commands.c
MNDR: - route the option to the right handler
MNDR: - move all data members from MYSQLND_PFC to MYSQLND_PFC_DATA
MNDR: - move from char* + len to MYSQLND_STRING - add some more const modifiers
MNDR: - better name for MYSQLND_PPEC - MYSQLND_PFC (protocol frame codec)
MNDR: - rename MYSQLND_NET to MYSQLND_PPEC (protocol packet envelope codec).   PPEC does only the encoding and decoding to the protocol frame.
MNDR: - intermediate step to move MYSQLND_NET from mysqlnd_vio.c to mysqlnd_wireprotocol.c   In following commits MYSQLND_NET's methods and data will be moved to MYSQLND_PROTOCOL
MNDR: - moved networking code to mysqlnd_vio.c
MNDR: - split MYSQLND_NET into MYSQLND_NET and MYSQLND_VIO   MYSQLND_NET is above MYSQLND_VIO. _NET takes care of protocol packet   counting (even with compressed), while VIO is just about the network   (or in case of windows, non-network, but PIPE) transport.
MNDR: - some small renaming of methods
MNDR: - send_command and send_command_handle_response_* moved to a structure
MNDR: - Move transport string generation to own function, which can be overloaded or sniffed
MNDR: - remove double decrement
MNDR: - move connection establishment code to own command - COM_HANDSHAKE
MNDR: - convert the API of MYSQLND_NET to MYSQLND_STRING
MNDR: - decouple the commands from the connection. CONN ist passed now only in 1 case
MNDR: - remove dead code
MNDR: - clean up some things
MNDR: - move COM_INIT_DE result handling to the command
MNDR: - remove COM_FIELD_LIST
MNDR: - move handling of commands to the command itself
MNDR: - split handle_response() into handle_OK and handle_EOF
MNDR: - now send_command_handle_response() also doesn't depend directly on   MYSQLND_CONN_DATA
MNDR: - pass connection closer and its context - remove unused parameter
MNDR: - rename the macro for updating the connection state
MNDR: - make the connection state a class
MNDR: - simplify the macroses for the types
MNDR: - switch to macro generation of structure names for the methods
MNDR: - Remove the SET_STMT_ERROR macro
MNDR: - make MYSQLND_ERROR_INFO a class
MNDR: - switch to MYSQLND_CLASS_METHOD_TABLE_NAME_DECL() for automatic naming   of class methods
MDNR: - make MYSQLND_UPSERT_STATUS more like an object that a simple structure   Still use macros to make updates simple
MNDR: - abstract SSL enabling into COM_ENABLE_SSL
MDNR: - Refactor the command factory. Let the factory be exchangeable.
MDNR: - remove dead code
MDNR: - send_command() is no more, thus we need commands for all COM_STMT_*   + CHANGE_USER
MNDR: - Switch for directly executing a command over the wire to creating a   command object which is then executed.
MNDR: - Remove unused variable
MDNR: - remove dead code
MNDR: - remove export of functions and have things exported thru an interface   with default implementation
MNDR: - Inject the object factory
MNDR: - don't use the static function name but the hook
MNDR: - remove static function and make it a method. The function doesn't need to   be in mysqlnd_ps.c as it doesn't use any resources anymore from it (it used   in the past)
MDNR: - cleanup after PHP7 changes (removal of TSRMLS_**)
MDNR: - removed init() method from mysqlnd_conn_data and moved the initialization   to the object factory->get_connection(). Now it is unified as with the prepared   statement which doesn't have any init() method - the protocol decoder factory now takes connection as parameter at creation and   thus there is no need to pass the connection as parameter when calling the read   or the write method of a packet. - saved the protocol payload decoder factory as pointer in every packet (read/write)   so the connection doesn't need to be passed on every call of read/write (dependency   has been already injected at creation). This will alow to move protocol specific   code from MYSQLND_NET (send_ex()) to make MYSQLND_NET leaner and free from protocol   stuff.
MNDR: - move macro to a function
MNDR: - rename mysqlnd_init to mysqlnd_connection_init - rename mysqlnd_connect to mysqlnd_connection_connect - created macros for BC
MNDR: - Rename MYSQLND_PROTOCOL to MYSQLND_PROTOCOL_PAYLOAD_DECODER_FACTORY - Rename other symbols related to MYSQLND_PROTOCOL accordingly
MNDR - enum_mysqlnd_protocol_type -> enum_mysqlnd_session_protocol_type
MNDR - mysqlnd_option -> mysqlnd_client_option
MNDR - Rename simple_command* to send_command
MNDR : - Rename MYSQLND_OPTIONS to MYSQLND_SESSION_OPTIONS - Rename MYSQLND_NET_OPTIONS to MYSQLND_IO_OPTIONS
Separate common part of compile_file() and compile_string() into zend_compile()
fixed typo
add test for bug #70898
Also protects this one
Update NEWS
Re-fixed #70895
Revert "refix bug #70895"
Using default port in ldap_connect when NULL is passed (this was the behavior prior to 5.6.11)
update NEWS
refix bug #70895
Initialize ctx->optimization_level
Break dependency between opcache and optimizer. Remove copatibility macros.
Remove useless check in substr()
fix format macro names in UPGRADING.INTERNALS
Ensure the test fails
Ensure the test fails
update NEWS, patch for #70249 pulled into RC7
adjust test expectation
fix test filename and title
propare for 5.6.16RC1
Changed ZEND_FREE.op2.num and ZEND_FE_FREE.op2.num back to use live_range_offset (try_catch_offset does't work)
Added support for CSS/JavaScript source maps
Update php_ini.c
We don't nees zend_op_array->brk_cont_array at run-time anymore. Move zend_op_array->brk_cont_array into CG(context).brk_cont_array. Use more compact zend_op_array->live_range instead of zend_op_array->brk_cont_array. Semantic is kept unchanged.
Make FE_FETCH and following assignments to be a part of a loop.
Changed meaning of "op2" for ZEND_FREE, ZEND_FE_FREE, ZEND_FAST_CALL, ZEND_FAST_RET. Previously it was an instruction number. Now it's an index in op_array->try_cacth_array[].
Use --vex-iropt-precise-memory-exns=yes for valgrind < 3.8.0
Split shmop/tests/002.phpt in two (all + non-root)
Unused var
additional catch to bug #70863
add test for eb32da13
Added tests
prepare news for next
Remove SNI test that trigger request to sni.velox.ch
Use ZEND_STRL macro for builtin_types
Update NEWS
Make sure context is set to null to prevent use after free
Move php_openssl_validate_iv to php_openssl_cipher_init and fix some issues
manually apply the typo fix in master
rm duplicate include
Refactor update_op2_const
Use defined macro
C99 complain fix
Update NEWS
Don't propagate into ops that error on non-string
Strip leading backslash in update_opN_const
update NEWS
fix decrement_function regarding bug #70863
no more dev ZEND_VERSION
Add support for IPV6_V6ONLY on sockets
Always remember NEWS....
Bump OCI8 version
add failing test for bug #70868
update NEWS
use Z* macro name
fix NULL deref in mbstring post handler
fix NULL deref in pdo_firebird
fix pdo_sqlite crash with empty bound stream
fix leak
fix pdo_mysql crash with empty bound stream param
add test for bug #70861
fix possible NULL deref in image functions
fix crash in sqlite when executing with bound stream param
re-update NEWS
update the actual sql parser file for #70861
don't get invalid chmod mode through
zero cwd buffer before passing to chmod
Make test for bug #70852 to cover all cases
Change return value from php_openssl_validate_iv
Make sure context is set to null to prevent use after free
Use php_openssl_cipher_init in openssl_decrypt
Add test_fpm_conf to skip some tests ranth than mark --xfail--
Use php_openssl_cipher_init in openssl_encrypt
Use correct type for tag_len
Use standard title for new openssl tests
new tests to openssl module, don't covered yet.
Make these tests fail faster, Thanks to GFW
Don't remap .text segment if huge pages are not available.
fixed incorrect bitmask
Removed incorrect "return" statement
Speed up fetching of class entries for self:: parent:: and static::
fixed another comment typo
rm duplicate include
sync NEWS
7.0.1 is next
fixed typo
fixed another comment typo
fixed typo in comment
correct snprintf usage
It should not be const
Use arc4random on OpenBSD 5.5+ and NetBSD 7+
Changed ZEND_CLONE->extended_value meaning to relative offset (previously it was absolute opline number)
This couldn't be false as it has been checked before
Use h parameter to avoid duplicate ht access of `array_combine()`
Argument type renaming (ADDR->JMP_ADDR, OPLINE->JMP_ABS, REL_OPLINE->JMP_REL)
Added zend_get_opcode_flags() function to get information about opcode operands and extended_value meaning
Remove arc4random
Add php_openssl_cipher_init
update NEWS
Check EVP_SealFinal return code
unbreak coverage data: fix #line directives in phpdbg parser
unbreak coverage data: fix #line directives in phpdbg parser
unbreak coverage data: fix #line directives in phpdbg parser
exclude datelib from coverage report as asked by Derick
exclude datelib from coverage report as asked by Derick
exclude datelib from coverage report as asked by Derick
rather use the supplied inttypes.h with vc14
fix test redirection when run not from source root
Indents
Indents
This break the phpize API_NO detecting
Improve fix for Bug #68344 MySQLi does not provide way to disable peer certificate validation
Zend Engine 3.1.0-dev for master
Implemented fix for incorrect filedescriptor closing
Update the certificates needed for the mysqli tests
Exempt paging from -qrr mode
backport 262160e and 2d55e8c into 5.6
Revert "Ensure proper exception handling and EX(opline) state in USER_OPCODE handler"
Regenerate zend_ini_scanner.c
Update NEWS
remove imap tests for now until I finish the sudoless dovecot config
remove imap tests for now until I finish the sudoless dovecot config
Remove the VALLEN macro, this is not used anyway and wouldn't work as it was assuming zval**
Refactor zend_mark_function_as_generator
Eliminate _PP macro
Skip some tests for platforms different than x86
Skip serialize test if ext/session is not loaded
Closure binding and trait binding to anonymous class tests.
Remove wrong argument $session from SNMP::setSecurity()
- Implemented output paging
updated NEWS
update NEWS
C89 compat
use spprintf instead (no need to estrdup afterwards).
dblib's dbcolname can return null in some cases
testcase fot bug #69757
Segmentation fault on pdo_dblib::nextRowset (bug #69757)
Always return boolean from assert
update NEWS and UPGRADING
sync config.w32 with sha3 implementation
Add missing NEWS entry, copyright notice, and vim settings
Implement SHA3 hashing algorithm
Reindent zend_yytnamerr
Scan through a range of ports in case 31338 is busy
prepare for 5.6.15RC1
Update random.c
Do not create a fake Closure for real Closures That is solved by just returning the Closure as is, which is safe due to Closures being immutable objects
Move the tests to proper place
Prevent memcmp() result truncation This fixes reported issues with sapi/phpdbg/tests/watch_001.phpt
phpdbg test info_001.phpt was dependent on auto_globals_jit
update UPGRADING
prepare NEWS for next
update libs_versions.txt
initialize *str
calling getenv() without arguments should return the environment variables as an array
Add more tests for closure binding
Forbid "fake" closure rebinding
increase API versions
- Revert change, no check is needed there
fork test for ICU 56.1
fork test for ICU-56.1
fix test for ICU-56.1
fix test
Drop support for EOL'd PHP versions from run-tests
Double declaration
Move ext/reflection tests into the proper directory
fix ftok() export
fix stack overflow
update UPGRADING
replace typedef by an appropriate include
rename header
fix macro name
enable ftok implementation
initial ftok() implementation for win32
fix stack overflow
Generally run all tests in sapi folder by default
Normalize rebinding failures
Implemented file_cache_fallback mechanism
Improve previous fix
update NEWS
update NEWS
Correct intdiv() argument names and description
update NEWS/UPGRADING
Use openssl allocated cipher context
pear 1.10 was released and the go-pear and install pear phars are now php7 compatible
add comment to test
Restored the original (php-5) behavior of convert_to_cstring(). It was broken in php7 by mistake and caused problems in ext/pgsql/tests/bug46408.phpt.
Split test into different versions for 32-bit and 64-bit systems
Drop HAVE_PACKED_OBJECT_VALUE
More zpp cleanup in ext/intl
Revert "Improve 517b55362 (scope rebinding on method Closures)"
Revert "Allow random $this on non-internal Closures again"
Revert "Speed up self::method() calls (no ZEND_FETCH_CLASS)"
Revert "Speed up self::$property access by 20%"
Revert "Update NEWS"
Add some tests for unserialize() class filtering
zend.assertions is not a boolean
zend.assertions is not a boolean
Update NEWS
don't leak handles
use correct function to close handles
Speed up self::$property access by 20%
Speed up self::method() calls (no ZEND_FETCH_CLASS)
Allow random $this on non-internal Closures again As it turns out, there is actually no reason to prevent this, it even was a bigger BC break than expected...
add new tests for array_keys() function
fix array keys being too strict to refs
Improve 517b55362 (scope rebinding on method Closures) Now it is completely impossible to rebind a scoped method Closure (only the kind you get from ReflectionMethod::getClosure()) to a foreign scope Adding a lot of tests to ensure this... Also, properly return NULL in case the Closure could not be created instead of some crippled unbound Closure
improve error message
fix incrementing on 32-bit
fix incrementing on 32-bit
fix coverage report for datelib
fix coverage report for datelib
fix coverage report for datelib
Do not edit the zval cause it might be  in shared memory
Update UPGRADING.INTERNALS
remove useless checks
fix win10 support
Updated to version 2015.7 (2015g)
Empty merge
Updated to version 2015.7 (2015g)
Empty merge
Updated to version 2015.7 (2015g)
PHP7 is not affected
Ensure proper set_exception_handler() handling with exit() inside it
Do not display memory leaks on fatal
Do not include zend_verify_return_type in executable ops (phpdbg)
More check_parameters improvements
ws
More check_parameters improvements
Update scripts/dev/check_parameters.php for PHP 7
Remove checks for read_property retval being NULL
Remove dead assignment in get_property_guard
ReflectionGenerator and ReflectionType are new classes
fix dl() function
fix dl() function
Reordered field to improve data lacality and reduce L1D CPU cache misses in ZEND_INIT_FCALL opcode family
5.5.31 now
Add NTS/ZTS information to php -v
fix test
fork test
fix tests on Windows
tweak cgi binary search
Add JSON as exported type, if available. mysqlnd has it, libmysql doesn't export it (for now).
Spelling
Simply use 0/1 instead as dmitry suggested
update NEWS, these missed 5.6.14RC1 as I was not asked to include them so delaying for the next release
add NEWS entries
add NEWS entries
add NEWS entries
Make ZEND_ECHO and removed ZEND_PRINT distinguishable
Make ZEND_ECHO and removed ZEND_PRINT distinguishable
Added information about Zend Extension API chabges
fix test
Ensure timeout tests wait for the entire specified duration
Added zend_internal_function.reserved[] fields, to allow extensions keep additional associated information. We didn't have zend_internal_function.reserved[] in PHP5, but we always allocated space for zend_function union, and extensions were able to reuse zend_function.op_array.reserved[] even for internal function. Now this is not possible. And extensions have to use zend_function.op_array.reserved[] for user functions and zend_function.internal_function.reserved[] for internal.
update NEWS for next
Update openssl_x509_checkpurpose.phpt
add test to openssl ext
Removed or simplified incorrect SEPARATE_*() macros usage.
Add upgrading info about the tick functions internal API change
Remove makedev() check.
Different error message if makedev check fails
Add support for getrandom(2), add type check on file descriptor
fix test
Better fix for bug #70433
fix memory leak
FIx bug #70433 - Uninitialized pointer in phar_make_dirstream when zip entry filename is "/"
Update NEWS file with LDAP fixes
Add support for parameters to tick functions, on C level. This is only for extensions that want to use register tick functions. Userland tick functions are unaffected.
Add NEWS entry for #70533 (credits to Anatol)
fix phpdbg's -h switch
Spread the news about 70384
Spelling
Allow an experimental VM with tail call dispatch technique (disabled by default). This VM may work only if all tail calls are optimized, otherwaise it will crach because of stack overflow. Unfortunately, we can't guarantee tail call optimization in C.
check for test requirement
fix data type and warning
Extended zend_extension API to allow storing additional data associated with op_arrays in opcache SHM. (op_array->reserved[])
Make necessary separation (it might be possible to fix this in a better way, but this will requre some refactoring)
add note about minimum openssl version
fix ident
List PHP extension api version nos in zend_extensions.h
Cleanup: avoid useless array duplication
Cleanup
Ensure proper exception handling and EX(opline) state in USER_OPCODE handler
don't keep locked mutex after errors
avoid dangling pointers
move accel_shared_globals assignment into locked block
add ovfl check, fix warnings
fix warning
fix warning
Attmpt to fix "Unable to reattach to base address" problem. (Matt Ficken)
Cleanup: avoid reallocations
Cleanup: avoid reallocations
Cleanup: replace removed condition with ZEND_ASSERT()
Add and use function for loading cipher mode info
update NEWS
add test
expose openssl config path so it can be tested
Spread the news about 70384
use bundled openssl.cnf
ZEND_COMPILE_GUARDS compiler option
update NEWS
Don't keep dangling pointers
add test
expose openssl config path so it can be tested
add missing header
silence mkdir to fix fails after unclean test run
Cleanup: removed deprecated commented code. Incorrect zval_dtor() usage replaced by zval_dtor_ptr().
Cleanup: zend_object_std_dtor() is called through free_obj handler
Properly cleanup on wrong ZEND_OVERLOADED_FUNCTION call
Cleanup: removed deprecated commented code
unmap correct handle
add test
nullify the memory chunk to avoid crashes when freeing resource
check for NULL return
Cleanup: don't keep useless dangling pointer
Cleanup: removed old commented code
Cleanup: removed deprecated commented code
Cleanup: removed comments (zend_object.handle and zend_resource.handle are not going to be removed in PHP-7.0)
Cleanup (we keep and reuse size from zend_mm_huge_list)
Make use of timelib 2015.02's support for external memory managers.
Update timelib to 2015.02
Bumb timelib version to 2015.01
Add and check AEAD params in openssl_encrypt and openssl_decrypt
Use die
Restore NEWS (Why NEWS is always merged? )
Add an initial preparation for OpenSSL AEAD
Require at least OpenSSL version 0.9.8
Use tabs for arg info indent in openssl.c
Unused var
Add FAST_ZPP to various important stream funcs
Remove superfluous branches
Short-circuit zend_parse_parameters_none() so that expensive zpp() call never happens in non-exceptional case
Set expectations in generator handling
Revert accidentally committed closures.c and execute.c
Optimize zend_mm_small_size_to_bin() It removes a cmov operation and has a much faster branch for small allocations (especially when handling strings) (<= 64 bytes)
Force compiler to prefer ZEND_CALL_NESTED_FUNCTION It is by far the most used branch; compilers tended here to split the branches via an &2, &1 check, now it only does an &3 check and prefers ZEND_CALL_NESTED_FUNCTION branch
Always properly show exit status in phpdbg
Apply same fixes for until
adding test scenario to improve coverage
NEWS should not be updated
RETURN_FALSE
Use Zend MM to keep statistic of non-persistent connections (calloc/free->pecalloc/pefree)
Skip session_regenerate_id_cookie.phpt when there's no cgi
Add eventual escaping for phpdbg arguments
Add # delimiter to phpdbg commands
Don't allocate memory for empty HashTables.
Note the PHP version at the top of configure
adjust versions in confutils
make room for next UPGRADING notes
Update information about new opcache features
Added information about new opcache configuration directives
prepare for PHP-5.6.14RC1
adding test scenario to improve coverage
Add test for #70516 session_regenerate_id() does not send session ID cookie
add range check
fix regressio introduce in 22e23e7cb8ca9aa134d138b5fed031af6c842b44
Fugbix typo
Suppressed warning about this function is not used
Fugbix typo
Add Note about huge_code_pages
Suppressed warning -Wvolatile-register-var
Upgrade unicode_data.h to UnicodeData.txt 8.0.0  (part of bug #70475 ext/mbstring/unicode_data.h needs update)
prepare NEWS for RC4
add missing NEWS entry
Improve row fetch changes for PHP7. Update test SKIPIFs. Add test for 11g client (Senthil)
Improve row fetch changes for PHP7. Update test SKIPIFs. Add test for 11g client (Senthil)
Enabled placing PHP code segment into huge pages
Enable file based cache compilation by default
Use shorter php.ini directive name "opcache.huge_code_pages" and disable it by default.
Removed useless include
bump versions in master
add range check
prepare master NEWS
Avoid reallocations
Use memcpy() instead of mmap() to keep modifyed code (e.g. gdb breakpoints)
Added an experemental ability to move PHP code pages (PHP TEXT segment) into HUGE pages. PHP should be configured and built with --enable-huge-code-pages, OS should be configured to provide huge pages. It's possible to enable/disable this future in php.ini through opcache.enable_huge_code_pages=0/1. The feature was tested on Linux and provided 2% improvement on real-life apps, because of 2-3 times reduction in number of iTLB misses.
Add support for **= in opcache optimizer
add overflow check
fix data types
add range checks
Final diff fixes for PHP7 on base platform (some mem leaks still to be fixed).  Update driver name. Improve test portability (Senthil)
Remove wrong argument $session from SNMP::setSecurity()
Manual CSE to avoid double read
Change this as sixd suggested
Add test XFAIL for bug #70470
Remove free_string_zval
fixed compilation error
Don't keep dangling pointer.
Use efree_size
Simplfy zend_is_true
Added folder marks
Unexpected
cleanup tmp_member handling
Change array sorting implementation to avoid two level callbacks system. Simplify zval comparion API.
Aligned IntlChar protos to their ARG_INFO (related to #70453)
Skip IntlChar related test if ext/intl is not available
Added support of LDAP_OPT_TIMEOUT, fixes #69574
Better array_compare improvement
Add entry for #70284 in 7.0.0RC2
Add entry for #70284 in 5.6.13
Don't inline "slow" and rarely used functions.
Useless ZVAL_UNDEF
Improved array_compare
Avoid useless EG(exception) checks
Unused var
unused var
Skip test for old glibc iconv
Small cleanup in pack() implementation
updated NEWS
updated NEWS
Don't inline "Undefined variable" warning reporting.
Changed from testing cast-128 to cast-256
Check EG(exception) only if it's really necessary
Add URL rewrite issue note.
Add more test cases
updated NEWS
updated NEWS
update NEWS
add test for bug #70423
update NEWS
remove unnecessary check
ext/zip version is now 1.13.0
Include config.h instead of php_config.h in gd_compat.c to have the configure variable available in outside-of-the-tree module build
Make sure closing save handler.
Update NEWS for OpenSSL
updated NEWS
updated NEWS
updated NEWS
updated NEWS
updated NEWS
updated NEWS and UPGRADING
updated NEWS
updated NEWS
updated NEWS
updated NEWS
Simplify JSON constants registration
Add my name to authors for previous refactoring
Move json_decode options macros bellow encode options
json: fix formating of PHP_JSON* option bitshifts
adds missing tokens to list of semi-reserved words and regenerates test suite
these need to be exported for extensions that use json
prepare NEWS for next
Align NEWS entries format
Align NEWS entries format
sync NEWS
Add missing variable from birdstep_commit() which got removed in e8fcd52ef
Align NEWS entries format
Add CVE for #70140 (PHP 7.0.0 Beta 3)
Seems master is not affected
We should keep one refcount to resource
Partially fix bug #67167 - Wrong return value...
move the phpdbg NEWS entry to the correct version
add missing news entries
Skip if ext/filter isn't loaded
5.5.30 next
Use ZSTR_VAL
fix dir separators in test
use correct api
fix leak
cleanup an atavism
add overflow check
remove unnecessary macros
Use regular huge pages instead of anonymous if available.
Introduced additional check. Its miss might be the reason of bug #70392 (SIGSEGV during PHP shutdown)
Prevent HashTable compaction below HT_MIN_SIZE (this may lead to hash collisions).
Temporary add XFAILs, will fix soon
fix memory leak
Add CURLPIPE_* constants to properly expose HTTP/2 multiplexing
Add test for ReflectionMethod::getPrototype_basic()
Added two tests to check the main functionallity of recode extension
Doubles are not refcounted
bump version
fix unit tests
update NEWS
add NEWS for fixes
Improve fix for #70172
fix for --enable-zend-signals and ZTS temporary fix to make queue size bigger in zend_signal while I work on it
fix zend signal and tsrm compat
fix test
add test
Added missing set of fcc->initialized flag.
Ensure proper data alignment
Add myself into list of authors of the most refactored files.
Respect exit status for -rr option with phpdbg
Improve fix for #70385
fix possible overflow
use non deprecated symbols
Added missing skipif for phar+zlib test
More fixes for bug #70219
HANDLE_BLOCK_INTERRUPTIONS() is not used by SAPIs anymore. It may be useful only when PHP configured with --enable-zend-signals.
Removed signal protection (set to NULL before free() to avoid dangling pointers)
Simplified integer overflow checks
fix dir separator in test
Removed useless signal protection
fix path separator in test
fix test
Don't detect FreeBSD 10 as FreeBSD 1 in libtool.m4.
Remove merged bug #55259 info from PHP 7 NEWS
Update NEWS with info about bug #55259
Prevent double load on fast path (manual common subexpression elimination)
remove redundant ;
Enable format checking for strpprintf
Removed trailing whitespace
make overflow checks as unexpected
Use new range checks in openssl ext
Mark parse error functions as cold
Removed unused functions
fix year in the header
add range check to ext/soap
add some range checks to pcre
more range checks in ext/tidy
add range checks to ext/tidy
add some range checks to ext/dom
fix test
add range checks to simplexml
fix typo
include range checks with the portability header
added basic stuff with the zend_range_check.h
Avoid duplication
Squash some more PHP 7 diffs and improve test portability (Senthil)
Avoid array duplication
Remove superfluous forward declaration
fix build, use exported symbol
TravisCI - remove unneded code
Assign CPU registers for GOTO and SWITCH executor as well
updated NEWS
updated NEWS
In 95% cases we initialize "empty" array (with 8 hash slots).
Mark error functions as "cold"
fixup, both catched by nikic
use another character device in this test as /dev/console seems that it is different for lxc containers
the de_DE(iso-8859-1) locale is not available on ubuntu by default, but there is no reason to require that over the utf-8 one
Optimize fast path
let's try running our testsuite without sudo
added test for gzgetss()
fix test
fix test
fix test
fix test
make this test Windows only
here string isn't supported by every shell
$() isn't supported on every shell
fix tests
fix dir separator
fix dir separator in test
fix dir separator in test
unnecessary 1 byte allocted
add test for bug 70309
note to UPGRADING
Move __STDC_CONSTANT_MACROS/__STDC_LIMIT_MACROS defs earlier
Enable definitions of stdint.h limits/constants used by Zend/zend_long.h
Add overflow check for openssl_pkcs12_read
one new line too much
fork test
Remove path from test
Don't allow leading \ in group use decl list
5.6.14 next
add test for php_enchant_broker_free()
This is a new test for enchant_broker_free_dict(). This function never was covered by .phpt
testing enchant_broker_(g|s)et_dict_path
Add overflow checks for openssl_pkey_* functions
Move overflow checks in openssl_pbkdf2
Revert "fix occasional fail in zip_close when target arc exists"
fix config.w32 to include suitable lib files
updated NEWS
updated NEWS
improve error message
fix occasional fail in zip_close when target arc exists
Mark error and exception functions as "cold" (Matt's idea)
Removed deprecated comments and added expectations (overloaded properties and array elements are less frequently used than regular ones)
update NEWS
added /guard:cf to release builds
use the bare tarball filename for the stub, no path elements
Update NEWs
This bug is already fixed, but it's better to have a bug entry for the record
fixes a syntactical inconsistency with group use and leading `\`
correct NEWS
Use macros for openssl overflow checks
NEWS for next
Patch from Rainer Jung to provide Solaris LDAP support
Removed unused code
Woops, accidentally made TS build fail...
Revert fix for nicer truncation on log_errors_max_len
Lost this entry while merging
Better fix for exception traces truncation with anon classes
Improved fix for bug #70262
It should not be skip
Skip the test with valgrind
Revert "Do not truncate exception traces upon anon class name"
fix inheritance of internal interfaces with constants
fix printzv (refcount)
Do not truncate exception traces upon anon class name
fix test
TSRM_TLS should be usable in NTS build
no need to skip this test if no dictionaries are installed
new test for enchant pwl file
Check and use correct signature_len type for EVP_VerifyFinal
updated NEWS
fixed changed error message in test
updated NEWS
Removed dead code
Renamed struct member
Updated to version 2015.6 (2015f)
Empty merge
Updated to version 2015.6 (2015f)
update NEWS
fix incompatible types
add SIZEOF_SIZE_T to oniguruma
fix pointer truncation cases
Updated NEWS for #70157
fixed wrong params in proto
Prevent warning when printing arrays in gdb
updated NEWS
Executed file can be NULL
updated NEWS
Don't copy zend_strings during exception creation
fix array size calculation for range, related to bug #70239
add range() tests
updated NEWS
updated NEWS
Remove useless insert
Set expectations
We don't need CVS/SVN keywords in UPGRADING.
We did eventually decide it was PHP 7.0, so make it so.
Simplify the macro (HT_DATA_SIZE/HT_HASH_SIZE is not used outside Zend)
updated NEWS
updated NEWS
Get rid of implicit type casting in GC_*() macros in Zend/zend_types.h. This prevented compilation warnings and disclosed few incorrect usages in Zend/zend_vm_def.h and ext/dom/xpath.c. Now explicit type casting may be required on call site. This may break some C extension code, but it shoulfn't be a problem to add explicit casting.
Of course, we support v2 in PHP 5.6 as well.
Updated to version 2015.6 (2015f)
Empty merge
Updated to version 2015.6 (2015f)
Tell timelib we support v2
Add entry for zend_memnstr change
PDO_OCI is not experimental
zend_hash_resize seems useless, use zend_hash_extend
Revert "Updated to version 2015.6 (2015f)"
Updated to version 2015.6 (2015f)
Empty merge
Updated to version 2015.6 (2015f)
updated NEWS
improve condition
Further PHP 7 compat for OCI8
Use the same error msg with resize
We should not silently go on if the required size can not be met
Revert "We should not silently go on if the required size can not be met."
We should not silently go on if the required size can not be met.
improve condition
second part fixing vc14, type/specifier order also in definitions
use efree_size here
Revert "Simplify ZEND_EXIT and count boolean values to it as exit status"
Attempt to fix Windows build (vc14)
Simplify ZEND_EXIT and count boolean values to it as exit status
update NEWS
fix news entry
updated NEWS
fix bug #69833 mcrypt fd caching not working
updated NEWS wrt. bug #69487
Add CVE IDs asigned to #69085 (PHP 5.6.7)
Align NEWS with 5.6.12
Add entries for phar bug fixes in 5.6.11 (also have CVE assigned)
Add CVE IDs asigned (post release) to PHP 5.4.43
Add CVE IDs asigned to #69085 (PHP 5.4.39)
updated NEWS
added tests for bug #66606
fix NEWS
Add test: unmangling private properties in anon class instances
Allow property names from anonymous classes to be unmangled
Reduce memory usage by using bitsets instead of array of bytes.
Get rid of memcpy() in MAKE_NOP()
fix NEWS
fix 32-bit test
next version in NEWS
sync NEWS entries
5.5.29 next
5.4.45 next
fix merge
fix test
fix merge
fix test
virtual_file_ex uses emalloc in 5.6+
__wakeup doesn't have to be final
update NEWS
Docs for find_tested.php
fix test
update NEWS
Do not do convert_to_* on unserialize, it messes up references
run credits script
Added NEWS entry
Get rid of ZEND_FAST_CALL_UNBOUND
Move most "finally" related code-generation from pass_two() to compiler.
Try to fix finally issue
Remove unneded space(s)
updated UPGRADING
Give better credit in NEWS
more info for UPGRADING.INTERNALS
updated NEWS
fix inconsistent dll linkage
remove TSRMLS_*
properly export ext/odbc globals
updated NEWS
fix test
ignore signatures for packages too
fixed test
Skip shebang line if present
Optimize btree/find_closest a bit
mentioned cURL file uploads in the "backward incompatible changes" section
test fails with old libxml2; skip in this case
avoid unnecessary scoping
remove useless ifdefs
test requires imagejpeg(); skip otherwise
updated NEWS
Remove debug instructions (...)
pear 1.10.0dev2
Implicit return should be always on the last line of a function
Do not mark automatic return 1; as executable
removed another E_STRICT(with the approval of Derick), 3 more to go
More PHP7 compat (Rajendra/Senthil)
update UPGRADING
add macro to access globals as whole
fork test
"This" is C++ keyword
Add NEWS entry
fix wrong info
updated UPGRADING
document globals accesor macro and tls specifiers
add one more thread storage specifier to allow external link
fix thread safety
fix thread safety and zeroing method
updated NEWS
opcache: Patch SSE based fast_memcpy() implementation
switch to the unified globals accessor where appropriate
first stone on using the unified globals accessor
add unified globals accessor macro
fix thread safety
fix thread safety
Adjust Git-Rules
Improve performance of PowerPC64 fast_long_add_function
Improve performance of PowerPC64 fast_long_increment_function
Improve performance of PowerPC64 ZEND_SIGNED_MULTIPLY_LONG
updated NEWS
improve ZEND_TLS declaration even more and move it to the better place
use better name
simplify declaration
add ZEND_THREAD specifier
adjust storage class
online test
update NEWS
Always checks for exception before push call frame
Previously fix is not right
Revert "Attempt to fix bug35437.phpt fails"
Revert "re-generate zend_vm_execute.h"
re-generate zend_vm_execute.h
Attempt to fix bug35437.phpt fails
use https for fetching the pear installer
updated NEWS
Set CG(zend_lineno) to beginning for final class errors/ops
Add support for regenerating phpdbg lexers and scanners on Windows
fix memleak
Cleanup and also include the error path into test
UPGRADING
NEWS
Remove -Wunused-result warnings
Hmm, not sure why this is missed while merged
Improved fix for Bug #69441
fixed broken test
add new error constant PREG_JIT_STACKLIMIT_ERROR
make the travis irc notification a oneliner
exclude the platform diff case from the test
add NULL check
allow to skip slow tests
use the new php7 compatible pear installer
Just always copy the buffer, that makes it much safer At least compared to conditionally using the mmap()ped input
Remove old unused header file
Revert "avoid pointer truncation"
Fully fix typed generator returns
fix printf format
avoid pointer truncation
fix scope
update libs_version.txt
updated libs_versions.txt
Use relative paths in phpdbg_lexer.c
Cleanup shutdown, enable proper memory leak displaying phpdbg should not memory leak...
fix libwebp namings
added regression test for bug #55472, which has already been fixed as of PHP 5.5.0
updated NEWS
updated NEWS
enable ext/gd to support libpng16
fix config.w32
fix C99 compat
cleanup
Make debug_val_dump and var_dump prints int and float the same
Make IS_TMP_VAR and IS_VAR differentiable
Opcache is assuming that op_arrays without refcount are always efree()d We maybe should search for some other way, because just not refcounting the op_array is rather a dirty hack. If possible, we should change opcache and just expect op_array->refcount != NULL ... but I have not found a clean way yet.
Align CVE format for #69669
Add phpdbg_get_executable() (gets executable ops/lines)
We cannot safely assume that all op array will be refcount 0 after execution Some extensions may want to analyze or re-run the op array later
Always lowercase function names for lookup in phpdbg -p
Add -e (ZEND_EXT_* generation) option to phpdbg
Emit EXT_STMT for each statement
5.6.13 now
$argv and $argc may be IS_INDIRECT
Undefined values may lead to big allocation
Remove FAST_CALL_FROM_CATCH
Add an option to not generate INIT_FCALL ops for user functions too
version up in NEWS
remove BOM from NEWS
Reverted ad4533fdbabcc3e545277e30023b2fdce16297a0
update UPGRADING
updated NEWS
fix comment
libwebp support for linux
Replaced libvpx by libwebp (first draft; Windows only)
update news with bug #70022
Change E_ERROR and some E_WARNING to E_RECOVERABLE_ERROR.
Add tests for json_last_error()/json_last_error_msg() failures
updated NEWS
updated NEWS
Exclude opcache from a few opcode related tests
updated NEWS
updated NEWS
Remove bogus exception_save() from FETCH_CLASS
Do not use readline when not having a tty This is important for e.g. run-tests.php
Add show_unexecuted option to phpdbg_end_oplog()
Move phpdbg tests to .phpt mechanism Also add a few more in-depth tests related to $argv, breakpoints and uncaught exceptions
Preserve argv consistency over multiple runs
Always only halt upon first non-recv opcode in a function
Make opcode breakpoints work again
Do never clean stdin buffer away
Do not show "Script ended normally" upon forced rerun
Do not display compilation success / normal script end in -rr mode
revised bug53156.phpt
Added basic test for imagewebp() and imagecreatefromwebp()
updated NEWS
updated NEWS
fix two clang errors on Windows
exclude a non windows test
updated NEWS
updated NEWS
wddx_add_vars() returns a bool
updated NEWS
updated NEWS
Check mbfl_filt_put_invalid_char return value
Deduplicate usort code
fixed PHPT that is always being skipped or otherwise would fail
Correctly handle zend_hash_sort failure
Regenerate bison and re2c files in json
Partially fix XSLT warnings
More warning fixes
fix duplicated line
Various warning fixes
Remove --with-t1lib from travis build
Always use libtool --silent
Remove dead goto label in phpdbg_cmd.c
Switch asprintf to spprintf in phpdbg opcode dump
Make s(tr)pprintf infallible
fix file cache path calculation at all the places
fix path handling for the file cache
Donot use one_char_string
Ignore getcwd return in zend_compile
Explicitly ignore mblen(NULL, 0) retval
Handle empty (NULL) stmt in ast_export
forked test for windows
Cleanup exception displaying code in phpdbg
More OCI8 diff fixes (Rajendra)
Backport fix for bug #70083 to PHP-5.6
unserialize() takes a 2nd optional arg and it can't be a bool
Export argument type checking functions
update NEWS
updated NEWS
Revert "Revert "suggest parentheses around ‘&&’ within ‘||’""
make this test more robust on slower execution
Revert "suggest parentheses around ‘&&’ within ‘||’"
Update NEWS
suggest parentheses around ‘&&’ within ‘||’
Reimplemented ability to get debug info (C source file and line number) in phpdbg without hacks and ABI breaks.
add EAGAIN checks
add test for bug #70198
integrate static tsrmls cache with ext/mcrypt
add folds
updated NEWS wrt. bug #69487
Replace bug70018 test (broken on non-GNU) with win32 version
Reverted useless cleanup code
Update broker_describe.phpt
Update broker_describe.phpt
Update dict_check.phpt
Support for XLC compiler
fix test
Add XFAIL test for #70228
Hmm, we should also take care of uninitialized hashTable
fix wording
one bracket too much
add check for required re2c
catch up with the current requirement
make use of PHPROOT for possible mkdist integration
make scripts/dev/gen_verify_stub executable
initial add verification stub generator
don't close stdin
fix the mcrypt related part of bug #64833
Update broker_free.phpt
Update broker_dict_exists.phpt
Update broker_describe.phpt
Update dict_suggest.phpt
Update dict_store_replacement.phpt
Update dict_quick_check_01.phpt
Update dict_quick_check.phpt
Update dict_is_in_session.phpt
Update dict_get_error.phpt
Update dict_describe.phpt
Update dict_check.phpt
Update dict_add_to_session.phpt
Update dict_add_to_personal.phpt
Update broker_set_ordering.phpt
Update broker_request_dict_01.phpt
Update broker_request_dict_01.phpt
Update broker_request_dict.phpt
Update broker_list_dicts.phpt
Update broker_init.phpt
Update broker_get_error.phpt
Update broker_free_01.phpt
Update broker_free.phpt
new test refactor
test refactor
fix typo in NEWS
updated NEWS
Update broker_list_dicts.phpt
Update dict_suggest.phpt
Add FR to #70112 news entry
Update dict_suggest.phpt
Update broker_list_dicts.phpt
Update dict_describe.phpt
Update dict_describe.phpt
Update broker_list_dicts.phpt
Create dict_suggest.phpt
Rename dict_quick_check.phpt to dict_quick_check_01.phpt
Create dict_store_replacement.phpt
Create dict_suggest.phpt
Create dict_is_in_session.phpt
Create dict_get_error.phpt
Create dict_describe.phpt
Create dict_check.phpt
Create dict_add_to_session.phpt
Create dict_add_to_personal.phpt
Create broker_set_ordering.phpt
Create broker_request_dict_01.phpt
Create broker_list_dicts.phpt
Create broker_get_error.phpt
Rename broker_free.phpt to broker_free_01.phpt
Create broker_dict_exists.phpt
fix datatype
Update UPGRADING about new substr() behavior
fixed mixed up NEWS entries
Use specialized efree_size()
Check the function UConverter::getAvailable with parameter wrong
Make bin2hex() and hex2bin() timing safe
Improve the conditions(save one comparison)
Add subject to mail.log
Format alignment (needed for news2html)
Format alignment (needed for news2html)
We want to track phpdbg bugs in official bug tracker now; updated URL
Show also runtime-bound functions/classes/methods with phpdbg -p
One less comparison
Closures only have {closure}() as method name Prefixing a class name does not make sense as they may be rebound to another scope, where this will be confusing
Init variable to NULL before passing to zpp
Format alignment
PHP 7 OCI8: fix bug57702.phpt regression
remove #ifdef
remove comment, it's not right
updated NEWS
updated NEWS
update NEWS
Revert SplFileInfo BC break while keeping fix for assertion removal
updated NEWS
updated NEWS
updated NEWS
updated NEWS
Preserve return value in zend_vm_call_opcode_handler with global opline/ex registers enabled
Update NEWS
Some OCI8 fixes (Rajendra)
Updated zend_update_static_property
updated NEWS
updated NEWS
updated NEWS
updated NEWS
updated NEWS
updated NEWS
Added XFAIL test for bug #53640
updated NEWS
updated NEWS
updated NEWS
updated NEWS
Better implementation
DOMDocument::saveXML has a 2nd optional arg
Adding tests for getprotobyname and getprotobynumber functions
hmm, we do not need the nop after compilation, so does not matter for opcache...
a: try { ... } ≠ try { a: ... }
add missing NEWS entry
Move try/catch/finally tests to common directory
Mark temporary_cleaning_006.phpt as XFAIL
Better opcode dump for finally
Micro optimization
Hint label lookup table initialization branch on GOTO VM kind.
Resolve GOTO at compile time and replace it with sequnce of FREE/FE_FREE and JMP.
Exception thrown by "return" statement (from TMP destructors) shouldn't be caught in the same function
Readded tests
Squashed commit of the following:
add missing NEWS entry
PDO_OCI LOB fixes (Senthil)
Improve test portability (Senthil)
Add new test section.  Diff with query 5 is still to be resolved
Add Oracle syntax (Senthil)
Don't return T_ERROR from token_get_all()
refix the NEWS
adding scenario of test to improve test coverage
move the use-after-free fixes to 5.6.11
Update token_get_all() arginfo
Add test guaranteeing that loop vars are only freed after potential return type exceptions
Disable opcache.fast_shutdown if USE_ZEND_ALLOC=0
Added missing API functions
Add posix_setrlimit() FR #54603
5.5.27 release
Working fix for ctrl+d on readline/libedit
fix NEWS
Make sure fast_call_var is initialized properly
Add assertion in liveliness computation
Add comment to explaining the new check
Remove outdate comment
PHP 7.0.0 Beta 2 NEWS
ZEND_SEPARATE reuses temporaries
5.4.44 next
Switch code on thrown TypeError and ParseError to 0, update related tests
fixed typo in test for bug #66985
Properly exit on EOF on stdin in readline mode
Remove loop_var_stack
SQLite3::open/__construct has 2 optional args
Better fix for bug #69958
Better fix for bug #69958
Use NULL where possible for exception class
Allow NULL for exception_ce
fix C89 compat
Better fix for bug #69958
update news
fix C89 compat
added info about the user space stream context for pipes
mention pcre.jit in the supplied php.ini-*
Added php tests to improve extension coverage
add missing second argument for ucfirst to the proto
Update NEWs
updated NEWS
Update NEWs
Tuned off dubugging of live ranges
Better fix for bug #69958
Better fix for bug #69958
update news
Throw TypeError for invalid callback
Small cleanup in ternary compilation
move the define to the right place
fix ext/ldap build
Rectify information about invalid shift warning being now ArithmeticError
Do not display EXT_TYPE_UNUSED in phpdbg opcodes
Run debug build with opcache on travis
Add missing include
Simplify TMP var number decoding (without HashTable)
Avoid dangerous optimization
Attempt at falling back on ldap_find_control for Mac OS
update NEWS about #69900
Updated README, added test to create LDAP base if missing and ease tests
Reorder the conditions
Update memory freeing and other issues, revert some changes
http parser code assumes char is signed
bring back the division by zero warning
Convert E_ERROR to thrown Error in extensions
Cleaned white spaces in PHP_INI definition of phar
This macro check is not needed (Anatol)
Replace references to PHP_WIN32 and TSRM_WIN32 with ZEND_WIN32 in Zend/, this also fixes 1 instance of where fflush(stderr) was misplaced (zend_extensions.c)
Switch code on thrown Errors to 0, update related tests
Remove E_EXCEPTION
Switch macro with __VA_ARGS__ to function
Remove need to pass error level
Enable throwing custom exceptions from errors
Always report object leaks
Don't leak generator cycle in ReflectionGenerator test
Switch position of ce in exception ce variable names
Change zend_exception_get_default() to zend_exception_ce
Cleanup exception ce API
fix backport mistake
fixed fix #69975 wrt. ODBCVER < 0x0300
improve info about the applink
added openssl applink shim note to UPGRADING.INTERNALS
add missing item in the content table
backport c01943bffc8b719e552d307f522820d50f783a4c into 5.6
fix improper behavior
integrate the applink shim in the other bins
integrate the openssl applink shim
Catch the specifical exception
Added more tests to improve function coverage
Allow integer default for float type
updated NEWS
updated NEWS
Update NEWS for bug #69957
Correct type hint name for booleans in method signatures
XFAILED tests are not "You may have found a problem in PHP"
Introduce ArithmeticError
Cleanup (avoid reallocation)
Cleanup (avoid reallocation)
Cleanup (avoid reallocations)
Cleanup (avoid reallocation)
add missing items to the table of contents
update UPGRADING infos
fix pipe peek timeout
improve timings evaluations in test
use proper place to cleanup
fix test for systems with lower time resolution
remove stderr descriptor
no need to fflush here
added test for bug #69900
select the case to set the pipe blocking option more precisely
fixed wrong number for the new option
fix c/p issue
properly set the pipe blocking option
add missing stuff is the header
initial stuff to make allow blocking pipes on windows
Use hash_str directly
Same here
Use one_char_string
Use one_char_string
Use zend_string in setcookie (save value reallocated)
Unnecessary duplication
This can not be true
CT eval ZEND_DIV in all cases (warning was removed)
Use DivisionByZeroError instead of exception for %/intdiv()
Remove warning upon division by zero
updated NEWS
Cleanup (removed dead code)
Cleanup (avoid reallocation)
Cleanup (avoid reallocation)
Cleanup (avoid reallocatios and side effects in php_strip_tags)
Cleanup (updated comments)
Cleanup (replce hack by a clean implementation)
Cleanup (removed dead code)
Cleanup (avoid duplication)
Cleanup (updated comments about optimization of comparison with IS_NULL)
change the inclusion order which fixes the vc build
Cleanup (we don't use is_ref=1/refcount=2 trick to trigger COW in PHP-7)
Cleanup (avoid reallocation)
Cleanup (avoid reallocation)
Cleanup (avoid reallocation).
Cleanup (avoid reallocation).
Cleanup (avoid string reallocations)
Get rid of ZVAL_ZVAL() macro usages. Replace them with more clear and optimal equialent sequences.
debug_print_backtrace has a 2nd optional arg
php_uname has an optional arg
Use ZSTR_ API to access zend_string elements (this is just renaming without semantick changes).
keep LDAP_DEPRECATED in config.w32
Add tests for dynamic static call to instance method
Throw Error on dynamic call to instance method when called statically
More PHP 7 patches (Rajendra/Abdullah)
Only call stream_flush if anything was written This avoids flushing in readonly mode upon close
Use ZSTR_ API to access zend_string elements (this is just renaming without semantick changes).
Improved code coverage of explode function
Added basic and error tests for hex2bin function
refix the negative zend_long to size_t casts
adding several other testing scenarios of code without coverage in stripcslashes function
adding another testing scenario without coverage in setlocale function
On Windows PHP may be restarted with different set of DSO extensions without SHM reset. This may make optimisation for entities from DSO extensions inconsistent.
On Windows PHP may be restarted with different set of DSO extensions without SHM reset. This may make optimisation for entities from DSO extensions inconsistent.
UPGRADING typos/wording
Improved zend_string API (Francois Laupretre)
Deprecating ldap_sort the right way
Restored old behavior
fix more places with subtle negative zend_long to size_t cast
remove useless check
remove comment
Prevent attempts of compile-time evaluation of invalid operators (e.g. division/modulo by zero and shift by negative number)
Reverted wrong fb08798c9f0ea820d567668d0cea4833dc61dd8e
Adds deprecation-message for ldap_sort
Don't evaluate invalid constant expressions.
fix negative zend_long to size_t cast
removed unreachable code in the substr_replace function
keep LDAP_DEPRECATED in config.w32
Putting back deprecated symbols for ldap_sort
Removed deprecated function calls from ldap module
Removed ifdefs of LDAP_API_FEATURE_X_OPENLDAP, fixed a warning
Putting back deprecated symbols for ldap_sort
fix tests
remove useless assignment
fix FCGI crash in TS mode
2nd arg of sprintf is optional
Make backtraces *much* more readable
Add yield from to frame leaving instructions
Show exception source in phpdbg
Show full signature upon inheritance mismatch
Remove now unneeded step option (-s)
Bump re2c version for json scanner
Forgot to git add rope leak test
Unused ret
updated NEWS
Correct oci8 hash destructors to prevent segfaults, and a few other fixes.
tweak the zendparse symbol to be exported with newer bison
fix touching
touch all the files before creating a tarball
fix one more bad char in the NEWS
remove BOM and a unicode char from the NEWS
updated NEWS
updated NEWS
added skip condition for powershell requirement of test
updated NEWS
updated NEWS
Feature: Enhanced array_column() to also work with object elements.
added regression test for bug #69679
slightly revised bug69462.phpt
Test for bug #69462
Use ZEND_INIT_STATIC_METHOD_CALL for literals of form "classname::method"
restricted test to English locale (fails otherwise)
fixed broken test (syntax error in SKIPIF section)
Add test for bug #69939
Added more indirect call tests, remove invalid test
moved function warning test to money_format_error.phpt file
3rd arg to  stream_set_timeout is optional ignore_user_abort() should take a bool not a string
fix unknown size of void error
Optimize out usless conditions used by specializer
update the doc in regard to the latest discussions
backport missing rev bfdc9e280515c1639dfe1d81ce6fc225d2cf1bc9
Better check for __builtin_constant_p() availability
Moved test to correct place
5.6.12 next
Typo (thanks kaplan@)
Micro optimization
Passing a zend_string * to %s is a bad idea
5.5.28 now - Security Only
fix NEWS
3rd arg to define() is optional
Wrong arginfo on assert (not adding types, just fixing a missing arg)
PHP7 sounds like a good time to include signatures in announce mails
space
Made bug44295-win.phpt locale independent
updated NEWS
updated NEWS
updated NEWS
updated NEWS
prepare NEWS for next
Avoid op_num = -1 in unfinished generator cleanup
updated NEWS
updated NEWS
updated NEWS
Moved NEWS entry for bug #69864 to proper category
Moved NEWS entry for bug #69864 to proper category
Moved NEWS entry for bug #69864 to proper category
updated NEWS
Removed deprecated function calls from ldap module
updated NEWS
Removed ifdefs of LDAP_API_FEATURE_X_OPENLDAP, fixed a warning
Revert "Simplify php_implode(). Fill the resulting string in direct order." The patch slightly improved performance of string imploding, but reduced speed of integers imploding.
Encapsulate FastCGI implementation details. Previously fcgi_request defined in main/fastcgi.h might be treated differently in different files, because of different behavior of #ifdef TCP_NODELAY. This leaded to stack memory corruption and unpredictable crashes.
updated NEWS
Simplify php_implode(). Fill the resulting string in direct order.
bump API version to 6.8
bump API version to 6.8
bump API version to 6.8
bump API version to 6.8
Drop duplicate object-to-type notices
Added comments
Drop superfluous __toString handling code
Also silence copy here
This macro is defined in zend_virtual_cwd.h, avoid redef
Silence the "1 file(s) copied" notice (from copying the manifest file)
Remove these old references to the DSP files we don't use anymore
Also try __has_builtin() where builtins are used
Add phpdbg userland API to fetch oplog We may want to add some opcode info later, so that "opcodes" mode is more helpful
Avoid overhead in RELEASE build.
Revert "And actually use this new arginfo data"
Revert "Several return type fixes, still not completed... Incomplete prototypes :-/"
Several return type fixes, still not completed... Incomplete prototypes :-/
And actually use this new arginfo data
Load/restore VM stack before unfinished generator cleanup
Add test for previous commit
Clean up zend_hash_compare implementation
Add missing NEWS entries
Avoid unnecessary separations in VERIFY_RETURN_TYPE
Drop unnecessary %prec
updated NEWS
add test for bug #69838
Micro optimization
Remove unused var
This test should be kept
Remove the references to imageps*() after the T1Lib removal (Noticed by Ferenc)
more precise way to destroy iterator object
updated NEWS
added test for bug #69846
Cleaned white spaces in PHP_INI definition of phar
better approach to fix bug #69846
Move strlen() check to php_mail_detect_multiple_crlf()
Micro optimizations for pcre
update NEWS
update NEWS
updated NEWS
fixes bug #69835: phpinfo() does not report many Windows SKUs
partial fix to bug #69846
Remove excess variable in mail.c (5.5 branch)
Minor updates to EXTENSIONS for removed SAPIS etc that I remembered off my head, also add Côme as a maintainer for ldap as per request[1].
add a freshly built pear/install-pear-nozlib.phar. created from the current stable branch of pear-core and using the trunk from PHP_Archive where the ereg_ calls are removed already
Add CVE to bugs #69545, #69646 and #69667
Add CVE to bugs #69545, #69646 and #69667
Add CVE to bugs #69545, #69646 and #69667
Update NEWS
Seems UPGRADING is not merged...
Add tests with invalid Error construction params
cleanup unused var
fix c/p test title
preserve the orig class name when extending the ErrorException
dont use function to fetch default exception ce
more tests
fix crash when invalid exception arguments passed
fix unknown size of void error
Rename interface macros
Implements extended error messages
Replaced calls to deprecated openldap functions
added regression test for bug #69840
Add missing path to .gitignore
Use COW to prevent unnecessary duplication of dynamic propertyes of stdClass (and other classes without predefined properties).
Add a comment
Improved class type hints checks, by caching resolved class entries in run-time cache.
Use better hash functions (reuse key and avoid hash value recalculation)
Improved variable name validation
updated NEWS
updated NEWS
updated NEWS
Support references in convert_to_*
Move check for CT div by zero into common function
Drop now superflous check for VIA_TRAMPOLINE
Fully fixing all the affected const expr cases (see bug #69832)
Removed useless #ifdef
Use zend_parse_parameters_none() here
Make CALL VM with FP and IP in global registers not to return anything from opcode handlers. Set OPLINE to NULL to terminate VM loop instead. This saves 1 CPU instruction for each opcode handler.
Complete fix for problems related to bug #69802
Make the tail slash algined
Move definition of Throwable to zend_exceptions.h/c
Check for zend_ce_throwable instead
Remove incorrect use of 'irregardless'
Add an entry for dc37d3e8c2248f4f4437547bc7225276e22ea41d
Few more lines about opcache file cache.
Rmoved opcache.load_comments.
Added notes about opcahce.file_cache.
Add phpdbg to allowed cli-SAPIs in opcache
Removed opcache.load_comments configuration directive. Now doc comments loading costs nothing and always enabled.
- Updated to version 2015.5 (2015e)
Empty merge
- Updated to version 2015.5 (2015e)
Empty merge
- Updated to version 2015.5 (2015e)
- Updated to version 2015.5 (2015e)
Empty merge
- Updated to version 2015.5 (2015e)
Empty merge
- Updated to version 2015.5 (2015e)
- Updated to version .-96 ()
Empty merge
- Updated to version .-96 ()
Empty merge
- Updated to version .-96 ()
Add Throwable tests
Updated UPGRADING with RFC link
Changed AssertionException to AssertionError
Update exception error messages
Simplify the condition
Revert "Revert "Expand optimizations regarding short-circuting a bit""
update UPGRADING
update UPGRADING
Revert "Expand optimizations regarding short-circuting a bit"
Expand optimizations regarding short-circuting a bit
Add ZEND_ASSERT_CHECK to phpdbg opcode jump list
ext/mysql has been removed as of PHP 7.0.0
Revert "We are allowed to break ABI now..."
We are allowed to break ABI now...
typo
Revert fix for bug #55407
Cache the class_name typehint key in arg_info This leads to up to 2% improvement on one tested real world application by not having to always recalculate the lowercased string and its hash
Add line about scalar type declarations to UPGRADING
Get rid of more ZVAL_ZVAL() macros
Avoid zval duplication in ZVAL_ZVAL() macro (it was necessary only in few places). Switch from ZVAL_ZVAL() to simpler macros where possible (it makes sense to review remaining places)
5.4.43 next
Make convert_to_* safe with rc>1
this is in 5.6.10, not in 5.6.9
rework that test to allow delta for rounding errors
improve test
added test for bug #69646
fix bad copypaste
Compile-time constant folding
make it possible to set the re2c and yacc paths via environment variables for genfiles
fix bad formatted "undefined offset" notice when key is negative
Fetch operands of opceodes for binary operators in certain order (from left to right).
updated NEWS
updated NEWS
updated NEWS
fix memory leak in pdo_pgsql closeCursor (bug 69752)
regenerated the ini scanner
updated NEWS
updated NEWS
updated NEWS
updated NEWS
updated NEWS
updated NEWS
fixed bug, where a linebreak immediately after an opening quote of a value caused a segfault
made failing test more meaningful
added failing test
add missing NEWS entries
add missing NEWS entries
add NEWS
fix test
update NEWS
fix typo
fix hard-coded path in test
prepare for 7.0.0alpha1
fix NEWS
these will be part of 5.6.11
add missing NEWS entry
5.5.27 now
fix test description
fix test description
NEWS entry for: Upgrade bundled sqlite to 3.8.10.2
NEWS entry for: Upgrade bundled sqlite to 3.8.10.2
Upgrade bundled sqlite to 3.8.10.2
NEWS entry for: Upgrade bundled sqlite to 3.8.10.2
Upgrade bundled sqlite to 3.8.10.2
Add CVE used in PHP 5.4.39, 5.4.40, 5.4.41
Add CVE to #68598
fixed test related to fix for bug #67805
updated NEWS
updated NEWS
fix dir separator in test
updated UPGRADING and NEWS
added LIBXML_BIGLINES constant
added tests for bug #54138
replaced / in filename with DIRECTORY_SEPARATOR according to performance warning on DOMDocument::load man page
added SKIPIF conditional to check for DOM availability
added XFAIL test for bug #69753
Reflection support for type hints and return types
fixed language dependent Windows socket tests
add error message
Also reflects the case change
Improve json parser code
Get oci8 extension compiling with php7.
updated NEWS for bug #69642
updated NEWS for bug #69642 fix
Use better zend_hash_* functions
Improve the fix for bug #69756
Delay checks for undefined CV variables after checks for fast paths.
fix typo, see #68476
Convert "switch" into series of "if". This allows better fast-path placement, additional specialization and makes final code less.
Avoid useless copying and duplication
Specialize out useless checks. Only IS_VAR may be EG(error).
fix bitwise object operations
Removed useless code (there is nothing to free for string offsets).
Removed dead code (IS_CONST operand can't be IS_OBJECT)
Separate rare used increment/decrement/assign_op of overloaded properies into non inlined functions.
Reorder conditions to check for fast paths first
isset() micro-optimisation
Removed commented code
micro-optimization
CONCAT optimization
Use CG(one_char_string) if possible in bitwise string operations
Added "exclude_disabled" argument to "get_defined_functions".
introduced DllMain for the main php DLL
a bit more clearness fir --with-mp
Call zend_array_dup() instead of zval_copy_ctor().
Avoid useless duplication. Constant values have to be duplicated only for internal constants in ZTS build, to prevent simultaneous modification of reference counters from different threads.
fix test
Reorder conditions to check for fast paths first.
set initialized flag after actual initialization happened
improve fix for Bug #69545
FIx darwin build
fix phpize mode for manifest embedding
fix phpize mode for manifest embedding
split simplexml tests for 7
split the original test to check behaviour diff on 32- and 64-bit
recovered original meaning of SXE xpath test
backport the basic code to properly recognize win 8.1 and 10
backport the manifest changes for makefile
backport the manifest changes in js
add default manifest
add test
Update PCRE version (bug #69689)
run credits script
updated UPGRADING
removed sapi/nsapi
improperlog
updated NEWS
Refactored the fix for bug #66084, by cmb@php.net
removed test for unrelated bug #68946
fixed whitespace dependend behavior of casting SimpleXMLElements to boolean
added tests for bug #61335, bug #67572 and bug #68946 (the latter already passing, but better safe than sorry)
fixed whitespace depending (mis)behavior of var_dump'ing and print_r'ing SimpleXMLElements
added failing tests for bug #62639, bug #67116, bug #69169 and bug #69491
NEWS and UPGRADING entries for PR #1309
add tests for proc_open() and pipes
remove hardcoded limit on number of pipes in proc_open()
add test
fix windows version constants initialization with nts
Remove zend_init_list
Drop unnecessary checks for op_array->filename
Preserve VARIADIC flag for Closure::__invoke()
Remove T1Lib support (see #69698)
Note getrusage() for Windows in UPGRADING
manifest for the main php dll needs to be copied manually
pack the default manifest for devel
add *.manifest to cleanup
correct manifest
using correct manifest, GetVersionEx can recognise versions
take the default manifest
add default manifest
fixup default versions, just for the case
Attempt to fix #69643
Shouldn't have been committed, so revert
Relax a little this test, because random is not reliable
empty commit to trigger a github mirror
move to 5.6.11-dev
update lib versions info
[16:45] <@bjori> salathe: http://git.php.net/?p=php-src.git;a=commit;h=d4324a5e4ba3ae668cf1a3c2426241fd6ac385a5 && http://git.php.net/?p=php-src.git;a=commit;h=9de8833bea9fe39556066e7ff77b136697652d02 [16:45] <@bjori> you should probably move philip to authors, and yourself out of the author list
updated manual editor
Remove debug codes
Seems useless now
Remove useless cast
Add test for memory leak with wrong return type
Add targets to simplify building PHP with FDO (Feedback Directed Optimisation) PHP should be built with the folowing steps:
fix dir sep in test
Even fake token better to be in upper case
added the shared fcgi imp to sapi/cgi
remove fastcgi.c from the dll target
reverted 0512b38 and 1411ca5
Only link fastcgi into fpm and cgi
Micro optimizations
implicit declaration of function ‘zend_multibyte_yyinput_again’
Ran wrong tests, fixed bug in impl; simplified
Speed up implod()'ing between 5% and 30% (by time)
Add class to semi_reserved tests
updates grammar tests with class members named as method modifiers \cc @bwoebi
Also unreserve T_CLASS
Set %expect to 0 in parser (Using %prec)
Rebuild scanner, add NEWS/UPGRADING
Prevent op_array->this_var setting when method uses auto globals
move S_IFLNK define into header
further cleanups with S_IF* macros generalized declarations
cleanup more redundant S_IS* declarations
cleanup redundant S_IFDIR declaration
cleanup duplicated stat declarations in ext/phar
move some stat declarations into zend_virtual_cwd.h
pick up sasl auth plugins if there was any in the deps
remove non-applicable comment
fix datetime tests with vc14
make the test more reliable
Improve phpdbg opcode dump
NEWS
NEWS
fcgi_is_allowed should not log error
updated NEWS
add the remaining useful symbols to the export
implement necessary symbol exports
added test to clearly show distinction between unset (aka unmatched) subpattern and an empty match
adjusted other tests to cater to changed behavior
changed preg_*() to yield NULL instead of '' for unset substrings
added failing tests for bug #61780
Avoid multipy allocating of request env
increase the internal post data buffer
Use weak function for fcgi_log
Inline zend_find_builtin_type
Remove duplication
Rename some variables and functions
Corrected line comment 5256
Remove ZEND_BRK/ZEND_CONT from VM
Use ZEND_JMP instead of ZEND_BRK/ZEND_CONT
Embed break/continue depth into opline
Move loop var stack management into begin/end loop
Drop FREE_ON_RETURN flag, check brk_cont->start instead
Drop THIS_HASHVAL define
fix test
Add entry for bug #69354, fixed in 5.5.25
Add CVE for bugs in 5.6.9
Add entry about PCRE upgrade (rev 95fa7279)
Add CVE for bugs in 5.5.25
Forgot the test for bug #69688
removed old news item
NEWS
Make the phar symlink relative
remove duplicated declaration, fix build
updated NEWS
updated NEWS
added missing GLOB_BRACE support check
added SKIPIF section to test to make sure that GLOB_BRACE is supported
fix #69628: complex GLOB_BRACE fails on Windows
added PHPT to check for bug #69628
fix handling VAR vs VAR= in putenv
Add support for string dictionaries, fix array dictionaries ({de,in}flate)
Add documentation contribution information.
Add a bare bones CONTRIBUTING.md.
Set proper type_info flags.
Improved script copyining from SHM to process memory
Micro optimization
added missing GLOB_BRACE support check
add license header
add license header
remove dead code
add vim modelines
add vim modeline
disable unused members in struct rusage
added SKIPIF section to test to make sure that GLOB_BRACE is supported
Expose pdo stmt ctor args to gc
Add GC support for ArrayObject
Show argument causing TypeException in trace
long > zend_long (Thanks Anatol)
fixed test
Windows support for getrusage() * See getrusage.c/h for implementation details and limitations * Tests passes and have had their SKIPIF updated * psapi.lib is now linked to by default
move test
move test
NEWS 5.4
fix new test
fix new test
NEWS 5.6
NEWS 5.5
[Math] ceil, floor added FAST_ZPP parameters pass
Improved hash table copying
Improved hash table copying
This shouldn't have been a part of the previous commit
* Make ext/dba compile with newer versions of Oracle's Berkeley (in my case 6.1) * Make the db3 driver work with 4.3+
Add consistency check in FAST_ZPP call So ensure Z_PARAM_OPTIONAL is correctly call at the right place Only in DEBUG build
Use logger pointer
Eliminated useless check in FAST_ZPP (this also fixed few wrong -Wmaybe-uninitialized compilation warnings) (Remi)
Move fastcgi.c to main
fix test title
fork test for ICU >= 55.1 compat
sync test with exception currently thrown
fork test for ICU >= 55.1 compat
fork test for ICU >= 55.1 compat
skip test for ICU >= 55.1, a newer test is available and passes
fork test for ICU >= 55.1 compat
fork test for ICU >= 55.1 compat
fix mbrlen prototype availability
Reset heap usage statistics on request shutdown
Throwable method signatures.
Avoid possible uninitialized value assignment
Added Test (the lineno should be fixed)
Prefer isfinite to finite
Update exception names in tests after formatting changes.
Display TypeExceptions like normal exceptions
Make zend_get_exception_base static.
Tweak uncaught exception message display
Don't write prop if read prop threw exception
Updated tests to reflect exception class changes.
Remodel exceptions based on Throwable interface
Display EngineExceptions like ordinary exceptions
code standard
Hint the compiler
remove version check
Updated test to include ReflectionGenerator
Improve strtr()
Minor typo in warning message
Add strategy option to deflate_init()
Add dictionary option to {in,de}flate_init()
Add window option to {de,in}flate_init()
fix NEWS
added the inclusion guard
Optimized === and !== with NULL, FALSE, TRUE.
Add NEWS/UPGRADING for ReflectionGenerator class
Add ReflectionGenerator class
Refactored custom storage API.
fix test output (32bits)
fix #69628: complex GLOB_BRACE fails on Windows
added PHPT to check for bug #69628
fix typos
Updated NEWS
fix tests
merge similar if conditions
add rusage support to wait() and waitpid()
fix release dates for 5.6.9/5.6.10. spotted by @Jan-E on github
extend libxml exports
fix libxml2 headers lookup
Updated NEWS
Updated NEWS
Close fd at the end, otherwise people complain
Add file descriptor caching to mcrypt_create_iv()
Updated NEWS
ups, it should have used Zend MM
Removed deprecated conditions
fix build, catch up with linux part for #66048
Partial revert of 6a819bba40661a9a8d7080994cb2f24b73c5d46c.
5.4.42 next
fix format
update NEWS
fix #66048 for PHP7
Updated NEWS
Mark first call frames of stack segment with ZEND_CALL_ALLOCATED flag to simplify checks on stack deallocation.
Updated NEWS
return FALSE instead of NULL from ZipArchive::getStream when php_stream_zip_open() fails (fixes #67161)
HTTP 506 status code added.
Update www.conf.in
Detailed information about the strftime access.log format
Updated NEWS
Add support for $callable() sytnax with 'Class::method'
Reworked NEWS for PHP 7
Updated NEWS
Add comment about SEARCH HTTP Verb being possible as well
Add test for the SEARCH HTTP verb in the CLI HTTP server.
Add "SEARCH" as supported HTTP verb.
Updated UPGRADING
Ban rebinding closures to different internal classes
Updated UPGRADING
prohibit empty cookie names for setcookie()
Use explicit type here
Implements extended error messages
Remove MSIE 5-specific Cache-Control fields.
Add test for bug #69522
Update tests
Implemented fpm_trace for PHP7
catch more places for libxml headers search
improve searchability for libxml2 headers
fix snprintf redefinition in libxmlrpc under vc14
fix timezone usage in soap for vc14
Tidy up and regenerate json parser with latest bison version
fix _timezone usage for vc14
Forgot test file
Add tests for CSPRNG, fix C99 comments
Improve CSPRNG implementation
Initial implementation for CSPRNG API
Sorry, missed here should be checked
Remove not necessary checks
Reorder fields of curl
revert previously change to this
Improve ZBLOCK handling with zlib < 1.2.4
Improved fast path locality
Add some NEWS entries
Allow self etc in eval / file scope
Avoid unnecessary reference counter incrementation on $this when call methods
set ext/zip version to 1.13 (as we have new methods... semver...)
Strings and other pointers should be handled differently
Temporary fix for SIGFPE
Added experimental (disabled by default) file based opcode cache.
Don't implicitly make closures in static methods static
better fix (also fix i386 build)
try to fix build when LONG_MAX not defined
NEWS
add ZipArchive::setCompressionName and ZipArchive::setCompressionIndex methods
don't use deprecated libzip call
update libzip to version 1.0.1
Use fast zpp for frequently used gettext(_)
Optimized json_parser
Use Z_ARRVAL_P since we already know it's an array
use zval_get_long
Throw exception from FETCH_CLASS_NAME
Use ZEND_FETCH_CLASS_NAME for dynamic self::class etc
Use Fast ZPP
Loop splitting and specialization
Micro optimization
e more efficient zend_hash_*() functions
Use zend_string to represent pdo_column_data.name and avoid duplication.
Use zend heap instead of system
micro optimizations
Use better zend_hash_*() functions.
Removed check for count() in SXE class
fixed comment
Unused macros
Optimize cast simplexml to IS_BOOL
Relax tests failing on i386 with new zic
Unused var
Remove SSLv3 test dependencies SSLv3 is going away. Debian8 already ships with an openssl with no SSLv3 support which was causing these tests to fail.
Avoid repeatable lookups for count() method in the same class entry.
Inline IS_LONG value calculation and avoid strtol() call.
Update version
add config vars for phpize where conf opts aren't enabled
add config vars for phpize
fix compiler check for phpize
Saving the latter checking in most cases
Update NEWS
Add unique prefix to exported function
First pass migrating PDO_OCI to PHP 7
Export free_statement to replace php_pdo_stmt_delref which was deleted in 9fe853130951cff085907c0ac136edd31ec52288 along with php_pdo_stmt_addref
fix typo in php.ini
add missing SKIPIF section on test
ext tokenizer port + cleanup unused lexer states
fix indentation + remove c++ comments
implement context sensitive language with lexical feedback
add tests for semi reserved words and remove obsolete ones
Upgrade to PCRE 8.37 due to various bugfixes
5.6.10 will be next
Disallow self etc outside classes at compile-time
Improve fast_is_[not_]identical() functions to teturn value instead of takeing additional arguments. Pair INSTANCEOF with the following JMPZ/JMPNZ.
5.5.26 now
Paired instuctions frequientiy used together (e.g. comparisons + conditional jumps)
Use new structures for tzdb header here as well
This doesn't work in PHP 5.5 - sigh, I wish the libs were kept in sync
Split header reading in 32bit and 64bit variants.
Make ZEND_RECV_INIT and ZEND_BIND_GLOBALS opcodes to be "repeatabe" with inner-loop instead of main interpreter loop.
Optimize opcodes for fast path
Micro optimizations
Simplified code
updated NEWS and fixed a typo
updated NEWS
backported patch for bug #69472
updated NEWS
updated NEWS
fix bug #69381
fix VC9 build with PCRE
relax tests with huge year (new zic)
ignore second value for huge timestamp test (new zic)
relax test for date < INT32_MIN (new zic)
relax bigbang content (new zic)
Make date transitions tests more flexible
Micro optimizations
Upgrade PCRE to 8.36, it fixes some crashes
Make it inline
Drop unused num index
Drop compile_class_decl return value
Restored accedently removed line that caused memory leak
Minor Typo in Comment
Cleanup substr_replace
Clean up some type conversions
Micro optimizations
Added news entry
Use new hash iteration API.
Eliminate useless checks
Pass class_entry through IS_VAR to avoid hash lookup in ZEND_NEW.
Use "safe" anonymous class names. Don't show the mangled names through var_dump().
Refactored using specialized opcodes
More cleanup (mainly retab)
Don't issue FETCH_CLASS for anon classes
More retab
Simply anon class name generation
Retab
Revert unrelated changes / rebase fixup
Rebase Joe's anon classes implementation
Print should be in *current* context (stack)
Add line_start/end info to main op_array
Tweak new deflate/inflate implementations
Respect USE_OTHER in spl_array_is_object
Don't store $this reference for IS_SELF AO
Drop ArrayObject IS_REF flag
- Updated to version 2015.4 (2015d)
Empty merge
Optimized HashTable copy and cleanup function for cases without holes.
- Updated to version 2015.4 (2015d)
Empty merge
- Updated to version 2015.4 (2015d)
Dropped CN_match and SNI_server_name context options
Remove PGSQL_ATTR_DISABLE_NATIVE_PREPARED_STATEMENT
UPGRADING
Update NEWS/UPGRADING
Optimized zend_hash_rehash(), added some exoectations to generate better code
Set NULL after efree
Added HashTable flag HASH_FLAG_STATIC_KEYS that is maintaned to be set if all hash table keys are numbers or interned strings. Take this flag into account when copy or destroy HashTable to avoud useless checks for each key.
Add inflate_*() test cases
Add incremental zlib inflate API
Add deflate_*() test cases
Several deflate_* changes (more after the jump)
Dont't use DO_ICALL for internal functions returned by reference
Cleanup comments and add related tests.
Slight improvement
Don't propogate "fake" EX(called_scope) and EX(This) into each internal function. They need quite seldom and it's cheaper to get them from corresponfing upper stack frame.
Make internal non-static methods to be executed in context of class. Set EG(scope) accordingly.
libpq versions older than 9.3 do not have lo_lseek64
fix include with vc14
fix compilation with vc14
improve zpp readme
Use fast method to check if first arguments should be passed by reference (not tested onbig endian).
Add entry for bug #69152 in 5.6.8
Add entry for bug #69152 in 5.5.24
Format alignment
Bug #68846 was fixed in 5.6.8 by 934d6ed9
Add merged bug fixes into 5.5.24
Add incremental zlib deflate API
Use string primitive
Removred temporary code
Improved property inheritance code
Windows support for sysvshm
Since 5.6 stat.cwd using emalloc (Thanks to Remi)
fixed warning & test pushing
Keep realpath and PCRE caches in consistency with opcache SHM.
FAST_RET opcode also returns
Also consider specific catches when checking for uncaught
Break on uncaught exceptions in current frame in phpdbg
Slight zend_hash_find() optimization.
Add next command docs
Move more stuff to file_context
Remove tail blank which is committed by accident
Update NEWS
Removed deprecated code
Compact HashTables to reduce SHM usage
Adapt test for new format
Shrink phpdbg opcode dump output a bit more
Removed invalid code
Show full stacktraces for exceptions in phpdbg
show opcode count
Shorten opline dump lines and show literals
Throw exception will override EX(opline)
Refix opline usage
Properly define ZEND_OP_DATA in zend_vm_def.h This allows zend_vm_gen.php to define them in zend_vm_opcodes.{c,h} without further hacks.
Provide method to access opcodes via command line argument
updated NEWS
updated NEWS
fix more dir separators
Hmm, zend.assertions is not really on/off, but -1/0/1
Add zend.assertions and assert.exception to php.ini-*
Stabilize watchpoints
Restore fix for bug #69337
Partially enable leak reports for objects
Better throw an exception in intdiv() for PHP_INT_MIN/-1
relax tests with huge year (new zic)
ignore second value for huge timestamp test (new zic)
relax test for date < INT32_MIN (new zic)
relax bigbang content (new zic)
Make date transitions tests more flexible
Initialize VAR_FLAGS for generators
phpweb now publishes SHA256s -- and please don't cc php-announce@ - make it seperate mail
Added test
Change the GC approach to inner-loops handling. Switch to less efficient but more robust algorithm. Destructors handling is still not completely accurate.
fix column name attribute with ODBC 3.0
migrate SQLAllocStmt for ODBC 3.0 compliance
skip test when xml not available
Added GC checks and improvements
Safe destruction (variables and arguments may need to be cuptured by exception)
"C" is the default locale
Run gmp_random tests more quickly
Normalize gmp_remroot() behavior to GMP 5.1
Implement GC for spl dll
Use temporary debug_info for closures
Drop unused is_self member
Micro optimizations for the more frequently paths
Changed zend_smart_str allocation granularity to do the better job together with Zend MM and avoid useless calls to erealloc(). The actual reallocation routiones are seprated from inlined code to reduce code size.
Revert "Changed zend_smart_str allocation granularity to do the better job together with Zend MM and avoid useless calls to erealloc()." That commit significantly increased the code size because of intensive inlining and more expensive reallocation code.
Changed zend_smart_str allocation granularity to do the better job together with Zend MM and avoid useless calls to erealloc().
Mark call frames to closures with ZEND_CALL_CLOSURE flag to avoid expensive check at zend_leave_helper()
Remove duplicated assignment
fixes confusing SQLDescribeParam error message
Add list of reserved classes to UPGRADING
Add test for recursive __debugInfo()
Remove some redundant exception checking/continuing VM instructions
Add GC support to SPL heap and PQ
Use object apply count in var_dump / print_r
Forgot to transform some errors to engine exceptions
Return null on zpp failure in Array::exchangeArray()
Remove unnecessary retval members in SPL
this was reverted
66550 will be part of 5.6.8
66550 will be part of 5.5.24
eliminate unnecessary EX(opline) <-> opline reloading
reorder entries, Core is always the first block
add missing NEWS entry
add missing space to the NEWS entries to align properly
add missing space to the NEWS entries to align properly
fix possible int overflow
fix datatype mismatches
optimize structs
fix data type and 64-bit compat
bump zip release to match pecl version
Optimization of stack-frame construction
Updated NEWS
Make valgrind happy
Avoid double refcounting
fix dir separator in test
Regenerate tokenizer data
Drop ??? for AST_ZNODE in ast pretty printer
Add "yield from" support to ast pretty printer
Add NEWS/UPGRADING and some implementation notes
Update NEWS
Bug #63336 is not a bug
fix test
fix test
Partial revert of 1a7798c786466977ef8d2bc95b40a435c47c845a that introduced wrong memory access
apply a patch
codes standard
Use Z_TYPE_INFO_P() instead Z_TYPE_P() when we check for few scalar types. This allow C compiler to generate the better code.
- Updated to version 2015.3 (2015c)
Empty merge
- Updated to version 2015.3 (2015c)
Empty merge
- Updated to version 2015.3 (2015c)
What should we version the bundled opcache?
fix non-standard C
update NEWS
5.4.41 next
fix CVE num
update NEWS
fix test
GC improved to support inner-cycles.
GC tweaks
fix merge
fix type in fix for #69085
fix type in fix for #69085
fix memory leak & add test
fix CVE num
modify skeleton confirm_extname_compiled
modify skeleton.c function
Remove failing test
Additional fix for bug #69324
More fixes for bug #69152
Add support for more debug output during CC
Improve words
Temporary fix inifite loop in gc
Add some missed entry
Squashed commit of the following:
Added GC debug code and some small optimizations.
Update NEWs
Add NEWS file for password_hash salt deprecation
Deprecate password_hash salt option
Unnecessary UNDEF
Addef test for bug #63734 (Garbage collector can free zvals that are still referenced)
fix irc notification for build failure/recover
Remove SSLv3 test dependencies SSLv3 is going away. Debian8 already ships with an openssl with no SSLv3 support which was causing these tests to fail.
Use new macros
Rename prefixed mysqlnd functions - prefixed with undescore, which were accessible through a macro. Also removing the access macros. These prefixed functions were used, similarly to many functions in Zend2, because of TSRMLS - the macro was adding the the tsrm pointer to the call. However, as in Zend3 no TSRM pointers are passed down the stack, because of the usage of cached TSRM pointer in a real thread local variable, these macros and prefixed naming have lost their purpose.
Split mysqlnd_stmt::execute in 2 logical parts : - mysqlnd_stmt::send_execute() which just creates the wire message by using   an aux function and sends it to the server - mysqlnd_stmt::parse_execute_respose() which is responsible for handling   the bytes sent from the server in response to COM_EXECUTE. This makes it possible to implement finer method overwriting in mysqlnd plugins.
Add more info to the calls: - let the callee knows whether it was called directly or indirectly - two NULL zval * parameters for future extension in a pecl plugin
Added RETURN_ARR and RETVAL_ARR macros
Cleanup
Avoid reallocation
Undef results for new arithmetic exceptions
0.0 / 0.0 = NaN
Removed wrong error messages
catch up with INF handling under VS
fix build
Always throw TypeException on throwing zpp failures
Better fix for #68601 for perf https://bitbucket.org/libgd/gd-libgd/commits/81e9a993f2893d651d225646378e3fd1b7465467
add travis failure/recover notification for our irc room
fix build
fix nts windows_version_info and reorganize
This part here was moved to the EG constructor by Anatol in f51a9c71dd011f7d6879b326280adc05ae45f7f7
updated NEWS
updated NEWS
added test for bug #69354
revert skipif, this should run everywhere
further ODBC 3.0 compliance
more compliance with the ODBC 3.0
test fixes
no more winxp, but really
initialize EG(windows_version_info)
Try fixing PDO MySQL pconnect test
Drop now unnecessary start parameter
Clarify that some zpp errors are just for debugging
Don't relay on reference-counter when parameter expected to be a reference, but value given.
Unused var
Improved "fust shutdown".
Improved reference counting
added test for bug #69354
revert skipif, this should run everywhere
further ODBC 3.0 compliance
more compliance with the ODBC 3.x
test fixes
Throw ParseException from lexer
Use PHP memory manager for mysqlnd memory pools.
Convert fatal errors into EngineException
Recalssify some E_ERROR into E_CORE_ERROR
fix tests
Prevent GC from changing zval or object 'color' before they are actually inserted into possible roots buffer.
Unused var
Convert fatal errors into EngineExceptions Make zval_update_constant_ex(), zval_update_constant(), zend_update_class_constants() and zend_ast_evaluate() return SUCCESS or FAILURE.
sigh, can't even copypaste without screwing up
oop, put both the error number and message for both db object to the error message
test fixes
Convert fatal errors into EngineExceptions
Update NEWS
Convert fatal errors into EngineExceptions
Convert fatal errors into EngineExceptions
Handle incorrect break/continue statements at compile-time
Converted fatal errors into EngineExceptions
missing includes
fix extern "C"
C89 compat
add ext/odbc note to UPGRADING
Convert fatal error into EngineException
We don't need this protection anymore (now reference counting on closures is accurate).
Remove datefmt_set_timezone_id and OO variant
Use zend_error_noreturn() for fatal errors
More UPGRADING
Drop support for static calls from incompatible context
Add some notes to UPGRADING
Reclassify E_STRICT notices
Micro opt
fix release date
5.6.9 is up next
Add changelog entries for #68677, #68739 & #68740
Converted most object handlers fatal errors into EngineExceptions
Finish PHP 4 constructor deprecation
Deprecate PHP 4 constructors
Updated NEWS
5.5.24RC1
5.5.25 now
Convert fatal errors on improper access to static properties into EngineExceptions
force ext/odbc to be shared in snapshot build
Convert "Unsupported operands" fatal error into EngineException (exceptions can't be thrown at compile-time yet, so unsuported operands in constant expressions are still lead to fatal error).
Export date_get_immutable_ce() so that extensions can make use of it too.
Revert "Better to taverse reversely"
Align entries format
Update CVE for Bug #68976 to CVE-2015-2787 instead of reusing CVE for #68710
Add CVE for bug #69207
Align NEWS entries with 5.6.7
Align entries format
Update CVE for Bug #68976 to CVE-2015-2787 instead of reusing CVE for #68710
Add CVE for bug #69207
Using int32_t opposite of uint32_t
Add XFAIL test
Implement additional type reservations
no need for default value
Added missing zend_parse_parameters_none() to restore_error_handler() and restore_exception_handler() (Ferenc)
Patch improvement:
BFN
BFN
BFN
fix bug #67761
It's lowercase now
allow passing null as the third param
Better to taverse reversely
This check here is not needed anymore for Windows (Unsupported Windows version check)
Update openssl.c
Implemented FR #55716 - Add an option to pass a custom stream context
updated libmagic.patch
further sync with libmagic.orig
catch up with libmagic.orig
fix typo
catch up with libmagic.orig
added test for bug #69320
ifdef win only api
Update credits
We can re-use the already existing EG(windows_version_info) here and save a little bit of memory too!
Remove the special disabled functions on Windows, since we don't even support those versions of Windows anymore hence it makes no sense to even check for it
Another minor cleanup, drop ENFORCE_SAFE_MODE (all except pdo_pgsql have #if's for checking already)
Shameless self credit for the Windows support for contributions in the almost past decade (How time flies when you are having fun)
This should be the last of the old VC stuff in the Windows build system, also up the check to require VC11 now
Forgot this one in the last commit, removes old VC support from ext/fileinfo
Drop the VC6 portable version of strtoi64, as it is no longer needed
Drop old VC support for ext/fileinfo.
Drop this redundant check, since the minimum version of VC we support is VC11 (_MSC_VER == 1700) in ext/date
Drop old VC support in Zend Engine, this also kills the remaining MessageBox fix for Windows 9x that Anatol changed a while back
Drop old VC support (VC <= 9), for dns.c, this means that DNS_TYPE_NAPTR always is available
Remove this VC8 check as our minimum target version of VC is higher
Drop this VC8+ check, since our bare minimum of required VC version is higher anyway, meaning that CRT warnings are always supported.
Drop VC6 support in sapi/apache2handler
Drop VC6 support in ext/calendar
Drop this struct (it was only used for VC6 which we don't support anyway)
Enable all compiler warnings and linker warnings for debug builds on Windows. This is a slightly modified version of the patch in #55709
Drop zend_indent() as it was never used, complete or working
Disallow direct incdec of function return value
Remove these CFLAGS for ereg in opcache, we don't use them anymore (as opcache uses PCRE) together with ereg being gone
Add RAND_egd check for compiling against LibreSSL
Add RAND_egd check for compiling against LibreSSL
zend_hash_do_resize: amortizing the cost of compaction
Useless comment
Another CRLF test fix
Minor cosmetics for our test functions in the debug build
Added tests for the naming collision error message to handle all possible conditions
Change the error message for colliding class/interface/trait names to be a little more clearer.
remove recognition for no more supported OSes
Add CVE for bug #68901
Add CVE for bug #68901
integrate static tsrm_ls cache for ext/odbc
fix datatype mismatches
fix datatype mismatches
RFC:continue_ob accepted
expose destroy_uploaded_files_hash in the API (used by apfd extension)
updated bundled libsqlite to 3.8.8.3
updated NEWS
fix dir separator in test
revert a4157423934edf7b8fdbcee163cced9bfd5748a, fix build odbc as shared
Constness to zend_get_object_type(), thanks Michael!
Change "Cannot redeclare class X" into "Cannot redeclare class/interface/trait X", meaning that the following:
The error message is actually "Cannot", not "Can't"
Update NEWS
UPdate NEWS
Bug #69293	NEW segfault when using SoapClient::__setSoapHeader (bisected, regression)
cleanup
robuster read/write for mod ps_files
fix datatype mismatches
fix datatype mismatches
fix datatype mismatches
ensure the test uses correct SAPI
fix typo
replace this version as it's unchanged since 5.4 at least
Removed unused functions
Reverted part committed by mistake
Optimized strings concatenation. ZEND_ADD_STRING/VAR/CHAR are replaced with ZEND_ROPE_INTI, ZEND_ROPE_ADD, ZEND_ROPE_END. Instead of reallocation and copying string on each ZEND_ADD_STRING/VAR/CAHR, collect all the strings and then allocate and construct the resulting string once.
We can't stay zend_string->h to be zero, because it may lead to hash value recalculation and update. But in general zend_string may be put and read-only memory, that would lead to crash. Always set the high bit of hash_value to prevent recaclulation.
Add some assumptions.
Introduce ZEND_ASSUME() macro to help optimizing code. Reuse ZEND_ASSERT() conditions for optimization.
fix test
cleanup mod version macros and mod defs, round x
cleanup mod version macros, round 3
cleanup the mod version macros, round 2
cleaning up the version macros
export useful symbols from ext/simplexml
some more UPGRADING INTERNALS notes
some UPGRADING.INTERNALS notes
revert yet unready stuff
more fixes to the shared compilation
fix exports and shared compilation
fix exports
indicate if an ext was forced shared globally
fix shared compilation
implemented --with-all-shared option
Also add preg_replace_callback_array in NEWS
added UPGRADING notes to ext/ftp changes
updated libs versions
update NEWS with group use declarations implementation
updated libs versions
Print checking message for all ODBC drivers
Change default option of ODBC drivers to no to enable bulding standalone ODBC
oops, forgot TSRMLS_CC
fix warning & improve error handling in CURL
silence warning
Reduce downstream patches
Adding a new `createFromImmutable` method to the `DateTime` class to mirror the current `DateTime::createFromMutable()`
Renamed test case to match with reported bug
add CURL_HTTP_VERSION_2_0 and CURL_VERSION_HTTP2
Bacport fix bug #68741 - Null pointer dereference
Check that the type is correct
add CURL_HTTP_VERSION_2_0 and CURL_VERSION_HTTP2
cosmetic fix to default odbcver
cosmetic fix to default odbcver
Print checking message for all ODBC drivers
Change default option of ODBC drivers to no to enable bulding standalone ODBC
Allow adding return type during inheritance
Move check for __builtin_expect to configure
Revert "Use E_ERROR | E_EXCEPTION in FAST_ZPP mode too"
Use E_ERROR | E_EXCEPTION in FAST_ZPP mode too
Put info to info and made print always output opcodes
Add phpdbg -h for help
Stabilize (simple) watchpoints with IS_INDIRECT/IS_REFERENCE situations
Remove extraneous strlen() call
Remove extraneous strlen() call
Remove extraneous strlen() call
- Updated to version 2015.2 (2015b)
Empty merge
- Updated to version 2015.2 (2015b)
Empty merge
- Updated to version 2015.2 (2015b)
Improve test scripts
More error conditions
Added note about preg_replace_callback_array in UPGRADING
Improved impelmentation(and cleanup behaviro with errors conditions)
Only used in ZTS
Reduce downstream patches
Add news file for merge of scalar typehints RFC
Changed SKIPIF messages
ZPP changed to lazely check for "strict/weak" only if it's really necessary. Cleanup.
cleanup
use correct api
Imroved ZPP rules (condititins reoredered to prevent duplicate checks)
this already had an entry
Improved type hinting:
reverting pear/install-pear-nozlib.phar as this mass php 5 -> php 7 string replace broke the file signature(phar files are binary)
add pear to the travis build
Updated NEWS
Updated NEWS
add CVEs
Optimize zend_string_realloc() add more specialized versions zend_string_extend() and zend_string_truncate()
Add check for maintaining reference all the way through both type and return values
Reduce the number of times that the zval needs to be separated in return type checking to those that are necessary
fix condition
fix condition
fix include
using zend_stat_t
fix datatype mismatch warnings
String reference counters may be increased when string copied
Add test to ensure namespaced code can't use scalar types as class names
Disallow relative namespace type declarations
Add support and tests for null constant default values. Refactor complex conditionals into an extracted function for clarity and code-reuse
Refactor as to not use call info, but add the flag to the op_array.
Add CVE ID for #68735
Add CVE ID for #68735
Treat NetBSD the same as FreeBSD wrt. TCP_INFO usage.
Add CVE to bug #69253
Align entries format
Add CVE assigned to 5.6.6 bugs after the release
Add CVE to bug #69248
Align entries format
Add CVE to bug #69248
Add CVE assigned to 5.5.22 bugs after the release
Refactor gotos into more elaborate ifs to eliminate goto failure
Remove bogus ZEND_ASSERT(hash != 0) There's always a possibility that the has will end up as equal to zero due to overflowing. See the tests for strings whose hash overflow. Yes, there's a check for whether the hash already was calculated... and strings with a hash equal to zero always need the hash recalculated, in one of 2^32 respectively 2^64 cases - which should not be a major issue.
Add error case with invalid type declaration default value
Add tests for using constants as defaults with scalar type declarations
don't expect set/get title symbols are always there
Style cleanup, as well as fixing bug with missing argument for WRONG_PARAM_COUNT_WITH_RETVAL
Clean up API renames for zend_wrong_param_count to maintain BC, introducing a zend_wrong_param_count_ex() function when you know strict value
Refactor error implementation significantly to centralize error mode behavior. Add zend_internal_type_error() function
Second prefetch is useless, because cahce line on modern x86 CPUs is 64 bytes long.
Better make this be consistent with DO_ICALL/DO_CALL
strtod shouldn't recognize hex strings
Enabled global register variables for PPC
Use more specific op type
Reimplemented special constant handling. Now __HALT_COMPILER_OFFSET__ is resolved at compile-time. __CLASS__ retrived using separate ZEND_FETCH_CLASS_NAME opcode.
Revert "Improved zend_get_special_constant"
Updated NEWS
Updated NEWS
5.4.40 next
update NEWS
Re-fix tests
Revert "fix tests"
Improved zend_get_special_constant
forgot to commit this one
add test for bug #68976
oops, no idea how this got in
add test for bug #68976
comb that header
fix endianness check plus better visual origin compat
fix tests
GCC prior 4.8.0 may generates wrong code
this check isn't applicable anymore
catching up with the git history
fix undefined symbol
updated NEWS
adedd test for bug #68797
restore freeing stuff and some small improvements
first shot on updating strtod stuff
Implement Generator::getReturn()
Support ParseException for require etc
add NEWS
update news
fix tests
Embed "fast" operator functions (add, sub, increment, etc) into executor with additional optimizations
Enable GCC global register variables if available
Updated NEWS
Add wifcontinued and wcontinued for pcntl
updated NEWS
use default test timeout
test fixes + added skipif for slow tests
use busy sleep instead of sleep() for timeout tests
remove ext/mysql enablement from travis build
test timeout with shutdown function, variation
test timeout with shutdown function
test timeout with foreach loop
test timeout with for loop
test timeout with exception variation
test timeout with exception
fix timeout with cal_user_func
test timeout within eval()
test timeout with array_walk
test timeout within function
test timeout within while loop
improved timeout handling on windows
Use memcmp() instead of strncmp()
Improved parser (make use_type reuseable)
Let phpdbg refused to be compiled with no CALL zend vm kind
Exposed ZEND_VM_KIND etc
Remove --with-zend-vm (it doesn't work anyway)
backport af2b0669 into 5.5
Reverted change to function name and added note of why it is different from the class it is actually changing.
libxml-2.9.2 compatibility
Made UConverter throw an exception if the constructor fails.
Made Phar throw exception on bad constructor.
Converted intl extension to use IntlException in constructors.
fix test
fix syntax for the Visual studio compat
Use fastcall calling convention for most critical ZE subsystems.
Revert "Enable zend signals handler by default"
Remove TSRMLS
Update NEWS
Little improvement, update NEWs, added test
Enable zend signals handler by default
fixed test
the test shouldn't fail when unlink failed
Changed HashTable layout:
Regenerate ext/tokenizer data
s/PHP Version 5/PHP Version 7/g
Added API function to call VM opcode handler in a portable way
Revert previously commit by accident
Implement preg_replace_callback_array function
Allow CALL executor to keep few very often used vaiables in CPU registers. This is disabled by default yet, but may be enabled compiling zend_execute.c with -DHAVE_GCC_GLOBAL_REGS. Only tested on Linux x86 and x86_64 with GCC 4.9.2.
Executor cleanup: fix GOTO and SWITCH VMs, remove aility to build additional PHP-5.0 compatible VM, hide executor implementation details.
improve ssl operations with possible renegotiation
use _set_errno where appropriate
create php prefix before copying dlls
create the php prefix if doesn't exist
Use specialized macro for string zval creation
upgrade to oniguruman 5.9.6
expose oniguruma version
fix possible unititialized pointer usage
simplify condition
force ext/ftp to be always shared on Windows
remove ext/openssl dependency for ext/ftp from conf
don't depend on ext/openssl for ftp ssl support
init mbstring tsrm_ls_cache on MINIT
properly deinit mail socket
use proper value to check the log_source handle
fix ftp_login with ssl enabled
added comment
enable ftps for shared ext/ftp
use portable fseek
Don't block on crypto data inside stream_select()
Putting whitespace back to the way it was.
Improved php_json_escape_string()
Improved table search
Comment out for now
Improve test script for #69212
Free memory if destructor wasn't called
More accurate reference counting on closures
We don't cache custom strems with callbacks anymore
Prevent possible double inheritance (ext/opcache/tests/bug67215.phpt)
C89 compat
correct tests as the issue is only reproduceable with cgi/fpm
Typo
added more exception tests
fix leaking registry key handle
don't pass zero to malloc()
Update NEWS
Errors converted to exceptions are not "recoverable" anymore.
Update NEWS/UPGRADING
Deprecate "session_meta_capture" SSL context option
Revert "Add stream_socket_crypto_info() function"
Add crypto info to stream_get_meta_data() result on encrypted streams
Renamed test case to match with reported bug
Remove PHAR_GLOBALS (make it respect ZEND_ENABLE_STATIC_TSRMLS_CACHE)
Implement engine exceptions
Add UPDRADING note about yield operator behavior
Removed deprecated mcrypt_ecb() etc
Remove deprecated mcrypt_generic_end() alias
Remove xsl.security_prefs ini option
Remove unsafe curl file uploads
Revert commit by mistake
Update NEWs
Update news
Now opened_path is a zend_string
added missing parentheses
added missing parentheses
added missing parentheses
Add note of group use
Temorary fix for phpdbg segfault while use zend_mm_set_custom_handlers
Adding notes regarding implementation of FR #69089
Adjust logic in sanity checks.
partially revert wrong merge
after merge fix
updated libmagic.patch
catching up
catching up
regenerated data file
more after patch fixes
restore good patch parts
stat is done by php
use zend_strndup
started to patch for libmagic.next
fix test outputs
catch up with the previous cve-2014-3538 patch
catching up
catching up
catching up
updated the test magic file
add patchlevel info
portable off_t
regenerated data file
more after patch fixes
restore good patch parts
missing prototype
libmagic.patch so far
updated test magic file
use right memory api
stat is done by php
use zend_strndup
started to patch for libmagic.next
Declares in top
fix compilation warnings, rename batch_use to group_use
Add ZEND_ARG_CALLABLE_INFO to allow internal function to type hint against callable
Add configtest option to fpm init.d script
ZTS cleanup
add explicit tests for variations on whitespace usages
require trailing T_NS_SEPARATOR #1005
fix test ns_092.phpt
allow non mixed use declarations, CC @nikic #1005
add test for non mixed batch use statements... #1005
ensure that comments are allowed between batch use declarations #1005
simplify batch use declaration syntax error test: ns_088.phpt
first implementation of batch use compilation
add tests for batch use declarations with classes, functions and constants
fix typo
Added test for bug #69160 (current behavior is correct)
generate utf-8 string directly instead of using php_mb_convert_encoding
introduce fast zpp
replace AND operator with OR operator
add argument for output_len
replace zend_string_alloc with safe_emalloc
update the functions for checking the names of encodings
fix memory leak in php_mb_check_encoding
fix memory leak
fix php_mb_ord for better handling the value of MBSTRG(current_filter_illegal_substchar)
add php_mb_check_unicode_encoding
add test for mb_chr and mb_ord
rename php_mb_check_forbidden_encoding to php_mb_check_unsupported_encoding
changed the position of calling php_mb_check_forbidden_encoding
use php_mb_convert_encoding instead of php_mb_check_encoding
added various encoding support other than unicode
added check by php_mb_check_forbidden_encoding
added mb_chr
added php_mb_check_forbidden_encoding
added support for various encodings other than unicode
added utf16 and ucs2 for supported encodings
added check for forbidden encodings
added utf32 and ucs4 for available encodings
added mb_ord
added php_mb_check_encoding
Reduced initial VM_STACK page size of Generators to 4 KB (256 slots) Generators all have their own vm_stack, but usually don't go really deep. In most cases even most of the 4 KB will remain unused (in my tests average is rather 1 KB), but this was tested a straightforward implementation without a lot of abstraction layers. That way I'm using a more conservative 4 KB stack size which really should be enough for, I think, at least 90% of the cases. This was necessary to not immediately run out of memory with 95%+ usused vm_stack space: If you have a few thousands of Generators active, your application quickly hits memory_limit with a stack page size of 256 KB... In addition, it's also a bit faster (70% less instructions for zend_vm_stack_new_page) due to emalloc() not having to allocate a whole new segment (segment size 256 KB). Also no mmap()/malloc() necessary.
Restored incorrectly merged NEWS
Added test for bug 69187
Added yield from operator
fix fetching wrong resource
Update UPGRADING with info about JSON decode error for empty string
Use fast zend_hash_append() API
fix data type
fix invalid write
Make fast path linear
Improved hash key manangement code
Update test to run locally instead of remotely
Update test to run locally instead of remotely
Improved hash key manangement code
Really fix zts this time
re-arrange NEWS
Like Shady, --with-mysql-sock is back.
5.6.8 up next
Avoid repeatable strlen() calls
Unused var
Updating the `DateTime_verify` test to include the new method in the reflected method list
Minimize copying of HashTable realocation
5.5.24 now
Error also maybe happened here
Avoid useless op_array duplication
Revert commit to zend signal by mistake
fix incompatible pointer
Update NEWs
Revive Zend Signals handler (and fixed bug #61083)
This test fails with multibyte on because it spews a conversion error on the bogus file
This test fails with multibyte on because it spews a conversion error on the bogus file
Whoops! String length....
Remove the unused vars
Adding a new test for the new method
Adding a new `createFromImmutable` method to the `DateTime` class to mirror the current `DateTime::createFromMutable()`
Use strpprintf
Use a deprecated function that still exists.
Remove unnecessary debug warning (that also broke tests).
Explicitly depend opcache on pcre.
Update UPGRADING.
Remove the deprecated MySQL extension.
hexadecimal is case*in*sensitive
Improved method inhereitance code and cleanup
Improved ineritance code
fix ini registry handling
Improve test to target specific issue
Improved code for class property inheritance
Misc updates/cleanup
Add test for previously fixed segfault
ensure the mail() socket is not leaked after request
indent
Silence a empty while loop warning
Remove the unused vars
Use zend_string* instead of char* for opened_patch handling. Avoid reallocations and improve string reuse.
fix thread safety for win32/sendmail
avoid this pointers play
use correct free api
ensure there is no connection
fix socket leaking and better connection err check
avoid skipif as this indeed should be tested
Make killing a locker an ERROR event
Microoptimization (avoid reloading from memory)
Removed deprecated paths. Changed "switch" into series of "if".
Optimize class constant declare compilation
Return void like other functions
Use zend_parse_parameters_none()
Add missing zend_parse_parameters_none() for flush()
Remove wrong commit committed by accident
Implemented FR #45235 A way to clear or reset the results for error_get_last()
Improve fix for bug 67741
Added type checks
Added type checks
Update NEWS
pefree() -> efree()
Don't inline helpers for ArrayAccess objects
Strength reduction
Regression tests for SplFileInfo class setters
Add a XFAIL test, which I'd like to think more about a better fix
Check variable type before its usage as IS_ARRAY.
Improved assert() according to expectations RFC.
Update NEWS
Add missing value for error_reporting directive
windows only test
Align entries format
Align entries format for 5.6.7
Align entries format for 5.5.23
replace emalloc with safe_emalloc
Bump header year
Add TLS ALPN extension support in crypto client/server streams
Add stream_socket_crypto_info() function
Update for OpenSSL 1.0.2 compatibility
WIP
Revert mktime()/gmmktime()'s arginfo
Array - make krsort FAST_ZPP compatibility
Update NEWS
merge ZEND_SIGNED_MULTIPLY_LONG for i386 and x86_64
Add NEWS entry
Remove useless date warning
fix dir separator in tests
Update NEWS
update the functions for checking the names of encodings
Reorder
Update NEWs
Update News
fix bug#68942's patch
Improved ASSIGN_DIM handler
Don't inline slow path
Revert a part committted by mistake
better name
Improve fix for #69038
Update NEWs
Added specialized versions of DO_FCALL handler:   DO_ICALL - for internal functions   DO_UCALL - for user functions   DO_FCALL_BY_NAME - plain, most probably user, funcstions (not methods)
Use cache_slot offsets instead of indexes (simplify run-time instructions)
Split INIT_FCALL_BY_NAME inti INIT_FCALL_BY_NAME(CONST+STRING) and INIT_DYNAMIC_CALL(CONST-STRING|TMPVAR|CV)
Support list($a, $b) = $a
Avoid unnecassary check
Make zend_array_destroy() to free the corresponding zend_array
Eliminate check on the fast path
Make current() and key() receive argument by value.
Use Firebird default home folder, replace Interbase with Firebird
Updated NEWS
updated NEWS
curl: add new proxy constants
NEWS entry
NEWS entry
updated NEWS
updated NEWS
delete unnecessary functions
fix return type
fix memory leak
correct title
Only do this in debug build
removed duplicated code
revisit fix for bug #65272
Cleanup globals initialization
Unused vars
Unused var
Refactor declare placement detection, allow encoding declares before type declares
uint32_t
Renaming test to match Bug #69089
Clean up tri-state logic to use break instead
split test for bug #68557 for windows
Updated NEWS
Updated NEWS
Drop ZE1-compat leftover
fix #68557
Use fast SSE2 memcpy() for copying block of data from SHM to process memory
Simplify reallocation during copying data from SHM to process memory
Adding 'v' formatting to DateTime::format(), and adding constant DateTime::RFC3339_EXTENDED to output datetime using the RFC3339 extended format (aka ISO8601 extended format)
don't count op_arrays stored in opcache SHM
Removed dead code
Lazy duplication of op_array->static_variables
add NEWS for <=>
Implement Generator::getReturn()
added php_mb_check_code_point for mb_substitute_character
changed the position of calling php_mb_check_forbidden_encoding
use php_mb_convert_encoding instead of php_mb_check_encoding
added various encoding support other than unicode
this line got accitentally dropped on merge
added check by php_mb_check_forbidden_encoding
Implemented AST pretty-printer
added mb_chr
added php_mb_check_forbidden_encoding
added support for various encodings other than unicode
added utf16 and ucs2 for supported encodings
added check for forbidden encodings
added utf32 and ucs4 for available encodings
added mb_ord
added php_mb_check_encoding
Remove the aliases of scalar types
update NEWS to match the actual stuff in 5.6.6
update NEWS to match the actual stuff in 5.5.22
update NEWS(add missing entry for the enchant fix, and reorder the entries a bit)
fix typo in bug#
update NEWS
fix email format
Disallow block mode for declare(strict_types=1) declarations
Skip the tests if multibyte isn't loaded to prevent them from being fragile based on encoding availability
Improve detection of strict_types declaration being first in the file
update NEWS
update 5.6.6 release date in NEWS
Move declare() to the top of the file only, and allow int->float generalization
BFN
fix test
fix test
fix test
Updated NEWS
add CVE
Set PHP_JSON_VERSION to 1.4.0
Remove unnecessary resource checks in openssl ext
JSON is now maintained
improve debugability in TS debug builds
More UPGRADING, in particular on foreach
Replace var is introduced
abstain from using xmlCleanupParser
fix TS build
5.4.39 next
update news
Port for for bug #68552
More docs for /win32/build/confutils.js
Update NEWS
- BFN
Don't read the local php.ini when Generating Phar When building phar shared, you can end up loading a previous phar.so that isn't compatible with the php cli being used to generate Phar here.
Stop trying to call the callback after it has thrown an exception. Also, as an exception has been thrown, there is no need to have a separate error message.
Delete json outdated package.xml
made ZEND_TSRMLS_CACHE_* macros look like function calls
BFN
fix bug #68822 (request time is reset too early)
Update JSON Readme
Remove unused destructor in json parser
Add bison 3.0.4 genereted files for json parser
Regenerate json scanner with re2c 0.13.7.5
Update NEWs
fix detection of mbstate_t with clang
Some more UPGRADING changes
Update NEWS
Update NEWS
Added NULL byte protection to exec, system and passthru.
Update NEWS
Add NULL byte protection to exec, system and passthru
More extensive UPGRADING
Get rid of old HashTable iteration API (it doesn't work with constant arrays)
Apply PHP7 firebird fixes after API Cleanup from https://github.com/Jan-E/php-src/commit/8c920a22ac65da485eaf3d2fd27baf2b0406116e
Remove unused variable
Check interface/trait extension for internal classes
fix condition
Revert "Cleanup globals initialization"
Revert "Remove useless TSRMLS by merge"
remove useless condition (same as headers_list())
Silence unused variable warning
Micro opt
zend_get_parameters_ex is deprecated
Remove useless TSRMLS by merge
Cleanup globals initialization
Unused vars
Limit HashTable size to avoid integer overflow checks
Cleanup checks in zend_builtin_functions.c
Add test to ensure ReflectionClass works correctly with traits
Made ZEND_ACC_TRAIT a saner value
backport gd config.w32 to support freetype 2.5
fix data types
fix int to pointer cast
Stop using internal array/object pointer in foreach by reference according to https://wiki.php.net/rfc/php7_foreach
Pass maxlifetime to save handlers
Added test for #69017
add missing test for class member access with deference relates to https://wiki.php.net/rfc/uniform_variable_syntax
fix dir separator in test
Add missing NEWS entry for revert of bug #41631
Add CVE ID to bug #68676
Align email format for recent NEWS entries
Bug #55508 was fixed in 5.5.19 with 15ba757a, not in 5.5.18
Add missing NEWS entry for revert of bug #41631
Add missing NEWS entry for bug #68027
Align format for bug #68799
Bug #68361 was fixed in 5.5.20 using 327d4f9a, not in 5.5.19
Bug #55618 was fixed in 5.5.21 using eaf107c0
fix incompatible pointer type
fix values for gid and uid
silence unused variable warning
remove useless condition
fix uninitialized value warn
Add security bugs fixed in 5.5.18
Add CVE ID to bug #68676
Align email format for recent NEWS entries
Forget this change
Expose zend_string_equals_str_ci
Add a constant of type CONST_PERSISTENT to test
Revert removal of two ReflectionParameter functions Rather fix them for now by exempting function parameter defaults from *any* (non-ct) constant substitution (also from persistent constant substitution, which was already broken before)
Don't convert options in-place. They may be elements of constant array.
fix dir separator in test
Add scalar return types test
Prevent "undefined variable opline" errors
Implement per-file strictness for scalar return types
Implement scalar return types (strict only for now)
Refactor typehint lookup
Test behaviour of weak type hints with references
Test nested strict/weak function calls
Test strict code including weak code and vice-versa
Prefix zend_wrong_param_count with _ to discourage use
Test strict code calling weak code and vice-versa
Shorten syntax to strict_types=1
Add strict scalar types test
Partial ZPP strictness implementation
Per-file
It Begins
Inline
Forbid scalar type hint names for use, class_alias
Refactor scalar type hints implementation per Dmitry's patch
Use new names of arg parsing functions
Do not make scalar type hints reserved words, merely reserve class name
Scalar type hints with ZPP casting rules
better alignment + support size_t
Revert "Revert "Improve and generalize class constant substitution""
Add missing header inclusion
Get rid of old HashTable iteration API
Update libmagic.patch to reflect changes made
Use new ZEND_HASH_FOREACH_... API.
use portable strtol
Avoid reallocation in preg_replace() if nothing was replaced
oops, forgot sudo for make install
add php7 compatible pear installer built from their stable branch
add make install
updated NEWS
updated UPGRADING
removed obsolete php.ini options
removed ext/sybase_ct
removed ext/mssql
removed sapi/webjames
removed sapi/tux
removed sapi/thttpd
removed sapi/roxed
removed sapi/pi3web
removed sapi/phttpd
removed sapi/milter
removed sapi/isapi
removed sapi/continuity
removed sapi/caudium
removed sapi/apache2filter
removed sapi/apache_hooks
removed sapi/apache
removed sapi/aolserver
Revert "Improve and generalize class constant substitution"
Avoid repeatable calls to strstr()
fix json globals
NEWS
Miscellaneous cleanup
Improve and generalize class constant substitution
Adding some inline docs/docs cleanup
regenerated scanner
fix datatype mismatches
fix inconsistend dll linkage warn
size_t vs int
use size_t for str length
generate missing json files from config.w32
Shut up, my lovely compiler; I do not like your warnings
Márcio Almada 	remove dead tokens: T_CHARACTER, T_BAD_CHARACTER.
fix detection of mbstate_t with clang
Add missing NEWS and UPGRADING for bug #68938
moved the part of the test into an appropriate place
Removed unused REGISTER_PDO_CONST_LONG
add tests for #68996
Update README.TESTING
Small Spacing adjustments for better reading
Add zend assert deleted by accident
Let's keep it simple
added ODBCVER to phpinfo()
added PCRE JIT availability info to phpinfo()
Improve internal function return types checking for parent
Improve tests for bug 67436
fix setting default ODBCVER value in config.w32
updated NEWS
updated NEWS
Invalid free of CG(interned_empty_string)
Update NEWS
Further fix for bug #68987
Look for PDO include files in the right folder
Re-enable PCRE JIT disabled by b436c714c6a23ead40434896bf8fcbb62ed0a764
TSRMLS_* macros have been removed, user don't have to care about the change anymore
This should fix compilation on OSX (bug #68987 Failed to compile zend.c with gcc-4.9.2)
Removed erroneous condition
turn off online tests, they fail too often on CI
fix tests
fix BC break in headers_list
Update header handling to RFC 7230
Update header handling to RFC 7230
Test case Bug #68638 pg_update() fails to store infinite values
Opcache is enable by default
Added CREDITS
fix test to not hit php.net
fix test to not hit php.net
Remove extra space
Conflicts: 	main/streams/memory.c
We'd better not include this test script
return size_t
fix test to not hit php.net
Padding
fix test case
expand test for #68986
expand test for #68986
adding test for #68986
#68986 bug fix
Add load time return type checking to match user land logic
Add test function arguments
fix data type mismatch
fix unitialized val usage
follow up fix for headers sent, checking a reference would be always true as well
remove unused variable
fix wars about importing of locally defined symbols
fix data type
Implemented internal function return types
Updated NEWS
Removed TSRMLS_D
5.6.7 now
5.5.23 now
Update xp_ssl.c
Simplify code and add comments
Upgrade pcre to 8.36
Move zend_object->guards into additional slot of zend_object->properties_table[]. As result size of objects without __get/__set/__unset/__isset magic methods is reduced.
Revert "json_decode() should generate a syntax error when given ""."
Add note aout $HTTP_RAW_POST_DATA
Use object pointers instead of handles
make buildconf work as expected; autoconf really needs some help with all those external m4s
Update UPGRADING
Attempt to port odbc
Update UPGRADING
Update UPGRADING.INTERNALS Session section
fix condition
fix int to void * cast
fix incompatible pointer warning
fix incompatible pointer type warning
Rename __callstatic (internal name) to __callStatic (userland name) in error message
Optimize class lookup
attempt to port oci
Update NEWS
Update NEWS
Ported pgsql
Ported dba
Ported wddx
Ported mcrypt
Bug #61470 is fixed only in master
Add re2c sources
Add jsond info to news
Give me credit
XFAIL broken test for now. Partially fixed test session.save_path difference.
Let's not assume bash is always /bin/bash.
json_decode() should generate a syntax error when given "".
Add test for bug #61470. It is already fixed.
rely on macros from stdint for int constants on 64 bit
Ported enchant
Ported ldap
found type is unnecessary
Ported imap
Use resource directly
Ported ftp
Cleanup resource handling APIs
fix sizeof size
- Updated to version 2015.1 (2015a)
Empty merge
- Updated to version 2015.1 (2015a)
Empty merge
- Updated to version 2015.1 (2015a)
do_fstat changes
fix group name handling
fix TSRM
add NEWS
Added test and possible fix for https://bugs.php.net/bug.php?id=67068
Use better constant since MAXHOSTNAMELEN may mean shorter name
use right sizeof for memset
Add mitigation for CVE-2015-0235 (bug #68925)
Add mitigation for CVE-2015-0235 (bug #68925)
Add mitigation for CVE-2015-0235 (bug #68925)
Added two missing opcache ini directives (restrict_api and mmap_base)
UPDATE NEWS
Partially revert. I did not notice there's alaready a .PHONY target for generated_lists. Force removing configure before running autoconf is enough to make this work as expected.
Squashed commit of the following:
fix warnings
fix warnings
fix warnings
fix warnings
fix warning
fix warnings
fix warnings
fix warnings
really only signal reports
fix warnings
also catch segfaults reported by subshells
make buildconf actually work
fix datatype mismatches, improve error checks
fix datatype mismatches, improve error checks
fix datatype mismatches, improved error checks
fix datatype mismatch warns, improve error check
make the cleanup function as static, as it's not exported
fix datatype mismatches, add stronger error checks
fix datatype mismatches, improve error checks
remove unused var
remove unused variable
remove unused var
nmake install missing header
indent
Add more test for bug #68937
Update NEWs
Add check for null pointer, as done in case 5 lines above.
Blast off to space.
Remove excessive macros
fix the day of the week
Use bash rather than sh
reorder the branches
ppid must be IS_STRING
Use proper type
The argument must be not changed in session_start
reneg and should_close are not yet members of sslsock. Removing...
Cleanup session id files after test
Remove support for hex number from is_numeric_string
add imap
Update News
fix unportable dereferencing
fbird_close if connection_id omitted, the last opened link is assumed , so it was already closed
Remove legacy code
Forgot to apply important peace of patch
Updated with SSL fixes (backported from trunk)
update the .re file for PDO
Implement return types
bump the API no
 fcgi_write in fpm returns ssizt_t, but it returns int in cgi
Revert previous unintentional change to this
Update NEWs
minor CS fix
add another test to #1022
fix failure with shared zvals in php_str_replace_in_subject
add failing test for string_replace and array replaces with references
Remove duplicated line
Quick fix
size_t cleanup for PDO
Use correct deallocator in phpdbg
Add NEWS entry
One more bad merge fix
Add NEWS
Patch commit d9f85373e32 by moving the float_to_double function to a header file.
Patch commit d9f85373e32 by moving the float_to_double function to a header file.
Remove dl() on fpm-fcgi
Remove preg_replace /e modifier
Remove assignment of new by reference
add a custom built pear installer until we have an official release with php7 compat. see https://github.com/pear/pear-core/pull/33 for the details
Revert "Disable PEAR by default"
Update UPGRADING and UPGRADING.INTERNALS
Add jsond BC-breaking changes to UPGRADING
Disable PEAR by default
map fixes
Use svg instead of png to get better image quality
These tests all have intentional circular references and they will leak and cause failures unless gc is enabled
Inline self-constants if possible at compile time
remove unused var, make string.c compilation zero warnings
Make gc_collect_cycles hookable.
cleanup TSRMLS_*
C89 compat
It doesn't make sense to colect garbage after fatal errors
NEWS
Add missing ZEND_API tag to declaration of `int zendparse();`
fix some factual errors in the process
Remove Jouni (As requested) from the maintainers file of INTERBASE
define() must not modify the source array
move CVE to the right version
avoid duplicate array_init
simplify error handling for dirs as magic
updated NEWS
zend_read_property() has to provide a holder for return value. Previously it was possible that zend_read_property() returned pointer to zval allocated on stack.
Revert "Remove Jouni Ahto from maintainers and files as requested , anyway we have git blame/history"
WIP - test passes
Forgot to add test...
Removed efree() on arena_alloc()ed memory
Slightly modify and merge PR#105 from @MegaManSec
Slightly modify and merge PR#105 from @MegaManSec
Remove Jouni Ahto from maintainers and files as requested , anyway we have git blame/history
fix timelib build configuration
Renamed timeval functions to comply with PHP naming standards
make timelib_config.h inclusion configurable
Updated NEWS
backported the timelib cleanups to 5.6
make timelib use PHP's defines when it's inside PHP only
decouple timelib from php_stdint.h
PHP7 API updates
int -> size_t and long -> zend_long
int -> size_t and fix the variable name
int -> size_t
int -> size_t
int -> size_t
int -> size_t
int -> size_t
Missed removing a couple of _len vars
fix NEWS
Finishing porting ext/imap to PHP7 All tests pass now
fix year
update NEWS
format
add CVE
don't error x86 compiler
fix leaking of locale_string in TS build
add protection against nulls
5.4.38 next
Remove useless tests
fix premature freeing of BG(locale_string)
Updated NEWS
Updated NEWS
Updated NEWS
Optimized range
fix declaration
NUM_KEY is useless here
cleanup
Update remaining octal 32-bit tests
Unused parse_arg_object_to_string
Unused var
Use zend_string in case we will optimize them
Remove addslashes_str
Provide compiler hook for altering the AST pre-compilation.
Remove dead codes
Optimized php_addslashes
Revert "Remove static calls from incompatible $this context"
Optimized is_a
Generate better code for comparisons with boolean constants
Improve optimization of CONCAT/ADD_STRING/ADD_CJAR sequences
Micro optimization for array_diff
Optimized trim for what_len == 1
old_size is already known
Optimize code generated for "while" and "for" loops. Eliminate one JMP opcode for each loop iteration.
Only use explicit ">" in sorting algo
fix size & compilation on Darwin
Don't use >= as sorting condition
Move intdiv() UPGRADING entry to New Functions
Better fix
fix build
Increase PHP_JSON_DOUBLE_MAX_LENGTH for fractional part
Updated NEWS for #68371
typo
Error on invalid octal (fixes PHPSadness #31)
Remove set_socket_blocking
Remove set_magic_quotes_runtime
Remove string category support in setlocale()
Remove mktime() and gmmktime() $is_dst parameter
Remove for #-style comments in ini files
Remove static calls from incompatible $this context
FAST ZPP for strtok() and nl2br() Looking at some template-driven code that calls these hundreds of times per request
attempt to fix again :<
Update year
Update copyright year to 2015
Try to fix ext/intl/tests/collator_asort.phpt (according to CI's output)
Add IntlChar class to intl extension
fix format strings, resource handle is int
cleanup
Optimized extract
Optimized array_slice
Added test for array_unique
Revert "Optimize array_unique to save some comparation calls"
Revert "We could do more...."
unused var
unused variable
Weird, is nobody compiling this?
Partially revert 3477135cd1024c897dc070c37ddae411839b6e7e
Avoid usage of uninitialized data
updated NEWS
updated NEWS
PDO_MySQL: Differentiate between linux and win32 when passing unix_socket
bump year
bump year
Bump year
Bug fix for wrong regex in mail
Initialize ht->nTableMask
Save one condition
optimize offset computation
don't return value in the void function
fix "unknown void * size" err
We could do more....
Optimize array_unique to save some comparation calls
Avoid string reallocation in strtr()
Update NEWS
Improve "instanceof". Interfaces of the left operand should be checked only if the right operand is interafce itself.
Ipmrove strtr() by maintaining a set of characters that may start a matched pattern and avoid zend_hash_find() calls for other paterns.
cleanup
fixed zend_hash_init() when the lzcnt instruction isn't supported
Faster sorting algo
Optimized str_[i]replace to aviod reallocations and repeatable conversions to lowercase
Update NEWS
Update NEWS
Reorder conditions to make "fast paths" shorter
Improved access to object properties (cache property offset instead of pointer to property_info).
Handle run-time cache for static properties directly in executor. Removed cache_slot argument in zend_std_get_static_property() and zend_std_unset_static_property().
Add hinting
Porting implementation of RFC json_preserve_fractional_part
Added test and possible fix for https://bugs.php.net/bug.php?id=67068
Improved access to static property. Now we cache pointers to zval instead of pointers to property_info.
Only backup vm_stack* if generator->stack has not been freed
Slight improvement in copying script from opcache SHM into process memory
Optimized error_reporting() similar to silence operator (ZEND_BEGIN_SILENCE opcode).
Use FAST_ZPP in few more frequently used functions
Added special optimized cases when strtr() called with zero or one search/replace pair.
updated libs_versions.txt
updated libs_versions.txt
Faster strrpos implementation
Faster zend_memnstr for long text
Refactore json double encoding to use php_gcvt
trailing whitespace removal
Replace encoder functions json prefix with php_json
Change declaration of subtractTimeval and compareTimeval to static
These tests all assume that IPV6 is available.
Adding a note here for my future self so I won't need to look into this again
We can't output absolute S and T values for the Diophantine solution here since it can vary based on the libgmp version we are linking against and in general there are almost always multiple valid solutions
We can't output absolute S and T values for the Diophantine solution here since it can vary based on the libgmp version we are linking against and in general there are almost always multiple valid solutions
We can't output absolute S and T values for the Diophantine solution here since it can vary based on the libgmp version we are linking against and in general there are almost always multiple valid solutions
Make empty list() check stricter
Add deprecated notice to invalid DES salts.
Updated NEWS
Updated NEWS
Removed parsing support traits to have extends and implements.
Decoupled class declaration statement into more granular pieces.
remove PHP4 extension structure compat
optimization for bug report #68679
Update NEWs
Calling crypt() with a salt of *0 should always return *1.
fix test
Add NEWS
Add NEWS
Patch commit d9f85373e32 by moving the float_to_double function to a header file.
5.5.22 now
PHP-5.6.6 is next
cleanup old unused typedef
Handle NULL strings in sapi_cli_server_register_variable().
Allow CLI server test scripts to specify the name of the router file.
fix ACLs tests, make it create dir where it has to, not file
fix ACLs setup for tests
NEWS
NEWS
Add test script and use efree_size
Update test after fixing bug #68371
Updated NEWS for #68371
Ref #68371 - Added support for PDO::PGSQL_ATTR_DISABLE_PREPARES
fix memory leak
fix GD tests with no GD loaded
Specifying MACRO for ppc64
Formatting fixes for git rules file
Still -1 on *BSD now
This is 511 now (ebf4ffc9354f316f19c839a114b26a564033708a)
Allow ill-formed unicode escapes in decoder
Add missing string cast for non-cv var fetches
updated libmagic.patch
updated libmagic.patch in 5.6
updated libmagic.patch in 5.5
updated libmagic.patch in 5.4
updated NEWS
updated NEWS
removed dead code
Use ZVAL_COPY_VALUE for copying parser result to return_value
Re-ordered the read and write methods to match the order of the original code, to make the DIFF easier to read.
try to update mod
cleanup redundand macros
Allow the third arg to DateTime(Immutable)::createFromFormat() to be null.
updated libmagic.patch
updated libmagic.patch
updated libmagic.patch
updated NEWS
Check the return value of lo_export.
updated NEWS
remove BOM from NEWS
Simplify array_splice()
Simplify array_unshift()
Simplify array_pad()
FIx bug #68618 (out of bounds read crashes php-cgi)
Make the code lesss suspicious (can't be really 0 but it's not obvious)
cleanup intl types
Use HashTable.u.flags instead of HashTable.arHash to check if HashTable is properly initialized
Revert "Add type info for spl_autoload_register"
Make zend_parse_parameters share fast zpp implementation where possible
Micro optimization for better register allocation
Reored conditions
Cleanup
eliminate usage of deprecated zend_get_parameters_ex
fix "comparing size_t to <0" warning
fix typo
Use internd string as key
Be verbose if --with-mp is enabled
Add type info for spl_autoload_register
fix invalid free mentioned in bug 68665
added test for bug #68665
updated NEWs
Implemented FR #55428 (E_RECOVERABLE_ERROR when output buffering in output buffering handler)
Introduce specialized functions to compare with integer and string, to eliminate repeatable checks on each loop iteration in in_array() function.
Use special flag (HASH_FLAG_INITIALIZED) instead of (nTableMask == 0) to indicate that HashTable is allocated. Make nTableMask to be 0 for packed arrays. Remove checks fo HASH_FLAG_PACKED in zend_hash_find/zend_hash_del and family (string keys are resolved through uninitialized_bucket). Change HashTable layout for better locality.
Drop duplicate arg from hash_get_current_key_ex
Small cleanups in hash implementation
Optimized destruction of extra arguments passed to user functions. If no refcounted arguments are passed, then destruction code is not triggered at all. (Full rebuild required)
remove the extra comma
Reimplemented used stack size recalculation (replaced 3d4babdc2b03515fa30e382125a7e79d10bafe7e)
NEWS
Adjust tempoary variable used in caller's side
Re-apply part fix of 4e2c016
Add php_string_tolower/toupper which is locale depened
Revert "Use zend_string_tolower in zif_strtolower"
Use zend_string_tolower in zif_strtolower
remove unused variable
C89 compat
No need to do this check for master, ZEND_COMPILE_NO_BUILTIN_STRLEN already cover it
For disabled function, to disable arguments checks, we have to reset num_args and some related flags (in addition to arg_info)
Added new API function 'zend_string* zend_string_tolower(zend_string*)'. It simplifies code and avoids unnecessary allocation and copying if string is already in lower case.
Update NEWs
FAST_ZPP for hot functions
better fix for script encoding ini
fix NULL deref when the script encoding wasn't previously set
API for fast construction of packed arrays
zend_hash_do_resize: fix compacting condition
throw error in configure.js when no 64-bit compiler detected
improved system time function determination
cleanup
Revert "Improve Hash foreach macros"
Improve Hash foreach macros
Please becareful with the tailed space after slash
share that hunk of code
Improved trim/ltrim/rtrim functions. Now php_trim() operates on zend_string and returns zend_string (it may return the same zend_string).
Improved array_keys()
Improved get_object_vars()
Improved unserialize()
remove 3.0 from excluded versions because limitation lifted by native-tls
Removed useless checks
Don't count variadic argument in zend_func.common.num_args. This allows faster CALL/RETURN code.
missed include for intptr_t/uintptr_t
use cleaner tsrm_intptr_t/tsrm_uintptr_t typedef
typo
Micro optimaztion (yeah, I know compiler supposed to do that)
Micro optimization
Micro optimizations
fix zts build on mac/clang
Update zend_accelerator_hash.c
Use "float" and "integer" in typehint and zpp errors
Unify HTTP status code maps
UPGRADING and NEWS cleanups
Allow arrays with define(), to match const syntax support
Make it inline
Avoid NULL pointer dereferencing
Improved setlocale(). Eliminated locale comparison in ext/pcre if it's not necessary.
Enabled JIT for preg_split(). Use better zend_hash_*() functions.
don't sort array with single element
Simplify condition
fixed tests
C89 compat
Improves strtotime() function.
Improved array_diff() function (use simple and more efficient algorithm).
Improved chr() function. Use FAST_ZPP, use interned strings.
More UPGRADING, NEWS
UPGRADING for Unicode Codepoint Escape Syntax
Unicode Codepoint Escape Syntax
Drop ZEND_PRINT opcode in favor of ZEND_ECHO
noted the TSRM changes to UPGRADING.INTERNALS
fix integral constant overflow warning
Use HUGE PAGES for opcahce SHM, if available.
integrated the static tsrmls cache into ext/skel
remove the thread ctx from curl
remove unused ZTS macros
remove TSRMLS_* occurence
Better fix for #68601 for perf https://bitbucket.org/libgd/gd-libgd/commits/81e9a993f2893d651d225646378e3fd1b7465467
enable static tsrmls cache in the embed SAPI
get rid of TSRMLS_* in the embed SAPI
Added EXPECTED(). Most functions have arguments.
fix unserializer patch
move this entry to the correct version
add missing NEWS entry
add missing NEWS entry
Updated or skipped certain 32-bit tests
add NEWS entry for #68594
5.4.37
add more BC breaks
update news
add CVE
add missing test file
Optimize argument passing handlers:
don't need this in nts mode
various fixes for removing explicit tsrm_ls usage
C89 fixes
use portable struct stat
fixed macro va args expansion for vs
make the TSRM macros depend no the macroed cache name
reworked ini dtor
fix perm again...
cleanup uneeded cast
fix bad pointer cast in ext/phar, fix segfault and failed tests (bigendian)
free the right globals
fix perms
fix perms
depending on declaration the tsrm cache pointer might be unavailable
PowerPC64 support in safe_address function
removed the extra tsrm pointer passed to ctor/dtor
Revert "Removed useless local variable"
add BC breaks from PHPNG RFC
add include for definition of php_url_encode
Removed deprecated checks
made the apache ini holders to be zend_bool
Removed useless local variable
Use simpler functions
in ext/soap globals are initialized also on minit
small fixes to UPGRADING
Reorder to save alignment size (of course, only for common used structs)
Save 8 bytes on 64 bits
Revert HTTP status codes merger
fixed tests, bugs in status codes merger
NEWS
Implement feature request #55467 (phpinfo: PHP Variables with $ and single quotes)
NEWS
Change back to use is_int() as function instead of is_integer(), as per Jan Tvrdík's request @github
NEWS
Change is_long() to be an alias of is_integer()
Share HTTP status codes map
Remove old parser
removed the TS part, as suggested by Dmitry.
almost all the replacements of TSRMLS_* are done
split fpm config to two parts. PR#903
second shot on removing TSRMLS_*
fix typo
first shot remove TSRMLS_* things
NEWS
NEWS
Hash value must not zero?
Modify json/tests/pass003 to ignore internal object ID
Removed unnecessary checks
pcntl_signal_dispatch: Speed up by preventing system calls when unnecessary
Removed ZEND_ACC_FINAL_CLASS which is unnecessary. This also fixed some currently defined classes as final which were just not being considered as such before.
Updated NEWS
Updated NEWS
Updated NEWS
Updated NEWS
Updated NEWS
Updated NEWS
Updated NEWS
Updated NEWS
updated NEWS
PowerPC64 support for add and sub with overflow check
PowerPC64 support for operators with overflow check
Reduced size of zend_op on 64-bit systems.
explicit passing of *tsrm_ls isn't needed anymore
Make ZEND_INIT_FCALL keep predcalculted size of necessary stack space in opline->op1.num to avoid its recalculation on each execution.
Removed unused variables
update NEWS
move the test to the right place
Improved array_merge() and array_replace() (1-st array may be added using simple procedure).
Replaced zendi_convert_to_long() with _zval_get_long_func()
Moved zend_is_true() from zend_execute.h/zend_execute_API.c into zend_operators.h/zend_operators.c. Splited the most expensive part of inline i_zend_is_true() into a separate zend_object_is_true(). Replaced zendi_convert_to_long() with cals to zend_is_true().
TSRMLS_D should be void, thanks Dmitry
Revert "Save one xor instr"
Save one xor instr
follow C89 format
move the test to the right place
fix TS build and C89 compat
updated NEWS
Updated NEWS
Updated NEWS
Updated NEWS
NEWS
Improved basic zval copying primitives: ZVAL_COPY_VALUE(), ZVAL_COPY(), ZVAL_DUP()
Wrap RETURN_VALUE_USED() with EXPECTED() or UNEXPECTED() macros according to more frequent usage patterns.
Improved ASSIGN_<OP>, ASSIGN_DIM and UNSET_DIM
fix-bug-68571-to-php5.5
drop dead/unused code
simplified code
Move ZVAL_DEREF() and make_real_object() into slow paths.
Pass znode_op structure by value (it fits into one word) instead of pointer to structure.
Move checks for references into slow paths.
Improved ASSIGN_DIM and ASSIGN_OBJ
Move checks for references into slow paths of handlers or helpers. Remove duplicate opcode handlers.
hashmap sizes
Wasted Shared Memory aboce 2Gb fix
Do not copy return_value in parser
Drop unnecessary zval containers
fixed test
C89 compat
add include for missing localeconv_r proto
updated NEWS
Removed useless handlers
Move checks for references into slow paths of operator functions. Remove duplicate opcode handlers.
Revert unintentional docblock change
Restored zip/oci8 PHP 4 code, add PHP 7 checks
Note macro removal in UPGRADING.INTERNALS
Removed ZEND_ENGINE_2 checks (and ZE1 code, it's been a decade!)
Zend Engine 3
Updated NEWS
Updated NEWS
Updated NEWS
Start adding new attribute to control multi statements
Get rid of few more duplicate handlers
updated NEWS
Improved BOOL, BOOL_NOT and conditional jumps
Improved ECHO and PRINT
Get rid of duplicare FETCH_DIM_* handlers
updated NEWS
Get rid of duplicate handlers (where the code for IS_TMP_VAR and IS_VAR operands is the same)
Updated NEWS
Updated NEWS
Updated NEWS
fix dir separators in test
Make it const as Levi asked for
Update config.guess and config.sub
add initial install
switch to C travis project instead of PHP
use the generic TRAVIS environment var to check for travis (see http://docs.travis-ci.com/user/ci-environment/)
Change string buffer handling in json scanner
fix TS build
add config option to target codegen architectures
updated NEWS
updated NEWS
Get rid of duplicate handlers (ZEND_ADD_SPEC_TMP_TMP and ZEND_ADD_SPEC_VAR_VAR are absolutely the same).
Use zend_string* for op_array->arg_info[]->name and op_array->arg_info[]->class_name. For internal functions we still use char*.
Update UPGRADING for the new variadic functions, and re-sort.
Improved POST INC/DEC
make sure that we don't truncate the stack trace and cause false test failures when the test is executed in a directory with long path
Missed closed folder mark
Revert "Unecessary assignment"
Unecessary assignment
Support for different CPU page sizes
fix datatype mismatches and warnings
add /nologo to ARFLAGS
fix datatype mismatches
fix datatype mismatches
fix datatype mismatch
fix datatype mismatches
silence the lib.exe
NEWS
fix string is optional, set default length, thanks laruence
one more refix to the test
cleanup uneeded cast
fix dir separator in test
fix possible null pointer math
PowerPC64 support in long multiplication
Revert "don't try to send in the test results until we restored qa.php.net" as qa.php.net is back.
add include for missing usleep proto
C89 compat
Added more useful warning messages
Changed based on comments and make its behaviour equal to the Windows version
Added more useful warning messages
Changed based on comments and make its behaviour equal to the Windows version
Added more useful warning messages
Changed based on comments and make its behaviour equal to the Windows version
XFAIL as catch_workers_output = yes seems not reliable
update NEWS
Add a test for bug #67643 (curl_multi_getcontent returns '' when RETURNTRANSFER isn't set)
fix ZTS
update news
update news
update NEWS
Apply error-code-salt fix to Windows too
Bug fixes in light of failing bcrypt tests
Add tests from 1.3. Add missing tests.
Upgrade crypt_blowfish to version 1.3
Conflicts: 	ext/date/php_date.c
Adds test cases for openssl EC improvements
Adds better handling of EC keys: OPENSSL_KEYTYPE_EC
Update NEWS
fix typo
Added test and review suggestion
fix tests for systems with no de_DE locales
Move chown to fpm_unix_set_socket_premissions()
Updated NEWS
Updated NEWS
Updated NEWS
Updated NEWS
Updated NEWS
Updated NEWS
PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION > 1
Refactor ZEND_LONG_MAX/MIN checks into ZEND_DOUBLE_FITS_LONG()
Skip buncha tests on 32-bit
fix test with readline on mac
skip simplexml
skip posix 32-bit
skip tests on 32-bit
fix phpdbg, _zend_execute_data.scope was removed with 9a36cb1a07c247766278a888612ecbac812bece9
Avoid useless dereferences
Removed useless check
updated NEWS
updated NEWS
updated NEWS
disable ext/openssl/tests/stream_server_reneg_limit.phpt for windows
Rename EX_VAR_2() into ZEND_CALL_VAR() and EX_VAR_NUM_2() into ZEND_CALL_VAR_NUM().
Pack EX(frame_info) into EX(This).u1.v.reserved. Rename "frame"kind" into "call_kind" and VM_FRAME_... into ZEND_CALL_...
Pack EX(num_args) into EX(This).u2.num_args
Get rid of EX(scope). In most cases we use EG(scope) anyway. EX(scope) was used to switch EG(scope) back after call, but it's possibleto use EX(func)->common.scope instead.
updated NEWS
refactored the mbstring config.w32
Update NEWS
Changed "finally" handling. Removed EX(fast_ret) and EX(delayed_exception). Allocate and use additional IS_TMP_VAR slot on VM stack instead.
the darwin specific test fails for me with the same output which is the expected for the original test I couldn't find anybody who managed to see this test passing, but I found a bunch of other reports on qa.php.net/reports and on google which do see this test failing on mac. if this change causes you to have this test failing on Mac, please drop me a mail so we can improve the current test so it passes for everybody.
#68446 is fixed
Reimplemented silence operator (@) handling on exceptions. Now each silence region is stored in op_array->brk_cont_array. On exception ZEND_HANDLE_EXCEPTION handler traverse this array and restore original EG(error_reporting) if exception occured inside a "silence" region.
remove the NEWS entries for the reverted stuff
typo fix
go back with phpdbg to the state of 5.6.3, reverting the controversial commits(remote debugging/xml protocol)
5.5.21 now
PHP-5.6.5 is next
updated lib versions
updated lib versions
Add missing bits to php_json.h
fix dir separator in test
fix TS build
fix TS build
Better fix for bug #68446
Revert NEWS and set test to XFAIL
Improved zend_hash_clean() and added new optimized zend_symtable_clean()
Use inline version of zval_ptr_dtor()
Added new optimized zend_array_destroy() function
Moved i_zval_ptr_dtor() from zend_execute.h to zend_variables.h
fix REGISTER_NS_*_CONSTANT macros
Removed useless assert. EG(uninitialized_zval) can't be refcounted.
Use specialized destructors when types of zvals are known.
Move json encoding stuff
move tests into proper place
Improved assignment to object property
Reuse zend_assign_to_variable() in zend_std_write_property()
cleanup comments from svn/cvs era
fix dir separator in test
fork test for windows
Use inline version of the function in the loop
Micro optimization
FPM: change "listen = port" behavior from IPv4 catch-all to IPv6 catch-all (+ IPv4-mapped)
Add a test for bug #67643 (curl_multi_getcontent returns '' when RETURNTRANSFER isn't set)
Remove no longer used scripts
update for LiteSpeed
update for LiteSpeed
Adds test cases for openssl EC improvements
test to function addcslashes
test
Update CODING_STANDARDS
Correct two zlib tests to use a string, not a const
Adds better handling of EC keys: OPENSSL_KEYTYPE_EC
update NEWS
fix NEWS order
update NEWS
Update comments in php.ini
added missing INSTALL_ROOT
Minor: typo fix in filter_var comment
Minor fix: Missing quotes in openssl test case for bug bug64802
Minor fix: Missing quotes in openssl test case for bug bug64802
Added NEWS entry and test for bug 68446
typo fixes - https://github.com/vlajos/misspell_fixer
typo fixes - https://github.com/vlajos/misspell_fixer
Implement initial changes for json_parser
Add NEWS & UPGRADING
secured unserialize
typo
NEWS
NEWS
minor typo in test
add test for global / pool prefix and bug #68478
Revert "made lsapi_main.c compatible with PHP7/phpng ."
Updated NEWS
Updated NEWS
Updated NEWS
fixed test
add test for fastcgi_finish_request()
added test for things done so far for bug #66265
partially fixed bug #66265
forked bug67052.phpt for Windows
NEWS
Raise a warning when listen = hostname used and is resolved as multiple addresses
NEWS
move zlog_set_level() again
Change pm.start_servers default warning to notice
add test for #68391
NEWS
NEWS
made lsapi_main.c compatible with PHP7/phpng .
made lsapi_main.c compatible with PHP7/phpng .
made lsapi_main.c compatible with PHP7/phpng .
made lsapi_main.c compatible with PHP7/phpng .
NEWS
adapt test for error message introduce in fix for #68463
run a few request in this test
fix test
fix test
added info about some other macro changes
added note about toolset and phpize
added note about the response files
split msgfmt_format_intlcalendar_variant*.phpt for ICU 54.1
split formatter_format*.phpt for ICP 54.1
split dateformat_timezone_arg_variations*.phpt for ICU 54.1
split dateformat_get_set_timezone_variant*.phpt for ICU 54.1
fix icu version to test
split ext/intl/tests/dateformat_get_set_calendar_variant*.phpt for 54.1
split dateformat_formatObject_datetime_variant*.phpt for ICU 54.1
split dateformat_formatObject_calendar_variant*.phpt for ICU 54.1
split dateformat_create_cal_arg_variant2.phpt for ICU 53.1 and 54.1
clone dateformat_calendars_variant3.phpt for ICU 54.1
split collator_get_sort_key_variant3.phpt for icu 54.1
split ext/intl/tests/collator_create3.phpt for icu >= 54.1
Raise a warning when listen = hostname used and is resolved as multiple addresses
fix test description
tests for #895
move zlog_set_level() again
Change pm.start_servers default warning to notice
NEWS
fix test description
tests for #895
move zlog_set_level() again
Change pm.start_servers default warning to notice
Factorization and consistency - create a fpm_use_error_log() to check when file or stderr should be used - use it everywhere for consistency - add some comments
typo fixes - https://github.com/vlajos/misspell_fixer
NEWS
NEWS
NEWS
default tsrmls cache to NULL
NEWS
add test for bug #68381
NEWS
proper dllexport
move to size_t where zend_string is used internally
fix some datatype mismatches
return after the warning, to fix uninitialized salt usage
fix datatype mismatches
add missing type specifier
fix datatype mismatches
fix unsigned check
"extern" shouldn't be used for definitions
joined identical conditional blocks
simplify fpm tests
SEND_VAR_NO_REF optimization
Add test for bug #68442
Add various tests for FPM - covering recent bugs (68420, 68421, 68423, 68428) - for UDS - for ping and status URI - for multi pool and multi mode
Include small MIT FastCGI client library from https://github.com/adoy/PHP-FastCGI-Client
Get rid of zend_free_op structure (use zval* instead). Get rid of useless TSRMLS arguments.
Add new FPM test for IPv4/IPv6
Reorder fields for most often access pattern
update fpm configuration for #68428
update fpm configuration for #68428
update fpm configuration for #68428
fix incompatible pointer types
fix incompatible pointer types
fix incompatible pointer types
NEWS
NEWS
New label length test
comment about ipv4-mapped in fpm conf
Improve fix bug #68421 access.format='%R' doesn't log ipv6 address
Micro optimization
improve comments about FPM listen option
Replace INIT_PZVAL_COPY with ZVAL_DUP
Add error codes to php_json.h
NEWS
NEWS
fix build
NEWS
NEWS
less spaces in the makefile generated commands
separate LDFLAGS and ARFLAGS to fix the unknown opts warns
partial cleanup to work with size_t str length in password_hash
remove unused var
added comment
validate sockets portable way
fix unused var warning
removed useless check
NEWS for 1b156207446e0c5ec8a9476ad0966b5daa82f516
FILTER_VALIDATE_DOMAIN and RFC conformance for FILTER_VALIDATE_URL
Initial import of jsond
avoid repeated strlen usage, remove unused vars
fix datatype mismatch
fix datatype mismatch
extend warn list to exclude
fix datatype mismatch and kick unused var
fix datatype mismatches, remove dead part of code
remove unused vars
added missing type specifier
Micro optimization
fix merge
add a configure option to suppress uncritical warns with clang
pass vc++ version to clang, that will be forwarded to _MSC_VER
HAVE_STRNLEN should be in all toolsets
set the vc++ next name
Another fix for test fail
pre create the build dir
fix test cleanup
fix test cleanup
C89 compat
trim when adding flags, avoid multiple spaces
use response files for exts and sapi linking
generate response files for use by linker
generalize arch setup
fix int to void* cast on x64
update NEWS
update NEWS
update NEWS
Remove unneeded md5 hashing from PHP-5.6 branch. It's removed from master already by my previous commit.
fix loop - size_t is unsigned so can not be negative
fix loop - size_t is unsigned so can not be negative
fix copypaste error
5.4.36-dev
update NEWS
update NEWS
update NEWS
update NEWS
fix printf spec
fix datatype mismatch and unused var warning
eliminate duplicated identical function definitions
generalize --with-php-build option handling
refactor zts related config
- Updated to version 2014.10 (2014j)
Update NEWs
Update NEWS
fix trailing slash
further fixes to win build
moved libs and debug/release mode setup into functions
fix var declaration used by macro conditions
fix sprintf spec
fix var usage only when unistd.h available
cleanup unused variable
do portable socket checks
initialiize opline for the case it lands in default case
convert_to_string also does the check
A better fix(do the convertion in compile time)
update UPGRADING.INTERNALS
add php_create_socket/php_destroy_socket PHP_SOCKETS_API to abel to create socket ressource in other ext
better description for the toolset config option
use proper declarations for zend_stat_t
move these functions to the appropriate place
Update NEWS
Marked tests as 32-bit
fix typo in UPGRADING.INTERNALS
move more common ldflags into function
rename intel toolset to icc - shorter
fix gd compilation with icc toolset
either ms or intel linker is used, /libpath is supported
further catch up with phpize and improved clang arch setup
add /fallback for clang-cl
parametrize WINVER and update its value
further refactoring of toolset+phpize stuff
catch up the toolset changes with phpize
fix linking for clang, using linker directly
adjust pid_t declaration so it doesn't conflict with apache one
using the determined linker instead of compiler
fix x64 recognition for clang and icc
basic support for Intel Composer
build system to support clang
basic clang compatibility on windows
fixed compilation error
Partial fix for bug #68365 (zend_mm_heap corrupted after memory overflow in zend_hash_copy)
Micro optimizations
Use better function
fix preprocessor conditions
fix comment
final name for vc14 isn't yet set
Improved object property access.
Update NEWS
Various fixes to allow support for new VS2014 features  - Added some typeof checks to handle JS errors introduced in VS2014  - Added VS2014 to the list of compilers  - Changed to use stdint.h if we are using VS2014 or higher  - Skip defining timespec if we're using VS2014 or higher  - Moved u_char typedef out to always be defined regardless of VS version
Minor: typo fix in filter_var comment
fix dir separator in test
arg1-3 are not variable names to use; removed useless buffer variable
improved the ZEND_FASTCALL convention for vc12+
Respect flags when fetching class by name
update NEWS
Initialize the offset table - PCRE may sometimes miss offsets
set default response code to 200
set default response code to 200
set default response code to 200
set default response code to 200
Added test and review suggestion
Add credit
fix ZTS build
fix datatype mismatches
fix datatype mismatches
fix warning not all control paths return a value
fix datatype mismatch warning
fix datatype mismatch warnings
fix datatype mismatch warnings
Added PGSQL_TEST_CONNSTR env var support for ext/pgsql tests
Update the VM generation script, per Bob.
Update NEWS after rebase.
Add BEGIN_EXTERN_C() and END_EXTERN_C() to .h files missing them.
Update NEWS
Use DECLARE_CONST instruction instead of call to internal define() function when possible
Added constant expression evaluation for "dirname(__FILE__)". Improved constant expression evaluation for function calls
Temporarily disable wait/xml protocol...
fix datatype mismatches
fix datatype mismatche warnings
fix datatype mismatches
fix datatype mismatch warnings
fix datatype mismatch warnings
fix some datatype mismatches in ext/bz2
fix datatype mismatch warnings
don't try to send in the test results until we restored qa.php.net
add DLL export to the output globals
Save memory allocating
Use macro
fix output globals importing
export output globals
use portable strndup implementation
unix sockets aren't available on windows
dll export APIs needed by phpdbg
fix sapi/phpdbg/config.w32
fix datatype mismatches
fix datatype mismatches
fix datatype mismatch
fix datatype mismatches
fix datatype mismatches
fix the comparison return value
fix datatype mismatch
fix datatype mismatches
fix datatype mismatch warning
fix datatype mismatches
fix datatype mismatch warnings
fix datatype mismatch warns
fix datatype mismatch warn
fix datatype mismatch warnings
fix "inconsistent dll linkage" warning caused by bison
fix datatype mismatch warnings
Don't treat warnings as failures in the junit output
Don't treat warnings as failures in the junit output
Don't treat warnings as failures in the junit output
Enable shared builds for webhelper
cleanup uneeded json
cleanup uneeded json
Move missing zend_hash_* macros from phpdbg.h to zend_hash.h
Removed last HAVE_JSON check
Use serialize instead of json for transfer
Add webhelper in config.w32
fix phpdbg build when src tree != build tree
fix phpdbg build when src tree != build tree
Remove the ugly hack via a temp file to store breakpoints
Remove the ugly hack via a temp file to store breakpoints
Typo (notfoundc => notfound)
Typo (notfoundc => notfound)
*Always* clean up and run destructors
*Always* clean up and run destructors
rework fix to php_com_do_invoke_byref,
fix possible zero deref
fix error code upcast on x64
several fixes to com_dotnet for x64
exclude the 32 bit only test
initialize the input arg lengths
fix datatype mismatches
convert API for size_t where zend_string is used under the hood
fix signature, zend_string is used for function name
fix datatype mismatches
fix datatype mismatches
fix datatype mismatch
fix datatype mismatch
fix datatype mismatch warns
fix datatype mismatch
Remove the ugly hack via a temp file to store breakpoints
5.6.4 now
PHP 5.5.20 now
Typo (notfoundc => notfound)
*Always* clean up and run destructors
Addtion fix for bug #68252 , forget static variable hanlding
Ensure we have enough input data before parsing date
fix datatype mismatch
fix datatype mismatch warnings
fix datatype mismatch
fix datatype mismatch
fix datatype mismatches
fix datatype mismatch warning
fix datatype mismatches
fix datatype mismatches
fix datatype mismatch
fix datatype mismatch warns
catch up with zend_html_puts
fix datatype mismatches and warns
fix datatype mismatches
fix datatype mismatches
fix datatype mismatches and warnings
fix datatype mismatch warnings
fix datatype mismatch warnings
fix datatype mismatches
fix datatype mismatches
fix datatype mismatch warnings
fix datatype mismatches
Never exist xml mode...
improve the current sigio handling on win32
NEWS
NEWS
Do not execute anything after quit or clean command
Do not execute anything after quit or clean command
Stabilize execution, always run destructors and extended file breakpoints
Stabilize execution, always run destructors and extended file breakpoints
remove dodgy param parser, bring userland breakpoint api inline with PHP7
remove dodgy param parser, bring userland breakpoint api inline with PHP7
disable output buffering by default
disable output buffering by default
Add question to reset execution in run/exec/clean
Add question to reset execution in run/exec/clean
Do not execute anything after quit or clean command
Stabilize execution, always run destructors and extended file breakpoints
- Updated to version 2014.9 (2014i)
remove dodgy param parser, bring userland breakpoint api inline with PHP7
disable output buffering by default
actually remove this
disable output buffering, better breakpoint api for userland, remove hand parsing of params
Add question to reset execution in run/exec/clean
Set engine back to initial state after fatal-ed ev command
stdint will be included in the win32 variant, so don't do it twice
updated libmagic.patch in master
updated libmagic.patch in 5.6
updated libmagic.patch in 5.5
NEWS
NEWS
Update PDO_DBLIB README file
refix the broken place
fix infinite loop
fix datatype mismatch warnings
fix datatype mismatches
fix datatype mismatches
fix datatype mismatches
fix datatype mismatch warnings
fix datatype mismatch warnings
fix datatype mismatch warnings
fix datatype mismatch warning
fix datatype mismatches
fix datatype mismatch warnings
Re-add phpdbg to travis
Made phpdbg compatible with new engine
Added some NEWS
Make xml valid (missing space between attrs)
Add note about <eval> tag for errors in xml.md
Name the tag <eval> if the error id during ev cmd
Do not print out xml as PHP print...
Too much copypaste...
Add xml formatted deep dump of return value from ev
rework the previous fix for var names with size_t, no ugly casts anymore
add include for usleep() proto
fix datatype mismatches
fix datatype mismatch
fix datatype mismatches
fix datatype mismatches
fix pack64.phpt related fail on win64
fix datatype mismatches
fix datatype mismatch
exhaust zend_long/size_t potential in levenstein
Move phpdbg_print and helper functions to phpdbg_out.*
Do not use int8_t when it is useless...
Do not display dots in xml output for i v/i d
fix datatype mismatches
fix datatype mismatches
fix datatype mismatches
fix datatype mismatches
fix datatype mismatches
fix datatype mismatches
fix datatype mismatches
fix datatype mismatch
fix datatype mismatches
fix datatype mismatch
fix datatype mismatch
move the more common case up
catch up with the latest key length change
move key lengths to use size_t as zend_string is used internally anyway
Embed FETCH_CLASS <string> into the following NEW
Implement Bug #66062 - pdo_dblib enable timeout parameter
Implement Bug #66063 - pdo_dblib enable timeout parameter
Optimized HashTable size calculation
fix NEWS & version
fix datatype mismatch warning
fix datatype mismatches
fix datatype mismatches
fix assert, zero diff would be valid, too
fix datatype mismatch warning
fix datatype mismatch warnings
fix datatype mismatches
Removed useless code
Try fixing 5.4 and 5.5 build, again
Get rid of ZEND_FETCH_MAKE_REF
eliminate one branch when computing the initial table size
fix datatype
fix several datatype mismatches
fix dir separator in test
fix datatype warnings
this should be uint32
fix datatype mismatches
micro optimized initial hash size calculation
fixing datatype mismatches
all the key_len use uint, fix the warning when using strlen on 64 bit
fix datatype mismatch warnings
fix datatype mismatch and warning
fix datatype mismatches
use zend_bool where zend_long isn't needed
fix datatype mismatches for strings from userspace
NEWS
NEWS
Embed FETCH_CLASS <string> into the following INSTANCEOF
Don't use opline->extended_value for FETCH_CLASS flags where it's unnecessary
ZEND_RECV didn't really use opline->extended_value for FETCH_CLASS flags
Useless assignment
Better convert
Better zval copying
add comment
Optimized ASSIGN_DIM and related opcodes
restart listening on socket
some minor fixes
added phpdbg_eol.* sources
basic EOL implementation for CRLF
micro optimization
start sigio watcher only for run and eval for now
reworked the current EOL stuff
prepare setting EOL with command or INI
correct place to start the sigio watcher
further improvements to windows/sigio
basic sigio surrogate for windows
Avoid "goto"
Extra comma
Moved proxy object support in ASSIGN_ADD (and family) from VM to slow paths of corresponding operators
Simplification
Always show the prompt (now also: <prompt> tag)
Add xml.md info for info constants
Ensure that %.*s uses the full string (INCLUDING \0)
Add info constants (alias: i d) command
zend_get_property_info_quick() cleanup and optimization
Add values of scalars to info vars/globals
initialize lineno before calling compile file file in phar
Use ADDREF instead of DUP, it must be enough.
Removed old irrelevant comment
fixed compilation error
#68268: DatePeriod: Getter for start date, end date and interval
revert PHP_EOL changes
don't use timeout for the remote prompt, recv() will block until input arrives
gmp_random_seed()
improve server sock creation and support ipv6
add comment
increase default recv timeout to 30 seconds
more EOL fixes
use MSG_PEEK flag for recv() everywhere
fixed EOL transferred to the client side, fixed strftime fmt string
increase stack to avoid overflow crash on SIGINT
several fixes to the new io stuff
override stdin and stdout to be remote, stderr is untouched however
move these to use the mixed read/write routines
add basic stuff to generalize IO
enable php_stdiop_write for windows
export functions needed for phpdbg
fix dll export
C89 compat
Remove accidentally added null-byte in attributes
Optimized property access handlers. Removed EG(std_property_info).
fix arg order, CFLAGS is the fifth arg in m4
opcache, intl, gmp, exif, com, bcmath to use static tsrmls
ext/libxml, ext/xml and ext/soap use static tsrmls pointer
ext/iconv, ext/json and ext/session use static tsrmls pointer
Don't make difference between undefined and unaccessible properies when call __get() and family
Don't make useless CSE
array_pop/array_shift optimization
check for zlib headers as well as lib for mysqlnd
a realpath cache key can be int or float, catching this
News entry for new curl constants
News entry for new curl constants
TLS 1.0, 1.1 and 1.2 Curl constants - bug #68247
Micro optimizations for isset/empty
converted ext/sqlite and ext/pdo_mysql to use static tsrmls cache
Micro optimization for zend_hash_next_index_insert_new()
moved tidy to use static tsrmls pointer
converted ext/ereg, ext/phar and ext/pgsql for static tsrmls usage
Use intptr_t for zend_intptr_t typedef
Drop zend_long64 in favor of int64_t
Removed deprecated fields
NEWS
cleanup NEWS
removing the NEWS entry as we had to revert this fix for now
Revert "fix TS build"
moved ext/filter to use the static tsrmls pointer
more exts converted for static tsrm ls pointer
NEWS
move SG to use global tsrmls pointer
one more file to enable static tsrmls
don't define tsrm ls in SAPIs under linux
moved most of the core to use static tsrm ls cache pointer
Revert "Bug #41631: Observe socket read timeouts in SSL streams"
PHP-5.6.3 is next
update NEWS, 5.6.2 will be a security-only release
made ext/date and ext/spl use static tsrm ls cache
converted some ext/mysql* and fixed ext/zlib
converted ext/zlib with static tsrm ls cache
TSRMLS_FETCH() is a spent force
bring back all the TSRMLS_FETCH() stuff
fix bad merge
Added API function to retrive current custom heap handlers
update NEWS and UPGRADING
Allow to substitute storage layer in memory manager.
fix several datatype mismatch warnings
fix signed/unsigned mismatch warning
more signed/unsigned mismatch fix
fix signed/unsigned mismatch warning
fix signed/unsigned mismatch
fix some signed/unsigned mismatch
missing include for strlen proto
More fixes for array/object casts with temporary variables
Deref right value for compound assign ops
We can't eliminate FETCH_CONSTANT opcodes for constants represented by AST.
Ensure __LINE__ is always accurate
Remove retval member in spl_dllist
enable console options for remote on win
basic rework for remote on win
fix config.w32
DLL export several APIs needed for phpdbg
More fixes for nodelist array access - testing for null property read - no zval copying if the type is already long - memory fix for master
Maybe-fix for krakjoe/phpdbg#120, fixed remote on darwin
int to size_t where the underlaying API supports it
use php_socket_t instead of int
fix signed/unsigned mismatch warning
fix compilation warning
Improved specialisation $this variable accessed through IS_UNUSED operand must be IS_OBJECT, so we don't have to check for its type or perform dereference.
Add notes about get_class_entry/get_class_name to UPGRADING
Drop redundant casting code from ext/filter
update NEWS
update NEWS
update NEWS
update NEWS
Added note to UPGRADING regarding 64-bit support in pack()/unpack()
pack(): Use SIZEOF_ZEND_LONG instead of SIZEOF_LONG
RFC: 64 bit format codes for pack() and unpack()
Add 64 bit formats to pack() and unpack()
Help to CPU branch predictor
Removed unused EG(orig_error_reporting)
Update get_class_name semantics
Remove Z_OBJ_CLASS_NAME_P
Improved VM stack primitives for fast paths. Slow paths are not inlined anymore.
Refactored DOMNodeList array dereferencing implementation
zval must not be converted in place without duplication
Escape control characters
Remove PDORow get_class_entry handler
Only show req attribute if given
Remove get_class_entry handlers in COM
Remove zend_get_class_entry function
Remove get_class_entry object handler
Remove proxy object implementation
Remove support for classes without class entries
Review a few more SEPARATE_ZVAL_IF_NOT_REF usages
Updated xml.md
Always output request id in containers
Directly use zend_string for php_implode/php_explode
Ports are unsigned short, use unsigned to display
Copy all the arena allocated data from SHM to process memory at once
Reduce variabledetails+variable to just one variable tag
Updated NEWS for #67949
Updated NEWS for #68129
Updated NEWS for #68129
Add <intros> tag around <intro /> tags
Put stack_verify in error buffer too
Added info about ext/opcache
Exposed zend_clean_and_cache_symbol_table() and fixed incorrect efree()
let phpize profit from /mp as well
fix phpize for /mp and more
fix /mp usage for VC++
fix wording
Revert WS change from "[\r\n\t ]+" to "[\t ]+"
Add to NEWS
Add to NEWS
Add to NEWS
Add to NEWS
Micro optimization
Improved return by reference handling
Reorder fields for better alignment on both 32-bit and 64-bit systems
Remove useless parts of EX(old_error_reporting)
Upated NEWS
Apply error-code-salt fix to Windows too
make build work moar
Bug fixes in light of failing bcrypt tests
Add tests from 1.3. Add missing tests.
fix case insensitivity for registered functions
Upgrade crypt_blowfish to version 1.3
fix mistake in help
force more static tsrmls cache usage
&quot; => &amp;quot; in md document
Drop convert_to usage in zend_exceptions
bring back the correct php_version.h
fix the empty_strings SAPI shutdown leak in TS build
Use fastcall calling convention for heap functions
fix leaking the empty_string in TS builds
Add request id to <backtrace>
remove successive assignment
Add request_id possibility for xml output
Add tests verifying calls work inside echo, concatenation and array access
Updated NEWS and UPGRADING
Add UPGRADING stubs for a number of recent changes
Regenerate tokenizer data
Remove <% and <script language="php"> tags
convert ext/sockets to work with the static tsrm cache pointer
enable static tsrm ls cache in ext/standard
Use PHP 5.4 compatible zend_execute in #if
properly export tsrm_strtok_r()
Consistency in breakpoint tags, <run> => <stop>
Disable automatic resetting of imported auto_globals
Add transfer of output back to webserver and merge master in
DateTimeZone::getOffset() now accepts a DateTimeInterface
LIBREADLINE => HAVE_LIBREADLINE
DateTimeZone::getOffset() now accepts a DateTimeInterface
Use or instead of and for libedit and readline
Moved checks and error reporting related to static methods from DO_FCALL inti INTI_FCALL* opcodes that may really deal with static methods. (In some rare cases it may lead to different order of warning messages).
fix asinh delivering -0 when the arg is 0
Mark test for full GC root buffer as XFAIL
Mark three foreach tests as XFAIL
reveal some newer libcurl features in MINFO
remove the remains of dsp files handling
fix EX usage
remove misprint parentheses
remove misprint parentheses
Replaced EG(This) and EX(object) with EX(This). Internal functions now recieves zend_execute_data as the first argument.
And this one...
Added support for a restricted ev (variables only) in async safe contexts
It should be in extern c
Remove useless condition
NEWS entry for previous commit
NEWS entry for previous commit
add IPv6 support to php-fpm
Micro optimization for the most frequency case
Add hash to EXTENSIONS file
Remove extensions which are long gone
we also have xz release tarballs since 5.5
improved file size computation in stat()
Remove accidental insertion of a single "s"
linux compat for the static tsrm ls cache pointer
using pointer to the tsrm ls cache instead of a function call
increment Zend module API number
5.5.19 now
Expose zend_throw_exception_internal()
Use inline finction for OBJ_RELEASE() macro
update NEWS about the release date of 5.6.1
only no_NO.ISO-8859-1 have to be ignored (merged)
only no_NO.ISO-8859-1 have to be ignored
remove bogus locale use from test
use $PHP_LIBDIR instread of "lib" in skel example
Removed zend_execute_data->prev_nested_call. Reuse prev_execute_data instead.
prepare some macros to use tsrm cache as pointer
revert the local speedup approach
Test PHP Init Fail Without Params
Micro optimization
Drop unused INIT_STRING opcode
Drop unused RAISE_ABSTRACT_ERROR opcode
CT substitute unqualified true/false/null in namespaces
fix test filename
one more test to illustrate transfer of an arbitrary data amount throug pipes
fix tests on linux
better test cleanup
Use more readable inline functions
increase the polling period to not to break existing behaviours
updated NEWS
added missing INSTALL_ROOT
Add my information to this test
Add a test for the exception cases of readline_read_history
added some tests to datetime and dateinterval functions
added various tests for XSLTProcessor and one test for iconv extension
teste basico da funcao timezone_version_get
Set an LDAP error code when failing ldap_bind due to null bytes
Drop support for GMP 4.1
Make gmp_setbit and gmp_clrbit return values consistent
removed *.dsw and *.dsp files
Update comments in php.ini
Opcache compatibility for coalesce operator
Update operand types for coalesce operator
Send a \x03 during execution to interrupt (POSIX only)
approach local pointers in performance sensitive areas
remove fetches in readline
This test should pass
DOMNodeList elements are accessible through array notation
cleanup TSRMLS_FETCH in ext/opcache
cleanup TSRMLS_FETCH
cleanup TSRMLS_FETCH in ext/gd
cleanup TSRMLS_FETCH
cleanup TSRMLS_FETCH in ext/fileinfo
cleanup  TSRMLS_FETCH in openssl
cleanup TSRMLS_FETCH in ext/pcntl
cleanup TSRMLS_FETCH in ext/pdo*
cleaunp TSRMLS_FETCH in ext/pgsql
cleanup TSRMLS_FETCH in ext/phar
cleanup TSRMLS_FETCH in ext/session
more TSRMLS_FETCH cleanup in ext/soap
cleanup TSRMLS_FETCH in ext/soap
cleanup TSRMLS_FETCH in ext/sockets
cleanup TSRMLS_FETCH in ext/standard
cleanup TSRMLS_FETCH in ext/xmlrpc
cleanup TSRMLS_FETCH
cleanup TSRMLS_FETCH in wddx
cleanup TSRMLS_FETCH in ext/xml
cleanup tsrm_ls
drop TSRMLS_FETCH in xsl
drop unused tsrm_ls
- Updated to version 2014.8 (2014h)
cleanup TSRMLS_FETCH in com
cleanup TSRMLS_FETCH in win32
remove fetches from mysqlnd
remove fetches from mysqli
remove fetches from libxml
remove fetch from ldap
remove fetches from imap
remove fetches from gd
remove fetch from dom
remove fetch from dba
cleanup direct tsrm_ls passing
cleanup after the removed PHP_OUTPUT_TSRMLS
remove fetches from date
remove fetches from curl
some cleanups for TSRMLS_FETCH and direct tsrm_ls usage in main
remove fetches
remove unused fetch
cleanup TSRMLS_FETCH
fix date
update NEWS
Revert xp_ssl.c to the state of 5.4.32 due to regressions
cleanup TSRMLS_FETCH in ext/sqlite3
NEWS
NEWS
zend_uint -> uint32_t
Push first draft of xml protocol documentation
Make set commands more consistent
fix C89 compat
fix some extension builds
fix signature
remove some remains from the old patch
reworked the patch, less new stuff but worky
fix indentation
fix zts build
Make phpdbg_prompt.c xml messages more consistent
Use macro
Optimized (PRE|POST)_(INC|DEC) handlers. Moved proxy object handling into helper function.
Make print command xml output more consistent
Always add a newline before a warning or a notice
Better naming in list command and inform about filename
Use more consistent naming in info command for xml protocol
Address issues raised by @nikic
check che right thing to prevent the crash in the timeout thread
update the certificate used for the test, as it expired recently
Remove dead code
Test use($this) being an error
Move list() condition into assign_znode
typo
NEWS
Avoid double checks
the order of the blocks should be Core, then exts in alphabetical order
add missing NEWS entry for the phpdbg compilation fix
add NEWS entry for #68088
Make sure min < max
call ctor if it's not done yet
Mersenne Twister was added in GMP 4.2
Make QM_ASSIGN, JMP_SET and CAST return IS_TMP_VAR.
Add test files
Add gmp_random_bits(bits) and gmp_random_range(min, max)
Removed useless helper
Drop unused result argument
Change GMPs default PRNG to Mersenne Twister
Test use of string names with \ prefix
Add zend_add_literal_string
Drop dead code
Extended coalesce operator test case for ordering/short-circuiting
fix indent
Use consistently "num" for an nth opline number
Add info globals command
Use zval_ptr_dtor_nogc() to free IS_TMP_VAR operands. Removed ZEND_SWITCH_FREE opcode (ZEND_FREE used instead).
correct macro
swap some standard module properties _ex for std mod properties
Add notification at script end
Allocate copies of internal functions inherited in user classes at CG(arena), instead of permanent heap (malloc).
Make internal function names to be interned strings
It is not likely a string
Simply make_printable_zval
define explicit export/impot spec
Test a few more error conditions in the compiler
Test error conditions for ct class const refs
Test some additional cases for constexpr evaluation
Mark said ext/date tests as 32-bit only
Remove zend_dynamic_array
Remove static allocator
basic windows fix
Remove php_varname_check
Make zpp fail if NaN passed for int, or out-of-range float for non-capping int
Avoid useless reference counting
Specialization (only IS_VAR ad IS_CV operands may be references)
Optimized unset()
Make error paths to be UNEXPECTED
Replace IS_OP?_TMP_FREE() with more clear (OP?_TYPE == IS_TMP_VAR)
pickup the alignment definition
added a comment
fix the REPARSE_DATA_BUFFER struct def
simplify the condition
A few general segfault fixes
Add smart_str_append for appending zend_strings
Rename smart_str_append to smart_str_append_smart_str
Use smart_str for exception stack traces
Use smart_str in get_function_declaration
Move smart_str implementation into Zend/
First draft of an xml protocol
UPGRADING for Integer Semantics
fix wrong doings
fix STANDARD_MODULE_PROPERTIES
update opcache for native-tls branch
update SPL extension for native-tls branch
vars with __declspec(thread) cannot use __declspec(dllexport)
enable native TLS by default on Windows
native tls initial patch
fixed copying of the struct as it's not being modified
avoid strlen usage in loop
Removes accidentally added files.
Reverts some unwanted changes
refixed printf fmt, used portable macros
forked bug41655 test for windows
Simplify foreach flags
Deletes patch leftovers
Replaces php5 with php7, without whitespace changes.
Avoid strlen usage
folder marks
Added missed mod str
s,PHP 5,PHP 7,
Update README.PARAMETER_PARSING_API
make the return value more logic
make use of intrinsics available with VS for bitset lookups
add the missing src file
reduce the struct size by 8 byte on 64 bit
Make header C++ compatible
Make number printing functions less generic
Use append_unsigned instead of append_long where appropriate
Use inline functions for most of smart_str
Remove SMART_STR_USE_REALLOC
Remove superfluous Z_REFCOUNTED_P check
fix possible array underflow
Split inheritance into separate file
updated the comment to charset_hint
s/PHP 5/PHP 7/
reverted too much
reverted some previous IS_ABSOLUTE_PATH related changes
expand IS_ABSOLUTE_PATH on Windows, so then strlen() isn't called twice
simplify condition
Avoid double IS_INTERNED() check
Reverted incorrect chunk
forgot to replace the strlen call
avoid multiple strlen calls for the same buffer
avoid unnecessary strlen calls in loop
fix length data types
fix signed/unsigned warning and add a note
fix condition
fix empty string check
fix an always true condition and improve the error check
remove useless condition
fix printf format
fix conditions
there can be only one ... of the identical expressions
fix condition
fix printf format
remove useless check
more usages for ZEND_SECURE_ZERO()
generalized the case with secure memory zeroing
remove useless condition 0 > unsigned
zero sensitive data more secure way
zero sensitive data more secure way
fix sprintf format
zero sensitive data more secure way
remove useless check
avoid repeated strlen usage
Update sapi_apache2.c
Update php_functions.c
Update php_apache.h
Update and rename php5apache2.dsp to php7apache2.dsp
Update php.sym
Update and rename mod_php5.c to mod_php7.c
Update config.w32
Update config.m4
Update apache_config.c
Split is_numeric_string_ex() into inline and non-inline parts
that's not char * but zend_string *
ups, this is not needed
fix CG(empty_string) init in ZTS
correct type for the thread id
Split big _zend_handle_numeric_str() into small always inlined function that makes initial check and regular big function
Expose zend_safe_address() and use it in zend_arena_calloc()
Clang attributes support
Changed "inline" into "zend_always_inline"
Moved some definitions from zend.h into more suitable header files
fix macro usage
fix atol usage
Optimized enterance into functions
reduce struct size by 8 byte on 64 bit
improve empty string check
reduce struct size by 8 byte on 64 bit
reduce the struct size by 8 byte on 64 bit
reduce struct size by 8 byte on 64 bit
avoid strlen() usage in the loop
fix printf fmt
fix signed/unsigned mismatch
fix signed/unsigned mismatch warnings
Use runtime-cache to avoid hash lookups in BIND_GLOBAL instruction
optimized colision list traverse
fix signed/unsigned mismatch
fix signed/unsigned mismatch
fix signed/unsigned mismatch
fix signed/unsigned mismatch
redo the fix with cast to size_t
redo the fix casting to size_t
redo the fix casting to size_t where applicable
fixed type
fix signed/unsigned mismatch warnings
fixed signed/unsigned mismatch warning
Ensure not evaluated twice
Added test
Initial coalesce operator implementation
Drop BC alias HASH_NON_EXISTANT
Remove HASH_NEXT_INSERT flag
Remove two more always-true conditions
Improve opcache.fast_shutdown
better error messages in ZMM on Windows
emalloc() must not return NULL
code optimization
Use SIZEOF_ZEND_LONG instead of SIZEOF_LONG
ws
cast the other way round, the sign check is already done before
it's good for gc debuging
We don't have to check for undefined CV if we fetch it for isset() operation
Switch (un)mangle property name to size_t and zend_string
Optimized FE_RESET and FE_FETCH
Remove always-true comparisons
Update types in zend_hash
fix signed/unsigned mismatch warnings
fix types
fix signed/unsigned mismatch
fix negating an unsigned
fix signed/unsigned mismatch
revamp serialization to work with size_t for Serializable
fix signed/unsigned mismatch
fix signed/unsigned mismatch
fix most of signed/unsigned warnings in vm def
NEWS
NEWS
correct fix to the natcmp_ex
fix signed/unsigned mismatch
fix signed/unsigned mismatch
fix unsigned negation
fix signed/unsigned mismatch
Replaced macro with better optimized inline function
fix initializer struct
fix signature
fix type
fix condition
Remove redundant codes
fix type
optimize path length retrieval
updated NEWS
updated NEWS
Use full duplex stdin/stdout socket
Add test script for the segfault in gc while run phpspec
avoid strlen usage in the loop
fix format
fix ftell/fseek calls
reduce struct size by 8 byte on 64 bit
fix ftell/fseek calls
better way to check for empty string
make xml_utf8_ encode/decode work with size_t
avoid repeated strlen usage
avoid strlen() usage in loop
fix int overflow preserving the old behavior
zend_get_property_info takes a zend_string* now
use nice way to achieve the property name length
make it safer for an array underrun
fix type
avoid repeated strlen() usage
reduce struct size by 8 bytes on 64 bit
avoid repeated strlen() usage
fix possible pointer truncation
better way to zero away sensitive data
reduce struct size by 8 byte on 64 bit
reduce struct size by 8 byte on 64 bit
reduce struct sizes by 8 bytes each on 64 bit
remove useless casts and checks
align 4 byte to the start of the word
fix conditions
reduce the struct size by 8 byte on 64 bit
reduce the struct size by 8 byte on 64 bit
reduce the struct size by 8 byte on 64 bit
Indention fix
reduce the struct size by 8 byte on 64 bit
reduce the struct size by 8 byte on 64 bit
reduce the struct size by 8 byte on 64 bit
use the generator to produce the header
update the html table generator
removed the emalloc result check, out of memory will bailout
replaced the check with assert as it's kinda unusual case
removed extra 1 byte member, padding will be done anyway by the compiler
reduce struct size by 8 byte on 64 bit
avoid usage of strlen() in the loop
reduce struct size by 8 byte on 64 bit
better align reduce the struct size by 8 byte on 64 bit
reduce the struct size (under circumstances) on 64 bit
check if the winver was indeed fetched
check emalloc() result
better way to check for an empty string
reduce the union size from 24 to 16 bytes on 64 bit
fix condition
avoid multiple strlen() usage
avoid multiple strlen() calls for the same
reduced struct sizes by 8 byte each on 64 bit
fix condition
reduce struct sizes by 8 byte on 64 bit
avoid strlen() usage in the loop
Drop superfluous opline for non-cv variables
Drop dead assignments
Make zend_llist_remove_tail a void function
Use more accurate sizeof
Also skip line-overwriting if SHOW_ONLY_GROUPS is used
switch to using mbrlen with VS
reduce the struct size by 8 byte on 64 bit
reduced the struct size by 8 byte on 64 bit
fix condition
reduce the struct size by 8 byte on 64 bit
reduce the struct size by 8 bytes on 64 bit
reduce the struct size by 8 byte on x64
fix possible null ptr deref
fix possible nullptr derefrence
reduce size by 8 byte on 64 bit
fix ZTS build
better align and reduce size by 8 byte on 64 bit
fix test which fails if prevous run cleanup failed
fix type
fix type
fix type
reduce the struct size by 8 byte on 64 bit
fix type
better alignment, reduced the struct by 8 byte on 64 bit
fix type
Forget to commit this part...
Correct two zlib tests to use a string, not a const
make this test a bit more tolerant when checking sleep time
remove extra semicolon
fixed the cast and incompatible pointer warning
reflect in the test that GSS-Negotiate is deprecated since libcurl 7.38.0
5.6.2 now
Don't show TEST line if SHOW_ONLY_GROUPS is used
Simplify ASSIGN code
Remove self-contradictory zend multibyte assertion
Revert "Revert "Updated UPGRADING for ext/ereg removal""
Revert "Revert "Removing ext/ereg and dependencies""
Removed ZEND_QM_ASSIGN_VAR and ZEND_JMP_SET_VAR opcodes (in PHPNG they did exacly the same as ZEND_QM_ASSIGN and ZEND_JMP_SET)
Revert "Removing ext/ereg and dependencies"
Revert "Updated UPGRADING for ext/ereg removal"
Updated UPGRADING for ext/ereg removal
Removing ext/ereg and dependencies
fix precision when fetching float through mysqlnd
Do not unload phpdbg module in any case
Add webhelper extension and support for loading extensions
Don't run travis against master (phpng)
make LTP version check a blacklist
replace zend_hash_find with zend_hash_str_find which fixes leaking the key
second big shot on porting ext/oci8
first shot on fixing ext/oci8
basic datatype fixes for ext/oci8
Don't miss warning messages
FR #67990 - Added nowait argument to sem_acquire
update NEWS
Updated NEWS for #67985
Updated NEWS for #67985
duplicate value's string for the SAPI filter
Fine tuned the order of adding request variables.
Fine tuned the order of adding request variables.
Fine tuned the order of adding request variables.
Fine tuned the order of adding request variables.
Remove unnecessary branch/temp variable
Don't anload zend extensions if ZEND_DONT_UNLOAD_MODULES environment variable is set
We don't need to check for xlat entry twice
made Visual Studio to understand that zend_error_noreturn() will not return
Added ability to make a number of "warmup" requests before an actual benchmark. (php-cgi -T [<number-of-warmup-requests>,]<number-of-benchmark-requests> <file>)
Removed IS_STR_OFFSET type and corresponding macros. Optimized string offset handling in ASSIGN_DIM opcode.
Update CODING_STANDARDS
fix null pointer deref
fixed the tests, related to the basename behaviour, bug #66395
fixed string index handling with references
fix 64 bit string index usage
Revert "Move safe_address into zend_multiply.h"
Move safe_address into zend_multiply.h
According to LSB 3.2, finite() has been deprecated with C99.
Added test case to complement commit 29397f8
Release memory for PDO Stmt ctor args
Error on multiple default blocks in a switch
Drop some unsafe-looking casting code from ext/socket
Remove old zend_string_to_double function
Split GMP tests testing multiple functions
Give proper names to GMP test files
Throw warnings when using zero modulus in gmp_powm
Adds phpversion test to prevent #67959
Updated NEWS for #67959
Add GMP tests for some uncovered branches
it's should be zend_ulong
Revert previous commit by mistake
Use PHP_GINIT to suppress incompatible pointer type
Updated NEWS for #67955
Separate php_mb_reset() from php_mblen()
Preallocate hash tables of required size
Disable format string checking by default
Revert "remove a few gcc format attributes from some printf-like functions"
Use zval_ptr_dtor_nogc to destroy literals
fix bug #67955
Disabled usage of built-in functions in write context (e.g. strlen($s)[] = ...)
Simplify BEGIN_SILENCE/END_SILENCE to not modify ini entry value back and force
5.5.18 now
5.4.34 is next
Avoid memory allocation/deallocation in BEGIN_SILENCE/END_SILENCE opcode handlers.
Skip 64bit test on 32bit
fix datatypes for gmp to be compatible with GMP/MPIR on different platforms
add a test with gmp and PHP_INT_MAX
one semicolon too much
use portable strtol
fix type
mpz functions don't work on zend_ulongs...
Implement gmp_import() and gmp_export()
fixed reference counting
Avoid string duplication
Revert "Updated UPGRADING"
Updated UPGRADING
Updated NEWS
Reintroduce fix from pull #770 in a PHP 7 way
Make DOMNode::textContent writeable
Updated UPGRADING
Updated NEWS
fix apache handler build
update NEWS
restore the length var and fix the com_dotnet ini
Refactored INI subsystem to use zend_string* instead of char*
- Updated to version 2014.7 (2014g)
Updated UPGRADING for #38409
Updated NEWS for #38409
Updated UPGRADING for #38409
Updated NEWS for #38409
Added test case
Making ini parser typed - Added ZEND_INI_SCANNER_TYPED mode for parse_ini_string() and parse_ini_file() - Added NULL_NULL token to separate it from BOOL_FALSE and BOOL_TRUE - Added zend_ini_copy_typed_value() function for zval initialisation - Updated RETURN_TOKEN() to observe scanner_mode
switch to built-in atanh() on vs2013 and up
fix acosh for vs2012 and earlier
fix asinh() on win64 for big negative values
fix acosh and asinh on win64 with vs2013+
fix C89 compat
remove a few gcc format attributes from some printf-like functions Since now PHP's printf-like functions have many custom specifiers, the amount of false-positives wasnt worth it
add a few more patterns to .gitignore
fix expected warning in test
fix dir separators in test
fix iptcembed()
updated NEWS
Use global symbol table for completion after $ in readline.
Don't depend on exact parse error messages in assert tests
Combine foreach copy / switch cond stacks
Don't distinguish between ast/list in parser
Introduce optional_expr
Remove parenthesis_expr
Simplify `argument` production
Remove 550+ compile warnings on OS X
Allow PHP 7 to install in Apache 2 on OS X
restore the old behavior for the assignment to string offset
revert the lstat part
fix stat vs zend_stat
fix implicit st_rdev element handling when negative value was passed
data type fixes
avoid usage of 'type' before the null pointer check
exclude log2 usage which requires C99 support
Add missing CVE IDs for 5.6.0
Use #66356 instead of #66714, as the latter is only a regression fix from the former.
Add an entry for bug#66060 (fixed in 5.5.8)
fixed path in test
fix NEWS for fcgi fix merge
restore FPM compatibility with mod_fastcgi broken since #694 / 67541, fixes bug 67606
use zend_string_equals_ci
Keep folder mark style in this file
resource type is int
Special-case aliases, add warning comments to implementations
skip this if we can't check the uid
fixed trim() and strtok() to work with big strings
fixed strip_tags() and hebrev() to work with big strings
make array/object APIs accept large strings as values of elements/props
replace llabs with imaxabs
Duplicate array only if neccessary
fix phar copy-on-write
rename misleading define
fix incompatible pointer
fix format
remove duplicate condition already present a line upper
solve conflicting type size_t vs int
Use better hash functions
Refactored optimizer (compile different opimizer passes separately, instead of including *.c file)
use stddef.h definitions for uintptr_t and intptr_t
better alignment, won 8 byte on 64 bit with default alignment
fix number format
fix dir separator
remove the expression parts, which are always true
fix some types and unnecessary casts
fix type
fix pg_last_notice()
Changed 'unsigned size_t' to 'size_t'
LOAD_REGS() is not used anymore
fix hash_pbkdf2()
closesocket is defined in php_network.h
closesocket is already defined in main/php_network.h
Use 'const' qualifier for pointrs to code used at run-time (the code must not be changed)
fix remaining 's' args for pgsql
fix remaining 's' args for  openssl
fixed remaining 's' args for ftp
config.guess: add ppc64le / ppcle support by Anton Blanchard <anton@samba.org>
fix linkinfo()
libtool: powerpc*le-linux support by Alan Modra <amodra@bigpond.net.au>
restore the old part of ezmlm_hash()
fixed UConverter::convert()
fix typo
fixed php_wddx_packet_start signature
fix signature
fix signature
fix signature
fix signature
's' and size_t - fix some invalid pointers and the remaining ext/mcrypt parts
's' works with size_t round 4
's' works with size_t round 3
updated UPGRADING.INTERNALS
's' works with size_t round 2
revert an accident
first show to make 's' work with size_t
Reorder fields for better nenory consumtion and data locality on 64-bit systems
Use efree_size() instead of efree() where posible
Cleanup IS_VAR handling
fixed DBG_INF macro name
Improved performance of json_encode()
reworked NEWS for 5.6.0GA
add note about 'l' and zend_long
It should be int
fix the NEWS
add the NEWS entries from the last stable release
almost forgot to bump this
from now on, this should be 5.6.1-dev
update NEWS to reflect what makes into 5.6.0 final
remove the -dev suffix from the Zend version
NEWS, UPGRADING
update the GIT-RULES with the 5.6 and the release branches
Move =&new deprecation message into compiler
Handle remaining magic constants in parser as well
Split and optimize loop
Add backup_doc_comment production
eval() with parse error uses clean shutdown now
Add type annotations to parser
Don't alloc empty jmp opnum list for single-branch if
fixed bitset computing on win64 build
temporary fix for win64
Replaced Zend Memory Manager
several signature and data type fixes
fixed several long vs zend_long casts
regenerated date parsers
fix typo
implement #67886
renamed macro
edit comment
simplify zend_long defs even more
make timelib independent from zend_long
Unused variable
Unused variable
Unused variale
better heading for UPGRADING.INTERNALS
better heading for UPGRADING.INTERNALS
fix strtol call
updated UPGRADING.INTERNALS
fix func argument type
generalize the zend_long stuff
Remove ZEND_ACC_INTERACTIVE and CG(interactive)
make bp type uint32_t everywhere
Add zend_string_equals and zend_string_equals_literal
master renames phase 7
master renames phase 6
master renamings phase 5
master renames phase 4
master renames phase 3
Update NEWS
master renames phase 2
master renames phase 1
Bug #67850: Build when OpenSSL compiled without SSLv3 support
Bug #67730: Add tests by Ryan Mauger <ryan@rmauger.co.uk>
bring back the logic to parse 64 bit props also in 32 bit build
fix a phrase
note on %pd format
fixes to %pd format usage
this test depends on the simplexml ext, not just on xml
tests image gd
Only destruct if EG(active) in zend_shutdown(). (bug #65463, #66036)
Use %d instead of object id
fix wrong type causing build error
adedd note on portable numeric macros
note on LFS macros
updated UPGRADING so far
note on hash table and sprintf
note on zpp specs
updated UPGRADING.INTERNALS with new data types
fix bug #67865
fix zpp
fixed array_pad()
fix zpp
fix zpp
fix zpp
fix zpp and a bit more
fix zpp
fix zpp
fix zpp
fix zpp
fix zpp
fix zpp
fix zpp
fix zpp
fix zpp
fix zpp
fix zpp
fix zpp
fix zpp
fixed the test
Separate values before conversion
fixed mem leak
fixed memory leak
updated NEWS to fit last release
remove bogus locale use from test
fix the version requirements for these tests
correct version number requirements for this test
use a suitable number of patterns to show the bug is resolved, not a stupid number that could cause memory limit to be exceeded or other side effects
only run this test if SimpleXML is loaded
Avoid reallocation and copying
yet trivial fixes to mysql exts
dtor handler must be set
NEWS
NEWS
avoid clash when stdint.h was included after win32/php_stdint.h
make g++ see all the stdint.h stuff
fix test
fix test
yet trivial fixes
more fixes to ext/iconv
fix directory separator in test
fixed sysvshm
fix index type
more fixes to ext/spl
fix zpp
fix types in virtual cwd
Introduced get_resources() function. It may be used for debugging and testing to identify resource leaks. Changed ext/standard/tests/http/bug60570.phpt to use this function instead of unsafe attempt to catch resource leaks using get_memory_usage()
fixed count_chars()
fixed nl2br
NEWS
fix php_sapi_filter
fixed variable corruption under win x64
yet more fixes to zpp
phpdbg doesn't build due to the phpng merge, distable its build & test runs
phpdbg doesn't build due to the phpng merge, distable it
Reverted incorrectly changed test. Now it's the same as in PHP-5.6.
fixed some incompatible types
fixed incompatible types usage
fixed memory leak
NEWS and UPGRADING
Just return, no need for RETURN_NULL()
Add NEWS entry for bug #67730
ported opcache
Add CVE ID for bug #67539
Add NEWS entry for bug #67492
Add NEWS entry for bug #67730
Add NEWS entry for bug #67730
Add CVE ID for bug #67539
ported apache handler
ported fcgi
Use zend_ polyfilled nan/finite, check finite
ported ext/intl, bugfixes to go
fix hash
Updated 32-bit << test
ported ext/com_dotnet
Switch use of strtok() to gd_strtok_r()
ported ext/gmp
ported ext/gettext
ported ext/gd
ported ext/ftp
ported ext/filter
ported ext/fileinfo
fixed exif
ported ext/enchant
ported ext/dom
Updated << 64-bit tests
Prevent bit shift count wrapping quirkiness on some CPUs for left shift
Cast NaN and Infinity to zero
Updated >> 64-bit tests
Prevent bit shift count wrapping quirkiness on some CPUs for right shift
Return FALSE on bit shift by negative number
ported ext/json
ported ext/ldap
ported ext/mbstring
ported ext/odbc
ported ext/openssl
ported pcntl
ported from pdo - pgsql, odbc, mysql, firebirt, dblib
ported pdo and pdo_sqlite
ported ext/mysqli
ported mysql and mysqlnd
ported ext/pgsql
ported ext/phar
added php_off_t alias
ported ext/posix
partially ported ext/pspell, should be more for zend_string usage
fix incompatible types
ported ext/session
ported ext/shmop
ported ext/simplexml
fixes to ext/skeleton
fixes to ext/snmp
ported ext/soap
ported ext/sockets
port sysvshm, sysvsem and sysvmsg
fixes to tokenizer
ported xsl, xml reader and writer
fix uninitialized args usage
ported ext/sqlite3
ported ext/zip
ported ext/zlib
fixes to ext/dba
add credits
ported ext/curl
ported ext/calendar
fixes to ext/bz2
fixes to ext/bcmath
5.4.32
brought back that vs2012 fix
fix merge issue in previous (again)
fix merge issue in previous
fixes to iconv
fix merge for #67717
NEWS
NEWS
NEWS
C89 compat
basic macro replacements, all at once
c89 compat
fix potentially missing NUL termination
added missing define
fix wrong pointer indirection
Bump version to 7.0.0
C89 compat
more fixes to ext/standard
refix the dump stuff again
fixed splfixedarray
Improved error message
BFN.
fixes to date
improve the grammar for my recent UPGRADING note
Adjust serialization tests to not rely on auto-vivification order
mention the changes regarding ReflectionClass::newInstanceWithoutConstructor in UPGRADING see the discussion on the mailing list and in the pull request for details: https://github.com/php/php-src/pull/733
further fixes to ext/standard
Accuracy
fixes to string functions
Return old scale value from bcscale()
fix typo
renamed _z_param_long
rename zval_get_long and fixes to some string functions
Change to ext/reflection should be in its own category
Comment clarification
Updated NEWS for d790ec
Old comment, whitespace
Don't allow unbound scoped closures; make ->call used passed object as scope
fixed strspn
more fixes to var_dump and co.
Removed unused variable
some more pure naming replacements
regenerated parser files
fix THIS_HASHVAL
Correct typo in comments: 'initialized'
typofixes
typofixes
mostly fixes to spl, but also some other
Drop znode extended attribute and unused union members
Implement a[0] syntax from merge
Add tests for calls to nested, *non*-compile-time-resolveable functions See https://github.com/thekid/php-src/commit/a1a4ba95117cca77b6a669d01b1cf97ea4fcb507#commitcomment-7414362
Make list of opcodes used for nesting calculation consistent   with `zend_do_convert_call_user_func()` in Zend/zend_compile.c
MFH
further fixes to ext/standard and zend
increase the stack size for cli and cgi
further fixes on core
fix set_time_limit, substr and some more
fix some cases with fast zpp
several fixes -
fix macros in the 5 basic extensions
first shot on merging the core fro the int64 branch
Update NEWS
Update NEWS
Add NEWS
ZEND_INIT_FCALL_BY_NAME can have non-string literal
ZEND_STRLEN and ZEND_DEFINED have IS_VAR results for now
Update opcache for new AST structures
Restore old evaluation order
Better version checking
Better version checking
Better version checking
Add copyright header
Remove old version PHP supports
Parameters with duplicate names are not allowed anymore in PHP7.
Behavoir of func_get_arg() and func_get_args() was changed in PHP7. Now they show current values of variables corresponded to passed arguments instead of originally passed values.
Bump version to 7.0.0-dev
Update Version Number :)
Unused variable
add NEWS for 5.6 too
fix test
split the glob() test to test different basedir
fixed glob() edge case on windows, ref bug #47358
- fix bug #47358, glob returns error, should be empty array()
Add NEWS entry for log() improvements
Patch for bug #67839 (mysqli does not handle 4-byte floats correctly)
Update Git rules
Back to -dev (with EOL notice in NEWS)
Restored "???" mark in the place that might be changed later
It's okey for use a stack value here (deleted immediately after use)
cleanup
new NEWS block for the next release
Avoid reallocation
It's 2014 already, fix copyright year where user visible
cleanuo (use zend_string instead of char*)
cleanup
cleanup
PHP 5.3.29
cleanup
cleanup (we don't have to duplicate elements of module_registry)
cleanup (we don't have to duplicate elements of stream_filters_hash)
Some changes were lost in the merge commit of #66091
cleanup
Updated NEWS for #66091
Updated NEWS for #66091
Updated NEWS for #66091
cleanup (use zend_string* instead of char*)
clean up - remove checked questions
cleanup
clean up - avoid realloc
updated NEWS
updated NEWS
updated NEWS
backported the fix for bug #41577
fix the failing date tests introduced with the latest timezonedb update Derick confirmed on irc that the new/current behavior is the correct and that the tests should be updated to reflect it
ext/pdo_odbc support for phpng (tested with unixODBC and mysql driver)
ext/odbc support for phpng (incomplete)
Implemented ext/com_dotnet support for phpng
fix incorrect cast of comparison function and signature of function
update zend_make_printable_zval to take TSRM context
fix ZTS build
NEWS entry for e6d93a1 / d73d44c
restore FPM compatibility with mod_fastcgi broken since #694 / 67541, fixes bug 67606
Add __debugInfo() to UPGRADING.
cleanup
fix TS build
Update NEWS
Update NEWS
Update NEWS
Small tidy ups and raise visibility of GitHub PR process
Bug #41631: Observe socket read timeouts in SSL streams
wrap int8_t and int16_t with #ifdef to avoid possible clashes
- Updated to version 2014.6 (2014f)
Removed Countable::count() change info from UPGRADE.INTERNALS too
NEWS and UPGRADING for intdiv()
Revert "Add SO_REUSEPORT + SO_BROADCAST support via socket stream context option"
Use callback structure
Add EXPECTF
5.5.17 now
5.4.33-dev now
5.4.32 RC1
Add SO_REUSEPORT + SO_BROADCAST support via socket stream context option
Add SO_REUSEPORT + SO_BROADCAST support via socket stream context option
typo
BFN
BFN
Don't waste SHM for unused Buckets
Delete immutable arrays copied into SHM (related to bug #67725)
typo
typo
typo
NEWS
NEWS
NEWS
backport the fix for bug #67739
fix macro
add test
xmlwriter_full_end_element tests
Tests for writeAttributeNS and xmlwriter_write_attribute_ns
Patches #67739
PHP_INT_MIN and _MAX tests
NEWS and UPGRADING
Added PHP_INT_MIN
PHP 5.3.29RC1
Bug #51096 - Remove unnecessary ? for first/last day of
execute_data->return_value should be initialized when call internal constructors
EA must be initialized
Moved streams related functions to xp_ssl.c
Updated NEWS regarding LiteSpeed SAPI
Remove duplicate NEWS
Update NEWS
Update NEWS
Update NEWS
BFN
BFN
Support doc comments for propreties
Mark some small functions as inline
We need to turn off any strict mode here for this warning to show up
Disable restrictions regarding arrays in constants at run-time. For the discussion around it, see the thread on the mailing list: http://www.mail-archive.com/internals@lists.php.net/msg68245.html
Use ZVAL_COPY until proven wrong
Rename _tmp_compile_const_expr
Weaker recursion during pre-evaluation
Immutable arrays for the recursive case as well
Updated NEWS for #67693
Updated NEWS for #67693
add missing entry to NEWS
add missing entries to NEWS
add NEWS block for the next RC
NEWS entry for #67713
update the exception message to better match the actual check
ReflectionClass::newInstanceWithoutConstructor() should be allowed to instantiate every class except those internal classes with a final __construct()
Undo inadvertent commit of php_version
Corrected patch for bug #60616
Rename ::apply to ::call for the sake of JS consistency
Immutablize constant leaf arrays
Formatting
Added test for unbound_scoped
build_runtime_definition_key returns zend_string*
Added optional bool param $unbound_scoped to Closure::bind and ::bindTo
fixed support for references
Wildcards should only be used in the first name component; fixed comment style
ext/interbase support (incomplete)
Implemented Closure::apply
Change current_namespace to a zend_string*
For filenames a pointer comparison is sufficient
Rename to zend_str_equals_literal and turn into a macro
zend_str_equals_str(_ci)
Use zend_str_equals more often
Add zend_ prefix for emit_op(_tmp)
fix SOAP for uninitialzed object
zend_ast_create determined child count automatically
Remove zend_ast_create_unary etc
Remove old macro/function
Remove some unused compiler globals
More dead code
zend_get_class_fetch_type works on zend_string
Remove duplicate code
We don't pay per newline...
Cleanup dead/duplicate code
Use zend_ast_get_str where possible
Add zend_ast_list* variant to parser stack element
Minor cleanups in AST code
zend_do_op_data -> zend_emit_op_data
Use separate node type for lists
fix NEWS
Store lineno for zval ast nodes more efficiently
Remove last EA usages
Use more specific parser stack nodes
Separate class type and start lineno
Store doc comments in separate stack entry from start lineno
Cleanup member modifier code
Add object initialization checks for sqlite3 classes
Create namespace_name via AST
zend_do_return -> zend_emit_final_return
Make lexer return AST nodes
Remove DUMMY_STRINGL
Add functions for create str/long ast directly
Remove dead code
Update error message
Replicate old linenos for class binding
Use arena allocator (currently leaky!)
GD: imagepalettetotruecolor tests
update NEWS
Add CVE no
Resolve futher interning issues
Expose ast via CG(ast)
Add call_user_func optimization
Implement call_user_func_array optimization
BFN
BFN
Updated NEWS for #67666
Removed second zval_copy_ctor()
Implement ZEND_DEFINED optimization
Implement ZEND_TYPE_CHECK optimization
Implement ZEND_STRLEN optimization
CT bind args before unpack
Port ZEND_BIND_GLOBAL optimization
ZVAL_STRINGL takes only three variables
RETVAL_STRINGL takes only two variables
RETVAL_STRING takes only one variable
RETURN_STRINGL takes only two variables
fixed "isset($array[true]);"
Remove declare_stack
Dead code
Implement declare()
Handle __halt_compiler()
__halt_compiler() without haling compiler
Add NS error checks
Discard NS doc comments
Code cleanup
Port top level stmt
Partial NS port (semicolon, no errors)
Port constant declaration
Set FPM_BACKLOG_DEFAULT to 511
Port function/const use
Drop dead code
Port use statement
Remove __clone test (not reason it should error)
Remove one usage of implementing_class
Dead code
Handle const expr __CLASS__ in trait
Pre-evaluate magic constants
Port __TRAIT__ and __CLASS__ to AST
Mostly finish class declarations (~50 failing tests)
Partial port of class declarations
Prepare zend_ast_decl for reuse with classes
zend_begin_func_decl
fix nmake snap when ext name is different in target dll
force atoll macro usage on windows
Enable $ replacement in exif, ldap, pdo_pgsql and tidy
See bug #67635
Throw \self etc error
No need to handle leading \ in class_name_literal
Improve class name handling
Dead code
Port trait uses
NEWS
NEWS
improve previous, add message during configure
Handle class const doc comment
Port class const decl
Port property declarations
Dead code
Load lineno when compiling exprs
Remove dead code
__autoload error
Port methods
Improve fix for #66608
New added opcodes don't need to be resloved
Update NEWS
Update NEWS
Update NEWS
update NEWS
Bug #67412 	fileinfo: cdf_count_chain insufficient boundary check
fix bug #67253: timelib_meridian_with_check out-of-bounds read
backport this piece from 5.6, related to the #66307 fix
let make test report the run-test result
Cleanup
zend_emit_jump and zend_emit_cond_jump
implemented copy libs of core exts in phpize mode
zend_update_jump_target
Remove bits of dead code
Support static closures
Handle function doc comments
Use dedicated func_decl ast node
Small cleanup
Port closures
Port closure use
fix copy the ext dll into the prefix path in phpize mode
fix default prefix in phpize mode
fix file with zero size usage in phpize mode
Revert "stash" (pushed by accident)
Update NEWS
Enable build without atoll (e.g old AIX flavours)
Enable build without atoll (e.g old AIX flavours)
implemented usage of the non core ext deps in phpize mode
Update README.md
implemented force usage of generated .h and .js deps in phpize mode
Micro optimization for the main interpreter loop
Lineno corrections
Port __METHOD__
Port __FUNCTION__ to AST
basic routines for phpize mode to
Easier to read
Add some trace info as well as update CLIENT_ flags
stash
Update NEWS for PR#723 merge
Preliminary function decl support
Add ifdef on ecdh for single_ecdh_use
Added -1 safety check, fixed test
php_error_docref
Implemented intdiv()
Port parameter defs
fix C89 compat
This test depends on expose_php being on
This test depends on expose_php being on
This test depends on expose_php being on
Test output relies on expose_php being on
1.2 is a problematic float to print out Lower the default display precision for this test
The test output is dependent on expose_php ini
The test output is dependent on expose_php ini
1.2 is a problematic float to print out Lower the default display precision for this test
Test output relies on expose_php being on
Implemented builtin instruction for strlen()
added headers install to phpize mode
Implemented builtin instruction for type check functions - is_*()
Temporary fixed the invalid read warning
Rename params -> args
Moar removal
Remove more dead code
Remove dead code
approx correct linenos in errors
Port static vars
Bug #67609: TLS connections fail behind HTTP proxy
Rewrite code to use ZEND_VM_JMP() instead of repeated ZEND_VM_INC_OPCODE() calls
Verious fixes
Store (bad) estimate of lineno with ast
Port try/catch
Updated NEWS for #67594
Updated NEWS for #67594
Updated NEWS for 34407
Updated NEWS for 34407
Updated NEWS for 34407
fixed broken merged code
fixed broken merged code
Test output relies on expose_php being on
1.2 is a problematic float to print out Lower the default display precision for this test
The test output is dependent on expose_php ini
Implemented builtin instruction for strlen()
Port switch
fix makefile in phpize mode
Fast parameter parsing API
Port foreach
Optimized array_map() and array_combine()
fixe output_as_table() when no ext was enabled
Make inner_statement_list asty
fix end of stream exception when generating makefile
Implement call_user_func() and call_user_func_array() using special opcodes. In some rare cases it leads to insignificant changes in error messages.
cleanup file headers.
Do not kill children process in pre-fork mode when parent process quit.
update to LSAPI 6.6
force ext_dep.js prepend to configure.js in phpize mode
cleanup file headers.
Do not kill children process in pre-fork mode when parent process quit.
update to LSAPI 6.6
Update LiteSpeed SAPI code to V6.4
cleanup file headers.
Do not kill children process in pre-fork mode when parent process quit.
cleanup file headers.
Do not kill children process in pre-fork mode when parent process quit.
update to LSAPI 6.6
Update LiteSpeed SAPI code to V6.4
update year & copyright
update year & copyright
turn off PGO in phpize mode
Port if (partial)
Port for
explicitly PHP_ANALYZER=no when no known keyword was passed
Support creating of ast nodes with >3 children
Port do/while
Port while
Expr stmts go through ast
Make statement asty
Port goto label
Make unticked_statement an ast node (usually NULL)
Port goto
Port break/continue
Port throw
Use data stored in current call frame instead of EG() if possible
Changed zend_make_printable_zval() to return "use_copy" instead of additional reference argument. Improved branch prediction.
Added missed warning (ext/spl/tests/iterator_035.phpt)
Partial fix that allows internal constructors to set $this to null. The address of $this passed to drectly called internal constructor in execute_data->return_value. Internal constructors should use ZEND_CTOR_MAKE_NULL() macro (insted of previous ZEND_NULL(EG(This))) to do the work.
Use ZEND_HASH_FOREACH_* macros
5.4.31
update NEWS
fix unstable test
5.5.16 now
fix unstable test
Typo
Make gdb dumpbt work again (at least partially)
Separate argument passed by reference
Separate argument
Mismatched folder marks
Specify HashTable size and optimize inserts that may not conflict
code cleanup
Another fix for uninitialized execute_data->symbol_table
updated NEWS
updated NEWS
updated NEWS
Backported the patch from bug #67407 into 5.5+
Backported the patch from bug #67407 into 5.4
NEWS
5.6 have fpm_globals.force_stderr
NEWS
NEWS
ZEND_SEND_VAR and ZEND_SEND_VAL specialization
Followup fix to custom session save handlers
Port echo
Port return statement
Skip useless ZEND_RECV opcodes
create locales and re-add test
Avoid useless check
Function can't be "interactive"
Refactored run_time_cache usage in object handlers
rm test for now
Wrong expectation in tests (for some reason backtraces contained invlalid extra frame at the top)
Wrong expectation in test (The error "Non-static method A::A_ftk() should not be called statically" is reported on caller side, so backtrace shouldn't include call to A::A_ftk()).
Wrong expectation in test (for some reason error messages didn't refer to right functions)
Wrong expectation in test (for some reason backtrace misses gc_collect_cycles() call)
Wrong expectation in test (wrong line number in backtrace)
Simplify call-frame handling
change locale - looks like not everybody has sl_SI
fix format
Make sure the generator script also creates a newline at the end of file
Add newline at end of file to prevent compilation warning
QA: Simplify code to find matching ZEND_DO_FCALL_BY_NAME CG(context).nested_calls is stored inside the initializer's result.num and inside the finalizer's op2.num, by comparing these we don't need to count manually, and are thus safer from future expansion with specialized opcodes e.g.
Adjust expected fatal error message Now also includes "on [TYPE]" after merge from master
Check for memory leaks when not using return value
Adjust expected fatal error message Now also includes "on [TYPE]" after merge from master
Add tests with arrays as parameters
Handle ZEND_NEW nesting
Also verify nesting with dynamically called static methods
Handle ZEND_INIT_NS_FCALL_BY_NAME nesting
QA: Refactor: Split tests a bit to make them more comprehendable
Support nested static calls
Handle ZEND_EXT_FCALL_END, skipping if necessary Verified with running tests with new "-e" run-tests arg: $ make test TESTS=Zend/tests/*-on-non-objects-*phpt TEST_PHP_ARGS=-e # Tests passed    :   11 (100.0%)
Add support for PHP's 'extended information for debugger/profiler' mode
Reference bug report instead of github issue in NEWS file
Verify non-CV-operands also work See discussion https://github.com/php/php-src/pull/647#issuecomment-48050551
Only allocate NULL return value if it's actually used
Also handle nested function calls via variable
QA: Simplify code to initialize a NULL value See https://github.com/php/php-src/pull/647#discussion_r14560540
Remove `return` statement which would break goto and switch VMs See https://github.com/php/php-src/pull/647#discussion_r14560483
Handle nesting correctly See feedback by @nikic, https://github.com/php/php-src/pull/647#issuecomment-48050551
Let's rename it
add more exts for Travis
Update NEWS
Use zend_string* in some places
Refactor class name resolution as well
Hack around global leak for now
Shared name production for const / fn name
Removed EG(active_symbol_table) and use corresponding value from EG(current_execute_data)
Use values from current_execute_data instead of globals where possible
BFN for bug #67551 (php://input temp file will be located in sys_temp_dir instead of upload_tmp_dir)
reorder
restore API compatibility
finish
refactor php_stream_temp_create{,_ex} and use it for the php://input stream
refactor _php_stream_fopen_{temporary_,tmp}file()
fix length overflow of HTTP_RAW_POST_DATA
Update NEWS
Add test for bug #67215
Add CVE ID
Removed EG(called_scope) and use corresponding value from EG(current_execute_data)
also add Remi to the QA credits
add Stas and Julient to the QA credits
update the credits
Removed EG(in_execution). If EG(currentent_execute_data) is not NULL we are executing something.
Add test for bug #67151
adding a reproduce script for bug #49184
Removed EG(opline_ptr) and use corresponding value from EG(current_execute_data)
Removed EG(active_op_array) and use corresponding value from EG(current_execute_data)
Uinified call frame handling for user and internal functions. Now EG(current_execute_data) always point to the call frame of the currently executed function.
Mark test as XFAIL until fixed
Messed up syntax of tests
Add tests for constant expression arrays Adding one failing (!) test for now about circular constant references embedded in a constant AST, must be fixed before PHP 5.6 release.
Update NEWs
bundle deplister.exe with releases
backported the VC12 fix for ARG_MAX
fix integer overflow in {stream,file}_{get,put}_contents()
add some missing NEWS entries
NEWS block for 5.6.0RC3
updated libs_version.txt
updated libs_version.txt
updated libmagic.patch in 5.6+
updated libmagic.patch
refcount in phpng has different meanings
Suppress warning "cast from pointer to integer of different size"
remove the NEWS entry for the reverted fpm fix
remove the NEWS entry for the reverted fpm fix
remove the NEWS entry for the reverted fpm fix
Refactored parameter passing mechanism.
Prohibited parameter redefinition
--enable-fpm for the travis build
fix the last fpm NEWS entry, the other bug is related, but not the same what we fixed here
NEWS
NEWS
adding NEWS entry for the fix for bug #65641
- CS
Updated NEWS file for recent phpdbg fixes
Replace incorrect `E` command with `ev` in watch help
Some refactoring of fn/const resolution
Drop addition of weird \ prefix for FQ consts
Rename ZEND_CONST to ZEND_AST_ZVAL
Intl's codes are really need more careful :<
Refactoring ext/intl (only compilerable now, far to finish :<)
C++ doesn't allow implicitly convert void * to other pointer type
Optimization
Suppress warning
Refactoring ext/intl (incompleted)
removing the format added by mistake, props to Solar Designer for spotting this.
Changed zend_execute_data layout to reduce memory overhead
Help C compilet to do the better job optimizing target code
Use fast comparison for (func->type == ZEND_USER_FUNCTION || func->type == ZEND_EVAL_CODE)
Keep extra args in the same VM stack segment (after all CV and TMP vars)
NEWS
NEWS
NEWS
C++ compiler doesn't allow cast a void * to other pointer type
update the date
better explanation
Reverted 387c491559f1507685740bf613070d27bce59e4d (it broke ext/standard/tests/file/bug44607.phpt)
Drop dead code
Remove obseleted grammar productions
Reuse expr for static_scalar
Refactoring: merge call_frame and end_execute_data into single data structure. Keep only single copy of each argument on VM stack (previously ZE kept two copies of each arguments for user functions)
Handle ::class in const expr via ast as well
more extensive note on unserialize() change
more extensive note on unserialize() change
Compile const refs to CONST
Compile class const refs to CONST zval
op2 is null terminated string
Add compilation state for static scalars
Remove static_scalar_base
Handle trait __CLASS__ in parser
Bring static scalar arrays in line
Bring static scalar AST more in line with normal AST
Const eval unary pm (as previously)
IS_OBJECT and IS_RESOURCE is obviously exclusive
No need to initialize it
More optimizations
Let's assume the name is already lowercased
Save some strlen
Use ZEND_HANDLE_NUMERIC
remove bug67072_2 test for 5.6+ since we'd have cleaner solution
Better fix for bug #67072 with more BC provisions
Better fix for bug #67072 with more BC provisions
update NEWS
5.4.30
Remove temp file committed by accident
Don't use zend_string for other fields (only name here is enough)
Better fix for bug #67072 with more BC provisions
Refactoring: use call_frames instead of call_slots
Implement constant expression folding as a separate pass
Cleanup (refactoring is finish)
We don't need extra 1 byte anymore
Respect the origin behavior (fix one test: ext/pdo_mysql/tests/bug_33689.phpt)
Use zend_string in mysqlnd
Add initial manual page for phpdbg.1
typo
NEWS
Better fix for phpdbg + libedit - fix include - disable coloured prompt only with libedit
Better fix for phpdbg + libedit - fix include - disable coloured prompt only with libedit
Better fix for phpdbg + libedit - fix include - disable coloured prompt only with libedit
testcase for 67468 (only for debug build, as I could not create a stable segfault without loading other exts like pgsql)
mention 67468 fix in NEWS
Actually, I don't know how it works. (maybe I should re-start again :<)
update CVE
Implement CT eval of binary expressions
Better fix for bug #67072 with more BC provisions
Better fix for bug #67072 with more BC provisions
add CVEs
Move T_STRING_VARNAME handling
Support string interpolation
zend_ast_dynamic_ast returns new node
Remove dead code
AST stage 2.4
Code cleanup
fixed memory leak
Hide warning message after fatal errors
Check if socket is still alive
skip this test which fails without network
Refcount may have different meaning in PHP NG
Add ability to specify additional attr in AST
Make ast->children a uint
Remove dead code
Support yield without parens
AST stage 1.9
unused variables
add missing entry to NEWS
add missing entry to NEWS
add NEWS block for 5.6.0RC2
Add support for gb18030/MySQL 5.7
new test, missing in ea466a3
Suppress test failure with MySQL 5.7
Use arena allocator for optimizer temporary data structures
copy_data seems useless now
Refactoring mysqlnd (incompleted, only mysqlnd ext compilable)
Use arena allocator for zend_class_entry, zend_op_array and zend_property_info that live till the end of request
Update copyright year to 2014
Update copyright year to 2014
Update copyright year to 2014
Update copyright year to 2014
Update copyright year to 2014
Update copyright year to 2014
Update copyright year to 2014
NEWS
Don't include trailing zero into hash function
Update copyright year to 2014
Update copyright year to 2014
Update copyright year for re2c generated files
Update copyright year to 2014
Update copyright year for re2c files as well
Avoid useles constants update
Optimize out useles paths
Use new zend_hash iteration API
Small call/return improvement
fix failed test
Refactoring imap (in progress)
Added tests for bug 67436
Updated NEWS
Update NEWS
update NEWS
update NEWS
update NEWS
fix bugsnet #67212: phpdbg uses non-standard TIOCGWINSZ
change the default terminal width from 100 to 80, as that is the most common value
AST-based compiler: Stage 1
- Updated to version 2014.5 (2014e)
remove all references
Follow 308 Permanent Redirect responses.
Add 308 and 426 to the HTTP response code map in the CLI server.
Keep 308-399 HTTP response codes when header('Location:') is called.
Make run-tests.php PHP-5.4 compatible
Check for all phpdbg compitble php versions
Revert "Add optional second arg to unserialize()"
Improved assignment code
5.5.15 now
Use absolute addresses as branch targets for NEW, FE_RESET and FE_FETCH
update NEWS
5.4.31 next
5.4.30 rc1
Add NEWS. This doesn't need UPGRADING (or an RFC), IMO.
Add a mime type map generation script and update the header.
Move the mime type map out of php_cli_server.c for easier generation.
Replace the CLI server's linear search for extensions with a hash table.
Improved conditions order
fix test
Remove unused included file
Remove unused codes
NEWS
NEWS
NEWS
NEWS
NEWS
NEWS
Bug #67412 	fileinfo: cdf_count_chain insufficient boundary check
NEWS
NEWS
NEWS
NEWS
NEWS
NEWS
Update info.c
fix merge from php 5.5 (already fixed, differently)
NEWS
NEWS
Optimized for fast path
Avoid repeatable zend_is_autogolobal() calls
Optimized for fast path
Improved ZTS support
Add line in run-tests.php help
Avoid reallocation
enable phpdbg for the travis build, and also run the testsuite for it
Comparison optimization
Avoid unnecessary memory allocation/deallocations and pcre calls
Avoid extra function call on hot path
Finish fixing phpdbg on ZTS build
update news
add news
Bug 49898 __getCookies() method implementation
Removed another cvsclean file
Removed cvsclean and svnclean tools
Bug 64744 Show the type of the non-object for more descriptive errors
fix order
fix order
add news
Added support for parsing ssl certificates using GeneralizedTime format.
remove phpdbg directory from source tree on travis
Remove superfluous echos.
Remove superfluous echos.
use ./tokenizer_data_gen.sh to for adding T_POW & T_POW_EQUAL
Remove (&ast->u.child)[i] weirdness
move NEWS entry in the right place
Accept static member fetch in new variable (BC)
Bundle pcre-8.35 with sljit support
NEWS
NEWS
NEWS
Introduced new BIND_GLOBAL instraction instead of FETCH_W+ASSIGN_REF pair that caused a lot of useles checks
GC doesn't count scalars and immutable arrays in the same way
drop exec perm on doc files
fix test for 5.4/5.5
fix test for 5.4/5.5
Speedup string equality check
Simplify code
restore correct behavior of DateTime
Use reference counting instead of zval duplication
fix test use invalid code
add test for previous fix
NEWS
NEWS
NEWS
Allow only simple variables with global keyword
update news
update NEWS
Reference counters in PHPNG may have different values
Avoid useless merge
PHP 5.4/5.5 compability in phpdbg_watch.c
fix gcov data with some locales (again)
fix gcov data with some locales (again)
fix gcov data with some locales (again)
Update NEWS
(re)add cve number in NEWS, from 5.4.29
Simplified and optimized ZEND_HANDLE_NUMERIC()
NEWS
NEWS
NEWS
add NEWS block for 5.6.0RC1
Optimized conditions order
Optimized conditions order
Avoid copying of immutable arrays
cleanup
cleanup
fix macro
Update NEWs
Update NEWs
Remove duplication
Handle FUNC_ARG fetches on temporaries
Support isset() on temporaries
Forbid writing to temporary expressions
Add another static member access test
Properly handle property read on const/tmp
Property handle calls on [] and '' consts/tmps
Support directly calling closure
Introduce dereferencable_scalar to simplify future additions
Add two initial tests
Generalize static access syntax
Remove now unnecessary code in begin_method_call
Remove object_stack (mostly)
Update another test
Update two tests with new semantics
Allow arrays + object access for new expressions
Integrate combined scalar as dereferencable
Generalize expression dereferencing
Minor cleanup
Cleanup old grammar rules
Reintroduce new expression dereferencing
Remove reference_variable indirection
Make function calls directly callable
Recursive definition for object proprety fetches
LTR static member access
Use recursion for property fetches
Get rid of base_variable_with_function_calls
Temporarily disable complex variables in new expressions
Change precedence of $ operator
Improved conditions order
Avoid useless duplication of immutable arrays
Avoid in-place modification
typo
Check for zero-length keys in spl_array_skip_protected and don't skip them.
Introduced immutable arrays. They don't need to be copyed and may be used directly from SHM.
Improve gdb ht and zval dumps
Improve class constant fetch fix
A few more fixes and improvements for gdbinit
Initialize GC_TYPE_INFO for EG(symbol_table)
Use zend_long_to_str in wddx
Use zval_get_string in implode
Use smart_str_append_long in implode
Use zend_long_to_str in curl
Use zend_long_to_str in pcntl
Clamb gdb string output at 256 chars
Use new zend_hash API
Use new zend_hash API
Use new zend_hash API
Use new zend_hash API
Use new zend_hash API
Use new zend_hash API
Use new zend_hash API
Use extended iteration API to avoid in-place modification
added CVEs in NEWS
Use extended iteration API to avoid in-place modification
Use new zend_hash API
Avoid in-place modification
Use new zend_hash API
Avoid in-place modification
Reference counter in phpng may have a bit different meaning and must not be the same
Use new zend_hash API
Avoid in-place conversion
updated libmagic.patch for 5.6+
updated libmagic.patch for 5.4+
update NEWS
5.5.13 release date
fix zpp
fix zpp
Escape non-printable characters in the junit XML output
Escape non-printable characters in the junit XML output
retval's initializing is already taken by zend_call_function
update NEWS
backport this piece from 5.6, related to the #66307 fix
Use new zend_hash API
fix my last commit with some locales
fix my last commit with some locales
fix my last commit with some locales
Use new zend_hash API
Add test for previous commit
Use specialized functions instead of macros
Optimize func_get_args() to build packed array
Save some unnecessary zval copying
Improve call_user_function performance
Removed useless initializations
Update NEWs and add a test
Finished persistent PDO implement
This seems better
Save one zval copy
Don't use cast (compiler friendly)
typo
fci->retval is always set
Added folder mark and codes style
Added folder mark
Use optimized zend_array_dup() function. convert zend_hash_num_elements() and zend_hash_next_free_element() into macros.
Further test fixes for the fdb2709 breakage.
Remove incorrect EMPTY_SWITCH_DEFAULT_CASE() usage
Remove UB in signed printing macro
Optimize int to string conversion
Added tests for ZipArchive::addGlob() and ZipArchive::addPattern()
Assert that EMPTY_SWITCH_DEFAULT_CASE() cannot be reached in debug
Bug #41577 fix: reinitialization of dotnet_domain structure member
Make a start on phpng compat
Add microseconds to the serialised form of DateTime objects.
Improved test for bug #62479
Refactored ext/pdo_firebird (didn't do test)
Refactored ext/dba (tests passes, but segfaults need to be fixed)
Second set of changes to mysqlnd for phpng. A bit problematic is that the streams seem not to be completely ported. Also there are some hacks in the streams about EG(regular_list) and EG(persistent_list) and these need to be carefully checked. The test suite should catch them, however.
First set of phpng changes for mysqlnd
Defensive check
Add one more check to skip getting into code that will do nothing
Reverted last commit
More accurate mysql_close()
Refactoring ext/snmp
Revert changes to configs by accident
Refactored ext/ldap
Refactored ext/ldap
remove mysqlnd_bt.c as it a long dead code
Prevent crash in case of SQL error
Prevent double resource free
It's a zend_array not Hashtable (fixed segfault)
fix typo in ODBC code
Refactoring ext/pgsql (incompleted, only compilable)
Use new iterator macros
This should be this (broken compiling before)
Removed the old hack that was originally developed to support constants in array indeces, and isn't needed anymore after the Bob's patch.
Use new hash iteration API and avoid old zend_hash_update_current_key() hack
Support for __debugInfo (Joe Watkins)
Optimize ZEND_POW (Rouven Weßling)
gcov: tentative fix for broken coverage data after fix for opcache coverage slightly hackish, but works. The idea is that we want to give priority to .gcda files in .libs dirs vs the files in the upper level dir
gcov: tentative fix for broken coverage data after fix for opcache coverage slightly hackish, but works. The idea is that we want to give priority to .gcda files in .libs dirs vs the files in the upper level dir
gcov: tentative fix for broken coverage data after fix for opcache coverage slightly hackish, but works. The idea is that we want to give priority to .gcda files in .libs dirs vs the files in the upper level dir
phpng support for ext/readline
phpng support for ext/enchant
PHP 5.4/5.5 compability in phpdbg_watch.c
Regenerated parser
more port to phpng, zend_string and hash, work in progress
Remove usage of pointless COOKIE_SET_COOKIE constant.
Finish ext/sockets
fix smart string usage (work in progress), ps: a lot of len tests are done twice or more, rooms for cleanup here
fix init, new smart_str struct (use zend_string now)
fix hash API calls
fix signature according to apply_func_arg_t
only used if HAVE_NOFOLLOW
Z_TYPE_PP > Z_TYPE_P
fix zend_hash_get_current_data_ptr_ex call
Refactoring socket (only compilable now)
it make no sense to create a reference to object
Initialize zvals
Refactored shmop
hash find returns zval* now
Restored __destructor() behavior
Prevent recursion in ZF2 Parameters class
wrong macro usage, we expect a DOM object here
Finish ext/pdo_pgsql (3 tests fail, 1 due to knew issue, 2 also fails in trunk)
test the right length and remove unused var (remaining from 'old' version)
fix TS build
fixed reference counting and memory leak
Partial fix for XML references handling
Buffer has to be reallocated on each loop iteration
Support for IS_INDIRECT
Buffer has to be reallocated on each loop iteration
fix casting
return ptr, not status
used only in the #ifdef 0
 fix void* ptr arithmetic
Made a little clean up
check for EG(excepton)
key->len doesn't include trailing space anymore
add support for pdo-pgsql in phpng refactoring
Refactored ext/xsl, need some help in 3 tests failed
unused var
forgot that hash uses ending 0
fix ts build
fixed refcounting
fix leak
zend_hash_del>zend_hash_str_del
unused local var
fix invalid use of STR_FREE > efree
RETURN_STRING takes the char* only now (always copied)
RETURN_STRING takes the char* only now
fix build
Array with var_args must not be deallocated any more
Allow just set or get context passing NULL pointers
Removed support for old-style resource destructors (only ext/soap used it)
ext/soap support for phpng (incomplete - just compilable)
Test
fix windows build
ptr needed here
Use defined macro
Refactored tidy (all tests passes)
5.5.14 now
adding NEWS block for beta4
5.4.30 next
enable email notifications
update NEWS
update NEWS
update NEWS
Added support for parsing ssl certificates using GeneralizedTime format.
Reverted wrong commit Xinchen, stop commit changed configs :) You may use environment variables to ovverride default settings
- Updated to version 2014.3 (2014c)
Terminate string Useproper hash function
C89 compat
In most user extensions functions like mysql_close() should use zend_list_close() instead of zend_list_delete(). This closes the actual connection and frees extension specific data structures, but doesn't free zend_reference structure that might be referenced from zval(s). This also doesn't decrement the resource reference counter.
Nested PCRE calls may clobber extra->mark and it has to be reinitailized This fixes invalid memory writes (detected with valgrind) in Zend/tests/closure_047.phpt and Zend/tests/closure_048.phpt.
Added comment
hash keys now use actual string length without leading zero
Save one type checking if the type is already string
This should be removed too
Remove zval **
port dns_win32
port sendmail to windwos (untested yet)
port proc_open to windows (untested yet)
restore unexpected commit
Convert to unpacked before deleting elements
Support for ext/phar (all tests passed)
fix test - output can be chunked
ext/phar support (incomplete)
Refactoring ext/xmlrpc (incompleted)
Removed error message that breaks phar
ext/phar support (incomplete)
fix test
fix test
Refactor ext/gd (all tests passes)
Add bug fix to NEWS
Update UPGRADING according to bug fix
fix test
improve CURL tests to allow testing without separate server
improve CURL tests to allow testing without separate server
fix bug #67253: timelib_meridian_with_check out-of-bounds read
fix news
add tests stuff to README
Refactoring wddx (incompleted, is there any one use it? )
Updated NEWS
Finish refactoring of MySQLi
Various bug fixes (now 17 tests fails, it is 11 in trunk)
Various bug fixed
Refactor MySQLi (incompleted, only compilable now)
Add support for pspell
- Move checking
Removed another cvsclean file
Removed cvsclean and svnclean tools
update for phpng
Test push (previous push didn't send mail?)
Added smart_string to avoid string duplicated
updated NEWS
Bug #67238 Ungreedy and min/max quantifier bug in PCRE 8.34 upstream
Use strpprintf
Added vstrpprintf strpprintf to avoid duplicate string
Refactor sysvsem, sysvshm, sysmsg
Code cleanup in proc_open
Finish ext/curl (7 tests fails as trunk)
Use zend_string for better performance
Refactoring ext/curl (only compilable now)
Support for ext/phar (incomplete)
Finish bz2 (all tests passed)
Support for ext/phar (incomplete)
There is memleak
bz2 changes for phpng
update skeleton
recode update for phpng
ext/pdo_mysql/tests/pdo_mysql_attr_oracle_nulls.phpt fails in trunk as well while building with libmysql
Revert "ext/pdo_mysql/tests/pdo_mysql_attr_oracle_nulls.phpt fails in trunk as well while building with libmysql"
ext/pdo_mysql/tests/pdo_mysql_attr_oracle_nulls.phpt fails in trunk as well while building with libmysql
oops, 5.4 and 5.5 use malloc in TSRM
make release tags not fail Travis CI
make release tags not fail Travis CI
don't bother with travis for now, not ready yet
There should been memory leaks(and don't use pointer cast)
Revert "Going to refactor mysqlnd"
We shouldn't modify strings in-place (it may be interned strings stored in SHN)
Interned strings must not be modified in-place MAKE_COPY_ZVAL() should be changed into ZVAL_DUP()
Going to refactor mysqlnd
Bug #67224: stream_socket_enable_crypto()
Initialize "retval"
Re-applyed Bob's patch with minor fixes
fix exif, thnx laruence
typo in var name
Prefer the macro we defined
Rerevert previous commit to phpt by accident
Refactored filter
phpng updates for exif
Refactor fileinfo
-- missing length declaration, may have worked w/some gcc as length is not used in the macro but still need it, ifdef just make code uncertain. will get opt out anyway if not used
Refactor pdo_mysql(incompleted, some tests failed due to no mysqlnd)
Reverted Bob's patch (it breaks many tests when run with opcache and needs to be fixed first).
Added support for ext/openssl
Add tests for previous commit
Streamlining of cookie handling in ext/session and setcookie
This test requires the hash extension.
Remove dead code from ZEND_THROW
Sync zend_is_true with convert_to_boolean (fixes GMP test)
Port ext/gmp (one failure)
Removed now superfluous #define IS_CONSTANT_ARRAY_EX
Re-added fix for bug #66015 and adapted for phpng branch
added support for ext/posix
NEWS
Added support for ext/pcntl (incomplete; ext/posix required to run all tests)
...
XFAIL-- for bug #67198
remove useless indirection
fix bug #67198 (php://input regression)
XFAIL-- for bug #67198
remove useless indirection
fix bug #67198 (php://input regression)
fix leaks in here
Added support for apache and apache2handler SAPIs (They seem slower than FastCGI)
Mark all strings stored in SHM as IS_INTERNED to avoid refcounting
rename a constant - old name to new name
fix for phpng, failing RFC2144 test
fix ftp for ng
Added comment with problem description and two soltions
Restored original EG(scope) behavior when call object methods
PDO code assumes that different parts of the union alligned in special way
Initialize CG(one_time_string) in ZTS as well
test for bug #67198
clean up
Finish Zip (all tests pass)
Romove unnecessary proxy macro
GC checks during argument release don't make sense
Refactor zlib (all tests pass)
Refactor gettext
Refactor bcmath
Port iconv (all tests passes)
Don't use this (keyword)
Refactor Zip (1 test failed)
Port JSON
fixed ZEND_DEBUG usage
Get php-fpm to work
updated libmagic.patch
added missing stdint header, bug #66907
fix macros
Use self instead of this(keyword)
Port XMLWriter
Port XMLReader
/me blushes, really hard
Add STR_ALLOCA_* API, use in get_method and verify_arg
Make they are in the same style of Z_ISREF
Refactor XML (incompleted)
only build and test nts non-debug and ts debug builds as discussed at https://github.com/php/php-src/pull/654
Revert "show leaks in their own group" using valgrind would be a bit too much for travis I guess.
show leaks in their own group
Use the right path for the suggested PHP invocation in ext_skel.
Changed to more understandable NEWS message
one heading is enough
add new NEWS block for alpha3
XFAIL the leaking multibyte tests, we should really get to the bottom of this
Updated NEWS for fixed phpdbg issue #85
add missing NEWS entry to the correct release where it was added
5.5.12 was released yesterday
add missing NEWS entry to the correct release where it was added
Updated NEWS entry for phpdbg
add missing NEWS entry to the correct release where it was added
add some missing NEWS entries
Avoid superflous allocations in convert_to_string
zend_stack_top() now returns pointer directly
Don't allocate zend_stack elements individually
Comment out cast_object for IS_NULL
JMPZ/JMPNZ/JMPZNZ optimization
Split IS_BOOL into IS_FALSE and IS_TRUE
fix test locality inconsitency
BFN
fix bug #64247 (CURLOPT_INFILE doesn't allow reset)
Optimized JMPZNZ to avoid multiplication at runtime (may be it makes sense to use relative addresses everywere it'll lead to Position Independent Code)
Added further notice about removal of IS_CONSTANT_INDEX/ARRAY macros
separate travis jobs for debug and non-debug builds
separate travis jobs for TS and NTS builds
put this test back to XFAIL, as it was before, since it is still leaking memory
updated NEWS
updated NEWS
Changed order of types
Add tests verifying method calls on non-objects work inside eval()
Add tests for indirect calls to methods on non-objects http://news.php.net/php.internals/73823
Improved logarithm of base 2 and 10 of standard math functions
Cleanup ZEND_MODULE_API_NO => 20050922
enable gmp for tests
C89 compat
some more after merge fixes
fixed macro names
removed /EHa as __try/__catch syntax is used anyway
Add dst parameter to convert_object_to_type macro
Use convert_scalar_to_array only for arrays
Uhm, do we really need to support that?
Optimize ZEND_CAST to avoid zval copies
Replace more convert_to_* calls
Align zval_get_long/double with zval_get_string
Move more code to use zval_get_string
More zend_string usage in PCRE
fix ZEND_DEBUG usage
fixed test
updated NEWS
updated NEWS
Use appropriate macros
Use appropriate macro
Avoid useless allocations
update NEWS
update NEWS
add a test case previously broken by a bad fix
Enable PCRE JIT compiler
Optimized constant lookup
updated libmagic.patch for 5.6+
updated libmagic.patch
backport this piece from 5.6, related to the #66307 fix
updated NEWS
Reimplement strtr()
Various bugs fixed
Redesigned zend_execute_data layout now EX(object), EX(scope) and EX(called_scope) arr properties of the current function execution co ntext. They are set during zend_execute_data initialization and never changed.
fix CFLAGS_PHPDBGS and some formatting
use a portable strndup implementation
fixed C89 compat
prepare config.w32
fix dll export
add parser files to dist
Small zts fix
Port ext/hash
Allocate zend_strings with correct size
Refactor pdo_sqlite (only compilable)
Clean up (use zend_string and foreach macros)
Use symbolic names instead of magic constants + optimization
Initialize hash as unpacked if it contains string keys
Pass expected array size hint in INIT_ARRAY
Refactored sqlite3 (all tests passes)
USE ZEND_HASH_FOREACH_* macros
Refactor PDO (only compilable now)
Optimized ZEND_SEND_REF
ZEND_SEND_* optimization
Cache knowledge about missing property_info
Use shorter call chain
Added autogenerated phpdbg parser files to .gitignore
Use fast comparison function
Chiper __autoload() function caching
Avoid string duplication
fixup help, behaviour of step command when not executing
buffer input to repeat commands
zend_isset_isempty_dim_prop_obj_handler() split into separate handlers. (Actually, it shared near nothing)
remove -e option in favour of taking script from argv[]
Reverted chunk committed by mistake
Handle references in "slow path"
Convert zval_get_string() into "fast path" macro and "slow path" function
Fast path for pre/post inc/dec
Use zval_get_string in a few more places
Use zval_get_string in print_zval and propagate TSRMLS
Bring zval_get_string implement in line with make_printable_zval
Combine HashTable.flags and HashTable.nApplyCount into single 32-bit word
Cleanup
Use alloca() for temporary allocation
Inline simple function
Removed duplicate code
Use ZEND_HASH_FOREACH_* macros
Use ZEND_HASH_FOEACH_* instead of zend_hash_apply_*
Avoid useles copy ctor
Allow valid multi-byte utf-8 characters to be allowed as file names in phar archives.
step by line and opcode modes preserved, set stepping added, help updated
rename next to continue, cleanup help
Update help
Stepping is now line by line with gdb style command
Breakpoints now hit only once if line was not switched
Added error on compile failure in exec cmd
Add test verifying chained method invocations
remove compile command
auto compile when execution context set
Add example how framework code could convert E_RECOVERABLE -> exceptions
Make E_RECOVERABLE_ERRORs (4096) show up
Adjust expected outcome (non-Zend tests)
Regenerate
Adjust expected outcome
Initial implementation
More ZEND_HASH_FOREACH_* related changes
ZEND_HASH_FOREACH_* usage
Use ZEND_FETCH_FOREACH_* macros to iterate over HashTables instead of zend_hash_move_forward() and family.
updated libs versions
added some notes about the win build system
UPGRADING note about bug #67072
UPGRADING note about bug #67072
UPGRADING note about bug #67072
refixed the test related to bug #67072
Improved the fix for bug #67072, thanks Nikita
Optimized zend_leave_helper()
Move libxml_destroy_fci to RSHUTDOWN
Optimize CASE(TRUE, X) into BOOL(X) (this pattern affects wordpress)
These links to ~helly don't work anymore.
These links to ~helly don't work anymore.
Cache op_array->run_time_cache in zend_execute_data for faster access
Use local variables instead of opline operands to access cache_slots
Moved zend_literal->cache_slot right into zval. It should be accessed using Z_CACHE_SLOT() macro. zend_literal structure is removed. API functions that accepted pointer to zend_literal now accept pointer to zval or cache_slot directly. Calls of such functiond that now accept cache_slot need to be changed to pass -1 instead of NULL.
updated NEWS
updated NEWS
Don't copy in ZEND_CAST if type is already correct
Commented out a few PHPDBG_IS_QUITTING checks to fix bug If it does not work, please revert...
command tokens just available at the beginning now
Also check for length to not segfault
updated UPGRADING
updated UPGRADING
Prevented modification of original name
Prevented modification of interned string
op_array->function_name, op_array->doc_comments and op_array->filename may be kept in opcache SHM
op_array->filename and op_array->filename may be kept in opcache SHM
Prevented modification of constant arguments
Prevented unintended SHM modification
Prevented modification of interned string
Finish DOM port
Mostly fix Dom XPath
correct the bug #67081 fix
Set reference values of reference counters of not-interned strings when they are restored from SHM
updated NEWS
updated NEWS
Updated version number to 0.4.0 Made run accept any input and lexer re2c compatible
Refactor PDO (incompleted)
Removed invalid STR_RELEASE()
updated NEWS
5.4.29 is next
Cleanup
Make DOM mostly work
Reduced memory realocations
Make DOM compile
Add functions for extracting long/double/string from zval
Start working on dom extension
Use zend_string* instead of char*
Cleanup (2-nd round)
5.5.12RC1 setup
fixed signatures
fix datatypes
Cleanup (1-st round)
fix zpp
fixed prototype
fix test - doesn't seem to produce warning
fix windows build
ws fix
ws fix
ws fix
The test works out of the box
Made refcount info switchable by set refcount on/off. Default: off
fix crash in MINFO when no mysqlnd plugins are loaded
Add test
backported some ext/intl tests from 5.6 into 5.4
Return SUCCESS and do not confuse use with errors
Added $this and superglobals support for watchpoints
test fixes for ICU 53.1
Refactor simpleXML (compilable, but incompleted)
Clean up information on watchpoint breaks
MErge branch 'PHP-5.4' into PHP-5.5
fix NEWS
fix apr_psprintf format string from e0df4e3dba7c4ab92442b9e82c1de01fdbaa3cce
Copy varname before unset
Reverted to 5a0da281e5a9fa02db18b4822d8b103c65849fa9 Discussion: http://news.php.net/php.cvs/76836
Forgot title in phpt for bug #67064
Updated NEWS
tidy help
CR CR etc. in help
Added information about $var parameter in watchpoints
Added help
less strange!
Remove some dead code...
fix compat with lexer stuff
fix build
fix command structure
Added UPGRAING notice for bug #66015 in BC break section
Add new zend_hash_* APIs to UPGRADING.INTERNALS
Add str_* macros to UPGRADING.INTERNALS
squish warnings
cleanup
fix moar
fix argc/argv
merge master
fix addr parameters
fix typo
Added support for command line arg passing "phpdbg -- arg" in shell "run arg" in phpdbg prompt
Made usage of php_hash_environment useful by updating instead of just adding argc
Retain full compability for all micro versions since PHP 5.4
Temporary fix for Zend/tests/bug46238.phpt
Shut up, my lovely compiler; I do not like your warnings
Removed useless void* parameter and replaced with zend_bool on zval_update_constant* functions
Updated NEWS
Updated zend_vm_execute.h
for some reason gcc -O2 compiled the previous code in unexpected way
fix syntax error in vc++
fixed persistent reaource destruction
Refactor libxml (incompleted)
updated NEWS
No need anymore
Updated NEWS
hmm, make it consistent
Close all files and resources before before destroying object storage, because resources may point to objects. (THIS CHANGE MAY BE DANGEROUS)
Introduced API to close all resources at once
fixed serialize()
Here comes the news
Cleanup $ is not needed for git
New result fetching mode for mysqlnd, which should use less memory but implies more memory copy. The old method is still available and can be used. It stays as default. Choosing the method is through a flag to mysqli_query()/mysqli_real_query() New mode can be forced with an INI setting, for all extensions that support this mode (ext/mysql and mysqli, because PDO due to it's architecture can't support it) The setting is mysqlnd.fetch_data_copy=[0|1]
Port tokenizer extension
fix prototype
Compatibility fix for ext/session/tests/session_id_error3.phpt
fix typo
fix typo
fix typo
add a NEWS block for beta2
add missing entries to NEWS
session_id is binary safe now
IS_INTERNED is not always 0 in ZTS
var_push_dtor_no_addref() is useles (var_push_dtor() doesn't work properly as well)
Temporary refcounting fix
typo
abstract namespace for unix sockets is a linux only feature
Removed useless code
Don't test for specific non-zero substr_compare() return value
Add only_integer_keys option to zend_hash_reindex
Don't always separate splice replacement array
Add zend_hash_splice
Add zend_hash_reindex
Remove some usages of hashtable internals
Updated NEWS
fixed bug66702 : regexiterator's invert flag doesn't work as expected
Use proper size
Unset CV before calling zval_ptr_dtor(), because its destructor may bailout and stay CV value in inconsistet state
Updated NEWS for #67043
cleanup
cleanup old unsupported versions of Firebird 1.0.x
cleanup
updated libs versions
Optimized ASSIGN_OP
IS_CONST can't be a reference
Optimized ZEND_FETCH_R and family
Refactored zend_hash_* iteration API zend_hash_fove_forward_ex(ht, pos) and family require second argument to be real pointer. &(ht)->nInternalPointer should be passed instead of NULL. zend_hash_update_current_key() may work only with internal pointer.
fixed the test for ICI >= 52.1
add missing skip to the output, so we actually skip this test
Allocate HashTable->arData and HashTable->arHash at once
Cleanup
Optimized ISSET_ISEMPTY_DIM_OBJ
"incremental" hash bucket initialization
don't use memset() for array of zval initialization
Use macros
fix the test according to how new date code does it
fix to work on different ICU versions
multibytes tests still fail, put them in XFAIL
updated NEWS
updated NEWS
Remove call_user_method() and call_user_method_array() from master, long time deprecated in favour of call_user_func*().
Avoid double zval copying in ZEND_SEND_VAL and zend_send_by_var_helper
Optimized ZEND_FETCH_DIM_*
Refactored IS_INDIRECT IS_VAR passing between opcodes to avoid reference counting
Tergets of ASSIGN and ASSIGN_REF don't have to be initialized
Optimized RECV_* opcodes
Constant duplication optimization Argument receiving optimization
cleanup NEWS
Various VM optimizations
Add array watchpoints if recursive zval watchpoint changed + WS
ASSIGN_REF optimization
Refactored ZVAL flags usage to simplify various checks (e.g. Z_REFCOUNTED(), candidate for GC, etc)
NEWS
NEWS
NEWS
NEWS
NEWS
NEWS
Changed data layout to allow more efficient operations
NEWS
NEWS
Avoid unnecessary zval separations
Use "fast" comparison function
Avoid useless memset()
Avoid unnecessary zval separations
Avoid unnecessry reallocations
Avoid unnecessry reallocations
Avoid unnecessry reallocation
Use interned strings for one character strings
Use STR_COPY() instead of STR_DUP() where possible
STR_DUP() doesn't duplicate interned strings anymore. In case new string is required STR_INIT() or STR_ALLOC() should be used.
Store constant flags
In case the string can't be interned it must not be released
Exclude interned flags from constant flags
Added check for interned strings
Keep constnat flags
update NEWS
updated NEWS
updated NEWS
added test for bug #53965
function_name might be shared across few op_arrays (inherited methods)
fixes
updated libmagic.patch
NEWS
NEWS
NEWS
Optimizer related fixes (incomplete)
fixed craches at request shutdown and memory leaks
Make opcache work (incomplete - optimizer doesn't work yet; crashes on request shutdown)
Remove unused code from ext/json.
Refactor session (incompleted)
ext/opcache refactoring (incomplete)
Refactor session (incompleted)
Refactored data structures to keep zend_object* instead of a whole zval in some places
update lib versions
cleanup
Use CV variable offset instead of CV variable number
Cleanup
Use ZVAL_DEREF() macro
Remove unneeded string copy. Allow to set ''(empty string values) internal/input/output_encoding for better compatibility. i.e. Runtime INI value changes. More compliance to the RFC. Improve/add encoding handling tests. i.e. Rather than set encoding automagic way, detect it.
Replaced (Z_TYPE(x) == IS_REFERENCE) with (Z_ISREF(x))
Typo
Inlined "slow" CV lookup code (now it's cheap) Removed expectations for undefined CV acess for BP_VAR_W and BP_VAR_IS modes
fixed support for references
Refactor session (incompleted)
Refactored IS_INDIRECT usage for CV and object properties to support HashTable resizing
- Updated to version 2014.2 (2014b)
fix merge issue
fix merge issue
Added TSRMLS_CC to zend_is_true() calls
Updated NEWS for #66834
Call offsetGet() when called with isset() on ArrayObject derivatives
NEWS
NEWS
NEWS
fix disabling PGO for extensions, rel bug #65715
more fixes related to bug #65715
fix some warnings
PHP-5.6 compatibility for apache2 filter SAPI
Use the internal zend_get_opcode_name() function Requires now >=5.4.24 or >=5.5.8 or >=5.6
updated NEWS
updated NEWS
updated NEWS
It's a tradition return NULL on error of args parsing
Refactor mbstring (incompleted)
Refactor mbstring (incompleted)
Refactor mbstring (incompleted)
Refactor ext/mysql
fix C89 compat
fix signature
Cleanup
don't mark zvals as rotts if they are already processed by GC
cosure->debug_info is not a subject for GC
Typo
don't keep useless objects till the end of the script (destroy them immediately)
Revert "Add helper function for updating bucket contents"
Rename+move zend_hash_apply_deleter and reuse it
Make zend_hash_apply_deleter() void, to allow reuse
Add helper function for updating bucket contents
Remove unnecessary check
Iterator has to be properly closed
add info: empty strings are interned
check if object store was freed before accessing particular object
don't replace with ?, just skip it
Reverted 07fcdc40a0f2af388cff2b6083149a0dd8584003
fixed compilation warning
Add default_charset handling
Add default_charset handling
Updated UPGRADING to add three changes
OCI8: fix prototypes for oci_field_*().  They can take a column index or name.
Change test package name ARRAYBINDPKG1 to a per-file unique name to aid parallel testing
Improved GC compatibility
Mark objects that are going to be deleted
More accurate zval comparison
fix compilation error
fix typo
GC cleanup
GC cleanup
GC related fix
Restore NEWS and UPGRADING for hash_equals().
Refactored GC (incomplete)
5.5.11RC1 preparation
fix macros
prep for 5.4.27 rc1
remove obsolete comment
- Updated to version 2014.1 (2014a)
Add a test
Add support for PCRE marks
Update UPGRADING. Add more descriptions about default_charset and encoding related changes. Many thanks to Christopher.
Refactored EG(active_symbol_table) to be zend_array* instead of HashTable*
UPGRADING (openssl updates)
Support async pgsql connections and non-blocking queries
fix macros
Add hash_equals() to perform string comparisons that are not vulnerable to timing attacks.
Refactor reflection_object to fix bug after default_properties changed
removed some weird crash when freeing to early
Cleanup
Added WINDOWS support for watchpoints
Forgot fix similar issue in spl_recursive_it_get_method
Refactor date to fixed bug after default_properties changed
Reflection doesn't return ref anymore
Refactor php_pcre_replace to return zend_string
updated NEWS
updated to oniguruma to 5.9.5
Should not release container before dup
IS_UNDEF should never goes to user script land
Refactor Spl_Directory to fixed bug after default_properties changed
Refactor Spl_Heap to fixed bug after default_properties change
Refactor Spl_Iterators to fixed default_properties change
Refactored Spl_Dllist to fixed zend_object->default_properties change
Refactored Spl_Arrary to fixed zend_object->default_properties change
fix file descriptor leak of epollfd
Don't include trailing zero into hash caclculation
NEWS
NEWS
NEWS
REFERENCE is always REFCOUNTED
reorder the struct members which reduces its size by at least 112 bytes
arg count is zend_size_t now, fix type
fix declarations
Typo fix: sicret -> secret
fix array types for pass by ref
fix macro
updated libs_version.txt
fix zpp
Remove unneeded test
Update NEWS
Revert "Implement Bug #54649 Create session_serializer_name()"
Revert "Implemented Request #11100 (session_gc() function)."
made libgd recognize the 9 version series
fix include search
NEWS
NEWS
NEWS
Add SKIPIF in GMP test
typo in NEWS
typo in NEWS
NEWS
NEWS
Updated UPGRADING to cover PDO_pgsql changes
Add missing E_DEPRECATED error for https://wiki.php.net/rfc/default_encoding
Updated NEWS
Added new PDO::PGSQL_ATTR_DISABLE_PREPARES that uses PQexecParams
Deprecated PDO::PGSQL_ATTR_DISABLE_NATIVE_PREPARED_STATEMENT
Drop PDO support for extremely old libpq versions
fix path separator
Added support for recursive watchpoints deletion
Use /dev/urandom as the default mcrypt_create_iv() source
Add tests for bug #66872 and gmp_[rem]root
Removed bogus loops
restored the old code in 5.4/5 related to bug #66872
Added COW handling and fixed various bugs
no need to fetch ts id here
Reverted wrong fix
Review ended
inject it directly. This is not C++ and I don't want to use hacks with similar structures that are binary compatible. Better be explicit.
updated libsqlite to 3.8.3.1 in 5.5 branch, too
DI
Switch from a single flag to a flag byte
updated libmagic.patch
updated libmagic.patch
Added handling of zval separation (aka watchpoint changes)
fix ZTS
update NEWS
fix #66872, invalid argument crashes gmp_testbit
fix #66872, invalid argument crashes gmp_testbit
more fixes to ext/mcrypt
An demo(for review) to show how to fix the problem(symbol table resize)
Revert "An demo(for review) to show how to fix the problem we meet"
partly revert the wrong merge
Do not remove *.1, it's not generated by make but configure
An demo(for review) to show how to fix the problem we meet
update news
- fix #66869, Invalid 2nd argument crashes imageaffinematrixget
after merge fixes
All tests passed in ext/standard/tests/dir now
Use list_close here (by ext/standard/tests/dir/closedir_basic.phpt)
updated NEWS
removed the libsqlite patch as it's not relevant anymore
IS_REFERENCE is unfrequent
updated bundled libsqlite to 3.8.3.1
Use list_close here to fix ext/standard/tests/file/popen_pclose_basic.phpt
Updated test case with expected output
Refactor SplObjectStorage make it works
Improve codes
Temporary fix memory leaks
Temporary fix memory leaks
add OPSYS_Z_CPM missing constant
Temporary fix memory leaks
Update php.ini files (new openssl directives)
Updated NEWS for #65545
Updated NEWS for #65545
Add fread(length) method
Forgot to remove unused codes
Refactor reference handling
Include the T_POW operator in constant scalar expressions
IS_REFERENCE is unfrequent
Updated news for #66822
Allow T_POW in constant expressions
Add test for bug #62102 / RFC 2144
Whitespace.
Misc cleanup including adding the version number
Added check
Second argument of call_user_method is ref
Have no idea why I changed it to 0 in 70ddc853
To be consistent with old PHP in is_callable(do we really need it?)
IS_REFERENCE is unfrequent
Add CVE ref (not known at release time)
Internal functions may return (e.g. on wrong arguments) keeping the original return_value. So we have to initialize return_value as IS_NULL.
5.5.10 release date for NEWS
Set default Digest Message to use SHA1 instead of MD5 in openssl tests as MD5 signature are now rejected by newer openssl Version.
IS_REFERENCE with refcount==1 should be handled as ordinal value
Add NEWS/UPGRADING notes (openssl + curl)
Add encrypted server SNI support
Raise timeout to 2s, reworded ssl timeout warning
Refactor + reorganize openssl files
Add NEWS entry for mcrypt changes
Use zpp for accepting encryption mode string
Remove a number of macros that are no longer used
Provide expected IV length in IV error messages
Call mcrypt_module_close on error
Print supported key sizes in error message
Clean up do_crypt code
Abort on invalid key size
Abort on missing IV if the enc_mode requires it
Abort on invalid IV size
Refactor the result set data structures. Move more to the buffered and unbuffered substructures. Add methods to these too. Preparing for pluggable interface for returning data to the engine (zvals, c-style, something else)
Invalid free of args("+")
It's not possible to create reference to string-offset
Reverted "efree(args);" removed by mistake
Temporary fix for lazy symbol table initialization called from zemd_error(), that converts CV variables into IS_INDIRECT
Handle interned strings as non-refcounted scalars
retval might be IS_UNDEF even the call is successed
NEWS
NEWS
Remove "efree(args")
Checkout refcounted before doing addref
Arguments taken by internal functions using zend_parse_parameters() with "+" and "*" specifications must not be deallocated anymore.
Refactor stream_get_record to return zend_string
fix merge
NEWS
NEWS
fix merge
Improves fix for memory leak, keep in sync with upstream.
EG(error_zval) must be passed as IS_INDIRECT
Passing symbol_table into user error handlers
Paramter are references
Return empty string
Error message has been changed
Add notice about tsrm_virtual_cwd.h moved to zend_virtual_cwd.h as this introduce need for awfull hacks...
Temorary fixed memleak
Wrong type check
Refactor gethostbyname to returing zend_string
Elements in array could be reference
Refactor php_escape_shell_* to return zend_string
Use stack memory here to avoid mem leak
Refactor php_url_(en|de)code to return zend_string
Updated news for #60602
proc_open(): separate environment values that aren't strings
Added DateTimeImmutable::createFromMutable.
Sort alphabetically
Capture peer cert even if verify fails
Windows cert verify improvements + leak fixes
Refactor _php_stream_scandir to avoid memleak
Use zend_string to avoid memleak
turn off some false positives
fixes signed/unsigned in ext/pgsql
more signature fixes
fixed signatures php_uint_t vs php_size_t for len
removed senseless unsigned < 0 check
more zpp fixes
fix reading unsigned from zpp
Not reference anymore
This should be a real problem
support for static analyzers other than visual studio
fix wording
reveal more info on the configure options
fixes unsigned < 0 comparsion
Updated news for #66535 and #66109
Updated news for #66535 and #66109
Updated NEWS for #66535
remove temp test files
Temporary fix for reference counting
fix typo replacement
don't compare constants on run time
fix macros
more descriptor fixes
substr_compare(): Allow zero length comparison
[bug 66535] X-PHP-Originating-Script adds newline if no custom headers are given
Temporary fix zcontext
Redesigned SRR_OFFSET handling
Refactored spl_filesystem_iterator
Allow NULL as value for CURLOPT_CUSTOMREQUEST option.
We need to stash the object_ptr in fci
primitive test fixes
parse stream locations properly, bp.c still needs work for #82
man page: long option name is --strip, not --stripped
--global have be removed in 5.2
Add zend_iterator_dtor
Converting from reference to regular value
Revert "Move zend_objects_store_put out of zend_object_std_init"
Move zend_objects_store_put out of zend_object_std_init
I don't know how to fix it
Temporarry commented
fixed refcounting in "$a->magic_prop += 2"
use php streams to handle line endings better for #81
Unused element
remove pcntl leftover from the test code
Allow crypto_method context value in stream_socket_enable_crypto()
Various fixes related to read_property(), read_dimension() and iterators refactoring
list the fpm change hat rfc in UPGRADING
mention the apparmor support in fpm
Refactored read_property() and read_dimension() handlers
Refactoring zend_iterator (incompleted)
typo spotted by Lajos Veres
Temporary refcounting fix
Temporarry refcounting fix
Resource closing without destruction
update libs_version.txt
update libs_version.txt
NEWS
NEWS
NEWS
test for bug #66762
fix tests broken by 633f898f1520253d3530fe91fc82f68bca7c4627
add missing NEWS entry
add missing NEWS entry
add missing NEWS entry
add missing NEWS entry
add missing NEWS entry
add missing NEWS entry
Deprecate CN_match in favor of peer_name in SSL contexts
Remove cURL close policy related constants
after merge fix
Update stack size in tests/func/010.phpt
Don't add num_additional_args in SEND opcodes
Disallow use of positional args after unpacking
Store arg_num in fcall entry
Introduce zend_function_call_entry structure
move the default encoding NEWS entry to alpha3, as it was pushed after beta2 was tagged
rearrange the NEWS blocks a bit
add NEWS block for 5.6.0 beta1
Temporary memory leak fix (should be done in a better way)
restored that test part in ext/openssl to enable notify/wait
remove echo
ifixed foreach() by reference
Temorary fix for implicit IS_CV conversion into IS_INDIRECTR
fix stdin reading in new openssl tests
kick redundant include
Generator related fixes
Re-fixed unserialize
Prevent implicit function declaration when TLSEXT unavailable
Reflection related fixes
Update NEWS+UPGRADING (openssl)
Remove test case invalidated by openssl.cafile accessibility change
Tolerate non-standard newlines when parsing stream CA files
Remove openssl tests that shouldn't have survived last merge
Add openssl.cafile ini check when loading cainfo
Change openssl directives to PHP_INI_PERDIR
Update openssl tests with new server/client test harness
Add peer certificate verification on windows
fixed typo
Use API instead of directly acessing the structure
THIS MAY BE A REAL PROBLEM
Changes zend_is_callable() to use zend_string* instead of char*
zend_hash_add might return NULL in  ext/standard/tests/serialize/serialization_objects_011.php
zpp readme adjustment
corrections to the zpp readme
add news entry
add news entry
add clear_env option to FPM config
add clear_env option to FPM config
Don't add_ref in add_*_str functions
Refactor php_crypt to returning zend_string
Reduce test noise on cross Oracle client <-> server version tests. This fix is already in PHP 5.6+
Reduce test noise in cross Oracle client <-> server version testing. This change is already in PHP 5.6+
moar params for registered functions
Better IS_REFERENCE handling
export command
woops+correction in help
Support for IS_REFERENCE
More constant related fixes
fixed support for constant expressions
Refactor base64 to returning zend_string
Refactor php_uu(en/de)code to returning zend_string
Refactoring php_stream_copy_to_mem to return zend_string
Refactor chunk_split returning zend_string to avoid memleak
fix ts build
fixed macro
ZEND_CATCH support for IS_INDIRECT
ASSIGN_REF related fixes
add clear_env option to FPM config
add clear_env option to FPM config
Now we always ZVAL_DUP args[argnum] now (in ed8691b2)
Refactor php_addslashes using zend_string
Make sure value is initialized
We can't dereference dbh if it is NULL
Missing handling of IS_REF in ext/standard/tests/strings/bug47842.php
Refactor php_str_to_str returning zend_string
Refactor basename using zend_string
set colors working
Refactor php_addcslashes using zend_string
No refcounted type
fix linkage
do not allow abbreivation of anything without alias, fixes input for sh/ev
moar cleanup
call register
More openssl UPGRADING updates
Use better data structures (incomplete)
...
verify noargs
Use better data structures (incomplete)
...
Update NEWS/UPGRADING with openssl additions
...
update export function
introduce proper support for file:#opline
case insensitive
fix macro names
after merge fix
...
trim breaking commands
after merge fix
Revert "Use zend_string for arg_info to fixed segfault in Zend/tests/argument_restriction_003.phpt"
conditional breakpoints working again
better-ness, I think
Use zend_string for arg_info to fixed segfault in Zend/tests/argument_restriction_003.phpt
Mitigate client-initiated SSL renegotiation DoS
All zend_parse_parameters("Z") has to be replaced with zend_parse_parameters("z")
Wrong string destruction
C89 compat
Added information about interned strings usage
Updated opcache version
Added function opcache_is_script_cached(). (Danack)
Improve OpenSSL compile flag compatibility, minor updates
Use crypto method flags; add tlsv1.0 wrapper; add wrapper tests
Improve server forward secrecy, refactor client SNI
Add 'honor_cipher_order' server context option
Add 'capture_session_meta' context option
Disable TLS compression by default in both clients and servers
Release ssl buffers
Add openssl_get_cert_locations() function
Explicitly set cert verify depth if not specified
Strengthen default cipher list
fixed path separator in the tests
Add more tests for __debugInfo() and fix leak
updated libmagic.patch for 5.6+
updated libmagic.patch in 5.4/5
fixed leak introduced after CVE/upgrade
Use nicer output for characters < 32 and > 126 in exception strings Using question marks might confuse more than it helps. Users are wondering what happened to their string...
Update .gdbinit
Update pgsql document
some missing pieces for __debugInfo
work on lexer to be more permissive (accept moar strings) work on parameter parsing and command resolution work on error reporting for failed arguments update most commands move quiet to set quiet move set break on/off to set breaks on/off keep set break for set break <id> <on/off> update help accordingly
Use better data structures (incomplete)
Use better data structures (incomplete)
zend_hash_del didn't check the PACKED flag
Skip failing tests when EC unavailable (RHEL)
Use better data structures (incomplete)
updated NEWS
updated libmagic.patch
remove PHP_API_VERSION < 20100412 check
Use better data structures (incomplete)
expose correct libmagic version
fixed tests in ext/fileinfo
updated to libmagic-5.17
remove input_t support single char aliases ...
Use better data structures (incomplete)
Use zend_string avoid mem wasting
work on parameters to commands
Oplines run from 0 to op_array->last - 1
Use better data structures (incomplete)
...
execute new stack now
updated libmagic.patch
MErge branch 'PHP-5.4' into PHP-5.5
update news with CVE
5.5.11-dev next
5.5.11 next for NEWS
Use better data structures (incomplete)
Use better data structures (incomplete)
Set fileinfo version to 1.0.5 (as in php 5.4, no diff)
NEWS
NEWS
Use better data structures (incomplete)
Use better data structures (incomplete; able to run bench.php)
Refacting smart_str
fix #70
fix zpp issues #74
fix #75 phpdbg disabled by default
use correct param types
Use better data structures (incomplete)
5.4.27 now
update NEWS
Add __debugInfo() magic method
start work on resolving commands, add numeric function and method to lexer
Use better data structures (incomplete)
emalloced interned strings have to be deallocated before memory manager shutdown
It should be fixed later in some better way (added ??? marks)
remove dead code
Move code out, that handles the actual structure to be used for the decoded data. Will make it easier to add different structures
Use better data structures (incomplete)
Updated NEWS for #65753
Updated NEWS for #65753
Updated NEWS for #65753
Export JsonSerializable Interface (bug #65753)
Export JsonSerializable Interface (bug #65753)
Export JsonSerializable Interface (bug #65753)
simplify the metadata part
case insensitivity where we can additional param types
after merge fix
Use better data structures (incomplete)
Use better data structures (incomplete)
Use better data structures (incomplete)
imagettftext() uses the last charactermap it found and not the one you want
[libxml] Unit test for libxml_disable_entity_loader()
Use better data structures (incomplete)
Add pgsql related change information to NEWS and UPGRADING
...
improve error reporting
...
modify command to parse arguments with lexer for testingz
fix lexer for namespaced methods
remove leaks from stack traverse the other way fix id regex, thanks @bwoebi
Imprement FR #25854	Return value for pg_insert should be resource instead of bool
Implement FR #41146 - Add "description" with exteneded flag pg_meta_data(). pg_meta_data(resource $conn, string $table [, bool extended]) It also made pg_meta_data() return "is enum" always.
Implement FR #41146 - Add "description" with exteneded flag pg_meta_data(). pg_meta_data(resource $conn, string $table [, bool extended]) It also made pg_meta_data() return "is enum" always.
build stack from command line
fix always_populate_raw_data config
removed warning; WS
Add tests for Bug #65538
updated pgsql/config.w32
Use better data structures (incomplete)
Use better data structures (incomplete)
remove cast
remove some obsolete casts
Travis has old PostgreSQL server. Avoid test error.
It seems travis needs ending >?
Add PGSQL_DML_ESCPE
Update NEWS and UPGRADING
EXPERIMENTAL flags for pg_select/pg_insert/pg_update/pg_delete are removed.
Update NEWS
Revert "handle strings better"
Remove XFAIL from a test
Declare a number of functions as variadic.
handle strings better
Refactor build_tablename()
remaining backports for ext/*
Revise encoding blacklist
further ext backports
fix wrong backport
barf on unexpected input
backported remaining part in main/streams
betterness
backported ticks function signature
backport ext/spl
backported sapi/cli
backport ext/date
backported ext/standard
Move static functions further up so they are delared efore being used.
Use better data structures (incomplete)
remove comment
remove test files
simple overwrites
fix sprintf declaration for broken sprintf
backported main/
backported Zend
Update NEWS
Update NEWS
Refactor and cleanup. WS is cleaned up. Use -b if it is needed. Added compatibility macros, PQescapeStringConn, PGSQLescapeLiteral/Identifier, PGSQLfree.
have a go at writing lexer for input
Update NEWS
Update NEWS
Update NEWS
Add missing TSRMLS_CC
Bug #47030 (separate host and peer verification)
Updated NEWS
a few typofixes
a few typofixes
a few typofixes
Use better data structures (incomplete)
Use better data structures (incomplete)
a few typofixes
Use better data structures (incomplete)
Use better data structures (incomplete)
Use better data structures (incomplete)
Use better data structures (incomplete)
Use better data structures (incomplete)
Update NEWS and UPGRADING
move the peer verification NEWS entry to the alpha2 block, as it was pushed after alpha1
mention ldap_modify_batch()
Use better data structures (incomplete)
Implement RFC https://wiki.php.net/rfc/default_encoding
Use better data structures (incomplete)
Reverted zval_clear() and zval_release() back to zval_ptr_dtor()
 Use better data structures (incomplete) -- stash for today work
Use better data structures (incomplete)
Use better data structures (incomplete) - refactored return_value handling
Use better data structures (incomplete)
update the alpha2 release date
Use better data structures (incomplete)
Use better data structures (incomplete)
Use better data structures (incomplete)
Use better data structures (incomplete)
Implemented feature #45528: Allow the DateTimeZone constructor to accept timezones per offset too.
Rename timelib_get_zone to timelib_parse_zone and export.
Replace old SVN references to Git
More update to help text on parameter typing
fix printf fmt for zend_uint_t
fix return of hash num elements
replace *_STRTOL with STRTOI, etc.
fix size types
fix implicit type conversion
fix size types in zend_ts_hash.*
fix regex to detect valgrind version New PCRE version got stricter
fix regex to detect valgrind version New PCRE version got stricter
fix regex to detect valgrind version New PCRE version got stricter
fix some implicit 32 vs 64 bit type conversions
it's actually correct to always use size_t for zend_size_t, even on 32 bit
after merge fix
5.5.9 now released
Added information in NEWS and UPGRADING
add T_POW (**) operator
add NEWS block for 5.6.0alpha3
updated libs_version.txt
updated libs_version.txt
update libs_version.txt
more tests for ICU >= 52.1 compat
fix tests for ICU >= 52.1
fix tests for ICU >= 52.1
adapt test to curl 7.35.0 upgrade
move the NEWS entry into the right section
Update help content and refactor new routine in php_help.c
fix flag signness
fix the comment text
updated NEWS
updated NEWS
pcre tests go with 8.34 upgrade
pcre upgraded to 8.34
let thread id be 64 bit on win64
fix some specs for line num
more cleanups to num args types
more cleanup for num args
fix type for op num
fixed length property types in  zend_property_info
fixed types for num_args at various places
mention the openssl SPKAC functions commited to master before branching out 5.6. see https://github.com/php/php-src/pull/267
after merge fix, some datatypes
Work in progress chekpoint of changes to help module.  To allow peer review and feedback
windows
windows
windows
clean symbols
clean symbols
another patch from upstream
another patch from upstream
woops
woops
woops
better use of tmpnam/mkstemp
better use of tmpnam/mkstemp
...
update version
update version
remove use of zend directly, avoid leaks/bugs in modules etc
remove use of zend directly, avoid leaks/bugs in modules etc
scrap using zend directly, too many leaks/bugs
Remove #if PHP_VERSION_ID version checks
Remove #if PHP_VERSION_ID version checks
Use master-agnostic zend_is_true checks
cleanup with --reverse
add --zpp-vars to script usage out
document more on --zpp-vars
added replace.php --zpp-vars
more feasible solution for zpp specs using compat.h
Make html_table_gen consistent with html_table.h
Add Oracle PL/SQL BOOLEAN type support to oci_bind_by_name()
Make html_table_gen consistent with html_table.h
fix ZTS build
mention important compiler warnings, state the changed APIs more precisely
tests still failing, so xfail for now until fixed
tests still failing, so xfail for now until fixed
tests still failing, so xfail for now until fixed
tests still failing, so xfail for now until fixed
after merge fix
fix merge error after b4b4d9697fa43a526466165a3ca89d058296cb04
Add new INI for rollbacking connections put back into the pconn pool as well a function get the the statistics in easier way than ob_start() and parsing phpinfo().
zip extension version 1.12.4
separated zpp and macro replacement
more doc on replace.php
fixed reverse mode for --zpp
some datatype fixes
fixed --zpp and added --zpp-compat
fix bugsnet #66591 and github #60
reveal implemented replace.php options
more precise info on printf formats and fix some wording
added info about new datatypes in zval
Update NEWS/UPGRADING
fix bugsnet #66594, thanks ondrej@php.net
Verify peers by default in client socket operations
add text for the new constants
add new consts
word on bit shifting
fix *.dsp files related to bug #50333
fix datatype
Update NEWS/UPGRADING
Prevent invalid SAN peer verification on null byte prefix attack
Remove obsolete description
fix readline build error bugsnet #66576
Update source docs
Revert "Update source docs"
Update source docs
drop precision since trigonometric functions are non-portable
XFAIL multibyte tests until they are fixed (bug 66582)
drop precision since trigonometric functions are non-portable
XFAIL multibyte tests until they are fixed (bug 66582)
fix test
fix test
fix test - new flag ZEND_ACC_HAS_TYPE_HINTS
fix test - new flag ZEND_ACC_HAS_TYPE_HINTS
extended replace.php with --reverse and --zpp
after merge fixes to ext/ldap
fix test bug62479.phpt
Add ZEND_ARG_CALLABLE_INFO to allow internal function to type hint against callable.
fix the primary qa email address and update the list of available people being able to add moderators to our lists
WS
Reduce code duplication a bit
Backport refactoring from php-src
some extension to the porting doc
Update gitignore and Makefile for additional entries
Add #defines for compatibility with PHP releases prior to the core PHP type changes.
FIx failing tests because of operator precedence
fixed merge error in ext/oci8
added convert_to_int_ex
missed header
fixed ZEND_INT_FMT
refixed that test for 5.5+
missing piece of code from the mainstream
Implement ldap_modify_batch.
5.5.10 next
fixed test
after merge fix ext\session
renamed the compat macros
fix zts
fixed missing usleep() prototype in pgsql
after merge fix and more revamp on ext\session
Re-fixed bug #66469
Re-fixed bug #66469
fix CVE ref for bug #66060
fix CVE ref for bug #66060
fix buglet in makedist
5.4.26 next
fix news
fixed post deactivate signature in ext\libxml
fix NEWS formatting
Change automaticaly to automatically
starting a new NEWS section for alpha2
Updating NEWS with PDO change
Updating NEWS with 66509 change
fix these tests so they properly clean up after themselves.
range checks for ext\bz2
Skip those test which fails on ARM architecture
dos2unix
release 7.0.3
fixed glob compilation with vc12
support for Visual C+ 2013
Skip readline tests which fail with libedit Add specific libedit test (output slightly differs)
Update NEWS for bug fix #62479
Enable zend.multibyte tests. Tipcal configuration works, but most tests fail.
Removed some segfault; does still not delete all the watches if var is removed, might segfault
fix C89 compat
fix C89 compat
Clean root symbol table when starting new execution
partial revamp ext/intl
Update year
zts fix
...
remove goto from zend_try/zend_end_try/zend_catch blocks
Add a couple of missing items to UPGRADING.
Clarify always_populate_raw_post_data situation in 5.6
added appropriate exception handling flag to ext\intl
fix indentation
Add some basic and apparmor tests to fpm
Add --force-stderr to fpm
Add apparmor change hat functionality to fpm
fix indentation
Update NEWS
forked the test for bug #66481
fix #50
Re-fixed Bug #66481 (Calls to session_name() segfault when session.name is null)
Revert "Bug #66481 Segfaults on session_name()"
Revert "Update NEWS"
Update NEWS
Update NEWS
Bug #66481 Segfaults on session_name()
Log information about cached scripts and keys
We don't know PHP_5_6_X_API_NO yet
Added pg_lo_truncate() and 64bit large object support from PostgreSQL 9.3 and up
Always initialize pg_version() result array elements to prevent failed test with older postgresql servers. Add missing client_encoding element.
fix printf spec
fix uninitialized value
more fixes after merge
after merge fix
Made pg_version() return full connection info.
Dont ignore errors from FT_Get_Glyph
More refactoring of the big function generating execute requests
fixed a typo
issues raised in #46, don't quit on CTRL+C if not executing
small corrections
forked test for win32
further porting notes
added ptrdiff_t notes and some other porting doc improvements
ws and some note corrections
more on porting
move common code into a function
further writing on PECL_PORTING
patch version
fix #46 ignore EOF
Revert "fix #46 ignore EOF"
fix #46 ignore EOF
reworked compat.h
work on #46 (handle quit local consoles gracefully)
added compat.h
rrenamed the readme file
started the porting docs/tools
Implement argument unpacking
Minor cleanup in zend_do_pass_param()
Added rudimentary support for watchpoints on an array itself
fix encoding
reverted erroneous patch in array_sum()
5.5.9-dev now
fixed EOL in the test
added testcase from bug #65371
revamped ext/shmop
revamp mysqlnd, mysqli, mysql and pdo_mysql
fixed the 'p' modifier when %p is used
Add some basic and apparmor tests to fpm
Add --force-stderr to fpm
[libxml] Unit test for libxml_disable_entity_loader()
one more extension for the basename test
improved the fix for bug #66395
updated NEWS
updated NEWS
Here need to be str_efree
Bump year
Bump year
Bump year
Bump year
Bump year
- BFN
fix #66375 bad logic in sapi header callback routine
First try of recursive watchpoints
Throw warning when converting invalid string to GMP
This should be an empty merge.
update php.ini-*
Add E_DEPRECATED when populating $HTTP_RAW_POST_DATA
add 'never'
fix type
fix type; add tests for -1
s/BOOLEAN/ENTRY/
re-introduce always_populate_raw_post_data
after merge fixes to ext/zip
fixes after merge and some opcache revamp
missing file from libzip 0.11.2
fix compat for PHP ABI changes
NEWS
Sync with pecl/zip 1.12.4dev
added ZEND_ABS and revamped some related stuff
minor fix on previous
other place with 64 bit << and hash size
fix bit shift 64 vs 32 bit vars
revamp the hash api once more
update version
update version output
update version output
fix macros conflicts when included intsafe.h
Revert accidented committed php_version.h
removed accidentially merged in files
Improved empty string handling. Now ZE uses an interned string instead of allocation new empty string each time. (Some extensions might need to be fixed using str_efree() instead of efree() to support interned strings).
fix c89 compat
fix c89 compat
brought the ext/sybase_ct/config.w32 up to date
revamp ext/sybase_ct
upstream merge
5.4.25 next
next wave on fixes for ext/phpdbg
fixed incompatible pointer in phpdbg on win64
fixed incompatible pointer in phpdbg on win64
basic fixes to sapi/phpdbg
added credits note
basic fixes to sapi/fpm
Z_STRLEN vs Z_STRSIZE
update credits
Added breaking upon fatal-ish error
fix NEWS file for master
update credits
update credits headers
Added breaking upon fatal-ish error
Added breaking upon fatal-ish error
fix NEWS file for master
credits file for phpdbg
credits file for phpdbg
credits file for phpdbg
fixed tests using 'expected to be long' vs 'expected to be integer'
removed the all style function arg formats 'l', 's', 'p'
restore NEWS to the state of 6c5e93fe17c264aa28f8eeb4ec78c9e4a7eedfba
reformat
credits file
credits file
fix typo after merge
missing, apparently
removed outdated IsDebuggerPresent declaration
Added suggestion about opcache.revalidate_freq setting in development environment
Bump ZEND_MODULE_API_NO due to the TSRMLS change to zend_is_true()
opcodes
missing, apparently
stop warnings from unused opcode map
removed outdated IsDebuggerPresent declaration
Added suggestion about opcache.revalidate_freq setting in development environment
Bump ZEND_MODULE_API_NO due to the TSRMLS change to zend_is_true()
fix news
fix news
fix news file
opcodes
opcodes
missing, apparently
stop warnings from unused opcode map
- BFN
next wave of revamp in Zend
Included new .c file in build too
Moved to new file, killing a lot of warnings
Added breaking upon fatal-ish error
Added an opcode to opcode name map That way extensions etc. don't have to maintain their own lists anymore. Also as phpdbg is included and needs such a map, it'd be counterproductive to need to change two things on every new opcode.
ZTS fixed
ZTS fixed
Align 'configure --help' columns
Added NEWS and UPGRADING info for phpdbg
update readme
Bumped version number to 0.3.0
Recreated test.php
tidy up readme
tidy up repository for merging
final remove of the temporary int64/strlen configure options
next wave on semantical replacements long vs. int
keep 'em sorted
- Updated to version 2013.9 (2013i)
more semantical replacements LONG vs. INT
Added deleting of watchpoints
added comment
massive update semantical LONG vs INT replacements
NEWS
save a few memory
test commit
Update NEWS handling section of README.GIT-RULES
fixed duplicated include
added file header
add missing header
correct fix for ext/opcache regarding zend_size_t replacements
reverted the previous wrong patch
fixes ext/opcache after too much replacement
zend_size_t for *.cpp files as well
fix zend_size_t type def
size_t part for *.l files
size_t part for *.y files
size_t part for win32/
mass replacement for zend_size_t/php_size_t
prepare for zend_size_t
disregard leading slash
version in userland
Add Zend version and copyright.
Add the `-V` option to print the version number.
fix after merge
...
In english, no horizontal space before “!”.
fix warnings/50700 stuff
...
50700 change
fix build
fix build error zts
Added myself as author where I was not author yet
automated platform dependent zend_int_t declarations
Eliminate the TSRMLS_FETCH() calls in the ticks functions and hook
Kill a TSRMLS_FETCH() in php_stream_context_set() by passing TSRMLS_CC to it
Kill a TSRMLS_FETCH() call in sapi/caudium
We might as well re-use the TSRMLS parameters here as they are available in PHP_FUNCTION anyway to save a TSRMLS_FETCH() call
Pass the TSRMLS parameters to the sapi flush hook, this shaves off a few TSRMLS_FETCH() calls in our various SAPIs
Kill another TSRMLS_FECH() in sapi/roxen
fix crash on clean in nts
first working version of wildcard watchpoints
Bump year
Kill yet another TSRMLS_FETCH() inside the CLI HTTP server
Kill another TSRMLS_FETCH() in the zend extension loading code
Eliminate another TSRMLS_FETCH() in i_zend_is_true()
updated libmagic.patch
basic fixes to ext/interbase
basic fixes to ext/sybase_ct
fix datatype to hold read bytes
fix function signature
revamp ext/pdo_firebird
fixed conflicting function signatures in ext/com_dotnet
Z_STRLEN vs Z_STRSIZE
regenerated zend_vm_execute.h after merge
fixed possibly uninitialized value usage
Use memcmp here is better
Save one char compare
basic fixes to ext/mssql
fixed conflicting types in func definition
Handle automatic removing of watchpoints and cleanup at the end
revamp ext/opcache
Preventing possible segfault
Moved btree to separate file; minor fixes and completitions
- Staticfy some functions
revamp ext/phar
fixed parameter order for zend_throw_exception_ex call
fixed parameter order for zend_throw_exception_ex call
basic fixes to ext/pdo_oci
basic fixes to ext/oci8
First semi-working version of a single watchpoint
fixed sapi/embed
Finished working for today, continuing tomorrow (not working)
revamp sapi/cgi
use php_socket_t where possible in ext/cli
basic fixes to ext/imap
fix function signature
fixed ext/pdo_dblib
fixed ext/skeleton
fixed ext/sysvsem and ext/sysvshm
fixed ext/sysvmsg
fixed ext/recode
fix datatype
fixed ext/readline
Test pushing
Updated release process
basic fixes to ext/pspell
fixed function signature
fixed ext/pcntl
fixed ext/posix
fixed ext/dba
fixed function signature
Use zend_error_noreturn here
Kill another TSRMLS_FETCH() in zend_indent()
Eliminate another straight forward TSRMLS_FETCH() in zend_startup_module()
Add Tests for #65784 in 5.5
Disallowed JMP into a finally block.
Update NEWS for 5.5.7 release
fix test
revamp ext/dom
remove always_populate_raw_post_data INI entries from master, UPGRADING.INTERNALS coming shortly
revamp ext/pdo_mysql
revamp ext/pdo
Committed the damned new files
First non-working test of segfault handlers
revamp ext/pgsql
revamp ext/soap
Added one more test for constant scalar expressions
added missing prototype
fix dir separator in cve-2013-6420 test
additional range checks for ext/sockets
Zend: fix overflow handling bug in non-x86 fast_add_function()
5.3.29-dev
fix function params
NEWS
more range checks for ext/sqlite3
fixed return
more range checks for ext/tidy
Revered func_get_args() changes, because they were not completly transparent and broke some tricky PHP code that worked because of luck before php-5.5.6 (see Bug #66107). The changes are going to be kept in PHP-5.6.
Zend: fix overflow handling bug in non-x86 fast_add_function()
revamp ext/xmlreader
revamp ext/xsl
Arguments passed to user function have to be properly allocated on heap
revamp range checks in ext/xml
Tiny whitespace fix in makefile (aligning with other "Installing" messages)
cli: don't cast away const in select() timeout argument
Added conditional opline num support
Z_STRLEN vs Z_STRSIZE after automerge
resolve all warnings
update cl
fix test
remove zend extension
Replace invalid code with a proper #error
Pssst, compiler!
WS
Renumbered frames in backtrace for internal functions
- Added variadic support to prototype dumping
- Added argument name to backtrace dump
- CS
- Splitting prototype dumping code
- Change phpdbg_dump_backtrace prototype
- Moved frame related code to phpdbg_frame.c
- CS + ws
Remove explicit casts to and from 64bit types
Switch to using freetype-config for freetype detection.
Added mapping...
- CS
Renumbered phpdbg.h correctly
Adapted opline_num breakpoints to master branch
fix repeated compiler warnings
added macros for integer constants to append appropriate suffix
recap fixes for ext/standard
Update README.md
Added libedit reference to README
Provide commands for getting started
fixes to rand
make simple
more tests add phpdbg_exec userland function
fix registered commands during init, add test
remaining fixes to ext/zlib
BFN
fix possibly uninitialized value
fix conflicting types
doh, I'm tired
travis build status image
use current build of php
travis
...
remove code directory
cleanup
add format tests
...
integrated %pd into more ported extensions
...
integrated %pd into ext/spl
printing test
add moar
change default options for tests
organize
add test-phpdbg makefile rule
removed warnings in newly implemented pcre range cehcks
update cl
...
fix crash on startup errors
added range check for pcre ini entries
implemented %pd format for snprintf and spprintf
update cl
tests
don't use emalloc there
Renumber the comments in php_request_shutdown() to be in order.
Add missing overflow checks
Use 'user@example.com' rather than 'user@company.com' in tests
BFN
fix bug #62490
Use 'user@example.com' rather than 'user@company.com' in tests
fix #36 add more info to conditional breakpoint output
fixed ext/bcmath
finer fixes for ext/opcache
basic fixes to ext/opcache
Remove 128.0.0.0/16 and 191.255.0.0/16 from the reserved list.
basic fixes for ext/ldap
fix uninitialized variable
basic fixes to ext/snmp
basic fixes for ext/pdo_pgsql
more test fixes
fix test
fix php_stream_copy_to_stream_ex usage
add missing clean section
remove test for already removed feature
basic fixes to ext/odbc
update cl
fix loading of zend_extensions from command line arguments
Nearly finished opline num support patch
basic fixes to ext/ftp
basic fixes to ext/pdo_mysql
basic fixes to ext/pdo_firebird
more fixes to ext/pdo and ext/pdo_pgsql
Leftover: Bump version to 5.7.0
Support gmp_remroot() on GMP 4.1
basic fixes to ext/pdo_pgsql
basic fixes to ext/pdo_sqlite
basic fixes for ext/pdo
Leftover: Bump version to 5.7.0
break at image
update image
improve print conditional breaks
export both types of conditional breakpoint properly
some more fixes to ext/pgsql
extended conditional breakpoints
Added deleting and printing
basic fixes for ext/pgsql
Add digest data_len overflow checks and few other fixes
Support gmp_remroot() on GMP 4.1
Added note about const scalar exprs in UPGRADING file
basic fixes to ext/shmop
BFN
update docs etc
added ability to override sapi name
cs
added set break [id] <on|off>
BFN
fix bug #49634x
fix the length var datatype
add some overflow checks and use correct msg formatting in openssl
Separated opline address improvements from this branch
- CS
Several fixes and cleanups on opline num support
ws
...
init.d for redhat and derivatives
more fixes for ext/mysql
update version
tag correct version
fix windows build
basic fixes for ext/mysql
update version
tag v2.0
add info memory
more fixes for ext/mysqli
fix mysqlnd for bigint
cs/ws
support all colors and underline in java ui
started to fix ext/mysqli
phpdbg_rlog for logging while in remote mode (only)
- BFN
started to fix ext/mysqlnd
Cleanup generator closing code a bit
basic fixes to ext/sqlite3
add systray and logo
...
update jar
...
...
improvements to jui, use nonblocking i/o in stdout thread
update image
basic fixes ext/xmlrpc
updates for java app ... delicious ...
fixed ext/tokenizer
fixed ext/tidy
update images
...
basic fixes to ext/sockets
correction
remote tutorial
improve -l, add -a
finer fixes to ext/soap
allow setting both ports from command line:
fixed compilation after merging master
basic fix for ext/soap
fixed ext/mcrypt
update java ui
update image
update ui 	echo checkbox 	move input to bottom like a normal console
finer fixes for ext/json
basic fixes for ext/json
I give up
...
...
update image with colours :)
fix layout
...
...
...
fixed ext/gmp
...
...
add ANSI colour support to output pane
Added validation of class names in the autoload process
fixed ext/gettext
further fixes for ext/gd
basic fixes for ext/gd
always unset unclean_shutdown
update java example
Clean up GMP arginfos
Add gmp_root() and gmp_rootrem() functions
Use class handlers for GMP serialization
Remove duplicate / commented code in GMP
tidy
java example stuff
fixed ext/fileinfo
remove windows support for remote console, never gonna happen
Small bug fix on error
Avoid interned hash key duplication and hash key length recaclulation
First semi-working version of oplines
fixed ext/wddx
fixed ext/xml
windows ...
fixed ext/xsl
fixed ext/zip
windows fixes
windows fixes
add set colors command to assist remote console
fix after automerge
more on remote mode 	some logging info to stderr 	only quit on sigint in remote mode
fixed ext/filter
resolve #30 #31
work on remote mode
Removed unused "pHashFunction" argument in _zend_hash_init() and family (must be 99% source compatible)
Marking those two as XFAIL for now.
basic fixes for ext/exif
Some rare deprecated cases replaced by ZEND_ASSERT() (some extensions might need to be fixed)
Removed duplicated hash function implementation (100% source compatible)
fixed ext/enchant
Updated NEWS for Constant Scalar Exprs RFC
fixed ext/curl
Move add/sub to timelib.
Split up tests into their different categories.
Group those tests a bit better, as some of the bd ones wanted a "ST" feature that doesn't exist yet.
Always reset those parameters.
add option in help for remote console
made server persist, support disconnect and reconnect
fixed ext/ctype
reverted a couple of things in ext/phar for now, but all tests pass now
Don't check argument types for internal functions without type hinting
next portion of fixes for ext/phar
fixed the rdev stat array member again for streams
example java app for testingz
java example
basic fixes for ext/phar
fix remote mode when readline is enabled
simple tcp interface for phpdbg
Removed deprecated AI_SET_PTR()s
final ext/session fixes
fix find breakpoint function
housework
reset hit counters implicitly on run
more improvements to breakpoint api separate printing logic, always return base add hit count to breakpoints, displayed on hit
fix function definition
first shot for ext/calendar
make conditional breakpoint structure consistent with others
NEWS
improve api
basic fixes to ext/hash
5.5.8-dev now
5.4.24-dev now
update to LSAPI 6.6
many improvements in breakpoints make file breakpoints faster make exports happen in correct order make deletes simpler, set flags correctly fix info vars when no scope is set
fixed ext/xmlwriter
fixed ext/xmlwriter
fixed ext/dom for int64 branch
fixed some warning in ext/openssl
more param parsing fixes, overseen stuff
fixed intl calendar param parsing
first x64 fixes for ext/openssl
Added an optimization of class constants and constant calls to some internal functions
Added an optimization of class constants and constant calls to some internal functions
merge fix
add test
correct error datatype
fixed 32 bit unsigned to int64 casts
fix #28
fix #27
Revert NEWS
first shot fixing ext/com_dotnet
Enormous whitespace fix
fixed ext/bz2
ZEND_STRS - 1 => PHPDBG_STRL
Export conditional breaks
Added test
fix windows build build shared on windows
ws
nope
Breakpoints are now persistent over cleans
remove comment
use tsrm_shutdown
- Rename command to "set break"
- Added command "set breakpoint <on|off>"
fixed ext/intl
Enable backwards reading in list command
bring the news
correction in help
export opcode breakpoints
export method breakpoints
symbol breakpoint export
...
swap PROMPT for phpdbg_get_prompt in help
add source export functionality, only files working, buggy source
updated datatypes in apache handler globals
consistent ordering
...
update changelog
add source command
Support also multiple directories in additional ini scan dir
fixes so file_get_contents() works again, and some more
.phpdbginit also possible in ini dirs
...
...
add session image
consistent in ___ for info/print
fix erroneous paste in
more datatype fixes
ZEND_INT_FMT and some more for ext/standard
a prompt with an % == nice segfault
Do not mix long and int
change # for J/L
ZEND_INT_FMT again
printf int format fixes
compiler warning
remove annoying blinking
fix openssl (testing required)
blink/underline
add black
spelling correction
add element help for set color command
example colour output
- Update changelog
- CS
- Added yellow color
userland api for prompt/color commands
use lowercase alias
- Use macro here
correction
get good control over colors and prompt
fixed ini and functions in assert.c
one more walk through in Zend, fixed (or broken) things being overseen
make api function and format structure for color management
fixed range check
- Missing return
- Added more colors
- Initial work on setting color to prompt
- Keep the color
...
move oplog command to set commands add help for set commands move set down in the list of prompt commands
one more walk through in Zend, fixed things being overseen
- CS
- Oppss, forgot to add new files
- Added "set prompt" command
- Moved information about breakpoints to "info break"
Pssst, compiler!
fix windows build warning
Added opcode break deleting
update changelog
help for delete breakpoint remove redundant decl
Prevent segfault when no execution context set with "b <num>"
- Passing strlen to phpdbg_set_breakpoint_symbol
Add breakpoint deleting
- Moved conditional bp checking
- Added print information about opcode breakpoint
- Missing cleaning for opcode bp
- Update
typo set last command/param more carefully
add memory usage info to print
add help for break op command
- Added gcc attribute to check formatting parameters
- Moved breakpoint checking to phpdbg_bp.c file
- Typo
- Moved catch cmd to "break op" cmd
- Update changelog
- Added catch command
Shut up, compiler!
FIX ALL THE TYPOS!
update version after release
change version for release
API decls
support shared build on unix
fix whitespace in phpdbg.c
fix sigint when executing
fix sigint
- Exit debugger when hitting ctrl-c in no execution
quit on CTRL+C when interactive
- err, revert
- Include fixed issues
- Missing register command
- Change version
- Update changelog
fix ignore php.ini and override path
fix infruritating segfault
shut up valgrind
fix memory error
hardcode log_errors setting
-...
do not destroy opcodes on resetting same context
started to fix ext/session
fixed ini_set for integers
- Removed unused var
- Added support to set breakpoint in the current place
- Reset frame num here
fix windows build
argv example in phpdbginit
compress help menu
merge frame/trace commands from bwoebi tidy up add help for frame command fix help made incorrect by additions
Shut up, compiler!
Added frames and beautified backtrace
...
first shot to fix session
another tut
initializing tut
fix return datatype
...
fixed apache2 handler
add readline completion tip to phpdbginit
better info literal
better handling of sigint info literals command
made zend list to use 64 bit indexes
- WS
...
fixed test
housekeeping, moving stuff to appropriate units
And here is the real fix for #66124
fixed param parsing in mbstring
move opcode stuff to opcode.c
use constant numbers
ws
more on disassembler
converted simplexml ext
fixed libxml
better output for disassembler
left justify oplines
var and temp var numbers
first shot for php-cgi for size_t and php_int_t
some work on opline output, incomplete
fixed the skipif part
spelling correcting
- Removed unused var
fix broken subs
tidy
restore sanity to commands/handlers/the universe
stop break on condition from bugging out
- Drop unneeded code
- Update Changelog
- Added support to break when signaling ctrl+c
- Initial code for signal handling
clean build on windows
fix
remove unused mshutdown
fix bug, allow init access to vm uninterrupted
step through eval option
...
fix stepping into code from command line
now, as it works correct, fix the test
...
fix eval
export more Zend API
-r option
removed debugbreak
datatype fixes for iconv
fix Makefile.frag on multicore builds ... possibly
update .phpdbginit with more info/example
add help for -q
fix strange chars on method breakpoint
fix broken sub command error
- Update README
- Added option to hide banner
correct help for register command
fix eval for new input handling
...
fix #13 output buffering not working during execution
align
tidy alias menu
fix shell command to use new input
- Passing input ptr to handlers
don't allocate that, static inline this
zend expects this to be clean memory
registered functions able to accept any number of arguments
- CS
- CS
- CS
improve R
use new input handling everywhere
permanently deactivate that place, not on runtime only
- Missing function prototype
added a test to cover distinction between boolean return value of unserialize function and deserializing serialized boolean
- Removed unnecessary check and allocation
- Removed unused var
more on functions
- Check for PHPDBG_DEBUG
- Removed unused var
- Cosmetic changes
- Added phpdbg_trim()
- WS, removed unused var
debugging new input stuff
avoid memory error
show where
cleanup
...
escaped strings
argc/argv started
include registered functions in help for register command
fix broken repeat command
fixed key length datatype
removed a loop
fixed datatypes for some basic globals members
bail on fail for console input, fix - ./phpdbg
more tidy
fix range check related to #45877
tidy up reading input, avoid leaks, restore sanity
avoid doing a stream_select on a closed stream
better call register
- Removed unused variable
fixed zlib param parsing
ordering
...
help for register better formatting for help menu
don't dtor that
register functions, needs work
- Update changelog
correction to print stack
fix memory errors when printing execution context
make errors stand out more, don't duplicate output
add resource type to info
changes to info
no data in variable info, too messy with normal objects
- WS, removed unused var
tidy vars
fix memory errors
- WS
- Avoid to show number of variable
- Removed unused variable
Updated NEWS
fix memory error
no more allocing params
avoid leaks from parameters
update image
remove changes
improve uncaught exception handler
moved the check to the right place and fixed wording
correction to aliases
tidy help
add stack printer add alias examples in help tidy up in help
- Removed unused variables
don't resize window on windows anymore, not required
compress text/tidy up
corrections
runtime checks for various lengths in pcre
help for shell command
shell command
change message, it's wrong
destroy displayed exception and reset eg
display uncaught exceptions
fix stack entry detection for symbol breakpoints count yield as return for leave/finish
seek ZEND_YIELD
fixed one more stat() occurrence
better way to detect leave/finish
don't be lazy, scan for ZEND_RETURN when setting seek opline
clean flags on run
fixup until/leave/finish
- WS
- WS
- Move phpdbg_welcome to phpdbg.c and staticfy it
- CS
- Removed unreached break stmt
- print command has optional arguments
brifer
Eliminated the TSRMLS_FETCH() in zend_set_memory_limit()
try another layout
fix window size on windows
fix mmap in windows
fix windows build
export more Zend API
- Rename has_args to arg_type
- WS
- Clean up command macros - Added flag to specify no argument, required argument and optional argument
- WS
force clean build every time, no room for error
correction
- Implemented "info error" command
added info funcs
- Added "info vars" to show active variables
tidy
info classes + help
- Added macro for trailling command
fix segfault when autoglobals are not properly setup
- Use macro here
fix list not working when exec is set but not executing
- Initial code for info command
leave function + help
finish?
- Added finish/f command
- Missing credits
- Drop unneeded parenthesis
fix whitepsace in here first
- Change error message
phpdbg_default_switch_case(); in list lines
fix compiler warning
- Use offset when listing active file and reuse list handler code
add highlight param to file listing
correction
add print exec command to show current execution context instructions make phpdbg_compile public
Update NEWS
consistency in prompt/list, do not return FAILURE from command handlers
uniform code in print.c
cleanup in list ... last time
switches in list.c, be consistent in all command handlers
stat before setting breakpoints on files default switch case for command handlers trace route through handler tree for debugging etc **selected
remove more no expression provided messages
get rid of No Expression Provided messages, not required anymore
stat execution context and check it is a regular file or symlink
establish relationship between parent and child commands extend alias help automatically invoke child commands
include all alias and child command information in help
add list class and method commands update help text to be more specific
update bootstrap
...
fix is_class_method (needs revision) don't free last (needs revision)
make handlers take phpdbg_param_t
move phpdbg_param_t to phpdbg.c|h add string length and type to param_t (made struct instead of union) typedef enumerated param types add some error messages when command recieves unsupported values
add phpdbg_debug function and --enable-phpdbg-debug configure option added debug statement to do_cmd in preparation for updates
- Added changelog file
- Implemented issue #11 (until command)
add clean-phpdbg rule to Makefile.frag to aid development
fix segfault on some implementations of atoi
Update NEWS
This is CLI web server change.  Added some common MIME types to the existing lookup list, pending a more thorough lookup solution, if anyone wants to do that.  Ref http://news.php.net/php.internals/69990
- Back to development
- Preparing for first release
arginfo for userland functions
cleanup
add oplog status to context information on print command
...
tidy example
extend userland api phpdbg_break function
remove additional switch
...
embed code in .phpdbginit
- Removed unused var
...
implement 5.4 support
fix zend_off_t when int64 is disabled
NEWS
include conditional breakpoints in out
swap welcome/init around
change image on tutorial
- Change comment style
..
tidy
update image
better description
...
correction
add opline logging and setup including command line option
...
Move the JSON bugfix into the 5.5.6 changelog.
correction
help for command line options
correction
example .phpdbginit
fix crash when .phpdbginit quits
updates
implement init file and command line options
fix case sensitivity in print func command
fix case sensitivity in print method command
...
fix stepping
...
move listing commands out to their own command list add TSRMLS_CC in clear_param for consistency
phpdbg_init from file & command line option (no impl yet)
fixed undefined behaviour in array_sum
fix for calculator hardware :)
additional checks in is_*
- Added .gdbinit
fix duplicate message on print .func if no active class
alias printing commands
fix quit not working
fix crash on clean
fix crash when cleaning environment fix crash when specifying exec on command line
clear conditional breaks in uapi
TSRMLS_CC missing
- Missing break
- Cosmetic changes
- Cosmetics
- Use realpath on PHPDBG_G(exec)
- Added parameter parsing functions
change defaults for windows
windows preview image
- Unnesting some code
- Removed double checking + ws changes
- Added check for file context on "break lineno" and name length on "break func"
updates for windows
...
fix clashing
...
fixed serialize/unserialize
aliasing commands
Removed UPGRADING note
...
show conditionals
don't allow conditionals to be executed by eval()'d code
...
fixed ext/date for php_int_t usage
support conditional breakpoints
fix merge
fixed "struct stat" usage in main, cli and ext/standard
Small grammar changes
...
consistency
...
move image from root
...
...
...
...
...
...
...
add intro tutorial
show printing image
add show verbose execution image
...
show break screen image
break help image
help image
tutorials directory for images and markdown
clean up build
non readline fixes
...
method printer
more detailed opline
...
fix leak from readline
activate globals
...
...
fix
...
fix list length lookup
...
class/func printers
fix segfault on set break opline address
class printer
fix bug in passing correct expression length add class printer (half done)
housework
no more printf
remove more printf
deploy _write
added phpdbg_write to replace all  the printf
- Spred more some macro usage instead of phpdbg_print()
- Added phpdbg_notice() and phpdbg_error()
- Cosmetic
Allow $num=0 in array_fill()
Rewrote test using tcp instead of http:// stream
Implemented FR #65917 (getallheaders() is not supported by the built-in...)
fixed stat usage, yet core only
5.5.7 now
...
...
...
fix output from print command to show all breakpoints
- Simplify code
- Cosmetic change
- Added check for malformed class::method syntax
- Improved breakpoint code
...
- Removed name member to opline breakpoints
- Implemented "break N" where N is the line number on the current file
more windows
windows
windows
more fixes to spl
...
updates to helpers
fixes to spl
...
printer commands
...
...
...
web-bootstrap example
...
additional list option, class methods
...
...
...
...
colourfulness
...
more command line options
readline
readline support #6
...
...
more help
...
- Not needed strlen() here
...
...
- Added phpdbg_is_empty function
- Update list cmd description
fix
- Added "list func" support
blurb/version/issues string
compress globals
- Added PHPDBG_BP_MASK macro
[Not running]
...
condense globals introduce flags sensible silence and stepping
...
...
...
- Improve error message and added check for fstat return
break on class methods don't dtor eval'd retval more reliable break on methods
- Added check for no context file
use appropriate seek() and tell() on _WIN64
- Added initial code for list command
define platform dependent zend_off_t
- Added lineno to breakpoint message
- WS
...
update
separation etc
ws
fix segfault on empty eval
fix opcode missing on eval
typo
stop multiple executions from occuring at once, #5
no estrdup on opline breakpoints
fix output from userland break point insertion
fix breakpoint in userland
precise break from userland
phpdbg_break userland
...
...
output [] around phpdbg text
...
fixes to pow()
...
fix break on opline
...
break opline help
break on opline
fixed parse_url()
fixed range()
updates to break setting
more output on setting break points output breaks with print command
fixed array_product()
fixed array_slice()
clean not destroy included files remove argc, argv from phpdbg_interactive, unused
noquit on fatal errors clean command to clear environment
...
...
...
register server vars
ini working
update to default on
...
- Cosmetics
- Cosmetic changes
- Move PHPDBG_NEXT to prompt header
exec last command automatically on enter
- Get rid llist from symbol breakpoint
...
...
quiet
...
...
remove cont
...
...
Update NEWS and remove the unnecessary UPGRADING note.
- Improved phpdbg_set_breakpoint_symbol function
- Improved phpdbg_set_breakpoint_file function
- Change breakpoint id to int
- Change header inclusion order
- Renamed breakpoint find functions
- Added separated file to opcode decode function
- Added breakpoint counter
fix symbol breakpoints
- WS changes
print opcode names
- Added prototype for breakpoint funcs
- Cosmetic changes
- Simplify code
next not quitting when not stepping
- Added separated file to handle breakpoint feature
print_opline function to decode opline
fixed *scanf() family
instructions
- Initial code for breakpoint on function
...
fixed *printf() family
improve output from eval()
consistency
...
fix interference while quitting
- WS changes
- WS change
fix explode()
...
...
...
consistent help
correction to headers backtrace help
backtrace
- Added llist dtor
cont
- Get the realpath on break command
backtrace
- More work on file:line breakpoint
...
eval()
- Breakpoint initial work
stepping
one more fix to pack/unpack
run help
fixed unpack
execution
fix 64 bit integer values
- Renamed brake to break
- Cosmetic changes
+compile
...
woops
bit more work on menu implement helper menu name some macros to help with declarations (sorry Felipe :))
header in main
missing 'config.h' in 5dc37b3
- Added prototype for non-static function, fixed typo and staticfy command handler
- WS change
- Added initial code for a simple prompt
- Declaration first
- Added .gitignore
- WS changes
cleanup
change server->phpdbg
import
Initial commit
use ZVAL_ZVAL to init ZVAL from ZVAL
Make all code paths in json_determine_array_type() return constants.
reverted compare funcs and return values, should be int anyway
fix index insert
fix array related compare functions
too much for a compare func
Only check user functions for filenames.
Remove now unused function_filenames struct.
Look in the function_table instead of function_filenames for actually declared functions.
Stop PHP from modifying the lowercase function name in place.
fixed 64 bit pass by ref
fixed fetching $this
Added tests for PHAR/OPCahce incompatibilities
Update NEWS
Update NEWS
NEWS entry
NEWS entry
remaining replacements ulong vs zend_uint_t
fix macros
fix datatype for hash vars
Moved arrays again to "static_scalar:" & little cleanup
first shot for 64 bit array indexes, more broken things to fix
Renaming
Constant expressions refactoring
bump version, empty NEWS, UPGRADING and UPGRADING.INTERNALS
bump API versions
configure output alignment
bump API versions
Add a couple more test cases to parse_url() tests
fix missing change from 'tcp_socket' to the more common 'server'
fix many parallel test issues
Cleanup temp test file
Update LiteSpeed SAPI code to V6.4
updated NEWS
Remove outdate codes, make it clearer, although just a bit..
Update NEWS
add vc12 (2013)
add vc12 (2013)
use max int to out the array index
NEWS + UPGRADING
Sync ext/zip with pecl/zip version 1.3.2 - update libzip to version 1.11.1. We don't use any private symbol anymore - new method ZipArchive::setPassword($password) - add --with-libzip option to build with system libzip
fix stream_wrapper_register()
fixes to array funcs
Removed operations on constant arrays. They make no sense as constants are not allowed to be arrays. And as just properties are allowed to; no problem, we still don't need operations on any constant array.
Added a few more operators
limit virtual_cwd_activate() duplicated call to ZTS only
Whitespace fix
converted several switches to ifs and made more opcache friendly
reverted the previous commit, both calls are needed in TS mode
virtual_cwd_activate() should be called only in one place
Typo fix: umknown -> unknown
Typo fix: umknown -> unknown
back to do_alloca()
removed unnecessary call
Fatal error about self referencing constants fixed
simplify the state free macros
add news entry about FPM backlog change
Working commit for constant scalar expressions (with constants). Tests will follow.
Removed unnecessary GC checks
Add crypt() change in UPGRADING
compact the code to preserve the error info after state freeing
back to do_alloca(), reverted the wrong replacement
5.4.23-dev
updated libs_versions.txt
Implemented Change crypt() behavior w/o salt RFC
Update NEWS
Update NEWS
add bundled libzip LICENSE, as required by BSD License terms
Avoid copy in func_get_arg()
- Updated to version 2013.8 (2013h)
Use zval* instead of zval**
Increased limit for opcache.max_accelerated_files to 1,000,000. (Chris)
Allow unlimited line length in fpm config files
Improved performance of array_merge() by eliminating useless copying
fixed hex integer interpretation
force the multiply macros to use zend_int_t
Improved performance of func_get_args() by eliminating useless copying
fix limitation of upload size == (U)INT_MAX in CGI
Link to more readmes
test commit
increase backlog to the highest value everywhere
fixed binary int representation
some strtol replacements
remove "PHP 6" staff
fix strlen macros
Update NEWS
- test3
- test commit 2
- test commit1
enabled windows to use stack in both ts/nts mode, some more fixes
moved to do_alloca() usage where appropriate
ldap_escape() notes
- Updated to version 2013.7 (2013g)
Increment version number, since this will be 5.5.6.
Added Zend Debugger to the note about the load order (by trash4you at online dot de)
Added a LICENSE file to make it easier for PECL binary distributions to conform with the license.
exif NEWS
add tests for bug #62523
fixed invalid free
fix bug #65936 (dangling context pointer causes crash)
remove TRAVIS check in test source
Just SKIP that test on travis
fix memory leak on error (from Coverity scan)
fix argument type & remove warning
fix const warnings in intl methods
fix possibility of access to *storedType without initialization
5.4.21 release date
fix argument type & remove warning
fix const warnings in intl methods
When src->src is null this doesn't get initialized but it is still used, so the passed in *ze will point to unitialized memory. Hopefully src->src is never null, but just in case this initialization doesn't hurt.
fix possibility of access to *storedType without initialization
5.4.21 release date
These getpwnam('') tests are silly and not portable
Clean up this weird safe_emalloc() call
Minor Coverity tweaks
- Moved NULL check before dereferencing
Remove senseless check here
- Moved allocation to if block to make Coverity happy
Trivial Coverity fix
Initialize these to make Coverity happy
Remove extraneous NULL check of Z_ARRVAL_P()
Remove dead comparison (size_t < 0)
Use zend_error_noreturn for all E_COMPILE_ERRORs
Typo fix: managment -> management
Use minus sign instead of hyphen
Revert "Need a way to check whether this API exists"
Need a way to check whether this API exists
use $YACC instead of 'bison' as suggested by Yasuo
fixed virtual cwd header in phar
updated NEWS
fixed all the places where last error could be lost
preserve the error code
fix compiler warnings and type usage
Retruning SUCCESS/FAILURE instead of int
fixed typo and few grammar mistakes
Add missing test to package.xml
Prepare for OCI8 2.0.5 release
TLS news
previous revert killed that file
Revert "TLS news"
Revert "Added support for TLSv1.1 and TLSv1.2"
TLS news
fix ws
Added support for TLSv1.1 and TLSv1.2
Assume the free space is correct on Travis CI.
applied and fixed the original patch
initial move on renaming files and fixing includes
OCI8: More test updates
OCI8: Mostly SKIPIF version updates to simplify version checks at the expense of not testing some edge cases with older Oracle patch set versions. Delete two obsolete .phpt's.
Add ability of alias resolving (it cause problem while work with opcache)
bigger memory_limit should work now on 64 bit windows
fix broken master merge
fix broken merge from master
5.4.21 now
fixed ext/iconv
Expose fputcsv's escape_char to userland
fixed decrement
fixed numeric string comparsion
some more linux fixes
fixed configure.in
ext/intl further fixes
ext/intl further converting
more fixes to ext/intl
Z_STRLEN vs Z_STRSIZE in ext/intl
adapted args in ext/intl
fixed the mb_regex* stuff
fixed sapi filter usage
replaced all the arg formats and Z_STRLEN
fixed set process_title()
fix pcre usage in spl
fixed ext/pcre internal stuff
adapted all the function arg formats in ext/zlib
some more fixes to zend operators
added ZEND_INT_FMT
some fixes to constants, var_dump and var_export
first fixes to ext/spl, yet incomplete
fixes to reflection
fixes to ereg
more fixes to ext/date
replaced arg formats in pcre
fixed sapi.h
replaced all arg formats in ext/standard
replaced all the int params in the datetime
adapted the function args for ereg
trivial fix spl_autoload_functions()
final fix for hebrev()
fix build
fixed file_put_contents()
fixed fwrite
fixed "s" vs "S" for soundex
partial fix to hebrev
fixed unpack()
fixed str_pad()
lost condition
fixed str_split()
small correction to substr
fixed strstr()
fixed substr()
adapted all the zend_parse_parameters() calls
changes to dns.c
fixes for types to ext/standard with types ... some stuff is broken now
more fixes to string.c
more for cli sapi
fixes to main/
fixes after merging master
made lang scanner use zend_int.h and regenerated it
added zend_int.h to zend*.dsp
adjusted zend_types.h
added zend_int.h
the very first porting try, many things not worky
fixes to zend
more fixes to streams
fixes to SAPI.c
fixes to plain stream wrapper
fixes to xp_socket.c
fixes to zend_ini and output
fix uuencode
fix base64 stuff
fixes to url processing stuff
huge fix to spl and more
fix 's' vs 'S' for datetime
string sze_t fix for internal strings
strig size_t fixes to zend_alloc.*
trivial fixes to ext\standard
trivial fixes to spl
fix spl_autoload_*
windows fixes
Get core test suite to really pass, fully. Woot
Get basic language tests to all pass (minus xfails)
Better test coverage
It compiles. Sort-of. In a way. Yeah. But nothing works. Sigh
More work, get strings working, sort-of...
Refactor file.c to use new string types
Re-do a lot of it using a conditional define, and legacy type information for APIs
Allow CURLOPT_FOLLOWLOCATION to be used with open_basedir.
Tinker with the wording of the short_open_tag description.
Handle CLI server request headers case insensitively.
ensure that the defined interpolation method is used by the generic scaling functions
Remove obsolete flag
Update DTrace probes
Add test for oci_set_* error changes
Make oci_set_*($connection,...) errors retrievable via oci_error($connection). Improve some error handling to produce error text on some rare edge cases. Disambiguate the Oracle library function call return status values from ORA error numbers. Review and unify error data types.
Cast time_t since some "dtrace -G" invocations fail on time_t arguments
5.4.21 now
Update NEWS/UPGRADING with info about incompat ctx
Typo....
Add a XFAIL test for #64896
Implement phase 1 of rfc/incompat_ctx
Make use of direct returns in some places
Always pass return_value_ptr to internal functions
Allow OCI8 to be DTrace-enabled independently of core PHP's DTrace status.  The proviso is OCI8 must be built "shared" when DTrace is enabled.  This implementation (i) works around an incomplete core PHP solution for extension tracing (ii) avoid any issues with DOF section location and the complexities of needing to merge all provider .d files for static builds (iii) allows OCI8 to be DTrace-enabled when doing PECL installs of OCI8 on PHP versions without core PHP DTrace support.
OCI8: remove unused ext/oci8/config.m4 macro
OCI8 whitespace: remove tabs embedded in code
Remove ini dependency in test
Avoid compiler warning
removed the /Wp64 switch as we use true 64 bit compiler now
updated lib versions, the vc11 ones only matter now
OCI8 2.0: add oci8-check-connection probe and do some renaming
fixed ext/iconv
Use "__" consistently in OCI8 DTrace probe definitions. It maps to "-" in the probe name.
Leave it to DTrace FBT to trace underlying library calls
Evaluate ZVAL_ZVAL arguments only once
fix mysql tests & mark nextRowset problematic tests
Expose fputcsv's escape_char to userland
fix mysql init
add openssl
add mysql settings
Test extension xmlrpc encode type double and string decode type string and int
Stricter libc-client symlink check
Remove semicolon
UPGRADING and NEWS
Better test: Check combined leading/trailing
5.5.6 now
fix typo in copy_variation16 test
Clarify type of use in error messages
Add "Done" output to distinguish hard from soft failures
fix whitespaces
added notes about the PECL site conformity
fixed skeleton to produce the normalized ext version macros
fixed skeleton to produce the normalized ext version macros
Standardized usage of zpp_none and the order of the comparison zpp(...) == FAILURE
OCI8: sync README and package.xml descriptions
Re-enable OCI8 DLL builds with Oracle 10g & 11g client libraries on Windows, in addition to Oracle 12c.  From discussions with Anatol & Pierre this seems to be the most direct way for the Windows PECL build scripts to automatically create links to the generated DLLs.  The issue is that the name php_oci8_12c.dll doesn't match the package name.
C89
Changed return types to zend_bool, renamed test
C89 compatibility
Thanks Daniel, I didn't think long enough
consolidate NEWS with 5.4
Added support for TLSv1.1 and TLSv1.2
Added SAN matching during peer verification
openssl NEWS,UPGRADING
fix bad cast
fix bug #51076 (race condition in shtool's mkdir -p)
DNS name comparison is now case insensitive.
Add new tests to package.xml
Add new tests
Bump mininum requirements for PHP OCI8 2.0 to PHP 5.2 and Oracle client library 10.2 (Note this will connect to Oracle Database 8.1.7 onwards). Use the older OCI8 1.4 from PECL if using an earlier PHP version or older Oracle client library support is necessary.
Use zend_bool as return value for _match()
Added two more test cases for CN matching.
added fixed tests for ICU >= 51.2
fixed failing tests for ICU >= 51.2
Using SUCCESS and FAILURE for return values Using zend_bool for boolean arguments and return values Reduced one level of zval indirection where possible
fixing a minor typo in CODING_STANDARDS document
FIX BUG #65219 - Typo correction
FIX BUG #65219 - Typo correction
FIX BUG #65219 - USE DB not being sent for FreeTDS version < 0.92 FreeTDS <0.92 does not support DBSETLDBNAME option and therefore will not work with SQL Azure. Fallback to dbuse command in letter versions.
FIX BUG #65219 - USE DB not being sent for FreeTDS version < 0.92 FreeTDS <0.92 does not support DBSETLDBNAME option and therefore will not work with SQL Azure. Fallback to dbuse command in letter versions.
- BFN
Allow the ldap extension to be compiled with Oracle's LDAP implementation, if desired.  Note the implementations differ so you will see different ldap behavior.
Add unit test that covers setting the crypto method.
fix bug #64146 (serialize incorrectly saving objects when they are cloned)
such a weird hack probably helps in finding regressions in the future
add NEWS and UPGRADING about gost-crypto
fix bug #55285 XMLReader::getAttribute/No/Ns methods inconsistency
typo: really fix bug #51936 	Crash with clone xmlreader
fix bug #59613 (Crash with clone XMLReader)
fix bug #65808 	the socket_connect() won't work with IPv6 address
5.4.22-dev now
Revert "Make 'make distclean' remove the downloaded pear PHAR"
fix bug #62396 'make test' crashes starting with 5.3.14 (missing gzencode())
Reverted patch (it was used for internal testing and was committed by accident)
OCI8 2.0: Added a new oci_set_db_operation() user space function for the "DB Operation" tracing feature of Oracle DB 12c.
Make 'make distclean' remove the downloaded pear PHAR
show method in error message
fix test
fix memleak on resetting rebind_proc
5.5.4 release date
5.4.20 release date
Prepare for next release
Using only two constants to signal use type intent.
added bitmask variation
fixed test case to pass on other systems than my own
forgot introspection changes
added use_keys argument to array_filter()
Add information about which INI file is which inside respective files
Removed references to "Zend Support"
Added support for GNU Hurd. (Svante Signell)
- Updated to version 2013.6 (2013f)
Support string and array for peer fingerprint matching
More OCI8 DTrace probe updates. Change php.ini-* doc to match an earlier change to config.w32
FIX BUG #48539 - Disable TEXTLIMIT for FreeTDS driver
Don't track parameter number in separate znode
Implement variadic function syntax
fix missing change from 'tcp_socket' to the more common 'server'
fix many parallel test issues
Added function opcache_compile_file() to load PHP scripts into cache without execution.
who put that stupid newline there?
add md5 and sha1 fingerprint tests
Make message and format arguments const char * to avoid build warning about invalid cast.
Copy dba_*() keys before converting to string.
Renamed to be more descriptive of what it does
Streams for ssl:// transports can now be configured to use a specific crypto method (SSLv3, SSLv2 etc.) by calling
yay, reduced one variable
don't leak cert on errors, return null on zpp failure
added better wildcard matching for CN
Added test case for openssl_x509_digest()
removed the byref result
Bug 64744 Show the type of the non-object for more descriptive errors
indentation fail
added option for hash function
added option for raw output
added openssl_x509_digest(), output is binary sha1
Added application/pdf to PHP CLI Web Server mime types.
add note about request_body and php://input
fix Zend/tests/ns_040.phpt failing
Build OCI8 2.0 on Windows with Oracle Database 12c libraries only
better way to fix PRIu64 availability on windows
Revert "EmptyIterator now implements Countable; fixes bug 60577"
RFC 6598 reserved ip range starts at 100.64.0.0
Add ldap_escape()
fix a very rare case of use of uninitialized value combined with a memleak
fix test concurrency
fix test concurrency
fix test concurrency
fix test concurrency
fix test concurrency
fix build - PRIu64 vs %I64u
final bits
we need to use the full stream wrapper for filters
let the libsqlite3 symbols be exported in dll
NEWS/UPGRADING{,.INTERNALS} notes about temp POST stream
Exclude bison 3.0 by Mike
NEWS for added reserved ip addresses according to RFC 6598
Add RFC 6598 IPs to reserved addresses
upload2G note
NEWS for #60577
NEWS for bug #64441
use 65k of data to get a more explicit result
double test timeout for travis
this test is fragile on travis, let's see why
Add test for ISSUE #128
EmptyIterator now implements Countable; fixes bug 60577
News for bugfix #64157
Bug 64157 Changed error message to make sense
Save a TSRMLS_FETCH() for zval_ptr_dtor in executor
Remove some more unnecessary macros from phar
Remove PHAR_(Z)STR* usages
Remove version checks in phar
Provide more macros for handling of interned strings
Make use of Z_*VAL and ZVAL_* in language scanner
Make consistent use of Z_*VAL macros in compiler
fix broken sha2 configure tests
fix broken sha2 configure tests
Small cleanup in class name resolution of compiler
Move NEWS entries to correct version
Prepare pdo_firebird for a pecl release also
Sort the NEWS file alphabetically.
Request non-keep-alive connections by default in HTTP 1.1 requests.
Allow CURLOPT_FOLLOWLOCATION to be used with open_basedir.
remove unused code
tests
make reading php://input JIT if enable_post_data_reading=0
revert stream cast
Tinker with the wording of the short_open_tag description.
Handle CLI server request headers case insensitively.
ensure that the defined interpolation method is used by the generic scaling functions
Call php_module_shutdown() for php-fpm child processes
Remove obsolete flag
Update DTrace probes
Add test for oci_set_* error changes
Make oci_set_*($connection,...) errors retrievable via oci_error($connection). Improve some error handling to produce error text on some rare edge cases. Disambiguate the Oracle library function call return status values from ORA error numbers. Review and unify error data types.
fix failing tests
fix indention
Add support for CryptoPro S-box for GOST
5.5.5 now
Cast time_t since some "dtrace -G" invocations fail on time_t arguments
5.4.21 now
run-tests.php: Adding support for sections EXPECT_EXTERNAL, EXPECTF_EXTERNAL and EXPECTREGEX_EXTERNAL. (Issue 55736)
Update NEWS/UPGRADING with info about incompat ctx
Typo....
Add a XFAIL test for #64896
Implement phase 1 of rfc/incompat_ctx
Make use of direct returns in some places
Always pass return_value_ptr to internal functions
Allow OCI8 to be DTrace-enabled independently of core PHP's DTrace status.  The proviso is OCI8 must be built "shared" when DTrace is enabled.  This implementation (i) works around an incomplete core PHP solution for extension tracing (ii) avoid any issues with DOF section location and the complexities of needing to merge all provider .d files for static builds (iii) allows OCI8 to be DTrace-enabled when doing PECL installs of OCI8 on PHP versions without core PHP DTrace support.
OCI8: remove unused ext/oci8/config.m4 macro
OCI8 whitespace: remove tabs embedded in code
Update NEWS
Remove ini dependency in test
Add test for conditional function declaration
Avoid compiler warning
removed the /Wp64 switch as we use true 64 bit compiler now
updated lib versions
updated lib versions, the vc11 ones only matter now
OCI8 2.0: add oci8-check-connection probe and do some renaming
fix ZTS build
slim post data
slim post data
Use "__" consistently in OCI8 DTrace probe definitions. It maps to "-" in the probe name.
Leave it to DTrace FBT to trace underlying library calls
Evaluate ZVAL_ZVAL arguments only once
fixed decrement
fixed numeric string comparsion
some more linux fixes
fixed configure.in
ext/intl further fixes
ext/intl further converting
Handle case sensivity of constants (nikic)
Comment nitpick (nikic)
self and parent are valid function and const names (nikic)
Adjust some test names, remove obsolete and duplicate tests (nikic)
fix mysql tests & mark nextRowset problematic tests
Test extension xmlrpc encode type double and string decode type string and int
Stricter libc-client symlink check
Expose fputcsv's escape_char to userland
fix mysql init
add openssl
add mysql settings
Compile error on const definition conflicting with import
Disallow using functions/consts defined in the same file
more fixes to ext/intl
Z_STRLEN vs Z_STRSIZE in ext/intl
adapted args in ext/intl
fixed the mb_regex* stuff
fixed sapi filter usage
replaced all the arg formats and Z_STRLEN
Compile error on function definition conflicting with import
Add test cases for conflicting use and definition in same ns (stas)
Suppress static analyzer warnings in specialized executor
Update NEWS
Update NEWS
ensure the test doesn't fail because of tz warning
fixed set process_title()
fix pcre usage in spl
fixed ext/pcre internal stuff
Remove duplicate calls to set filename & lineno for the DTRACE_FUNCTION_ENTRY/RETURN cases
adapted all the function arg formats in ext/zlib
some more fixes to zend operators
added ZEND_INT_FMT
some fixes to constants, var_dump and var_export
first fixes to ext/spl, yet incomplete
fixes to reflection
fixes to ereg
more fixes to ext/date
replaced arg formats in pcre
Test extension xmlrpc encode type double and string decode type string and int
fixed sapi.h
replaced all arg formats in ext/standard
replaced all the int params in the datetime
Suppress compliation warning "warning: passing argument 1 of ‘_efree’ discards qualifiers from pointer target type"
Revert "Suppress compliation warning "warning: passing argument 1 of ‘_efree’ discards qualifiers from pointer target type""
Revert "Suppress compliation warning "warning: passing argument 1 of ‘_efree’ discards qualifiers from pointer target type""
Revert "Suppress compliation warning "warning: passing argument 1 of ‘_efree’ discards qualifiers from pointer target type""
adapted the function args for ereg
More test cases for conflicting aliases
Removed assumption that \\ will be present
Add test case for conflicting use and use function alias (stas)
Import namespaced constants via new 'use const' sequence
Correctly distinguish between functions and constants
Add new 'use function' sequence for importing namespaced functions
trivial fix spl_autoload_functions()
final fix for hebrev()
Apply pgsql notice test fixes to PHP-5.5
Remove trailing whitespace in test
fix build
Forgot newline in test
Remove duplicate calls to set filename & lineno for the DTRACE_FUNCTION_ENTRY/RETURN cases
fixed file_put_contents()
fixed fwrite
fixed "s" vs "S" for soundex
Stricter libc-client symlink check
Suppress compiler warning "warning: variable ‘length’ set but not used [-Wunused-but-set-variable]"
Suppress compiler warning "warning: variable ‘retcount’ set but not used [-Wunused-but-set-variable]"
Suppress compliation warning "warning: passing argument 1 of ‘_efree’ discards qualifiers from pointer target type"
Reduce compilation noise during normal compilation:     php-5.5/ext/session/session.c:836: warning: unused variable ‘struc’     php-5.5/ext/session/session.c:836: warning: unused variable ‘num_key’     php-5.5/ext/session/session.c:836: warning: unused variable ‘key_length’     php-5.5/ext/session/session.c:836: warning: unused variable ‘key’     php-5.5/ext/session/session.c:835: warning: unused variable ‘key_type’     php-5.5/ext/session/session.c:834: warning: unused variable ‘_ht’     php-5.5/ext/session/session.c:857: warning: unused variable ‘has_value’     php-5.5/ext/session/session.c:856: warning: unused variable ‘namelen’     php-5.5/ext/session/session.c:853: warning: unused variable ‘name’     php-5.5/ext/session/session.c:852: warning: unused variable ‘p’
partial fix to hebrev
fixed unpack()
fixed str_pad()
lost condition
fixed str_split()
Update NEWS
Add php_serialize session.serialize_handler. This patch closes
Update NEWS
Quash compile warning "warning: 'flags' may be used uninitialized in this function"
Remove compilation warning "warning: no newline at end of file"
Remove compilation warnings: "warning: no newline at end of file"
Tabify
Eliminate compiler warnings: "warning: pointer targets in initialization differ in signedness"
Eliminate compiler warnings "warning: pointer targets in initialization differ in signedness"
Remove some compilation warnings:   'unused variable' and   'enumeration value not handled in switch'
split the glob() test to test different basedir
Add session.use_strict_mode description to php.ini-*
Revert wrong description
bump version
Remove compile warning:    warning: unused variable ‘j’ [-Wunused-variable]
Remove compile warnings:   warning: variable ‘lastch’ set but not used [-Wunused-but-set-variable]   warning: variable ‘buf’ set but not used [-Wunused-but-set-variable]
Remove compile warning: variable ‘streamp’ set but not used [-Wunused-but-set-variable]
Remove compile warnings:   variable ‘obj_cnt’ set but not used [-Wunused-but-set-variable]   unused variable ‘last’ [-Wunused-variable]   unused variable ‘j’ [-Wunused-variable]
Remove compile warning "variable ‘mekeylen’ set but not used"
Reduce (some more) compile noise of 'unused variable' and 'may be used uninitialized' warnings.
Update NEWS
Update NEWS
fix bug #65481 (shutdown segfault due to serialize)
Track created curl_slist structs by option so they can be updated in situ.
fixed glob() edge case on windows, ref bug #47358
modified the new glob() test for master
added new glob() test
fix using wrong buffer pointer
Use in preg_replace_callback() using variables by reference and test for bug #64979
https://bugs.php.net/bug.php?id=64979
add CVE-2011-4718
new for fix #65225
Use pkg-config to detect iodbc
Add -P option to use the current binary
Create test to the extension xmlrpc
code related typo fixes
Create test to the extension xmlrpc
Revise pgsql tests
Use pkg-config to detect iodbc
small correction to substr
fixed strstr()
fix typo
merge news for 5.5.2
Update NEWS
Update NEWS
With --enable-dtrace, the correct PIC/non-PIC .o files on Solaris and Linux are now used.  DTrace is part of Oracle Linux.  See https://oss.oracle.com/projects/DTrace/
fix cve number
fixed substr()
adapted all the zend_parse_parameters() calls
New news section
Prepare news for PHP-5.5.2
Remove unused variable
Reduce compiler noise by removing unused variables and labels
Reduce (some) compile noise of 'unused variable' and 'may be used uninitialized' warnings.
Skip test if SKIP_ONLINE_TESTS set
fixed merge mistake
changes to dns.c
removed unused vars
fixed strndup usage in the pgsql ext
Revise pgsql test files
Revise pgsql test for Travis CI
Add 00version.phpt to get server/protocol/client version. Revise test script description
use mysqlnd, some tests fail otherwise
ensure notices are not ignored when tests need them
Embeds the content of the DTD in the DOCTYPE declaration of the XML files.
Adds 2 new xml files which include the dtd path relative to the base directory for the php source code. It fixs the fail on the load of the dtd in the tests modified by this commit.
Adds files: error 1 to 5 and variation 1 to 4
php.ini-development/production: remove php_zip.dll
Update NEWS
Update NEWS
Implemented Request #20421 (session_abort() and session_reset() function
Implemented Request #11100 (session_gc() function).
Remove compile warning of commit 554021d21e1b2517313a377676260c188152c2eb
Implemented Bug #17860 Suggestion: auto detect whether session changed
Implement Bug #54649 Create session_serializer_name()
bison upgrading notes
haha, a bit too optimistic; not merged yet
add upgrading notes about bison and 2Guploads
Replce ZEND_FETCH_* instructions with IS_CV if possible
fix test
fix bug #65391
fix bug #65391
use $YACC instead of 'bison' as suggested by Yasuo
improve comments and messages as suggested
Update NEWS
Update NEWS
add excluded version exmaple
make the bison version check a blacklist
add some tracing
Remove tabs on blanklines in Makefile sources. This prevents a 'suspicious line' warning when editing & saving Makefile using Emacs.
add NEWS entry; add simple test
more precise condition
make this work in vc11 too
Use int64_t and atoll() after discussion with johannes
ws
Patch for https://bugs.php.net/bug.php?id=44522 to allow uploading files above 2G.
unify stdint type usage
One more './configure --help' alignment fix
Re-fix Bug #65372 (Segfault in gc_zval_possible_root when return reference fails)
PHP 5.5.2 has already branched
Doh. PHP 5.5 NEWS needs own commit.
NEWS for recent DTrace merges. Remove redundant 'cp' during DTrace install.
Enable dtrace probes on linux as they are compatible with systemtap
Add an empty make command for DTrace .d files to stop an implicit circular dependency in GNU Make which causes .d files to be overwritten (Bug 61268)
Check for NULL ptr from get_stream() before passing it on to php_stream_cast()
add NEWS entry; add simple test
add news about session fix
add news about session fix
First fixes for a 64bit compatible ftp extension
fix compiler warning, use longs for hashes
fix crash, enable session_id and fix test
Strict session. Detect session id collision
Strict session
non living code related typo fixes
fix typo
This doesn't fail in 5.5 anymore
We shouldn't load any local ini files for these tests
pcre_quote? No such thing. How did this ever pass?
This test needs local infile enabled
This test will only work if gc is enabled
Make sure test.php isn't coming in from the include_path
fix generating config.nice
Update NEWS
Add user contributed test. Bug #61748
Clean up the 'generated' phar.inc file. When building outside the source tree the copied phar.inc needs to be removed, but when building in the tree, the file must remain since it is part of the source. See the copying logic in ext/phar/Makefile.frag.
Revert "Allow 'make distclean' to clean up the 'generated' phar.inc"
Use PHP's major version when cleaning up Apache .module files
Allow 'make distclean' to clean up the 'generated' phar.inc
Clean generated OCI8 DTrace files in 'make distclean'
Give 'make distclean' some love. Clean files created by AC_OUTPUT, shell redirection etc.
Improved fix for bug #44686 (SOAP-ERROR: Parsing WSDL)
Added opcache.restrict_api configuration directive that may limit usage of OPcahce API functions only to patricular script(s)
MFH: fixed #65045: mb_convert_encoding breaks well-formed character.
added test script for bug65045.
MFH: fixed #65045: mb_convert_encoding breaks well-formed character.
Added support for glob symbols in blacklist entries (?, *, **)
Remove tabs on blanklines in Makefile sources. This prevents a 'suspicious line' warning when editing & saving Makefile using Emacs.
Improved implementation of NOP removal pass from O(n^2) to O(n) (hnw)
A minor fix for configure outpu (Tony)
Constify streams API and a few other calls down the rabbit hole. (`char *` to `const char *` for parameters and few return values) In a few places int len moved to size_t len.
make simplexml headers available to the outta world
fixes for types to ext/standard with types ... some stuff is broken now
more fixes to string.c
more for cli sapi
fixes to main/
Update NEWS
OCI8 extension: Allow Implicit Result Set statement resources to inherit the parent's current prefetch count
Update UPGRADING and make typo fixes to OCI8 package.xml
Upper section name
Update NEWs
Initial PHP OCI8 2.0.0-dev commit.
Expand the ZEND_STRL macro to handle platforms where strncmp() is a macro.
fix missing include
fixed bug #65311 testsuite failure due to incomplete fix to bug28985.phpt
more precise condition
make this work in vc11 too
Use int64_t and atoll() after discussion with johannes
fixed possible null deref
Disable a flag
fix bug #65028 	Phar::buildFromDirectory creates corrupt archives for some specific contents
- addressed bug #65159, Misleading configure help text for --with-mysql-sock
Update news for FILTER_SANITIZE_FULL_SPECIAL_CHARS fix
Wrong value for FILTER_SANITIZE_FULL_SPECIAL_CHARS in REGISTER_LONG_CONSTANT
Added recursivetreeiterator::setPostfix() method
next is 5.5.2
add a few comment
allow both the old and new cfg argument to work. (the old of course should contain the typo)
mssql.compatability_mode fix
backward compatibility
HASH_KEY_NON_EXISTANT fix
Update NEWS
Updaet NEWS
Reorder NEWS
intl: remove extra quotes from arginfo params
updated test script for bug #65045.
Mention git and suggest PECL for new things
Update patch submitting instructions
Remove README about PHP 4.0 -> 4.1 API changes
Properly fixed bug #63186 on NetBSD == 6.0
fix header include
fixes after merging master
new NEWS for next release
made lang scanner use zend_int.h and regenerated it
New NEWS
added zend_int.h to zend*.dsp
adjusted zend_types.h
added zend_int.h
Improve php.ini-* documentation
Remove PHP3 conversion scripts
Drop PHP 4 related README
Slightly modernize ext_skel and sekelton/
5.4.19 is next
the very first porting try, many things not worky
fixes to zend
regenerate url scanner
more fixes to streams
fixes to SAPI.c
fixes to plain stream wrapper
fixes to xp_socket.c
fixes to zend_ini and output
add news for xml fix
fix TS build
added sapi check for dl() test
Make zval2myslqnd implementations aware of inheritance
NEWS for 710150c and e2744f1
socket: support unix paths in the abstract namespace
socket: fix bug #65260 (SCM_RIGHTS)
fix buffer overrun
kick unused var
Remove PWS (Personal Web Server) references
fix invalid variable name at ext/spl/internal/multipleiterator.inc (key() method, too)
fix invalid variable name at ext/spl/internal/multipleiterator.inc
revert false fix
typo fixes
less serious compatAbility fixes
typos (orig)
revert false fix
typo fixes
less serious compatAbility fixes
typos (orig)
revert false fix
typo fixes
typos (orig)
less serious compatAbility fixes
add news for bug #65219
Add built-in web server to invocation list
Terminology: change embedded web server to built-in web server to align with cli usage
Align -B and -E parameter names with cli usage (begin_code and end_code)
fix uninitialized memory usage
Update NEWS
- BFN
- Bug #65228 (FTPs memory leak) patch by: marco dot beierer at mbsecurity dot ch
fix version - not -dev anymore since 5.5.0 release
Inprove pg_unescape_bytea() error message
fix the date for 5.4.17
update 5.4.17 date
update 5.4.17 date
fix uuencode
fix base64 stuff
fixes to url processing stuff
huge fix to spl and more
fix 's' vs 'S' for datetime
Inprove pg_unescape_bytea() error message
updated NEWS
Cleanup temp test file
add test for bug #65236
Add a couple more test cases to parse_url() tests
add usleep() to the header, already exported to dll
fix possible resource leak and make sure there's something to qsort()
string sze_t fix for internal strings
Cleanup temp file
strig size_t fixes to zend_alloc.*
- Updated to version 2013.4 (2013d)
Improve pg_unescape_bytea() error message
Bump PECL package info version check to allow PECL installs with PHP 5.5+
Update NEWS
Added warning for hex2bin() when input is invalid string
Update NEWS
Add warning to pg_unescape_bytea() when invalid parameter is passed
array_column: Changing integer in test output to use %d
truncate results at depth of 255 to prevent corruption
trivial fixes to ext\standard
trivial fixes to spl
fix spl_autoload_*
windows fixes
fix assembly of safe_address() for x86 and x86_64
fix assembly of safe_address() for x86 and x86_64
fix assembly of safe_address() for x86 and x86_64
fix assembly of safe_address() for x86 and x86_64
Extended the test for bug #65184
Make sure return value is initialised in case transaction startup fails
Make sure result is initilized
Sync list of supported bison version with PHP-5.5
Add bison 2.6.4 to the list of supported versions
NEWS for two lst intl changes
intl: fix extra space in constant name
intl: add intlcal_set_minimal_days_in_first_week()
Get core test suite to really pass, fully. Woot
Get basic language tests to all pass (minus xfails)
Better test coverage
It compiles. Sort-of. In a way. Yeah. But nothing works. Sigh
Add apparmor change hat functionality to fpm
fix typo in php man page
NEWS
NEWS
Add a few links
More work, get strings working, sort-of...
Refactor file.c to use new string types
Re-do a lot of it using a conditional define, and legacy type information for APIs
added test code for #65045.
fixed #65045: mb_convert_encoding breaks well-formed character.
Don't try to clean up generator stack on unclean shutdown
NEWS
Added PHP_FCGI_BACKLOG, overrides the default listen backlog
Update NEWS
add fix for  #60560 into upgrading
ws
Patch for https://bugs.php.net/bug.php?id=44522 to allow uploading files above 2G.
Update NEWS
BC fix for PR 109 merge - create_sid() method in SessionHandler
Tests, fixes and optimisations
Add create_sid to session_set_save_handler and SessionHandler
Update NEWS
BC fix for PR 109 merge - create_sid() method in SessionHandler
Update NEWS:w
- BFN
- Reclassify bug
- BFN
add new test
Update NEWS
- BFN
Update NEWS
Update NEWS
- BFN
- BFN
- BFN
Minium changes to allow PDO_OCI to build with Oracle Database 12c libraries. (note OCI8 already builds with Oracle Database 12c)
Update NEWS
Some tidy-ups: Don't mention Logo GUIDs in three places; mention password_hash functionality; add some doc URLs for new features; grammar & typos; formatting changes.
- BFN
Notify doc team BEFORE we release
fix imagecreatefromwebp and imagewebp protos
Use same logic to load WebP image that other formats
Upstream fix from https://bitbucket.org/libgd/gd-libgd/issue/75
OPcache must be compatible with LiteSpeed SAPI
small optimization
seems to be working fine for me on 32-bit
fix bug #61860: use USearch for searches, it does the right thing
Require second parameter of imagecrop()
Implements feature Bug #63472 ability to set SO_BINDTODEVICE on socket.
Adding test to verify that __sleep can handle parent classes' private members
Adding test to stabelize keys used when converting objects to arrays
fix #65070, bgcolor does not use the same format as the input image with imagerotate
fix #65070, bgcolor does not use the same format as the input image with imagerotate
Change the search in get_status_string() to correctly handle unknown codes.
Update git rules (5.5 is stable, 5.3 sec only)
skip test for bug #64936 when tokenizer not built
Bump version
Update credits
Reorder NEWS for PHP 5.5.0 final
add notes about opcache windows issue and migration from APC
added some tests based on bug #64395
This will be PHP 5.3.28
Related to bug #65047 (Test skip on client / server version)
Remove broken client version checking
Clean up leftover file after the test
sync NEWS
5.4.18 next
Remove unnecessary NULL checks from zend_hash
Update NEWS, UPGRADING and UPGRADING.INTERNALS
GMP improvements
Implement internal operator overloading
Tests: PDO Mysql - update for fixed getColumnMeta()
fix bug #48724
readline can output control codes
Bug #55694: Update readline test to support attempted_completion_over variable
Bug #55694: Expose attempted_completion_over variable from readline library
update NEWS
news for #64166
add more tests for bug #64166
Move unsigned char declaration to top of block
trailing ws
ws fix
fix test
Update NEWS
fix typo in test
fix test for bug #60322
ensure the error_reporting level to get expected notice
fixed tests
missing tests for bug #53437
fixed EOL
added closing ?>
fix double entry
split the test for 32 and 64 bit
typo fixes (argument)
typo fixes (accommodate, parameter)
missing colon
Backported the fix for bug #53437
Backported the fix for bug #53437
fixed the test
PHPTests for the DOMDocument::loadHTMLfile method. They cover - The basic behaviour - When the method receives as argument a file which doesn't exist - When the argument is an empty string - When an empty file is loaded - When a not-well formed html file is loaded
Callback has to be restored in MSHUTDOWN
Avoid multiple allocations of the same key in different processes
Compact HashTables before storing them in shared memory
Use size_t instead of int
Update NEWS
Update NEWs
Update NEWS
Update NEWS
NEWS
NEWS
fix 5.4.16 date
fix NEWS
updated NEWS
updated NEWS
News update
PHP 5.5.0RC3 NEWS
Add NEWS for PHP 5.3.26
Update NEWS
Update NEWS
fix CVE-2013-2110 - use correct formula to calculate string size
Refactored custom PDO_pgsql methods to trigger errors/exceptions
Allow PDO drivers custom methods to trigger errors/exceptions
news for dblib fixes
FIX BUG #55647, #60512, #60512, #61900, #64338, #64808, #63638
NEWS
Clean up leftover test files
Improved test portability so that it doesn't fail with pdo_pgsql
FIX BUG #55647
FIX BUG #60512 (the correct way this time)
FIX BUG #60512
FIX BUG #61900
FIX BUG #64338, #64808, #63638
NEWS
Slightly edited tests and fix for bug #62024
NEWS
NEWS
pdo_dblib: fix bug #64522DBLIB statement destructor was being called late and clobbered results from subsequent statement objects sharing the same connection
Use size_t everywhere instead
Use size_t everywhere instead
This needs to be a long Otherwise we are limited to a 2G opcache segment
This needs to be a long Otherwise we are limited to a 32G opcache segment
fix #64898imagerotate is broken with bilinear interpolation
reduced the file size even more
NEWS
News for upcoming RC3 if necessary
News for RC2
This will be PHP 5.3.27
5.4.17 is next
NEWS
NEWS
merge NEWS from 5.3
fix order
Integer overflow in SndToJewish leads to php hang AT least in (inputDay is long, metonicCycle is int):    metonicCycle = (inputDay + 310) / 6940;
updates
UPGRADING
NEWS
Add --with-fpm-systemd option to report health to systemd, and systemd_interval option to configure this. The service can now use Type=notify in the systemd unit file.
add reporter
fix bug #64660 - yyparse can return 2, not only 1
fix 5.4.16 relase date
Don't double-quote name of namespaced function.
entry for #64214
other fix for #64214, unmodified file may not have old fp set, causing other possible crashes
Added missing ZE/OPcache related entries
Recover NEWS
Improved IS_VAR operands fetching
Add optional second arg to unserialize()
updated NEWS
fixe preprocessor definition
more check for php_stream_fopen_tmpfile failure
updated libmagic.patch after fix for #64830
updated NEWS
php_stream_fopen_tmpfile may file, causing any following stream usage to crash
fix heap overflow warnings on win x64 debug crt
updated NEWS
updated NEWS
fixed variable corruption under win x64
Missed SKIPIF
News for RC2
NEWS for RC1
PHP 5.3.25 NEWS
Address feature request #38917 for native SPKAC (HTML5 keygen element) support
gd: fix 2 failed tests (bundled lib) due to arithmetic precision (allow minor diff).
gd: fix previous (bad include)
Revert removal of overflow2 use in gd.c Function provided by gd_security with bundled libgd Function provided by gd_compat with system libgd
gd: fix include...
Move (back) missing functions in system libgd to gd_compat - display libPng version in all cases - gd_compat.c in ext/gd (nothing in ext/gd/libgd)
gd: don't include png.h (breaks build on some old version), so report libPNG version only with external libgd
gd: missing comma
gd: fix typo and cleanups
NEWS
fix build with bundled libgd
Move png and jpeg version functions to gd.c so the external library build doesn't include anything from libgd/.
Remove extra unused functions from gd_compat.h
Rewrite Xpm library check so it doesn't break on MultiArch systems
Required GD >= 2.1.0 or GD bundled, this allows us to remove most of the #ifdef
* Remove overflow2, getmbi and skipheaders from gd_compat.h * Add missing return in _php_ctx_getmbi * Reintroduce imagecreatefromxbm by checking for gdCreateImageFromXbm
Remove overflow2, getmbi and skipheader, since they are not needed anymore.
Allow to use new GD-2.1.0 function from system library
better fix for bug #64770
better fix for bug #64770
remove OS-specific OIDs from 'WALK multiple on single OID with OID suffix as keys' test part
re-work walkaround for net-snmp BUGid 2027834, no need to detect it anymore add test for Bug #64159 bump default buffer size for values(32->512): do not reallocate buffers in 99% cases
cut PHP_VERSION_ID - we know API version now
updated NEWS
updated NEWS
update NEWS
update NEWS
NEWS
NEWS
NEWS
From code coverity scan, syscall return value must be check.
fix more resource leaks
From code coverity scan - fix some memory leak - fix some resources leak (fd) - create fpm_worker_pool_free (shared use) - possible null dref (wp->user and wp->home can be null)
fixed size array cannot be null
use limit_extensions as we use security_limit_extensions later (free)
unused variable
fix possible null deref (detected by code coverity scan)
updated lib versions
Oops
Harden loopback tests
Remove trailing space in NEWS
NEWS for 514afd67
don't include smart_str.h in a too global header, fixes #64718
NEWS
When Apache use RewriteRule to redirect, via mod_proxy_fgi, to php-fpm the SCRIPT_FILENAME may contains the QUERY_STRING.
Added SoapClient constructor option 'ssl_method' to specify ssl method
 fix #64738, fix implicit type declaration
Avoid possible conditional jump depended on uninitialised value
Revert "Add CURL_WRAPPERS_ENABLE constant"
fix #64725, wrong res check
Also fixed bug #64726 in 5.3
Update NEWS
updated libmagic.patch
- #64710, check return val
- #64710, kill unused var
#64710, kill unused vars
#64710, kill unused vars
#64710, kill unused vars
#64710, kill unused vars
#64710, kill unused vars
#64710, Implicit declaration
Adding sys_get_temp_dir() test specific for Windows.
PHP 5.3.26 this will be
NEWS for RC1
NEWS for PHP 5.5.0 Beta 4 again
Update NEWS file
5.4.16-dev
gd: missing headers in previous
allow use of gdImageCreateFromJpegEx with system libgd
We need both gdImageCreateFromJpeg* and gdImageCreateFromJpeg*Ex
gd: fix proto comment
gd: provide imageflip with system libgd when available
Removed fork of ext/zlib/tests/bug_52944.phpt
NEWS for RC 1
NEWS for beta 4
gd: fix proto comment
update credits
Remove curl wrappers
fix copy/paste in error message
enable WebP with system libgd when available
(re)allow WBMP detection with system libgd provide getbmi and skipheader not exported functions in gd_compat.
array_column() - Use entire subject array when NULL passed for second param.
Allow array_column() to take -1 as a valid value in third param
Harden array_column_basic.phpt against resource renumbering.
updated NEWS
- Updated to version 2013.3 (2013c)
updated NEWS
temporary disable WBM detection with system libgd, as gdGetC, getmbi and skipheader not exported
overflow2 is not exported by system libgd
Includes 5 new phpTests to check that the error message DOM_NOT_FOUND is properly raised by the method DOMNode::insertBefore(newNode, [refNode]).
fix x64 opcache, still uses fugly fixed addresses, see TODO entry for explanaton
Includes 5 new phpTests to check that the error message DOM_NOT_FOUND is properly raised by the method DOMNode::insertBefore(newNode, [refNode]).
lower the limit, should fit in a byte
  Disable FCALL optimization pass for PHP older than 5.4   Added an optimization pass to convert FCALL_BY_NAME into DO_FCALL.
Disable FCALL optimization pass for PHP older than 5.4
Added an optimization pass to convert FCALL_BY_NAME into DO_FCALL.
Optimizer may hide some repeating error messages
Optimizer may hide some repeating error messages
Using absolute path to get the file note.xml
Initialize literals hash_value and cache_slot
Added curl config test for windows
updated lib versions
updated lib versions
fixed EOL
updated lib versions
PHP tests to check the DOM_NOT_FOUND error message is properly raised by the DOMNode::insertBefore method
zend_register_null_constant fixed zend_register_bool_constant usage in macros use REGISTER_MAIN_* in zend_register_standard_constants
zend_API.h included ZVAL_* family in use
use Z_* family macros
zend_register_bool_constant patch
allow lcov 1.10
allow lcov 1.10
allow lcov 1.10
allow lcov 1.10
Add schema default/fixed value support
  Added script level constant replacement
Added script level constant replacement
apply change from opcache readme to php.ini
lucky that the name is not used, fix name of encoder
Added opcache related entries
update NEWS
updated NEWS
add external 2.1 detection and fix gd_compat for 2.1+
Allow wilcards in opcache.blacklist_filename
Added missing ARG_INFO
Numeric string constants used as array indeces have to be converted to long at compile time
PHP 5.4.14 release date
PHP 5.3.24 release date
Remove semicolon
NEWS section for next beta
NEWS for PHP 5.5.0 Beta 3
fix possible NULL deref
fix null deref
ws and comment for recommended aa method
fix some unitialized values and typo
updated libmagic.patch
fix ident
Refactored the previous memleak fix
fix memory leak at apprentice.c:1095
fixed EOL
updated NEWS
upgraded libmagic to 5.14
leave a sane environment behind (even if empty) when exiting some OS atexit() handlers call getenv()
leave a sane environment behind (even if empty) when exiting some OS atexit() handlers call getenv()
Drop support for bison < 2.4 when building PHP from GIT source
Contant has been renamed
Constant has been renamed
Improve warning when trying to load zend ext as PHP module
s ,CURL_WRAPPERS_ENABLE,CURL_WRAPPERS_ENABLED,
Update test script to make sure the error occurred
no tab here
no tab here
no tab here
Update NEWs
Use 5.4 specifical warnnig & Update NEWs
format
format
Update NEWS & UPGRADING
Use new constant replace ugly trick
Add CURL_WRAPPERS_ENABLE constant
NEW for #64565
NEW for #64565
keep previous test to avoid any behavior change
fix comment
The printf modifier for a double is just %f
fix coverage data for the opcache optimizer
fix coverage data for the opcache optimizer
Skip test when --with-curlwrappers enabled.
Updated test case and added BFN to NEWS.
Bug #60774 (DateInterval::format("%a") is always zero when an interval is created using the createFromDateString method)
Added the new .c files as well as they are not automatically regenerated.
Rebased to PHP-5.4 Implemented Dmitrys change from df97c3aa0d331be668bd5d8f27fff96d4e3ac1d7 Moved the timelib_parse_tz_cor function to ext/date/lib/timelib.c
Bug 54567 DateTimeZone serialize/unserialize Make DateTimeZone serializable and implement __set_state
Make DateTime and DateTimeImmutable siblings.
missed part of the patch
Patch for Bug #64544. The process title change module keeps track of the locally allocated environ, so it doesn't need to worry about when environ changes underneath it, for example by putenv()/setenv()
Remove support for cloning generators
Removed deprecated check
fix BELL constant declaration
Forgot to fix the test on 5.4
Exclude Travis build for 5.3 and 5.4
Attempt to fix SKIP
This will PHP 5.3.25
Typo fix (greater then => greater than)
don't optimize script if it's not going to be cached
Reimplemented OPcache restart trigger. Now, if memory or hash are full the restart is scheduled only in case the amount of wasted memory is above opcache.max_wasted_percentage. Otherwise OPcahce continue serving the following requests using already cached files, but doesn't try to add new files (the cache is full anyway).
With pkgconfig < 0.28 output is a single space With pkgconfig = 0.28 output is an empty string, This breaks the test on the 2 vars
Add test for #64529
will be 5.4.15
fix NEWS
Added XOR support for expressions in INI parser: NEWS and zend_language_scanner.c
Added XOR support for expressions in INI parser
Remove unused variable
NEWS Section for beta 3
News for beta 2
Added opcache.enable_cli=0
Added description for opcache.enable_cli
add WebP support in phpinfo
add windows 8 and windows server 2012
versions no longer supported, no need to check
 FALSE on error
merging conflict left over
conflict
fix regression, take #2 (merge issue due to git 1.8 default setting changes)
Update test script
typo and WS
conflict
add new functions and constants for GD
back to dev (7.0.2-dev)
Separate "start_time" from "last_restart_time"
7.0.1 release
make it int main
fix return value
add code to check if we know flock definition on this system
fix typo
add definition for 5.5
fix typo
add definition for 5.5
remove comments
fix bug #64490 - add __FreeBSD_kernel__ to allowed FreeBSD defs
fix bug #64490 - add __FreeBSD_kernel__ to allowed FreeBSD defs
Document embedded server options in manpage
It's 2013, even for a manpage
fix conflict
fix generic rotation and 90 degrees & multiples rotation, take #2
- add reminder for checking return values
- fix x64 issues on windows with the various time types (overflow, signed and unsigned bits ops, etc.) causing crashes on start, error or log, must be done in win32/time.c for some of these functions too
Skip locale dependent test if locale not available
Missed two occurances of Revision:
Reworked the changes for bug #64452
phar phpinfo uses Id instead of Revision
Use NEWS merge driver for UPGRADING and UPGRADING.INTERNALS
Show diffs on Travis CI
Move some internal changes from UPGRADING to UPGRADING.INTERNALS
- fix x64 issues on windows with the various time types (overflow, signed and unsigned bits ops, etc.) causing crashes on start, error or log, must be done in win32/time.c for some of these functions too
Note about bison version
Add SplDoublyLinkedList::add to UPGRADING
- fix regression (imagerotate_overflow.phpt), fix for all cases
- fix regression bug24155.phpt and bug39366.phpt
- fix regression (imagerotate_overflow.phpt)
Tweaks an add OPcache info to UPGRADING
Add OPCache ini settings to php.ini
Update NEWS
fix memory leak
fix memory leak
add array_column()
NEWS section for beta 2
NEWS for beta 1
Allow local override of PHPROOT in makedist
NEWS for array_column
- ws
- add gd changes
- update the comment to match the code/features
- add imageaffinematrixget and imagematrixconcat
- add affine matrix helper for translate, scale, rotate and shear
- fix unix build
updated NEWS
updated NEWS
- add new files for interpolation
- config.m4 sync with .w32
- add new interpolation method   . imagescale   . imageaffine   . replace imagerotate with new generic and optimized new implementations   . imagesetinterpolationmethod, to set the default interpolation to be     used with the new functions   . add imagepalettetotruecolor
clarify NEWS
Backported fix for bug #62852
Refer to Zend Optimizer as Zend Opcache from now on
ZO+ NEWS
fix C89 compat
fix C90 compat
Partial fix for bug #64239
strlen() returns size_t
Renamed Zend Optimizer+ into Zend OPcache
Add stats to phpinfo
Avoid trailing line break
Add oom, wasted, hash and manual restart counters to help identify potential configuration problems
fix NEWS
fix NEWS
Add optional flag to opcache_get_status()
merge with 5.4
more test coverage: missing square bracket error message
Load "black list" only if O+ is enabled
Made opcache_get_status() return statistics during O+ restart
Added ability to load zend_extensions without absolute path names
Enabled O+ build by default (it may be disabled before 5.0.0 release)
Removed files that are neccessary only for standalone pecl branch
setting plausible default value for struct members
Remove spurious int cast in between two longs
setting plausible default value for struct members
Made test compatible with O+
updated NEWS
Backported patch for #64370
Renamed ZendOptimizerPlus.so into opcache.so
"ZendOptimizerPlus" is renamed to "opcache" to de merged into PHP-5.5 under ext/opcache (the product name is still "Zend Optimizer+")
explain the step updating the git submodule reference in web/php.git
More accurate restart scheduling
Autogolobal $GLOBALS has to be pinged even if auto_globals_jit=0
Allow only shared O+ build
fix zts check
fix the fix
Removed redundand code
fix for bug  #63530 	mysqlnd_stmt::bind_one_parameter uses wrong alloc for stmt->param_bind
Forgot to remove some now unused variables
Add support for non-scalar Iterator keys in foreach
fixed headers order
- Updated to version 2013.2 (2013b)
fixed the test
Disable zend_always_inline in debug build
Adding in NEWS/UPGRADING about process title change support.
Update NEWS
use NEWS only
Typo fix: recieved to received
Support for CLI process title (https://wiki.php.net/rfc/cli_process_title)
News for next beta
Do another Alpha instead of Beta because of ZO+ RFC being voted on
add tests into package
Add test script for #57 (segfaults in drupal7)
fixed memory leaks
NEWS for the next beta
NEWS for PHP 5.5.0 Beta 1
simplified the previous fix for #64359
fix NEWS
Allows exclusion of large files from being cached
Add maintainers inot package.xml
fix ANSI C90 compat
skip if no IPv6 support
Save a stat() call by calling sapi_module.get_stat()
Skip test on Apple
- fix path
release 7.0.0
Increased version number
Preparaton for pecl release
- damned conflicts
- add noisy php logo for autocrop with threshold test
- add test for imagecropauto
rename NEWS back
updated NEWS
updated NEWS
updated NEWS
Rename to create a NEWS file per version to fix the annoying merging issue with NEWS files.
Rename to create a NEWS file per version to fix the annoying merging issue with NEWS files.
Rename to create a NEWS file per version to fix the annoying merging issue with NEWS files.
merged PCRE 8.32
- Updated to version 2013.1 (2013a)
- (s)rgb distance works way better for now, re enable threshold
typo
- disable threshold for now, will enable it again using CIEDE2000
Added info anout zend_optimizerplus.mmap_base directice
5.4.24-dev
5.3.23RC1
adding the package.xml for pecl
- add todo for threshold
- clean and enable threshold
- add image crop support
- typo
- fix name for imageflip constants, consistent witht the other
- add test
- add constants for imageflip
return false to be consistent
Make the functions validate input parameters (or lack thereof)
Correction
Added missing calloc() result checks
- add only once
- add new file for m4 as well
- fix conflict on merge
- add image flip API support
- add image flip API support
- add image flip API support
- add image flip API support
- add image flip API support
- add image flip API support
5.4.13 branched, now it's 5.4.14
add news for SOAP fixes
Bug #52861: unset fails with ArrayObject and deep arrays
add support for ppc64p7 arch (Power7 optimized)
Emit the same error messages as without O+ (use "dups_fix" hack only for classes)
Execute shared memory initialization/deinitialization under exclusive lock
op_array->brk_count_array has to be kept even if op_array doesn't have BRK/CONT/GOTO opcodes. It might be used to unlock "loop" or "switch" variable in case of exception.
coding style improve
remove useless configure option
Ability to disable O+ per process (or process pool)
Refactored read / write and enabe
sendrecvmsg_shutdown function moved to mshutdown
NEWS for 8718755
Remove trailing whitespace; break long lines
Simplify the install instructions
white spaces
relax the check
Add some parameter checks
Started Test Suite
We build a zend_extension (not a regular PHP module).
Codes style improve
PHAR should modify entry timestamp when it's modified
http-stream test requires network connectivity
added back the older vc9 favours
updated lib versions
updated lib versions
news for bug #49348
updated lib versions
Added ability to always validate cached script timestamps using zend_optimizerplus.revalidate_freq=0
Dont reset other counters when incrementing slow_rq
Avoid unexpected warning messages (ext/standard/tests/file/fopencookie.phpt)
5.3.22 NEWS
Start new NEWS section for beta1
News for PHP 5.5.0 Alpha 5
News for PHP 5.5.0 Alpha 5
Added check for calloc() failure
Simplification
Removed redundand TSRMLS_FETCH()
Avoid buffer overrun
fix the test for curl 7.29.0+
fix tests
fix bug #49348 - issue notice on get_property_ptr_ptr when used for read
Avoid warning about possible precision loss
Use proper format specifier
Avoid static analyzer warning
Lenght is unsigned
Avoid mixing declarations and code
Added checks for malloc() failures
Added check for CreateMutex() failure
Cleanup some multicast code; fix for mac os x?
fix protos
fix bug #61930: openssl corrupts ssl key resource when using openssl_get_publickey()
fix free vs. curl_free
bug #29 enable cli-server support
update NEWS
Added HTTP codes as of RFC 6585
Exceptions triggered by undefined variable should be handled before FATAL error
Wrong value
"locked" must be a "module" global (local to thread)
Added ZTS lock
Renamed ZCG(startup_ok) into "accel_startup_ok". It must be a "true" global to make ZTS work. (ZTS starts work, but ZTS O+ is not stable anyway)
Typo fix
Added Xdebug compatibility note
phpize is already in README
Update README
added travis-ci config (make + load extension)
Disabled unsafe optimization pattern
also add load_comments
missing directives in accelerator_get_configuration
missing directive in README (need doc)
- Added zend_optimizerplus.load_comments configuration durective, so "Doc comments" may be always stored in SHM, but restored only by applicaions that really need them. - Added note, that zend_optimizerplus.save_comments is dangerous and may break applications and frameworks.
Revert renaming (md needs additional formatting tags)
Renamed README into README.md
Don't completely delete the "enabled condition".
- nuke unused variable
This is a development version yet
- fix windows build
Avoid compilation of unsupported SHM backends
Avoid unnecessary code and change the type of accelerator_enabled
Added LICENSE from http://www.php.net/license/3_01.txt
Proper bit reset code
typo at Optimizer/block_pass.c
spelling
Open Source Release
Update config.sub/config.guess to latest GPLv2 upstream version
NEWS update
Low-level ARM optimizations
Improve x86 inline assembler
build fixes
NEWS
update NEWS
mb_split() can now handle empty matches like preg_split() does.
mb_split() can now handle empty matches like preg_split() does.
news for mysqli_savepoint and mysql_release_savepoint
update test case
mysqli_savepoint()/mysqli_release_savepoint()
Add the constants needed for mysqli_commit(), _rollback() and begin_transaction()
Add savepoint and rollback to savepoint support
add the news about recent commits
Add support for begin_transaction in libmysql mode. Add support for flags and name for commit/rollback in libmysql mode
Export new calls
Forgot test script
Add the name in a comment at commit/rollback, if provided
Add support for commit and rollback options. Add support for explicitly starting a transaction - modes also available. Using the API makes the life of load balancer mysqlnd plugins easier/possible.
Disabled external entities loading
fix bug #64124 (IPv6 malformed)
Check if soap.wsdl_cache_dir confirms to open_basedir
make libvpx optional
revert
revert
Add ARM optimized versions of safe_address()
Update config.guess to latest GPLv2 upstream version
NEWS
check the validity of the parameter
implicit declaration of zend_throw_exception
News about FR #49180.
Add option to specific the expected separator character.
There is no need to use memchr() for comparisons in these places.
ext/filter support for validating MAC addresses.
NEWS/UPGRADING for changes in sockets, intl
php_strerror in ext/sockets renamed in 5.5
Move macro back to .c file
send/recvmsg() support for Windows
Remove some pre-vista code
Revert "Payload of HOPLIMIT/TCLASS are 8-bit"
Ensure memory is initialized
Payload of HOPLIMIT/TCLASS are 8-bit
Build fixes; accept names for if_index
Refactoring: move stuff to new conversions.c
Support sticky IPV6_PKTINFO
Rename some functions for consistency
Destroy ancillary registry on shutdown
Move some multicast stuff to multicast.c
Check return of fstat()
Register extra MSG_* constants
Add test for CMSG_RIGHTS
Add test for CMSG_CREDENTIALS message
Added support for AF_UNIX messages
Redactor to expose socket_import_file_descriptor()
Improve imported socket family detection
Added missing return statements
Add test and slightly tweak another
Support for IPV6_HOPLIMIT and IPV6_TCLASS
Add IPV6_UNICAST_HOPS option constant.
Add test for recvmsg()
Wrap recvmsg() and sendmsg()
Ignore warnings on EAGAIN/EWOULDBLOCK/EINPROGRESS
Remove a Windows only warning
Move & improve PHP_SOCKET_ERROR def
Move some declarations to sockets.c
NEWS
add new charset, from MySQL 5.6
fix enchant compilation under vc11
Mark this test as requiring internet connecion.
This will be PHP 5.3.23
NEWS entry new OpenSSL option [doc]
Added ssl context option, "disable_compression"
having xz makes it three. thanks Mike Ford for spotting it
Test commit (simple WS change)
now we have also an xz archive
forgot this file :(
branched 5.4.12
update NEWS
complete zts fix
Make converter work on VS
intl/converter in line w/ intl error handling
Write local err on intlcal_get_time_zone() failure
Improve ERROR.CONVENTIONS
intl: doc explaining error conventions
Add UConverter class (ICU's UConverter API)
Add news for bug #60524
Implemented Feature #60524 (sys_temp_dir)
oops, unintended addition
post-5.5 changes for bug #46439 as described in the RFC
Implement fix for bug #46439 - add CURLFile class for safer uploads
add new features
allow for libpng 1.5.x
fix bug #60833 - self, parent, static behave inconsistently case-sensitive
now we have also an xz archive
fix tests
fix tests
NEWS for bug #64023 (see aa0adce)
fix valgrind warning
NEWS: Start PHP 5.5.0 Beta 1 section
NEWS for PHP 5.5.0alpha4
fix tests
Updated to fix async reads/writes.
Updated to fix timeouts on blocking I/O
Class Name Resolution As Scalar Via "class" Keyword
fix bug #63462 (Magic methods called twice for unset protected properties)
NEWS for bug #64011. See 77ee200
Update config.sub to latest GPLv2 upstream version
Added ARM accelerated implementations for ZEND_SIGNED_MULTIPLY_LONG()
Added test cases for ZEND_SIGNED_MULTIPLY_LONG()
Update the arguments in the prototype of fpm_socket_unix_test_connect().
fixed build
Dereferencing process-handles no longer waits on those processes.
NEWS for bug #63893
revert change. now it doesn't compile again...someone should fix ext/date...
Use two dtors thus allow allocation based on the alloc model of the connection.
plug a leak - forgot ot use the dtor already written
Revert "Apply the fputcsv test fix to SplFileObject_fputcsv.phpt. Mea culpa."
Revert "Update fputcsv() to escape all characters equally."
Revert "Apply the fputcsv test fix to SplFileObject_fputcsv.phpt. Mea culpa."
Revert "Update fputcsv() to escape all characters equally."
Revert "Apply the fputcsv test fix to SplFileObject_fputcsv.phpt. Mea culpa."
Revert "Update fputcsv() to escape all characters equally."
Add support for connect attributes, as of MySQL 5.6
Bug #62489: dba_insert not working as expected
fix NEWS
fix NEWS
Apply the fputcsv test fix to SplFileObject_fputcsv.phpt. Mea culpa.
Update fputcsv() to escape all characters equally.
Added NEWS item for DateTimeImmutable
Bug #52958: Segfault in PDO_OCI on cleanup after running a long testsuite.
Make DatePeriod support DateTimeImmutable as well.
Rename DateTimePoint to DateTimeImmutable.
Added another test to test the unmodified inherited methods.
Added a few missing TSRMLS_DC/TSRMLS_CC.
Added a test case for DateTimePoint.
Implemented immutable DateTime objects as the DateTimePoint class.
PR #260: Update css for 404 pages to feel more up to date and have a consistent layout across browsers
Support BITMAPV5HEADER in getimagesize(): https://en.wikipedia.org/wiki/BMP_file_format#DIB_header_.28bitmap_information_header.29
UPGRADING.INTERNALS: document zend_qsort_r
Add zend_qsort_r & use it in strtr
NEWS for bug #63893
Remove _GNU_SOURCE, add local heap sort
array_column: Removed array_pluck() alias
The compiler can figure this out
Remove unused block
strtr() with 2nd param array - optimization
Refactoring, bugs & leaks
Optimize strtr w/ 2nd arg array
Use zend_unmangle_property_name_ex to save strlen
Tinker with UPGRADING's wording for the format string changes for clarity.
fix bug #63982: isset() inconsistently produces a fatal error on protected property
different OSes have different messages, and that's not what the test is about anyway
fixed alternate form for 'x' and 'X' formats
array_column: Set array_pluck as an alias for array_column
array_column: Implement ability to specify an index column
Cleaning up a memory leak.
array_column: Adding test for IS_OBJECT and converting object to string
array_column: Using add_next_index_zval() at nikic's recommendation.
array_column: Improved tests
array_column: Cleaning up, as recommended in pull request #56 comments
Simplify the code and use zend_hash_next_index_insert()
Adding test for columns not present in all rows for array_column().
Adding tests for the negative results of array_column()
Implement new array function array_column()
MySQL 5.6 EXPIRE PASSWORD flag tests
Add mysqli support - constants and checking in mysqli_options() for the new constant for password expriration
backport handling of expired passwords in mysqlnd to 5.4
fix compilation error after merge
Use during connect the flags set with set_client_option()
Update README.PARAMETER_PARSING_API
Export zend_parse_parameter()
support for password expiration in mysqlnd, through a flag
Add new constants
update NEWS
- fix bug #47358, glob returns error, should be empty array()
- fix bug #47358, glob returns error, should be empty array()
Add NEWS for the previously cherry picked commit.
fix different values of mysqli_stmt_affected_rows between libmysql and mysqlnd (in favor of libmysql) before execute and after prepare()
- NEWS entry for #50524
- fix the fix for bug #50524
fix windows build
Update news with new bug fix.
News entry for bug #52126
Add unit test for mail.log ini setting.
Add a timestamp to the mail log.
Adding test for bug #63462
Coding style, ANSI C compatibility
Bug #23955: allow specifiy max age for setcookie()
bump year
bump year
Adding test from 5.5
Bug #63699: performance improvements for varios ext/date functions
Bug #63699 performance improvements for ext/date by only validating timezone when timezone is set
Improve resource management for curl handle
update Zend Engine logo as per Zeev, and tweak PHP logos ... :)
Update NEWS
5.4.12-dev
This will be PHP 5.3.22
remove set but not used variables
add bug #63762
add fix #43177
Bug #43177: If an eval() has a parse error, the overall exit status and return code should not be affected.
fix NEWS
Remove passwd handler from struct when not needed
Happy New Year
Happy New Year
Happy New Year
Happy New Year~
News entry for +0/-0 filter fix
Add more tests for the new +0/-0 behaviour.
Treat "+0" and "-0" as valid integers just like var_dump() does.
Add new curl options
Revert "Remove a useless memory write in zend_llist_del_element"
Remove a useless memory write in zend_llist_del_element
spelling
spelling
Removed deprecated fields
Traits refactoring
Implement Generator::throw() method
Update NEWS
New curl_pause() function
Support for curl_strerror and curl_multi_strerror
Add curl_multi_setopt and clean curl_share_setopt
Remove duplicated function definition
Update NEWS file
Update NEWS file
CURL >= 7.28.0 no longer support value 1 for CURLOPT_SSL_VERIFYHOST)
Do not add a ref to EX(object) on generator clone
Update release date
Add missing zend_do_free call
fix failing test on Linux build
News for PHP 5.5.0 Alphas
be cautious about the result of strrchr
ixed bug that exception won't be catched
dos2unix & skip on connect fail
Ignore Zend/zend_dtrace_gen.h and Zend/zend_dtrace_gen.hbak
Updating news entry to list new filetypes
News entry for updated mime types
update test for supported Mime Types checking
update list of common Mime Types in PHP development server to support Web audio/video formats (Webm ,and Ogg containers) + have jpeg mime types listed together
Add test for bug #63741
Add test for bug #63741
Need connect.inc here
Removed unreachable code
Removed unnecessary checks
Removed redundand checks from release build
MFH
An exception thrown in try or catch block is disacarded by return statement in finally block.
Really fix test pdo_mysql_class_constants.phpt
Restored proper generators behaviour in conjunction with "finally". (Nikita)
- generators API exported for extensions - improved RETURN sequence to avoid redundant check if op_array is a generator
Alter php_json_decode_ex() to respect JSON_BIGINT_AS_STRING for bare numbers.
Tinker with the wording of the MySQL deprecation news post.
Deprecate ext/mysql.
skip 32-bit OS
Need more that 2G memory
Cleanup NEWS
Generatirs are going to be used less than regular functions
Leftover: Invoke re2c with --no-generation-date to prevent unintentional / unnecessary changes in generated files.
Invoke re2c with --no-generation-date to prevent unintentional / unnecessary changes in generated files.
Add UConverter class (ICU's UConverter API)
this will become PHP 5.3.21
Use get_gc instead of hacks of get_properties
Slight performance improvement
Two tests deactivated until #63688 was fixed
5.4.11-dev
update NEWS
fix bug #63666 - Poor date() performance
News for enabling systemtap support on linux
Pass zend_execute_data instead of zend_op_array
Overwrite execute_ex instead of execute in dtrace_execute
Enable dtrace probes on linux as they are compatible with systemtap
fix for scrolling, other minor tweaks
Increased version numbers
Moved zend_create_execute_data_from_op_array() implementation from zend_vm_execute.skl to zend_execute.c
Optimized access to temporary and compiled VM variables
Reduce case where this test will fails: - no connection AND no mysqli extension
Revert the previous test fix
use php_stream_copy_to_stream_ex instead of deprecated php_stream_copy_to_stream
Adding tests for private and protected properties
Adding regression test for behavior of magic methods with unset public properties
News entry for bug #49341
Bug #49341: Add SO_REUSEPORT support for socket_set_option()
NEWS
NEWS
. The VM stacks for passing function arguments and syntaticaly nested calls were merged into a single stack. The stack size needed for op_array execution is calculated at compile time and preallocated at once. As result all the stack push operatins don't require checks for stack overflow any more. . Generators implementation was improved using the new VM stack. Now it's a bit more clear and faster.
format
Format
NEWS
BFN #61272
fix bug #61272 ob_start callback get passed empty string
updated NEWS
This test isn't supposed to pass on windows
Related bug #63588 fix length computation + optimize for speed
count($test_files) already be checked above : if ($test_cnt)
NEWS entries
XFAIL test should not be considered as failed
let make test report the run-test result
XFAIL test should not be considered as failed
let make test report the run-test result
fix NEWS
5.4.10-dev
add unit test for bug 63126
NEWS
Backported the fix for bug #63248 from 5.4+
Improved "finally" im[plementation
PHP 5.3.19
Add myself to QA
Unused variable copystr
Update credits for 5.5
Add the new password functions to UPGRADING.
Add actual branch version number to UPGRADING
Remove PHP 5.5 changes from master UPGRADING
Put the new php.ini directives together.
Move the deprecated functions up to the Deprecated Functionality section so they're more visible.
Regenerate Zend ini scanner
Skip test if directory does not exist
Leftover: Bump version to 5.6.0
Updated NEWS
UPdated NEWS
Updated NEWS
Bump API versions
Bump version to 5.6.0
Enabled apache 2.4 handler build option
Bump version to 5.5.99 and reset NEWS
Build .xz archive during makedist
NEWS: remove dots at the end of the NEWS file
PHP-5.5 is open
Add missing parts from UPGRADING to NEWS
- Updated to version 2012.10 (2012j)
Corrected spelling of 'shortcut'
Corrected grammar/spelling of text in php.ini files
List ext/intl changes also in NEWS
Update arginfo for preg_match_all() to reflect reality.
make failed tests fail the test target
fix invalid read when trimming empty string
fix invalid read when trimming empty string
fix invalid read when trimming empty string
- BFN
Bump up table width a bit more and make columns consistent
Bringing CSS up to this decade's standards.
This will be PHP 5.3.20
fix NEWS
News entry for png memleak fix
News entry for png memleak fix
These need to be volatile in order to prevent leaking after the longjmp in the error handler
These need to be volatile in order to prevent leaking after the longjmp in the error handler
These need to be volatile in order to prevent leaking after the longjmp in the error handler
- Updated to version 2012.9 (2012i)
The /e modifier is deprecated
read 1 instead of 2 bytes. The next 2 bytes are 2 and thus not a problem
Allow setting SHA256 auth public key as option
plug recent leak
cosmetics
NEWS for bug #62593
Bug #62593 Updated to account for INOUT parameters
Bug #62593 Updated test to verify bindParam doesn't change original value
Bug #62593 Updated to always treat zval by value
Bug #62593 Added test for change
Bug #62593 Updated pdo_pgsql driver to convert boolean values to pg native format in emulation mode
server-tests.php improvements:
- Updated to version 2012.8 (2012h)
fix bug #63369
fix bug #63369
This won't make the test pass but now its at least one that shows no unnecessary error messages...
News entry for CURL notice addition
Notice if CURLOPT_SSL_VERIFYHOST is set to true
Notice if CURLOPT_SSL_VERIFYHOST is set to true
enabled libxpm for gd on windows
enabled libxpm for gd on windows
Add missed file
commented out the HHC_LOCATION line, as there are no easy to use alternatives for hhc.exe on linux. we should either run the chm build on a windows box(maybe on the replacement of oti1), or look into running it through wine see http://cweiske.de/tagebuch/Generating%20CHM%20files%20with%20Wine%20on%20a%20Linux%20server,%20and%20a%20bit%20about%20PEAR's%20PhD%20transition.htm for details. I also set DOT_CLEANUP to NO as the doc generation was spitting out errors regarding some dot file cannot be found.
merged changes for bug #63297 from 5.3
fixed a typo in the error message
Deprecating undocumented function alias, related to bug #63295
Use if_nametoindex in Vista
Update test script
Test for #63336, xfail now
fix crashes in newly introduced macros when normal trace is disabled but memory traced is enabled.
Re-fixed bug #60901 (Improve "tail" syntax for AIX installation)
updated NEWS
update NEWS
updated NEWS
preg indenpent test script for #63055
Update libmagic.patch
Add fix & missing fix
Add fix & missing fix
- Updated to version 2012.7 (2012g)
SUpport newer bisons.
add protection against core dumps if the underlying library returns 0x0 for some reason
indent
better fix for #63055
I forgot that inconsistent is only avaliable in debug mode
Add comments
PHP 5.3.18 NEWS
fix NEWS
fix compilation failure on 32/64bit linux systems, when libmysql is used  with ext/mysql
fix build with libmysql on Ubuntu 12.04 x64 probably other mixed 32/64 systems
fix newly introduced segfault
Implemented FR #63242 (Default error page in PHP built-in web server uses outdated html/css)
Remove executable permission on inc
Remove executable permission on phpt
Remove executable permission on phpt
Remove executable permission on phpt
Use zend_execute_internal always to call internal functions
use zend_execute_internal
exposing the libxpm version in phpinfo
update
5.4.9-dev
PHP-5.3 branch is 5.3.19 now
add a check for libmysql
if ssl has been switched on transmit clear-text password
reverted the previous fix for libpng include
fixed include checks for libpng under win
Avoding superfluous function call
Add test for #35895
Now we can set the tsrm_ls manually
add news for --offline
add --offline option to run-tests command
Bug #63147: SKIP_ONLINE_TESTS, for getmxrr
Bug #63147: introduce SKIP_ONLINE_TESTS, for gethostbyname
gethostbyname_basic002.phpt is a duplicate to gethostbyname_error004.phpt
add bug #63162
fix test and move to proper place
synergy ftl. Removed duplicate fields.
adding test phpt
Bug #63162 - parse_url does not matches password component
fix news
Eliminate process running requirement of dump_bt in .gdbinit
Add missing ____executor_globals in dump_bt if needed
Implemented FR #63188 (Display class name when debugging with gdb macro zbacktrace)
Cover have_ssl=NO and have_ssl=DISABLED
Updating expected output in anticipation of mysqlnd_auth.c path
updated NEWS
Merging in Password Hashing API into master
Refactor to using a stack based zval instead of dynamic allocation
Clean up unreported memory leak by switching to zval_ptr_dtor
fix allocation and copy issue
Really fix leaks, add test cases to prove it...
- BFN
extended the SKIPIF section with ICU 49 (sync with 5.4 branch)
fixed tests for gd having freetype >= 2.4.10
Minor changes for MySQL 5.6
NEWS for 76601c4
fix test
constify
SHA256 authentication tests
Remove meaningless md5 string && Attempt to fix #63184
Update NEWS
FD_ZERO file descriptors before calling curl_multi_fdset
fix login failure with empty password. This is 5.5 specific - new code
Add missing NEWS entry
- fix merge (fucking git merging system ... :( )
- add missing php-fpm.service.in
fix unix/win dir separators
compile out example plugin in a release build
change public key setting to PERDIR and finish code that allows to set the key file programatically per mysqli_options()
remove old unicode code, that is was compiled out by using a macro
Add SHA256 authentication support - password hashing to mysqlnd Automatic switchover to SSL with plain-text password is not part of this
Correct the test summary
Add NEWS/UPGRADING for previous change
Simplify set_error_handler/set_exception_handler code
Return previous error handler when resetting the error handler
Allow resetting the error handler
Revert error/exception handler changes
Avoid calling select if maxfd returned by curl_multi_fdset is -1
Add CURLOPT_READDATA which was removed by mistake
updated lib versions
Do not disable RFC3678 multicast API on Windows
fix bug #63015 (Incorrect arginfo for DOMErrorHandler)
Bug #63000: MCAST_JOIN_GROUP on OSX is broken
Merging PR #116
updated libary versions
split tests for the new zlib version on win
update news
Support building PHP with the native client toolchain.
Refactor  slightly to enable cleaner readability
A bunch of naming convention fixes. No functionality changes
test should fail
Add NEWS for generators
Replace code with zend_clean_and_cache_symbol_table() call
Respond with 501 to unknown request methods
news for bug #61421
commit for php bug 61421 enabling SHA2 and RMD160 for openssl signature verification
Remove bug fixed entry
Add XFAIL test for bug #62852
- Updated to version 2012.6 (2012f)
Change package.xml fix description
This will become 5.3.18
Update RELEASE PROCESS
Switch to using an ENUM for algorithms instead of a constant
fix NEWS after releses
Add news entry for password API
Expose PASSWORD_BCRYPT_DEFAULT_COST constant and update test to use it
Remove bcrypt_cost ini entry from declaration
Switch test to using strict comparison for crypt fallback
Add tests for password_get_info and password_needs_rehash
Generators & UPGRADING
Capitalize the warning message
Rearrange the codes, remove empty lines
Provide a specific error message if date.timezone value is invalid.
regenerate patch, and save a strlen
fixed test for bug #52944 also for darwin
-enable VC11 (vc2012)
year++
correct PHP version & year++
Correct PHP version
year++
- fix build, there was no tsrm context there, doing a fetch but this is horribly slow, this fix needs improvement (or simply add a TSRM context in the signature in master
- fix build, declarations must be 1st in a contextgit checkout -f master
Refactoring to use size_t instead of int most places
forked two tests for windows
Bug #49510: Boolean validation fails with FILTER_NULL_ON_FAILURE with empty string or false
Implemented ReflectionFunction::isGenerator()
Allow null as a default value for length in mb_substr() and mb_strcut()
Allow null as a default value for length in mb_substr() and mb_strcut()
folder
Initializing optional argument description in assert()
Initializing optional argument description in assert()
fix NEWS
Drop obsolete test
Remove extra blank in notice message, should act as same as vm
assert() user message
Tests for the previous assert() with user message
assert() user message
- BFN
Make sure that exception is thrown on rewind() after closing too
updated mpir version
update version id too
5.4.7 branched
fix bug #55856: preg_replace should fail on trailing garbage
Remove password_make_salt() from the implementation
Bug #62956: fixing private method signature validation
Bug #62956: fixing private method signature validation
NEWS for 886a50a
NEWS for commit 72c807a
Allow Spoofchecker to be registered on ICU 49.1
Announce on NEWS change in 1ce572c
Bug #62933: compilation error with ICU 3.4
Relax 4 dateformat tests for ICU 4.8
Prefix RESULT_CODE enum with ZEND_
zend_binary_strncasecmp_l used w/out declaration
Require ICU >= 4.0 in configure
Travis: Silence configure and make
Strong types for the result codes SUCCESS & FAILURE. These are common symbol names and using #defines can cause conflicts.
Merging PR 121 to add support for slow request counting on the PHP-FPM status page
Merging PR 121 to add support for slow request counting on the PHP-FPM status page
Add test for #62907
tabs
Remove implementation stubs for yield delegation
Support list in foreach
Prefer no finally block for most situations
Add missing constants in cURL
Update bad versions for cURL constants
Run finally if generator is closed before finishing
Finally with return now works in generators too
Add dedicated opcode for returns from a generator
better fix
fixing test for upcoming mpir upgrade
ZTS fix introduced by Felipe must also go into 5.3
tabs
Refix #62358, previous has side-affect
Updated INSTALL. Generated from the XML Docs.
Updated INSTALL. Generated from the XML Docs.
Update NEWS given a5d0c1e2
plug a leak when the server ask the client for a auth protocol, that the client doesn't understand. This is 5.5 specific bug, as a result of a refactoring in 5.5
WTF?
- BFN
stash
- Removed PHP 6 checks
skip test properly
skip test properly
Bump version.
Added test for bug #51353. It'll be skipped by default and must be activated manually.
Bug 62462: adjusting test
Bug 62462: adjusting test
Move test files to tests dir
Implemented FR #62840 (Add sort flag to ArrayObject::ksort)
Bug 62462: Prevent multibyte characters from being split between the lines
Bug 62462: Prevent multibyte characters from being split between the lines
skip test for bug 43130 on firebird , not relevant
Disallow serialization and unserialization
skip test for bug 43130 on firebird , not relevant
Drop Generator::close() method
relative-scheme
bug #62844; relative URL schemes in parse_url()
add heredoc parsing fix
add finally
update NEWS
- Value stored to var is never used
- Value stored to var is never used
- Value stored to var is never used
- Value stored to var is never used
- Value stored to var is never used
- Value stored to var is never read
- Remove unused variable
Update NEWS
- Remove unused vars
tab
Make the codes clearer, and also check continue statement
More intl tests extracted from symfony
Annother attempt at fixing the mysqli_fetch_field tests
Refactor examing of jumping out of finally block
Update version numbers to 5.4.7-dev.
Revert "Try to fix mysqli_field tests"
Adjust UPGRADING/NEWS for additional mcrypt deprecations
typo
Prevents `goto` out of a finally block
Try to fix mysqli_field tests
Small test tidy up
better fix & this test pass now
update NEWS
Attempt to fix segfault due to retval is not initialized
improve the fix
typo
add test for alone try block, and update test scripts summary
Add functions declarations, use tabs
Ask for less random data in mcrypt_create_iv
Rename mcrypt_cbf -> mcrypt_cfb
fix windows build
Forgot to add test
Support trivial finally in generators (no yield, no return)
Implemented 'finally' keywords for php
more test script for #62328
Update NEWS
Revert "zend_make_printable_zval choses cast_object over __toString"
Revert "Test for bug 62328"
Update NEWS
Skip tests reply on Zend MM turned on
Test for bug 62328
zend_make_printable_zval choses cast_object over __toString
Update to work with libxml 2.9.0
News for bug#40459
fix bug #40459 - make all stream funcs that create object call ctor
bug #54254
text fixes from emosenkis
some fixes for bug#54254
Add test for interoperability of jdtojewish and cal_days_in_month
Update documentation to reflect fix of 54254
fix for display of Jewish month names
Added the intl tests extracted from Symfony. These are making the intl ext crash with ICU at least 4.6, but probably with earlier versions too.
- Updated to version 2012.5 (2012e)
Add #51363
var_export outputs an E_WARNING when recursion is detected
Added Bison 2.5.1 to bison_version_list
Minor spelling corrections
add note for mcrypt_ecb
fix for #62460
add #61642
This becomes useless, since we have set that in the INIT macro
fix test due to float value
make default_exception_ce and error_exception_ce static
make default_exception_ce and error_exception_ce static
fix NEWS
Sleep a little bit more, in some slow machine (like gcov), it will take a little more time to setup server
update NEWS
sync NEWS
skip tests if ibase not present
Implemented FR #62700 (have the console output 'Listening on http://localhost:8000')
expect pass for 5.4
Test for bug #62680
Remove executable bit from files
Limit test to ICU 49
Remove executable bit from files
Sike test while there is no zend mm max_size guard
Skip test while zend mm is disabled
Skip test while zend_mm is disabled
update 5.4.5 date
ini intl.explicit_cleanup -> INTL_EXPLICIT_CLEANUP
Updated NES
Add syslog support to mail.log #62356
Add optional depth parameter to json_encode #62369
binary compatibility
Re-fix bug #55544
correct the author name  introduced in bb685512
folders
Leak caused by wrong and unreachable cleanup
Do not fetch default locale once on minit or rinit
Add ini setting intl.explicit_cleanup
Duplicate test for ICU 49
OK, bye bye JavaScript, let's just include credits before license
merge 5.3.15 NEWS
Add T_YIELD in tokenizer_data.c
Throw error also for return occuring before yield
Remove reference restrictions from foreach
Improve error message for ssl request
Reflect changes made in merge 99e48d3
Readded accidentally removed line
Added IntlDateFormatter::formatObject(). Refactor
Require parenthesis around yield expressions
missed the test script
merge 9eb5cb6571698ca1c623ad3e02c8727c4b0c9a09 to 5.3
Add some more tests
Move a variable
Remove asterix modifier (*) for generators
- Updated to version 2012.4 (2012d)
Expose zend_parse_arg() as zend_parse_parameter()
zend_parse_parameters: allow ! for non pointers
Revert "fix test"
this initialization is unnecessary anymore after commit 2d9d2cadadf0fdf12a01b4a689d0554e1450904f
skip for ZTS
fix test (dos2unix, typo)
fix test, the key may be a float value
test script for bug #61697
fix test
Bug doesn't exists in any release
NEWS for b47d6b32
Add support by yielding by-reference
Do not unload shared extensions when checking for leaks
typo
Nicer (JSLint-compliant!) credits reveal JavaScript
Update libmagic.patch
update NEWS
Typofix in test-description
improve code in zend_operators
removed unneccesary arrat and ini settings
addition SplFileObject tests
new tests from PHP TestFest June 2012
Testing variation on input parameters of http_build_query() function
Removed now-unnecessary expose_php checks for logo
add NEWS/UPGRADING
fix comment
add test
fix for bug#18556 - use simple tolower() function for internal things
Removed Logo GUIDs and replaced with Data URIs and div hidden with JS
- BFN
fixed the test for warnings changed
reverted news about #62477
reverted changes for #62477
Switch second parameter to password_make_salt to be a flag
updated NEWS
updated NEWS
fix windows build
Add new function hash_pbkdf2() to UGRAPDING doc
fix valgrind warning
fix valgrind warning
fixed #62433 test for win
update NEWS
appease MSVC (doesnt like unary minus of unsigned ints)
appease MSVC (doesnt like unary minus of unsigned ints)
appease MSVC (doesnt like unary minus of unsigned ints)
Added in NEWS and UPGRADING for feature 55218
Cleanup whitespace issues
Implement password_get_info() function
Implement password_needs_rehash() function
This wil be PHP 5.3.16
Revert change 3f3ad30c50: There shouldn't be new features in 5.3, especially not if they aren't in 5.4, too.
Update signature info for changing algo to an ordinal
Some more refactoring, make algo no longer optional
Remove php.ini setting for default bcrypt cost
fix (signed) integer overflow (part of bug #52550
fix (signed) integer overflow (part of bug #52550
fix (signed) integer overflow (part of bug #52550
Refactored internal_get_timestamp()
Unified zval -> UDate conversions
Revert JSON merges to 5.4
Revert JSON changes to PHP 5.3
fix bug #61359: json_encode() calls too many reallocs
update NEWS
remove duplicates, fix order
Update password.c to use safe_emalloc in sensitive places
More refactoring of crypt into php_crypt, and fixing memory allocation
merge
merge
fix Bug #62273 	Segmentation Fault in Mysqli/Mysqlnd
new charsets
Restore old NEWS file, and re-add new entry.
fix NEWS order
Refactor password.c a bit, add different error checking
Refactor crypt to use an external working function
Add json_last_error_msg() function
trace allocations in a file
Improve JSON error handling
update NEWS
Add tests and error checking for large salt requested values to prevent overflow on allocation
Update tests to check ini setting
Add tests for password hashing
Implement php.ini setting password.bcrypt_cost
ws fix
Tests, fixes and optimisations
Pass orig filename and line through to emalloc and friends
Refactor salt generation, rename password_create to password_hash
Forgot to git add two tests
Implement openssl support for make_salt
More error checking, and some cleaning up for password.c
Basic random generator added to make_salt
BFN
Update UPGRADING given 7596445
BreakIterator: fix compat with old ICU versions
Duplicate test for ICU 49
Implement password_verify
Actually complete password_create()
Base structure for passsword_create and password_make_salt
Improve json_encode error handling
- BFN
- BFN
- Improved fix for #62384
Disallow closing a generator during its execution
Pass zend_generator directly to Zend VM
Implement get_iterator
Remove unneeded and outdated ChangeLog file
BreakIterator::getPartsIterator: new optional arg
Added IntlCodePointBreakIterator.
Remove extra ;
Improve check for :memory: pseudo-filename in SQlite
Adding in test for feature 55218
Implements feature 55218
Remove outdated and user-specific files
fix windows build
Add NEWS for bug #62262
sync zip ext version with pecl
one more correction for COM upgrading notes
one more correction for COM upgrading notes
split gzgetc_basic.phpt for zlib 1.2.7
Add sceleton for yield* expression
com ext upgrading correction
com ext upgrading infos
com ext upgrading info
Reverted the BC fix regarding to #57905, test adopted
Add create_sid to session_set_save_handler and SessionHandler
simplify boolval()
More cleanup of documentation and comments, as well as code formatting
re-add 61755 to NEWS
re-add 61755 to NEWS
Remove un-needed memset, and replacing stray spaces
Revert "Add PBKDF2 support via openssl()"
Revert "Rename openssl_pkcs5_pbkdf2_hmac() to something that doesn't sound like a spell."
add CVE
Update error messages to be more inline with PHP standards
refactor away un-necessary casts in hashing routines
Update NEWS to fix typo, add name
Create hash_pbkdf2 function addition
One more time
Add PBKDF2 support via openssl()
Rename openssl_pkcs5_pbkdf2_hmac() to something that doesn't sound like a spell.
Add PBKDF2 support via openssl()
Rename openssl_pkcs5_pbkdf2_hmac() to something that doesn't sound like a spell.
Add PBKDF2 support via openssl()
typo fix
Add Intl prefix to BreakIterator/RuleBasedBI
Make travis silent
Adding a test for ext/posix/tests/posix_getegid_basic.phpt
Remove trailing space
Replaced zend_parse_method_params with plain zpp
BreakIter: Removed getAvailableLocales/getHashCode
Change in BreakIterator::getPartsIterator()
Disable email notifications for travis-ci
rearrange news
typo
typo
NEWS File
typo
improve overflow checks
add NEWS
fix potential overflow in _php_stream_scandir
fix potential overflow in _php_stream_scandir
set current versions for libzip and zip ext
updated NEWS
updated NEWS
updated NEWS
zip windows fixes
fixed bc break related to #57905
fixed a bit overlooked from the last libzip port
brought the fix for #47667 back
fixed zip entry freeing
rechecked the merged libzip, took also the indents from the original to avoid confusion next time
fixed a double freeing crash
fixed header include
initial libzip upgrade patch to 0.10.1
Travis stop spamming
UPGRADING entry for boolval()
- BFN
Regenerated files
Regenerated files
Regenerated files
Don't depend on a fixed path for PHP shebang but use /usr/bin/env (cherry picked from commit 89c5d981603ed4a2a54f86c20cec4f263c58ded6)
NEWS entry for boolval()
Remove unused codes
based on microsoft's description,the direct convert from FILETIME struct to __int64 is unsafe.
merge 5.3 entries
restore NEWS
Implement boolval() with a test
Optimization in ext/intl/msgformat
BreakIterator: add rules status constants
Tests for (RuleBased)BreakIterator.
BreakIterator and RuleBasedBreakiterator added
Updated UPGRADING for the changes in eb346ef
Changed XFAILed collator_get_sort_key.phpt
Added and fixed tests given eb346ef
DateFormat plays nice with Calendar, TimeZone
Added private constructor to IntlTimeZone.
- Optimize comparison between same HashTable pointer
Send mails to php-qa@lists.php.net whenever a build is failing
Add preliminary README.md for github
Properly handle yield during method calls
Improve backtraces from generators
Add cloning support for generators
close the underlying stream as early as possible and so notify the NET layer
- fix missing include for unix sockets
- Comment unused function to avoid warnings
- fix missing include for unix sockets
- Comment unused function to avoid warnings
- fix missing include for unix sockets
- Comment unused function to avoid warnings
close the stream whenever possible, no need to keep it open altough the connection is marked as unusable
Make $generator->send() return the current value
Implemented FR #61602 Allow access to name of constant used as default value
more refactoring stuff. Reduced code duplication in the authentication code
sort NEWS
fix bug #55042 - erealloc without updating pointer
Allow yielding during function calls
fix unchecked emalloc (cherry picked from commit 158d8a6b088662ce9d31e0c777c6ebe90efdc854)
Allow throwing exceptions from generators
small refactoring - factour out code from connection establishment. Add a define for the default authentication protocol - get away from the hardcoded magic value
fix test
fix test
Typofix in comment in proc_open.c
fix CVE-2012-2143
Add auto-increment keys
Add support for yielding keys
Add $generator->close() method
Allow to use yield without value
updated the libmagic patch after Felipes regex fix
Add support for $generator->send()
Bug #62177 deactivate the linux test version on win
fix unchecked emalloc
add CVE
add bug 62146
add bug #62082
Make the GOTO and SWITCH VMs work again
Add curl extension config, uses cli-server to test
Source all extension scripts for ENV vars
Add extension configs, compile more extensions
Reformat, setup MySQL DB, call run-tests directly
Add support for Travis CI
Properly free resources when generator return value not used
Set EG(current_execute_data)
Added support for CURLOPT_MAIL_AUTH
sync with HEAD
sync with HEAD
128 MB is enough for everyone (TM)
remove remaining traces of unicode.* ini settings
VIM uses spaces as tabs and that doesn't comply with the coding standard. I think I'd fixed it so it's using real tabs now.
Free loop variables
Removed syslog.h. That should never have been commited.
Added support for CURLOPT_MAIL_AUTH
Add support for generator methods
Add first real generator test
Remove wrong dtor call
Close generator on return
Implement return for generators
Add YIELD opcode implementation
Add way to pass generator object to opcode handlers
Add support for executing a zend_execute_data
- add missing headers to avoid warnings
- add missing headers to avoid warnings
- add missing headers to avoid warnings
Those changes are in 5.3.15
- BFN
Changed ResourceBundle constructor behavior
Update NEWS
add support for the alloc_size __attribute__ (through ZEND_ATTRIBUTE_ALLOC_SIZE and ZEND_ATTRIBUTE_ALLOC_SIZE2
This test depends on the default_charset setting, so set it to UTF-8 for consistent output
Allow calling zend_vm_gen from everywhere
Add dummy Iterator implementation
Add initial code for suspending execution
Updated NEWS w.r.t to ext/intl changes
- fix help message for '-R'
- add missing help message for '-R'
Revert NEWS
Revert "Implemented FR #61602 Allow access to name of constant used as default value"
Revert "Implemented FR #61602 Allow access to name of constant used as default value"
Allocate execute_data using malloc for generators
- fix NEWS for bug #61812
add news for new pg_ functions
Use free instead of efree
Use emalloc instead of malloc
- BFN
Note recent changes to ext/intl in UPGRADING
Make generator functions return a Generator object
Add some boilerplate code for Generator class
Add empty Generator class
Add ZEND_SUSPEND_AND_RETURN_GENERATOR opcode
Add zend_do_suspend_if_generator calls
Add error if yield is used outside a generator
Minor code cleanup
Add flag for generator functions
- BFN
- BFN
Added IntlCalendar::toDateTime()
MessageFormatter accepts IntlCalendar arguments
Bug #58756: w.r.t MessageFormatter (partial fix)
Handle bogus string in intl_charFromString().
Whitespace.
Added IntlTimeZone::fromDateTimeZone() and ::toDateTimeZone.
Added IntlCalendar::fromDateTime()
Accept DateTimeZone where time zones are expected.
Dummy (whitespace) change so Dan Brown can verify snap generation from git
PHP 5.3.15-dev
fd fix
fix bug #61065 (cherry picked from commit a10e778bfb7ce9caa1f91666ddf2705db7982d68)
Revert "Update test to fix breakage caused by the previous commit."
fix test
to 5.4.5-dev
fd fix
fix bug #61065
Add T_YIELD "yield" keyword
Changes to remaining two tests, #62022
Small fixes to tests, see #62022
Change impl of GZIP_POST, DEFLATE_POST. See #62021
BFN
cleanup merge
fix bug #60761 zlib.output_compression fails on refresh
Bump to 5.4.4-dev
fix bug #61782 - __clone/__destruct do not match other methods when checking access controls
fix bug #54547
update NEWS/UPGRADING
fix bug #61782 - __clone/__destruct do not match other methods when checking access controls
fix bug #54547
Keep date precision in MessageFormatter.
Updated UPGRADING with changes to ext/intl.
ICU < 4.8 compat in MessageFormatter
Don't check number of args in msgfmt_do_format
Added new MessageFormatter tests.
Better error messages in MessageFormatter::format.
Accept numeric strings for dates.
Cache arguments type info in MessageFormatter.
Set global error if insufficient numeric args. WS.
Refactoring of patch for FR #61871.
Orig patch for FR #61871 by David Sklar
Allow arbitrary expressions for empty()
update NEWS
fix stack overflow in php_intlog10abs()
fix stack overflow in php_intlog10abs()
fix stack overflow in php_intlog10abs()
Cleanup useless function declaration for traits
updated NEWS
updated NEWS
Correct test title
Implemented FR #61977 (Need CLI web-server support for files with .htm & svg extensions)
- BFN
Typo
c++ comments
restore BC
ws + restore BC to apache_request_headers
fix bug #61807 - Buffer Overflow in apache_request_headers
updated NEWS
This will be PHP 5.3.14
improve fix for CVE-2012-1823
improve fix for CVE-2012-1823
improve fix for CVE-2012-1823
these methods should return a stream. This makes it easier to intercept the return value
comment for the #else
reorganize things a bit...just shifting code
correct variable name
Change the test folder
Add NEWS entry for bug #61961
correct NEWS
Bump to next version
bump mysqlnd versions
phoenix from the ashes
here comes the news
Remove support for local infile handler in mysqli from 5.5
remove dead and unused for more than 8 years code
merge 5.3.11 stuff
organize NEWS
Make output order for dom007.phpt platform independent
- Regenerated files
- Regenerated files
refactor MYSQLND_NET, split it two parts for easy resharing
- Regenerated files
- Regenerated files
- Changed last commit to use VK_ESCAPE on Windows
Additional fixs for bug 61746 - prepare/clean acls
merge test from PHP-5.4
- BFN
- BFN
- Added missing bound check in iptcparse() (path by chris at chiappa.net)
Partial fix for bug 61743 to get correct icacls path
sync version
fix NEWS order
BFN
fix bug #61443
fixed bug #61820
Bug 61610 adopted expected warnings for 5.4
Update NEWS
typo in test
Make css string constant
Improved performance while sending error page
- BFN
- BFN
add pg_escape_identifier/pg_escape_literal
fix RCs
Update to 5.4.2-dev
Commit generated file
Bug#59597 NumberFormatter::parse() with TYPE_INT64 results in a 32 bit integer
Drop old README
Update generated file.
Ensure the SQL parser is regenerated after changes.
update NEWS
Add NEWS
Implement Request #47570	libpq's PG_VERSION should be exported to userland
pack() with new "Z" more in line with Perl.
Implement Request #47570	libpq's PG_VERSION should be exported to userland
Implement const array/string dereference
change the bug summary
Rename README.SVN-RULES to README.GIT-RULES, here, too
configure.in: Check for README.GIT-RULES instead of README.SVN-RULES
Move and update README.SVN-RULES to README.GIT-RULES
Remove cherry-picked items for 5.3.11
Copy default properties of internal classes for different threads
Update test to fix breakage caused by the previous commit.
Disabled EOL conversions on certain tests
MFH: fixed a mistake on reverting my previous patch.
fixed a mistake on reverting my previous patch: http://git.php.net/?p=php-src.git;a=commitdiff;h=50b2e02c045b61f99e8c72d54e6bec055aee98e4
Update NEWS
updated the NEWS with the latest fileinfo changes
fix typo
Update NEWS for #61617
Cherry-pick 4cc74767
Implemented FR #61602 Allow access to name of constant used as default value
Update NEWS for #61541
Small performance improvement. The current code is correct, but if it is used inside a long loop or long strings, it's inefficient.
Reset LIBS temporarily to make sure PHP_CHECK_FUNC will look into libc.
updated the libmagic.patch
Bug #61566 Fileinfo ext\fileinfo\tests\finfo_file_002.phpt fails
- update to openssl 0.9.8u
- update to openssl 0.9.8u
- update to openssl 0.9.8u
- Updated to version 2012.3 (2012c)
Update UPGRADING with changes.
Compatibility with old versions of ICU (4.0+).
Added support for new method TimeZone::getUnknown() added in ICU 49.
Supported Calendar methods new to ICU 49.
Initial checkin of calendar/timezone code.
Put new function in correct section.
Convert EOL style to Unix.
Revert "making the test fail for testing jenkins report mail. I will revert this soon."
making the test fail for testing jenkins report mail. I will revert this soon.
Cleanup Safe Mode related comment in SG(request_info)
Add php.ini parameter checks for OCI8
trivial change try to ci a "fake" merge
fix makedist for new tags
Resolved conflict.
This will be PHP 5.3.12
- fix bug #61541, Segfault when using ob_* in output_callback
Refactoring junit logger. Added generation of nested testsuites in junit.xml.
- fix bug #61541, Segfault when using ob_* in output_callback
Bug 61504 updated libmagic.patch
Bug #61504 TSRML_FETCH() must be last
Restored the good part of 74ee335 that was just reverted.
Revert "- fix bug #61504, fix build errors on windows and possibly other"
- fix bug #61504, fix build errors on windows and possibly other
Update README
Added failing test for ArrayObject::offsetExists().
- fix test for 5.11
Adjust mbstring php.ini settings
mbstring use UTF-8
fix test
fix tests
update NEWS
fix bug #61367 - open_basedir bypass using libxml RSHUTDOWN
NEWS for bug #61487
NEWS for bug #61487
fix bug #61487 - bad bounds check in grapheme_strpos
open_basedir check for linkinfo
Remove unused variable
This is a git checkout
Revert incorrect fix
Implemented FR #60738 (Allow 'set_error_handler' to handle NULL)
Improve set_exception_handler while doing reset
Revert "Implemented FR #60738 (Allow 'set_error_handler' to handle NULL)"
Revert "Update NEWS"
Revert "Implemented FR #60738 (Allow 'set_error_handler' to handle NULL)"
Update NEWS
Implemented FR #60738 (Allow 'set_error_handler' to handle NULL)
Typo
Improve set_exception_handler
Improve set_exception_handler
Remove empty lines
Updated NEWS (DOM object debug info handler).
Improved on DOM object debug info handler. Added test.
Added DOM Debug handler
Revert "revert from NEWS too"
revert from NEWS too
update for git
More changes to README
Add initialization tests for SQLT_INT binds
Add initialization tests for SQLT_INT binds
BFN
Ignore the tempoary files
Add initialization tests for SQLT_INT binds
Use the NEWS merge driver if available
NEWS entry for readline fix
NEWS entry for readline fix
Add open_basedir checks to readline_write_history and readline_read_history
Made some SplFileObject::fputcsv not pollute the working dir.
Always keep the NEWS file from the branch when merging
- revert test commit
- test commit for log mail
- update NEWS
- add test for bug #55000 and #54374
- merge fix bug #54374, bug #55500 - filter file names better, no dangling [s, svn revision 321664
adapt makedist to git
Replace $Revision$ with $Id$ in keyword expansion enable files
Enable $Id$ expansion for files with the $Revision$ keyword
Adding Braces in json.c to conform with coding standards
Bump copyright year.
Ignore the temporay files in sapi/*/tests/
Ignore the temporay files in sapi/*/tests/
Minor change, test using php mail address as account
Use newdoc instead of escape char
adapt makedist to git
Minor text changes (to try new git repo)
fix tests failing due to corrected hash tiger
Issue-60742: Added FilesystemIterator::OTHER_MODE_MASK
add note about corrected tiger hash output
Add missing files.
MFH: 7dcada1 for 5.4
MFH: 45a6f8d for 5.4.
Add .gitignore
add --PUT-- section support based on POST_RAW
add --PUT-- section support based on POST_RAW
add --PUT-- section support based on POST_RAW
Test for MySQL version.Variable is deprecated in MySQL 5.6.
Test for MySQL version.Variable is deprecated in MySQL 5.6.
Test for MySQL version.Variable is deprecated in MySQL 5.6.
- add CVE
Test portability and coverage changes
Test portability and coverage changes
Test portability and coverage changes
Remove reference to "default_charset" here since the it isn't really about the ini option at all. That only comes into play when you force it by passing and empty encoding string to those functions.
reduce memory usage
reduce memory usage
reduce memory usage
This change was badly worded and filed in the wrong section. This isn't an ini change at all.
Typo when merging from trunk
fix test
Same wrong order here
Sorry for wrong order again.
Re-order them according to README.SVN-RULES
Re-order them according to README.SVN-RULES
Implemented FR #60850 (Built in web server does not set $_SERVER['SCRIPT_FILENAME'] when using router)
Implemented FR #60850 (Built in web server does not set $_SERVER['SCRIPT_FILENAME'] when using router)
Add Moriyoshi Koizumi and I to the cli SAPI credits
Add Moriyoshi Koizumi and I to the cli SAPI credits
Oops, sorry for my poor english
Oops, sorry for my poor english
merge 322758 (detect a php-cgi which is a sibling of php cli)
merge 322758 (detect a php-cgi which is a sibling of php cli)
Use correct property ctor, should fix threading issue in bug #55334 # The code was refactored in 5_4/trunk, no need to merge
- Updated NEWS with news of bug #61306 having been resolved (see r323988). - Tidied up NEWS
- Tentative fix for bug #61306. #cjones: Will update NEWS when confirmed it fixes the problem.
- Tentative fix for bug #61306. #cjones: Will update NEWS when confirmed it fixes the problem.
MFH: Headers: forbid \r and \n also after \0, allow CRLF followed by HT or SP and forbid \0. See bug #60227.
Sync char set wording with migration doc
Make "buildconf --force" more robust, per IRC chat.  Not backported to 5.3 to avoid destabilization.
Make "buildconf --force" more robust, per IRC chat.  Not backported to 5.3 to avoid destabilization.
Typo and missing zend ini param
Typo: "outout"
Add the ZEND_DONT_UNLOAD_MODULES environment variable for debugging to 5.3 as well.
Add test for bug #61292, bug was fixed in -r323935
Add test for bug #61292, bug was fixed in -r323935
Apply test fix for bug #61288 pdo_mysql___construct_options_libmysql.phpt test fails
Apply test fix for bug #61288 pdo_mysql___construct_options_libmysql.phpt test fails
Apply test fix for bug #61288 pdo_mysql___construct_options_libmysql.phpt test fails
- fix bug #61290, fix build
- fix bug #61290, fix build
Align section headings with the latest (5.4) migration on-line doc. This will aid future reuse of UPGRADING text.
fix bug #61287 (A particular string fails to decompress)
- fix bug #54407, Incorrectly defined NTDDI_VERSION macro
- fix bug #54407, Incorrectly defined NTDDI_VERSION macro
- size_t may be shorter than long and definitely is not signed. Note that the   z modifier was only added in C99, so we can't use it.
- size_t may be shorter than long and definitely is not signed. Note that the   z modifier was only added in C99, so we can't use it.
- size_t may be shorter than long and definitely is not signed. Note that the   z modifier was only added in C99, so we can't use it.
- Allow Windows builds targeting Vista and above have access to the RFC 3678   API for multicasting.
- notes about xp&2003 drop
NEWS and UPGRADING for r323862
- fix bug #54407, Incorrectly defined NTDDI_VERSION macro
- fix bug #54407, Incorrectly defined NTDDI_VERSION macro
- bump minimum version, no more XP/2003
Deprecate /e modifier
Missed 5.3 for the Armenia DST drop
- Updated to version 2012.2 (2012b)
- Updated to version 2012.2 (2012b)
- Updated to version 2012.2 (2012b)
Reorder
MFH mb_ereg_replace_callback() for security enhancements.
Forgot NEWS for r323803
Removed get_magic_quotes* functions from the deprecated list, because we love them so
And fix the test cases as well
Actually, this was a merge from trunk, and Gustavo did it originally.
CLI Server was sending "Connection: closed" instead of "Connection: close"
magic quotes directives belong in the E_CORE_ERROR group, and not the E_DEPRECATED group
Mention file upload progress support: http://php.net/manual/en/session.upload-progress.php
Removed class constants (these were added in 5.3.7), and added the new Zlib functions
Sync sqlite -> PECL terminology with release announcement's
Reorganized to remove duplication.  Cross checked a few php.ini settings.
Change PHP 6 refs to PHP 5.4 and sync some spelling with PHP_5_4 branch files
Some basic tidy up and whitespace fixes.
Tidy up PHP 5.4.0 section, incuding removing most (?) bugs in new features found/fixed during RC phase, and removing 5.4 section entries for bugs already publicly released in PHP <= 5.3.10.
- Updated to version 2012.1 (2012a)
- Updated to version 2012.1 (2012a)
- Updated to version 2012.1 (2012a)
Add the CVE numbers that were mentioned in the related php.net announcements
Remove "backported" from 5.4 comments since 5.3 is the base version these bugs are fixed.  Reorder.
back to dev
5.4.0
prepare NEWS for 5.4.0
remove -dev for release
- fix bug #60879, unserialize does not invoke __wakeup
- fix bug #60879, unserialize does not invoke __wakeup
Improve fix for #61165, the previous one cause #43450 test failed
Improve fix for #61165, the previous one cause #43450 test failed
update credits
test for bug #61124
test for bug #61124
test for bug #61124
NEWS for r323330
fix phpt : fopen(data://) requires allow_url_fopen=1
fix phpt : fopen(data://) requires allow_url_fopen=1
more verbose skip reason in test files with not so obvious extension requirements
more verbose skip reason in test files with not so obvious extension requirements
more verbose skip reason in test files with not so obvious extension requirements
fix test file for bug #47997 : fopen(data://) requires allow_url_fopen=1
merge test to 5.3, and remove xfail since the bug was fixed
merge test to 5.3, and remove xfail since the bug was fixed
typo
test for bug #61011
Tests for bug #61165
Relocate orphan line
NEWS for r323362
- Cleanup UPGRADING and UPGRADING.INTERNALS from 5.4 changes. - Added information about removal of streams pooling API.
- Revert r134029. The streams pooling API was never used in more   than 8 years and therefore unnecessarily adds complexity.
Yup, these need to be escaped. Good catch.
fix race condition in find (it was finding the copied files over and over again, and recursing forever)
fix race condition in find (it was finding the copied files over and over again, and recursing forever)
fix race condition in find (it was finding the copied files over and over again, and recursing forever)
I think we should let this be settable from .htaccess to match the other post/upload related limits like upload_max_filesize, post_max_size, and max_input_vars.
Weird, what happened here?
Weird, what happened here?
NEWS for r323219
back to dev
5.4.0rc8
make ZEND_SIGNALS configurable, off by default also make ZEND_SIGNALS enabled and disabled binary-compatible
make ZEND_SIGNALS configurable, off by default also make ZEND_SIGNALS enabled and disabled binary-compatible
fix compat function not passing along input buffer with php_output_context_pass() if the output_handler_func does not set out_str
fix compat function not passing along input buffer with php_output_context_pass() if the output_handler_func does not set out_str
 * fixed bug #60704 unlink() bug with some files path
 * fixed bug #60704 unlink() bug with some files path
This one depends on max_input_vars as well
This one depends on max_input_vars as well
This one depends on max_input_vars as well
These tests fail unless max_input_vars and/or max_file_uploads is set high enough
These tests fail unless max_input_vars and/or max_file_uploads is set high enough
These tests fail unless max_input_vars and/or max_file_uploads is set high enough
Added ability to reset user opcode handlers (Yoram)
Added ability to reset user opcode handlers (Yoram)
Improved max_input_vars directive to check nested variables
Improved max_input_vars directive to check nested variables
Improved max_input_vars directive to check nested variables
Add credit line for the PHP Output Handler
Add credit line for the PHP Output Handler
Unbreak these tests - please be careful with your Windows-based editors that seem to mess up ^M's here.
Improved fix for #61058, and add test script
Improved fix for #61058, and add test script
change 6.0.0 to 5.4.0
decrescent order #<Felipe> laruence: yes, we used to use decrescent order of bug id in the NEWS entry.
decrescent order #<Felipe> laruence: yes, we used to use decrescent order of bug id in the NEWS entry.
fix bug #54682 (tidy null pointer dereference)
fix bug #54682 (tidy null pointer dereference)
fix bug #54682 (tidy null pointer dereference)
Force allow_url_fopen to fix qa.php.net/reports diffs
Force allow_url_fopen to fix qa.php.net/reports diffs
Force allow_url_fopen to fix qa.php.net/reports diffs
Mask different curl message. Now passes on Oracle Linux 5
Mask different curl message. Now passes on Oracle Linux 5
Mask different curl message. Now passes on Oracle Linux 5
Allow alternative curl output shown in several qa.php.net/reports logs
Allow alternative curl output shown in several qa.php.net/reports logs
Allow alternative curl output shown in several qa.php.net/reports logs
merging the patch from bug #52078, fixes the test on disk with huge inode size(fileinode() can overflow and return negative values there).
Safer way to call pcre_fullinfo - bug 60986
Safer way to call pcre_fullinfo - bug 60986
Safer way to call pcre_fullinfo - bug 60986
- Connection: close, not "closed".
Same thing here. "June 18, 1969 8:49:59 AM " does not contain a timezone, so there is no way to know whether dst should be applied or not.
Same thing here. "June 18, 1969 8:49:59 AM " does not contain a timezone, so there is no way to know whether dst should be applied or not.
Same thing here. "June 18, 1969 8:49:59 AM " does not contain a timezone, so there is no way to know whether dst should be applied or not.
Without a timezone you can't know whether it is dst or not in this one
Without a timezone you can't know whether it is dst or not in this one
Without a timezone you can't know whether it is dst or not in this one
Another openssl test that is dependent on the openssl version. The output has changed in more recent versions. Synch with newer output and consider changing the test to only pick out the more stable fields instead of all of them.
Another openssl test that is dependent on the openssl version. The output has changed in more recent versions. Synch with newer output and consider changing the test to only pick out the more stable fields instead of all of them.
Another openssl test that is dependent on the openssl version. The output has changed in more recent versions. Synch with newer output and consider changing the test to only pick out the more stable fields instead of all of them.
fix gcov Warning: ibase_drop_db(): lock time-out on wait transaction object http://gcov.php.net/viewer.php?version=PHP_5_4&func=tests&file=ext%2Fpdo_firebird%2Ftests%2Fbug_53280.phpt
fix gcov Warning: ibase_drop_db(): lock time-out on wait transaction object http://gcov.php.net/viewer.php?version=PHP_5_4&func=tests&file=ext%2Fpdo_firebird%2Ftests%2Fbug_53280.phpt
fix gcov Warning: ibase_drop_db(): lock time-out on wait transaction object http://gcov.php.net/viewer.php?version=PHP_5_4&func=tests&file=ext%2Fpdo_firebird%2Ftests%2Fbug_53280.phpt
Need EXPECTF here, of course
Need EXPECTF here, of course
Need EXPECTF here, of course
Getting different hashes here. But this test isn't testing the hashes, it is just making sure we actually get a hash and don't crash.
Getting different hashes here. But this test isn't testing the hashes, it is just making sure we actually get a hash and don't crash.
Getting different hashes here. But this test isn't testing the hashes, it is just making sure we actually get a hash and don't crash.
According to the reports on qa this test is failing the same way for everyone. See: http://qa.php.net/reports/viewreports.php?version=5.3.10&test=%2Fext%2Fopenssl%2Ftests%2Fbug28382.phpt I'm not sure if this is due to a change in the openssl library or in the extension, so perhaps the test itself needs to change, but for now synch it with the new output and watch for failures.
According to the reports on qa this test is failing the same way for everyone. See: http://qa.php.net/reports/viewreports.php?version=5.3.10&test=%2Fext%2Fopenssl%2Ftests%2Fbug28382.phpt I'm not sure if this is due to a change in the openssl library or in the extension, so perhaps the test itself needs to change, but for now synch it with the new output and watch for failures.
According to the reports on qa this test is failing the same way for everyone. See: http://qa.php.net/reports/viewreports.php?version=5.3.10&test=%2Fext%2Fopenssl%2Ftests%2Fbug28382.phpt I'm not sure if this is due to a change in the openssl library or in the extension, so perhaps the test itself needs to change, but for now synch it with the new output and watch for failures.
This test needs gc enabled
This test needs gc enabled
This test needs gc enabled
- Headers: forbid \r and \n also after \0, allow CRLF followed by HT or SP and   forbid \0. See bug #60227.
- Merging r323033 into 5.3 (see bug #60227).
mention git
mention git
mention git
- Hopefully correct fix for bug #60227. #No commit for 5.4 for now
back to dev
retag 5.4.0 rc7
This will be PHP 5.3.11, 5.3.10 will be released from other branch
assert
assert
assert
Always restore PG(magic_quote_gpc) on request shutdown
back to dev
5.4.0 rc7
fix UMR in php_register_variable_ex, reported by Stefan Esser
fix UMR in php_register_variable_ex, reported by Stefan Esser
fix UMR in php_register_variable_ex, reported by Stefan Esser
Test for null behavior with ext/mbstring functions
fix usage of php_output_(de)activate; I guess this code doesn't bother about one more hack;
fix usage of php_output_(de)activate; I guess this code doesn't bother about one more hack;
MFH: r322963
fix headers print to stdout/stderr if no output written; need to make some more testsbefore committing to PHP_5_4; fix crashes and invalid usage of output control in cli server while passing by
- fix #55226, WS
- fix #55226, WS
- fix #55226, WS
- fix #55226, fix build
- fix #55226, fix build
- fix #55226, fix build
use stderr before, stdout after php_output_startup() and sapi_module.ub_write() after php_output_activate()
use stderr before, stdout after php_output_startup() and sapi_module.ub_write() after php_output_activate()
- libssh2 1.3.0
- libssh2 1.3.0
- libssh2 1.3.0
- Reinstated correct return values after David's fix for #60218.
- Reinstated correct return values after David's fix for #60218.
CS fixes.
createCollation
createCollation() for pdo_sqlite as well Closes bug #55226
createCollation() for pdo_sqlite as well Closes bug #55226
createCollation() for pdo_sqlite as well Closes bug #55226
Missed the test
Missed the test
Missed the test
createCollation()
- update libs
- update libs
- update libs
- update libs
- update libs
- update libs
- update libs
- update libs
- update libs
- fix #60895, possible invalid handler usage
- fix #60895, possible invalid handler usage
- fix #60895, possible invalid handler usage
- openssl 0.9.8t, curl 7.24.0
- openssl 0.9.8t, curl 7.24.0
- openssl 0.9.8t, curl 7.24.0
WS, merged from trunk cause this issue, sorry
WS, merged from trunk cause this issue, sorry
find a php-cgi which is a sibling of the php executable
fix crash with display_startup_errors=1
fix crash with display_startup_errors=1
Re-fixed bug #60825 (Segfault when running symfony 2 tests)
Re-fixed bug #60825 (Segfault when running symfony 2 tests)
LTP/gcov/lcov
minor tweak to warning to fix the bug54682.phpt test
Please test your tests
Please test your tests
revert r319254 (fix bug #54682) since it is not correct add test that was broken with that patch. this bug is probably in libtidy itself and not in PHP. I didn't investigate it enough to confirm, though
revert r319254 (fix bug #54682) since it is not correct add test that was broken with that patch. this bug is probably in libtidy itself and not in PHP. I didn't investigate it enough to confirm, though
revert r319254 (fix bug #54682) since it is not correct add test that was broken with that patch. this bug is probably in libtidy itself and not in PHP. I didn't investigate it enough to confirm, though
Remove memory leak in substr_replace (to commit in 5.4 after code freeze)
.
Added the bugfixing notes to the NEWS file
back to dev
5.4.0RC6
merging the patch from #52078, fixes the test on disk with huge inode size(fileinode() can overflow and return negative values there). will merge this to PHP_5_4 after the commit freeze.
merging the patch from #52078, fixes the test on disk with huge inode size(fileinode() can overflow and return negative values there). will merge this to PHP_5_4 after the commit freeze.
- add test for bug #60761
- add test for bug #60761
- add test for bug #60761
- add test for bug #60771
- add test for bug #60771
- add test for bug #60771
- add test for bug #60761
- add test for bug #60761
- add test for bug #60761
remove XFAIL for bug #47178
remove XFAIL for bug #47178
add notes about ob_start(), gzencode() and removed hash algos
merge ext/hash from trunk
merge ext/hash from trunk
fix tests I borked
remove Salsa10/Salsa20, which are actually stream ciphers not hash functions
adapted tiger hash byte print order to those of md5 and sha1
unnecessay slash
Revert r322390.
Implement ReflectionClass::setFinal() and ReflectionMethod::setFinal().
Regenerated scanners
Regenerated scanners
Improved traits implementation. Now to support __CLASS__ constant in traits php doesn't have to copy the complete compiled method, but can reuse the same code. The resolution of __CLASS__ constants in methods defined in traits are delayed till run-time. This approach also made possible to use __CLASS__ constant as default value for traits properties and method arguments.
Improved traits implementation. Now to support __CLASS__ constant in traits php doesn't have to copy the complete compiled method, but can reuse the same code. The resolution of __CLASS__ constants in methods defined in traits are delayed till run-time. This approach also made possible to use __CLASS__ constant as default value for traits properties and method arguments.
typo
We should be back to -dev ...
regen to fix lcov issues
fixed failed tests (backport from PHP_5_4/trunk).
MFH: fixed bug #60227: header() cannot detect the multi-line header with CR.
- add new build type, optional. has been used for the last 2 RCs
- add new build type, optional. has been used for the last 2 RCs
- add new build type, optional. has been used for the last 2 RCs
Added fixes Pdo Firebird bugs to the NEWS file
PHP 5.3.9
- make it windows version independent, error msg differs, bad but well
- make it windows version independent, error msg differs, bad but well
- make it windows version independent, error msg differs, bad but well
- any other dir may not exist or may not be used
- any other dir may not exist or may not be used
added fixed Pdo Firebird bugs to the NEWS section
sync firebird test 003 with the 5.4 branch , eliminate failing test http://gcov.php.net/viewer.php?version=PHP_5_3&func=tests&file=ext%2Finterbase%2Ftests%2F003.phpt
 - error is windows version dependent and not what we test here
 - error is windows version dependent and not what we test here
 - error is windows version dependent and not what we test here
- rm
- rm
 - spl tests are also under examples (sigh)
 - spl tests are also under examples (sigh)
 - spl tests are also under examples (sigh)
These tests don't work if run as root
These tests don't work if run as root
These tests don't work if run as root
- Added the ability for the intl exception to throw exceptions when a global error is set.
Make sure gc is enabled
Make sure gc is enabled
This test only works if gc is enabled
do kill 9 to fix a race condition in this test. (should fix the debian 32-bit buildbot)
do kill 9 to fix a race condition in this test. (should fix the debian 32-bit buildbot)
do kill 9 to fix a race condition in this test. (should fix the debian 32-bit buildbot)
Remove test for bug 60675, the change in behavior between 5.3 and 5.4 is intentional.
Remove test for bug 60675, the change in behavior between 5.3 and 5.4 is intentional.
Test for bug 60675.
Test for bug 60675.
Changed: restoring REQUEST_TIME as a long, introducing REQUEST_TIME_FLOAT instead as discussed on the ML
Changed: restoring REQUEST_TIME as a long, introducing REQUEST_TIME_FLOAT instead as discussed on the ML
back to dev
5.4.0rc5
move to XFAIL since it fails on 32-bit
move to XFAIL since it fails on 32-bit
add more tests for #60634 (stems from #21306) and xfail them all for the moment
add more tests for #60634 (stems from #21306) and xfail them all for the moment
add more tests for #60634 (stems from #21306) and xfail them all for the moment
fix test
fix test
NEWS entry for r321738
fix return values of inherited session handler to match user handlers - #60640
fix return values of inherited session handler to match user handlers - #60640
add SessionHandlerInterface for session_set_save_handler() - #60551
add SessionHandlerInterface for session_set_save_handler() - #60551
add test for #60634
add test for #60634
add test for #60634
Bug #55663, fixed test for bug 43139 on Firebird. Per request from mariuz
Bug #55663, fixed test for bug 43139 on Firebird. Per request from mariuz
Bug #55663, fixed test for bug 43139 on Firebird. Per request from mariuz
fix bug #55871 - Interruption in substr_replace()
fix bug #55871 - Interruption in substr_replace()
fix bug #54374, bug #55500 - filter file names better, no dangling [s
fix bug #54374, bug #55500 - filter file names better, no dangling [s
add test for ob_gzhandler
add test for ob_gzhandler
regen for r321655
regen for r321655
regen for r321655
fix memory leak in compile_string when there's a parse error (used e.g. in eval or assert)
fix memory leak in compile_string when there's a parse error (used e.g. in eval or assert)
fix memory leak in compile_string when there's a parse error (used e.g. in eval or assert)
- Year++
- Year++
- Year++
fixed a crash in cli mode when apache_request_headers() is called
fixed a crash in cli mode when apache_request_headers() is called
follow naming convention
follow naming convention
Added an API call to return active output handler
Added an API call to return active output handler
fix tablename in testcase test->testz
fix tablename in testcase test->testz
fix tablename in testcase test->testz
Added test case for PDO_Firebird: bug 53280 segfaults if query column count is less than param count
Added test case for PDO_Firebird: bug 53280 segfaults if query column count is less than param count
Added test case for PDO_Firebird: bug 53280 segfaults if query column count is less than param count
fix Bug #47415	PDO_Firebird segfaults when passing lowercased column name to bindColumn()
fix Bug #47415	PDO_Firebird segfaults when passing lowercased column name to bindColumn()
fix Bug #47415	PDO_Firebird segfaults when passing lowercased column name to bindColumn()
one more error to fix Table unknown TEST , it should be TESTZ
one more error to fix Table unknown TEST , it should be TESTZ
one more error to fix Table unknown TEST , it should be TESTZ
fix table name in testcase
fix table name in testcase
fix table name in testcase
added testcase for Bug 47415
added testcase for Bug 47415
added testcase for Bug 47415
cleanup for bug 48877 test, add description
cleanup for bug 48877 test, add description
cleanup for bug 48877 test, add description
remove experimental status for pdo_Firebird , see the general status http://www.firebirdnews.org/?p=6619
Resolve the last of the xfails from Bug 55253.
Resolve the last of the xfails from Bug 55253.
Resolve the last of the xfails from Bug 55253.
Resolve more xfails due to Bug 55253 being fixed.
Resolve more xfails due to Bug 55253 being fixed.
Resolve more xfails due to Bug 55253 being fixed.
Resolve some xfails due to Bug 55253 being fixed. (merged from 54)
Resolve some xfails due to Bug 55253 being fixed. (merged from 54)
Another xfail resolved since Bug 55253 was fixed.
http://gcov.php.net/viewer.php?version=PHP_5_3&func=tests&file=ext%2Fpdo_firebird%2Ftests%2Fbug_43130.phpt fix failure for bug 43130
http://gcov.php.net/viewer.php?version=PHP_5_3&func=tests&file=ext%2Fpdo_firebird%2Ftests%2Fbug_43130.phpt fix failure for bug 43130
http://gcov.php.net/viewer.php?version=PHP_5_3&func=tests&file=ext%2Fpdo_firebird%2Ftests%2Fbug_43130.phpt fix failure for bug 43130
Another xfail resolved since Bug 55253 was fixed.
Looks like we need to explicity add libstdc++ on recent linux' too, like fedora 14 and ubuntu 11 This fixes build failures for ext/intl and several pecl exts
Looks like we need to explicity add libstdc++ on recent linux' too, like fedora 14 and ubuntu 11 This fixes build failures for ext/intl and several pecl exts
Forgot to add the Pdo Firebird related bug to the News
PDO_Firebird: bug 48877 test
added test for PDO_Firebird: bug 48877
- fix bug 60326, fix crash introduce by the fix
One less xfail since Bug 55253 was fixed.
fix bug #60326 - restore ob_gzhandler
fix bug #60326 - restore ob_gzhandler
fix test
fix test
fix bug #60322 (ob_get_clean() now raises an E_NOTICE if no buffers exist)
fix bug #60322 (ob_get_clean() now raises an E_NOTICE if no buffers exist)
fix test - paths may be expressed in different way
fix test - paths may be expressed in different way
test fixes
test fixes
fix uninitialized var that may lead to crash
fix uninitialized var that may lead to crash
fix tests
fix tests
Coding standards
Initialize structure (some fields may be missed in array returned from user handler).
Initialize structure (some fields may be missed in array returned from user handler).
Initialize structure (some fields may be missed in array returned from user handler).
Change fatal error into warning and ignore arguments over limit
Change fatal error into warning and ignore arguments over limit
Change fatal error into warning and ignore arguments over limit
Back to -dev
PHP 5.3.9RC4
test for bug 60591
test for bug 60591
back to dev
5.4.0rc4
Revert previous bad fix, introduce memory leak
Revert previous bad fix, introduce memory leak
Codes standard & Remove useless empty lines
Codes standard & Remove useless empty lines
Add tests for OpenSSL crash.
Add tests for OpenSSL crash.
Add tests for OpenSSL crash.
implement the solution for isset/string offsets, fix bug #60362
implement the solution for isset/string offsets, fix bug #60362
fix tests
Reduce memory usage
Reduce memory usage
Added max_input_vars directive to prevent attacks based on hash collisions
Added max_input_vars directive to prevent attacks based on hash collisions
Added max_input_vars directive to prevent attacks based on hash collisions
Added max_input_vars directive to prevent attacks based on hash collisions
fix for 5.5.19
fix for 5.5.19
fix for 5.5.19
another fix
another fix
another fix
fix test
fix test
fix test
fix test
fix test
fix test
fix typo
fix typo
fix typo
- add announce steps, s,cvs,svn, MFH
- add announce steps, s,cvs,svn, MFH
- add announce steps, s,cvs,svn, MFH
add some PHPAPI
fix test
fix test
fix test
Added max_input_vars directive to prevent attacks based on hash collisions
Added max_input_vars directive to prevent attacks based on hash collisions
Unregister appropriate curl wrappers
Remove dead code # curl_version_info was introduced in 7.10 and the PHP requirement is 7.10.5
- tmp dir is system depedent
- tmp dir is system depedent
- tmp dir is system depedent
- skip on win
- skip on win
- skip on win
 - ignore notices here, not what we test (array to string conversion)
 - ignore notices here, not what we test (array to string conversion)
 - ignore notices here, not what we test (array to string conversion)
- use the test itself, making the test passes when ran outside the src tree
- use the test itself, making the test passes when ran outside the src tree
- use the test itself, making the test passes when ran outside the src tree
- copy run-test php
- copy run-test php
- copy run-test php
- skip on win
- skip on win
- skip on win
- skip on win
- skip on win
- skip on win
- skip on win
- skip on win
- skip on win
- skip on win
- skip on win
- skip on win
- skip on win
- skip on win
- skip on win
- skip on win
- skip on win
- skip on win
- skip on win
- skip on win
- skip on win
This test should no longer fail, and is perfectly okay for Linux to test on too.
This test should no longer fail, and is perfectly okay for Linux to test on too.
This test should no longer fail, and is perfectly okay for Linux to test on too.
bug fixed #48877 - bindValue and bindParam do not work for PDO Firebird
bug fixed #48877 - bindValue and bindParam do not work for PDO Firebird
bug fixed #48877 - bindValue and bindParam do not work for PDO Firebird
bug fixed #48877 - bindValue and bindParam do not work for PDO Firebird
add $_SERVER["SERVER_NAME"] since it's handy
add $_SERVER["SERVER_NAME"] since it's handy
fix memory leak
fix memory leak
Added tests contributions on spl_autoload and stream_context_set_option()
Added tests contributions on spl_autoload and stream_context_set_option()
Added tests contributions on spl_autoload and stream_context_set_option()
typo, sorry
Uhh.. Can't believe noone noticed the gc option was missing from our ini files
Uhh.. Can't believe noone noticed the gc option was missing from our ini files
Uhh.. Can't believe noone noticed the gc option was missing from our ini files
- Back to -dev
- 5.3.9RC3
- These changes were done after RC2.
back to dev
5.4.0rc3
Make sure that we set the strong crypto result to false as well as returning false.
Make sure that we set the strong crypto result to false as well as returning false.
Test cosmetics.
Test cosmetics.
Test cosmetics.
Sorting out the tests *once* more.
Sorting out the tests *once* more.
Sorting out the tests *once* more.
Add new test for CURLOPT_POSTFIELDS
Add new test for CURLOPT_POSTFIELDS
Add new test for CURLOPT_POSTFIELDS
- tests require 64bit integer
- tests require 64bit integer
Implemented FR #54514 (Get php binary path during script execution).
Implemented FR #54514 (Get php binary path during script execution).
- print_r seems to display 0 or nothing for days, let make that test works in both cases, that's not the purpose of this test to test print_r
- print_r seems to display 0 or nothing for days, let make that test works in both cases, that's not the purpose of this test to test print_r
- print_r seems to display 0 or nothing for days, let make that test works in both cases, that's not the purpose of this test to test print_r
- fix warning and fix buggy behavior of timelib_diff due to bad assumption of floor signature (fixes almost date_diff tests too)
- fix warning and fix buggy behavior of timelib_diff due to bad assumption of floor signature (fixes almost date_diff tests too)
- fix warning and fix buggy behavior of timelib_diff due to bad assumption of floor signature (fixes almost date_diff tests too)
- rename to correct bug #
- rename to correct bug #
- set TZ
- set TZ
- fix the fix, wrong endif pos
- fix build, CURLOPT_FNMATCH_DATA exists since 7.21.0 only
- fix build, CURLOPT_FNMATCH_DATA exists since 7.21.0 only
- force LF
- force LF
- force LF
- add windows version of this test
- add windows version of this test
- add windows version of this test
- add windows version of this test
- add windows version of this test
- force LF
- force LF
- force LF
- force LF
- force LF
- force LF
- force LF as EOL as the code expects it.   however it sounds like a bug in the implementation phar.c:720 	if (4 != php_stream_read(fp, buffer, 4)) { 		MAPPHAR_ALLOC_FAIL("internal corruption of phar \"%s\" (truncated manifest at manifest length)") 	}
Use zbacktrace_ex instead of zbacktrace(actullay is dump_bt) Use %p instead of "0x08x" (IMO this is used for print pointer, which, unfortunately, don't work under x64) If there is any wrong, plz revert this, thanks
Use zbacktrace_ex instead of zbacktrace(actullay is dump_bt) Use %p instead of "0x08x" (IMO this is used for print pointer, which, unfortunately, don't work under x64) If there is any wrong, plz revert this, thanks
- force LF as EOL as the code expects it.   however it sounds like a bug in the implementation phar.c:720 	if (4 != php_stream_read(fp, buffer, 4)) { 		MAPPHAR_ALLOC_FAIL("internal corruption of phar \"%s\" (truncated manifest at manifest length)") 	}
- force LF as EOL as the code expects it.   however it sounds like a bug in the implementation phar.c:720 	if (4 != php_stream_read(fp, buffer, 4)) { 		MAPPHAR_ALLOC_FAIL("internal corruption of phar \"%s\" (truncated manifest at manifest length)") 	}
Add zbacktrace_ex to .gdbinit which will print extra argument info than zbacktrace Implement FR #60448
Add zbacktrace_ex to .gdbinit which will print extra argument info than zbacktrace Implement FR #60448
Coding standard
Coding standard
Make tests similar to the ones in 5.4 and trunk.
- Added a test case for #53437.
- Added a test case for #53437.
- Added a test case for #53437.
- Cosmetics for test case for #48678.
- Cosmetics for test case for #48678.
- Cosmetics for test case for #48678.
This changes adds the --EXTENSION-- section to .phpt files as described in http://marc.info/?t=132248616300007&r=1&w=2.
This changes adds the --EXTENSION-- section to .phpt files as described in http://marc.info/?t=132248616300007&r=1&w=2.
This changes adds the --EXTENSION-- section to .phpt files as described in http://marc.info/?t=132248616300007&r=1&w=2.
We should free the memory of any curl_slist returned by curl_easy_getinfo
remove irrelevant codes in test
remove irrelevant codes in test
Add xfaild test for a secluded issue
Add xfaild test for a secluded issue
Added myself as curl maintainer
Added myself as curl maintainer
Added myself as curl maintainer
add CURLOPT_WILDCARDMATCH and CURLOPT_FNMATCH_FUNCTION
Add the curl handle to the progress callback function
The progress handle don't need to be allocated unless curl_setopt with CURLOPT_PROGRESSFUNCTION is called
useless variable
Update curl MINFO
Test curl_getinfo() function with CURLINFO_EFFECTIVE_URL parameter
Clean curl_getinfo and add new constants from newer libcurl versions
Expose zend_signal_handler_unblock() to DSO extensions to allow usage of HANDLE_UNBLOCK_INTERRUPTIONS macro
Expose zend_signal_handler_unblock() to DSO extensions to allow usage of HANDLE_UNBLOCK_INTERRUPTIONS macro
Cleans up test file
Cleans up test file
Cleans up test file
Clean / Improve the curl extension # NEWS file will come soon
- Escape [ ] chars in the configure message   Patch by: Daniel Convissor
- Escape [ ] chars in the configure message   Patch by: Daniel Convissor
- Replace possible esc char to <esc> in the XML output
- Replace possible esc char to <esc> in the XML output
- Replace possible esc char to <esc> in the XML output
- Added tests for bug #60350   patch by: php@mickweiss.com
- Added tests for bug #60350   patch by: php@mickweiss.com
Don't write more data than the protocol can grok or the server will be confused. This comes without a test because the server needs to be a non-community one with closed source PAM plugin loaded.
Don't write more data than the protocol can grok or the server will be confused. This comes without a test because the server needs to be a non-community one with closed source PAM plugin loaded.
Move entries that occurred after 5.4.0RC2 was branched (thanks salathe)
Miscellaneous: move misplaced entry; fix typos; note more precise OCI8 DLL dependency; remove session.entropy_file setting which was only in PHP_5_3 php.ini-development
Miscellaneous: move misplaced entry; fix typos; note more precise OCI8 DLL dependency; remove session.entropy_file setting which was only in PHP_5_3 php.ini-development
Miscellaneous: move misplaced entry; fix typos; note more precise OCI8 DLL dependency; remove session.entropy_file setting which was only in PHP_5_3 php.ini-development
Added implicit type casting to allow reusage of macros in C++ extensions (Yoram)
Added implicit type casting to allow reusage of macros in C++ extensions (Yoram)
- Added JUnit output format option   patch by: Ferenc Kovacs (tyrael at php.net)
- Added JUnit output format option   patch by: Ferenc Kovacs (tyrael at php.net)
- Added JUnit output format option   patch by: Ferenc Kovacs (tyrael at php.net)
adding some tests for string offsets
adding some tests for string offsets
adding some tests for string offsets
- Small ajustments to some multicast options.
- Small ajustments to some multicast options.
- Clean up
- Clean up
- Clean up
- FR #60390
- implement FR #60390, SERVER_PORT missing
- implement FR #60390, SERVER_PORT missing
- Force setting for tests.
- Force setting for tests.
- Force setting for tests.
warning: suggest parentheses around && within ||
add pgsql new functions
add pg_escape_identifier/pg_escape_literal
- Updated UPGRADING, protos and attribution in ext/intl/idn/idn.c
- Updated UPGRADING, protos and attribution in ext/intl/idn/idn.c
- Support for UTS #46.
- Support for UTS #46.
- Back to -dev
- PHP 5.3.9RC2
- add crt warning ini
- add crt warning ini
- add crt warning ini
Revert commit r319729 until I have a clean version for non-ZTS
- merge crt warning change (r216594) and rename the ini to windows.show_crt_warning
- merge crt warning change (r216594) and rename the ini to windows.show_crt_warning
- merge crt warning change (r216594) and rename the ini to windows.show_crt_warning
back to dev
5.4.0RC2
Implemented FR #55540, added functions curl_share_init(), curl_share_setopt() and curl_share_close().
Sorted engine changes by severity and added chained string offset description.
Good to fix something, but don't forget to update tests
Good to fix something, but don't forget to update tests
Always good to fix something, but don't forget to update tests
Message can vary depending on server version
Message can vary depending on server version
Message can vary depending on server version
Add new cURL CURLOPT_* options
Skipping with libmysql. If a documentation points to more or less unmaintained wiki contents, I take it as a request to stop testing a feature. Can't tell if I get false positive, hit a bug or not. This is not libmysql testing. Its PHP MySQL API testing.
Skipping with libmysql. If a documentation points to more or less unmaintained wiki contents, I take it as a request to stop testing a feature. Can't tell if I get false positive, hit a bug or not. This is not libmysql testing. Its PHP MySQL API testing.
Skipping with libmysql. If a documentation points to more or less unmaintained wiki contents, I take it as a request to stop testing a feature. Can't tell if I get false positive, hit a bug or not. This is not libmysql testing. Its PHP MySQL API testing.
use the method in all builds. Thus it can be used for detection of state transitioning in every case
use the method in all builds. Thus it can be used for detection of state transitioning in every case
use the method in all builds. Thus it can be used for detection of state transitioning in every case
Revert last commit Keep get_magic_quotes_gpc and get_magic_quotes_runtime as deprecated even if it's not the case in the code
Those functions are not deprecated (r319249 #55371)
export zend_on_timeout handler from ZE
export zend_on_timeout handler from ZE
Comparison between pointer and integer
Comparison between pointer and integer
C++ style comment
C++ style comment
fix is_a reflection
fix is_a reflection
- restore correct window_size
- restore correct window_size
- restore correct window_size
- fix build, ansi c requires constant value, no expresion, even constant var
- fix build, ansi c requires constant value, no expresion, even constant var
- fix build, ansi c requires constant value, no expresion, even constant var
backport the line from trunk and fix uninitialized variables
backport the line from trunk and fix uninitialized variables
- Removed C++ comment style
- Removed C++ comment style
- Removed C++ comment style
fix bug #60164 (Stubs of a specific length break phar_open_from_fp scanning for __HALT_COMPILER)
fix bug #60164 (Stubs of a specific length break phar_open_from_fp scanning for __HALT_COMPILER)
fix bug #60164 (Stubs of a specific length break phar_open_from_fp scanning for __HALT_COMPILER)
fix NEWS
fix NEWS
fix test number
fix test number
fix bug #60150 for 5.3 too
r319456 also fixed the OCI8 part of #55301 (multiple null pointer)
r319456 also fixed the OCI8 part of #55301 (multiple null pointer)
r319456 also fixed the OCI8 part of #55301 (multiple null pointer)
- CS
- CS
ws in NEWS
Added new SoapClient option "keep_alive". FR #60329
Added new SoapClient option "keep_alive". FR #60329
Sync to 5.3 and check additional cases for #55748
Sync to 5.3 and check additional cases for #55748
Sync to 5.3 and check additional cases for #55748
fix typo
fix typo
fixes for bug #55748
fixes for bug #55748
Remove unused variables in libmbfl
Remove unused variables in libmbfl
Don't load php.ini file to test the built-in web server
Don't load php.ini file to test the built-in web server
fix bug #60082 (Crash in ArrayObject() when using recursive references) --Tis line, and those below, will be ignored--
fix bug #60082 (Crash in ArrayObject() when using recursive references) --Tis line, and those below, will be ignored--
fix bug #60082 (Crash in ArrayObject() when using recursive references) --Tis line, and those below, will be ignored--
add callable as reserved word
Reverting r319136
revert my previous change, tests hangs on windows
revert my previous change, tests hangs on windows
improve the test,  let it say about errors
improve the test,  let it say about errors
Had the wrong bug number there
keep code to be compatible with PHP4
keep code to be compatible with PHP4
keep PHP_5_4 in sync with PHP_5_3 branch
keep PHP_5_4 in sync with PHP_5_3 branch
- Added .phar to default authorized extensions
- Added .phar to default authorized extensions
- Added .phar to default authorized extensions
typo
typo
- remove experimental flag on fpm
- remove experimental flag on fpm
- FR #60199 (enhance FPM error log when the primary script can't be open)
- FR #60199 (enhance FPM error log when the primary script can't be open)
- FR #60199 (enhance FPM error log when the primary script can't be open)
Minor NEWS grammar fixes
Minor NEWS grammar fixes
Forgot the bug specific test.
Forgot the bug specific test.
- We can constify in 5.4+
- We can constify in 5.4+
MFH, fix test
#- Added information about NPD bug fix in the OpenSSL extension.
#- Added information about NPD bug fix in the OpenSSL extension.
- Add missing include.
- Add missing include.
- Add missing include.
functor? Where did that come from?
Adjusting error messages
add skipif
add skipif
I can only guess what "dos" is.  Also added missing fullstops for consistency.
- fix bug #60272, typo
- fix bug #60272, typo
revert changes to fix bug #60116.
revert changes to fix bug #60116.
Note the change in ob_start() chunk size behaviour mentioned in doc bug #60243 (Add way to specify output buffering chunk size of 1).
broaden php version wildcard in cli server tests (missed a few)
broaden php version wildcard in cli server tests (missed a few)
broaden php version wildcard in cli server tests
broaden php version wildcard in cli server tests
Typo
Suppress lsof warnings here to avoid FUSE-related warnings in certain environments. This doesn't affect what is being tested.
moved the new changes for RC2.
It is not longer required to update php_version.php in php-bugs/
It is not longer required to update php_version.php in php-bugs/
register the new shell escape constants
MFH: fixed bug #60227 (header() cannot detect the multi-line header with CR(0x0D).)
MFH: fixed bug #60116 (escapeshellcmd() cannot escape the characters which cause shell command injection).
back to dev
5.4.0 RC1
- Make valgrind happy with session_decode_error2.phpt
- Make valgrind happy with session_decode_error2.phpt
- Initialize BG(serialize_lock) to make valgrind happy
- Initialize BG(serialize_lock) to make valgrind happy
no large changes for 5.4 anymore
add is_a change
Add tests for unsupported types
Add tests for unsupported types
Add tests for unsupported types
fix bug #55475 - implement is_a BC solution
fix bug #55475 - implement is_a BC solution
Here too
This really shouldn't fail, but if it does, like on OSX under Valgrind, let's just issue a warning.
bail out if reading HTTP headers failed
bail out if reading HTTP headers failed
bail out if reading HTTP headers failed
fix typo
Improve OCI8 NLS env creation error messages (#58925)
Improve OCI8 NLS env creation error messages (#58925)
Improve OCI8 NLS env creation error messages (#58925)
- Added class member access on instantiation (e.g. (new foo)->bar()) support
- Added class member access on instantiation (e.g. (new foo)->bar()) support
fixed bug #60227: header() cannot detect the multi-line header with CR.
the mandatory __construct() for SPL classes was reverted in r318566
the mandatory __construct() for SPL classes was reverted in r318566
MFH: added japanese encoding to maintain compatibility with PHP 5.3.
added japanese encoding to maintain compatibility with PHP 5.3.
Added test for #60104
Bump OCI8 version to 1.4.7 stable in preparation for PHP 5.3.9
Bump OCI8 version to 1.4.7 stable in preparation for PHP 5.3.9
Bump OCI8 version to 1.4.7 stable in preparation for PHP 5.3.9
Replace custom "stress_test" setting with generic SKIP_SLOW_TESTS
Replace custom "stress_test" setting with generic SKIP_SLOW_TESTS
Replace custom "stress_test" setting with generic SKIP_SLOW_TESTS
Improving test to reflect latest API changes
Improving test to reflect latest API changes
Improving test to reflect latest API changes
Added info to 2 fixed bugs
Redid the fix for #60192 with suggestions by Pierre and Kalle
Redid the fix for #60192 with suggestions by Pierre and Kalle
Redid the fix for #60192 with suggestions by Pierre and Kalle
Back to -dev
- PHP 5.3.9RC1
- Minor NEWS cleanup # 80 columns, indention, entries are sentences ending with a period.
use jmp_addr only when it's initialized
use jmp_addr only when it's initialized
xfail, not fix yet
adding memory check for FreeBSD also, TODO: refactor the free memory check into a function in an include file
adding memory check for FreeBSD also, TODO: refactor the free memory check into a function in an include file
adding memory check for FreeBSD also, TODO: refactor the free memory check into a function in an include file
fix folding, ws and cs
fix folding, ws and cs
initialize variable and fix segfaulting tests
initialize variable and fix segfaulting tests
Add a middleman which can intercept the calls and can reroute them
Add a middleman which can intercept the calls and can reroute them
fix calling user close func when it isn't open
fix calling user close func when it isn't open
- shift a bit of code around - when cloning use the methods of the original object
- shift a bit of code around - when cloning use the methods of the original object
MFH: fixed alias and encoding mapping for emoji logo.
fixed alias and encoding mapping for emoji logo.
fix trace log messages
fix trace log messages
add 3rd parameter to arg info for splfileobject fgetcsv/setcsvcontrol (bug #60201)
add 3rd parameter to arg info for splfileobject fgetcsv/setcsvcontrol (bug #60201)
- Updated to version 2011.14 (2011n)
- Updated to version 2011.14 (2011n)
- Updated to version 2011.14 (2011n)
Prevent possible integer overflow
Prevent possible integer overflow
Prevent possible integer overflow
Update for new Oracle patchset variation
Update for new Oracle patchset variation
Update for new Oracle patchset variation
allocating more than 2GB memory is slow.
allocating more than 2GB memory is slow.
allocating more than 2GB memory is slow.
typo
Added missing consistency check for abstract methods required by one trait and implemented by another.
Added missing consistency check for abstract methods required by one trait and implemented by another.
ignore this test on FreeBSD per #60186
duh
marking ext/spl/tests/bug60082.phpt as slow test
OCI8: improve initialization error message (See bug 60154)
OCI8: improve initialization error message (See bug 60154)
OCI8: improve initialization error message (See bug 60154)
Now really split the method tables and have different methods for the handle and the data object. Add auxiliary functions to work with the new methods. Add possibility to clone a connection object - shadow copy.
Now really split the method tables and have different methods for the handle and the data object. Add auxiliary functions to work with the new methods. Add possibility to clone a connection object - shadow copy.
Split struct MYSQLND in struct MYSQLND and struct MYSQLD_CONN_DATA. A step in the direction of keeping internal data private
Split struct MYSQLND in struct MYSQLND and struct MYSQLD_CONN_DATA. A step in the direction of keeping internal data private
Update tests
Update tests
Test for #60174 (Notice when array in method prototype error)
Test for #60174 (Notice when array in method prototype error)
MFH: fixed alias of encoding.
fixed alias of encoding.
tests for 60169
tests for 60169
added a test script for bug60116 and fixed behabior of ESCAPE_CMD_END.
- Reverted changes that required constructor overrides to invoke the parent   constructor in several SPL classes and applied 5.3 fixes instead.   Related bugs: #54384, #55175 and #55300
- Reverted changes that required constructor overrides to invoke the parent   constructor in several SPL classes and applied 5.3 fixes instead.   Related bugs: #54384, #55175 and #55300
typo
Spaces not TABS here
 - ws
Added test for #60104
Bump internal version id after recent changes
Bump internal version id after recent changes
Move from directly referencing an aggregated structure to using a pointer to a structure. The structure is still aggregated but we add a level of indirection for possible plugins to overwrite the storage
Move from directly referencing an aggregated structure to using a pointer to a structure. The structure is still aggregated but we add a level of indirection for possible plugins to overwrite the storage
oci8 - Increase Oracle error message length for 11.2.0.3+
oci8 - Increase Oracle error message length for 11.2.0.3+
oci8 - Increase Oracle error message length for 11.2.0.3+
Add hooks for __call like functionality and also allow to handle calls that spread over two internal functions. Let's call it a local TX.
Add hooks for __call like functionality and also allow to handle calls that spread over two internal functions. Let's call it a local TX.
force LF, fix test faild on windows
force LF, fix test faild on windows
force LF, fix test faild on windows
- Updated to version 2011.13 (2011m)
- Updated to version 2011.13 (2011m)
- Updated to version 2011.13 (2011m)
remove duplicate, happened after double patching
- fixed bug #60120, proc_open's streams may hang with stdin/out/err when the data exceeds or is equal to 2048 bytes
- fixed bug #60120, proc_open's streams may hang with stdin/out/err when the data exceeds or is equal to 2048 bytes
- fixed bug #60120, proc_open's streams may hang with stdin/out/err when the data exceeds or is equal to 2048 bytes
move plugin specific stuff to one file. create object factory for similar objects
move plugin specific stuff to one file. create object factory for similar objects
- win9x is not supported anymore since 5.3
- win9x is not supported anymore since 5.3
- win9x is not supported anymore since 5.3
A better fix, sorry for previous thoughtlessness commit.
A better fix, sorry for previous thoughtlessness commit.
using %s-dev instead of the exact version number
using %s-dev instead of the exact version number
duh, I didn't wanted to commit that modification
add tests for PATH_INFO update php_cli_server.inc to support no router server
add tests for PATH_INFO update php_cli_server.inc to support no router server
fixed bug #60116 escapeshellcmd() cannot escape the dangerous quotes.
MFH: removed invalid two byte sequenct for utf-8.
removed invalid two byte sequenct for utf-8.
adding SKIP_SLOW_TESTS checks for the slow tests, and additionaly sync the domains used in the ext/standard/tests/network/getmxrr.phpt with the other branches
adding SKIP_SLOW_TESTS checks for the slow tests, and additionaly sync the domains used in the ext/standard/tests/network/getmxrr.phpt with the other branches
adding SKIP_SLOW_TESTS checks for the slow tests, and additionaly sync the domains used in the ext/standard/tests/network/getmxrr.phpt with the other branches
update UPGRADING
typofixes
fix memory leak
fix memory leak
check the available memory on linux and skip if it is not enough
check the available memory on linux and skip if it is not enough
check the available memory on linux and skip if it is not enough
shave off 900M memory from this test
shave off 900M memory from this test
shave off 900M memory from this test
fix test, it was fixed for trunk and 5.4 in r314005
this was somehow missed from r318288
stream_socket_server("unix://..." has a length limit, so it is better to use the tmp dir instead of the current test dir for the socket file. see https://bugs.php.net/bug.php?id=60106
stream_socket_server("unix://..." has a length limit, so it is better to use the tmp dir instead of the current test dir for the socket file. see https://bugs.php.net/bug.php?id=60106
stream_socket_server("unix://..." has a length limit, so it is better to use the tmp dir instead of the current test dir for the socket file. see https://bugs.php.net/bug.php?id=60106
fix the build
add files that weren't committed with the previous commit
shift code around to two new files - mysqlnd_driver.c and mysqlnd_ext_plugin.c (mysqlnd extension plugin)
shift code around to two new files - mysqlnd_driver.c and mysqlnd_ext_plugin.c (mysqlnd extension plugin)
Changed silent conversion of array to string to produce a notice. (Patrick)
Changed silent conversion of array to string to produce a notice. (Patrick)
Add SERVER_PROTOCOL variable to $_SERVER.  Patch by kuzuha.  Thanks.
Add SERVER_PROTOCOL variable to $_SERVER.  Patch by kuzuha.  Thanks.
there is a length limit on the shebang line, ignore the tests for >= 127
there is a length limit on the shebang line, ignore the tests for >= 127
there is a length limit on the shebang line, ignore the tests for >= 127
Updating news with commit r308410.
Update UPGRADING # more to come soon
back to dev
5.4.0beta2
api_ext to reverse_api
api_ext to reverse_api
Test for #60082
Tests for the DST RFC.
Tests for the DST RFC.
Tests for the DST RFC.
Improved ternary operator performance when returning arrays
Improved ternary operator performance when returning arrays
fixed maximum byte length of utf8mb4.
fixed maximum byte length of utf8mb4.
move change_user closer to connect
MFH: fixed byte length of utf-8.
fixed byte length of utf-8.
revert change, doesn't work
revert change, doesn't work
Bug #55754 - Only variables should be passed by reference for ZEND_SEND_PREFER_REF params
Bug #55754 - Only variables should be passed by reference for ZEND_SEND_PREFER_REF params
fix potential integer overflow
fix potential integer overflow
fix openbasedir in test
fix openbasedir in test
updated bundled oniguruma regex library to 5.9.2. fixed bug #42290.
added a missing emoji U+27BF.
added a missing emoji U+27BF.
this should be decided by configure
export this existing function
export this existing function
MYSQLND_NET refactored not to use any direct reference to MYSQLND (the connection) QC will need an ifdef-layer to compile with this
MYSQLND_NET refactored not to use any direct reference to MYSQLND (the connection) QC will need an ifdef-layer to compile with this
MYSQLND_NET refactored not to use any direct reference to MYSQLND (the connection) QC will need an ifdef-layer to compile with this
last stat fix
last stat fix
fix test after stat change
fix test after stat change
fix another test after stat change
fix another test after stat change
fix test
fix test
fix test
fix test
fix test
fix test
- Updated to version 2011.12 (2011l)
- Updated to version 2011.12 (2011l)
- Updated to version 2011.12 (2011l)
Added the xsl.security_prefs option to 5_4 and trunk and mark it as deprecated for BC-reasons Added tests for ini option and combination of both
Added the xsl.security_prefs option to 5_4 and trunk and mark it as deprecated for BC-reasons Added tests for ini option and combination of both
Added the xsl.security_prefs option to 5_4 and trunk and mark it as deprecated for BC-reasons Added tests for ini option and combination of both
- ensure request_terminate_timeout >= request_slowlog_timeout
- ensure request_terminate_timeout >= request_slowlog_timeout
- ensure request_terminate_timeout >= request_slowlog_timeout
- fix r317922 (missing PHP_ADD_BUILD_DIR(sapi/fpm/fpm/events) in config.m4)
- fix r317922 (missing PHP_ADD_BUILD_DIR(sapi/fpm/fpm/events) in config.m4)
Use ZEND_ constants instead of plain strings for names of magic methods. # No functional changes.
Use ZEND_ constants instead of plain strings for names of magic methods. # No functional changes.
- Implemented FR #52569 (Add the "ondemand" process-manager to allow zero children)
- Implemented FR #52569 (Add the "ondemand" process-manager to allow zero children)
- Implemented FR #52569 (Add the "ondemand" process-manager to allow zero children)
- fix r317913
- fix r317913
- fix r317913
null the value before usage
null the value before usage
null the value before usage
ws
- Backported from 5.4 branch (Dropped restriction of not setting the same value multiple times, the last one holds).
- Backported from 5.4 branch:   * enhanced log messages   * code cosmetic
- Backported from 5.4 branch (order fpm configuration items the same way in php-fpm.conf.in, fpm_conf.h and fpm_conf.c)
- Backported from 5.4 branch (don't write directly to stderr, use the internal logger instead (zlog))
remove unused variable
- backparted from 5.4 branch (remove is_fastcgi because FPM is always fastcgi)
- Backported FR #55166 from 5.4 branch (Added process.max to control the number of process FPM can fork)
- Backported FR #55181 from 5.4 branch (Enhance security by limiting access to user defined extensions)
- Backported FR #54098 from 5.4 branch (Lowered process manager default value)
- Backported FR #52052 from 5.4 branch (Added partial syslog support)
fix ws
- commit r312812 again (dropped in r312913):     Implemented FR #54577 (Enhanced status page with full status and details     about each processes. Also provide a web page (status.html) for     real-time FPM status.
- fix bug #55870, PDO ignores all SSL parameters when used with mysql native driver
Remove unecessary codes
Remove unecessary codes
Add test case
Add test case
Add test case
try not to crash when closing persistent sockets, because EG(persistent_list) is cleaned before the extensions' MSHUTDOWNs are called.
try not to crash when closing persistent sockets, because EG(persistent_list) is cleaned before the extensions' MSHUTDOWNs are called.
Added test for Bug 54446 Init a variable to a default value to avoid issues
Added xsl.security_prefs ini option to define forbidden operations within XSLT stylesheets, default is not to enable write operations. This option won't be in 5.4, since there's a new method. Bug #54446
- Revert r313616 (When we have a blocking SSL socket, respect the timeout   option, scottmac)
- Revert r313616 (When we have a blocking SSL socket, respect the timeout   option, scottmac)
typofix (procgress to progress)
typofix (procgress to progress)
- Improve void arg check - Removed unused variable - Added check for empty tag in enchant_broker_request_dict() (to avoid assert warning)
- Improve void arg check - Removed unused variable - Added check for empty tag in enchant_broker_request_dict() (to avoid assert warning)
A better fix for #55817 (thanks to bjori)
A better fix for #55817 (thanks to bjori)
A better fix for #55817 (thanks to bjori)
Use the default stream context for FilesystemIterator, GlobIterator and (Recursive)DirectoryIterator
Use the default stream context for FilesystemIterator, GlobIterator and (Recursive)DirectoryIterator
- Oops missed return. Also improved the readability of a test.
- Oops missed return. Also improved the readability of a test.
- Oops missed return. Also improved the readability of a test.
- Added tests and NEWS for r306475; see bug #55797. - Removed now redundant previous overflow check, which relied on   undefined behavior (wraparound) and was ignored in optimized builds.
- Added tests and NEWS for r306475; see bug #55797. - Removed now redundant previous overflow check, which relied on   undefined behavior (wraparound) and was ignored in optimized builds.
- Added tests and NEWS for r306475; see bug #55797. - Removed now redundant previous overflow check, which relied on   undefined behavior (wraparound) and was ignored in optimized builds.
document fix for #55475 in NEWS
fix bug #55768 (PDO_OCI can't resume Oracle session after it's been killed)
fix bug #55768 (PDO_OCI can't resume Oracle session after it's been killed)
fix bug #55768 (PDO_OCI can't resume Oracle session after it's been killed)
remove paths from is_a and is_subclass tests
split the ext/calendar/tests/bug53574.phpt into two test, as we expect different result on 32 and 64 bit
split the ext/calendar/tests/bug53574.phpt into two test, as we expect different result on 32 and 64 bit
split the ext/calendar/tests/bug53574.phpt into two test, as we expect different result on 32 and 64 bit
fix is_a errror test so they test correctly against new behaviour of is_a and is_subclass_of
move autoloaded is_a test to where all the other is_a tests are
fix #49599, the eol-style is important here, as this is a regression test for #36459
fix #49599, the eol-style is important here, as this is a regression test for #36459
fix #49599, the eol-style is important here, as this is a regression test for #36459
MFH to fix PHP_5_3 diffs shown on http://qa.php.net/reports/?version=5.3.9-dev
Use TZ similar to easter_date.phpt else gcov et al give a diff for unixtojd(1000000000)
Use TZ similar to easter_date.phpt else gcov et al give a diff for unixtojd(1000000000)
Use TZ similar to easter_date.phpt else gcov et al give a diff for unixtojd(1000000000)
- Updated to version 2011.11 (2011k)
- Updated to version 2011.11 (2011k)
- Updated to version 2011.11 (2011k)
- update news
- update news
- be sure to check if the var ha not been removed between the two calls
- be sure to check if the var ha not been removed between the two calls
- be sure to check if the var ha not been removed between the two calls
update proto
update proto
added test script for mb_ereg_replace_callback().
fixed seg faults for mb_ereg_replace_callback.
revert the previous patch.
MFH: added mb_ereg_replace_callback().
added mb_ereg_replace_callback().
MFH: fixed #40685: removed '&' in mb_decode_numericentity().
MFH: fixed #40685: removed '&' in mb_decode_numericentity().
added tests for #40685.
fixed #40685: removed '&' in mb_decode_numericentity().
clean up is_a test title
clean up is_a test, so that it covers more use cases - negative and positive testing
add is_a and is_subclass_of test with autoloader feature Its a bit of an overkill, but should ensure breaks are easier to spot in future.
unused var
unused var
Add a test and declare the local vars locally
Add a test and declare the local vars locally
Improve the warning message of incompatible arguments. (#55719) And fix tests related.
Improve the warning message of incompatible arguments. (#55719) And fix tests related.
MFH: fixed a bug in convertion table and added test script for emoji.
added test script for pictogram.
fixed a bug in conversion table.
Re-committing Alan's is_a revert/fix for bug #55475 Dmitry had done so earlier, but reverted pending discussion. It is completely clear that this should never have been changed in the 5.3 branch in the first place giving the number of things that broke because of it.
Add tests
Add tests
Update NEWS
the TZ environment variable also needed to be set here, didn't dug up why date.timezone isn't sufficient
the TZ environment variable also needed to be set here, didn't dug up why date.timezone isn't sufficient
the TZ environment variable also needed to be set here, didn't dug up why date.timezone isn't sufficient
skip the interbase tests if cannot connect to the server
skip the interbase tests if cannot connect to the server
skip the interbase tests if cannot connect to the server
the julian date for timestamp 1000000000 is 2452161.5740741, which is rounded to 2452162
the julian date for timestamp 1000000000 is 2452161.5740741, which is rounded to 2452162
the julian date for timestamp 1000000000 is 2452161.5740741, which is rounded to 2452162
it seems that easter_date doesn't use the date.timezone but the TZ environment variable, so it passing the return value of easter_date() to date() which uses the date.timezone will create wrong result.
it seems that easter_date doesn't use the date.timezone but the TZ environment variable, so it passing the return value of easter_date() to date() which uses the date.timezone will create wrong result.
it seems that easter_date doesn't use the date.timezone but the TZ environment variable, so it passing the return value of easter_date() to date() which uses the date.timezone will create wrong result.
Add tests for bug #55755
Add tests for bug #55755
Removed unreachable code (stream == NULL check is done already)
Removed unreachable code (stream == NULL check is done already)
- Use the proper variable here.
- Use the proper variable here.
change test, and added a test for post file
change test, and added a test for post file
Remove double checking, and use MAXPATHLEN instead of a fixed length
Remove double checking, and use MAXPATHLEN instead of a fixed length
Change to a more appropriate name
Change to a more appropriate name
Refactored and speeded up php_cli_server tests, also get rid of test hanging on ubuntu: 1) Prepended starting the server with "exec" so proc_terminate can correctly close it (see also this note http://www.php.net/manual/en/function.proc-get-status.php#93382 for details) 2) Moved putting down the server to the shutdown function to make it independent from tests (fatal) errors 3) Moved php cli executable into the function to make tests more readable 4) changed sleep(1) to usleep(50000) (50 ms) to make tests faster - this needs more testing and if timeout is too small should be increased
Refactored and speeded up php_cli_server tests, also get rid of test hanging on ubuntu: 1) Prepended starting the server with "exec" so proc_terminate can correctly close it (see also this note http://www.php.net/manual/en/function.proc-get-status.php#93382 for details) 2) Moved putting down the server to the shutdown function to make it independent from tests (fatal) errors 3) Moved php cli executable into the function to make tests more readable 4) changed sleep(1) to usleep(50000) (50 ms) to make tests faster - this needs more testing and if timeout is too small should be increased
fix INI section
fix INI section
update NEWS
Add tests for built-in webserver
Add tests for built-in webserver
fix r316992
fix r316992
- fix build (macros mess)
- fix build (macros mess)
- fix TS build
- fix TS build
Update NEWS
Update NEWS
Update NEWS
Test portability fix
Test portability fix
Test portability fix
- add -win32 versions and skipif
- add -win32 versions and skipif
bfn
next version header
Update libmagic.patch (patch reversed base on -r296679)
Update libmagic.patch (patch reversed base on -r296679)
Reverted the fix for #55475 (is_a() triggers autoloader) before the common decision
- force LF
- force LF
- force LF
back to dev
5.4.0beta
update NEWS
Forget commit to trunk
fix default session handler error message
fix default session handler error message
- ext/openssl/tests/bug36732.phpt more portable.
- ext/openssl/tests/bug36732.phpt more portable.
- ext/openssl/tests/bug36732.phpt more portable.
- fix text (encoding was broken with the previous commit)
Add test for bug #55688
Add test for bug #55688
fix session oo tests for windows
fix session oo tests for windows
fix zts break in r316688
fix zts break in r316688
Implement object-oriented session handlers (https://wiki.php.net/rfc/session-oo)
Implement object-oriented session handlers (https://wiki.php.net/rfc/session-oo)
I don't see why would be this a win only test. it works for me on linux, checked the history, find no explanation.
I don't see why would be this a win only test. it works for me on linux, checked the history, find no explanation.
I don't see why would be this a win only test. it works for me on linux, checked the history, find no explanation.
Separate test for %a is no longer needed.
Separate test for %a is no longer needed.
fixing the tests, added the error_log= to the --INI-- so it should also pass for Stas
fixing the tests, added the error_log= to the --INI-- so it should also pass for Stas
Improve parameter handling cod
Improve parameter handling cod
- test passes now (and VC6 is not supported anymore)
- test passes now (and VC6 is not supported anymore)
Revert update, since this bug is not in a official release of 5.4
- Document changes in upgrading.
And some formatting
- tabs to spaces
- Removed support for putenv("TZ=..") for setting the timezone. - Removed the timezone guessing algorithm in case the timezone isn't set with   date.timezone or date_default_timezone_set(). Instead of a guessed timezone,   "UTC" is now used instead.
- Removed support for putenv("TZ=..") for setting the timezone. - Removed the timezone guessing algorithm in case the timezone isn't set with   date.timezone or date_default_timezone_set(). Instead of a guessed timezone,   "UTC" is now used instead.
- skip on win, runtime TZ via putenv is not supported with ext/date
- skip on win, runtime TZ via putenv is not supported with ext/date
- skip on win, runtime TZ via putenv is not supported with ext/date
- skip on win, runtime TZ via putenv is not supported with ext/date
- skip on win, runtime TZ via putenv is not supported with ext/date
- skip on win, runtime TZ via putenv is not supported with ext/date
 - TZ auto detection varies, not always UTC
 - TZ auto detection varies, not always UTC
 - TZ auto detection varies, not always UTC
 - TZ auto detection varies, not always UTC
 - TZ auto detection varies, not always UTC
 - TZ auto detection varies, not always UTC
- fix test
- skip on win, runtime TZ via putenv is not supported with ext/date
- skip on win, runtime TZ via putenv is not supported with ext/date
- skip on win, runtime TZ via putenv is not supported with ext/date
MFH, fix test
update news
update news
MFH, fix test
MFH, fix test
- fix test on win, putenv is not supported for TZ and ext/date
- fix test on win, putenv is not supported for TZ and ext/date
- fix test on win, putenv is not supported for TZ and ext/date
- news for the crt warning
- do not display the crt warnings anymore by default. It is enough to simply fail from a user land pov as it is the case on posix platforms
- do not display the crt warnings anymore by default. It is enough to simply fail from a user land pov as it is the case on posix platforms
sort changelog according to bug number
- skip on win, strftime uses system TZ
- skip on win, strftime uses system TZ
- skip on win, strftime uses system TZ
- Test for bug #55646.
- Test for bug #55646.
MFB crypt fix
Test for non-string replacement, bug#54304
Test for non-string replacement, bug#54304
Test for non-string replacement, bug#54304
- Updated to version 2011.10 (2011j)
- Updated to version 2011.10 (2011j)
- Updated to version 2011.10 (2011j)
This should please gcov.php.net which hits error 1044 instead of 1049.
This should please gcov.php.net which hits error 1044 instead of 1049.
This should please gcov.php.net which hits error 1044 instead of 1049.
Reverted changes in connect.inc based on Ulf's feedback - Moved the ini_set() entries into a separate script 'setupdefault.inc' - Let mysql_affected_rows and mysql_insert_id test cases use the newly created script
Reverted changes in connect.inc based on Ulf's feedback - Moved the ini_set() entries into a separate script 'setupdefault.inc' - Let mysql_affected_rows and mysql_insert_id test cases use the newly created script
Reverted changes in connect.inc based on Ulf's feedback - Moved the ini_set() entries into a separate script 'setupdefault.inc' - Let mysql_affected_rows and mysql_insert_id test cases use the newly created script
fix gcov Warning: ibase_drop_db(): lock time-out on wait transaction object
fix gcov Warning: ibase_drop_db(): lock time-out on wait transaction object
fix warning Warning: ibase_drop_db(): lock time-out on wait transaction object
Minor issue. Seems to fail the same way on various PHP + MySQL combinations. Setting XFAIL until we fix it.
Minor issue. Seems to fail the same way on various PHP + MySQL combinations. Setting XFAIL until we fix it.
Minor issue. Seems to fail the same way on various PHP + MySQL combinations. Setting XFAIL until we fix it.
update news
update news
Allow replacement to be any scalar value
Allow replacement to be any scalar value
Allow replacement to be any scalar value
MFH: fixed optional argument.
fixed optional argument.
Hits libmysql/MySQL bug, works with mysqlnd
Hits libmysql/MySQL bug, works with mysqlnd
Hits libmysql/MySQL bug, works with mysqlnd
- revert incorrect fix introduced in r316528
- revert incorrect fix introduced in r316528
- revert incorrect fix introduced in r316528
Added test for XSL bug 54446
Added test for XSL bug 54446
Those will fail with MySQL 5.5. Running them because they have unveiled a crash, which has been fixed already. Setting to XFAIL, need to be decide if and/or how the functionality shall be supported.
Those will fail with MySQL 5.5. Running them because they have unveiled a crash, which has been fixed already. Setting to XFAIL, need to be decide if and/or how the functionality shall be supported.
Those will fail with MySQL 5.5. Running them because they have unveiled a crash, which has been fixed already. Setting to XFAIL, need to be decide if and/or how the functionality shall be supported.
Ensure we are working with strings here
Ensure we are working with strings here
Ensure we are working with strings here
Sync line ending with 5_4
These are all in 5_4
fix test 006 for firebird driver
fixes bug #55659 adn 006 test for firebird driver
fixes #55659 also the 006 firebird test
- unused var
- unused var
curl news
- force LF
- force LF
- force LF
extension is not experimental anymore see the status http://www.gn0s1s.nl/?p=108
fix test 003 from gconv test for firebird extension
MFH: fixed test failure on win32.
MFH: fixed test failure on win32.
MFH: fixed test failure on win32.
fixed test failure on win32.
MFH: fixed test case failures.
fixed test case failures.
MFH: fixed test case failures.
fixed test case failures.
revert previous commit.
revert previous commit.
revert previous commit.
MFH: removed test script which depends on the removed register_globals.
removed test script which depends on the removed register_globals.
revert bad test change
revert bad test change
Bug #55653
Bug #55653
Bug #55653
Being smart and cleanup/rename/modify tests seconds before committing isn't very smart.
Being smart and cleanup/rename/modify tests seconds before committing isn't very smart.
Being smart and cleanup/rename/modify tests seconds before committing isn't very smart.
- force LF
- force LF
- force LF
- nuke unused var
- nuke unused var
- improve r316420, function must return a value
- improve r316420, function must return a value
Mention recent SPL changes on spl_directory.c and tests
- improve r316420 (SplFileObject cannot and should not accept directories)
- improve r316420 (SplFileObject cannot and should not accept directories)
MFH: adapt check for __construct bypass
- improve r316420 (SplFileObject cannot and should not accept directories)
- improve r316420 (SplFileObject cannot and should not accept directories)
Update SKIPIFs for test portability
Update SKIPIFs for test portability
Update SKIPIFs for test portability
- Updated to-do.
- force LF
- force LF
- force LF
- force LF
SplFileObject does not accept directories. It did not check for that and blindly opened the directory, which works on linux but fails on windows. Now SplFileObject uses a stat() call to make sure it isn't a directory, if it is, it fails with an exception. Tests have been changed accordingly.
SplFileObject does not accept directories. It did not check for that and blindly opened the directory, which works on linux but fails on windows. Now SplFileObject uses a stat() call to make sure it isn't a directory, if it is, it fails with an exception. Tests have been changed accordingly.
2nd arguments is necessary in mb_parse_str because register_globals was removed in PHP 5.4.
2nd arguments is necessary in mb_parse_str because register_globals was removed in PHP 5.4.
- fix test, again...
- fix test, again...
skip these tests if can't connect to mysql
skip these tests if can't connect to mysql
skip these tests if can't connect to mysql
- fix test
- fix test
- force LF and fix... and blame me for not reading the code correctly, zlib tests pass now, linux/bsd/win 100%
- force LF and fix... and blame me for not reading the code correctly, zlib tests pass now, linux/bsd/win 100%
- force LF and fix... and blame me for not reading the code correctly, zlib tests pass now, linux/bsd/win 100%
- force LF
- force LF
- force LF
- skip if no hash
- skip if no hash
- skip if no hash
- fix build when no zend signal support
- fix build when no zend signal support
Use unique object names to reduce potential clashes when testing in parallel
Use unique object names to reduce potential clashes when testing in parallel
Use unique object names to reduce potential clashes when testing in parallel
This test was added to verify that bug 39322 was fixed, which the test does test for and this works. However, it consistently failed because it relied on a SIGHUP not terminating a sh -c /usr/bin/nohup sleep 50 process which doesn't work because the SIGHUP goes to the sh process not the nohup'ed sleep process. So, I have sped up the test and removed the nohup and instead of trying to SIGHUP I am just doing the equivalent of a kill 0 on it to verify that the resource sticks around.
This test was added to verify that bug 39322 was fixed, which the test does test for and this works. However, it consistently failed because it relied on a SIGHUP not terminating a sh -c /usr/bin/nohup sleep 50 process which doesn't work because the SIGHUP goes to the sh process not the nohup'ed sleep process. So, I have sped up the test and removed the nohup and instead of trying to SIGHUP I am just doing the equivalent of a kill 0 on it to verify that the resource sticks around.
This test was added to verify that bug 39322 was fixed, which the test does test for and this works. However, it consistently failed because it relied on a SIGHUP not terminating a sh -c /usr/bin/nohup sleep 50 process which doesn't work because the SIGHUP goes to the sh process not the nohup'ed sleep process. So, I have sped up the test and removed the nohup and instead of trying to SIGHUP I am just doing the equivalent of a kill 0 on it to verify that the resource sticks around.
Remove entries already in 5.3
MFH: fixed invalid utf-8 check.
fixed invalid utf-8 check.
Revert r316345 which fixes all the tests again
Revert r316345 which fixes all the tests again
- Use myslqnd by default when MySQL extensions are activated but no path given
- Use myslqnd by default when MySQL extensions are activated but no path given
- reject paths with trainling spaces using the very good new zend arg
- reject paths with trainling spaces using the very good new zend arg
ignore another file generated by PHP_SETUP_ICONV php_iconv_aliased_libiconv.h
wrap lines, use real names, and FR not Req
Add skip message
Add skip message
Add skip message
- skip on win, diff TZ format
- skip on win, diff TZ format
- skip on win, diff TZ format
Remove bogus skipif and make adjust the tests
Remove bogus skipif and make adjust the tests
The error message is different when built with zts
The error message is different when built with zts
Update skipif
Update skipif
Update skipif
Sync tests between branches and fix the getcontent test
Sync tests between branches and fix the getcontent test
Sync tests between branches and fix the getcontent test
Update skipif message
Update skipif message
Update skipif message
- force LF (svn prop and config)
- force LF (svn prop and config)
- force LF (svn prop and config)
- force LF (svn prop and config)
- force LF
- force LF
- force LF
- force LF
- force LF
- force LF
- fix test for OS where dir sep is \
- fix test for OS where dir sep is \
- fix test for OS where dir sep is \
- fix test for OS where dir sep is \
- fix test for OS where dir sep is \
- fix test for OS where dir sep is \
- force LF
- force LF
- force LF
- force LF
- force LF
- force LF
- add skipif for dom
- add skipif for dom
- add skipif for dom
- force LF
- force LF
- force LF
- force LF
- force LF
- force LF
Commit Gustavo's closure rebinding patch as desided by vote
Commit Gustavo's closure rebinding patch as desided by vote
update news
update news
fix skipif description
fix skipif description
fix skipif description
fixed typo
fixed typo
improve open_basedir handling
improve open_basedir handling
- fix #55622, mem corruption on large input
- fix #55622, mem corruption on large input
- fix #55622, mem corruption on large input
- useless skipif
More parenthesis, credits to Nikita Popov
More parenthesis, credits to Nikita Popov
More parenthesis, credits to Nikita Popov
- useless skipif
- useless skipif
- useless skipif
- fix skipif
- fix skipif
- fix skipif
Add a constant, READLINE_LIB, to be able to differenciate which lib is being used
Add a constant, READLINE_LIB, to be able to differenciate which lib is being used
add query information to the trace log
add query information to the trace log
Prevent Notice
Prevent Notice
Prevent Notice
Reverting to proper --INI-- section usage. Improve SKIPIF to skip test if open_basedir setting is too restrictive during test run for whatever reason.
Reverting to proper --INI-- section usage. Improve SKIPIF to skip test if open_basedir setting is too restrictive during test run for whatever reason.
Reverting to proper --INI-- section usage. Improve SKIPIF to skip test if open_basedir setting is too restrictive during test run for whatever reason.
- use only zlib function and reported the failure with base64 in #55620
- use only zlib function and reported the failure with base64 in #55620
- use only zlib function and reported the failure with base64 in #55620
- force LF
- force LF
- force LF
Mention which library php is using
Mention which library php is using
- use a more portable name for the filename
- use a more portable name for the filename
move it to right place
move it to right place
move it to right place
Add skipif
Add skipif
Add skipif
- missing --SKIPIF--
- missing --SKIPIF--
- move it to the right place
- move it to the right place
- move it to the right place
Added skipif
- fix skipif msg
- fix skipif msg
- fix skipif msg
Added skipif
Added skipif
Added skipif
Added skipif
add skipif
add skipif
add skipif
- add skipif
- add skipif
- add skipif
- fix test
- fix test
- fix test
- fix test
- fix test
- skip on win
- skip on win
- skip on win
- add skipif
- add skipif
- add skipif
- add skipif
- add skipif
- add skipif
- use something we know it exists...
- use something we know it exists...
- use something we know it exists...
- skip on win, name.. name. are not valid names
- skip on win, name.. name. are not valid names
- skip on win, name.. name. are not valid names
- add skipif
- add skipif
- add skipif
- don't test dir sep
- don't test dir sep
- force LF
- force LF
- force LF
- force LF
- force LF
- force LF
- add skipif
- add skipif
- add skipif
- add skipif
- add skipif
- add skipif
- add skipif
- add skipif
- add skipif
- add skipif
- add skipif
- add skipif
- add skipif
- add skipif
- add skipif
- add skipif
- add skipif
- WS
- WS
- WS
unused variables
unused variables
allow user streams to override ch* on windows too
allow user streams to override ch* on windows too
fix redirect when test run from different places
fix redirect when test run from different places
fix test
fix test
use DBUG_ON flag for checking debug # Some libmysql builds don't define DBUG_OFF and non-debug builds are more frequent
use DBUG_ON flag for checking debug # Some libmysql builds don't define DBUG_OFF and non-debug builds are more frequent
this tests looks mysqlnd only
this tests looks mysqlnd only
report fix
- add skipif
- add skipif
- add skipif
No more test failure for libmysql, http://news.php.net/php.internals/55210
No more test failure for libmysql, http://news.php.net/php.internals/55210
No more test failure for libmysql, http://news.php.net/php.internals/55210
missing from previous commit for #55582
Reduced timeout in this test to 1ms, no need to wait further.
Reduced timeout in this test to 1ms, no need to wait further.
Reduced timeout in this test to 1ms, no need to wait further.
- add skipif
- add skipif
- add skipif
- add skipif
- add skipif
- add skipif
- use the same test on win
- use the same test on win
- close the stream before removing the file (win and other system may lock it) and use test dir for tmp data
- close the stream before removing the file (win and other system may lock it) and use test dir for tmp data
- close the stream before removing the file (win and other system may lock it) and use test dir for tmp data
- sync&fix test with 5.3
- sync&fix test with 5.3
- fix test, slash or back slash can be present
- fix test, slash or back slash can be present
- stupid me.
- stupid me.
- stupid me.
- disable on win
- disable on win
- disable on win
- disable on win
- disable on win
- disable on win
- other hostname can be defined or returned first
- other hostname can be defined or returned first
- other hostname can be defined or returned first
typo
typo
typo
- force LF
- force LF
- force LF
- not used anymore, one version to rule them all
- not used anymore, one version to rule them all
- not used anymore, one version to rule them all
Make the test faster, what was done: 1) replaced multiple htmlentities calls with one call to get_html_translation table since they share the same code internally 2) reduced the upper range of the "for" loop to 0x2710 (10000), according to http://www.w3.org/TR/html4/sgml/entities.html it's enough 3) placed additional check to make sure all entities from get_html_translation_table were checked in the test
Make the test faster, what was done: 1) replaced multiple htmlentities calls with one call to get_html_translation table since they share the same code internally 2) reduced the upper range of the "for" loop to 0x2710 (10000), according to http://www.w3.org/TR/html4/sgml/entities.html it's enough 3) placed additional check to make sure all entities from get_html_translation_table were checked in the test
Make the test faster, what was done: 1) replaced multiple htmlentities calls with one call to get_html_translation table since they share the same code internally 2) reduced the upper range of the "for" loop to 0x2710 (10000), according to http://www.w3.org/TR/html4/sgml/entities.html it's enough 3) placed additional check to make sure all entities from get_html_translation_table were checked in the test
- force LF and enable it on windows now
- force LF and enable it on windows now
- force LF and enable it on windows now
- force LF
- force LF
- force LF
- update test to the zeng arg path argument
- update test to the zeng arg path argument
- fix test
- fix test
Interesting typo...
Not all submodules have MINIT, but they have MINFO and need to be registered (cought by tyrael@)
Revert r316043, the tests are different on purpose
Revert r316043, the tests are different on purpose
fix tests
fix tests
fix tests
- add skipif
- add skipif
- add skipif
- force LF eol
- force LF eol
- force LF eol
- skip on win, TZ cannot be set using putenv at runtime
- skip on win, TZ cannot be set using putenv at runtime
- skip on win, TZ cannot be set using putenv at runtime
- skip on win, TZs differ with strftime
- skip on win, TZs differ with strftime
- skip on win, TZs differ with strftime
- unify warning between win and unix and enable test
- unify warning between win and unix and enable test
- unify warning between win and unix and enable test
- fix test on win, does not use putenv to set the TZ but date_default_timezone_set (should be the case on all platforms actually...)
- fix test on win, does not use putenv to set the TZ but date_default_timezone_set (should be the case on all platforms actually...)
- fix test on win, does not use putenv to set the TZ but date_default_timezone_set (should be the case on all platforms actually...)
fix bug 55562 - make substr always return rest of the string if length is too long
fix bug 55562 - make substr always return rest of the string if length is too long
- wrong variable used (ended as non initiazed usage)
- wrong variable used (ended as non initiazed usage)
- wrong variable used (ended as non initiazed usage)
passing an invalid session.upload_progress.freq always generates an additional startup error
passing an invalid session.upload_progress.freq always generates an additional startup error
passing an invalid session.upload_progress.freq always generates an additional startup error
passing an invalid session.upload_progress.freq always generates an additional startup error
Patch to run two more mysql test cases that would usually be skipped.
Patch to run two more mysql test cases that would usually be skipped.
Patch to run two more mysql test cases that would usually be skipped.
These regexes don't fail under the new backtrack limit, so lower it just for the test to check the failure.
fix test
fix test
test fixes
test fixes
Make test work with database other than "test" (merge from 5.4).
gcov test fixes
gcov test fixes
gcov test fixes
pass an absolute path for the php binary to proc_open, without this the test would fail if ran with a relative TEST_DEV_EXECUTABLE
pass an absolute path for the php binary to proc_open, without this the test would fail if ran with a relative TEST_DEV_EXECUTABLE
pass an absolute path for the php binary to proc_open, without this the test would fail if ran with a relative TEST_DEV_EXECUTABLE
Synchronized fixed tests from 5.3 branch.
Synchronized fixed tests from 5.3 branch.
Removed old (< 5.3) version of test and cleaned up the actual version.
Removed old (< 5.3) version of test and cleaned up the actual version.
Removed old (< 5.3) version of test and cleaned up the actual version.
Coverage for bug#54704, of which I think it is bogus, thus no dedicated test.
Coverage for bug#54704, of which I think it is bogus, thus no dedicated test.
Coverage for bug#54704, of which I think it is bogus, thus no dedicated test.
here comes the news
fix message
fix message
fix message
function rename to comply with the schema of other callbacks
function rename to comply with the schema of other callbacks
function rename to comply with the schema of other callbacks
Hopefully, this is an even better way to check for InnoDB support as of MySQL 5.6.1
Hopefully, this is an even better way to check for InnoDB support as of MySQL 5.6.1
Hopefully, this is an even better way to check for InnoDB support as of MySQL 5.6.1
As of MySQL 5.6.1 the server variable have_innodb is no more. Updating InnoDB check...
As of MySQL 5.6.1 the server variable have_innodb is no more. Updating InnoDB check...
As of MySQL 5.6.1 the server variable have_innodb is no more. Updating InnoDB check...
merge from trunk added SNMPException class, enabling ability to throw exceptions when a known SNMP error has occured FR #55542
remove extra white space
added SNMPException class, enabling ability to throw exceptions when a known SNMP error has occured FR #55542
MySQL 5.6 update
MySQL 5.6 update
MySQL 5.6 update
merge from trunk: remove php_snmp_get_ce()
remove php_snmp_get_ce()
- Use our external entity loader only in the context of a PHP request.
- Use our external entity loader only in the context of a PHP request.
revert to the previous good revision, as the new improved parse error syntax only used in version >= 5.4
revert to the previous good revision, as the new improved parse error syntax only used in version >= 5.4
Unmatched %s was still diffing on Linux. Now it matches the whitespace at a minimum
Unmatched %s was still diffing on Linux. Now it matches the whitespace at a minimum
Make test work with database other than "test".
Prevent the magic quotes fatal error causing a diff
Prevent the magic quotes fatal error causing a diff
Check for LOAD DATA support during SKIPIF
Check for LOAD DATA support during SKIPIF
Check for LOAD DATA support during SKIPIF
Can't reproduce the server has gone away messages, Andrey. Please, have a look. I tried MySQL 5.1, 5.5 and 5.6.
Can't reproduce the server has gone away messages, Andrey. Please, have a look. I tried MySQL 5.1, 5.5 and 5.6.
Can't reproduce the server has gone away messages, Andrey. Please, have a look. I tried MySQL 5.1, 5.5 and 5.6.
Improve speed of finding tests (no more CVS, we're on svn now)
Improve speed of finding tests (no more CVS, we're on svn now)
Improve speed of finding tests (no more CVS, we're on svn now)
added a NEWS entry about the change in XSL
- use %s, bad c/p
- use %s, bad c/p
- use %s, bad c/p
Check if MySQL server supports SSL and, if using mysqlnd, check if PHP streams will support SSL
Check if MySQL server supports SSL and, if using mysqlnd, check if PHP streams will support SSL
Check if MySQL server supports SSL and, if using mysqlnd, check if PHP streams will support SSL
Move the XFAILED printout way up the list so we can actually notice the really failing ones
Move the XFAILED printout way up the list so we can actually notice the really failing ones
Move the XFAILED printout way up the list so we can actually notice the really failing ones
- fix test
- fix test
- win and nux work the same way
- win and nux work the same way
- win and nux work the same way
- win and nux work the same way
- force LF eol style as this test depends on it
- force LF eol style as this test depends on it
- force LF eol style as this test depends on it
Simplify mysqlnd debug trace marginally for debugging
Simplify mysqlnd debug trace marginally for debugging
Simplify mysqlnd debug trace marginally for debugging
- consider that bison 2.x is used. updated our ci boxes accordingly (windows too), which were using 1.4
- consider that bison 2.x is used. updated our ci boxes accordingly (windows too), which were using 1.4
- consider that bison 2.x is used. updated our ci boxes accordingly (windows too), which were using 1.4
- consider that bison 2.x is used. updated our ci boxes accordingly (windows too), which were using 1.4
- consider that bison 2.x is used. updated our ci boxes accordingly (windows too), which were using 1.4
- consider that bison 2.x is used. updated our ci boxes accordingly (windows too), which were using 1.4
Hack around http://bugs.mysql.com/62320
Hack around http://bugs.mysql.com/62320
Hack around http://bugs.mysql.com/62320
Seeing thousands of PASS tests flying by is meaningless. Add an option to only print certain result groups.
Seeing thousands of PASS tests flying by is meaningless. Add an option to only print certain result groups.
Seeing thousands of PASS tests flying by is meaningless. Add an option to only print certain result groups.
- force LF eol style as this test depends on it
- force LF eol style as this test depends on it
- force LF eol style as this test depends on it
- Change PDO_oci connection defaults to match Oracle XE defaults, higher chance   to work out of the box
- Change PDO_oci connection defaults to match Oracle XE defaults, higher chance   to work out of the box
- Change PDO_oci connection defaults to match Oracle XE defaults, higher chance   to work out of the box
- error msg may vary (parser)
- error msg may vary (parser)
- error msg may vary (parser)
- Register extensions using mysqlnd (mysql, myslqi, pdo_mysql) with mysqlnd
- Register extensions using mysqlnd (mysql, myslqi, pdo_mysql) with mysqlnd
tune text align
- error msg may vary (parser)
- error msg may vary (parser)
- error msg may vary (parser)
tune text align
- error msg may vary (parser)
- error msg may vary (parser)
- error msg may vary (parser)
- error msg may vary
- error msg may vary
- error msg may vary
- typo
- typo
- typo
test coverage for SNMP::ERRNO_MULTIPLE_SET_QUERIES
test coverage for SNMP::ERRNO_MULTIPLE_SET_QUERIES
- Update PDO_mysql error mapping
- Update PDO_mysql error mapping
- Update PDO_mysql error mapping
- force LF eol style as this test depends on it
- force LF eol style as this test depends on it
- force LF eol style as this test depends on it
- force LF eol style as this test depends on it
- force LF eol style as this test depends on it
- force LF eol style as this test depends on it
- Be less restrictive on the SQL state, some server versions might fool us
- Be less restrictive on the SQL state, some server versions might fool us
- Be less restrictive on the SQL state, some server versions might fool us
Please, whenever changing the mysqli API update the tests. Don't wait for me to catch up.
Please, whenever changing the mysqli API update the tests. Don't wait for me to catch up.
Please, whenever changing the mysqli API update the tests. Don't wait for me to catch up.
New utility function to check for '[1148] The used command is not allowed with this MySQL version' during SKIPIF
New utility function to check for '[1148] The used command is not allowed with this MySQL version' during SKIPIF
New utility function to check for '[1148] The used command is not allowed with this MySQL version' during SKIPIF
MFH: added alias for *-mobile encodings.
added alias for *-mobile encodings.
Check if server supports LOAD DATA LOCAL INFILE to catch [1148] The used command is not allowed with this MySQL version during SKIPIF
Check if server supports LOAD DATA LOCAL INFILE to catch [1148] The used command is not allowed with this MySQL version during SKIPIF
Check if server supports LOAD DATA LOCAL INFILE to catch [1148] The used command is not allowed with this MySQL version during SKIPIF
- force LF eol style as this test depends on it (size)
- force LF eol style as this test depends on it (size)
- force LF eol style as this test depends on it (size)
simplexml->query returns empty array if no nodes were found and false if libxml thinks the xpath-expression was invalid. Behaves now the same like DomXPath and fixes Bug #48601 Adjusted a test to reflect that change
simplexml->query returns empty array if no nodes were found and false if libxml thinks the xpath-expression was invalid. Behaves now the same like DomXPath and fixes Bug #48601 Adjusted a test to reflect that change
- force LF eol style as this test depends on it (size)
- force LF eol style as this test depends on it (size)
- force LF eol style as this test depends on it (size)
- force LF eol style as this test depends on it (size)
- force LF eol style as this test depends on it (size)
- force LF eol style as this test depends on it (size)
- parser version independent
- parser version independent
- parser version independent
- parser version independent
- use only the test name
- use only the test name
- use only the test name
- use only the test name
- use only the test name
- use only the test name
- use only the test name
- use only test name
- use only test name
Remove annoying extra newline on XFAIL summaries and sync text to trunk
Remove annoying extra newline on XFAIL summaries and sync text to trunk
Remove annoying extra newline on XFAIL summaries and sync text to trunk
- force LF eol style as this test depends on it (size)
- force LF eol style as this test depends on it (size)
- force LF eol style as this test depends on it (size)
- make it parser version independent
- make it parser version independent
- make it parser version independent
fix xsl tests
fixed libxml tests
fixed libxml tests
more tuning based on discussion in FR #40816:  * parse all OIDs earlier, detect all wrong OIDs before any query    is made (GET-operations)  * introduce ERRNO_MULTIPLE_SET_QUERIES:     warn if request contains more OIDs than max_oids and SET operation     (and type&value checks) will be done in chunks. fix set method when request contains more OIDs than max_oids (2nd and  subsequent chunk were ignored)
- force LF eol style as this test depends on it (size)
- force LF eol style as this test depends on it (size)
- force LF eol style as this test depends on it (size)
more tuning based on discussion in FR #40816:  * parse all OIDs earlier, detect all wrong OIDs before any query    is made (GET-operations)  * introduce ERRNO_MULTIPLE_SET_QUERIES:     warn if request contains more OIDs than max_oids and SET operation     (and type&value checks) will be done in chunks. fix set method when request contains more OIDs than max_oids (2nd and  subsequent chunk were ignored)
Since we are creating this csv file locally this should obviously be a a LOCAL infile here for this to work reliably. For robustness this should probably have a check for the local-infile server setting as well.
Since we are creating this csv file locally this should obviously be a a LOCAL infile here for this to work reliably. For robustness this should probably have a check for the local-infile server setting as well.
MFB. fix xsl date tests
fix strptime tests for mac
fix strptime tests for mac
test fixes on Darwin
test fixes on Darwin
- html_tables.h regeneration.
- html_tables.h regeneration.
fix tests
fix tests
merge from trunk: set ERRNO_OID_PARSING_ERROR on OID parse error
fix news entries
fix news entries
Add skipifs for bug#54971 (patch by datibbaw@)
Add skipifs for bug#54971 (patch by datibbaw@)
Add skipifs for bug#54971 (patch by datibbaw@)
- ws
- ws
- ws
- Turns out the external entity loader is not a per-thread global but a true   global. Changed code accordingly; however, applications that embed PHP and   also use libxml2 may be affected negatively.
- Turns out the external entity loader is not a per-thread global but a true   global. Changed code accordingly; however, applications that embed PHP and   also use libxml2 may be affected negatively.
add friendly log messages (req #55109)
add friendly log messages (req #55109)
news entry for r66021 Log:
Expose session status via new function, session_status (Req #52982)
Expose session status via new function, session_status (Req #52982)
fixed bug #55267 - session_regenerate_id fails after header sent even if session.use_cookies = 0
fixed bug #55267 - session_regenerate_id fails after header sent even if session.use_cookies = 0
fixed bug #55267 - session_regenerate_id fails after header sent even if session.use_cookies = 0
NEWS entry for fix #55510: $_FILES 'name' missing first character after upload
fix #55510: $_FILES 'name' missing first character after upload
Add missing session ini options "skeletons" until they become atleast documented
Add missing session ini options "skeletons" until they become atleast documented
remove duplicate news entry
- Zend engine part for bug #55158: Add SORT_NATURAL type to array_multisort   (patch by Arpad Ray).
- Zend engine part for bug #55158: Add SORT_NATURAL type to array_multisort   (patch by Arpad Ray).
add support for SORT_NATURAL and SORT_FLAG_CASE in array sort functions
add support for SORT_NATURAL and SORT_FLAG_CASE in array sort functions
- Updated to version 2011.9 (2011i)
- Updated to version 2011.9 (2011i)
- Updated to version 2011.9 (2011i)
Correct NEWS entry attribution. Apologies to all for the confusion.
Added NEWS note for #53946
Add test for #53946 to 5.4 (missed it when committing revision 315707)
Add unescaped Unicode encoding to json_encode(). Closes bug #53946. Patch by Irker and Gwynne.
Add unescaped Unicode encoding to json_encode(). Closes bug #53946. Patch by Irker and Gwynne.
Changed error messages
Changed error messages
Whopsy, this change in 5.4, not 5.3
The Phar class extends RecursiveDirectoryIterator, which has changed the way it ensures its ctor is called
The Phar class extends RecursiveDirectoryIterator, which has changed the way it ensures its ctor is called
The Phar class extends RecursiveDirectoryIterator, which has changed the way it ensures its ctor is called
fix xsl date tests
fix xsl date tests
- fix build, TSRMLS_FETCH must be the last declaration statement and init using TSRM cannot be done before either
- fix build, TSRMLS_FETCH must be the last declaration statement and init using TSRM cannot be done before either
Let's do more than hope (as per the comment in the test code) that we don't hit the memory limit, let's disable the limit for this test since the limit is getting hit by many people
Let's do more than hope (as per the comment in the test code) that we don't hit the memory limit, let's disable the limit for this test since the limit is getting hit by many people
The link error on an out-of-sync command doesn't start with 0 uwe/andrey please double-check
The link error on an out-of-sync command doesn't start with 0 uwe/andrey please double-check
The link error on an out-of-sync command doesn't start with 0 uwe/andrey please double-check
- Added libxml_set_external_entity_loader().
- Added libxml_set_external_entity_loader().
MFH: reduced footprint for sjis-mac
reduced footprint for sjis-mac
<?= is always enabled now
<?= is always enabled now
merge from trunk: export ERRNO_OID_PARSING_ERROR constant: raise it evry time OID parsing has failed
export ERRNO_OID_PARSING_ERROR constant: raise it evry time OID parsing has failed
merge from trunk: reformat OID parsing procedure, fail whole SNMP query on single OID parsing failure
reformat OID parsing procedure, fail whole SNMP query on single OID parsing failure
MFH: corrected valid unicode area.
corrected valid unicode area.
MFH: update pua conversion tables.
update pua conversion tables.
fix valgrind warnings in debug builds
fix valgrind warnings in debug builds
fix valgrind warnings in debug builds
Close #55490.
Close #55490.
tune test's README more per FR #55474
tune test's README more per FR #55474
Revert my previous change - getting different results in different environments, shouldn't have committed it
MFH: added iso2022jp-mobile and emoji unsuppoted in unicode 6.0.
added iso2022jp-mobile and emoji unsuppoted in unicode 6.0.
Update log, marking 5.4 and trunk as XFAIL due to bug #55496
Update log, marking 5.4 and trunk as XFAIL due to bug #55496
Update log, marking 5.4 and trunk as XFAIL due to bug #55496
apply docs fixes suggested in BR #55474
apply docs fixes suggested in BR #55474
- ws
- ws
- Add a note to mention changeLog and downloads in the news entry
Sync r314808 to 5_3 branch Eliminated compiler warnings "comparison is always false",  "cast to pointer from integer of different siz" and tail zero warnings
Sync -development with -production
Sync -development with -production
Sync -development with -production
Reapply the commit of revision 315259 on 5.3.9
update NEWS
update NEWS
Sync date with actual PECL release date for correctness
Sync date with actual PECL release date for correctness
Sync date with actual PECL release date for correctness
Back to -dev
- PHP 5.3.8
- Update NEWS
- Revert r313616 (When we have a blocking SSL socket, respect the timeout   option, scottmac)
Remove duplicated test
Remove duplicated test
Added _SERVER[SERVER_SOFTWARE] for built-in server
Added _SERVER[SERVER_SOFTWARE] for built-in server
Revert commit 315259 as requested # Will apply the patch on this branch after 5.3.8
Don't run the test on windows, Unix specific
Don't run the test on windows, Unix specific
Don't run the test on windows, Unix specific
- fix typo & build
- fix typo & build
Debian/Ubuntu don't have any special CFLAGS listed here for gssapi which shouldn't break the build.
Debian/Ubuntu don't have any special CFLAGS listed here for gssapi which shouldn't break the build.
Debian/Ubuntu don't have any special CFLAGS listed here for gssapi which shouldn't break the build.
- merge two mysqli section
update NEWS.
update NEWS.
MFH: cleanup jisx0213 table.
cleanup jisx0213 table.
MFH: speed improvement of jisx0213 conversion.
speed improvement of jisx0213 conversion.
IPv6 Support for SNMP. (FR #42918)
IPv6 Support for SNMP. (FR #42918)
merge from trunk two commits: Adding IPv6 support (FR #42918) more code coverage
Adding IPv6 support (FR #42918)
more code coverage
MFH: removed SJIS-Mobile#*PUA.
removed SJIS-Mobile#*PUA.
update NEWS.
MFH: updated limbfl to 1.3.2
update NEWS.
updated libmbfl to 1.3.2 (JISX-0213:2004 support).
Unbreak crypt() (fix bug #55439) # If you want to remove static analyser messages, be my guest, # but please run unit tests after
Unbreak crypt() (fix bug #55439) # If you want to remove static analyser messages, be my guest, # but please run unit tests after
Unbreak crypt() (fix bug #55439) # If you want to remove static analyser messages, be my guest, # but please run unit tests after
- undefine CALLBACK (btw, generic names like that should be avoided, w/o prefix :)
- undefine CALLBACK (btw, generic names like that should be avoided, w/o prefix :)
- fix build
- fix build
News for bug #55450
News for bug #55450
Bug #55403: Don't set $_SERVER['HTTPS'] on unsecure connection
- do not use 64bit integer instead of size_t (can't be alloc'ed), or when the actual possible values are 32bit or lower only
- do not use 64bit integer instead of size_t (can't be alloc'ed), or when the actual possible values are 32bit or lower only
Use php.ini parameter instead of GC() entry
Back to dev
5.3.7
Once is generally enough
Once is generally enough
- WS
- WS
- use provided stdint.h and avoid double definitions
- use provided stdint.h and avoid double definitions
compile out when PHP_DEBUG is not present
compile out when PHP_DEBUG is not present
docref_root is now required for html_errors to do anything
docref_root is now required for html_errors to do anything
- Drop T_SCALAR_CAST
- Drop T_SCALAR_CAST
Improve errormessage on wrong use statements
Improve errormessage on wrong use statements
Callable typehint following the rules of is_callable($arg, false);
Callable typehint following the rules of is_callable($arg, false);
Bug #55424	Fatal error when calling a method from a trait that is defined in parent class and required by using an abstract method in the trait. # The method got unconditionally deleted from the class, since it was assumed that we override it, but we did not in case of abstract methods coming from a trait. Thus, dont delete when we try to merge in an abstract method.
Bug #55424	Fatal error when calling a method from a trait that is defined in parent class and required by using an abstract method in the trait. # The method got unconditionally deleted from the class, since it was assumed that we override it, but we did not in case of abstract methods coming from a trait. Thus, dont delete when we try to merge in an abstract method.
Addendum for patch to bug #55214: Class name was freed before method literal referring to it. # Thanks to Felipe for catching this. # The fix duplicates the name into the literal to avoid the dependency
Addendum for patch to bug #55214: Class name was freed before method literal referring to it. # Thanks to Felipe for catching this. # The fix duplicates the name into the literal to avoid the dependency
MFH: NEWS update for mbstring.
MFH: added gb18030 encoding to mbstring/libmbfl.~
NEWS update for mbstring.
added gb18030 encoding to mbstring/libmbfl.~
MFH:
fixed compile warning.
fixed win32 build.
added UTF-8-Mobile for pictogram support.
More test portability fixes mostly for gcov.php.net
More test portability fixes mostly for gcov.php.net
More test portability fixes mostly for gcov.php.net
prevent a crash if cs is NULL, which can happen with MS and lazy connections
prevent a crash if cs is NULL, which can happen with MS and lazy connections
prevent a crash if cs is NULL, which can happen with MS and lazy connections
MySQL 5.6 fractional seconds and PS
MySQL 5.6 fractional seconds and PS
MySQL 5.6 fractional seconds and PS
Andrey, please have a look. Not sure if the test is correct, e.g. MySQL 5.5.3+ really needed?
Andrey, please have a look. Not sure if the test is correct, e.g. MySQL 5.5.3+ really needed?
Andrey, please have a look. Not sure if the test is correct, e.g. MySQL 5.5.3+ really needed?
Andrey, please have a look. This should not cause errors.
Andrey, please have a look. This should not cause errors.
Andrey, please have a look. This should not cause errors.
Omitted GCC warning "comparison is always false"
Omitted GCC warning "comparison is always false"
Bug #55403: Don't set $_SERVER['HTTPS'] on unsecure connection
Bug #55403: Don't set $_SERVER['HTTPS'] on unsecure connection
Back to dev
5.3.7RC5
Missing file relating to previous commit
Recored change into regex.patch
- fix build (introduce by r314641)
- fix build (introduce by r314641)
- fix build (introduce by r314641)
Use HOST_NAME_MAX constant here instead for the gethostname() func
Use HOST_NAME_MAX constant here instead for the gethostname() func
Use HOST_NAME_MAX constant here instead for the gethostname() func
- Getting rid of the BOM.
- Turn on html_errors by default again in php.ini-production like it was in   PHP 5.3, but only generate docref links when the docref_root INI setting is   not empty.
- Turn on html_errors by default again in php.ini-production like it was in   PHP 5.3, but only generate docref links when the docref_root INI setting is   not empty.
relax constraint
relax constraint
relax constraint
Eliminated compiler's warnings
Eliminated compiler's warnings
fix coverity issue 1054: missing break/return
fix coverity issue 1054: missing break/return
Remove unused variable
Remove unused variable
terminate timeouting processes with SIGKILL (9)
terminate timeouting processes with SIGKILL (9)
terminate timeouting processes with SIGKILL (9)
MFH: update the news.
update the news.
Make static analyzers happy
Make static analyzers happy
Make static analyzers happy
Minimize stack usage and added missing dtors
Minimize stack usage and added missing dtors
Minimize stack usage and added missing dtors
Avoiding strcpy, strcat, sprintf usage to make static analyzer happy
Avoiding strcpy, strcat, sprintf usage to make static analyzer happy
Avoiding strcpy, strcat, sprintf usage to make static analyzer happy
Avoiding strcpy usage, Make static analyzer happy
Avoiding strcpy usage, Make static analyzer happy
Avoiding strcpy usage, Make static analyzer happy
Update SQLite3 to the latest version
Update SQLite3 to the latest version
Update SQLite3 to the latest version
Eliminated compiler's warnings and make static analyzer silent
Eliminated compiler's warnings and make static analyzer silent
Eliminated compiler's warnings and make static analyzer silent
Remove unused variable
Remove unused variable
Remove unused variable
Remove unused variable
Remove unused variable
Remove unused variable
- Elided unused argument in internal linkage function.
- Elided unused argument in internal linkage function.
Remove unnecessary(no sense) memset and making the static analyzer silent
Remove unnecessary(no sense) memset and making the static analyzer silent
Remove unnecessary(no sense) memset and making the static analyzer silent
Another build fix relating to previous DOM commit
Another build fix relating to previous DOM commit
MFH: reduced memory footprint for codepages.
reduced memory footprint for codepages.
Removal of deadcode identified by coverity
Removal of deadcode identified by coverity
Deadcode & sizeof fix for issues found by coverity (different patch for 5.4+ will follow shortly)
Removed deadcode
Removed deadcode
Make static analyzers happy
Make static analyzers happy
Make static analyzers happy
Use snprintf to make the static analyzers happy
Use snprintf to make the static analyzers happy
Use snprintf to make the static analyzers happy
Sizeof mismatch
Sizeof mismatch
- Document the new ZEND_DONT_UNLOAD_MODULES environment variable.
- Document the new ZEND_DONT_UNLOAD_MODULES environment variable.
Prevented the warning about truncate int to char
Prevented the warning about truncate int to char
Prevented the warning about truncate int to char
Make codes more clearly, and make the static analyzer silent..
Make codes more clearly, and make the static analyzer silent..
Use snprintf and strncat to make the static analyzers happy
Use snprintf and strncat to make the static analyzers happy
Use snprintf and strncat to make the static analyzers happy
Wrong sizeof
Wrong sizeof
Remove no sense statements
Remove no sense statements
Remove no sense statements
Avoid strcpy() usage
Avoid strcpy() usage
Avoid strcpy() usage
possible use without init fixed
possible use without init fixed
possible use without init fixed
Front- and back-port rev 314431 (missing php.h include)
Front- and back-port rev 314431 (missing php.h include)
Back- and front-port fixes for #55019
Back- and front-port fixes for #55019
For 5.4, fix C++-style comments. For trunk, forward-port build fix.
For 5.4, fix C++-style comments. For trunk, forward-port build fix.
More signed 1-bit bitfields
Signed 1-bit bitfields make no sense
Signed 1-bit bitfields make no sense
Not an issue here, but a good habit to follow consistently. Never use strcpy/strcat.
Not an issue here, but a good habit to follow consistently. Never use strcpy/strcat.
Not an issue here, but a good habit to follow consistently. Never use strcpy/strcat.
Make static analyzers happy
Make static analyzers happy
Make static analyzers happy
fix for bug #55019
Add missing php.h include
revert -r314422
revert -r314422
revert -r314422
- Revert r314387   (property_info.name has the mangled name)
- Revert r314387   (property_info.name has the mangled name)
Initialize variable with fixed value for avoiding compile warnings
Initialize variable with fixed value for avoiding compile warnings
Initialize variable with fixed value for avoiding compile warnings
Remove unused variables
Remove unused variables
function_name cannot be false
function_name cannot be false
function_name cannot be false
class entry is never used
class entry is never used
class entry is never used
Pointer returned is never used
Pointer returned is never used
Pointer returned is never used
Initialize temp with 0, avoiding compile warning
Oops
Good catch Coverity
Good catch Coverity
Since we have fci_cache = &fci_cache_local inside that block and fci_cache is then later used outside the block, fci_cache_local can't be block-scoped here
Since we have fci_cache = &fci_cache_local inside that block and fci_cache is then later used outside the block, fci_cache_local can't be block-scoped here
I'm pretty sure you didn't mean to multiple by the size of a char* there since that makes no sense. output is an array of char, not an array of char* Pierre, please review
I'm pretty sure you didn't mean to multiple by the size of a char* there since that makes no sense. output is an array of char, not an array of char* Pierre, please review
Use snprintf here instead to make the static analyzers happy.
Use snprintf here instead to make the static analyzers happy.
These naked strcpy()s scare me
These naked strcpy()s scare me
These naked strcpy()s scare me
Use property_info.name here instead since *name might be free'ed at this point @dmitry please review
Use property_info.name here instead since *name might be free'ed at this point @dmitry please review
Avoid a potential double-free here
Avoid a potential double-free here
Not our issue, but fixing here for now and reporting upstream
Not our issue, but fixing here for now and reporting upstream
Not our issue, but fixing here for now and reporting upstream
- Added change to UPGRADING
MFH: changed mapping of 0xa5 for SJIS-mac to prevent XSS.
changed mapping of 0xa5 for SJIS-mac to prevent security attack.
- Added ZEND_MOD_END macro to use in the end of zend_module_dep[]
- Added ZEND_MOD_END macro to use in the end of zend_module_dep[]
- Added ZEND_MOD_END macro to use in the end of zend_module_dep[]
MFH: fixed encoding conversion when http_input=auto.
fixed encoding conversion when http_input=auto.
MFH: improved error handling for ill-formed utf-8 based on the Unicode recommendation.
improved error handling for ill-formed utf-8 based on the Unicode recommendation.
MFH: added ill-formed utf-8 check for 0xEDXXXX.
added ill-formed utf-8 check for 0xEDXXXX.
MFH (updated libmbfl version to 1.3.1).
updated libmbfl version to 1.3.1.
- Added missing PHP_FE_END/ZEND_FE_END
- Added missing PHP_FE_END/ZEND_FE_END
- Added missing PHP_FE_END/ZEND_FE_END
efree match_sets on an error here - found by Coverity
efree match_sets on an error here - found by Coverity
efree match_sets on an error here - found by Coverity
Another potential missing va_end() found by Coverity
Another potential missing va_end() found by Coverity
Another potential missing va_end() found by Coverity
Improve test portabilty
Improve test portabilty
Improve test portabilty
MFH (added check for invalid utf-8 encoding).
added check for invalid utf-8 encoding (merge from libmbfl-1.3.1).
MFH (removed obsolete/invalid 5,6 byte encoding of UTF-8 from mbstring/libmbfl based on Unicode 5.2.
removed invalid 5,6 byte encoding from utf-8 based on Unicode 5.2.
- Added missing check (thanks neweracracker at gmail dot com)
- Added missing check (thanks neweracracker at gmail dot com)
- Added missing check (thanks neweracracker at gmail dot com)
Add mysqli_error_list() that returns an array with errors. Typically only one and just one for libmysql. mysqlnd can return generate more than one error during its work and with mysqli_error() only the last error is being reported. In the array returned by mysqli_error_list() / $mysqli->error_list, all errors will be found. The list is reset when the next command is executed
Add mysqli_error_list() that returns an array with errors. Typically only one and just one for libmysql. mysqlnd can return generate more than one error during its work and with mysqli_error() only the last error is being reported. In the array returned by mysqli_error_list() / $mysqli->error_list, all errors will be found. The list is reset when the next command is executed
back to dev
5.4.0alpha3
update NEWS
- update libcurl to 7.21.7
- update libcurl to 7.21.7
- update libcurl to 7.21.7
MF PHP_5_4.
fixed error handling on SJIS_Mobile (for SB/KDDI).
fixed error handling on SJIS_Mobile.
Remove a warning by explicitly compiling out a non-used variable
Remove a warning by explicitly compiling out a non-used variable
Remove a warning by explicitly compiling out a non-used variable
completely compile out a currently non-needed function
completely compile out a currently non-needed function
completely compile out a currently non-needed function
compile out both parts of the code that are currently unused - fixes a compilation warning
compile out both parts of the code that are currently unused - fixes a compilation warning
compile out both parts of the code that are currently unused - fixes a compilation warning
fix warnings due to change in zend_property_info (structure extended in the middle!!)
fix warnings due to change in zend_property_info (structure extended in the middle!!)
MFH (updated libmbfl for 1.3.0.).
added version number of libmbfl.
added new files of libmbfl 1.3.0.
updated libmbfl for version 1.3.0.
Added support for Class::{expr}() syntax (Pierrick)
Added support for Class::{expr}() syntax (Pierrick)
fix params parsing
fix params parsing
fix tests
fix tests
fix failing tests
fix failing tests
fix termination in sha-512 too
fix termination in sha-512 too
fix termination in sha-512 too
retore open_basedir check for unlink
retore open_basedir check for unlink
fix salt truncation bug in sha256
fix salt truncation bug in sha256
fix salt truncation bug in sha256
- blowfish 1.2 update, 2nd part
- blowfish 1.2 update, 2nd part
- blowfish 1.2 update, 2nd part
Added __TRAIT__ magic constant [TRAITS] [DOC] # __TRAIT__ behaves like __CLASS__ more or less but is constraint to traits. # Since traits are not types, there are not many valid use cases, and trying # to use __TRAIT__ to make traits more like classes is discouraged.
Added __TRAIT__ magic constant [TRAITS] [DOC] # __TRAIT__ behaves like __CLASS__ more or less but is constraint to traits. # Since traits are not types, there are not many valid use cases, and trying # to use __TRAIT__ to make traits more like classes is discouraged.
Added: SKIP when tokenizer extension is not available
Added: SKIP when tokenizer extension is not available
- add test for blowfish 1.2 (Solar Designer)
Reverted Gopal's patch that allowed plugable interned string check 1. It introduced a significant slowdown 2. It didn't fix the real problem in APC (I'm goint to commit the fix)
Reverted Gopal's patch that allowed plugable interned string check 1. It introduced a significant slowdown 2. It didn't fix the real problem in APC (I'm goint to commit the fix)
back to dev
5.3.7RC4
merge to trunk - Allow zend_is_interned_string to be pluggable
Allow zend_is_interned_string to be pluggable
- do safemode/open basedir checks 1st, and use only expand not realpath (it is done by the safemode/openbasedir check already)
- do safemode/open basedir checks 1st, and use only expand not realpath (it is done by the safemode/openbasedir check already)
Check if given string is long enough in zend_*_strtod
Check if given string is long enough in zend_*_strtod
- do not resolve the link if all we want is to open that file
- do not resolve the link if all we want is to open that file
- WS
- WS
- do not resolve the link if all we want is to open that file
- do not resolve the link if all we want is to open that file
longer error messages, don't cut them
longer error messages, don't cut them
longer error messages, don't cut them
added (recursive)callbackfilteriterator to spl_classes() (bug #55287)
added (recursive)callbackfilteriterator to spl_classes() (bug #55287)
- upgrading entry for binary number format
- upgrading entry for binary number format
- correct 1st name
- add binary suport, FR #50638, as defined in RFC https://wiki.php.net/rfc/binnotation4ints, patch by Jonah Harris
- add binary suport, FR #50638, as defined in RFC https://wiki.php.net/rfc/binnotation4ints, patch by Jonah Harris
Add explicit casts to remove some of Pierre's snapshot build warnings
Add explicit casts to remove some of Pierre's snapshot build warnings
Add explicit casts to remove some of Pierre's snapshot build warnings
- news for bug #55124
Double check if line is sill usable and connected to last successfully selected db.
Double check if line is sill usable and connected to last successfully selected db.
Double check if line is sill usable and connected to last successfully selected db.
Check what happens if switching DB via API fails. Expected: no change of current DB/schema.
Check what happens if switching DB via API fails. Expected: no change of current DB/schema.
Check what happens if switching DB via API fails. Expected: no change of current DB/schema.
Would be nice if tests get updated whenever a feature is added by the person adding the feature...
Would be nice if tests get updated whenever a feature is added by the person adding the feature...
Would be nice if tests get updated whenever a feature is added by the person adding the feature...
- simplify
- simplify
- use cwd_expand now
- use cwd_expand now
- Revert accidental change
Patch r313663 and r313665 to allow PECL builds to work with earlier releases
Patch r313663 and r313665 to allow PECL builds to work with earlier releases
Patch r313663 and r313665 to allow PECL builds to work with earlier releases
Remove old testname. This file now diverges from PHP_5_3
Remove old testname. This file now diverges from PHP_5_3
Update skipif
Update skipif
Update skipif
- add expand_filepath_with_mode (not used anywhere yet but will be used for file ops (fopen&co) to avoid extra links resolution and other non required ops on open
- add expand_filepath_with_mode (not used anywhere yet but will be used for file ops (fopen&co) to avoid extra links resolution and other non required ops on open
Test update. 5.4+ is more verbose.
Test update. 5.4+ is more verbose.
Test update. 5.4+ throws a catchable fatal error, 5.3 does not.
Test update. 5.4+ throws a catchable fatal error, 5.3 does not.
Replace FIELD with CONSTANT (that is the alias returned in Firebird stable 2.5.x )
- Use ZEND_FE_END macro here
- Use ZEND_FE_END macro here
- Use ZEND_FE_END macro here
- Make usage of new PHP_FE_END macro
fix ident
- Make usage of new PHP_FE_END macro
- Make usage of new PHP_FE_END macro
- Added new macro to be used in the end of zend_function_entry declaration (Gwynne)
- Added new macro to be used in the end of zend_function_entry declaration (Gwynne)
- Added new macro to be used in the end of zend_function_entry declaration (Gwynne)
When you add something that changes the phpinfo output, please update this test.
When you add something that changes the phpinfo output, please update this test.
Added forgotten tests cases for class_uses() from commit rev. 313640
Added forgotten tests cases for class_uses() from commit rev. 313640
No E_STRICT in production
No E_STRICT in production
Change E_ALL to include E_STRICT
Change E_ALL to include E_STRICT
- MQ section
- MQ section
- add short array syntax, missing files and info
- add short array syntax, missing files and info
- add short array syntax as defined in https://wiki.php.net/rfc/shortsyntaxforarrays, 2nd solution using => only
- add short array syntax as defined in https://wiki.php.net/rfc/shortsyntaxforarrays, 2nd solution using => only
Added missing class_uses(..) function to SPL to mirror class_implements(..).
Added missing class_uses(..) function to SPL to mirror class_implements(..).
Added test case which was only added to trunk, bug seems to be fixed already.
- Give index.php a precedence over index.html.  Patch by davidc.
- Give index.php a precedence over index.html.  Patch by davidc.
provide backwards compatibility for 'p' in zend_parse_parameters()
When we have a blocking SSL socket, respect the timeout option.
When we have a blocking SSL socket, respect the timeout option.
When we have a blocking SSL socket, respect the timeout option.
- Disable __sync_fetch_and_add for HPUX for now, gcc seems not provide __sync_fetch_and_add_4 for all targets
- Disable __sync_fetch_and_add for HPUX for now, gcc seems not provide __sync_fetch_and_add_4 for all targets
- Disable __sync_fetch_and_add for HPUX for now, gcc seems not provide __sync_fetch_and_add_4 for all targets
Delete empty test files (old MQ tests)
Delete empty test files (old MQ tests)
- remove magic quotes support, functions are kept (see the NEWS entry for the details) for BC reasons but do not allow to set enable MQ, missing tests changes in 5.4
- should not have been applied
- WS
- WS
- remove magic quotes support, functions are kept (see the NEWS entry for the details) for BC reasons but do not allow to set enable MQ
- remove magic quotes support, functions are kept (see the NEWS entry for the details) for BC reasons but do not allow to set enable MQ
Revert r311205. Test works in original form and should not vary between branches in this case.
Have test for add/sub/diff one second during ST/DST transition in spring.
Have test for add/sub/diff one second during ST/DST transition in spring.
Have test for add/sub/diff one second during ST/DST transition in spring.
s/noOIDIncreasingCheck/oid_increasing_check/
s/noOIDIncreasingCheck/oid_increasing_check/
- Show PHP_VERSION in the banner. Suggested by Chris and others.
- Show PHP_VERSION in the banner. Suggested by Chris and others.
removing openssl test for bug #55169 per Scott MacVicar's request; duplicate coverage of opensssl_random_pseudo_bytes.phpt
removing openssl test for bug #55169 per Scott MacVicar's request; duplicate coverage of opensssl_random_pseudo_bytes.phpt
removing openssl test for bug #55169 per Scott MacVicar's request; duplicate coverage of opensssl_random_pseudo_bytes.phpt
update test for bug #55169, fix skipif
update test for bug #55169, fix skipif
update test for bug #55169, fix skipif
update test for bug #55169, don't require the extension in INI
update test for bug #55169, don't require the extension in INI
update test for bug #55169, don't require the extension in INI
tests for bug #55169 (mcrypt and openssl)
tests for bug #55169 (mcrypt and openssl)
tests for bug #55169 (mcrypt and openssl)
Rename and enhance test for bug 55253 now that bugs web is up.
Rename and enhance test for bug 55253 now that bugs web is up.
Rename and enhance test for bug 55253 now that bugs web is up.
- Better error handling.
- Better error handling.
- re apply the rng change specific to windows, long term it should be a std function but as this function was badly introduced in the 1st place, we have to fix the bad things here instead, pls do not revert again, bad idea.
- re apply the rng change specific to windows, long term it should be a std function but as this function was badly introduced in the 1st place, we have to fix the bad things here instead, pls do not revert again, bad idea.
- Dropped restriction of not setting the same value multiple times, the last one holds (giovanni at giacobbi dot net)
- Dropped restriction of not setting the same value multiple times, the last one holds (giovanni at giacobbi dot net)
Revert change to use a special Windows version of openssl_random_pseudo_bytes().
Revert change to use a special Windows version of openssl_random_pseudo_bytes().
- enhanced log messages - code cosmetic
- enhanced log messages - code cosmetic
openssl_encrypt() / openssl_decrypt() were flawed and truncated the key to the default size for the case of a variable key length cipher.
openssl_encrypt() / openssl_decrypt() were flawed and truncated the key to the default size for the case of a variable key length cipher.
openssl_encrypt() / openssl_decrypt() were flawed and truncated the key to the default size for the case of a variable key length cipher.
- Buffers are local to the blocks where they belong.
- Buffers are local to the blocks where they belong.
- Print HTTP method as well in the log. - Print response code also when the request is processed by a script. - Those changes partly closes #55109.
- Print HTTP method as well in the log. - Print response code also when the request is processed by a script. - Those changes partly closes #55109.
- cleanup
- cleanup
- update libpng to 1.2.46
- update libpng to 1.2.46
- update libpng to 1.2.46
order fpm configuration items the same way in php-fpm.conf.in, fpm_conf.h and fpm_conf.c
order fpm configuration items the same way in php-fpm.conf.in, fpm_conf.h and fpm_conf.c
- update blowfish to 1.2 (Solar Designer)
- update blowfish to 1.2 (Solar Designer)
- update blowfish to 1.2 (Solar Designer)
fix a segfault when passing an empty value to a ini parameter from the web server (php_(admin_)?value)
fix a segfault when passing an empty value to a ini parameter from the web server (php_(admin_)?value)
fix a segfault when passing an empty value to a ini parameter from the web server (php_(admin_)?value)
remove forgotten debug log
- not a good idea after all and did not do what I thought it should do
- not a good idea after all and did not do what I thought it should do
- fix bug #54204, Can't set a value with a PATH section in php.ini
- fix bug #54204, Can't set a value with a PATH section in php.ini
added numeric entities encode/decode in hex format.
added numeric entities encode/decode in hex format.
- don't write directly to stderr, use the internal logger instead (zlog)
- don't write directly to stderr, use the internal logger instead (zlog)
remove unused variable
remove unused variable
- remove is_fastcgi because FPM is always fastcgi
- remove is_fastcgi because FPM is always fastcgi
- get rid of FPM_AUTOCONFIG_H which has never existed since FPM integration into core
- get rid of FPM_AUTOCONFIG_H which has never existed since FPM integration into core
- get rid of FPM_AUTOCONFIG_H which has never existed since FPM integration into core
new propery noOIDIncreasingCheck allowing to skip OID increasing check (userful for bogus SNMP agents)
new propery noOIDIncreasingCheck allowing to skip OID increasing check (userful for bogus SNMP agents)
swap non_repeaters and max_repetitions in walk query, max_repetitions whould be used more frequently
swap non_repeaters and max_repetitions in walk query, max_repetitions whould be used more frequently
fix FR #54502: allow user to change OID value output mode when SNMP_VALUE_OBJECT is used.
fix FR #54502: allow user to change OID value output mode when SNMP_VALUE_OBJECT is used.
backport r313186 from PHP_5_4
backport r313323 and r313326 from PHP_5_4
fix revision r313323
backport r313324
update ARG_INFO_EX for walk and get methods, fix comments
- Implemented FR #55166 (Added process.max to control the number of process FPM can fork)
Register warning change
Updated is_a() and is_subclass_of() tests as per the removed E_WARNING from r313162 which was inspired by discussion after r312904 and PHP Bug #53727
Updated is_a() and is_subclass_of() tests as per the removed E_WARNING from r313162 which was inspired by discussion after r312904 and PHP Bug #53727
Updated is_a() and is_subclass_of() tests as per the removed E_WARNING from r313162 which was inspired by discussion after r312904 and PHP Bug #53727
- Added a check for an enviroment variable (ZEND_DONT_UNLOAD_MODULES) that, if   set, prevents PHP from dl_closing() modules on shutdown. - This makes it possible to spot memory leaks with valgrind in shared modules.
- Added a check for an enviroment variable (ZEND_DONT_UNLOAD_MODULES) that, if   set, prevents PHP from dl_closing() modules on shutdown. - This makes it possible to spot memory leaks with valgrind in shared modules.
Back to dev
5.3.7RC3
- fix build
- fix build
- fix decl
- fix decl
Back to -dev
5.4.0 alpha2
find option '-not' is not POSIX compliant
find option '-not' is not POSIX compliant
find option '-not' is not POSIX compliant
integrate 5.3 NEWS
Have test for add/sub/diff one second during DST/ST transition.
Have test for add/sub/diff one second during DST/ST transition.
Have test for add/sub/diff one second during DST/ST transition.
Add test for constructing times during the dst/st conversion.
Add test for constructing times during the dst/st conversion.
Add test for constructing times during the dst/st conversion.
Use datetime examine diff file from 5.3 in 5.4 and trunk.
Use datetime examine diff file from 5.3 in 5.4 and trunk.
- bind to the available crt version
- bind to the available crt version
- Implemented FR #55181 (Enhance security by limiting access to user defined extensions)
- Bug #55169, improve fix, allow non interactive user, hash-like ops only usage
- Bug #55169, improve fix, allow non interactive user, hash-like ops only usage
- Bug #55169, improve fix, allow non interactive user, hash-like ops only usage
Added credentials to XSL NEWS entry
Added credentials to XSL NEWS entry
remove warning for is_a() BC
remove warning for is_a() BC
remove warning for is_a() BC
MF53
MF53
Added XsltProcessor::setSecurityPrefs($options) and getSecurityPrefs() to define forbidden operations within XSLT stylesheets, default is not to enable any write operations from XSLT anymore. Bug #54446
Added XsltProcessor::setSecurityPrefs($options) and getSecurityPrefs() to define forbidden operations within XSLT stylesheets, default is not to enable any write operations from XSLT anymore. Bug #54446
MFH
MF53
MF53
Changed http_response_code() to be able to set a response code
Changed http_response_code() to be able to set a response code
split changes between alphas
Added the ability to pass options to loadHTML (Chregu, fxmulder at gmail dot com)
Added XsltProcessor::setSecurityPrefs($options) and getSecurityPrefs() to define forbidden operations within XSLT stylesheets, default is not to enable any write operations from XSLT anymore. Bug #54446
- Further fix for bug #55111 (compilation failure of ext/sockets in Mac OS X).
- Further fix for bug #55111 (compilation failure of ext/sockets in Mac OS X).
- Added zend_is_auto_global_quick function
- Added zend_is_auto_global_quick function
- rng change
- use  php_win32_get_random_bytes instead of over slow and partially wrong openssl's version
- use  php_win32_get_random_bytes instead of over slow and partially wrong openssl's version
- fix bug #55169, mcrypt_create_iv always fails to gather sufficient random data
- fix bug #55169, mcrypt_create_iv always fails to gather sufficient random data
- fix bug #55169, mcrypt_create_iv always fails to gather sufficient random data
 - use warning here to match unix behavior
 - use warning here to match unix behavior
 - use warning here to match unix behavior
- Year++
- Year++
- Year++
- Minor optimization taking the computed hash of interned strings
- Minor optimization taking the computed hash of interned strings
- update libpng to 1.2.45
- update libpng to 1.2.45
- Minor optimization, use the computed hash when available
- Minor optimization, use the computed hash when available
- Changed zend_resolve_class_name() prototype # No needed to pass fetch_type as pointer here
- Changed zend_resolve_class_name() prototype # No needed to pass fetch_type as pointer here
- WS
- Minor optimization and clean up
- Minor optimization and clean up
- CS and WS
- CS and WS
- Missing to commit this change here... (thanks nikic)
- add apache 2.3 (upcoming 2.4) handler
- add apache 2.3 (upcoming 2.4) handler
- Implemented FR #54098 (Lowered default value for Process Manager)
- Implemented FR #54098 (Lowered default value for Process Manager)
free data in case of failure in the callee not in the caller
free data in case of failure in the callee not in the caller
free data in case of failure in the callee not in the caller
- FR #52052: Added partial syslog support (on error_log only)
- FR #52052: Added partial syslog support (on error_log only)
- ws and cosmetics
- ws and cosmetics
- ws and cosmetics
- moved STR2STR, BOOL2STR and PM2STR from fpm_conf.h to fpm_conf.c (Giovanni Giacobbi)
- moved STR2STR, BOOL2STR and PM2STR from fpm_conf.h to fpm_conf.c (Giovanni Giacobbi)
- moved STR2STR, BOOL2STR and PM2STR from fpm_conf.h to fpm_conf.c (Giovanni Giacobbi)
fix crypt() issue with overlong salt
fix crypt() issue with overlong salt
fix crypt() issue with overlong salt
alloc SHM for all children at startup to ensure all SHM will be reachable from children over the ages
child-pid can't be set when fpm_child_resources_use is called
- revert commit 312812 until 5.3.7 is out
fix comment syntax
fix comment syntax
fix comment syntax
- Removed accidental offsetof definition
- Removed accidental offsetof definition
- Implemented FR #54172 (Overriding the pid file location of php-fpm)
- Implemented FR #54172 (Overriding the pid file location of php-fpm)
- Implemented FR #54172 (Overriding the pid file location of php-fpm)
- Implemented FR #54499 (FPM ping and status_path should handle HEAD request)
- Implemented FR #54499 (FPM ping and status_path should handle HEAD request)
- Implemented FR #54499 (FPM ping and status_path should handle HEAD request)
- Reverted php_printf -> printf change
- Reverted php_printf -> printf change
Updated name to 'PHP Development Server', and CTRL-C to Ctrl-C, as per PHP bug #55071
Updated name to 'PHP Development Server', and CTRL-C to Ctrl-C, as per PHP bug #55071
Back to dev
5.3.7RC2
correct error message for a missing document root in the cli webserver
correct error message for a missing document root in the cli webserver
fix #55072 in-built web server needs to check -t option is a directory
fix #55072 in-built web server needs to check -t option is a directory
working on test coverage for ext/dom, here's 17 more tests
working on test coverage for ext/dom, here's 17 more tests
working on test coverage for ext/dom, here's 17 more tests
clarify sqlite deprecation
clarify sqlite deprecation
Keep the DBA DB4 test status quo after Berkeley DB 5.2 introduced error message prefixes
Keep the DBA DB4 test status quo after Berkeley DB 5.2 introduced error message prefixes
Keep the DBA DB4 test status quo after Berkeley DB 5.2 introduced error message prefixes
missed version sync with 5.4
- Updated to version 2011.8 (2011h)
- Updated to version 2011.8 (2011h)
- Updated to version 2011.8 (2011h)
- fixed request_timeout and slowlog_timeout from last FPM commit (r312496) - typo
- fixed request_timeout and slowlog_timeout from last FPM commit (r312496) - typo
- fixed request_timeout and slowlog_timeout from last FPM commit (r312496) - typo
- BFN
- Replaced shm_slots with a real scoreboard - Added several improvements to the status page
- Replaced shm_slots with a real scoreboard - Added several improvements to the status page
- Replaced shm_slots with a real scoreboard - Added several improvements to the status page
small fix in disk_total_space() tests (PHP_5_3 already includes this)
small fix in disk_total_space() tests (PHP_5_3 already includes this)
- reflection is always enabled
- reflection is always enabled
- reflection is always enabled
fixed temp directory names in spl tests
fixed temp directory names in spl tests
fixed temp directory names in spl tests
fixed/refactored some spl tests related to owner/group retrieval
fixed/refactored some spl tests related to owner/group retrieval
fixed/refactored some spl tests related to owner/group retrieval
Add http_proxy env var support to run-tests.php result submission
Add http_proxy env var support to run-tests.php result submission
Add http_proxy env var support to run-tests.php result submission
- Added SKIPIF
- Added SKIPIF
- Added SKIPIF
- Added a new PHPAPI function to return module_initialized:   php_get_module_initialized().
- Added a new PHPAPI function to return module_initialized:   php_get_module_initialized().
- BFN
- Improved parse error messages
- Improved parse error messages
- Missing valid path check
- Missing valid path check
These are annoyingly slow
These are annoyingly slow
These are annoyingly slow
MFB: properly regen file to fix coverage data
properly regen file to fix coverage data
- Added custom access log (also added per request %CPU and memory mesurement)
- Added custom access log (also added per request %CPU and memory mesurement)
- Added custom access log (also added per request %CPU and memory mesurement)
Add charset, fixes the validate_on_parse test (confik)
Zend Signal Handling
- fix build
- fix build
- Forgot to commit these.
- Forgot to commit these.
- Add built-in web server to CLI SAPI. See the RFC for detail.
- Add built-in web server to CLI SAPI. See the RFC for detail.
Changed register_shutdown_function() to reflect that it is using a cb (thx arpad)
- Optimize property finding by zend_hash_quick_find
- Optimize property finding by zend_hash_quick_find
- Simplify function code
- Simplify function code
- Avoid re-hash here too
- Avoid re-hash here too
Removed pid in debug logs written by chrildren processes
Removed pid in debug logs written by chrildren processes
Removed pid in debug logs written by chrildren processes
- Minor optimization (avoid to re-hash already computed var name hash)
- Minor optimization (avoid to re-hash already computed var name hash)
- Removed unnecessary TSRMLS_FETCH
- Removed unnecessary TSRMLS_FETCH
Back to -dev
5.4.0 alpha11
Integrate NEWS
fix error reporting on missing data - don't produce double errors
fix error reporting on missing data - don't produce double errors
fix test with floats - make it not produce different result on 32 and 64 bit
fix test with floats - make it not produce different result on 32 and 64 bit
re-generate credits
Provide test for DateTime::add() issue (for discussion on internals, bugs.php.net is down).
Provide test for DateTime::add() issue (for discussion on internals, bugs.php.net is down).
Split DateTime diff/add/sub tests into separate files to make things easier to see, test and (one hopes) fix.
Split DateTime diff/add/sub tests into separate files to make things easier to see, test and (one hopes) fix.
Make xfail text not reference a particular version now that 5.4 branch exists.
- Opss, restore old behavior
- Opss, restore old behavior
- Opss, restore old behavior
- Missing usage of 'p' parameter specifier
- Missing usage of 'p' parameter specifier
- New tests (code coverage++)
- New tests (code coverage++)
- New tests (code coverage++)
- Added missing void param checks, and fix arginfo
- Added missing void param checks, and fix arginfo
- Added missing void param checks, and fix arginfo
- Missing change
- Missing change
- Missing change
Added master rlimit_files and rlimit_core in the global configuration settings
Added master rlimit_files and rlimit_core in the global configuration settings
Added master rlimit_files and rlimit_core in the global configuration settings
ws
- Added missing arginfos for void params and void param checks
- Added missing arginfos for void params and void param checks
- Added missing arginfos for void params and void param checks
Remove timestamp in logs written by children process
Remove timestamp in logs written by children process
Remove timestamp in logs written by children process
take over mantainership on snmp extension
take over mantainership on snmp extension
- fix build
- fix build
Provide test for DateTime::add() issue (for discussion on internals, bugs.php.net is down).
Split DateTime diff/add/sub tests into separate files to make things easier to see, test and (one hopes) fix.
missing doc in the conf file
missing doc in the conf file
missing doc in the conf file
- added xml format to the status page - clean fpm_status.c code
- added xml format to the status page - clean fpm_status.c code
- added xml format to the status page - clean fpm_status.c code
Remove duplicate lines present in PHP_5_3's .phpt (dtajchreber)
expand SNMP section
expand SNMP section
- Minor NEWS cleanup # entrys are sentences and end with a full stop. # PCRE and SQLite updates will hopefully released w/ 5.3 first (and the listed # version numbers are outdated already)
- did I not kill that already? (do not use rand_screen, pointless on server and not TS)
- did I not kill that already? (do not use rand_screen, pointless on server and not TS)
- did I not kill that already? (do not use rand_screen, pointless on server and not TS)
- Back to -dev
5.3.7RC1
- fix nts build
- fix nts build
- fix nts build
- Removed win debug stuff
- init win32 rng context once per process
- init win32 rng context once per process
- init win32 rng context once per process
- install extra headers
- install extra headers
- install extra headers
update the branches list
update the branches list
- Broken overlong (>80 chars) lines. - Added entry corresponding to r301991, as requested.
Improve cross version compat
Improve cross version compat
Upgrade SQLite to 3.7.6.3
Upgrade SQLite to 3.7.6.3
Upgrade SQLite to 3.7.6.3
- New tests for new feature
- New tests for new feature
- Added CVE id
- MFH suppression of compiler warning noted in bug #55009
- MFH suppression of compiler warning noted in bug #55009
These regexes don't fail under the new backtrack limit, so lower it just for the test to check the failure.
These regexes don't fail under the new backtrack limit, so lower it just for the test to check the failure.
- Added Bison 2.5 to bison_version_list
- Added Bison 2.5 to bison_version_list
- Added Bison 2.5 to bison_version_list
- Restore basename in filename on non Windows OS
- Restore basename in filename on non Windows OS
Don't expect a path for tidy_repair_string() and fix the tests
Don't expect a path for tidy_repair_string() and fix the tests
remove PHP_VERSION_ID ifdef's, limiting to 5.4 branch
merging from trunk (r312088...r312092): move SNMP VERSION constants into SNMP class itself fix typo in comment no more method open fix method names in header
move SNMP VERSION constants into SNMP class itself
fix typo in comment
no more method open
fix method names in header
- Restore test (the change related to this test weren't committed to this branch)
- Avoid zend_do_ticks() call for each statement in parsing
- Avoid zend_do_ticks() call for each statement in parsing
- Avoid zend_do_ticks() call for each statement in parsing
- Reverted r301991, which is a (partial) fix to bug #52550, addressing an   overflow in a signed subtraction. This fixes the overflow without   changing the algorithm.
- Reverted r301991, which is a (partial) fix to bug #52550, addressing an   overflow in a signed subtraction. This fixes the overflow without   changing the algorithm.
- Reverted r301991, which is a (partial) fix to bug #52550, addressing an   overflow in a signed subtraction. This fixes the overflow without   changing the algorithm.
- MFH Bugfix for bug #53540
- MFH Bugfix for bug #53540
- Missing fix for bug #54347
- Missing fix for bug #54347
- Missing fix for bug #54347
- missing entry for curl.cainfo
- Possible fix for bug #55022 (memory_limit exhausted when set charset in sybase_connect)
- Possible fix for bug #55022 (memory_limit exhausted when set charset in sybase_connect)
- Possible fix for bug #55022 (memory_limit exhausted when set charset in sybase_connect)
- Drop C++ style comments
- Drop C++ style comments
- Drop C++ style comments
Bump OCI8 version to stable in preparation for 5.3.7 RC
Bump OCI8 version to stable in preparation for 5.3.7 RC
Add new OCI8 tests.  Refactor skipifs.  Sync 5.3/5.4/trunk branches
Add new OCI8 tests.  Refactor skipifs.  Sync 5.3/5.4/trunk branches
Add new OCI8 tests.  Refactor skipifs.  Sync 5.3/5.4/trunk branches
Add oci_client_version() returning the runtime Oracle client library version - predominantly useful for the test suite
Add oci_client_version() returning the runtime Oracle client library version - predominantly useful for the test suite
Add oci_client_version() returning the runtime Oracle client library version - predominantly useful for the test suite
Missed trivial comment sync with PHP_5_4 and trunk
Removed tests checking old/removed functionality (session_register/session_unregister/session_is_registered/register_globals)
Removed tests checking old/removed functionality (session_register/session_unregister/session_is_registered/register_globals)
Changed session.save_path to /tmp to make test run.
Changed session.save_path to /tmp to make test run.
Changed session.save_path to /tmp to make test run.
Skip reason is now printed if session.save_path is not writable.
Skip reason is now printed if session.save_path is not writable.
Skip reason is now printed if session.save_path is not writable.
Updated (currently failing) test for bug48203 with curl_stderr and added also curl_multi_exec variant of this test.
Removed 'b' string prefix as unneeded from some tests.
- Missing fixes for grammar fix 's/valid path/a valid path/'
- Missing fixes for grammar fix 's/valid path/a valid path/'
fix socket address parsing code
- Changed output to be more verbose as to what libraries are used - Changed check for 64-bit vs 32-bit build environment to check sizeof(int)   instead of assuming that if libsybct64.so exists, it must be 64-bit # Bug #53540: Correct Sybase 15.0 libraries not found by configure
Relax autoconf support from 2.60 to 2.59.  This is the version available on Centos/RHEL/Oracle Linux 5.6
Relax autoconf support from 2.60 to 2.59.  This is the version available on Centos/RHEL/Oracle Linux 5.6
s/valid path/a valid path/
s/valid path/a valid path/
Sync OCI8 branches. Allow 'pecl install' to work on both PHP 5.3 & 5.4
Sync OCI8 branches. Allow 'pecl install' to work on both PHP 5.3 & 5.4
Sync OCI8 branches. Allow 'pecl install' to work on both PHP 5.3 & 5.4
- Added 'p' type specifier
- Added 'p' type specifier
Update tests to match Felipe's null byte arg parsing change
Update tests to match Felipe's null byte arg parsing change
- Test fixes
- Test fixes
- BFN
- Test fixes
- Test fixes
- Added indirect method call through array variable (FR Bug #47160)
- Added indirect method call through array variable (FR Bug #47160)
- Added new parameter parsing option (p - for valid path (string without null byte in the middle)) # The tests will be fixed in the next commits
- Added new parameter parsing option (p - for valid path (string without null byte in the middle)) # The tests will be fixed in the next commits
- Restore fix for #39863 (do not accept paths with NULL in them) # This was removed by regenerating the VM months ago
When you write to a symlink - you access the file itself, not the symlink, so we need to compare the atime to the orignal file
When you write to a symlink - you access the file itself, not the symlink, so we need to compare the atime to the orignal file
Make sure we are writing more data then the block size
Make sure we are writing more data then the block size
No need to fetch external files and endless amount of DTDs for this test
No need to fetch external files and endless amount of DTDs for this test
touch() no longer attempts to create files on empty strings
touch() no longer attempts to create files on empty strings
This method doesn't seem to be very useful without scalar types, so reverting it too
This method doesn't seem to be very useful without scalar types, so reverting it too
This isn't less then 5.4.. but these still fail though.
This isn't less then 5.4.. but these still fail though.
Updated the note maintainers credits
Updated the note maintainers credits
Updated the note maintainers credits
Show ICU Data version inside phpinfo()
Show ICU Data version inside phpinfo()
Show ICU Data version inside phpinfo()
Add tests for broken function arguments
Add tests for broken function arguments
Add tests for broken function arguments
Compiler warning fix
Further fix for #54918 - We attach a bunch of submodules loading to the basic MINIT, but if an error occurs during their MINIT we still call the MSHUTDOWN()
and clean the tokenizer too
and clean the tokenizer too
scalar types cleanup
scalar types cleanup
Added fabled hex2bin() function
Added fabled hex2bin() function
Missing ifdef related to the previous patch
Zend Signal Handling (see RFC: https://wiki.php.net/rfc/zendsignals) This needs to go into 5.4 as well, but will wait for Pierre to review win32 situation
More tests
More tests
More tests
Implemented FR #54561 (Expose ICU Version & ICU Data Version info).
Implemented FR #54561 (Expose ICU Version & ICU Data Version info).
Implemented FR #54561 (Expose ICU Version & ICU Data Version info).
fix CLI mode timeout
Adding testcases to validate imageloadfont input parameter validation, tests were developed at #tek11 testfest
Adding testcases to validate imageloadfont input parameter validation, tests were developed at #tek11 testfest
Adding testcases to validate imageloadfont input parameter validation, tests were developed at #tek11 testfest
reuse code
reuse code
reuse code
Removed test since there's no more safe_mode in PHP >= 5.4.
Removed test since there's no more safe_mode in PHP >= 5.4.
MFH: Arithmetic speedup. Inlined most probable code-paths for arithmetic operations directly into executor.
fix macros
fix macros
fix macros
Removed test for functionality available in 5.4+
Removed unnecessary rinit/rshutdown
Removed unnecessary rinit/rshutdown
Removed unnecessary rinit/rshutdown
Updated qa-release.php notes as per the new qa-release.php syntax
Updated qa-release.php notes as per the new qa-release.php syntax
Updated qa-release.php notes as per the new qa-release.php syntax
- BFN
 -fix bug 54935, php_win_err can lead to crash
 -fix bug 54935, php_win_err can lead to crash
 -fix bug 54935, php_win_err can lead to crash
implement streams metadata API per RFC
implement streams metadata API per RFC
This isn't in
Updated test. touch() emits E_WARNING for bogus values. Updated 5.3 test to look the same.
Updated test. touch() emits E_WARNING for bogus values. Updated 5.3 test to look the same.
Updated test. touch() emits E_WARNING for bogus values. Updated 5.3 test to look the same.
- Add CVE to bug entry
- fix tests, keep EOL as unix style as the str len is used in expect
- fix tests, keep EOL as unix style as the str len is used in expect
- fix tests, keep EOL as unix style as the str len is used in expectf
- make svn-eol LF and use one test for unix and windows
Arithmetic speedup. Inlined most probable code-paths for arithmetic operations directly into executor.
fix some failing tests
fix some failing tests
Increase the overly conservative pcre backtrack limit from 100000 to 1000000
Increase the overly conservative pcre backtrack limit from 100000 to 1000000
Increase the overly conservative pcre backtrack limit from 100000 to 1000000
Allow management of your own padding in openssl_encrypt/decrypt.
Allow management of your own padding in openssl_encrypt/decrypt.
Move LDAP to its own section
Add new functions to UPGRADING
Should probably have a note on the autoconf 2.60+ requirement here
Tidy up ldap paging code and rename the API as discussed in #42060
Tidy up ldap paging code and rename the API as discussed in #42060
Decouple <?= from the short_tags setting and make it always enabled
Decouple <?= from the short_tags setting and make it always enabled
- initial import, will add all libs later
- initial import, will add all libs later
- initial import, will add all libs later
Revert part of the fix for #53339 On OSX we need ssl AND crypto
Revert part of the fix for #53339 On OSX we need ssl AND crypto
Revert part of the fix for #53339 On OSX we need ssl AND crypto
- handle out of memory
- handle out of memory
- handle out of memory
- Keep the old arginfo for now # This change we would E_RECOVERABLE instead of E_WARNING # and needs some more review, as well fixing ~80 tests
- Keep the old arginfo for now # This change we would E_RECOVERABLE instead of E_WARNING # and needs some more review, as well fixing ~80 tests
Commiting r311138 into the 5.3 branch - fix to SimpleXML get properties hash
ZEND_THREAD_SAFE and ZEND_DEBUG_BUILD are not meant to be case insensitive
ZEND_THREAD_SAFE and ZEND_DEBUG_BUILD are not meant to be case insensitive
Use iterator when necessary to get the full properties hash - consistent with count (see test: ext/simplexml/tests/034.phpt)
- WS
- WS
exchange a "trap" with an error
exchange a "trap" with an error
exchange a "trap" with an error
- Move the field access behind the check # Only called from one place where the connection is checked, but # playing safe, again (parfait)
- Move the field access behind the check # Only called from one place where the connection is checked, but # playing safe, again (parfait)
- Move the field access behind the check # Only called from one place where the connection is checked, but # playing safe, again (parfait)
adding an XFAIL, as we have an open bug for this test
adding an XFAIL, as we have an open bug for this test
adding an XFAIL, as we have an open bug for this test
adding an XFAIL, as we have an open bug for this test
adding an XFAIL, as we have an open bug for this test
adding an XFAIL, as we have an open bug for this test
set the timezone to UTC as suggested by Alexey Shein, and adding an SKIPIF as this test was originaly intended to be windows only
set the timezone to UTC as suggested by Alexey Shein, and adding an SKIPIF as this test was originaly intended to be windows only
set the timezone to UTC as suggested by Alexey Shein, and adding an SKIPIF as this test was originaly intended to be windows only
fix the test with the removal of the unnecessary newline
fix the test with the removal of the unnecessary newline
fix the test with the removal of the unnecessary newline
adding the serialize_precision=100 for the tests, credits to Mats Lindh for reporting it
adding the serialize_precision=100 for the tests, credits to Mats Lindh for reporting it
adding the serialize_precision=100 for the tests, credits to Mats Lindh for reporting it
removing XFAIL as #39863 has already been fixed
removing XFAIL as #39863 has already been fixed
removing XFAIL as #39863 has already been fixed
reverting 311103,311105-311109, will commit them to all three branches
- Handle error if tempfile can't be opened, found by parfait
- Handle error if tempfile can't be opened, found by parfait
- Handle error if tempfile can't be opened, found by parfait
adding an XFAIL, as we have an open bug for this test
adding an XFAIL, as we have an open bug for this test
fix the test via setting the timezone to UTC as suggested by Alexey Shein, and adding an SKIPIF as this test was originaly intended for windows only, maybe we could drop this, as we don't support VC6 anymore
fix the test with the removal of the unnecessary newline
adding the serialize_precision=100 for the tests, credits to Mats Lindh for reporting it
removing XFAIL as #39863 has already been fixed
oops, can't use that macro here
oops, can't use that macro here
Suppress a dozen unused return value warnings in places where the return value is really not useful to us.
Suppress a dozen unused return value warnings in places where the return value is really not useful to us.
Add php_ignore_value() macro to suppress unused return value warnings from gcc. There are times when we really don't care about the return value and this will cleanly tell gcc.
Add php_ignore_value() macro to suppress unused return value warnings from gcc. There are times when we really don't care about the return value and this will cleanly tell gcc.
- Move the access behind the check. # I can't find an unsafe call, but let's play safe
- Move the access behind the check. # I can't find an unsafe call, but let's play safe
- Move the access behind the check. # I can't find an unsafe call, but let's play safe
Get rid of autoconf warnings
Get rid of autoconf warnings
- version
Make the version match the branch
Drop support for autoconf < 2.60 in trunk and the new PHP_5_4 branch. autoconf >= 2.60 should finally be working now.
Drop support for autoconf < 2.60 in trunk and the new PHP_5_4 branch. autoconf >= 2.60 should finally be working now.
Oops, can't cache it here because it won't work in autoconf2.13 and we still support that version in this branch
Cache the PDO include path
Missed merging this into the new PHP_5_4 branch
Cache the pdo include path
Cache the pdo include path
We can't really predict what will happen on an unknown host lookup since bogus ISPs like Comcast and many others try to "help" by resolving everything to their own search page.
We can't really predict what will happen on an unknown host lookup since bogus ISPs like Comcast and many others try to "help" by resolving everything to their own search page.
forgot tokenizer...
forgot tokenizer...
initiate 5.4 branch
removing scalar types in trunk
en_US locale preferred output has AM/PM and also the timezone
en_US locale preferred output has AM/PM and also the timezone
- cvs2svn changes for the RELEASE_PROCESS
Make sure 'E' is included in the variables_order, otherwise this test won't work.
Make sure 'E' is included in the variables_order, otherwise this test won't work.
Update bundled PCRE to 8.12
Update bundled PCRE to 8.12
Update bundled SQLite to 3.7.6.2
Update bundled SQLite to 3.7.6.2
Check headers first and let the CHECK_LIBRARY macro handle checking for the library. This makes it correctly handle non-standard system paths as long as gcc knows about them. Should fix the build on Ubuntu natty.
Check headers first and let the CHECK_LIBRARY macro handle checking for the library. This makes it correctly handle non-standard system paths as long as gcc knows about them. Should fix the build on Ubuntu natty.
Added missing date_default_timezone_set('UTC'); to the appropriate tests. A few now pass by not showing the timezone warning.
Added missing date_default_timezone_set('UTC'); to the appropriate tests. A few now pass by not showing the timezone warning.
fixed typos in tests ucd-snmp epoch is over, drop legacy memory allocation (non e*) tune 'buggy snmp_snprint_value' detection on some systems
Turns out that more than 1% of users clocks are more than a year out of date, this causes cookies to never get deleted since the date is in the future.
Turns out that more than 1% of users clocks are more than a year out of date, this causes cookies to never get deleted since the date is in the future.
method renaming: SNMP::get_errno() -> SNMP::getErrno() SNMP::get_error() -> SNMP::getError()
remove method open, __construct is enough
here comes the news
* new option for SNMP::get: force keys of return array be as in request array * new option for SNMP::walk: use suffix of OID for keys in return array, not full OID
fix error reporting on OID not increasing calling arguments markup
- BFN #54681
add the BLOCK_LEAVE macro for non-gcc and non-win
add the BLOCK_LEAVE macro for non-gcc and non-win
reorganize the DBG_ macros, add DBG_BLOCK_XXX
reorganize the DBG_ macros, add DBG_BLOCK_XXX
fix valgrind warning
fix tests
fix tests
fix test
fix test
fix CLI tests failing because of new OB API
fix tests
fix tests
extend the API in the backward compatible way
fix segfault in ext/standard/tests/network/http-stream.phpt
fix ZTS build for 5_3, too
- Updated to version 2011.7 (2011g)
- Updated to version 2011.7 (2011g)
fix method name in JsonSerializable exception message
Added support for CURLOPT_MAX_RECV_SPEED_LARGE and CURLOPT_MAX_SEND_SPEED_LARGE. FR #51815 # MFH. This addition was already committed to trunk and is backported as requested in #54622
#doc Added 3rd parameter to filter_var_array() and filter_input_array() functions that allows disabling addition of empty elements
#doc Added 3rd parameter to filter_var_array() and filter_input_array() functions that allows disabling addition of empty elements
Regenerate from the doc sources
Regenerate from the doc sources
Someone fixed these in trunk and didn't backport to PHP_5_3
MFH: The project calls itself OpenSSL and not openSSL, so let's keep it that way in our code as well.
The project calls itself OpenSSL and not openSSL, so let's keep it that way in our code as well.
- keep node creation check
- keep node creation check
- keep inode creation check
- keep inode creation check
SSLV2 patch cleanup
SSLV2 patch cleanup
- fix use of unitiliazed var
- fix use of unitiliazed var
Support for openssl without SSLv2 supprot compiled in. Distros are starting to remove support now and this wasn't compiling anymore on my Debian dev box.
Support for openssl without SSLv2 supprot compiled in. Distros are starting to remove support now and this wasn't compiling anymore on my Debian dev box.
2011
2011
its force-quit, not -exit (yawk)
its force-quit, not -exit (yawk)
Revert bug #54454 fix from PHP_5_3 branch to avoid BC break in minor release
- not desired yt
- fix build >(btw, has novell man pages too?)
- fix build >(btw, has novell man pages too?)
Add an --man-dir to php-config too
Add an --man-dir to php-config too
Expose PHP_MANDIR Useful for apps (like the pear installer, phd, .. etc) to install their manpages into the same dir as php did :]
Expose PHP_MANDIR Useful for apps (like the pear installer, phd, .. etc) to install their manpages into the same dir as php did :]
implement FR #54540 - Allow loading of arbitrary resource bundles when fallback is disabled
implement FR #54540 - Allow loading of arbitrary resource bundles when fallback is disabled
Implement FR #48587 (MySQL PDO driver doesn't support SSL connections)
Implement FR #48587 (MySQL PDO driver doesn't support SSL connections)
Changed initialization order to workaround against crashes after memory overflow
Improved GC to avaid reconstruction of HashTables for object properties
add CVE
- Remove undesired line (reported by Gökhan Özbulak)
- Remove undesired line (reported by Gökhan Özbulak)
fix bug #54238 (use-after-free in substr_replace())
fix bug #54238 (use-after-free in substr_replace())
fix typo
Add optional argument to debug_backtrace() and debug_print_backtrace() to limit the amount of stack frames returned.
Missed tests
Missed tests
Implement FR #54459 (Range function accuracy) by changing the way range() calculates values when used with floating point bounds/step.
Implement FR #54459 (Range function accuracy) by changing the way range() calculates values when used with floating point bounds/step.
- Updated UPGRADING now that multicast support was decided   trunk only.
* Net-SNMP version detection and proper processing * more UCD-SNMP-related code removal
* added detection and walkaround for net-snmp library bug (net-snmp BUGid 2027834) * drop UCD-SNMP support, R.I.P.
- Make SplFileInfo::_bad_state_ex final.
- Removed unused variable (Pierrick)
- Improved message and version checking
- Improved message and version checking
- add CURLINFO_REDIRECT_URL
- add CURLINFO_REDIRECT_URL
- [doc] add ini option to set the default cainfo file, in case none was set at compile time
- Updated to version 2011.5 (2011e)
- Updated to version 2011.5 (2011e)
- fix bug #54423, fix build in trunk, introduce by previous related commit
fix bug #54423 (classes from dl()'ed extensions are not destroyed)
fix bug #54423 (classes from dl()'ed extensions are not destroyed)
- not used on win
- fix build, should fix that code too on non win (wondering if that part was working at all)
- attempt to fix build, 1st error
- fix build
Refactor OCI8 config.m4: improve messages and merge similar conditionals
Refactor OCI8 config.m4: improve messages and merge similar conditionals
- BFN
- not applied yet
- re enable static analyzer, crash fixed with snapshot builds
- re enable static analyzer, crash fixed with snapshot builds
MFB (r309775): fix last commit
fix last commit:  - fix code coverage build  - spread static love
- Improved upon r309729. - Extented strategy to remaining the classes on spl_directory.c, even those that don't crash. - UPGRADING. - Better bug54384.phpt, with all the classes covered.
UPGRADING
Added CallbackFilterIterator and RecursiveCallbackFilterIterator classes
added info about changes in SNMP extension
Update of mysqlnd version. This has been forgotten when introducing set_autocommit, tx_commit, tx_rollback calls (http://svn.php.net/viewvc?view=revision&revision=308669).
here comes the news
fix buffer overflow - overwriting with 0x0, due to unchecked buffer size. This can be easily workarouned on existing unpatched systems by increasing mysqlnd.net_cmd_buffer_size ini variable to more than 8k
fix buffer overflow - overwriting with 0x0, due to unchecked buffer size. This can be easily workarouned on existing unpatched systems by increasing mysqlnd.net_cmd_buffer_size ini variable to more than 8k
Limit test with 65k params, should crash mysqlnd
Limit test with 65k params, should crash mysqlnd
Implement request #54355 (Test for de_DE doesn't use UTF-8 locales). Patch by Ondřej Surý.
Implement request #54355 (Test for de_DE doesn't use UTF-8 locales). Patch by Ondřej Surý.
Coverage for a 'silent server protocol change' from the past for which both mysqlnd and libmysql have workarounds.
Coverage for a 'silent server protocol change' from the past for which both mysqlnd and libmysql have workarounds.
Bah, these should have been in the last commit too. Update expected output for further tests that now generate warnings after r306931.
Update test that now generates a warning after r306931, which increased the error you get when silently casting an empty variable to an object to an E_WARNING from E_STRICT.
- Updating UPGRADING for r309516 and modest merge to 5.3.
- Updating UPGRADING for r309516 and modest merge to 5.3.
palloc is long dead, use more appropriate name
palloc is long dead, use more appropriate name
remove more unneeded includes
remove more unneeded includes
remove unneeded includes
remove unneeded includes
throw out legacy code, that never was used for something useful. Was added for QC but QC is now a plugin, not part of the core.
- Make fclose() actually close stream, even when the resource refcount is > 1.   This reverts the fix for bug #24557. - Make php_stream_free delete the stream from the resources list, not merely   decrease its refcount, as a single call to zend_list_delete does. #Not worth the risk merging to 5.3. While change #2 may prevent some segfaults, #a quick and dirty survey to the codebase only showed calls to php_stream_close #or php_stream_free on streams allocated in the same function, which would have #refcount == 1. May be reconsidered.
follow CS:  - method set_security should be named as setSecurity  - SNMP_VERSION_2C constant
- Normalized line endings, added native eol-style.
- Adding copyright headers to the new files, gotta do something about the   windows line endings too, but I'm separating the commits.
revert r309111 (name_len was not a typo)
- BFN
Add the libraries we actually test and need for LDAP and OpenSSL, fixes bug #53339 Patch by Clint Byrum
Add the libraries we actually test and need for LDAP and OpenSSL, fixes bug #53339 Patch by Clint Byrum
add a proxy for sppintf and vspprintf
WS
new function/methods - mysqlnd_stmt_flush. Removing code duplication
less trace info
split mysqlnd_debug.c in 3 files
- Replaced calls to getprotobyname by constants to avoid   unnecessarily hitting /etc/protocols on MINIT.
Test coverage for some of the cases where LAST_INSERT_ID() and API *_insert_id() differ as documented in the MySQL manual in particular the C API reference section
Test coverage for some of the cases where LAST_INSERT_ID() and API *_insert_id() differ as documented in the MySQL manual in particular the C API reference section
- BFN
here comes the news
- Back to dev
PHP 5.3.6
- Revert r309308 temporarily to get 5.3.6 out
- news entry for the setlocale fix
- MFH: make setlocale thread only, drastically reduce TS related crashes in error mgt and other parts like pcre, and actually a good thing (tm)
Remove unused macros
allocate persistently
compiler warnings fixed
fix UMR when setting forward string offset
fix UMR when variable name is an object and __toString is used # zend_call_function checks IS_REF on This
- windows only
- make setlocale thread only, drastically reduce TS related crashes in error mgt and other parts like pcre, and actually a good thing (tm)
- BFN
- Updated to version 2011.4 (2011d)
- Updated to version 2011.4 (2011d)
- Missing fixes for bug #54247
- Missing fixes for bug #54247
- Added multicast support to the sockets extension (bug #40510).
# Revert bug fix (will commit it again on 5.3 branch when 5.3.6 will be released)
Remove unused variable
fix typo in SNMP_SNPRINT_VALUE usage: use val_len, not name_length
fixed tests to match the new float precision of 53, as described in bug 47168
fixed tests to match the new float precision of 53, as described in bug 47168
Add a version number to timelib for other projects that use it.
Add a version number to timelib for other projects that use it.
Close [PHP-BUG] Req #54152... Apache 2.3.12 (and later) will now work correctly with PHP's fcgi impl with this patch.
Close [PHP-BUG] Req #54152... Apache 2.3.12 (and later) will now work correctly with PHP's fcgi impl with this patch.
- PHP 5.3.6RC3
- Version++
- Version++
fix typppo
- assign CVE
- Missing "reported by" info
- Updated to version 2011.3 (2011c)
- Updated to version 2011.3 (2011c)
- Reverted fix for bug #54167 (to be committed in soon)
* tune snmp2_walk.phpt * more net-snmp v5.3 compatibility (OPAQUE_SPECIAL_TYPES)
* fix warning about redefining REGISTER_PDO_CLASS_CONST_LONG (damn copy'n'paste) * tuned two unit test that failed at gcov.php.net/PHP_HEAD
- Be more consistent in these instructions
fix warnings mentioned in 'Parameter Parsing Report'
Back to -dev
PHP 5.2.6RC2
- Enable windows build system to accept paths containing spaces.
- Possible fix for Bug #54108 (valgrind can not be found if located outside of system's default PATH)
- Possible fix for Bug #54108 (valgrind can not be found if located outside of system's default PATH)
remove compiler warnings fix various memory leaks seen with --enable-debug
* new methods get_errno, get_error to get errno and error string     of last SNMP-related error * formatting markup * some fixes in max_oids logic: NULL will set it to default value,     do not allow non-positive user-supplied values * unit tests for changes
fix parse errors for non_repeaters & max_repetitions: aligment errors
even better fix
fix plugin counting, this is trunk only
use ifdef all-around in the revert
revert also the version_id
revert to previous behavior
move from macros to functions, which can be overwritten, if needed
move from macros to functions, which can be overwritten, if needed
- fix regression (carsten_sttgt@gmx.de)
MFB: fix lcov build (r308657)
fix lcov build
-not needed, buildconf helps...
- missing files
fix invalid memory read. Thank you, valgrind
fix invalid memory read. Thank you, valgrind
- fix bug #54061, memory leak in openssl_decrypt
- fix bug #54061, memory leak in openssl_decrypt
- fix bug #54061, memory leak in openssl_decrypt
- fix bug #54061, memory leak in openssl_decrypt
- fix test 025
- fix bug #54060, memory leak in openssl_encrypt
- fix bug #54060, memory leak in openssl_encrypt
- Removed dead defines.
- Implement FR#53878 Interactive shell should work with shared readline extension
push most of SNMP query options into objid_query structure
- PHP_STREAM_OPTION_WRITE_BUFFER no longer disables the read buffer of a plain   stream when 0 is given as the value. - PHP_STREAM_OPTION_WRITE_BUFFER no longer changes the chunk size in socket   streams. - Added stream_set_chunk_size() function. - Some signedness fixes. - Test for commit r308474, now that it's possible to actually test it.
- Changed return value in userspace stream set_option to "not implemented",   instead of failure. #Currently, there's no way to test this, because the only operations that have #a default implementation, set_chunk_size and set_read_buffer are either not #exposed or, in the 2nd case, completely delegated to the user implementation, #which can only return true/false, not "not implemented" (and not implementing #the set_option method in the userspace stream results in error).
- bug #54002 entry
enable HAVE_SHUTDOWN_SNMP_LOGGING
Some updates for the release process, mostly cvs->svn things
- Classes that implement stream wrappers can define a method called   stream_truncate that will respond to truncation, e.g. through ftruncate.   Closes feature request #53888.
Back to -dev
Remove dash
PHP 5.3.6RC1
- WS
fixed a problem in mysqlnd. 0 was always as num_rows returned for unbuffered sets (text protocol and PS).
fixed a problem in mysqlnd. 0 was always as num_rows returned for unbuffered sets (text protocol and PS).
- Updated to version 2011.2 (2011b)
- Updated to version 2011.2 (2011b)
- fix the fix (Dmitry) and ensure that it builds everywhere, can someone test on solaris&co pls?
- fix the fix (Dmitry) and ensure that it builds everywhere, can someone test on solaris&co pls?
- unused var
- unused var
- fix intl build with ICU < 4.2, windows part
- fix build with ICU < 4.2, add ICU_VERSION for m4 checks
- fix build with ICU < 4.2, add ICU_VERSION for m4 checks
MFH fixed bug #52784 (Race condition when handling many concurrent signals)
bfn for #54016
Bug#54016 (finfo_file() Cannot determine filetype in archives)
Bug#54016 (finfo_file() Cannot determine filetype in archives)
-Bug #54002, fix windows build, use the relevant values in the warnings
-Bug #54002, fix windows build, use the relevant values in the warnings
- fix bug #54002, exif_read_data crashes on crafted tags
- fix bug #54002, exif_read_data crashes on crafted tags
-  add CVE
Oopsie, fix typo in UPGRADING
MFH - Added SplFileInfo::getExtension() (FR #48767)
Show XFAIL reasons (Daniel Convissor)
Show XFAIL reasons (Daniel Convissor)
rm trailing whitespace
rm trailing whitespace
Add DateInterval format() tests.
Add DateInterval format() tests.
Add extensive tests for DateTime::diff(), add() and sub().
Add extensive tests for DateTime::diff(), add() and sub().
- missing
- missing
- Changed php.ini files to match the hard-coded default for serialize_precision.
- Changed php.ini files to match the hard-coded default for serialize_precision.
- Changed default serialize_precision from 100 to 17, as discussed in internals.
- Changed default serialize_precision from 100 to 17, as discussed in internals.
fix compile warning
fix compile warning
- null deref fix
- null deref fix
- disable realloc warning about not checking its return value, 100% valid but way too many of them for now, reduce noises
- disable realloc warning about not checking its return value, 100% valid but way too many of them for now, reduce noises
- Changed port validation introduced in commit #308035 to consider   negative ports and ports > 65535 as invalid.   The tests that fail due to #308035 in the standard ext were not   fixed. If the behavior in those tests turns out to be the   desirable one, both this commit and #308035 ought to be reverted   or at least adapted.
- Changed port validation introduced in commit #308035 to consider   negative ports and ports > 65535 as invalid.   The tests that fail due to #308035 in the standard ext were not   fixed. If the behavior in those tests turns out to be the   desirable one, both this commit and #308035 ought to be reverted   or at least adapted.
fix crash caused by incorrect offset altering
added r/o info property with basic session info, fix crash in _get_properties in trunk
Change the way HAVE_GLOB is dealt with in ext/zip per IRC conversation with Pierre.
Change the way HAVE_GLOB is dealt with in ext/zip per IRC conversation with Pierre.
Update 5.3.6 NEWS to use a consistent bug ordering. I've gone with Pierre's order on Internals for now (new features, then non-bug tracker fixes, then bugs in descending order of bug number) -- feel free to bikeshed this on Internals or IRC, but we need to pick _something_, because it's all over the place at present. (And yes, I'm partly to blame for that too.)
XFAIL these for the moment, Kalle totally broke these in 298241 when removing register_globals
Add header_register_callback(), allows a userland function to be called as all the headers are being sent and after all of the default headers have been merged.
- Simpler fix for bug #53915.
- Simpler fix for bug #53915.
fix warnings. These checks are not needed because param_no is unsigned, it wasn't in the beginning.
fix warnings. These checks are not needed because param_no is unsigned, it wasn't in the beginning.
- fix build, wrong version id
- WS
- WS
preprocessed changes made in rev.307894: keeping ext/snmp backwards compatible
- Improved SNMP extension:   . Allow ~infinite OIDs in GET/GETNEXT/SET queries. Autochunk them to max_oids     upon request.
- Don't lower case setting names; some of them actually have upper case   characters.
- Don't lower case setting names; some of them actually have upper case   characters.
Add two new enums constants from the server
Add two new enums constants from the server
Don't lose this data anymore. It worked without the fix, but it with it is just correct (trunk only).
revert commit 307876
Improved SNMP extension. FR #53594
fix bug 53885 (ZipArchive segfault with FL_UNCHANGED on empty archive)
fix bug 53885 (ZipArchive segfault with FL_UNCHANGED on empty archive)
- remove cpystrn from FPM and use strlcpy instead.
- remove cpystrn from FPM and use strlcpy instead.
Revert the UPGRADING change in r307807, since it's actually completely pointless, as Johannes pointed out.
clear error before doing anything, because we can get trapped by previous error : php -r '$link = mysqli_init(); var_dump($link->real_connect("127.0.0.1", "unknown", "unknown")); var_dump($link->real_connect("127.0.0.1", "known", "password"));'
Don't expect a certain server reply, it is undefined what happens.
Don't expect a certain server reply, it is undefined what happens.
Added ability to connect to HTTPS sites through proxy with basic authentication using stream_context/http/header/Proxy-Authorization
Added ability to connect to HTTPS sites through proxy with basic authentication using stream_context/http/header/Proxy-Authorization
Added ability to connect to HTTPS sites through proxy with basic authentication using stream_context/http/header/Proxy-Authorization
a better habitat
fix a crash in new code
Added support for "extra" parameter for PGNotify().
- #53837
Check PAM auth plugin build in to mysqlnd. I am afraid one cant do much better testing without making many assumptions on the server setup.
- Let's keep this consistent in the whole file.
- Let's keep this consistent in the whole file.
Handle deprecation messages differently in tests to reduce test differences between 5.3 and trunk: suppress warnings by default, check warnings in a dedicated test
Handle deprecation messages differently in tests to reduce test differences between 5.3 and trunk: suppress warnings by default, check warnings in a dedicated test
Always bail about deprecation, make warning visible. It is documented to be deprecated in the 5.3 manual but the deprecation warning was tied to trace_mode=1 (as of 2002 or the like).
removed un-used variable
removed un-used variable
- Updated to version 2011.1 (2011a)
- Updated to version 2011.1 (2011a)
fix typos
small cleanups
Handle MySQL 5.5 authentication features. Authentication protocol can be changed, a new raw packet is introduced, which includes only the "encrypted" data for the auth plugin, sent after change protocol (0xFE) is sent to the client.
Add imap_fetchmime
Add imap_fetchmime
fix tests
fix tests
- local redeclaration
- local redeclaration
- kill local redeclaration by using a less common name
- kill local redeclaration by using a less common name
- this function is only in trunk
- Removed accidental changes
- should not have been applied
- don't continue if no valid option value
- don't continue if no valid option value
- be sure that we got tzid by adding a default case
- be sure that we got tzid by adding a default case
- fail when no known op are given
- fail when no known op are given
- unused var
- unused var
- fail when no known op are given
- fail when no known op are given
- kill local redeclaration
- kill local redeclaration
- init err (and simplify)
- init err (and simplify)
- init err
- no need of assert here
- no need of assert here
- check if strdup succeeds
- check if strdup succeeds
 - fix warning about undefined zend_multibyte_set_filter and zend_multibyte_yyinput_again, why are they not in zend_multibyte.h btw?
- force static, can't be built yet shared anyway
- force static, can't be built yet shared anyway
- xp sp3 does not have them
fix zts build
fix ZTS build
- WS
- WS
- avoid local redeclaration
- avoid local redeclaration
- malloc may fail
- malloc may fail
- path len check and fix buffer overrun
- path len check and fix buffer overrun
Win32 build fix
Win32 build fix
Added checks for malformated FastCGI requests (Edgar Frank)
Added checks for malformated FastCGI requests (Edgar Frank)
- Hopefully finally fixed the mess in rev 307562 and rev 307563.
- Hopefully finally fixed the mess in rev 307562 and rev 307563.
- clarity
- #53577 and cleanup
- fix regression introduced in 5.3.4 in open_basedir on windows/novell with trailing fwd slash
- fix regression introduced in 5.3.4 in open_basedir on windows/novell with trailing fwd slash
- Implemented FR #39771 (Made DOMDocument::saveHTML accept an optional   DOMNode like DOMDocument::saveXML).
- Implemented FR #39771 (Made DOMDocument::saveHTML accept an optional   DOMNode like DOMDocument::saveXML).
- fix the fix (wrong test)
- fix the fix (wrong test)
- Enforce security in the fastcgi protocol parsing.
- Enforce security in the fastcgi protocol parsing.
- path len sanity check
- path len sanity check
- don't try to access if calloc fails (quick review of its usage: seems that the stats member is validated in other places, to be confirmed)
- don't try to access if calloc fails (quick review of its usage: seems that the stats member is validated in other places, to be confirmed)
- fix NULL derefencing
- fix NULL derefencing
MFT: Added 'db' and 'catalog' keys to the field fetching functions (FR #39847)
Added 'catalog' to the field fetching functions in mysqli (Thanks to Johannes for the headsup)
Remove this void comment (c/p mistake)
Remove this void comment (c/p mistake)
MFT: Implemented FR #47802 (Support for setting character sets in DSN strings)
MFT: Implemented FR #47802 (Support for setting character sets in DSN strings)
Add options to debug_backtrace functions
Add options to debug_backtrace functions
Update on the mysqlnd auth plugins, changed the plugin structure and where they load themselves. 0xFE packets (method switch) needs to be done, additional wire-level packet to be created to be parsed and the packet doesn't fit the PACKET_OK structure anymore.
merge from branch
fix more parameter stuff, now it is complete
pass data which is available
add missing dl() function to FPM SAPI
add missing dl() function to FPM SAPI
Change things to allow passing of the password length to mysqlnd. This is needed as a password might include a \0 and thus we need to be binary safe.
gcc barks about these, so clean it
-disable the analyzer for the snapshot in 5.3 too
intl: Add Spoofchecker cloning, fix typo in prototype, rename some variables and tidy syntax.
revert non-BC change in 5.3
Add Spoofchecker to intl extension.
grok the MySQL 5.5 extended handshake. Move the authentication routines, the native ones, to separate file and encapsulate them in a plugin. Depending on the server version and what the server requests (or doesn't in old versions) load the authentication plugin to handle it. Currently only the 4.1+ authentication is supported. More to come
Use common code to handle initial authentication and COM_CHANGE_USER
Added missing success check around chmod() for windows during temp file creation
Added missing success check around chmod() for windows during temp file creation
- do not enable analyzer for snapshot
plug a leak
new flag
new flag
- remove local redeclaration
- remove local redeclaration
- possible NULL deref
- possible NULL deref
- local redeclaration
- local redeclaration
- WS
- some more possible NULL deref
- some more possible NULL deref
- fix possible NULL deref
- fix possible NULL deref
- new sec flags should not be on by default for 5.3, yet
- add configure option to enable the builtin static analyzer (will be enabled for snaps' log)
- add configure option to enable the builtin static analyzer (will be enabled for snaps' log)
Added trait_exists() [TRAITS] [DOC]
- debug code--
- let try to fix pecl header install so we can do the same than unix, install them in ext/<extname> instead of pecl<extname>
- let try to fix pecl header install so we can do the same than unix, install them in ext/<extname> instead of pecl<extname>
MFH: added an option to http_build_query for RFC-3986 based url-encoding.
added an option to http_build_query for RFC-3986 based url-encoding.
- enable ASLR and NXCOMPAT by default
Implemented FR #39847 (mysqli_fetch_[field|fields|field_direct] need to return db)
Added test case for #47802 and fixed macro name after the move to mysql_options()
- define the php*.lib/dll names
- define the php*.lib/dll names
Update to use mysql_options() instead of mysql_set_character_set() (As suggested by Andrey)
- missing add header
Implemented FR #47802, support for character sets in DSN strings for PDO_MYSQL
Proper fix for Bug #53503      mysqli::query returns false after successful LOAD DATA query which fixes als #56349, same behavior but in ext/mysql. Both due to a bug in mysqlnd. Never was a problem with libmysql. Also fixed the 53503's test case as it always reported PASS, even when there should have been a failure.
Proper fix for Bug #53503      mysqli::query returns false after successful LOAD DATA query which fixes als #56349, same behavior but in ext/mysql. Both due to a bug in mysqlnd. Never was a problem with libmysql. Also fixed the 53503's test case as it always reported PASS, even when there should have been a failure.
Implement request #53684 (Deprecated HTML in sample php.ini).
Implement request #53684 (Deprecated HTML in sample php.ini).
back to dev
re-tag
- add CVE (too late for the release tho')
- add CVE (too late for the release tho')
Implement request #53659 (Implementing RegexIterator::getRegex() method). Patch by Joshua Thijssen.
Remove empty files left when r306542 was reverted in r306552.
Remove empty files left when r306542 was reverted in r306552.
Implemented FR #53466 (SQLite3Result::columnType() should return false after all of the rows have been fetched).
Implemented FR #53466 (SQLite3Result::columnType() should return false after all of the rows have been fetched).
Implement SplObjectStorage::removeAllExcept (Patch by Matthey Turland)
Implement SplObjectStorage::removeAllExcept (Patch by Matthey Turland)
Back to dev
5.2.17
MFH: Optimize unix timestamp to date-string conversion for very high year values
Added test
Added test
- This will be PHP 5.3.6
Optimize unix timestamp to date-string conversion for very high year values
Optimize unix timestamp to date-string conversion for very high year values
- revert rev. 307044
- revert rev. 307044
Add test for bug #53632
Add test for bug #53632
Add test for bug #53632
fix unit tests for intl in accordance with new ICU releases
fix unit tests for intl in accordance with new ICU releases
My name is Hannes # And today is my birthday \o/
- useless commented code
Change DEBUG() to TIMELIB_DEBUG(), there are potential conflicts with other libraries that also use this.
Change DEBUG() to TIMELIB_DEBUG(), there are potential conflicts with other libraries that also use this.
- slightly cleaner
- fix crash when argc > 1 and to_zval is NULL (thx tony for the headup)
- kill c++ comment
- stream output support for image outputs functions
Imlement clone for formatters that support it # also some test fixes, more to follow
Imlement clone for formatters that support it # also some test fixes, more to follow
- prevent php(version)lib.(dll|lib) to be overriden
- missing file
- we need the core config.w32 only once
- we need the core config.w32 only once
- silent copy
- use the ext deps list for phpize's ADD_EXTENSION_DEP function
- use the ext deps list for phpize's ADD_EXTENSION_DEP function
- typo, and remove undesired committed part
- typo
- typo
- generate a list of ext and how they are built, should be updated by phpize'd make (un)install as well, later
- generate a list of ext and how they are built, should be updated by phpize'd make (un)install as well, later
- fix ADD_EXTENSION_DEP detection
- missing file
- Year++
- Year++
- Year++
- Year++
- Year++
- Year++
Silently casting an empty string, null or false into an object by adding a property is pretty non-intuitive. If the same value was 1 or true you get a warning and it halts.
Add SQLite3_Stmt::readOnly for checking if a statement is read only
Add SQLite3_Stmt::readOnly for checking if a statement is read only
- Do not violate php_stream abstraction and use php_stream_tell instead of accessing the field .position. #Should have no behavior changes.
- Do not violate php_stream abstraction and use php_stream_tell instead of accessing the field .position. #Should have no behavior changes.
New test for stream_meta_data($zipstream)
New test for stream_meta_data($zipstream)
removed extra ?> from the FILE section
removed extra ?> from the FILE section
- WS
- WS
C89 fix
extending the API interface - plugins can register themselves with a structure and can be searched. Every plugin can have statistics and they are shown under the statistics of mysqlnd in MINFO.
fix segfault when node is NULL
fix segfault when node is NULL
initialize script_encoding_list (reported by Gustavo Lopes)
typo
typo
fix crash with entity declarations
fix crash with entity declarations
SplFileObject_fgetcsv files: SplFileObject__fgetcsv.csv used instead of SplFileObject::fgetcsv.csv, as to make this naming convetion windows legitimate
SplFileObject_fgetcsv files: SplFileObject__fgetcsv.csv used instead of SplFileObject::fgetcsv.csv, as to make this naming convetion windows legitimate
fixed 6 tests to pass on non-linux os, by removing the generic linux error string from the exp result. on socket_strerror on the other hand, added to the SKIPIF a condition to run on linux only, as the test checks specifically various error strings
fixed 6 tests to pass on non-linux os, by removing the generic linux error string from the exp result. on socket_strerror on the other hand, added to the SKIPIF a condition to run on linux only, as the test checks specifically various error strings
fixed 6 tests to pass on non-linux os, by removing the generic linux error string from the exp result. on socket_strerror on the other hand, added to the SKIPIF a condition to run on linux only, as the test checks specifically various error strings
using PWD which is supported by run-tests.php, rather than $cwd
using PWD which is supported by run-tests.php, rather than $cwd
Upgraded\ bundled\ PCRE\ to\ version\ 8.11.
Upgraded\ bundled\ PCRE\ to\ version\ 8.11.
NEWS for FR #48767 (SplFileInfo::getExtension())
Implemented FR #48767 (SplFileInfo::getExtension())
removed unused var
- Revert of revision 306542, turns out the semantics of compare() are   different in SplMinHeap and SplMaxHeap.
- Revert of revision 306542, turns out the semantics of compare() are   different in SplMinHeap and SplMaxHeap.
- Update ini descriptions.  It is still possible that zend.multibyte will be removed in the near future as it is confirmed to not impose any significant overhead with the standard configuration even when it is enabled.
fixed compile error with VS2008.
Removed dead code. # should not have been commited in the first place.
- Avoid allocating extra buffers. This makes parsing with zend.multibyte enabled as fast as with it disabled.
Added strict handling of properties in traits. # This is the first attempt to implement the properties as discussed on the mailinglist. # RFC is not updated to reflect this changes, yet.
WS
WS
* Refactor zend_multibyte facility.   Now mbstring.script_encoding is superseded by zend.script_encoding.
- Cosmetics again
- Cosmetics
- fix test
 - NEWS update and test related to the NULL poisoning recent fixes
- fix possible crash introduced by the null poisoning patch
- fix leak introduced by the null poisoning patch
- fix leak introduced by the null poisoning patch
- Update credits
- Update credits
- Revert
- Revert
Throw some credit around
Throw some credit around
fix a small bug about affected_rows in the text protocol
fix a small bug about affected_rows in the text protocol
- Typos, WS, CS
- Adding enable_post_data_reading to php.ini-*
count preciser in case of error
count preciser in case of error
back to dev
5.2.16
- we don't bundled fbclient, system version is used
- we don't bundled fbclient, system version is used
- typo
- sync with 5.3
- devel must be done before dist
- fix build with out of src obj dir
- we just reached the tiny cmd lenght limit, let reduce the size of dirs
- $_REQUEST is also JIT global now
- fix header install
- fix header install
added value for PHP_MAXPATHLEN for os which is not windows/linux
- that's not in 5.3
- that's not in 5.3
- add nmake install-sdk (create the devel package) and related sub rules
- add nmake install-sdk (create the devel package) and related sub rules
 -add a link to snmp install doc about the MIBS data, remove static or removed exts
 -add a link to snmp install doc about the MIBS data, remove static or removed exts
- MFH trailing slashes detection
- no need to diplay that
- phpize support merge from 5.3
- that should not have been applied
- add phpize support for windows, need a nmake install for now (nmake devel-pkg version is coming), works exactly the same as on unix, or should :)
 -ws
Revert fix for bug #53493 to be compliant with the XML specification
Revert fix for bug #53493 to be compliant with the XML specification
MFH: fixed bug #53377 (imap_mime_header_decode() doesn't ignore \t during long MIME header unfolding).
MFH: implement FR #53447 (Cannot disable SessionTicket extension for servers that do not support it). Includes Tony's subsequent commit to fix a segfault.
add & fix tests for lenient parsing
- Cosmetics
sqlite3 lib news
- Added the + modifier to parseFromFormat to allow trailing text in the   string to parse without throwing an error. #- Patch by Stas, test case by me.
Changed E_ERROR to E_COMPILE_ERROR for Trait compilation errors. #Thanks for catching this Kalle.
- Keep extension order alphabetically #- I guess that's what was intended?
Changed collision warning for Traits to fatal error. #This change is made to have all possible cases of collisions consistently handled as fatal errors. #The reason to have it fatal is that most likely something changed unexpectedly and needs urgent attention by the developer, since it will fail eventually anyway for instance because the expected method is missing in the class. #Discussed in this thread: http://marc.info/?l=php-internals&m=129155790226876
moved the second unlink() to the CLEAN section in the SplFileObject_fwrite_variation* tests
moved the second unlink() to the CLEAN section in the SplFileObject_fwrite_variation* tests
moved the second unlink() to the CLEAN section in the SplFileObject_fwrite_variation* tests
- add PHP_INSTALL_HEADERS to all parts (core&exts) exposing headers, generate the install-headers cmd
- add install-lib(s), remove header for now, will be genarated
Upgraded bundled Sqlite3 to version 3.7.4.
Upgraded bundled Sqlite3 to version 3.7.4.
- Tests and small parsing correction for php://fd wrapper
- Tests and small parsing correction for php://fd wrapper
- Implemented request #26158/bug #53465 (open arbitrary file descriptor with fopen)
- Implemented request #26158/bug #53465 (open arbitrary file descriptor with fopen)
fixed keyLen validation point
- install headers, missed that one
- add initial PHP_INSTALL_HEADERS, one step closer to phpize
- Cosmetics
- I had forgotten to commit UPGRADING (for enable_post_data_processing).
Update for PECL upload that is synced with PHP 5.3.4
Update for PECL upload that is synced with PHP 5.3.4
Add more constants to curl_getinfo(), dependent on cURL version installed so wrapped in ifdefs
- Added test for bug #53512
- Added test for bug #53512
- Added enable_post_data_reading ini option to allow inhibiting POST data consumption.
back to dev
Re-branch 5.2.15
- missing merge fix for #53352
test bug42364 included a superfluous ?>
test bug42364 included a superfluous ?>
pdo_025 expected a certain extra character that is not part of windows output. changed to optional char: %a -> %A
pdo_025 expected a certain extra character that is not part of windows output. changed to optional char: %a -> %A
Back to -dev
Back to dev, one final time ;-)
5.2.15
enable again after 5.3.4 has already been tagged
PHP 5.3.4
curl_setopt() arg: using DIRECTORY_SEPARATOR rather then "/" to make windows tests pass too
curl_setopt() arg: using DIRECTORY_SEPARATOR rather then "/" to make windows tests pass too
curl_setopt() arg: using DIRECTORY_SEPARATOR rather then "/" to make windows tests pass too
fix ZTS build
Removed compile time dependency from ext/mbstring
- new warning in imagepstext
- not anymore in core or builtin
switch this off for the release
- add CVE
Skip additional result sets sent by MySQL 5.5 servers which break the Protocol API (see http://bugs.mysql.com/bug.php?id=58700)
Skip additional result sets sent by MySQL 5.5 servers which break the Protocol API (see http://bugs.mysql.com/bug.php?id=58700)
don't crash if the API is used incorrectly
don't crash if the API is used incorrectly
make sure the stream context is present before looking for any options and fix segfault
- Order
- CS + reorder to match trunk better, removed trailing dots from error messages
- CS and "de-facto" style of returning NULL for failing parse-params, sync partially with PHP_5_3 too (reordering part :)
- Add test for the ob_start($foo); leak/crash bug
- Add test for the ob_start($foo); leak/crash bug
Implement FR #53457 (number_format must support more than one character for thousands separator).
Implemented FR #53447 (Cannot disable SessionTicket extension for servers that do not support it).
Back to dev
5.2.15RC2
- Cosmetics
- some missing entries
fix test after newly introduced constant
fix test after newly introduced constant
- Back to -dev
and export the new constant
and export the new constant
new server constant as of 5.5
new server constant as of 5.5
- PHP 5.3.4RC2
- not TS and useless on server, also not required anymore with the supported windows versions
- not TS and useless on server, also not required anymore with the supported windows versions
WS and cosmethic changes
Minimal fix for bug #53440 (INSTALL file refers to php.ini-dist, should refer to php.ini-production). There are a lot more issues with the INSTALL file, though, which I'll file another bug for.
Minimal fix for bug #53440 (INSTALL file refers to php.ini-dist, should refer to php.ini-production). There are a lot more issues with the INSTALL file, though, which I'll file another bug for.
Remove OCI8 devel status in preparation for PHP 5.3.4 release
Remove OCI8 devel status in preparation for PHP 5.3.4 release
Add Berkeley DB 5.1 support to the DBA extension
Add Berkeley DB 5.1 support to the DBA extension
- fix ts build
Removed old commented function prototypes. # Was referring to old trait-related code that is long gone
Allowed indirect $this access (Scott)
add a comment
- Implemented bug/request #53427 - stream_select doesn't preserve the   keys. This cannot be backported to PHP 5.3 due to a BC break. See   UPGRADING for more information.
Same as before
Missing bits from last commit
C comments instead of C++ comments
Removed unnecessary dependencies
Update INI files per doc bug #53420 (mail.log is poorly documented).
Update INI files per doc bug #53420 (mail.log is poorly documented).
- Reorganize slightly as there was already a date and an intl extension   header/section.
Missing bit from previous commit
- Remove outdated, unmaintained, misleading ChangeLog files
- Remove outdated, unmaintained, misleading ChangeLog files
Implemented FR #53407 (make scandir()'s directory sorting optional).
- cleanup broken double definition of php_win_err and rename it while being there
- Ordering
- Removed unused variable
Removed support for break/continue $var syntax
Removed support for break/continue $var syntax
Added multibyte suppport by default. Previosly php had to be compiled with --enable-zend-multibyte. Now it can be enabled or disabled throug zend.multibyte directive in php.ini (regenerated scanner)
Added multibyte suppport by default. Previosly php had to be compiled with --enable-zend-multibyte. Now it can be enabled or disabled throug zend.multibyte directive in php.ini
- fixed #53352
- fixed #53352
Set svn properties
Explicitly name the added constant
- Update tokenizer data
- New NEWS structure (to be improved)
- Improve test
- Improve test
Added second fix from #50987 that wasn't apart of Ilia's commit
Added second fix from #50987 that wasn't apart of Ilia's commit
Add support for DateTime in datefmt_format
Add support for DateTime in datefmt_format
Remove unreverted duplicate fix for nulls
- Reverted unintended change.
report intl fix
- commit missing upgrading note (sqlite removed)
Kill some more constness warnings in com_dotnet/phar/standard
Kill warnings about constness
Add entry for sqlite
- Move the old sqlite extension to PECL # discussed in http://www.mail-archive.com/internals@lists.php.net/msg47463.html
Update fix proviso now the mentioned Oracle bugfix is available in an Oracle patchset
Back to -dev
- 5.3.4RC1
- path with null entries
- revert part of the null fix, was already applied by Chris
- One more fix for bug #53338 (when copying stuff from other macros, do it all the way.. :)
- fix #39863, do not accept paths with NULL in them. See http://news.php.net/php.internals/50191, trunk will have the patch later (adding a macro and/or changing (some) APIs. Patch by Rasmus
Back to dev
One more try
Back to dev
5.2.15RC1
- Implemented alternative strategy for change in rev #304985 so as to   not to break binary compatibility in the 5.3 branch.
- Revert the ABI changing commit.
- Added section for build system changes in UPGRADING.INTERNALS
- Reversed implementation of FR #44164, pending further consideration.   See rev #304903.
Added tests to for static support of traits. # This was not tested and documented yet. # Updated documentation in the RFC http://wiki.php.net/rfc/horizontalreuse
Some grammar tweaks
Remove unused variables
Remove unused variables
- test for NULL deref fix
- test for NULL deref fix
- NEWS cleanup, please do not mess it anymore :)
- NULL deref fix, patch by Gustavo
- NULL deref fix, patch by Gustavo
- Revert bad changes
typo
- Added comment about binary SAPIs
- Cleanup
- Updated QA and User note maintainers credits
- Updated QA and User note maintainers credits
- Updated QA and User note maintainers credits
- fix (log with level < WARNING before daemonizing were not written to /dev/stderr)
- fix (log with level < WARNING before daemonizing were not written to /dev/stderr)
Improve test cross- DB version portability
Improve test cross- DB version portability
Added missing news
Protect against null bytes in LOB filenames (rasmus)
Protect against null bytes in LOB filenames (rasmus)
-fix build
- fix build
- Added missing test
- Moved leak_variable() to zend_builtin_functions.c (Gustavo)
- Added test relative to the fix in rev #305346.
ws fix
- Altered htmlentities19.phpt (now htmlentities24.phpt) to reflect new default encoding   being UTF-8. - Moved ext/standard/tests/file/htmlentities19.phpt and htmlspecialchars.phpt to the   proper directory (tests/strings instead of tests/file). htmlentities19.phpt had to   be renamed in order not to clash with an existing file.
- allow firebird header to be in the normal deps directory and restore firebird support on win (5.3.4+)
- allow firebird header to be in the normal deps directory and restore firebird support on win (5.3.4+)
- extend the 'i-t' fpm argument to dump configuration file when called twice (-tt)
- extend the 'i-t' fpm argument to dump configuration file when called twice (-tt)
- Added missing void arg checks
- Added missing void arg checks
- Add missing check
- Add missing check
- Implemented FR #53271, FR #52410 (Building multiple PHP binary SAPIs and one SAPI module the same time) # Bug #53271, Bug #52410
- Using ifelse() here is safer, also eases debugging generated configure.
- Simplified the DTrace configure macros, one is enough
- Sync from HEAD.
- Copied test cases (that all fail?!) from 5.3 to trunk.
- MFH: Added support for the ( and ) delimiters/separators to   DateTime::createFromFormat(). - Regenerated the parsers for HEAD and PHP_5_3.
- MFH: Added support for the ( and ) delimiters/separators to   DateTime::createFromFormat(). - Regenerated the parsers for HEAD and PHP_5_3.
- Don't show timezone if it wasn't found while parsing.
- Don't show timezone if it wasn't found while parsing.
- Added support for the ( and ) delimiters/separators to   DateTime::createFromFormat(). #- There are a few more things to come, once ready, I'll regenerate the .c file #  and merge.
- WS + cleanup # Note: # Considering DTrace support: Why does it really need any configure time stuff? # 3 macros for static stuff that could be made much cleaner with simple Makefile.dtrace # addition. The only thing required in configure is that --enable flag part.. #
- WS
- Sync with trunk
Testing for the two new statistics 'bytes_received_real_data_normal' and 'bytes_received_real_data_ps'
Testing for the two new statistics 'bytes_received_real_data_normal' and 'bytes_received_real_data_ps'
- get rid of ZLOG_STUFF code redundancy
- get rid of ZLOG_STUFF code redundancy
- comment out fpm_php_set_fcgi_mgmt_vars to remove compilation warning
- comment out fpm_php_set_fcgi_mgmt_vars to remove compilation warning
- remove useless check
- remove useless check
- add missing timer* macros (for solaris) - ws
- add missing timer* macros (for solaris) - ws
here come the new
- add "listen queue len" stat (thx to Andrei Nigmatulin)
- add "listen queue len" stat (thx to Andrei Nigmatulin)
Added new constant; ZEND_MULTIBYTE to check whether PHP was compiled using --enable-zend-multibyte or not instead of sniffing phpinfo() (FR #52348)
Added new constant; ZEND_MULTIBYTE to check whether PHP was compiled using --enable-zend-multibyte or not instead of sniffing phpinfo() (FR #52348)
- syntax and minor optimizations
- syntax and minor optimizations
- don't call shutdown functions after child ends softly, let the master process call them
- don't call shutdown functions after child ends softly, let the master process call them
Prepare for PECL OCI8 1.4.4
Prepare for PECL OCI8 1.4.4
Improve startup failure error messages
Improve startup failure error messages
Improve test portability
Improve test portability
Implemented FR #53264 (Add fputcsv method to SplFileObject).
- Remove duplicate portion.
Implemented FR #53213 (Adler32 algorithm is very slow). Patch by zavasek at yandex dot ru.
Update the tests committed in r305098 (as part of the fix for bug #53226) to use the PHP_MAXPATHLEN constant, as recommended by Pierre.
Update the tests committed in r305098 (as part of the fix for bug #53226) to use the PHP_MAXPATHLEN constant, as recommended by Pierre.
- correct time comparison for determining the last idle child
- correct time comparison for determining the last idle child
- typo
- change signal from SIGTERM to SIGQUIT for killing a child process by the dynamic process manager
- change signal from SIGTERM to SIGQUIT for killing a child process by the dynamic process manager
REQUEST_TIME notes
- Coding standards
- Coding standards
Updated _SERVER['REQUEST_TIME'] to include microsecond precision.
two new stats
two new stats
- Renamed php_stream_rep_nonstand_mode to   php_stream_mode_sanitize_fdopen_fopencookie, made it not   exported and movied it from php_streams.h to   php_streams_int.h.
- Renamed php_stream_rep_nonstand_mode to   php_stream_mode_sanitize_fdopen_fopencookie, made it not   exported and movied it from php_streams.h to   php_streams_int.h.
Implemented FR #53238 (Make third parameter of preg_match_all optional).
- Added CLEAN section to recently committed test.
- Added CLEAN section to recently committed test.
- expose php_sys_(l)stat, doing will prevent me to have to provide pecl's builds for <5.3.3 and another set for 5.3.4+. Trunk remains the same, A(B/P)I can be broken there
- fix type and silent warning
- fix type and silent warning
- add stat support for zip://
- add stat support for zip://
- add CVE
- add CVE
- Added fix to bug #49687 to PHP 5.2.
explicitness FTW; it should have been like that before, so it wouldn't have happened
- BFN
- Reverted fix for bug #51176
- Reverted fix for bug #51176
- add CVE id
MFH fixed bug #52784 (Race condition when handling many concurrent signals)
fix the fix
fixed bug #52784 (Race condition when handling many concurrent signals)
- Updated to version 2010.15 (2010o)
- Updated to version 2010.15 (2010o)
- More features for the profiling, create aggregates and dump them on file close. - Also add a trace modifier to switch on and off the profiling. - With additional compiler switch the profiling can be completely omitted, of course it makes sense only when --enable-debug. Because otherwise there is no tracing, thus no profiling. - Added a fix for Windows for handling trace files on different devices  (special handing of ':' )
- More features for the profiling, create aggregates and dump them on file close. - Also add a trace modifier to switch on and off the profiling. - With additional compiler switch the profiling can be completely omitted, of course it makes sense only when --enable-debug. Because otherwise there is no tracing, thus no profiling. - Added a fix for Windows for handling trace files on different devices  (special handing of ':' )
gettimeofday for windows
gettimeofday for windows
show tracing
show tracing
fix windows debug build better zlib detection
fix windows debug build better zlib detection
- Added ReflectionParameter::canBePassedByValue().
- Implemented request #44164, zlib.output_compression is now implicitly   disabled when the header "Content-length" is set. #One could argue that any output handler could change the size of the #response, so this exception for zlib.output_compression is an #inconsistency. However, zlib.output_compression is presented as a #performance setting, whose value should have no effect on the #correctness of the scripts. This was not the case. Setting the #header "content-length" and enabling zlib.output_compression was #a recipe for infringing section 4.4 of RFC 2616.
- Implemented request #44164, zlib.output_compression is now implicitly   disabled when the header "Content-length" is set. #One could argue that any output handler could change the size of the #response, so this exception for zlib.output_compression is an #inconsistency. However, zlib.output_compression is presented as a #performance setting, whose value should have no effect on the #correctness of the scripts. This was not the case. Setting the #header "content-length" and enabling zlib.output_compression was #a recipe for infringing section 4.4 of RFC 2616.
Code cleanup & CS
Removed unused variable
rename and remove usage of inttypes.h, not needed
rename and remove usage of inttypes.h, not needed
- Small optimization of the fix of bug #53071. It's not necessary to destroy   the debug info as it's not holding references anymore (the fix removed   the refcount increments).
- Small optimization of the fix of bug #53071. It's not necessary to destroy   the debug info as it's not holding references anymore (the fix removed   the refcount increments).
- fix Isotopp
- fix Isotopp
- fix Isotopp
- Removed out-of-date comments and one enum constant from html_tables.h and its generator. - Other minor aesthetic improvements in the generator.
- Added to UPGRADING(.INTERNALS) information about the changes on html.c. - Added to UPGRADING information about the new class Transliteral, the new   parameter in dns_get_record and the fact that call_user_func_array no longer   allows call-time pass-by-reference.
- BFN
profiling in trace mode
profiling in trace mode
reduced size of temp_variariable
last piece to enable trace logging on windows
last piece to enable trace logging on windows
enable debug logging on windows, in debug builds, of course
enable debug logging on windows, in debug builds, of course
Simplified foreach() handling, we don't have to inctrement/decrement refcount twice
Removed redundant check
Upgraded bundled sqlite to version 3.7.3
Upgraded bundled sqlite to version 3.7.3
- Strip out the typehint *checks* only. They are still parsed, and they are   still accessible through the reflection API.
- update #52929 and zip NULL deref
- update #52929 and zip NULL deref
- Updated NEWS to note fix of bug #53006 now that it's confirmed it's fixed.
- Added the writing of .sh files so that we can run the tests (including all   INI settings) in one go.
zend_collect_module_handlers() has to be called after zend_extensions startup, because they can register additional 'hidden' extensions
marked char pointer arguments as const in lots of places where strings pointed to are not modified to prevent compiler warnings about discarded qualifiers ...
- Three tests were "broken" by rev #304404, not two. Commit the change   to remaining one.
- Three tests were "broken" by rev #304404, not two. Commit the change   to remaining one.
- [DOC] Reverted rev #304382 and rev #304380, as I figured out a way to   fix the erratic behavior without breaking backwards compatibility. Namely,   $offset retains SEEK_SET behavior but actually SEEK_CUR is passed to   _php_stream_seek, if possible, by moving the offset stream->position bytes. - Addresses bug #53006.
- [DOC] Reverted rev #304382 and rev #304380, as I figured out a way to   fix the erratic behavior without breaking backwards compatibility. Namely,   $offset retains SEEK_SET behavior but actually SEEK_CUR is passed to   _php_stream_seek, if possible, by moving the offset stream->position bytes. - Addresses bug #53006.
- [DOC] Changed stream_get_contents() so that the offset is relative to the   current position (seek with SEEK_CUR, not SEEK_SET). Only positive values are   allowed. This breaking change is necessary to fix the erratic behavior in   streams without a seek handlder. Addresses bug #53006. #Note that the example on the doc page for stream_get_contents() may fail #without this change. #This change is also in the spirit of stream_get_contents(), whose description #is "Reads all remaining bytes (or up to maxlen bytes) from a stream...". #Previous behavior allowed setting the file pointer to positions before the #current one, so they wouldn't be "remaining bytes". The previous behavior was #also inconsistent in that it allowed an moving to offset 1, 2, ..., but not 0.
Added test
Added test
- Added numeric record type and raw data for unknown DNS   record types.
new collations
new collations
- Added bison 2.4.3 version to the bison version list
- Added bison 2.4.3 version to the bison version list
fix some uninitialized variables. also fix shadowing of global symbols
fix some uninitialized variables. also fix shadowing of global symbols
- Added support for ICU Transformations (Transliterator). - Changes request #52986 to "to be documented".
here comes the news
fix broken merge, led to double define
- don't build  if no libvpx available
more variable hiding fixes
more variable hiding fixes
fix shadowing of parameters
fix shadowing of parameters
Update copyright year for the license
Update copyright year for the license
Update copyright year for the license
rename parameter name - should not shadow the global symbol alloca
rename parameter name - should not shadow the global symbol alloca
two more compiler warnings fixed - size does matter
two more compiler warnings fixed - size does matter
rename parameter, should not conflict with global symbol - the socket function
rename parameter, should not conflict with global symbol - the socket function
remove trailing commas in enums
remove trailing commas in enums
fix bug #50345 (nanosleep not detected properly on some solaris versions)
fix bug #50345 (nanosleep not detected properly on some solaris versions)
Greetings from SunCC.
Greetings from SunCC.
Removed debug code
add some safe casts
add some safe casts
fixing more types
fixing more types
fix types
fix types
fix recent TSRM build break, with --enable-debug
fix recent TSRM build break, with --enable-debug
- Moved ucgendat.c to a separate directory and included the   OpenLDAP license there, as required by the license itself.
- Moved ucgendat.c to a separate directory and included the   OpenLDAP license there, as required by the license itself.
- missing file for webp
- initial webp support, rely on libpx, final version will be either w/o dep or using libwebp (to be released by g)
- initial webp support, rely on libpx, final version will be either w/o dep or using libwebp (to be released by g)
We do not need this TSRMLS_FETCH() call as we do not use any TSRM stuff in here, so we can get a minor boost here in ZTS mode.
We do not need this TSRMLS_FETCH() call as we do not use any TSRM stuff in here, so we can get a minor boost here in ZTS mode.
Skipped this one
Revert for now
Un-deprecate mt_rand and deprecate mt_getrandmax
Bug #51155 (Unreasonable non-emalloc allocations of memory)
fix two more warnings
fix two more warnings
add some safe casts - lower the number of warnings by 2
add some safe casts - lower the number of warnings by 2
Trying to fix compiler warnings (on Windows).
Trying to fix compiler warnings (on Windows).
Even better patch
Even better patch
don't define twice the macro on some platforms
don't define twice the macro on some platforms
Next one... ext/mysqli/mysqli_fe.c", line [many]: warning: syntax error:  empty declaration
Next one... ext/mysqli/mysqli_fe.c", line [many]: warning: syntax error:  empty declaration
Sorry again, nothing but removal of white space from the end of the lines.
Sorry again, nothing but removal of white space from the end of the lines.
Sorry for the commit but compiler warnings are annoying and so are white spaces at the end of a line, if one uses an editor which removes them on save and diff's get blown up by white space changes...
Sorry for the commit but compiler warnings are annoying and so are white spaces at the end of a line, if one uses an editor which removes them on save and diff's get blown up by white space changes...
- Implemented FR #50692, not uploaded files don't count towards   max_file_uploads limit. - As a side improvement, temporary files are not opened for   empty uploads and, in debug mode, 0-length uploads.
- Implemented FR #50692, not uploaded files don't count towards   max_file_uploads limit. - As a side improvement, temporary files are not opened for   empty uploads and, in debug mode, 0-length uploads.
* Added PHP_RAND_MAX and PHP_MT_RAND_MAX constants * Deprecated getrandmax() and mt_getrandmax() in favour of the new constants
Plug a leak in mysqli when in the same script a pconn is reused. Call end_psession earlier - so will mysqlnd and the plugins free data earlier.
Plug a leak in mysqli when in the same script a pconn is reused. Call end_psession earlier - so will mysqlnd and the plugins free data earlier.
Prevented crash in GC because of incorrect reference counting
Prevented crash in GC because of incorrect reference counting
Loosen the valgrind version check slightly in run-tests.php so that it works with the packaged valgrind in Ubuntu 10.04.
Loosen the valgrind version check slightly in run-tests.php so that it works with the packaged valgrind in Ubuntu 10.04.
Loosen the valgrind version check slightly in run-tests.php so that it works with the packaged valgrind in Ubuntu 10.04.
fix the test
fix the test
Remove non C90 quotes
add another hook, maybe the last one, for MYSQLND_STMT, which was missed before
add another hook, maybe the last one, for MYSQLND_STMT, which was missed before
- Updated to version 2010.13 (2010m)
- Updated to version 2010.13 (2010m)
Removed a TSRMLS_FETCH() call in php_idate() in favor of the TSRMLS macros
- fix bug #52926, zlib fopen wrapper does not use the context
- fix bug #52926, zlib fopen wrapper does not use the context
Update getColumnMeta native types for SQL Server 2008
MFH: fix phar phpinfo() tests.
WS fixes
WS fixes
Let's try not to have 'uft8'-only tests and avoid setting the charset upon connect. I've changed the tests to make no assumptions on the server charset setting. var_dump()/EXPECTF tests got replaced with dynamic tests which try to take the current charset into account.
Let's try not to have 'uft8'-only tests and avoid setting the charset upon connect. I've changed the tests to make no assumptions on the server charset setting. var_dump()/EXPECTF tests got replaced with dynamic tests which try to take the current charset into account.
Eliminate a TSRMLS_FETCH() call in case of an error in one of the ereg functions
There are a few cases where we can save a TSRMLS_FETCH() call here
Added TSRMLS macros into php_get_current_user()
Cast to char * here
Missed to check this one in the last commit
Unify, force one charset at connect, thus fixing test failures because different servers have different system charsets.
Unify, force one charset at connect, thus fixing test failures because different servers have different system charsets.
Test update for sql_mode = ansi
Test update for sql_mode = ansi
Test update for sql_mode = ANSI
Test update for sql_mode = ANSI
here comes the news
small macro fix
small macro fix
fix for bug 52891 - optimize a bit
fix for bug 52891 - optimize a bit
hier comes the news
update tests
update tests
Trying to pimp gcov.php.net code coverage tests..  trying to cover mysqlnd compress code with a standard test run
Trying to pimp gcov.php.net code coverage tests..  trying to cover mysqlnd compress code with a standard test run
Align test to the style used in the other tests
Align test to the style used in the other tests
No reason not to run the tests with libmysql. Its long, long ago that pconnect has been a mysqlnd only feature
No reason not to run the tests with libmysql. Its long, long ago that pconnect has been a mysqlnd only feature
Reverted wrong patch
Dont be strict on error messages, they can vary by server version
Dont be strict on error messages, they can vary by server version
add test case for 52891
add test case for 52891
fixed compilation error.
Improved performance of unserialize(), original patch by galaxy dot mipt at gmail dot com
- not needed here anymore
Skip if PDO_SQLITE is not available
Skip if PDO_SQLITE is not available
Remove OS dependent directory separator from EXPECT
Remove OS dependent directory separator from EXPECT
- restore VOLUME_NAME_NT and VOLUME_NAME_DOS definition, thx Andrey for the headup
- restore VOLUME_NAME_NT and VOLUME_NAME_DOS definition, thx Andrey for the headup
- fix ts build (zend_list_insert change)
- use popen_ex directly, avoid the tsrm fetch
- drop tsrmls_fetch in popen_ex
- drop tsrmls_fetch in tsrm_win32_access
- drop TSRMLS_FETCH in sapi_register_* (won't bring much at runtime :) ) and cleanup/group the upgrade guide, no need of twenty titles for the same change
- drop TSRMLS_FETCH in sapi_register_* (won't bring much at runtime :) ) and cleanup/group the upgrade guide, no need of twenty titles for the same change
fix ZTS build
- Added missing entries related to pdo_dblib
- WS
- WS
Implement FR #44331 (Formatting option for json_encode). Bikeshedding about the exact form of the JSON pretty printing and brace handling will only be accepted in the form of patches. ;)
Rebalance the folds in json.c.
Implemented FR #49366 (Make slash escaping optional in json_encode()).
- zend_list_insert TSRMLS fix (thx tony for the headup)
- cleanup ze1/ze2
- use TSRMLS_D/C with php_stream_context_alloc
- use TSRMLS_*C instead of TSRMLS_FETCH in zend_list_insert, missing header
- use TSRMLS_*C instead of TSRMLS_FETCH in zend_list_insert
- unused, double declared
- not there anymore
- macros--; ZEND_FAST_* are now gone
- update and restore TOC
- fix news
- not used anymore
remove unneeded proxy function _mysqlnd_restart_psessoin
remove unneeded proxy function _mysqlnd_restart_psessoin
Remove unneeded proxy function _mysqlnd_end_psession
Remove unneeded proxy function _mysqlnd_end_psession
Regenerated
- Improved memory usage   . zend_function.pass_rest_by_reference is replaced by     ZEND_ACC_PASS_REST_BY_REFERENCE in zend_function.fn_flags   . zend_function.return_reference is replaced by ZEND_ACC_RETURN_REFERENCE     in zend_function.fn_flags   . zend_arg_info.required_num_args removed. it was needed only for internal     functions. Now the first arg_info for internal function (which has special     meaning) is represented by zend_internal_function_info structure.   . zend_op_array.size, size_var, size_literal, current_brk_cont,     backpatch_count moved into CG(context), because they are used only during     compilation.   . zend_op_array.start_op is moved into EG(start_op), because it's used     only for 'interactive' execution of single top-level op-array.   . zend_op_array.done_pass_two is replaced by ZEND_ACC_DONE_PASS_TWO in     zend_op_array.fn_flags.   . op_array.vars array is trimmed (reallocated) during pass_two.   . zend_class_entry.constants_updated is replaced by      ZEND_ACC_CONSTANTS_UPDATED in zend_class_entry.ce_flags   . the size of zend_class_entry is reduced by sharing the same memory space     by different information for internal and user classes.     See zend_class_inttry.info union.
unify magic quotes handling. Also fix a problem which resulted in a longjmp in debug PHP,because of usage of zval that is NULL in a hash context.
- remove a memory leak (missing efree())
- remove a memory leak (missing efree())
- Don't be silent on bailout
- Don't be silent on bailout
- fix #48831  php -i has different output to php --ini
- fix #48831  php -i has different output to php --ini
- fix build introduced by fix for #52772
- use php_sys_sat
- use php_sys_sat
- ws
- ws
- sanity check for the path length and don't treat UNC as local path (no functional change, only less ops)
- sanity check for the path length and don't treat UNC as local path (no functional change, only less ops)
- MFH
- silent warning
- silent warning
- use php_sys_lstat
- use php_sys_lstat
- use php_sys_readlink
- use php_sys_readlink
- WS
- WS
- remove dummy wrapper for readfile
- remove dummy wrapper for readfile
- use OPENBASEDIR_CHECKPATH macro (does safe mode too in 5.3) so trunk and branches are the same
- use php_sys_readlink
- use php_sys_readlink
- remove 'UNC' from the target
- remove 'UNC' from the target
- open_basedir symlink support for Windows
- open_basedir symlink support for Windows
- Implement bug #51804, splFileInfo::getLinkTarget() on Windows
- Implement bug #51804, splFileInfo::getLinkTarget() on Windows
- WS
- add php_sys_readlink
- add php_sys_readlink
- fix the fix for bug #52323
- fix the fix for bug #52323
- WS
- WS
- WS
We don't need to preallocate a memory segment in case we don't use zend memory manager
- remove FPM specific version which is irrelevant since FPM integration into core.
- remove FPM specific version which is irrelevant since FPM integration into core.
- fix bug #50953, socket will not connect to IPv4 address when the host has both ipv4 and ipv6 addresses
- fix bug #50953, socket will not connect to IPv4 address when the host has both ipv4 and ipv6 addresses
- links related fixes
- WS
- fix bug #52260, catch all DNS not found error
- fix bug #52260, catch all DNS not found error
- timeval element are always 32bit long on Windows
- timeval element are always 32bit long on Windows
- kill warning
- kill warning
- restore credits, fix 5.3 as well, aka do it right /cc Deric
- restore credits, fix 5.3 as well, aka do it right /cc Deric
- Clean up the generated tmp-php.ini after make test has run.
- Clean up the generated tmp-php.ini after make test has run.
- Turn test-description into on line.
This incorrect contraction started to get on my eyes after I saw it for the 87th time while struggling with an annoying SOAP service.
This incorrect contraction started to get on my eyes after I saw it for the 87th time while struggling with an annoying SOAP service.
Test for http://bugs.php.net/52221. Test will fail with mysqlnd but should pass with libmysql.
- add it for 5.3 as well
- typo/clarity
fix build on windows, seems this macro is not defined
fix build on windows, seems this macro is not defined
Reduced overhead of FastCGI using near-perfect hash function and predcalculated hash values.
OPT_COMPRESS support for mysqlnd_conn::set_client_option To be used by mysqli_options
OPT_COMPRESS support for mysqlnd_conn::set_client_option To be used by mysqli_options
invalid length
- is_link note
- fix index
- WS
- WS
- sb needed only in safemode
- upgrading addition about stat/lstat
- add lstat support for Windows
- add lstat support for Windows
- add 'max children reached' to the FPM status page. It shows how many times   a pool has reached the max_children parameter.
- add 'max children reached' to the FPM status page. It shows how many times   a pool has reached the max_children parameter.
PHP has changed (undefined) behaviour from 5.3.2 to 5.3.3: ->{} =  , which seems to have been never an officially supported syntax and have never been a valid property name, is no longer allowed and PHP bails.
PHP has changed (undefined) behaviour from 5.3.2 to 5.3.3: ->{} =  , which seems to have been never an officially supported syntax and have never been a valid property name, is no longer allowed and PHP bails.
- MFT: Add ".so" suffix to checks on libsybct[64] bundles # See patch by royanee at yahoo dot com @ bug #45357
- Add ".so" suffix to checks on libsybct[64] bundles # See patch by royanee at yahoo dot com @ bug #45357
- Add libevent version to the startup debug log in FPM.
- Add libevent version to the startup debug log in FPM.
- Changed listen.backlog in the FPM configuration file to default to 128   instead of -1 (except on FreeBSD and OpenBSD). This is the same value   as the one used in the cgi sapi. This patch completes revision 302725.
- Changed listen.backlog in the FPM configuration file to default to 128   instead of -1 (except on FreeBSD and OpenBSD). This is the same value   as the one used in the cgi sapi. This patch completes revision 302725.
here comes the news
- fix possible leak and error while fetching PHPRC
- fix possible leak and error while fetching PHPRC
Adding MYSQLI_OPT_SSL_VERIFY_SERVER_CERT for use with mysqli_options().
Adding MYSQLI_OPT_SSL_VERIFY_SERVER_CERT for use with mysqli_options().
- WS
- WS
- Keep 5.3 and trunk in sync.
- Tests for bug #52342 (DateTime setIsoDate results in wrong timestamp).
- Tests for bug #52342 (DateTime setIsoDate results in wrong timestamp).
- Added test file that I forgot to commit.
- Test for (non-)bug #52577.
- Test for (non-)bug #52577.
- Added test for bug #46874 (same as #52668).
- Added test for bug #46874 (same as #52668).
- only one process (for all pools) could be killed by the 'dynamic' process manager. Now it's one process per pool which can be killed by the 'dynamic' process manager. - rename nonsense variable (i)
- only one process (for all pools) could be killed by the 'dynamic' process manager. Now it's one process per pool which can be killed by the 'dynamic' process manager. - rename nonsense variable (i)
- remove internals stuff, moved to the INTERNALS guide
- initial import, internals upgrade guide
- use TSRMLS_CC instead of TSRMLS_FETCH in virtual_file_ex
If you add functions to the PDO core, take care not to break other PDO drivers tests, document the function and provide a function test for the PDO core to check your default/fallback implementation.
If you add functions to the PDO core, take care not to break other PDO drivers tests, document the function and provide a function test for the PDO core to check your default/fallback implementation.
- WS
- WS
Don't check FCGI_WEB_SERVER_ADDRS for UNIX sockets
Added apache compatible functions (apache_child_terminate, getallheaders, apache_request_headers, apache_response_headers) to FastCGI SAPI
In some SAPI (e.g. FastCGI) we don't need to setup and reset libxml callbacks on each request, we con do it only once. Probably the list of such SAPI may be extended.
Preallocate zend_hash instead of allocation/deallocation it on each request
Implemented request #34857 (Change array_combine behaviour when called with empty arrays). Patch by Joel Perras <joel.perras@gmail.com>.
Add proper magic_quotes_runtime support for mysqlnd, but in mysqli, so we don't need to tamper myslqnd. magic_quotes_runtime are deprecated and not existant in 5.4, thus only fixing in the branch.
- WS
- Symlink resolution fails when target is a DFS path
- Symlink resolution fails when target is a DFS path
Test for http://bugs.mysql.com/bug.php?id=49406, Binding params doesn't work when selecting a date inside a CASE-WHEN
Test for http://bugs.mysql.com/bug.php?id=49406, Binding params doesn't work when selecting a date inside a CASE-WHEN
Removed useless copying
Use stack instead of heap
here comes the news
fix the build. two mysqli functions were missing after recent commit - set_charset and get_charset
fix the build. two mysqli functions were missing after recent commit - set_charset and get_charset
- CVE # for mops 2010-24
Don't try to read the rest of malformed FCGI requests, close immediately. It saves one recv() call for proper FCGI request.
ws
Sorry, forgot the news update for the previous commit.
MFB5.3: The fix (and the fix to the fix) for bug #52546 (pdo_dblib segmentation fault when iterating MONEY values).
- Changed listen.backlog in the FPM configuration file to default to 128   instead of -1. This is the same value as the one used in the cgi sapi.
-fix logic (and BC break)
-fix logic (and BC break)
- WS
- revert fix for #52655, rev. 302614
- revert fix for #52655, rev. 302614
- add follow_location support for http stream, enabled by default to keep BC. Allows one to ignore the location header, w/o having to ignore errors or other tricks, the location data is however still available (meta)
- add follow_location support for http stream, enabled by default to keep BC. Allows one to ignore the location header, w/o having to ignore errors or other tricks, the location data is however still available (meta)
- fix string validation entry, mops-2010-24
Revert fix for #52636 in 5.2
- Added missing void parameter checks
- Added missing void parameter checks
- typo (thx to sixd)
- typo (thx to sixd)
- fix string validation, MOPS-2010-24
- fix string validation, MOPS-2010-24
svn up messed this
here comes the news
- Reverted unintended modification
Use userland function name, not internal name for NEWS
Use userland function name, not internal name for NEWS
Nuke compiler warning, wrong fix that shouldn't have been in the previously commit
improved performance of @ (silence) operator
Pass the TSRMS pointers to sapi_module_struct.log_message, this saves some TSRMLS_FETCH() calls in a few of our SAPI's
Use the TSRMLS_DC/TSRMLS_CC macros instead of TSRMLS_FETCH()
Revert unintended modification
improved performance of FastCGI request parsing
- Improved fix for bug #52573
- Improved fix for bug #52573
here comes the news
Update with PHP_DEF_FE, also update the test
Use PHP_DEP_FE - good for reflection
here comes the news
Deprecate mysql_list_dbs, as mysql_list_tables is already deprecated. As well as mysql_list
align declaration with definition (patch by kalle)
detect easily which charset doesn't work
detect easily which charset doesn't work
- Updated to version 2010.12 (2010l)
- Updated to version 2010.12 (2010l)
- WS
- WS
Here comes the news
- Updated to version 2010.11 (2010k)
- Updated to version 2010.11 (2010k)
Bug #52361 (Throwing an exception in a destructor causes invalid catching)
Bug #52361 (Throwing an exception in a destructor causes invalid catching)
- #52607, fix ENV conflit with win SDK 7.1
- #52607, fix ENV conflit with win SDK 7.1
- year++
- #52607, fix ENV conflit with win SDK 7.1
Win32 build fixes
Upgraded bundled Sqlite3 to version 3.7.0.1
Upgraded bundled Sqlite3 to version 3.7.0.1
MFH: Upgraded bundled PCRE to version 8.10.
- Missing traits data initialization for internal classes (causing Reflection to crash)
- fix cast
separate properties of internal classes in ZTS mode fully, otherwise multiple threads will modify the zvals' contents without any synchronisation.
Make this function static, as it is used only in this file. Add additional comment about how it works.
Make this function static, as it is used only in this file. Add additional comment about how it works.
Allocate memory in a burst mode, and later use it. Increases locality of the data. Also use MYSQLND_INC_CONN_STATISTIC in one place, instead of two, thus removing code duplication from macro expansion - less code to fit in the instruction cache.
Allocate memory in a burst mode, and later use it. Increases locality of the data. Also use MYSQLND_INC_CONN_STATISTIC in one place, instead of two, thus removing code duplication from macro expansion - less code to fit in the instruction cache.
Switch from using PHP_MAJOR_VERSION to separate define for unicode. Unicode is no more, but these are "bookmarks" where to change mysqlnd, if Unicode becomes trendy again.
Switch from using PHP_MAJOR_VERSION to separate define for unicode. Unicode is no more, but these are "bookmarks" where to change mysqlnd, if Unicode becomes trendy again.
ws + cs
ws + cs
separate properties of internal classes in ZTS mode fully, otherwise multiple threads will modify the zvals' contents without any synchronisation.
Ignore the x64 directory for Windows x64 builds
Ignore the x64 directory for Windows x64 builds
Seems like this one skipped the commit (E_ERROR -> E_CORE_ERROR) for zend.ze1_compatibility_mode (re #52570)
Optimization of ASSIGN instruction
In ZTS mode default properties and constants of internal classes can't be modified in place and have to be separated
In ZTS mode default properties and constants of internal classes can't be modified in place and have to be separated
In ZTS mode default properties and constants of internal classes can't be modified in place and have to be separated
Optimization (IS_TMP_VARs don't need reference counting)
Prevent generation of long strings
Optimization
Make http_response_code() return FALSE where data is not available (Ex. cli sapi)
Lay foundations for named pipe support in mysqlnd
Lay foundations for named pipe support in mysqlnd
Update UPGRADING
Implemented FR #52555 (Ability to get HTTP response code)  - Patch by Paul Dragoonis
- #52523, fix logic (0 is perfectly valid as part of the data, bin data)
- #52523, fix logic (0 is perfectly valid as part of the data, bin data)
- WS
- WS
- Back the free() call for __iterator_wrapper to free the ce->name, as it is a fake class
Additional fix for bug #52550 & fix test & warning from previous fixes
Additional fix for bug #52550 & fix test & warning from previous fixes
- Added missing SKIPIF
- Added missing SKIPIF
- Updated generated file
- Updated generated file
- ext_skelshould create a .svnignore not .cvsignore these days
- ext_skelshould create a .svnignore not .cvsignore these days
Release PECL OCI8 1.4.2
WS
WS
Another fix for issue indentified in bug #52550
Another fix for issue indentified in bug #52550
make ssl_set return value in mysqlnd compatible with libmysqli return value
make ssl_set return value in mysqlnd compatible with libmysqli return value
Use correct order of operations. Second of many fixes for bug #52550
Use correct order of operations. Second of many fixes for bug #52550
Do these ops in the right order here.  First of many fixes for bug #52550
- Drop (broken) support for libmysql 3.23 and 4.0 from pdo_mysql, see bug #51259
Use interned strings for class names
cleanup
BUG: all value comparaisons were not case insensitive in the conf file parser
BUG: all value comparaisons were not case insensitive in the conf file parser
typo
typo
correct php-fpm.conf: slowlog has no default value
correct php-fpm.conf: slowlog has no default value
- Added missing parameter checks for new methods (trunk only)
Added Traits to the NEWS file. #There doesn't seem to be a consitent ordering, #so I put it in front of the list, since it is a major language addition. Hope thats ok.
- Removed safe-mode tests
- New test
- New test
- fix build
- fix build
ZEND_UNSET_* don't have results
- Makes "parent" and "self" checking case-insensitive
Additional specialization
-  make libsasl optional (as vc6 bins do not have it)
Removed deprecated check
Remove obsolete non phpt test script.
Let's keep NEWS entries to things that might affect users. A typo in a comment isn't very news-worthy.
MFH: fix bug #52380 (Typo in lcfirst comment docs).
Correct bug ID in the NEWS file for posterity.
- Back to -dev
- back to -dev
- Add lost entries
- PHP 5.3.3
PHP 5.2.14
- merge NEWS for 5.2.14 and 5.3.3
- merge NEWS for 5.2.14 and 5.3.3
typo
- add CVE #
- add CVE #
Use proper fetch types
Removed invalid checks
MFH: fix for bug #52317 (Segmentation fault when using mail() on a rhel 4.x (only 64 bit)).
MFH: fix for bug #52317 (Segmentation fault when using mail() on a rhel 4.x (only 64 bit)).
Revert r301354, since we don't need a test for a bogus bug.
Test for #50475
Test for #51819
Test for #48187
Test for #51994
Test for #52290
Test for #52359
ZEND_FETCH_*_R operations simplified and can't be used with EXT_TYPE_UNUSED flag any more. Thit is very rare and useless case. ZEND_FREE might be required after them instead.
Simplified string offset reading
- fix vc6 build
- fix vc6 build
Back to -dev
PHP 5.3.3RC3
Back to -dev
PHP 5.2.14RC3
Optimized defaut Content-Type HTTP header processing
Update the re2c files aswell (bug #51943)
Update the re2c files aswell (bug #51943)
Update the re2c files aswell (bug #51943)
- merge news for var_export fix
Give an error when USE_RESULT is used with fetch_all
Give an error when USE_RESULT is used with fetch_all
- Added EG(saved_fpu_cw_ptr) initialization
Doing this as a seperate commit unless we need to back it out.
Eliminated useless allocation of FPU control word on each request startup
zend_ptr_stack allocation is delayed before the actual usage
Fugbix typo.
- use interned strings for auto globals - $GLOBALS became a JIT autoglobal, so it's initialized only if used (this may affect opcode caches)
adding arginfo to mysqli fixed the bug
Reduced overhead of request startup
applied patch from bug report 51452
Use zend_stream API to open main PHP script in CGI/FastCGI. This allows to override the open function by opcode caches and eliminate the actual open syscall.
update tests
Cleanup in trunk. Remove some functions, noted in UPGRADING. sed-ed the tests to change the usage to the real function name.
Cleanup in trunk. Remove some functions, noted in UPGRADING. sed-ed the tests to change the usage to the real function name.
Removed redundant check
arginfo for mysqli, was too fast to commit in trunk instead of one directory up, thus the patch was split in two.
Arginfo for mysqli
Reused single segment between requests. Saved one malloc/free for each request.
Reduced initial VM stack size to fit into zend_mm segment and eliminate extra segment allocation
- MFT: Added -DSYB_LP64 to CFLAGS on 64 bit platforms - MFT: Added checks for 64 bit versions of sybase libraries - MFT: Added checks for sybase libraries prefixed with "libsyb"
- MFT: Added -DSYB_LP64 to CFLAGS on 64 bit platforms - MFT: Added checks for 64 bit versions of sybase libraries - MFT: Added checks for sybase libraries prefixed with "libsyb"
zend_stack initialization is delayed before the actual usage
eliminated unnecessary iterations during request startup/shutdown
fix typos and use correct directive names in error messages
fix typos and use correct directive names in error messages
reduced request processing overhead
Use ZE API to modify/restore PG(magic_quotes_runtime). Removed overhead at request startup.
Reduced overhead of ext/mbstring initialization
- Added CVE id
Upgraded bundled PCRE to version 8.10
Back to -dev
Added test for bug 52013 to PHP_5_3.
Added test for bug 52013 to trunk.
- BFN
5.3.3 RC2
Back to dev
5.2.14RC2
Used more sutable type. Reduced memory usage.
- BFN
- WS
- WS
sync version with PECL
sync version with PECL
pdo_dblib - improve test skip messages
- MF5.3: Reverted fix for bug #48930 (due binary compatibility breakage) # To commit a new common fix
PDO DBLIB test fixups
- Reverted fix for bug #48930 (due binary compatibility breakage)
fix build
Remove PDO DBLIB prefix from PostgreSQL PDO tests
Oops
Add tests for recent fixes
fix SplObjectStorage unserialization (CVE-2010-2225)
fix SplObjectStorage unserialization (CVE-2010-2225)
fix SplObjectStorage unserialization (CVE-2010-2225)
- typo for iconv DLL .lib
- typo for iconv DLL .lib
- Reverted fix for bug #51421
- Reverted fix for bug #51421
- Added test for tds_sysdep_public.h and link against -lct only then - Added test for libsybct64 and libsybct # The former is a fix for newer versions of FreeTDS which no longer # provide the tds.h - we need to distinguish in what we link against # between FreeTDS and the official Sybase libraries, and this seems # to do the job. # The latter is the patch from bug #49276 (finally, and sorry)
- Improved initialization
- Improved initialization
- BFN
- BFN
Remove hard coded lib extension.  Prepare for OCI8 1.4.2 release
Remove hard coded lib extension.  Prepare for OCI8 1.4.2 release
Two functions, which should be methods so one can catch their output, for example
Two functions, which should be methods so one can catch their output, for example
Actually fix quoted identifiers this time
- typo
- typo
Install SQLite3 header
Install SQLite3 header
Removed redundant code
fix valgrind warnings on 64bit, thread_is is strictly 32bit
fix valgrind warnings on 64bit, thread_is is strictly 32bit
MFB: Implemented FR #51295 (SQLite3::busyTimeout not existing). (Mark)
- +FR
- #48632, ssl AES support
- #45808, stream_socket_enable_crypto() blocks and eats CPU
- #45808, stream_socket_enable_crypto() blocks and eats CPU
- #51295, SQLite3::busyTimeout not existing
- BFN
- Lets use zend_atol() here too (sync with 5_3)
missed this one in the last commit, the real type
missed this one in the last commit, the real type
fix  type mismatch, this is fresh misunderstanding
fix  type mismatch, this is fresh misunderstanding
- Ignore empty filename for mail.log, treat it like none given
- Ignore empty filename for mail.log, treat it like none given
Don't bail if there is another extension that exports constants starting with mysql<something>
Don't bail if there is another extension that exports constants starting with mysql<something>
back to -dev
PHP 5.3.3RC1
5.3.3RC1
- fix build
- fix build
back to dev
5.2.14RC1
split mysqlnd_connect() in two parts, one doing the authorization
split mysqlnd_connect() in two parts, one doing the authorization
- #51424
 - #51424, solaris part
 - #51424, solaris part
- BFN
- BFN
- New tests related to #52098
- New tests related to #52098
- New tests related to #52098
no more needed because of the charset fix in the previous changeset
no more needed because of the charset fix in the previous changeset
- #50563, removing E_WARNING from parse_url()
- #50563, removing E_WARNING from parse_url()
improve ptrace() test change error to warning - there can be no trace method available at all
improve ptrace() test change error to warning - there can be no trace method available at all
Added tests for SplFileObject::fgetcsv
- #42060, add paged results support
- New entries
- New entries
- cleanup, no vc6 support in trunk
- cleanup, no vc6 support in trunk
- #51424, silent warnings on win
- #51424, silent warnings on win
Removed the in_transaction handler for 5.3 to avoid BC break due to structure change
Tests for SplTempFileObject
And a fix for MySQL Server which is pre 5.1.23, which doesn't support preserving of the charset when performing change_user. This is libmysql only code.
And a fix for MySQL Server which is pre 5.1.23, which doesn't support preserving of the charset when performing change_user. This is libmysql only code.
- MFH
- drop comment
- drop comment
- #52043,GD doesn't recognize latest libJPEG version
- #52043,GD doesn't recognize latest libJPEG version
- Allow write context on array dereferencing from method return - New tests
export mysqlnd_globals_id, per Johannes
export mysqlnd_globals_id, per Johannes
Added inTransaction() method to PDO, with specialized support for Postgres
Added inTransaction() method to PDO, with specialized support for Postgres
Added support for copy to/from array/file for pdo_pgsql extension. # original patch by Denis Gasparin
Added support for copy to/from array/file for pdo_pgsql extension. # original patch by Denis Gasparin
void functions return nothing
void functions return nothing
Explicitly use db-5.0 and don't default to db sym link
Explicitly use db-5.0 and don't default to db sym link
fix minor memleak
- [DOC] MFH: add session.entropy* support to windows
- [DOC] MFH: add session.entropy* support to windows
- restore previous setting
support both 'warn' and 'warning' as error levels
support both 'warn' and 'warning' as error levels
- use new function to get random bytes
- use new function to get random bytes
- WS
Make the tests pass with sql strict mode enabled
Make the tests pass with sql strict mode enabled
Portability improvement
Portability improvement
Portability improvements
Portability improvements
- duplicate entry
- duplicate entry
- [DOC] add session.entropy* support to windows
- [DOC] add session.entropy* support to windows
fix bug #50101 (name clash between global and local variable)
fix bug #50101 (name clash between global and local variable)
More SQL strict mode updates
More SQL strict mode updates
- add striped down version of RNG layer to have a reliable random src on windows
- add striped down version of RNG layer to have a reliable random src on windows
- add striped down version of RNG layer to have a reliable random src on windows
fix bug #51276 (php_load_extension() is missing when HAVE_LIBDL is undefined)
fix bug #51276 (php_load_extension() is missing when HAVE_LIBDL is undefined)
fix micro-memleaks (happened once per process)
fix micro-memleaks (happened once per process)
Making tests pass strict sql mode.
Making tests pass strict sql mode.
- Added array dereferencing support [DOC] # http://wiki.php.net/rfc/functionarraydereferencing
- Let's generate this #ifdef only on zend_vm_execute.h
- Let's generate this #ifdef only on zend_vm_execute.h
- Update
- show the free_op1 warning only once, until a fix is applied
- show the free_op1 warning only once, until a fix is applied
- show the free_op1 warning only once, until a fix is applied
- show the free_op1 warning only once, until a fix is applied
- silent warning (unary minus operator applied to unsigned type)
- silent warning (unary minus operator applied to unsigned type)
- label only used when mmap is available
- label only used when mmap is available
New test for file_exists (bug #39863).  It currently xfail's
New test for file_exists (bug #39863).  It currently xfail's
New test for file_exists (bug #39863).  It currently xfail's
- New ReflectionClass method
- Added ZipArchive arginfo
- Added ZipArchive arginfo
- Added BG(serialize) and BG(unserialize) initialization
- One more reflection entry
- Added the three new ReflectionClass methods related to traits
Add Berkeley DB 5 support.  (An outstanding issue with BDB 4.8 related to 51086 that also affects BDB 5 is not yet resolved)
Add Berkeley DB 5 support.  (An outstanding issue with BDB 4.8 related to 51086 that also affects BDB 5 is not yet resolved)
vim fail
vim fail
vim fail
Tweak the fix for bug #51847 to still call libintl_setlocale when libintl has done that redefine.
Tweak the fix for bug #51847 to still call libintl_setlocale when libintl has done that redefine.
Tweak the fix for bug #51847 to still call libintl_setlocale when libintl has done that redefine.
- silent warning
- silent warning
- Save an object_init_ex() and zval_dtor() calls on ReflectionClass::isCloneable()
- Removed clone_obj from PDORow object handlers, as zend_objects_store_clone_obj requires a clone handler (ce->clone == NULL -> error) and it is not supplied, hence it is being useless and leading ReflectionClass::isCloneable() to give false positive information
- Added ReflectionClass::isCloneable() [DOC]
- fix leak on error in mcrypt_create_iv on windows
- fix leak on error in mcrypt_create_iv on windows
fix cxx build
- WS
- allow shared build
- allow shared build
Remove unused variables
Berkeley DB 5's SQL frontend gives a slightly different error than libsqlite
Berkeley DB 5's SQL frontend gives a slightly different error than libsqlite
defensive programming, check before using a resource
defensive programming, check before using a resource
fix fpm build
* raise warning if zend_fcall_info_init() cannot resolve the callback * fix pointer mismatch
Perform later initialization
Perform later initialization
More check for valid MYSQLND_STMT before using it
More check for valid MYSQLND_STMT before using it
Don't reference row_packet before checking if dereferencing is possible
Don't reference row_packet before checking if dereferencing is possible
Check if data is correct and initialize in a safe manner
Check if data is correct and initialize in a safe manner
Handle problems in the row_decoder, return type used to be void, now it can return on problems.
Handle problems in the row_decoder, return type used to be void, now it can return on problems.
Bail if allocation fails
Bail if allocation fails
try to workaround problems with non-c99 on HPUX
try to workaround problems with non-c99 on HPUX
new output api NEWS
Updating test to reflect the latest and more verbose mysqlnd error messages, updating mysqlnd error message as well.
Updating test to reflect the latest and more verbose mysqlnd error messages, updating mysqlnd error message as well.
fix protos, and unintential double-patched content
fix ZTS build
Improve EXPECTF to work with other than default schemata
Improve EXPECTF to work with other than default schemata
* implement new output API, fixing some bugs and implementing some feature   requests--let's see what I can dig out of the bugtracker for NEWS--   and while crossing the road:    * implemented new zlib API    * fixed up ext/tidy (what was "s&" in zend_parse_parameters() supposed to do?)
- token_get_all now returns false on error, not "", returns array on success
- Added recent Windows versions to php_uname and fix undefined windows version
- Added recent Windows versions to php_uname and fix undefined windows version
- ws
- ws
- More trait reflection work #- I'm not happy about ReflectionClass::getTraitAliases, yet
fix commit 299383
fix commit 299383
- Missing Trait check fix
- Add some folding marks
- Make reflection aware of traits
- A method called like a trait is no constructor
typo (thx to Brian P. Mercer)
typo (thx to Brian P. Mercer)
These files talk about PHP 3, flex, CVS, ... interesting to archeologists only
These files talk about PHP 3, flex, CVS, ... interesting to archeologists only
Update EXTENSIONS file
Update EXTENSIONS file
Update credits
Update credits
Make the credits script more verbose
Make the credits script more verbose
From user's perspective this was added
bug: include paths were not evaluated to to full path
bug: include paths were not evaluated to to full path
typo
typo
Open server bug: mysqlnd works around it, libmysql fails. Let's skip because MySQL Server version tests are tricky and error prone.
Open server bug: mysqlnd works around it, libmysql fails. Let's skip because MySQL Server version tests are tricky and error prone.
Check before use, because mysqlnd can return NULL and this will crash. However, this can happen only in case of OOM.
Check before use, because mysqlnd can return NULL and this will crash. However, this can happen only in case of OOM.
Don't use NULL pointer, always check before use
Don't use NULL pointer, always check before use
Test fixes and updates to work with a wider range of MySQL server configs
Test fixes and updates to work with a wider range of MySQL server configs
Remove unused variable
Conditional compilation is replaced by macro
merge FPM SAPI from trunk (as agreed with Johannes)
Don't use conn->net without checking if it is NULL, because it can be NULL in OOM conditions. This would cause a crash.
Don't use conn->net without checking if it is NULL, because it can be NULL in OOM conditions. This would cause a crash.
Remove a function that has no usage. The zval cache was disabled/removed in 5.3.0-RC3.
Add checks to check the underlying pointer in the resource. It can happen that the underlying pointer is freed (like in the case of connection reconnect), and then it cannot be allocated anymore, which means that NULL will be used consequently by the functions that fetch the resource and the crash is immediate.
Add checks to check the underlying pointer in the resource. It can happen that the underlying pointer is freed (like in the case of connection reconnect), and then it cannot be allocated anymore, which means that NULL will be used consequently by the functions that fetch the resource and the crash is immediate.
Added support for object references in recursive serialize() calls. FR #36424
Handle the situation when MYSQLND_PROTOCOL's methods return NULL. mysqlnd should not crash but gracefully return with an error.
Handle the situation when MYSQLND_PROTOCOL's methods return NULL. mysqlnd should not crash but gracefully return with an error.
Handle the situation when mysql_init()/mysqlnd_init() return NULL. It is a rare case of OOM but PHP shouldn't crash, if possible.
Handle the situation when mysql_init()/mysqlnd_init() return NULL. It is a rare case of OOM but PHP shouldn't crash, if possible.
Gracefully handle OOM in mysqlnd_stmt_init. Release the handle and return NULL.
Gracefully handle OOM in mysqlnd_stmt_init. Release the handle and return NULL.
Init should return status value because initialization can fail. In this case mysqlnd_init() should return NULL to the end-user.
Init should return status value because initialization can fail. In this case mysqlnd_init() should return NULL to the end-user.
Use the specialized macro for this case
Use the specialized macro for this case
Use only memory that has been allocated
Use only memory that has been allocated
Access memory which was really allocated
Access memory which was really allocated
fix zend_std_get_static_property() in ZTS mode
use correct condition in the if
- Interned string related callbacks moved turned from compiler_globals into real globals - Updated API version number
Changed test case to use our new dummy MX records.
fix C++ builds on Mac
Check for -1 as well here
Check for -1 as well here
Let's have a sane error message here instead of some cryptic zlib error
Let's have a sane error message here instead of some cryptic zlib error
Improved test
Added support for numeric & scalar type hint as defined within http://wiki.php.net/rfc/typecheckingstrictandweak RFC
Added caches to eliminate repeatable run-time bindings of functions, classes, constants, methods and properties
Allow ereg to be built as shared on Windows
Allow arbitrary number of space characters between type-hint and method/function parameter
Ooops, return values...
Add JSON_BIGINT_AS_STRING for json_decode() to parse large numbers as strings rather than casting to double and loosing precision.
Check set->data for validity before using it. Prevents crashes after OOM.
Check set->data for validity before using it. Prevents crashes after OOM.
When OOM hits the wire, don't crash.
When OOM hits the wire, don't crash.
Remove this RC file, it should be named template.rc anyway and the default template.rc already covers what this .rc file did
- Improved CLI Interactive readline shell (Johannes)   . Added cli.pager ini setting to set a pager for output.   . Added cli.prompt ini settingto configure the shell prompt.   . Added shortcut #inisetting=value to change ini settings at run-time.   . Don't terminate shell on fatal errors.
Added support for JSON_NUMERIC_CHECK option in json_encode() that converts numeric strings to integers.
Added support for JSON_NUMERIC_CHECK option in json_encode() that converts numeric strings to integers.
- Added scalar typehinting.
New current()/next() test
New current()/next() test
- Added arginfo
- Added arginfo
fix ZTS build
fix ZTS build
MFH: Add IV to openssl_(en|de)crypt() Add openssl_cipher_iv_length()
change the startup libevent info log from notice to debug
fix undefined value for log_level when not set in the conf file
Add  parameter to openssl_(en|de)crypt
- set hard and soft limit (instead of only the soft limit) when setting rlimit_core or rlimit_files - remove the debug log about getrlimit on the main process wich is meaningless when rlmit_* settings are set
- #51821, fix --with-libevent-dir (patch by tony2001)
* fixed bug #47842      sscanf() does not support 64-bit values
* fixed bug #47842      sscanf() does not support 64-bit values
- #51854, fix logic (patch by Tjerk)
- #51854, fix logic (patch by Tjerk)
And I thought I fixed that... Part of the previous changeset - remove duplicated code/ The ifdefs were for debug purposes.
- #51793, Add alpha argument to imagecolorset
NEWS entry
Remove duplicated code. Use one centralized functions for data extraction.
Remove duplicated code. Use one centralized functions for data extraction.
Update test file
Add iterator to mysqli_result. Works both for : - USE_RESULT, can be iterated only once, kind of forward iterator - STORE_RESULT, can be iterated multiple times
fix typo
add missing news about backlog socket context option for stream_socket_server()
* fixed bug #49819: STDOUT losing data with posix_isatty()
* fixed bug #49819: STDOUT losing data with posix_isatty()
- #43233
- #43233, sasl support for ldap on windows
- #43233, sasl support for ldap on windows
- 51844
- #51844, checkdnsrr does not support types other than MX
- #51844, checkdnsrr does not support types other than MX
typo
typo
result_meta local storage
result_meta local storage
fix external build
Allow overloading of mysqlnd_result_meta_init(). Add free space for future hooks.
Allow overloading of mysqlnd_result_meta_init(). Add free space for future hooks.
Export MYSQLND_PROTOCOL methods
Export MYSQLND_PROTOCOL methods
- Give possibility to overload mysqlnd_result_init(). - Always use conn->m->stmt_init instead of mysqlnd_stmt_init()
- Give possibility to overload mysqlnd_result_init(). - Always use conn->m->stmt_init instead of mysqlnd_stmt_init()
OOM fixes
OOM fixes
Added support for CURLOPT_MAX_RECV_SPEED_LARGE and CURLOPT_MAX_SEND_SPEED_LARGE.
- initialize some variables - initialize the methods in a shorter way, use the compiler.  = on structures copies them. Allows also exportability of  the methods.
- initialize some variables - initialize the methods in a shorter way, use the compiler.  = on structures copies them. Allows also exportability of  the methods.
Export the methods of MYSQLND_NET
Export the methods of MYSQLND_NET
Export the result_metadata methods to external modules.
Export the result_metadata methods to external modules.
Somehow missed to commit this, for better fix for #51605
Better fix for #51605
Better fix for #51605
Errors using reserved words as methods
Errors using reserved words as methods
Rename JSON_Serializable to JsonSerializable per ML discussion
Restructure into PHP/PECL/PEAR component areas (at the expense of duplication)
Restructure into PHP/PECL/PEAR component areas (at the expense of duplication)
NEWS
 - code cleanups  - cleanup progress data from session vars as soon as all    post data has been readden (upload_progress.cleanup    ini setting allows to disable this)
One more time fixing the tests, lets use $IS_MYSQLND which comes from connect.inc
One more time fixing the tests, lets use $IS_MYSQLND which comes from connect.inc
here comes the news, too
These tests should be run only if mysqli uses mysqlnd. Part of fix for Bug #51712 Test mysql_mysqlnd_read_timeout_long must fail on MySQL4
These tests should be run only if mysqli uses mysqlnd. Part of fix for Bug #51712 Test mysql_mysqlnd_read_timeout_long must fail on MySQL4
Document CGI options in the manpage (bug #51718) Patch by Daniel Egeberg
Document CGI options in the manpage (bug #51718) Patch by Daniel Egeberg
Document CGI options in the manpage (bug #51718) Patch by Daniel Egeberg
Removed double allocation of buffer inside openssl_random_pseudo_bytes() and cleanup code
Removed double allocation of buffer inside openssl_random_pseudo_bytes() and cleanup code
Added session upload progress tests
Added upload progress feedback in session data as describied in RFC : http://wiki.php.net/rfc/session_upload_progress
fix the fix for the fix
NEWS is not docs and limit lines to 80chars
make the code more readable
Abort if DTrace is not installed on the system
Abort with an error message if we cannot create the DTrace header file.
- Added check for constant creation on Traits - Simplified trait flag check - Test++ :)
- New tests
- Added check for 'static' on trait visibility modifier
- New tests
- Added get_declared_traits()
Well we do need zend_throw_exception_ex ;-)
Added compiler hints
Optimized access to static properties using executor specialization. A constant class name may be used as a direct operand of ZEND_FETCH_* instruction without previous ZEND_FETCH_CLASS.
Add JSON_Serializable interface Objects implementing JSON_Serializable will have their ->jsonSerialize() method called
- nuke unused vars
- #51063, news and test
- #51063, implement getimagesizefromstring
fix bug #48601 (xpath() returns FALSE for legitimate query) add test
fix bug #48601 (xpath() returns FALSE for legitimate query) add test
fix bug #48601 (xpath() returns FALSE for legitimate query) add test
- New tests
- Added check for trait when trying to extend it
- Added check for abstract class
fix bug #49490 (XPath namespace prefix conflict) add test
fix bug #49490 (XPath namespace prefix conflict) add test
OOM stability fixes
OOM stability fixes
Add possibility to control the allocator in when PHP is compiled with debug
Add possibility to control the allocator in when PHP is compiled with debug
fix bug #51721 (mark DOMNodeList and DOMNamedNodeMap as Traversable)
fix bug #51721 (mark DOMNodeList and DOMNamedNodeMap as Traversable)
fix non-windows builds
Well, as long as we're dealing with typos... :)
- fix build
Alter the getmxrr() test to use lists.php.net (which we presumably control) instead of ez.no (which we presumably don't) for the single MX record test.
Alter the getmxrr() test to use lists.php.net (which we presumably control) instead of ez.no (which we presumably don't) for the single MX record test.
Changed naming of traits-related helper functions (suggested by Derick), added missing static qualifiers.
- revert #51273
- revert fix for #51723 in 5.2, vc6 does not support strtoi64, use builtin functioon in 5.3 (trunk is vc9+ only)
- revert fix for #51723 in 5.2, vc6 does not support strtoi64, use builtin functioon in 5.3 (trunk is vc9+ only)
Handle OOM in mysqlnd_res::store_result_fetch_data
Handle OOM in mysqlnd_res::store_result_fetch_data
- fix build (declaration must be first)
- fix build (declaration must be first)
Handle OOM in mysqlnd_fetch_row_buffered_c()
Handle OOM in mysqlnd_fetch_row_buffered_c()
- revert as vc6 does not support strtoi64, update to 5.3 will be the fix
Handle OOM in mysqlnd_fetch_row_unbuffered_c()
Handle OOM in mysqlnd_fetch_row_unbuffered_c()
Handle OOM stemming from mysqlnd_result_init in the same function and up the stack.
Handle OOM stemming from mysqlnd_result_init in the same function and up the stack.
- #51273, Content-length header is limited to 32bit integer with apache2/windows
- #51273, Content-length header is limited to 32bit integer with apache2/windows
- #51273, Content-length header is limited to 32bit integer with apache2/windows
Handle gracefully OOM in mysqlnd_mempool_create and up the stack
Handle gracefully OOM in mysqlnd_mempool_create and up the stack
- Replaced 'zend_hash_find' to 'zend_hash_quick_find' on zend_hash_compare() function
- Replaced 'zend_hash_find' to 'zend_hash_quick_find' on zend_hash_compare() function
- Replaced 'zend_hash_find' to 'zend_hash_quick_find' on zend_hash_compare() function
Handle OOM in block_alloc_get_chunk, and also in the caller in mysqlnd_wireprotocol.c
Handle OOM in block_alloc_get_chunk, and also in the caller in mysqlnd_wireprotocol.c
Remove unused parameter
Remove unused parameter
- WS
- WS
One more case to handle in case of OOM, in block_alloc_resize_chunk
One more case to handle in case of OOM, in block_alloc_resize_chunk
Handle OOM when resizing blocks during data fetch
Handle OOM when resizing blocks during data fetch
Better handing of OOM in mysqlnd::set_client_option
Better handing of OOM in mysqlnd::set_client_option
- update bison version (mike)
- update bison version (mike)
- Revert accidental changes
- WS
- Changed zend_hash func calls to use the quick ones
Refactored part of the Traits implementation. # - renamed php_runkit_function_copy_ctor to _duplicate_function #   REM: runkit does not compile with trunk at the moment, fixing it would introduce even more version #ifs, don't know what the best way is to fix it # - extracted traits related stuff from destroy_zend_class into _destroy_zend_class_traits_info #   - need to investigate implementation/handling of internal classes further before enabling internal traits
merge the fix for #51688
Make sure we search the source dir for the dtrace files
Handle OOM cases, in case of persistent connections this is real and the Zend MM won't help.
Handle OOM cases, in case of persistent connections this is real and the Zend MM won't help.
Implement SplObjectStorage::getHash()
Add a test case for the recently fixed memleak
Add a test case for the recently fixed memleak
fix tests
fix skipif section
Try blob columns instead of int, and insert a lot of data at once
Try blob columns instead of int, and insert a lot of data at once
- Adieu VC6/7/8, merci pour les bons et loyaux services
Bug #51691 (Unnecessary realloc causes crashes in PHP trunk tests with interned strings).  Updated tests check some other edge cases
Bug #51691 (Unnecessary realloc causes crashes in PHP trunk tests with interned strings).  Updated tests check some other edge cases
Remove obsolete test
Update UPGRADING with recent feature removals
- Updated to version 2010.9 (2010i)
- Updated to version 2010.9 (2010i)
- Updated to version 2010.9 (2010i)
- we don't need that anymore
- we don't need that anymore
- fix build (void is evil)
Mask schemaname in error messages
Mask schemaname in error messages
revert change #298288: Remove old dsp/dsw/makefile files
- fix possible Dechunking Filter Buffer Overflow
- fix possible Dechunking Filter Buffer Overflow
const-ify fields
const-ify fields
add the constant back. quite a lot of code uses it.
spread some more const
- WS
- WS
- WS
ws
- ws - removed unused variables
- Reimplemented ZEND_INIT_FCALL_BY_NAME and ZEND_INIT_NS_FCALL_BY_NAME to use literals instead of additional operands - Optimized access to global constants
Of course, 64*4 is 256, not 1024
Of course, 64*4 is 256, not 1024
Move the macro to mysqlnd_enum_n_def.h, because it can be reused in other places. Also, premultiply the values by 4 and add some reserve for future releases of the server.
Move the macro to mysqlnd_enum_n_def.h, because it can be reused in other places. Also, premultiply the values by 4 and add some reserve for future releases of the server.
Test case for the buffer overflow in mysqlnd_change_user
Test case for the buffer overflow in mysqlnd_change_user
- Unifiy that message - Mention php.ini
- Unifiy that message - Mention php.ini
Remove unused variables
Removed safe_mode  * Removed ini options, safe_mode*  * Removed --enable-safe-mode --with-exec-dir configure options on Unix  * Updated extensions, SAPI's and core  * php_get_current_user() is now declared in main.c, thrus no need to include safe_mode.h anymore
fix test
fix test
fix skipif sections
Update tests related to allow_call_time_pass_reference
- Remove empty tests
- Removed allow_call_time_pass_reference (Pierrick)
- BFN #51624
fix ~450 tests and 25 segfaults make test, anyone?
mention which setting!
mention which setting!
Remove unused variable
Add DTrace probes
Initialize vars to prevent valgrind warnings in some cases
Initialize vars to prevent valgrind warnings in some cases
Add PHP_VALUE and PHP_ADMIN_VALUE interpretation from fastcgi headers. It works as php_value and php_admin_value from the main conf file or apache sapi.
Remove unused functions / variables / #if 0 blocks
typo
fix WS
Use fast class fetch function
typo and errors in php-fpm.conf
Update the deprecated directives in the MakeFile
For real this time :-/
Implemented Traits for PHP as proposed in the RFC [TRAITS]
Changed the exclusion keyword from 'instead' to 'insteadof'. [TRAITS] #That was suggested several times already, but am still not sure whether that really reads better. #Especially since only the trait is mentioned, since the method name would be duplicated anyway.
Change the way the allocator is called - through an abstraction to give the possibility of pluggability. Thanks to the macros already used the changes are not pervasive.
Change the way the allocator is called - through an abstraction to give the possibility of pluggability. Thanks to the macros already used the changes are not pervasive.
fix typo
revert most of the Andrey's patch that causes segfaults (as agreed with Pierre)
revert most of the Andrey's patch that causes segfaults (as agreed with Pierre)
Removed unused function
adding what last commit was missing
adding what last commit was missing
Remove dead code and add possibility to fine tune the size of a mempool (used for result sets).
Remove dead code and add possibility to fine tune the size of a mempool (used for result sets).
Optimized access to global constants using values with pre-calculated hash_values from litersls table
- Removed unused variables
Add the posibility to switch off the compilation of statistics collection, for those who want to optimize the last percent of their binaries.
Add the posibility to switch off the compilation of statistics collection, for those who want to optimize the last percent of their binaries.
ZEND_RETURN is splitted into two new instructions ZEND_RETURN and ZEND_RETURN_BY_REF
initialize variable. this code still segfaults in OpenSSL, no idea why
initialize variable. this code still segfaults in OpenSSL, no idea why
- Bug #51629, CURLOPT_FOLLOWLOCATION error message is misleading
- Bug #51629, CURLOPT_FOLLOWLOCATION error message is misleading
- Bug #51629, CURLOPT_FOLLOWLOCATION error message is misleading
- Bug #51629, CURLOPT_FOLLOWLOCATION error message is misleading
- Bug #51629, CURLOPT_FOLLOWLOCATION error message is misleading
- Bug #51629, CURLOPT_FOLLOWLOCATION error message is misleading
correct wrong comparison (thx to felipe)
Removed the session 4.2 bug compatibility mode
Remove old dsp/dsw/makefile files, these arent used by the build system anymore and are barely updated nor available for all extensions
Updated copyright year
Drop php_register_var(), Thanks Felipe
Updated copyright year
Removed session_is_registered(), session_register() and session_unregister().  -- They are no longer needed without register_globals
switch the configuration syntax from xml to ini It's been describe in the RFC: http://wiki.php.net/rfc/fpm/ini_syntax
- Changed order to FR
Removed import_request_variables(), this is not needed anymore without register_globals
- Dropped unused HL_BG_COLOR (Kalle)
Added missing zend_parse_parameters_none() call to sys_getloadavg()
Remove highlight.bg, it was removed in the old trunk and its not referenced in zend_highlight.c, meaning its not even implemented correctly in 5.3.
Remove unused variable
Eliminated unnecessary compile-time hash_value recalculation for interned strings
Removed register_globals
typo
Add a check request_method. If fcgi protocol is not followed, a segfault can occur.
Change php_defines in configuration file to php_value,php_admin_value,php_flag,php_admin_flag (as in the apache sapi). php_admin* sets values as ZEND_INI_SYSTEM mode while php_* sets values as ZEND_INI_USER
Hardening the reads of mysqlnd. All packets but the row data packet are read into preallocated buffer, either on the stack or on the heap (cmd_buffer). The size of the buffer is always checked to skip buffer overruns. Only up to the size of the buffer is stored into the buffer but packet->header.size has the size of all data sent. In this case network layer bails.
Hardening the reads of mysqlnd. All packets but the row data packet are read into preallocated buffer, either on the stack or on the heap (cmd_buffer). The size of the buffer is always checked to skip buffer overruns. Only up to the size of the buffer is stored into the buffer but packet->header.size has the size of all data sent. In this case network layer bails.
add test for self:: and static::
put the trigger in the right place
put the trigger in the right place
It is possible that change user tries an user who has old password. Instead of error message that doesn't say much there is more information now.
It is possible that change user tries an user who has old password. Instead of error message that doesn't say much there is more information now.
- Improve test
- Improve test
- Improve test
WS
fix ZTS build
fix build
fix build
Updated version numbers
Added a number of small performance tweaks and optimizations   . ZEND_RECV now always has IS_CV as its result   . ZEND_CATCH now has to be used only with constant class names   . ZEND_FETCH_DIM_? may fetch array and dimension operans in a different order
regenerated files
Added concept of interned strings. All strings constants known at compile time are allocated in a single copy and never changed.
Added concept of interned strings. All strings constants known at compile time are allocated in a single copy and never changed.
Changed the structure of op_array.opcodes. The constant values are moved from opcode operands into a separate literal table
Added an optimization which saves memory and emalloc/efree calls for empty HashTables
Added a micro benchmark which measures the performance of some primitive operations. It's usefult to detect performance evaluation caused by new patches.
fix infinite loop in the test
fix infinite loop in the test
Added explanatory comments to filter_input and filter_input_array to document why some code that looks intuitively wrong is actually correct. Related to bug #51344 (FILTER_NULL_ON_FAILURE flag automatically set in filter_input() functions).
Added explanatory comments to filter_input and filter_input_array to document why some code that looks intuitively wrong is actually correct. Related to bug #51344 (FILTER_NULL_ON_FAILURE flag automatically set in filter_input() functions).
Added explanatory comments to filter_input and filter_input_array to document why some code that looks intuitively wrong is actually correct. Related to bug #51344 (FILTER_NULL_ON_FAILURE flag automatically set in filter_input() functions).
fix 64-bit integer overflow in mhash_keygen_s2k
fix 64-bit integer overflow in mhash_keygen_s2k
true/false was not a valid value for boolean directives
restore $this support for closures to its former glory
correct path in the man page
fix non-ts build
Add fix made previously
Add attribution (thanks Felipe)
Added traits test cases. No engine changes for now. [TRAITS]
Removed register_long_arrays ini option (and $HTTP_SESSION_VARS from ext/session)
Last batch of int/uint comparison fixes
Last batch of int/uint comparison fixes
More int/uint comparison warning fixes
More int/uint comparison warning fixes
Remove unused file
Remove unused file
more WS
more WS
CS + WS changes
CS + WS changes
final fix for long opts in getopt()
final fix for long opts in getopt()
Bump PHP_API_VERSION
discard first TWO symbols of a long argument
discard first TWO symbols of a long argument
- #35638, add udate to imap_fetch_overview
- #35638, add udate to imap_fetch_overview
simplify configure check for nanosleep()
simplify configure check for nanosleep()
use new type + const static
re-add updated FPM
prepare to re-add newer FPM version
* Pass TSRMLS_C around pageinfo.c * Use zend_parse_parameters_none() in pageinfo.c
PHP_OS is now always WINNT on Windows, since we don't support anything prior to XP SP2
Remove a couple TSRMLS_FETCH() calls around ext/main/sapi
- begintransaction entry
- pdo::begintransaction entry
add FPM sapi to trunk
- fix inline doc
Removed y2k_compliance ini option, making it "always" enabled internally  - The only reference to y2k_compliance was in php_std_date(). Browsers thats not compatable have a marketshare of 0.01% if they even are in use today
NEWS entry for the define_syslog_variables commit
* Changed the way removed ini directives are shown so its easier to add new ones * Removed define_syslog_variables and its associated functions
- Expose date-extension object creation externally. - Expose DateTime object initialisation externally.
fix bug #50828 (DOMNotation is not subclass of DOMNode)
fix bug #50828 (DOMNotation is not subclass of DOMNode)
make sure the actual length of the argument passed matches the length of the argument declared this fixes things like `php --zend-exten=1` or `php-fpm --fpm-con=conf`
make sure the actual length of the argument passed matches the length of the argument declared this fixes things like `php --zend-exten=1` or `php-fpm --fpm-con=conf`
one more fix and both work with libmysql and mysqlnd
one more fix and both work with libmysql and mysqlnd
fix build
- WS
- WS
- WS
- WS
Another fix for the 16 chars user limitation of MySQL
Another fix for the 16 chars user limitation of MySQL
Stricly C
Stricly C
fix typo
fix typo
change namespaced ctors - only __construct would work
change namespaced ctors - only __construct would work
fix bug #48983 (DomDocument : saveHTMLFile wrong charset)
fix bug #48983 (DomDocument : saveHTMLFile wrong charset)
Update the FILTER_VALIDATE_EMAIL filter to fix bug #49576
Update the FILTER_VALIDATE_EMAIL filter to fix bug #49576
Update the FILTER_VALIDATE_EMAIL filter to fix bug #49576
fix WS
re-apply bug fix #35673 (formatOutput does not work with saveHTML) from old trunk add test BFN
re-apply bug fix #35673 (formatOutput does not work with saveHTML) from old trunk add test BFN
fix #49192 - crash in GC when get_properties handler returns null
fix #49192 - crash in GC when get_properties handler returns null
- revert revision 297277, break the builds (declaration must go 1st, size of void * and other known situations). Also Johannes, can you check that commit pls? Thought we were in bugs fixing only for 5.3
fix #51394 - try harder to find script lineno when exception happens
fix #51394 - try harder to find script lineno when exception happens
Add new full_special_chars filter to tests
Add new full_special_chars filter to tests
Better fix for bug #51347 mysqli_close / connection memory leak
Better fix for bug #51347 mysqli_close / connection memory leak
On beginTransaction() reset error state
On beginTransaction() reset error state
On beginTransaction() reset error state
- add it to 5.2 too, cannot hurt and will spare some work later with pcre&co
- fix build
- fix build
- fix build
Moved to 5.3
full_special_chars filter from trunk - approved by johannes
Added the full htmlspecialchars() functionality which includes utf-8 validation as a default filter.
Set session.entropy_file to /dev/urandom or /dev/arandom by default if present at compile-time.  Addresses part of bug #51436
Add some const declarations, makes C++ extension writers happy
Remove main/php3_compat.h, for that a few references to `function_entry` have to be replaced by `zend_function_entry`.
Add ReflectionZendExtension class and --rz option to CLI
It's 2010 already
It's 2010 already
It's 2010 already
Use php_error_docref instead of zend_error
Use php_error_docref instead of zend_error
Add ReflectionExtension::isTemporary() and ReflectionExtension::isPersistent().
Upgraded bundled sqlite to version 3.6.23.1
Upgraded bundled sqlite to version 3.6.23.1
Don't assume the SHA-based crypt constants are registered this is a partial fix for 51435.
- Updated to version 2010.7 (2010g)
- Updated to version 2010.7 (2010g)
- Updated to version 2010.7 (2010g)
Upgraded bundled PCRE to version 8.02.
Upgraded bundled PCRE to version 8.02.
Upgraded bundled PCRE to version 8.02.
JOAAT hashing now supports incremental hashing.
Backported the fix for bug #51393 (DateTime::createFromFormat() fails if format string contains timezone) to PHP_5_2 per discussion with Derick.
fix protos
Remove some more calls to TSRMLS_FETCH()
fix the protos
fix build - there are now 34 algos
Remove some calls to TSRMLS_FETCH in ext/soap
- init hval
Add Tokyo Cabinet abstract DB support to ext/dba
Get rid of outdated TODO files
Added FNV and Jenkins's one-at-a-time support to the Windows build.
Reset this document
Added Jenkins's one-at-a-time hash support to ext/hash.
fix build failure after recent commit by Kalle
Minor fix to constants registered in ext/hash, and update NEWS
Add FNV-1 support to ext/hash
Switch default_charset, if not specified, from ISO-8859-1 to UTF-8 I have been wanting to make this change for years, but there is a small chance of BC issues, so it shouldn't go into a minor release.
- Set trunk version.
- Resurrect trunk for branches/PHP_5_3
Added test for bug #51338
Added test for bug #51338
name changes for consistency with planned additions
New tests for existing functionality
- BFN
I am sorry I tried fixing PHP without extensive discussion on the mailing list. I am sorry I tried fixing PHP without extensive discussion on the mailing list. I am sorry I tried fixing PHP without extensive discussion on the mailing list.
I am sorry I tried fixing PHP without extensive discussion on the mailing list. I am sorry I tried fixing PHP without extensive discussion on the mailing list. I am sorry I tried fixing PHP without extensive discussion on the mailing list.
fix valgrind warning introduced with the latest patch. The memory should be calloc-ed, not malloced, because the code that uses the stmt storage needs that.
Update oci_commit tests
merge
decouple the methods in MYSQLND_STMT from the data, needed to move to a new structure MYSQLND_STMT. Makes the code cleaner and less error-prone. Also fix PDO/MySQL which directly touch mysqlnd internals instead of using API calls.
decouple the methods in MYSQLND_STMT from the data, needed to move to a new structure MYSQLND_STMT. Makes the code cleaner and less error-prone. Also fix PDO/MySQL which directly touch mysqlnd internals instead of using API calls.
news update
New OCI8 test
- Revert accidental commit.
- Forgot to commit this patch. Sorry.
- Forgot to commit this patch. Sorry.
- Forgot to commit this patch. Sorry.
- Oops.
MF53: - Update the bundled libmbfl to the latest on upstream. (r296101)
allow persistency of PS
allow persistency of PS
- These are no longer relevant
MF53: New and improved DBA tests
MF53:- Added backlog socket context option for stream_socket_server(). (Mike)
- Reverted r296062 and r296065
- Update the bundled libmbfl to the latest on upstream.
- Update the bundled libmbfl to the latest on upstream.
New and improved DBA tests
- This is 5.4.0 (for now..:)
add backlock socket context option for stream_socket_server(), which had a hardcoded backlog of 5 at two occurrances
add backlock socket context option for stream_socket_server(), which had a hardcoded backlog of 5 at two occurrances
Hello PHP 5.4, open for all new stuff.
MFH: Improved / fixed output buffering (Michael Wallner)
Properly skip tests that require the bundled gd lib when the external is used
Properly skip tests that require the bundled gd lib when the external is used
Properly skip tests that require the bundled gd lib when the external is used
Mask name of older DB4 versions
Mask name of older DB4 versions
Mask name of older DB4 versions
- Updated to version 2010.5 (2010e)
- Updated to version 2010.5 (2010e)
- Updated to version 2010.5 (2010e)
Rename the HAVE_LIBICONV_IN_LIBICONV macro to ICONV_ALIASED_LIBICONV, making it less cryptic
Rename the HAVE_LIBICONV_IN_LIBICONV macro to ICONV_ALIASED_LIBICONV, making it less cryptic
Rename the HAVE_LIBICONV_IN_LIBICONV macro to ICONV_ALIASED_LIBICONV, making it less cryptic
Add some bcmath tests
Add some bcmath tests
Add some bcmath tests
- Update test cases after the fix for bug #49778.
- Update test cases after the fix for bug #49778.
semantics
- Change this test case because non-6 digits are supported now, and clarify   that the "1" doesn't show because the precision isn't high enough. (Same   happens if you change it to 9).
- Change this test case because non-6 digits are supported now, and clarify   that the "1" doesn't show because the precision isn't high enough. (Same   happens if you change it to 9).
- Commit updated .re file as well for the "first day of" issue.
- New test
- New test
Add NEWS entries for filter overflow fix
Add NEWS entries for filter overflow fix
Detect overflows before they occur in the filter extension (bug #51023) Thanks to Sean Finney for the patch
Detect overflows before they occur in the filter extension (bug #51023) Thanks to Sean Finney for the patch
Detect overflows before they occur in the filter extension (bug #51023) Thanks to Sean Finney for the patch
Test misc argument error conditions
Test misc argument error conditions
Auto detect recent versions of Berkeley DB4
Auto detect recent versions of Berkeley DB4
Auto detect recent versions of Berkeley DB4
- BFN #50999
Add XFAIL
DBA tests: cleanup and sycn.  Add new Berkeley DB 4 tests
DBA tests: cleanup and sycn.  Add new Berkeley DB 4 tests
DBA tests: cleanup and sycn.  Add new Berkeley DB 4 tests
Remove magic_quotes from php.ini to match code reality
- Entry in wrong place...
Mask resource numbers
Mask resource numbers
Turn on gc before we test it
Turn on gc before we test it
BFN
- Possible fix for bug #50999
- Possible fix for bug #50999
- The ctor requires both arguments - Sync/fix ctor and export arguments to 5_2
- The ctor requires both arguments - Sync/fix ctor and export arguments to 5_2
- The ctor requires both arguments - Sync/fix ctor and export arguments to 5_2
make portable
make portable
make portable
Added SKIP sections in case extension isn't enabled
Added SKIP sections in case extension isn't enabled
Improve basic code coverage
Improve basic code coverage
Improve basic code coverage
- Updated to version 2010.3 (2010c)
- Updated to version 2010.3 (2010c)
- Updated to version 2010.3 (2010c)
Add some sysvmsg coverage tests
Add some sysvmsg coverage tests
Add some sysvmsg coverage tests
- Whitespaces.
- Whitespaces.
- Whitespaces.
Added parameter parsing check to SimpleXMLElement::count()
Added parameter parsing check to SimpleXMLElement::count()
- merge/update/fix
add better description to the problem
add better description to the problem
Back to dev
5.2.13
 MFH'd crypt() tests - renamed to fit phpt schema, tests for DES-fallback,  use b'' on strings.
 Rename crypt_blowfish_invalid_rounds.phpt to crypt_blowfish_variation1.phpt  to follow phpt naming conventions.
Add info on PHP doc contributions and add internals references
Add info on PHP doc contributions and add internals references
Update crypt() tests to use binary strings and do stricter comparisons
- update test
- update test
- return *0/*1 on failure instead of FALSE, to avoid possible issues with bad user code
- return *0/*1 on failure instead of FALSE, to avoid possible issues with bad user code
- fix build when __GMP_BITS_PER_MP_LIMB is not defined but GMP_LIMB_BITS (no trace of this change in gmp's changelog...)
- fix build when __GMP_BITS_PER_MP_LIMB is not defined but GMP_LIMB_BITS (no trace of this change in gmp's changelog...)
- restore the credit, always been this name, will always be
- crypt entry
- With "extended" hashes, detect and reject invalid "setting" strings.   With "traditional" hashes, support many "reasonable" invalid salts in   UFC-crypt compatible way, reject the rest of invalid salts. (Solar Designer)
- With "extended" hashes, detect and reject invalid "setting" strings.   With "traditional" hashes, support many "reasonable" invalid salts in   UFC-crypt compatible way, reject the rest of invalid salts. (Solar Designer)
- Corrected the sanity check of the "setting" string in _crypt_blowfish_rn() to   reject iteration counts encoded as 36 through 39.  Previously, these would be   misinterpreted as being the same as 04 through 07. (Solar Designer)
- Corrected the sanity check of the "setting" string in _crypt_blowfish_rn() to   reject iteration counts encoded as 36 through 39.  Previously, these would be   misinterpreted as being the same as 04 through 07. (Solar Designer)
Not sure how I screwed up that MFH so badly. Proper fix to config.m4 applied for when checking different crypt() types.
- get the right error on windows
- get the right error on windows
MFH fix to config.m4 to make MD5 check label accurate
MFH crypt() tests
Marked XFAIL as requested by Pierre
Tests for upcoming patches to crypt, as discussed with Pierre over IRC.
- Update shtool to 2.0.8
- Update shtool to 2.0.8
- Update shtool to 2.0.8
fix buffer overflow
update copyright
mbstring filter files were referenced but never actually compiled
Building libmbfl seperately fails since the shared library version is an API reference rather than a version number
Correct description of getservbyname_basic.phpt (bug #51022)
Correct description of getservbyname_basic.phpt (bug #51022)
Correct description of getservbyname_basic.phpt (bug #51022)
- Added missing SKIPIF
- Added missing SKIPIF
- Added missing SKIPIF
add typedefs for all structure methods, and then reuse these typedefs
add typedefs for all structure methods, and then reuse these typedefs
- Removed duplicate tests (bug #51007)
- Removed duplicate tests (bug #51007)
- Removed duplicate tests (bug #51007)
- Added missing SKIPIF section to tests (bug #51014)
- Added missing SKIPIF section to tests (bug #51014)
- Added missing SKIPIF section to tests (bug #51014)
- merge 5.3.2RC2 changes, unsorted # for now
back to dev
5.2.13RC2
Release PECL OCI8 1.4.1
- fix php_date_llabs declaration
- fix php_date_llabs declaration
- fix php_date_llabs declaration
- those are in 5.3.2 now, merge to 5.3.2 section is coming
Back to dev
5.2.13RC2
Spelling typo in new check message
Spelling typo in new check message
- Update in trunk and PHP 5.2 as well.
- Update in trunk and PHP 5.2 as well.
- Update to 2010.2. #- Wondering why it wasn't committed yet...
Typo fix
make send_close a hook, too
make send_close a hook, too
It's a size_t here, not an unsigned int.
It's a size_t here, not an unsigned int.
- improve netsnmp detection (and restor snmp on win)
- improve netsnmp detection (and restor snmp on win)
- prevent unexpectable behaviors (for the user) with invalid path
- prevent unexpectable behaviors (for the user) with invalid path
touch
touch
bfn
- silent warning
- silent warning
- if they are outdated/wrong, no need to confuse the users
- if they are outdated/wrong, no need to confuse the users
Allow newer oracle versions
Allow newer oracle versions
Allow newer oracle versions
Pass tsrmls to all functions, which might need it in the future. We are anyway breaking the internal ABI in 5.3.2 so this won't hurt and make us prepared for the future.
Pass tsrmls to all functions, which might need it in the future. We are anyway breaking the internal ABI in 5.3.2 so this won't hurt and make us prepared for the future.
- vc6 does not expose it
- vc6 does not expose it
Downgrade bundled PCRE to version 7.9 due to 8.0+ version use of C99
Explicitly set mail.add_x_header in php.ini so test output matches expected results
Explicitly set mail.add_x_header in php.ini so test output matches expected results
No idea which recent change has cause this little API change, however it is not a big change and maybe it is even an improvement.
No idea which recent change has cause this little API change, however it is not a big change and maybe it is even an improvement.
Remove trailing dots
Remove trailing dots
Remove trailing dots
- missing patch (update to 0.9.3)
- missing patch (update to 0.9.3)
- missing patch (update to 0.9.3)
- update to 0.9.3
- update to 0.9.3
- update to 0.9.3
- fix test
- fix test
- fix test
- fix leak
- fix leak
- fix leak
- system/version dependent msg
- system/version dependent msg
- oops, wrong one applied, fix build.
- oops, wrong one applied, fix build.
- set errno on failure so that the caller can still rely on strerror (reporting wrong error w/o this change)
- set errno on failure so that the caller can still rely on strerror (reporting wrong error w/o this change)
- fix  system/version dependent msg, add skip cases, sync
- fix  system/version dependent msg, add skip cases, sync
- try again to get a crypto context when the key container did not exist (which is likely to be the case, on a 1st call)
- try again to get a crypto context when the key container did not exist (which is likely to be the case, on a 1st call)
Tests related to #50727
Tests related to #50727
Tests related to #50727
fix news
and the NEWS entry
backport checks from 5.3 which fix one known segfault, and maybe others unknown. Bug #50727 	Accesing mysqli->affected_rows on no connection causes segfault
Update the libmagic.patch to reflect the current situation. Contains a diff against upstream 5.03
Update the libmagic.patch to reflect the current situation. Contains a diff against upstream 5.03
pff
ZEND_EXTERN_MODULE_GLOBALS() is necessary with ZTS, at least on OS X. How confusing. (Forgot to commit to trunk/ before, sorry)
ZEND_EXTERN_MODULE_GLOBALS() is necessary with ZTS, at least on OS X. How confusing.
Blah, PDO_DBG_ENABLED is a 0/1 toggle
Blah, PDO_DBG_ENABLED is a 0/1 toggle
RINIT/RSHUTDOWN do nothing unless PDO_DBG_ENABLED is defined, so don't waste time calling them on every request.
RINIT/RSHUTDOWN do nothing unless PDO_DBG_ENABLED is defined, so don't waste time calling them on every request.
- fix leak
- fix leak
- fix skip clauses
- fix skip clauses
- fix test init
- fix test init
- fix write access check when write mode only is requested (not RW)
- fix write access check when write mode only is requested (not RW)
- cleanup & correct msg
- cleanup & correct msg
- this value is platform dependent (unix too)
- this value is platform dependent (unix too)
- cs
- cs
- fix test, rewrite it (same cases are tested), CS, simplify, be verbose on error not otherwise (avoid infinite loop in pcre_match inside run-test)
- fix test, rewrite it (same cases are tested), CS, simplify, be verbose on error not otherwise (avoid infinite loop in pcre_match inside run-test)
Backport some SplObjectStorage tests to 5.2
- fix test
- fix test
Back to dev
RC1 news
5.2.13RC1
- more EOL fixes, don't use expectf
- more EOL fixes, don't use expectf
- fix possible EOL conversion on svn co on windows
- fix possible EOL conversion on svn co on windows
- skip if not enough permission and add to trunk
- skip if not enough permission and add to trunk
- fix leak
- fix leak
- don't go through the reparse code when we have a share or DFS path (should fix #50542)
- don't go through the reparse code when we have a share or DFS path (should fix #50542)
- little comment to avoid undesired changes in this section
- little comment to avoid undesired changes in this section
- fix leak, win only
- fix leak, win only
- Short is enough, people will not understand it anyway. And this is not a TODO, this is what was already done..
- fix leak when the SID is already used and duplicated
- fix leak when the SID is already used and duplicated
- update/fix/skip/add for rename tests
- update/fix/skip/add for rename tests
- attempt to be more clear
- #50854, fix build on non windows, svn merge is useless.
- fix and update test according to recent fixes
- fix and update test according to recent fixes
- fix and update test according to recent fixes
- fix and update test according to recent fixes
- update
- #50854, fix build on non windows
- #50854, fix build on non windows
- removed debug breakpoint and improve inline comment
- removed debug breakpoint and improve inline comment
- prevent bad things to happen when invalid path are passed to MoveFileEx
- prevent bad things to happen when invalid path are passed to MoveFileEx
- [DOC] #45986, bad file descriptor warning when rename is used with invalid path, add php_win32_docref2_from_error to display system error for non posix api
- [DOC] #45986, bad file descriptor warning when rename is used with invalid path, add php_win32_docref2_from_error to display system error for non posix api
merge r294022. 5.2 branch doesnt need it
Daniel Convissor wants to test ext/date/lib, so enable code coverage data for him
- Updated to 2010.2.
- Ensure that stderr output are not buffered, portability for tests
- Ensure that stderr output are not buffered, portability for tests
- make it work on win, simplify expect using expectf
- make it work on win, simplify expect using expectf
- make it work on win, simplify expect using expectf
Added test case for bug #44827
Added test case for bug #44827
Added test case for bug #44827
- disable the non win32 version on win
- pls don't add .swp/bak/etc. :)
- ws
- ws
tz news
fix entries..can you count to 80?
- today entries
- fix test, dir separator agnostic
- fix test, dir separator agnostic
- add win32 version of the test, damned error msg with eol in them
- add win32 version of the test, damned error msg with eol in them
- Updated to version 2010.1 (./tzdata2010a)
- Updated to version 2010.1 (./tzdata2010a)
- Updated to version 2010.1 (./tzdata2010a)
- nl fix
- nl fix
- \n or \r\n (phpt are text in svn)
- \n or \r\n (phpt are text in svn)
- fix tests
- #50690, putenv does assign value when their length is one char
- #50690, putenv does assign value when their length is one char
- make getservbyname on windows behaves like *nux when proto is an empty string
- make getservbyname on windows behaves like *nux when proto is an empty string
- prevent possible crash when error/warnings are raised during startup (like deprecated features), 5.3+ only
- prevent possible crash when error/warnings are raised during startup (like deprecated features), 5.3+ only
- \n or \r\n as phpt are txt file in svn
- \n or \r\n as phpt are txt file in svn
- \n or \r\n as phpt are txt file in svn
- skip if proc_nice is not available
- skip if proc_nice is not available
- skip if proc_nice is not available
- fix win build
- fix win build, use bundled stdint
- fix win build, use bundled stdint
decrement correctly!
decrement correctly!
Add possibility to restrain the number of levels
Add possibility to restrain the number of levels
fix TS build
fix TS build
Upgraded bundled PCRE to version 8.01
Upgraded bundled PCRE to version 8.01
Upgraded bundled PCRE to version 8.01
Overlong hostnames breakthistest on NIS enabled FreeBSD
Overlong hostnames breakthistest on NIS enabled FreeBSD
Added missing INI settings
Added missing INI settings
Added missing INI settings
BFN
fix libgd FS100 (spurious horizontal line drawn by gdImageFilledPolygon)
fix libgd FS100 (spurious horizontal line drawn by gdImageFilledPolygon)
fix libgd FS100 (spurious horizontal line drawn by gdImageFilledPolygon)
- A few more extern declarations
- A few more extern declarations
Upgraded bundled sqlite to version 3.6.22.
Upgraded bundled sqlite to version 3.6.22.
- Add missing skipif
- Add missing skipif
- Add missing skipif
Make it GCC only feature (tracing). VC7 and up do the work too and it might be tweaked later.
Make it GCC only feature (tracing). VC7 and up do the work too and it might be tweaked later.
- WS + CS fixes
- WS + CS fixes
- WS + CS fixes
fix windows
fix windows
- Add extern declarations for fixing the build with some compilers
- Add extern declarations for fixing the build with some compilers
These instructions are apparently outdated # See http://news.php.net/php.windows/29806
These instructions are apparently outdated # See http://news.php.net/php.windows/29806
add filters to mcrypt
fix bug #49463 (setAttributeNS fails setting default namespace) add test
fix bug #49463 (setAttributeNS fails setting default namespace) add test
fix bug #49463 (setAttributeNS fails setting default namespace) add test
add filters to mcrypt # trunk will follow soon
fix wrong type and useless assignments
fix wrong type and useless assignments
fix wrong type and useless assignments
fix the letter type, which affects its type-error message
- fix build
- fix build
Added test for bug #50680
Added test for bug #50680
Added test for bug #50680
imagepolygon() and imagefilledpolygon() does not allow negative number of points causing invalid allocation
imagepolygon() and imagefilledpolygon() does not allow negative number of points causing invalid allocation
imagepolygon() and imagefilledpolygon() does not allow negative number of points causing invalid allocation
remove redefinition of bit_uint8korr
remove redefinition of bit_uint8korr
more PHPAPI for phpize-d builds
more PHPAPI for phpize-d builds
export more functionality for phpize builds
export more functionality for phpize builds
make mysqlnd's tracing API more reusable
make mysqlnd's tracing API more reusable
Added missing \n at the end of the file
fix NEWS entry
MFB. Don't free soap_headers just before comparing the length. This causes SoapClient to fail when requesting a URL
MFB. Don't free soap_headers just before comparing the length. This causes SoapClient to fail when requesting a URL
removed an unused variable
removed an unused variable
removed an unused variable
Don't free soap_headers just before comparing the length. This causes SoapClient to fail when requesting a URL
Bump version in early preparation for release
Bump version in early preparation for release
Revert commit 292222. It's not needed anymore to specify c99.
Revert commit 292222. It's not needed anymore to specify c99.
name resource build script resourcebundle.build
name resource build script resourcebundle.build
more typedef cosmetics
more typedef cosmetics
remove stale export
remove stale export
cosmetics. typedef-ed types should be in capital case
cosmetics. typedef-ed types should be in capital case
remove extern defintion of a variable that is no more used outside of the file where it is declared. Also really export with PHPAPI the protocol init/deinit functions
remove extern defintion of a variable that is no more used outside of the file where it is declared. Also really export with PHPAPI the protocol init/deinit functions
revert
this function should be exporten in all cases, not only under PHP6
this function should be exporten in all cases, not only under PHP6
missed to commit in 5_3, here it comes, reusability of stats
missed to commit in 5_3, here it comes, reusability of stats
missed to commit in 5_3, here it comes, reusability of stats
and another change to make the stats API re-usable
Rework the statistics macros to be reusable by external entities. Rename handlers to triggers. Dynamically allocate space for the statistics thus allow reusability.
Rework the statistics macros to be reusable by external entities. Rename handlers to triggers. Dynamically allocate space for the statistics thus allow reusability.
missed to commit to the branch
year++
year++
Year++
- use png_sig_cmp to support libpng 1.4, old is deprecated already in older version
- use png_sig_cmp to support libpng 1.4, old is deprecated already in older version
Install ext/json/php_son.h, too. # already done in other branches
Add the remaining code for statistics triggers
export some calls to init/deinit code outside of the module
export some calls to init/deinit code outside of the module
improve the stats subsystem. Reduce the number of macro definitions in half by smartly introducing 2 new macros. Make MYSQLND::stats a pointer from being aggregated and add triggers.
improve the stats subsystem. Reduce the number of macro definitions in half by smartly introducing 2 new macros. Make MYSQLND::stats a pointer from being aggregated and add triggers.
add restart_psession and end_psession hooks
add restart_psession and end_psession hooks
Bug #49600 (imageTTFText text shifted right) - fix difference of horizontal position between imagettftext() and imagettfbbox()
Bug #49600 (imageTTFText text shifted right) - fix difference of horizontal position between imagettftext() and imagettfbbox()
Bug #49600 (imageTTFText text shifted right) - fix difference of horizontal position between imagettftext() and imagettfbbox()
fix news
fix news
Worked with Samy Kamkar to improve LCG entropy.
Worked with Samy Kamkar to improve LCG entropy.
Worked with Samy Kamkar to improve LCG entropy.
Bug #47281 ( is limited in size of characters).  Also remove redundant code line.
Bug #47281 ( is limited in size of characters).  Also remove redundant code line.
Change of way the packet objects are created/initialised If the protocol gets changed, ever, we can decide at runtime easily which protocol to use by instantiating the right protocol object. But this is restricted to the structure of the packets, not the flow.
Change of way the packet objects are created/initialised If the protocol gets changed, ever, we can decide at runtime easily which protocol to use by instantiating the right protocol object. But this is restricted to the structure of the packets, not the flow.
sed -i "s#1997-2008#1997-2010#g" **/*.c **/*.h
fix bug #50661 (DOMDocument::loadXML does not allow UTF-16) add test
fix bug #50661 (DOMDocument::loadXML does not allow UTF-16) add test
fix bug #50661 (DOMDocument::loadXML does not allow UTF-16) add test
sed -i "s#1998-2009#1998-2010#g" **/*.c **/*.h **/*.php
sed -i "s#1998-2009#1998-2010#g" **/*.c **/*.h **/*.php
sed -i "s#1998-2009#1998-2010#g" **/*.c **/*.h **/*.php
sed -i "s#1998-2009#1998-2010#g" **/*.re **/*.y **/*.l
sed -i "s#1998-2009#1998-2010#g" **/*.re **/*.y **/*.l
sed -i "s#1998-2009#1998-2010#g" **/*.re **/*.y **/*.l
- Addressing minor leak noticed while addressing bug #48590
- Addressing minor leak noticed while addressing bug #48590
- Addressing minor leak noticed while addressing bug #48590
Added test case for bug #50632
Added test case for bug #50632
Added test case for bug #50632
- [doc] add support for DISABLE_AUTHENTICATOR in imap_open (fix #33500)
- should not have commited
- [doc] fix exchange and other imap server support when a preferred auth method is not desired. Add option support to imap_open. Only 'DISABLE_AUTHENTICATOR' is supported yet, see #33500 for an example
- [DOC] MF53: add INTERNALDATE to imap_append
add ICU resource bundle support, contributed by Hans-Peter Oeri
add ICU resource bundle support, contributed by Hans-Peter Oeri
Updating test to new libmysql feature set (first introduced in MySQL 6.0 but now backported to MySQL 5.5).
Updating test to new libmysql feature set (first introduced in MySQL 6.0 but now backported to MySQL 5.5).
The internal zval cache has been removed and not been reintroduced... remove corresponding test code
The internal zval cache has been removed and not been reintroduced... remove corresponding test code
Tweaking test. Andrey, you once requested such a test, please have a look if it does exactly what you want it to do.
Tweaking test. Andrey, you once requested such a test, please have a look if it does exactly what you want it to do.
The internal zval cache has been removed and not been reintroduced... remove corresponding test code
The internal zval cache has been removed and not been reintroduced... remove corresponding test code
Update copyright year in the man file
Update copyright year in the man file
Update copyright year in the man file
sed -i "s#1997-2009#1997-2010#g" **/*.c **/*.h **/*.php
sed -i "s#1997-2009#1997-2010#g" **/*.c **/*.h **/*.php
sed -i "s#1997-2009#1997-2010#g" **/*.c **/*.h **/*.php
sed -i "s#1997-2009#1997-2010#g" **/*.re **/*.y **/*.l
sed -i "s#1997-2009#1997-2010#g" **/*.re **/*.y **/*.l
sed -i "s#1997-2009#1997-2010#g" **/*.re **/*.y **/*.l
- Added unicode support to ext/pgsql # Also fixed a few typos and compiler warnings
- Sync with HEAD
- Sync with HEAD
- CS + WS + folding tags
MF53: ws + cs + folding tags (99% sync :)
- WS + CS + folding tags
MFH: clean some dead code (with static analysis help) (Approved by Ilia)
Add a test for tidyNode::__construct()
Add a test for tidyNode::__construct()
Add a test for tidyNode::__construct()
- Last ws pollution, I hope.
- Try prevent accidents
- WS + CS
order
Set the tidyNode constructor private
Set the tidyNode constructor private
Set the tidyNode constructor private
- Updated to version 2009.21 (2009u)
- Updated to version 2009.21 (2009u)
- Updated to version 2009.21 (2009u)
move network creation to the init hook
move network creation to the init hook
Share the php_sockets.h header Share php_sockets_le_socket_name
Share the php_sockets.h header Share php_sockets_le_socket_name
spprintf the dbname use VCWD_ACCESS instead of access
spprintf the dbname use VCWD_ACCESS instead of access
Along with the valid char set, also add a length check to the session id here to avoid a lower-level error on the open() later on in case we exceed MAX_PATH.  The lower level open() error includes the session dir path in it, so this is a very low-priority security fix.  People should not be running production systems with display_errors turned on.
Along with the valid char set, also add a length check to the session id here to avoid a lower-level error on the open() later on in case we exceed MAX_PATH.  The lower level open() error includes the session dir path in it, so this is a very low-priority security fix.  People should not be running production systems with display_errors turned on.
Along with the valid char set, also add a length check to the session id here to avoid a lower-level error on the open() later on in case we exceed MAX_PATH.  The lower level open() error includes the session dir path in it, so this is a very low-priority security fix.  People should not be running production systems with display_errors turned on.
Upgrade bundled libmagic to 5.03 (fixes CDF parsing related issues) Clean up / remove whitespace differences to make next merge easier Removed unnecessary files from trunk
Upgrade bundled libmagic to 5.03 (fixes CDF parsing related issues) Clean up / remove whitespace differences to make next merge easier Removed unnecessary files from trunk
No need to duplicate the string here
Changed tidyNode class to disallow manual node creation.
Changed tidyNode class to disallow manual node creation.
Changed tidyNode class to disallow manual node creation.
Removed spurious high-ascii char from previous commmit
Removed spurious high-ascii char from previous commmit
- Updated ext/pgsql tests to work w/ PostgreSQL 8.5 # tested w/ 8.5alpha3
- Updated ext/pgsql tests to work w/ PostgreSQL 8.5 # tested w/ 8.5alpha3
- Updated ext/pgsql tests to work w/ PostgreSQL 8.5 # tested w/ 8.5alpha3
remove automatic file unlocking on shutdown and/or stream close (make it win32-specific for 5_2, as discussed with Ilia)
remove automatic file unlocking on shutdown and/or stream close (make it win32-specific for 5_2, as discussed with Ilia)
remove automatic file unlocking on shutdown and/or stream close (make it win32-specific for 5_2, as discussed with Ilia)
fix minor leak (merge from trunk)
- Updated pdo_pgsql tests to be 8.5+ friendly
- Updated pdo_pgsql tests to be 8.5+ friendly
- Updated pdo_pgsql tests to be 8.5+ friendly
Added missing host validation for HTTP urls inside FILTER_VALIDATE_URL.
Added missing host validation for HTTP urls inside FILTER_VALIDATE_URL.
Added missing host validation for HTTP urls inside FILTER_VALIDATE_URL.
Changed stream_resolve_include_path to use zend_resolve_path backported stream_resolve_include_path to PHP 5.3 backported stream_resolve_include_path test to PHP 5.3
Changed stream_resolve_include_path to use zend_resolve_path backported stream_resolve_include_path to PHP 5.3 backported stream_resolve_include_path test to PHP 5.3
fix the fix for #47409 use correct comparison and add missing scope checks to trunk
fix the fix for #47409 use correct comparison and add missing scope checks to trunk
fix the fix for #47409 use correct comparison and add missing scope checks to trunk
- Update test from 5.3 branch
- Update tests to reflect current behavior after fix for bug #50185
- Update tests to reflect current behavior after fix for bug #50185
- Update tests to reflect current behavior after fix for bug #50185
fix interruption problem with array_pad
fix flags handling in zend_parse_method_parameters_ex
fix flags handling in zend_parse_method_parameters_ex
fix flags handling in zend_parse_method_parameters_ex
cleanup some code, improve error handling
cleanup some code, improve error handling
- ws
- ws
- ws
I really like the extra space.
I really like the extra space.
Unify. The typedef-ed structs in mysqlnd are always capitalized.
Unify. The typedef-ed structs in mysqlnd are always capitalized.
fix minor leak in CGI sapi (happened once per child)
fix minor leak in CGI sapi (happened once per child)
Where using svn now, use svn paths # This file doesn't exist in 5.2!?
Where using svn now, use svn paths # This file doesn't exist in 5.2!?
PHP 5.3.2RC1
Wrap at 80 chars
install mysqlnd headers to allow shared build of extensions
install mysqlnd headers to allow shared build of extensions
move state setting to the right place, in mysqlnd_init, no more in mysqlnd::connect
move state setting to the right place, in mysqlnd_init, no more in mysqlnd::connect
- fix build and warning (introduced by my last commit)
- Updated to version 2009.20 (2009t)
- Updated to version 2009.20 (2009t)
- Updated to version 2009.20 (2009t)
clean up normalizer code
clean up normalizer code
Move this function to MYSQLND_NET as it works on the php stream
Move this function to MYSQLND_NET as it works on the php stream
magic numbers to macros
magic numbers to macros
Move compression and decompression code to separate functions which can be overloaded on purpose.
Move compression and decompression code to separate functions which can be overloaded on purpose.
- Sync (and KEEP it synced!)
- Sync (and KEEP it synced!)
- Sync (and KEEP it synced!)
- Tune the fix for bug #50508 and make it work with MacOSX, bug #50541.
- Tune the fix for bug #50508 and make it work with MacOSX, bug #50541.
- Tune the fix for bug #50508 and make it work with MacOSX, bug #50541.
- New tests
- New tests
fix bug #50196
fix bug #50196
fix regression bug #50394: Reference argument converted to value in __call
fix regression bug #50394: Reference argument converted to value in __call
fix regression bug #50394: Reference argument converted to value in __call
touch
touch
- [DOC] add INTERNALDATE to imap_append (will merge to trunk later)
- These are 2 separate sections..
Test for what Andrey has found with 16M packets
Test for what Andrey has found with 16M packets
refactoring : move more network related functions to mysqlnd_net.c . Now communication is split on two levels: - logical (functions send and receive) - physical (functions network_read and network_write)
refactoring : move more network related functions to mysqlnd_net.c . Now communication is split on two levels: - logical (functions send and receive) - physical (functions network_read and network_write)
During refactoring of the function mysqlnd_stream_write_w_header() it was found that there is a bug in the way the data is sent, although a very rare one which will only affect very large queries which have length 16777214. The communication will hang. A way to test it is to execute the following: ./php -r '$c=mysqli_connect("127.0.0.1","root","root","test"); $q="insert into test.tblob values(\"".str_repeat("a",256*256*256-1-34)."\")"; $c->query($q);'
During refactoring of the function mysqlnd_stream_write_w_header() it was found that there is a bug in the way the data is sent, although a very rare one which will only affect very large queries which have length 16777214. The communication will hang. A way to test it is to execute the following: ./php -r '$c=mysqli_connect("127.0.0.1","root","root","test"); $q="insert into test.tblob values(\"".str_repeat("a",256*256*256-1-34)."\")"; $c->query($q);'
call free_contents in every case, in case something is not freed by the calling code
call free_contents in every case, in case something is not freed by the calling code
Remove unneeded dereferences (oops, committed the trunk changes from a wrong directory, which splitted this commit).
Remove unneeded dereferences
move MYSQLND_NET code to a separate file. mysqlnd_wireprotocol is about the protocol not the transport layer
move MYSQLND_NET code to a separate file. mysqlnd_wireprotocol is about the protocol not the transport layer
back to dev
5.2.12
- add a test case and update the skip clause
- add a test case and update the skip clause
Added newly added removed directives to the makefile
remove duplicated code
remove duplicated code
Move code out of mysqlnd_conn::connect to mysqlnd_net::connect. Thus mysqlnd_conn::connect() does less of what it should not do - think about the transport level.
Move code out of mysqlnd_conn::connect to mysqlnd_net::connect. Thus mysqlnd_conn::connect() does less of what it should not do - think about the transport level.
remove C++ comments
remove C++ comments
export this function
export this function
refactor: move code that belongs to MYSQLND_NET out of MYSQLND
refactor: move code that belongs to MYSQLND_NET out of MYSQLND
- Make $sbindir be usable in C code as well (like $bindir and co.)
- Make $sbindir be usable in C code as well (like $bindir and co.)
- Make $sbindir be usable in C code as well (like $bindir and co.)
- Allow using $sbindir as well
- Allow using $sbindir as well
- Allow using $sbindir as well
- Added SKIPIF
- Added SKIPIF
Add some more removed ini directives
MFB: fix test
MFB: fix test
- Improved the bug#49174 entry summary
- Improved the bug#49174 entry summary
- Completing the phrase
- Opss, wrong place
- fix build, come on, it is not that hard to test before commit, is it?
- fix build, come on, it is not that hard to test before commit, is it?
- #50334, add sha support for VC6 too, not merged in trunk as we don't support vc6 there
- #50334, use our own implementations of stpncpy and mempcy, avoiding weird behaviors on certain platforms like solaris
- #50334, use our own implementations of stpncpy and mempcy, avoiding weird behaviors on certain platforms like solaris
fix test
fix test
fix test
Make MYSQLND_NET dynamically allocated structure with allocator and deallocator. More member functions will come.
Make MYSQLND_NET dynamically allocated structure with allocator and deallocator. More member functions will come.
remove stale comment
remove stale comment
Move two functions which are used in the extension as methods of the connection. Two functions less in the global namespace.
Move two functions which are used in the extension as methods of the connection. Two functions less in the global namespace.
Add new 'fetch' test and make several small test fixes
Add new 'fetch' test and make several small test fixes
Remove text recently merged to online doc
Remove text recently merged to online doc
- #50334, add define on win as well
- #50334, add define on win as well
Back to dev
5.2.12RC4
bump version number
bump version number
Add plugin storage for MYSQLND_STMT too
Add plugin storage for MYSQLND_STMT too
- not needed anymore
- [DOC] expose MPIR version when mpir is used instead of gmp
- [DOC] expose MPIR version when mpir is used instead of gmp
Remove stub code which never actually was used for anything. Things like this can be built on top of the core.
Remove stub code which never actually was used for anything. Things like this can be built on top of the core.
- fix tests (this is ridiculous..)
Remove the zval caching from mysqlnd. It was disabled versions ago due to problems on windows, which were not debugged. Better have code that is disabled not in the core.
Remove the zval caching from mysqlnd. It was disabled versions ago due to problems on windows, which were not debugged. Better have code that is disabled not in the core.
- #50334, fix build for platform without endian.h (like solaris)
- #50334, fix build for platform without endian.h (like solaris)
Remove disabled code - threaded fetching. This can be implemented on a upper level and by offloading it we reduce the complexity of the core.
Remove disabled code - threaded fetching. This can be implemented on a upper level and by offloading it we reduce the complexity of the core.
- Rename badly named function
- Add one test from HEAD
Adapting tests to accept actual behaviour found in 5.2, 5.3 and 6.0. The behaviour is wrong according to the documentation: mysqli_connect_error() should return an empty string (not NULL), if there is no error. However, changing this would break BC and most users will not notice the difference between NULL and empty string anyway.
Adapting tests to accept actual behaviour found in 5.2, 5.3 and 6.0. The behaviour is wrong according to the documentation: mysqli_connect_error() should return an empty string (not NULL), if there is no error. However, changing this would break BC and most users will not notice the difference between NULL and empty string anyway.
- #50334, fix trunk build
- #50334, add missing file
- #50334, add missing file
FIFO
- #50334, add CRYPT_SHA* constants and tests [DOC]
- #50334, add CRYPT_SHA* constants and tests [DOC]
- update
- drop non used code and fix warning
- drop non used code and fix warning
- #50334, crypt ignores sha512 and add support for sha256/512 to php's crypt [DOC]
- #50334, crypt ignores sha512 and add support for sha256/512 to php's crypt [DOC]
- add missing argument
Backported 5.3 tests to 5.2 and added more RecursiveIteratorIterator tests
Backported 5.3 tests to 5.2 and added more RecursiveIteratorIterator tests
Backported 5.3 tests to 5.2 and added more RecursiveIteratorIterator tests
MFB: sprintf -> snprintf + all other patches people did not bother to merge
MFH: static before const
MFB: r215701, Reimplementation of the way Apache 2 Filter works.
ws
- ws + cs
MFB: sprintf -> snprintf (Thanks Marcus for not merging to HEAD..)
ws, cs, sigh
Upgraded to Sqlite 3.6.21
Upgraded to Sqlite 3.6.21
sync with 5_3
ws
No tabs here
- ws
- No tabs here
FIFO
- Added MAKE_COPY_ZVAL(ppzv, pzv) macro
- Added MAKE_COPY_ZVAL(ppzv, pzv) macro
ouch, that ZTS
ouch, that ZTS
win32 should have different test
win32 should have different test
add "no params" check
add "no params" check
add realpath cache inspect functions
add realpath cache inspect functions
- Take account of surrogate pairs.
- Take account of surrogate pairs.
- Take account of surrogate pairs.
Added FILTER_FLAG_STRIP_BACKTICK option to the filter extension.
Added FILTER_FLAG_STRIP_BACKTICK option to the filter extension.
BFN
BFN
protect http_session_vars from interrupt corruption improve save_path check
protect http_session_vars from interrupt corruption improve save_path check
protect http_session_vars from interrupt corruption improve save_path check
bfn
bfn
fix bug #47848 (importNode doesn't preserve attribute namespaces) add tests
fix bug #47848 (importNode doesn't preserve attribute namespaces) add tests
fix bug #47848 (importNode doesn't preserve attribute namespaces) add tests
MFT: VC10 build support
    I    svn-commit.2.tmp (Modified)                                                                                          Row 2    Col 28  11:45  Ctrl-K H for help fix compilation on windows and with other compilers who don't like void* arithmetic
    I    svn-commit.2.tmp (Modified)                                                                                          Row 2    Col 28  11:45  Ctrl-K H for help fix compilation on windows and with other compilers who don't like void* arithmetic
- disable this debug code until it is actually fixed
- disable this debug code until it is actually fixed
Use correct defines for VC10 support
fix segfault introduced by Pierre in a recent commit old code was doing something like conn + sizeof(MYSQLND) * MYSQLND + plugin * sizeof(void) * sizeof(MYSQLND) because `conn` is not casted to void*. `conn` has to be casted to void * and then the whole experession will be void * and the calculations will work.
fix segfault introduced by Pierre in a recent commit old code was doing something like conn + sizeof(MYSQLND) * MYSQLND + plugin * sizeof(void) * sizeof(MYSQLND) because `conn` is not casted to void*. `conn` has to be casted to void * and then the whole experession will be void * and the calculations will work.
the order
BFN
One change in trying to update Autoconf was missed. This makes phpize work again.
and the news
fix macro so that 5-byte BIT values are decoded correctly
fix macro so that 5-byte BIT values are decoded correctly
- Sync files
- Sync files
fixed typo
- Touché filés
- Touché filés
The old Darwin hack is BROKEN and INCORRECT. It works only for Darwin 9, not 10, and uses an ugly CFLAGS hack that messes with the entire build. This version sets one cached value to the correct result for Darwin 9 and 10. It's cleaner, has no side effects, has nothing to do with Autoconf versions, and works for everyone.
The old Darwin hack is BROKEN and INCORRECT. It works only for Darwin 9, not 10, and uses an ugly CFLAGS hack that messes with the entire build. This version sets one cached value to the correct result for Darwin 9 and 10. It's cleaner, has no side effects, has nothing to do with Autoconf versions, and works for everyone.
The old Darwin hack is BROKEN and INCORRECT. It works only for Darwin 9, not 10, and uses an ugly CFLAGS hack that messes with the entire build. This version sets one cached value to the correct result for Darwin 9 and 10. It's cleaner, has no side effects, has nothing to do with Autoconf versions, and works for everyone.
MFH: removed last test for MAX_INT, did not work on x64 and this case is covered by bug47745.phpt
news
bfn
bfn
MF53: sync
- Restore configure.in before the madness started
merge from trunk: openssl sni support (rev 289831)
Reverted accidental change
- restore /W3
- MFH: vs2010 detection support, restore /W3
- Revert bad patch
re-committing: unsetting LIBS and LDFLAGS just makes it impossible to specify LDFLAGS from the environment. keeping them doesn't seem to cause any trouble
once and for all remove the old broken Darwin hack, replace it with the new and much cleaner and simpler one
- Revert bad patch
proper fix for bug #50006 add modify protection to all user array sorts
proper fix for bug #50006 add modify protection to all user array sorts
proper fix for bug #50006 add modify protection to all user array sorts
Revert attempt at supporting both autoconf 2.13 and modern versions in the same build chain.  There are simply too many broken things in 2.13 to make it work. Cache handling is broken as well which is why I need to revert the pdo_inc_path cache fix as well.
Revert attempt at supporting both autoconf 2.13 and modern versions in the same build chain.  There are simply too many broken things in 2.13 to make it work. Cache handling is broken as well which is why I need to revert the pdo_inc_path cache fix as well.
Revert attempt at supporting both autoconf 2.13 and modern versions in the same build chain.  There are simply too many broken things in 2.13 to make it work. Cache handling is broken as well which is why I need to revert the pdo_inc_path cache fix as well.
fix interrupt problem in serialize()
fix interrupt problem in serialize()
fix interrupt problem in serialize()
Last attempt to get this stuff right before punting it and being stuck on 1996 autoconf for eternity
More work on the autoconf 2.13->2.60+ transition code. 2.13 should be working again with one weird libtool issue left to solve.  It doesn't seem directly related to this stuff.
socket location needs to be checked before mysqlnd in order for --with-mysql-sock to work with mysqlnd
unsetting LIBS and LDFLAGS just makes it impossible to specify LDFLAGS from the environment. keeping them doesn't seem to cause any trouble
Remove the now-unnecessary (and wrong anyway) Darwin hack
This macro needs to come after AC_INIT
Ok, new attempt.  Require autoconf-2.60 in this branch. This simplifies things quite a bit by entirely getting rid of the m4 diversions which were messing things up. Now we are using the built-in autoconf diversions the way they were intended and the HELP output order is preserved through the AC_PRESERVE_HELP_ORDER macro which was introduced in autoconf-2.59c
- Use correct revision
- Use correct revision
- No dots here
- No dots here
- No dots here
Use extended base if we build again gmp 4.2.0 which is usually available.
Use extended base if we build again gmp 4.2.0 which is usually available.
back to dev
5.2.12RC3
- Partially revert the autoconf 2.6x "fix" to make configure work with release
- Re-fixed bug #47104 (Linking shared extensions fails with icc)
- Re-fixed bug #47104 (Linking shared extensions fails with icc)
- Re-fixed bug #47104 (Linking shared extensions fails with icc)
- Restore sanity in the NEWS. (duplicate, wrong order, etc..)
Back to dev
5.2.12RC2
Revert gmp patches as they require a newer lib
fix debug windows build as well as remove a compilation warning (a header not included)
fix debug windows build as well as remove a compilation warning (a header not included)
MFB52: missing _cv_
Also allow base 62 for gmp_init as requested in (#50283)
Also allow base 62 for gmp_init as requested in (#50283)
Also allow base 62 for gmp_init as requested in (#50283)
There is no ENT_IGNORE in 5.2
Really use 62 as the upper boundary as requested and not 32.
Really use 62 as the upper boundary as requested and not 32.
Really use 62 as the upper boundary as requested and not 32.
Missing _cv_ here
ws
ws
ws
*sigh*
- merge NEWS from 5.3.1
- Do not forget NEWS for 5.2..
- Do not forget NEWS for 5.2..
The constructor generates that next line of output, so the expected output had these 2 lines in the wrong order.  Test your tests!
The constructor generates that next line of output, so the expected output had these 2 lines in the wrong order.  Test your tests!
And there is no 23,24,25 in this test at all.  Perhaps these lines were added to the wrong file by mistake?  Those were the same ones missing from pdo_mysql___construct_options.phpt
And there is no 23,24,25 in this test at all.  Perhaps these lines were added to the wrong file by mistake?  Those were the same ones missing from pdo_mysql___construct_options.phpt
Unless I am completely misreading this test case, these 3 lines at the end should be in the expected output.
Unless I am completely misreading this test case, these 3 lines at the end should be in the expected output.
Another test that doesn't work as root
Another test that doesn't work as root
Another test that doesn't work as root
These tests don't work when run as root
These tests don't work when run as root
These tests don't work when run as root
.
Missed a few - now it really works with autoconf-2.64+
Missed a few - now it really works with autoconf-2.64+
Missed a few - now it really works with autoconf-2.64+
Someone strap down Jani and give him a sedative please. This makes our toolchain work with the latest versions of autoconf and avoids a lot of end-user grief.
Someone strap down Jani and give him a sedative please. This makes our toolchain work with the latest versions of autoconf and avoids a lot of end-user grief.
Someone strap down Jani and give him a sedative please. This makes our toolchain work with the latest versions of autoconf and avoids a lot of end-user grief.
Update charset table
Update charset table
Add myself as pdo_pgsql maintainer
Implement feature request #50283 (allow base in gmp_strval to use full range: 2 to 62, and -2 to -36)
Implement feature request #50283 (allow base in gmp_strval to use full range: 2 to 62, and -2 to -36)
Implement feature request #50283 (allow base in gmp_strval to use full range: 2 to 62, and -2 to -36)
- Added test for bug #50261
- Added test for bug #50261
IMAP tests for trunk
- Upgraded bundled libtool to 1.5.26
- Upgraded bundled libtool to 1.5.26
- Upgraded bundled libtool to 1.5.26
Adding IMAP tests (PHP 5.3)
Need the PCNTL extension loaded since that is where the SIGKILL constant comes from
Need the PCNTL extension loaded since that is where the SIGKILL constant comes from
Need the PCNTL extension loaded since that is where the SIGKILL constant comes from
This will only get a permission defined error if not running as root.
This will only get a permission defined error if not running as root.
Don't try to remove an empty output_obj here. This gets rid of the annoying: rm: invalid argument: `' I was seeing. (I really shouldn't be hacking libtool)
Don't try to remove an empty output_obj here. This gets rid of the annoying: rm: invalid argument: `' I was seeing. (I really shouldn't be hacking libtool)
Don't try to remove an empty output_obj here. This gets rid of the annoying: rm: invalid argument: `' I was seeing. (I really shouldn't be hacking libtool)
When Ilia fixed bug #49470 and removed the '/' as a valid email char, he forgot to make the corresponding change in filter test 033.
When Ilia fixed bug #49470 and removed the '/' as a valid email char, he forgot to make the corresponding change in filter test 033.
When Ilia fixed bug #49470 and removed the '/' as a valid email char, he forgot to make the corresponding change in filter test 033.
Trunk too - curl version check for the lack of a certinfo entry in the getinfo array.
Pierre added certinfo to the curl info array, but that is only available in newer versions of curl and this test doesn't test for it.
Extend the previously added large string concatenation validation
Extend the previously added large string concatenation validation
- add tests dir
- add tests dir
- add tests dir
Mention account access so we can refer account-requestors to this README
Mention account access so we can refer account-requestors to this README
Don't ignore the 2nd parameter to PDO's quote() method that identifies the data type
Don't ignore the 2nd parameter to PDO's quote() method that identifies the data type
Don't ignore the 2nd parameter to PDO's quote() method that identifies the data type
Compressed protocol support + extensibility for mysqlnd
Compressed protocol support + extensibility for mysqlnd
New test
New test
Refactor test
Refactor test
News entry for post_max_size fix
News entry for post_max_size fix
Make it possible to disable post_max_size
Make it possible to disable post_max_size
Make it possible to disable post_max_size
tz news
- Added CG(encoding_declared) initialization
- Updated to version 2009.19 (2009s)
- Updated to version 2009.19 (2009s)
- Updated to version 2009.19 (2009s)
Simpify the max_file_uploads handling code
Simpify the max_file_uploads handling code
Simpify the max_file_uploads handling code
- Switching to TSRMLS_FETCH version
Add object-create and object-destroy dtrace probe
Set eol-style
- Improve test
- Improve test
- Improve test
- Nuke ws
- Nuke ws
- Temporary hack to fix bug #49816 (works fine in HEAD which has working output buffering..)
- Temporary hack to fix bug #49816 (works fine in HEAD which has working output buffering..)
New test
New test
MF53: sprintf -> snprintf -> slprintf (Marcus, Ilia: Thanks for not committing random stuff to HEAD)
fix PHP Bug #49938: Phar::isBuffering() returns inverted value
fix PHP Bug #49938: Phar::isBuffering() returns inverted value
fix completely random ordering of bugs in NEWS (what happened here?)
- Drop brackets
- MFH: Added test for bug 49910 for phar
- Added an extra skipif for zlib
Add auroraeos's article URL.  Add IRC channels
Add auroraeos's article URL.  Add IRC channels
As I am working on it, further improvement for bug #50087
As I am working on it, further improvement for bug #50087
Back to dev
5.2.12RC1
bfn
bfn
NEWS entries for mysqli crash fix bug
NEWS entries for mysqli crash fix bug
fix PHP Bug #49910: no support for ././@LongLink for long filenames in phar tar support
fix PHP Bug #49910: no support for ././@LongLink for long filenames in phar tar support
typo fix
Add test for long fixed bug
Add test for long fixed bug
tz news
- Updated to version 2009.18 (2009r)
- Updated to version 2009.18 (2009r)
- Updated to version 2009.18 (2009r)
Upgraded bundled sqlite to version 3.6.20
Upgraded bundled sqlite to version 3.6.20
- Added SKIPIF
- Added SKIPIF
- Added SKIPIF
Add pecl mail list
Add pecl mail list
Update and fix grammar
Update and fix grammar
Make sure that max_file_uploads is set to 20 by-default in all places
Make sure that max_file_uploads is set to 20 by-default in all places
Make sure that max_file_uploads is set to 20 by-default in all places
- Missing entry
- The dot
Avoid invoking setitimer when timeouts have been disabled (Arvind Srinivasan)
Avoid invoking setitimer when timeouts have been disabled (Arvind Srinivasan)
Avoid invoking setitimer when timeouts have been disabled (Arvind Srinivasan)
- Properly fixed bug #49985 (pdo_pgsql prepare() re-use previous aborted transaction). # Removed usage of the memory address when generating prepared statemend names # as uniqueness can't be enforced. Used a statment counter instead.
- Properly fixed bug #49985 (pdo_pgsql prepare() re-use previous aborted transaction). # Removed usage of the memory address when generating prepared statemend names # as uniqueness can't be enforced. Used a statment counter instead.
- Properly fixed bug #49985 (pdo_pgsql prepare() re-use previous aborted transaction). # Removed usage of the memory address when generating prepared statemend names # as uniqueness can't be enforced. Used a statment counter instead.
- Reverting previous fix for bug #49985 # Unmerged changes from revision 289924
- Reverting previous fix for bug #49985 # Unmerged changes from revision 289924
- Reverting previous fix for bug #49985 # Unmerged changes from revision 289924
mysqli won't accept empty string for socket, skip test of mysqli.default_socket if test run does not use socket
mysqli won't accept empty string for socket, skip test of mysqli.default_socket if test run does not use socket
Skipping if MySQL old password algorithm is in use as it seems to be the case on gcov.php.net
Skipping if MySQL old password algorithm is in use as it seems to be the case on gcov.php.net
Adding CLEAN sections and making tests portable between PHP 5 and PHP 6 by replacing string(n) with %unicode|string%(n) and similar.
Adding CLEAN sections and making tests portable between PHP 5 and PHP 6 by replacing string(n) with %unicode|string%(n) and similar.
added timezone define for NetWare.
added timezone define for NetWare.
removed now obsolete NetWare hack since I fixed this with Novell some longer time ago in their SDK header.
removed now obsolete NetWare hack since I fixed this with Novell some longer time ago in their SDK header.
fixed build-in module list for NetWare.
cleaned up includes for NetWare.
added magic.mine path define for NetWare.
added timezone define for NetWare.
removed now obsolete NetWare hack since I fixed this with Novell some longer time ago in their SDK header.
removed now obsolete NetWare hack since I fixed this with Novell some longer time ago in their SDK header.
removed now obsolete NetWare hack since I fixed this with Novell some longer time ago in their SDK header.
removed now obsolete NetWare hack since I fixed this with Novell some longer time ago in their SDK header.
removed now obsolete NetWare hack since I fixed this with Novell some longer time ago in their SDK header.
removed now obsolete NetWare hack since I fixed this with Novell some longer tiem ago in their SDK header.
removed now obsolete NetWare hack since I fixed this with Novell some longer tiem ago in their SDK header.
TZ update
BFN
Update PCRE to 8.00
Update PCRE to 8.00
- fix lenght for alloc and cpy (Kanwal)
- fix lenght for alloc and cpy (Kanwal)
- WS
- Updated to version 2009.17 (2009q)
- Updated to version 2009.17 (2009q)
- Updated to version 2009.17 (2009q)
TZ news
- back to dev #2 and fix snap :)
report collator_get_sort_key
Set WINVER to Windows 2000 like in config.w32.h.in
Set WINVER to Windows 2000 like in config.w32.h.in
Lower the max upload default to 20
Lower the max upload default to 20
Lower the max upload default to 20
fix version
fix version
- You add, remove, fix or implement. Introduce yourself to someone else.
- You add, remove, fix or implement. Introduce yourself to someone else.
Introduced a max_file_uploads INI setting, which is set to limit the number of file uploads per-request to 100 by default, to prevent possible DOS via temporary file exhaustion.
Introduced a max_file_uploads INI setting, which is set to limit the number of file uploads per-request to 100 by default, to prevent possible DOS via temporary file exhaustion.
Introduced a max_file_uploads INI setting, which is set to limit the number of file uploads per-request to 100 by default, to prevent possible DOS via temporary file exhaustion.
- #48752
- #48752, crash during date parsing with invalid date
- #48752, crash during date parsing with invalid date
- #48752, crash during date parsing with invalid date
add collator_get_sort_key()
add test
add collator_get_sort_key()
- Updated to version 2009.16 (2009p)
- Updated to version 2009.16 (2009p)
- Updated to version 2009.16 (2009p)
Updating test - no error message any more. Maybe the PDO core has changed... whatever, one issue less
Updating test - no error message any more. Maybe the PDO core has changed... whatever, one issue less
Updating test, mysqlnd support init commands
Updating test, mysqlnd support init commands
- #49986, fix ICU DLLs path
TSRMLS
Don't forget to update the length too
Don't forget to update the length too
Have the lengths also to skip many calls to strlen
Have the lengths also to skip many calls to strlen
fix ZTS build
Updating mysqlnd version number.
Updating mysqlnd version number.
Move definition
Move definition
Count number of affected_rows for normal and PS queries
Count number of affected_rows for normal and PS queries
There subtle differences between Linux and Win. mysqlnd is a bit more verbose on Win... silencing to make the test pass
There subtle differences between Linux and Win. mysqlnd is a bit more verbose on Win... silencing to make the test pass
Added client-side Server Name Indication (SNI) support in OpenSSL extension. # # [DOC] # # New SSL context options : # # - SNI_enabled : Set to FALSE to disable SNI support (enabled by default) # - SNI_server_name : If not set, the server name will be guessed from the # stream URL (e.g. https://example.com/ will use example.com as hostname.), # else the given name will be used. # # SNI is to SSL/TLS what the Host header is for HTTP : it allows multiple # certificates on the same IP address. # # As for HTTP virtual hosts, this should be totaly transparent in most cases. # # Context options allows more control, e.g. : # # $context = stream_context_create(array( #   'ssl' => array('SNI_server_name' => 'foo.example.com'), #   'http' => array('header' => 'Host: foo.example.com'), # )); # file_get_contents('https://127.0.0.1/', false, $context); # # OpenSSL >= 0.9.8j supports SNI (by default since OpenSSL 0.9.8k).
- fix leak in DL on error (windows)
- fix leak in DL on error (windows)
Making test a bit more portable
Making test a bit more portable
libmysql is still 'buggy' - skip test with libmysql
libmysql is still 'buggy' - skip test with libmysql
Well, hacking around to cope with mysql version specific behaviour if using libmysql...
Well, hacking around to cope with mysql version specific behaviour if using libmysql...
fix crash on empty doc_root
fix crash on empty doc_root
Skipping tests if InnoDB is available but disabled. I wonder what InnoDB status comes next...
Skipping tests if InnoDB is available but disabled. I wonder what InnoDB status comes next...
Making test pass when MySQL runs on Win*
Making test pass when MySQL runs on Win*
Bail if connect.inc gets included twice. Including twice is most likely a 'bug'. See also http://news.php.net/php.cvs/60720
Bail if connect.inc gets included twice. Including twice is most likely a 'bug'. See also http://news.php.net/php.cvs/60720
- MFH: fix realloc usage
- ws
Using require[_once] instead of include. Adding logic to connect.inc to detect multiple inclusions of connect.inc which leads to a Fatal error because of my_mysqli_connect() function redefinition. Some tests did include connect.inc twice -> run-tests - even the one from trunk - did not detect Fatal error in SKIPIF -> false-positive test result...
Using require[_once] instead of include. Adding logic to connect.inc to detect multiple inclusions of connect.inc which leads to a Fatal error because of my_mysqli_connect() function redefinition. Some tests did include connect.inc twice -> run-tests - even the one from trunk - did not detect Fatal error in SKIPIF -> false-positive test result...
- we don't distribute the crt9 dll, don't try to add it
- we don't distribute the crt9 dll, don't try to add it
- add custom DLL to the package and fix the path to the deps bin (needs absolute path in some cases)
- add custom DLL to the package and fix the path to the deps bin (needs absolute path in some cases)
- Updated to version 2009.15 (2009o)
- Updated to version 2009.15 (2009o)
- Updated to version 2009.15 (2009o)
mysqlnd is a bit more verbose than libmysql - silence mysqlnd here for easier comparison of test results.
mysqlnd is a bit more verbose than libmysql - silence mysqlnd here for easier comparison of test results.
- It is not const in PHP_5_2 but it is in HEAD and PHP_5_3
- It is not const in PHP_5_2 but it is in HEAD and PHP_5_3
- It is not const in PHP_5_2 but it is in HEAD and PHP_5_3
MySQL server and metadata - a sad story... trying to make the test pass with a few more server versions
MySQL server and metadata - a sad story... trying to make the test pass with a few more server versions
- It is close to next 5.2 release, ILIA!
fn
improve fix for #49767 and #47627 - make PHP report "no script" on 404 again
improve fix for #49767 and #47627 - make PHP report "no script" on 404 again
Extending mysqlnd statistics/monitoring. Now counting COM_* commands.
Extending mysqlnd statistics/monitoring. Now counting COM_* commands.
ignore php_mysqlnd_config.h file
Add metadata support to the bundled version of libsqlite on Windows, part of bug #49206.
Add metadata support to the bundled version of libsqlite on Windows, part of bug #49206.
Part fix for bug #49224
Part fix for bug #49224
Update libsqlite to 3.6.19
Update libsqlite to 3.6.19
Making mysqlnd emit no warnings when fetching pooled persistent connections that have timed out or are unusable for any other reason - bug #49761
Making mysqlnd emit no warnings when fetching pooled persistent connections that have timed out or are unusable for any other reason - bug #49761
- #48779, fix another use case where / usage may differ
- #48779, fix another use case where / usage may differ
zend_module_dep is no const and breaks strict compilers like CodeWarrior for NetWare.
tz update news
oops, that doesn't belong to this patch
add safeguard for UpdateIniFromRegistry on NULL arg
add safeguard for UpdateIniFromRegistry on NULL arg
fix crash for bug #47627
fix crash for bug #47627
- Updated to version 2009.14 (2009n)
- Updated to version 2009.14 (2009n)
- Updated to version 2009.14 (2009n)
- Bug #49785: take 5. What the hell happened to me...
- Bug #49785: take 5. What the hell happened to me...
- Bug #49785: take 5. What the hell happened to me...
- BFN
- BFN
- #48779, improve fix, drop usage of _tolower and use zend_strtolower
- #48779, improve fix, drop usage of _tolower and use zend_strtolower
- Bug #49785: take 4 - typo. this flaw is unharmful since the return value of get_next_char() is only used when UTF-8 is specified to the third argument.
- Bug #49785: take 4 - typo. this flaw is unharmful since the return value of get_next_char() is only used when UTF-8 is specified to the third argument.
- Bug #49785: take 4 - typo. this flaw is unharmful since the return value of get_next_char() is only used when UTF-8 is specified to the third argument.
- Bug #49785: take 3 - fixed infinite loop bug (only for 5.2) (reported by T.Komura. Thanks)
- check max colors while loading gd2 palette image (patch by Tomas Hoger)
- check max colors while loading gd2 palette image (patch by Tomas Hoger)
- check max colors while loading gd2 palette image (patch by Tomas Hoger)
- A couple more fix for my previous fix.   (one of the fix by Arnaud Le Blanc. Thanks!)
- A couple more fix for my previous fix.   (one of the fix by Arnaud Le Blanc. Thanks!)
- A couple more fix for my previous fix.   (one of the fix by Arnaud Le Blanc. Thanks!)
- fix possible issue in TS environment (we don't have to do that anymore anyway in 5.3+)
- fix possible issue in TS environment (we don't have to do that anymore anyway in 5.3+)
- #48779, don't loop twice over the path chars
- #48779, don't loop twice over the path chars
- changed ini file directives [PATH=](on Win32) and [HOST=](on all) to be case insensitive (garretts)
- changed ini file directives [PATH=](on Win32) and [HOST=](on all) to be case insensitive (garretts)
- More tests to go.
- More tests to go.
- More tests to go.
Syntax
- missing define
- typo
- typo
- [DOC] add enchant_broket_set_dict_path and enchant_broker_get_dict_path  - add constants ENCHANT_MYSPELL and ENCHANT_ISPELL
- [DOC] add enchant_broket_set_dict_path and enchant_broker_get_dict_path  - add constants ENCHANT_MYSPELL and ENCHANT_ISPELL
Avoid buffer resizing and let the initial buffer allocation happen a couple of lines later with conn->m->set_client_option(conn, MYSQLND_OPT_NET_CMD_BUFFER_SIZE, ...). Andrey, I leave it to you to change the default size to 128k.
Avoid buffer resizing and let the initial buffer allocation happen a couple of lines later with conn->m->set_client_option(conn, MYSQLND_OPT_NET_CMD_BUFFER_SIZE, ...). Andrey, I leave it to you to change the default size to 128k.
Revert fix, not relavent for this branch
Increase the minimal size of the command buffer, which is used for sending queries and in the future commpressed patch for reading almost all packets from the wire instead of using stack buffers.
Increase the minimal size of the command buffer, which is used for sending queries and in the future commpressed patch for reading almost all packets from the wire instead of using stack buffers.
bump ver
bump ver
    1. Introduce connection attribute functions:
    1. Introduce connection attribute functions:
revert the last change
revert the last change
Formatting tweaks
count the queries
count the queries
pff
pff
pff
- drop unused var and fix example
- drop unused var and fix example
Oracle 11.2 (and beyond) compat changes
Oracle 11.2 (and beyond) compat changes
refactor tests
refactor tests
pff, no idea what is merged where by who and when and wtf..
Add PECL bug #16842
- fix #49732, fix crash when timestamp conversion fails
- fix #49732, fix crash when timestamp conversion fails
Updating test because of http://news.php.net/php.cvs/60561
Updating test because of http://news.php.net/php.cvs/60561
Add xmltype_02.phpt.  Add XFAIL to xmltype_01 for PHP 6
Add xmltype_02.phpt.  Add XFAIL to xmltype_01 for PHP 6
Eliminate type warnings. This change is not needed in other branches
PECL Bug #16842 (oci_error return false when NO_DATA_FOUND is raised)
PECL Bug #16842 (oci_error return false when NO_DATA_FOUND is raised)
Use mnd_ wrappers wherever possible. Needed for statistics.
Use mnd_ wrappers wherever possible. Needed for statistics.
pcntl_exec() should inherit environment in case it's not provided as an argument
pcntl_exec() should inherit environment in case it's not provided as an argument
- restore W3 flag to get usefull errors (unused vars, etc.)
- restore W3 flag to get usefull errors (unused vars, etc.)
Add missing open_basedir check in posix_mkfifo
Add missing open_basedir check in posix_mkfifo
Add missing open_basedir check in posix_mkfifo
Adding tests for bug #49692
Adding tests for bug #49692
Adding tests for bug #49692
NEWS for Rasmus' bug fix
NEWS for Rasmus' bug fix
- fix TS build, this macro contains code and declaration, always put it right after your declaration
Allow setting of default connection flags through the environment variable MYSQL_TEST_CONNECT_FLAGS
Allow setting of default connection flags through the environment variable MYSQL_TEST_CONNECT_FLAGS
Refix bug #49558 as per bug #49676
Refix bug #49558 as per bug #49676
Refix bug #49558 as per bug #49676
Trying to respect time limit to please Andrey who must be using slooow hardware...
Trying to respect time limit to please Andrey who must be using slooow hardware...
Large package to check how compression handles package queues.
Large package to check how compression handles package queues.
Remove unused variable
Remove unused variable
MFH: save LDFLAGS in EXTRA_LDFLAGS before unsetting this patch makes sure that LDFLAGS are taken into account when configuring the build
- Reverted last Ilia's change (looks as accidental in this branch, as it was in popen() not tempnam(), and it doesnt need to be changed here)
fn
fn
Make tempnam() return FALSE on error as documented
Make tempnam() return FALSE on error as documented
Make tempnam() return FALSE on error as documented
- Rollback fix for bug #49571 (CURLOPT_POSTREDIR not implemented). # - Features don't go into PHP 5.2
Proxying as many connect calls as possible to make testing of the compression protocol @ mysqlnd easier. By setting the environment variable MYSQL_TEST_COMPRESS you can tell the tests to set the MYSQLI_CLIENT_COMPRESS flag upon connect.
Proxying as many connect calls as possible to make testing of the compression protocol @ mysqlnd easier. By setting the environment variable MYSQL_TEST_COMPRESS you can tell the tests to set the MYSQLI_CLIENT_COMPRESS flag upon connect.
fix memleak
fix memleak
fix memleak
save LDFLAGS in EXTRA_LDFLAGS before unsetting this patch makes sure that LDFLAGS are taken into account when configuring the build
save LDFLAGS in EXTRA_LDFLAGS before unsetting this patch makes sure that LDFLAGS are taken into account when configuring the build
Coverage for the OO variants of some functions
Coverage for the OO variants of some functions
Removed irrelevant test
mysqlnd supports INIT_COMMAND and so we can add it to PDO_MYSQL @ mysqlnd
mysqlnd supports INIT_COMMAND and so we can add it to PDO_MYSQL @ mysqlnd
sync with branch, after Ulf's commits
MFH:Check for the different types and create the corresponding configuration file, so it can be used by mysqli, even if mysqlnd is not enabled at all.
Check for the different types and create the corresponding configuration file, so it can be used by mysqli, even if mysqlnd is not enabled at all.
MFB: generalize output
allow tests to pass when a random username is used. patch by Olivier Doucet
spread more svn:ignore love
spread some svn:ignore love
- Move tests in the right location
- Move tests in the right location
- Move tests in the right location
Moving test code around to get test failures down without testing less. Users of the MySQL Client Lib should always call stmt_bind_result after execute - not before.
Moving test code around to get test failures down without testing less. Users of the MySQL Client Lib should always call stmt_bind_result after execute - not before.
Not nice but neither the MySQL Client Library not mysqlnd are supposed to detect invalid flags. Therefore: fixing test
Not nice but neither the MySQL Client Library not mysqlnd are supposed to detect invalid flags. Therefore: fixing test
WS
- fix ACL cache for read check
- fix ACL cache for read check
And now use proper colspanning
And now use proper colspanning
Throw some credit around
Throw some credit around
Afix not included by the fix committed by Ulf. pemalloc and then efree - too bad! Sorry for committing in two passes, my big tree is already patched with compressed.
MFH, a fix not included by the fix committed by Ulf. pemalloc and then efree - too bad! Sorry for committing in two passes, my big tree is already patched with compressed.
BFN
better coverage for mysqli_info
better coverage for mysqli_info
5.2.11 news cleanup
Back to dev
5.2.11
Minor change to improve code coverage
- What a mess..
Upgraded bundled sqlite to version 3.6.18.
Upgraded bundled sqlite to version 3.6.18.
- #49253, add support for libcurl's CERTINFO option
- #49253, add support for libcurl's CERTINFO option
- WS fix (spaces to tabs)
- WS fix (spaces to tabs)
- WS fix (spaces to tabs)
pfft
Backport of http://news.php.net/php.cvs/60381 to PHP 5_2 which fixes a potential crash with ext/mysqli and Prepared Statements if the MySQL Server sends faulty metadata, see also http://news.php.net/php.cvs/60389 . I don't know of a way to crash PHP using a recent MySQL. But metadata has been a troublemaker in the past. Just in case...
- Looks like bug #48697 has already been fixed in RC1.
- Looks like bug #48697 has already been fixed in RC1.
- Looks like bug #48697 has already been fixed in RC1.
Add missing SKIPIF
Add missing SKIPIF
Add missing SKIPIF
Stepping back to PHP 5.2.x and earlier logic of allocating even huge pieces of memory for large BLOB types to avoid data truncation. This fixes the test failure of 005.phpt when using MySQL Client Library (libmysql). The test does pass with mysqlnd because mysqlnd does not have any issues here.
Stepping back to PHP 5.2.x and earlier logic of allocating even huge pieces of memory for large BLOB types to avoid data truncation. This fixes the test failure of 005.phpt when using MySQL Client Library (libmysql). The test does pass with mysqlnd because mysqlnd does not have any issues here.
- Simplified a bit and fixed possible memory corruption and definate leak.
- Simplified a bit and fixed possible memory corruption and definate leak.
Back to dev
5.2.11RC3
Use getThis() correctly.
Add ReflectionMethod::setAccessible() for invoking non-public methods through the Reflection API.
- Possible fix for bug #49344 on Windows (pdo_mssql fails to connect,throws PDOException SQLSTATE[] (null) (severity 0))
- Possible fix for bug #49344 on Windows (pdo_mssql fails to connect,throws PDOException SQLSTATE[] (null) (severity 0))
- Possible fix for bug #49344 on Windows (pdo_mssql fails to connect,throws PDOException SQLSTATE[] (null) (severity 0))
Some extra test coverage for http://bugs.php.net/bug.php?id=48754 .
Some extra test coverage for http://bugs.php.net/bug.php?id=48754 .
Tests for http://bugs.php.net/bug.php?id=49357 (libmysql only) . The simple fix suggested in the bug system is not good enough, therefore no fix yet.
Tests for http://bugs.php.net/bug.php?id=49357 (libmysql only) . The simple fix suggested in the bug system is not good enough, therefore no fix yet.
Next attempt to fix http://bugs.php.net/bug.php?id=48745. Patch by Andrey.
Next attempt to fix http://bugs.php.net/bug.php?id=48745. Patch by Andrey.
Ihnetd.
TZ news
- Updated to version 2009.13 (2009m)
- Updated to version 2009.13 (2009m)
- Updated to version 2009.13 (2009m)
This shouldn't have been in the commit
Experimental build support for VC10  - Contains newly introduced compiler warning fixes  - configure now picks up VC10
- fix #40013, php_uname() doesnt return nodename (MFH)
- revert last commit, breaks the build and needs test case(s)
- revert last commit, breaks the build and needs test case(s)
- revert last commit, breaks the build and needs test case(s)
- don't hide previous declaration
- don't hide previous declaration
- WS
- don't hide early declaration
- don't hide early declaration
- don't hide early declaration
- Drop unused var
- Drop unused var
- add test for #48746
- add test for #48746
- useless #ifdef
- fix #49274, filter_var does not accept object without a toString implementation
- fix #49274, filter_var does not accept object without a toString implementation
- fix #49274, filter_var does not accept object without a toString implementation
- This was not supposed to be committed..
- some styling
- #49464, fix build
- #49464, fix build
I have no idea. This might or might not fix a bug in some branch. At least it works.
I have no idea. This might or might not fix a bug in some branch. At least it works.
- be sure that we use the user token by default (Christian Wenz)
- be sure that we use the user token by default (Christian Wenz)
This will become 5.3.2, the NEWS file will be merged once 5.3.1 is out
- #27051, improve fix on xp/2k3
- #27051, improve fix on xp/2k3
- MF53: len includes the NULL already
Make invokeArgs() error messages consistent with invoke().
Make invokeArgs() error messages consistent with invoke().
Make invokeArgs() error messages consistent with invoke().
- missing )
- Prepare for b-day :D
Back to dev
5.2.11RC2
- #48746, len includes null already
- be sure to get all crt dbg errors in stderr
- be sure to get all crt dbg errors in stderr
- Add missing bug fixing news
- #27051, we need the thread token here, not the process
- #27051, we need the thread token here, not the process
- #27051, create process as impersonated user
- #27051, create process as impersonated user
- fix TS build
- readdir/scandir entry
- #48746, fix regression in readdir/scandir and mounted points or junctions on windows
- #48746, fix regression in readdir/scandir and mounted points or junctions on windows
add -g along with -O0
add -g along with -O0
Merging last tests made in HEAD
Merging last tests made in HEAD
Added Tidy basic test for tidy_access_count
Added Tidy basic test for tidy_warning_count
Added Tidy basic test for tidy_error_count
Added Tidy basic test for tidy_config_count
fix typo
fix typo
add missing skipifs
add missing skipifs
add missing skipifs
nuke duplicated tests
nuke duplicated tests
export le_socket from ext/sockets
export le_socket from ext/sockets
The last of the 2009 testfest tests
The last of the 2009 testfest tests
The last of the 2009 testfest tests
Bug #49391	ldap.c utilizing deprecated ldap_modify_s
Bug #49391	ldap.c utilizing deprecated ldap_modify_s
More tests from 2009 testfest
More tests from 2009 testfest
More tests from 2009 testfest
bc math tests from testfest 2009
bc math tests from testfest 2009
bc math tests from testfest 2009
server for ftp tests
server for ftp tests
server for ftp tests
More tests from 2009 testfest
More tests from 2009 testfest
More tests from 2009 testfest
fix tests
fix tests
New basic network function tests. Tested on Windows, Linux and Linux 64 bit
New basic network function tests. Tested on Windows, Linux and Linux 64 bit
New basic network function tests. Tested on Windows, Linux and Linux 64 bit
More tests from 2009 testfest
More tests from 2009 testfest
More tests from 2009 testfest
- fix VC6 build
- fix VC6 build
Forgot to save the file. Here comes the entry
Added: Tidy basic test for getConfig()
Added: Tidy test with invalid configuration options
This needs to be larger to avoid an overflow on the bit-shifting in this function
This needs to be larger to avoid an overflow on the bit-shifting in this function
This needs to be larger to avoid an overflow on the bit-shifting in this function
- fix #49372, segfault in php_curl_option_url
- fix #49372, segfault in php_curl_option_url
- fix #49372, segfault in php_curl_option_url
- silent warning (fix for #28038)
- silent warning (fix for #28038)
- silent warning (fix for #28038)
- update
- fix #48746, regression with file operaiton on path with junctions
- fix #48746, regression with file operaiton on path with junctions
- update
- update
- fix #44683, popen crashes when an invalid mode is passed (works on 2k8/vista/win7)
- fix #44683, popen crashes when an invalid mode is passed (works on 2k8/vista/win7)
- fix #44683, popen crashes when an invalid mode is passed (works on 2k8/vista/win7)
- fix build
- fix build
- fix build (pls at least try to compile before committing)
Test from 2009 testfest
Test from 2009 testfest
Test from 2009 testfest
- fix test and use __DIR__ as usual
- fix test and use __DIR__ as usual
- add win32 version
- add win32 version
- fix test
- fix test
fix bug #48640: cleaned up ifdef whoes, removed duplicate code.
Improved readlink, supress \??\ and use the drive syntax only
Improved readlink, supress \??\ and use the drive syntax only
- update news for my last TSRM fixes
MFH: fix of the fix
Baby, one more time :(
Better fix. A fix of the fix
MFH:
- be sure that the directory flag is set when we save a path in the cache
- be sure that the directory flag is set when we save a path in the cache
- fix #49047, touch may fail on directory
- fix #49047, touch may fail on directory
- fix test when part of the path is a symlink
- fix test when part of the path is a symlink
- fix test
- fix test
- sigh. that too (separate fix).
- sigh. that too (separate fix).
- that part was for a separate fix
- that part was for a separate fix
- split atime and mtime
- split atime and mtime
- fix test
- fix test
- fix test
- fix test
- fix test
- fix test
Don't clober variables
Don't clober variables
Don't clober variables
- fix object dir usage (ie: relative path called from a symlinked dir), also fix nmake test for similar cases
- fix object dir usage (ie: relative path called from a symlinked dir), also fix nmake test for similar cases
Adding tests for imagecolorallocatealpha
Adding tests for imagecolorallocatealpha
Adding tests for imagecolorallocatealpha
fix build broken by the fix for bug #49306
fix build broken by the fix for bug #49306
- WS + CS + sync
- WS + CS + sync
- WS + CS + sync
- revert fix for #43327, it breaks system&co functions
- revert fix for #43327, it breaks system&co functions
- fix NEWS
- fixed #43327, wrong return value from mail(), if sendmail_path is wrong
- fixed #43327, wrong return value from mail(), if sendmail_path is wrong
New basic test for md5(). Tested on Windows, Linux and Linux 64 bit
New basic test for md5(). Tested on Windows, Linux and Linux 64 bit
New basic test for md5(). Tested on Windows, Linux and Linux 64 bit
fix crash when unexpectedly passed by-ref parameter is modified
fix crash when unexpectedly passed by-ref parameter is modified
fix crash when unexpectedly passed by-ref parameter is modified
- fix NEWS
added missing NEWS entry for bug #49223
NULL the value after free
NULL the value after free
NULL the value after free
cleanup parameter parsing
cleanup parameter parsing
New str_replace() tests. All tested on Windows, Linux and Linux 64
New str_replace() tests. All tested on Windows, Linux and Linux 64
New str_replace() tests. All tested on Windows, Linux and Linux 64
fix parameter parsing for SNMP
fix parameter parsing for SNMP
- Try disabling zlib.output_compression always for images. (zlib extension might be compiled as shared and not same time as the main PHP binary)
- Try disabling zlib.output_compression always for images. (zlib extension might be compiled as shared and not same time as the main PHP binary)
- Try disabling zlib.output_compression always for images. (zlib extension might be compiled as shared and not same time as the main PHP binary)
Make test more portable.
- Updated to version 2009.12 (2009l)
- Updated to version 2009.12 (2009l)
- Updated to version 2009.12 (2009l)
New basic tests for uniqid(). Tested on Windows, Linux and Linux 64 bit
New basic tests for uniqid(). Tested on Windows, Linux and Linux 64 bit
New basic tests for uniqid(). Tested on Windows, Linux and Linux 64 bit
New basic string tests - includes back-porting a few existing tests back to 5.2. All tested on Windows, Linux and Linux 64
New basic string tests - includes back-porting a few existing tests back to 5.2. All tested on Windows, Linux and Linux 64
New basic string tests - includes back-porting a few existing tests back to 5.2. All tested on Windows, Linux and Linux 64
MFB: Added missing sanity checks around exif processing.
MFB: Added missing sanity checks around exif processing.
Added missing sanity checks around exif processing
- Add check
cleanup string parameter parsing, fix some tests
- Improved param. parsing for ldap_read(), ldap_search() and ldap_list()
- Improved param. parsing for ldap_read(), ldap_search() and ldap_list()
fix broken test (spurious tab characters caused run-tests to spaz)
FIx test after Stas' explode() fix
Back to dev
Back to RC1 for a second (still learning svn ;( )
Back to dev
5.2.11RC1
standardise and clean up string functions parameter parsing
refactor & WS for local test config change
refactor & WS for local test config change
Use the correct tense for the NEWS entries
BFN
- Simplify default flags for Sun C compiler.
- Simplify default flags for Sun C compiler.
- Simplify default flags for Sun C compiler.
fix potential memory issue on serialization # When internal class uses zend_mangle_property_name it's malloc() # so it should be freed with free()
fix potential memory issue on serialization # When internal class uses zend_mangle_property_name it's malloc() # so it should be freed with free()
fix potential memory issue on serialization # When internal class uses zend_mangle_property_name it's malloc() # so it should be freed with free()
Update NEWS entry with some stuff I missed.
Update libsqlite to 3.6.17.
Update libsqlite to 3.6.17.
We should check /usr/local/include last
We should check /usr/local/include last
We should check /usr/local/include last
- destroy the file entry stream first
- remove double include
- fix news
- fixed bug #49072, feof never returns true for damaged file in zip
- fixed bug #49072, feof never returns true for damaged file in zip
- fixed bug #49072, feof never returns true for damaged file in zip
-skip if not 5.3
Search /usr/include too for those wanting to use a system PCRE.
Search /usr/include too for those wanting to use a system PCRE.
Search /usr/include too for those wanting to use a system PCRE.
Add actions for the gitclean target.
Add actions for the gitclean target.
Add actions for the gitclean target.
Oops, didn't mean to remove the -0 here
Don't build sqlite as threadsafe if we are doing an NTS build
Don't build sqlite as threadsafe if we are doing an NTS build
- fix and improve dns' AAAA support on windows
- fix and improve dns' AAAA support on windows
Tweak a few tests that failed on OSX
Tweak a few tests that failed on OSX
Tweak a few tests that failed on OSX
BFN
Make these socket tests less Linux-specific
Make these socket tests less Linux-specific
Make these socket tests less Linux-specific
The system error here may not be "Filename too long".  On OSX, for example, it is "Invalid ioctl" in this case.
The system error here may not be "Filename too long".  On OSX, for example, it is "Invalid ioctl" in this case.
The system error here may not be "Filename too long".  On OSX, for example, it is "Invalid ioctl" in this case.
Skip this test on osx because ceil(-0.5) doesn't return -0 like everywhere else because of weird optimizations.
Skip this test on osx because ceil(-0.5) doesn't return -0 like everywhere else because of weird optimizations.
Skip this test on osx because ceil(-0.5) doesn't return -0 like everywhere else because of weird optimizations.
- MFH
- Optimize slightly for common case - n!=4
Doing a strnatcasecmp(chr(128),chr(255)) is completely non-sensical. Logically one might think that chr(128) would collate before chr(255) except this is a case-insensitive comparison and internally we toupper() both args. toupper(chr(128)) is 128.  There is no upper-case equivalent of this char. toupper(chr(255)) is 120 so chr(255) collates before chr(128) in this case-insensitive comparison.  And these are rather bogus characters to feed to a natsort test anyway.
Doing a strnatcasecmp(chr(128),chr(255)) is completely non-sensical. Logically one might think that chr(128) would collate before chr(255) except this is a case-insensitive comparison and internally we toupper() both args. toupper(chr(128)) is 128.  There is no upper-case equivalent of this char. toupper(chr(255)) is 120 so chr(255) collates before chr(128) in this case-insensitive comparison.  And these are rather bogus characters to feed to a natsort test anyway.
Restore intra-string whitespace collapsing broken in the previous change.
Restore intra-string whitespace collapsing broken in the previous change.
Restore intra-string whitespace collapsing broken in the previous change.
Oops, true/false are not defined on Linux.  They are on OSX.
Oops, true/false are not defined on Linux.  They are on OSX.
Oops, true/false are not defined on Linux.  They are on OSX.
Only skip leading 0's - fixes a test I broke a while ago
Only skip leading 0's - fixes a test I broke a while ago
Only skip leading 0's - fixes a test I broke a while ago
- Generated files
- Generated files
- Generated files..
- Generated files..
More eol crap
More eol crap
- Remove duplicate section
Make test more generic
Make test more generic
Make test more generic
- Missing svn:ignore
- Restore PHP-5.2 behaviour when passing null inside object scope to get_class()
- Restore PHP-5.2 behaviour when passing null inside object scope to get_class()
The user argument cannot be NULL here - fixes 2 tests
The user argument cannot be NULL here - fixes 2 tests
The user argument cannot be NULL here - fixes 2 tests
Deal with moving to res_nsearch(). dns_search() on OSX lacks an error handler, might revert to using straight bind9.
Remove usage of res_nmkquery and res_nsend. We essentially were just doing a  res_search() anyway, though now we use res_nsearch() with our own state.
Change dns.h to php_dns.h, part of my dns cleanup
Change dns.h to php_dns.h, part of my dns cleanup
res_search is already checked within ext/standard/config.m4 also check for arpa/nameser_compat.h, OSX puts some old defines in there (not used yet)
res_search is already checked within ext/standard/config.m4 also check for arpa/nameser_compat.h, OSX puts some old defines in there (not used yet)
Minor tweak
Basic test for is_resource() and isset() functions. tested on Windows, Linux and Linux 64
Basic test for is_resource() and isset() functions. tested on Windows, Linux and Linux 64
Basic test for is_resource() and isset() functions. tested on Windows, Linux and Linux 64
use x.y.z version number, use a #define for version number
Add new use-case to parse_str() test. Tested on Windows, Linux and Linux 64
Add new use-case to parse_str() test. Tested on Windows, Linux and Linux 64
Add new use-case to parse_str() test. Tested on Windows, Linux and Linux 64
- Revert bad fix for bug #49122 and only enable this when mysqlnd is used
Added missing handling for ICO support
- Add test (yes, it fails still :)
- Add test (yes, it fails still :)
- Add test (yes, it fails still :)
Revert and correct previous fix, this does not loose precision and convert back to int
- Retouch without my path in the #line directives
fix test
cosmetic fix
cosmetic fix
cosmetic fix
fix memleak and possible segfault in HTTP fopen wrapper
fix memleak and possible segfault in HTTP fopen wrapper
fix memleak and possible segfault in HTTP fopen wrapper
- Generated files
- Generated files
-fix test
- Generated files
- Generated files
- cosmetics
- fix test
New basic tests for get_defined_constants(), get_loaded_extensions() and get_resource_type() functions. Tested on Windows, Linux and Linux 64 bit
New basic tests for get_defined_constants(), get_loaded_extensions() and get_resource_type() functions. Tested on Windows, Linux and Linux 64 bit
New basic tests for get_defined_constants(), get_loaded_extensions() and get_resource_type() functions. Tested on Windows, Linux and Linux 64 bit
Add missing SKIPIF sections to tests
Add missing SKIPIF sections to tests
Add missing SKIPIF sections to tests
- Cleanup
- CS
- CS
- CS
test 2
test
- Improved. No ugly copy. (Tony)
- Improved. No ugly copy. (Tony)
- Improved. No ugly copy. (Tony)
- Re-fix stream_is_local() memory leaks
- Re-fix stream_is_local() memory leaks
- Re-fix stream_is_local() memory leaks
- These tests fail if mbstring is enabled, not because of bad libc..
- These tests fail if mbstring is enabled, not because of bad libc..
- These tests fail if mbstring is enabled, not because of bad libc..
revert bogus memleak fix causing Valgrind to scream
revert bogus memleak fix causing Valgrind to scream
revert bogus memleak fix causing Valgrind to scream
Given that we have a DB connection by the time we get here, mysql_affected_rows() cannot return false.
Missed a merge
Missed a merge
Give this test more headroom since it needs to allocate a 90M block
Addref on clone as well
Addref on clone as well
fix test
fix test
add missing fetch.php
fix Bug #43857
fix Bug #43857
- More and more missing svn:ignore entries.
- More and more missing svn:ignore entries.
- More and more missing svn:ignore entries.
- No ignore here
- More missing svn:ignore entries
- More missing svn:ignore entries
- More missing svn:ignore entries
- Missing svn:ignore
- Add missing svn:ignore
- Add missing svn:ignore
Kill compiler warnings
- Added a function to print all CVs from the local scope.
- Added a function to print all CVs from the local scope.
- Added a function to print all CVs from the local scope.
- Missing svn:ignore
- Missing svn:ignore
- Added test for bug #49074
- Added test for bug #49074
- Added test for bug #49074
fix segfault when running run-tests.php, and general potential for corruption
fix invalid use of c syntax instead of .gdbinit syntax
don't print NULLNULL for null values in a zval
fix hashtable dumping helpers
finish unicode string with quote
- Updated fix for bug #48911 (embed sapi misses SAPI_API) #- Windows didn't need SAPI_API
- Updated fix for bug #48911 (embed sapi misses SAPI_API) #- Windows didn't need SAPI_API
- Updated fix for bug #48911 (embed sapi misses SAPI_API) #- Windows didn't need SAPI_API
fix for bug #49000
fix for bug #49000
Test case for bug #42434
Test case for bug #42434
Test case for bug #42434
- Added missing entries from me
make dump_bt work with unicode function names
oops, released as beta instead of stable, Gwynne: svn rm tags/RELEASE_2_0_0 fails, perhaps this can be allowed?
oops, released as beta instead of stable, Gwynne: svn rm tags/RELEASE_2_0_0 fails, perhaps this can be allowed?
restore removed line (thanks Jani)
Remove .project files (doesn't exist in trunk)
Remove .project files (doesn't exist in trunk)
- fuck bom
make phar tests pass in php 5.2, prepare for release of pecl/phar 2.0.0, merge Gwynne's TSRM fix to phar_object.c to other branches
make phar tests pass in php 5.2, prepare for release of pecl/phar 2.0.0, merge Gwynne's TSRM fix to phar_object.c to other branches
sync run-tests.php with revision 286499 changes making php 6 tests with EXPECTF that can have arbitrary binary data in output work
sync run-tests.php with revision 286499 changes making php 6 tests with EXPECTF that can have arbitrary binary data in output work
fix EXPECTF tests that have binary in their output by always processing output and expected output as binary
report fix for bug #49065
fix extension functions disabling (bug #49065)
fix extension functions disabling (bug #49065)
- 48182 ssl handshake fails during asynchronous socket connection
- 48182 ssl handshake fails during asynchronous socket connection
- 48182 ssl handshake fails during asynchronous socket connection
- Skip some tests in 32bit systems, add cleanups where missing
- Skip some tests in 32bit systems, add cleanups where missing
- Skip some tests in 32bit systems, add cleanups where missing
- Updated to version 2009.11 (2009k)
- Updated to version 2009.11 (2009k)
- Updated to version 2009.11 (2009k)
Get rid of this platform-specific test
Get rid of this platform-specific test
Get rid of this platform-specific test
configure dependency has to be optional as well
configure dependency has to be optional as well
configure dependency has to be optional as well
fix segfault in session/tests/031.phpt by adding optional extension dependency (php_hash_hashtable has to be initialized when setting session.hash_function)
fix segfault in session/tests/031.phpt by adding optional extension dependency (php_hash_hashtable has to be initialized when setting session.hash_function)
fix segfault in session/tests/031.phpt by adding optional extension dependency (php_hash_hashtable has to be initialized when setting session.hash_function)
The version check was completely bogus in this test
We don't support . as a delimiter here in PHP 5.2.  Support was added in 5.3
MFB: added test for #43073
added test for #43073
MFH: fixed #48732 (TTF Bounding box wrong for letters below baseline) and #48801 (Problem with imagettfbbox)
MFH: fixed #48732 (TTF Bounding box wrong for letters below baseline) and #48801 (Problem with imagettfbbox)
fixed #48732 (TTF Bounding box wrong for letters below baseline) and #48801 (Problem with imagettfbbox)
- MFH: Cosmetic changes
- HEAD and PHP_5_2 have it like this, PHP_5_3 should not be different!
MFH: Add error constant when json_encode detects an invalid UTF-8 sequence.
- Regenerated
- Regenerated
- Regenerated
- Removed unused code (replaced long time ago by url_scanner_ex.*
- Removed unused code (replaced long time ago by url_scanner_ex.*
- Removed unused code (replaced long time ago by url_scanner_ex.*
More mime-type cleanups
fix test
fix test
fix test
fix test
fix test
fix test
fix test
fix test
Not binary
These aren't binary
Not binary
Still lots more Unicode work to be done here, but this is a start
Please review this one.  It seems pretty fundamental. When $str is a binary string and you do: $str[4]=0; there should be no unicode conversion.
fix ZTS build
Internally-created array indices are unicode - fix tests to match
I don't see why a unicode string would appear here, and in fact it doesn't.
Down to a single curl test failure now
make cache_list tests pass in php 6
make cache_list tests pass in php 6
fix buildFromIterator with filesystem iterator in php 6
fix buildFromIterator with filesystem iterator in php 6
re-enable phar now that compile and building phar.phar works
fix generation of phar.phar in php 6, fix remaining tests broken by PHP 6 (and not by spl/other stuff in php6)
fix generation of phar.phar in php 6, fix remaining tests broken by PHP 6 (and not by spl/other stuff in php6)
The test for bug #46739 doesn't actually need the remote responder, so get rid of the skipif in PHP 5, and it was broken in PHP 6 because the keys in the curl_info array were not unicode.  All internally-generated arrays should have unicode keys.
The test for bug #46739 doesn't actually need the remote responder, so get rid of the skipif in PHP 5, and it was broken in PHP 6 because the keys in the curl_info array were not unicode.  All internally-generated arrays should have unicode keys.
The test for bug #46739 doesn't actually need the remote responder, so get rid of the skipif in PHP 5, and it was broken in PHP 6 because the keys in the curl_info array were not unicode.  All internally-generated arrays should have unicode keys.
fix basic phar test issues, failing tests phar_oo_009.phpt and phar_buildfromiterator10.phpt are due to bugs in Spl
fix basic phar test issues, failing tests phar_oo_009.phpt and phar_buildfromiterator10.phpt are due to bugs in Spl
re-organize slightly, fix more php6-only compile warnings in php_stream_copy_to_mem
re-organize slightly, fix more php6-only compile warnings in php_stream_copy_to_mem
fix zip front controller tests for php6
fix zip front controller tests for php6
fix tar front controller tests for php6
fix tar front controller tests for php6
fix more tests for php6
fix more tests for php6
more php6 fixes for phar, fix more tests
more php6 fixes for phar, fix more tests
BFN #48189
- Opss, fix the fix...
- Opss, fix the fix...
- Opss, fix the fix...
- Add missing EXPERIMENTAL note (this thing REALLY is experimental at best..)
- Add missing EXPERIMENTAL note (this thing REALLY is experimental at best..)
- Add missing EXPERIMENTAL note (this thing REALLY is experimental at best..)
- Making Valgrind happy
- Making Valgrind happy
- Making Valgrind happy
- MF53: Added - to the list of "unsafe" characters so that the pecl dir can   have the - character in the name.
- MF53: Added - to the list of "unsafe" characters so that the pecl dir can   have the - character in the name.
- Updated to version 2009.11 (2009k)
- Updated to version 2009.11 (2009k)
- Updated to version 2009.11 (2009k)
merge from HEAD changes to test
begin work on making phar php6-ready
begin work on making phar php6-ready
- MFH
- MFH (using svn merge; it seems I won't need to repeat the commit message anymore)
- Probably harmless, but it should have been done this way.
update test to work in php 6
update test to work in php 6
merge unmerged changes from php 5.3
fix PHAR_ARG_INFO #define to work with PHP major versions > 5
fix PHAR_ARG_INFO #define to work with PHP major versions > 5
- Missing svn:ignore
fix --CLEAN-- of all.phpt, remove unnecessary check in phar_convert_again.phpt, and fix signature generation and checking for zip to also include central directory up to the signature, implement better check for end-of-zip at signature verification
fix --CLEAN-- of all.phpt, remove unnecessary check in phar_convert_again.phpt, and fix signature generation and checking for zip to also include central directory up to the signature, implement better check for end-of-zip at signature verification
merge unmerged changes between branches, remove unnecessary test for zip signature failure in badparameters.phpt
merge unmerged changes between branches, remove unnecessary test for zip signature failure in badparameters.phpt
- Added - to the list of "unsafe" characters so that the pecl dir can have the   - character in the name.
fix minor memory leak
fix minor memory leak
fix signature generation/validation for zip archives by phar extension, fix a few edge cases where memory was leaked on error conditions by missing efree()
fix signature generation/validation for zip archives by phar extension, fix a few edge cases where memory was leaked on error conditions by missing efree()
Adding tests for imagesetthickness, basic and errors for both params, and complementing imagetruecolortopalette with out of bound params
Adding tests for imagesetthickness, basic and errors for both params, and complementing imagetruecolortopalette with out of bound params
Adding tests for imagesetthickness, basic and errors for both params, and complementing imagetruecolortopalette with out of bound params
fix unmerged syntax fix
- Allow using huge values for chunklen in this branch too
- Add missing svn:ignore property
fix PHP Bug #48377: error message unclear on converting phar with existing file
fix PHP Bug #48377: error message unclear on converting phar with existing file
new phar test for zip with data descriptor in local file header
new phar test for zip with data descriptor in local file header
fix PHP bug #48791: open office files always reported as corrupted
fix PHP bug #48791: open office files always reported as corrupted
fix php bug #48783: make install will fail saying phar file exists
fix php bug #48783: make install will fail saying phar file exists
fix PHP bug #48740: PHAR install fails when INSTALL_ROOT is not the final install location
fix PHP bug #48740: PHAR install fails when INSTALL_ROOT is not the final install location
- fix test
There is no error code set for json_last_error if an invalid utf8 sequence is encountered.  This fixes that.  Might be worthwhile to merge to 5.3 despite the new constant.
fix Bug #49021: phar tar signature algorithm reports as Unknown (0) in getSignature() call
fix Bug #49021: phar tar signature algorithm reports as Unknown (0) in getSignature() call
don't package up subversion directory in phar.phar
don't package up subversion directory in phar.phar
fix php bug #49018 (phar tar stores long filenames with prefix/name reversed)
fix php bug #49018 (phar tar stores long filenames with prefix/name reversed)
- Add information whether DTrace is enable to phpinfo
MFH: The exact error message might differ (it's "Not owner" on Solaris) (r265951)
MFH: The exact error message might differ (it's "Not owner" on Solaris) (r265951)
- PHP_5_2 branch does not have these macros
- There is only one Makefile that needs removing
- There is only one Makefile that needs removing
- There is only one Makefile that needs removing
- Sync proto with 5.3
CVS->SVN
CVS->SVN
CVS->SVN
- silent warning again and do it so that lazy compilers won't complain
revert Nuno's commit of my patch
- Removed unused parts
- Removed unused parts
- Removed unused parts
- Define HAVE_DTRACE if dtrace is available and ifdef all calls to dtrace probes
- typo
- WS
- silent warnings
- silent auto casting warnings
- fix signed/unsigned mismatch comparisons
Removing deprecated test replaced by individual tests for imageistruecolor and imagetruecolortopalette
Removing deprecated test replaced by individual tests for imageistruecolor and imagetruecolortopalette
Removing deprecated test replaced by individual tests for imageistruecolor and imagetruecolortopalette
Separating and complementing imageistruecolor and imagetruecolortopalette tests
Separating and complementing imageistruecolor and imagetruecolortopalette tests
Separating and complementing imageistruecolor and imagetruecolortopalette tests
- Revert my mistake
- Revert my mistake
- Revert my mistake
Adjusting tests to use EXPECTF (faster testing) and adjusting 5_2 version to lack of parameter validation
Adjusting tests to use EXPECTF (faster testing) and adjusting 5_2 version to lack of parameter validation
- #49763 entry (and test commit in multiple branches :)
- #49763 entry (and test commit in multiple branches :)
- New tests
- New tests
MFH: Bug #48722 (Update OCI8 --enable-sigchild warning)
MFH: Bug #48722 (Update OCI8 --enable-sigchild warning)
Bug #48722 (Update OCI8 --enable-sigchild warning)
make it easier for maintainers to set un/pw in environments that don't pass shell variables
make it easier for maintainers to set un/pw in environments that don't pass shell variables
make it easier for maintainers to set un/pw in environments that don't pass shell variables
Reduce Oracle version-dependent diffs. Make PHP 5/6 compatible
Reduce Oracle version-dependent diffs. Make PHP 5/6 compatible
- Add license headers
- MF53
- WS
- not used anymore
- WS
- not used anymore
ignore a few generated files
Add support for proc_open()'s bypass_shell feature for Unix systems (slightly modified patch from Gwynne)
Add support for proc_open()'s bypass_shell feature for Unix systems (slightly modified patch from Gwynne)
- Removed unnecessary strlen() call and if statement.
- Removed unnecessary strlen() call and if statement.
- Removed unnecessary strlen() call and if statement.
- Add DTrace support.
- New test
- New test
- Tests related to bug #48770
- Tests related to bug #48770
- Tests related to bug #48770
Adding tests for imagecreatetruecolor for PHP_5_2 and trunk
Adding tests for imagecreatetruecolor for PHP_5_2 and trunk
Commiting imagecreatetruecolor tests for PHP_5_3 branch
- let try to be smart, read the bug report....
- let try to be smart, read the bug report....
- let try to be smart, read the bug report....
Added comment to XFAIL
Added comment to XFAIL
Adding explanation
Adding explanation
Adding explanation
removing empty XFAIL sections
removing empty XFAIL sections
removing empty XFAIL sections
Removing unnecessary SKIPIF sections
Removing unnecessary SKIPIF sections
Removing unnecessary SKIPIF sections
fixing paths in INI section
fixing paths in INI section
New cURL tests. Tested on Windows, Linux and Linux 64 bit
New cURL tests. Tested on Windows, Linux and Linux 64 bit
New cURL tests. Tested on Windows, Linux and Linux 64 bit
removing test. this one tests system-specific behavior, not something implemented in php
removing test. this one tests system-specific behavior, not something implemented in php
MFB: fixed tests. money_format() is implemented in underlying system, not in php. So, we shouldn't test for actual values returned. They are different between systems
MFB: fixed tests. money_format() is implemented in underlying system, not in php. So, we shouldn't test for actual values returned. They are different between systems
fixed tests. money_format() is implemented in underlying system, not in php. So, we shouldn't test for actual values returned. They are different between systems
MFH: fix crash when session hash function generated long hashes with hash_bits_per_character larger than 4
fix crash when session hash function generated long hashes with hash_bits_per_character larger than 4
MFH: document the hash name functionality available since 5.3
document the hash name functionality available since 5.3
- Add missing file exts
- Add missing file exts
- Add missing file exts
CS
CS
CS
fix tests
fix tests
fix tests
fix tests
fix tests
fix tests
Multi-branch test commit to see if email notifications are working
Multi-branch test commit to see if email notifications are working
Multi-branch test commit to see if email notifications are working
fix memory leak
fix memory leak
fix memleak
- MFB: Double to string conversion fix (#41698 #48924)
Adjust base64_encode() according to PDM notes.
Adjust rawurlencode() according to PDM notes.
Adjust urlencode() according to PDM notes.
- remove accidental commit (?)
- Not supposed to be here..
MFH
MFH
CS
one more attempt at ridding us of some of those annoying mime types
one more attempt at ridding us of some of those annoying mime types
one more attempt at ridding us of some of those annoying mime types
MFH: dropped some more mime types, svnclean -> clean for multiple VCS
MFH: dropped some more mime types, svnclean -> clean for multiple VCS
dropped some more mime types, svnclean -> clean for multiple VCS
- MFH: Removed trailing zeros on double to string conversion (noticed on #48924)
- Removed trailing zeros on double to string conversion (noticed on #48924)
Buffer handling fixes
Buffer handling fixes
fix ini_restore problem
fix ini_restore problem
fix ini_restore problem
fix freed mem reference
fix freed mem reference
fix freed mem reference
Limit db connection strings to 255 chars here - I don't trust the underlying libs
MFH
Limit connection strings to 255 chars here
- cvs > svn
- cvs > svn
- cvs > svn
- cvs > svn
- cvs > svn
- cvs > svn
fix tests corrupted by svn's eol-style=native
fix tests corrupted by svn's eol-style=native
fix tests corrupted by svn's eol-style=native
MFH: fix broken test
MFH: fix broken test
fix broken test
php5.spec was never used, as far as can be determined. also, php 5 -> php 6 in makerpm, but that script needs considerably more work IMO
kill bad mime types
kill bad mime types
kill bad mime types
MFH: CVS->SVN
MFH: CVS->SVN
CVS->SVN
fix build
fix build
fix build
MFH: cvs->svn
MFH: - cvs->svn
- cvs->svn
add intl ini value
add intl option
- remove app/js mime
- remove app/js mime
- remove app/js mime
cvs->svn
cvs->svn
cvs->svn
cvs->svn
vn propdel svn:mime-type build/buildcheck.sh cvs->svn
svn propdel svn:mime-type build/buildcheck.sh cvs->svn
cvs->svn
- rename to svn
- rename to svn
- rename to svn
- rename to svn
- rename to svn
- rename to svn
- cvs to svn changes
- cvs to svn changes
- cvs to svn changes
fix a huge number of wrong MIME types. UGH.
MFB: remove ZendEngine* detection, we always have Zend now (svn)
MFB: remove ZendEngine* detection, we always have Zend now (svn)
- remove ZendEngine* detection, we always have Zend now (svn)
MFB: cvsclean -> svnclean
MFB: cvsclean -> svnclean
cvsclean -> svnclean
Test commit
MFB
MFB cvs->svn
Test commit - but pseudo useful
MFH: Get rid of PHP 4 related buildconf and moving around directories. As we switched to svn ZE2 is in Zend by default.
MFH: Get rid of PHP 4 related buildconf and moving around directories. As we switched to svn ZE2 is in Zend by default.
Get rid of PHP 4 related buildconf and moving around directories. As we switched to svn ZE2 is in Zend by default.
ChangeLog update
report fix
fix mail.log openbasedir interaction with .htaccess
fix mail.log openbasedir interaction with .htaccess
- skip on windows
- windows version
- skip on windows
- windows version
- windows version
- windows version
- MF53: skip on win, different error msg
- skip on win, different error msg
- MF53: fix test (mtime only is changed)
- fix test (mtime only is changed)
BFN
ChangeLog update
MFH: Reset TZ environment variable. Some tests assume that it's not set.
MFH: Reset TZ environment variable. Some tests assume that it's not set.
Reset TZ environment variable. Some tests assume that it's not set.
- #46682
- MF53: touch() atime field returns different value
- #46882, touch() atime field returns different value
- fixed, remove XFAIL
- fixed, remove xfail
- sync with 5.3
- fix tests, 5.3 supports these things now on windows. Also shorter tests would be REALLY nice (or use iteration numbering)
merge errors support
- #45905
- #48116
 - MF53: #48116, fix build with openssl 1.0
F*ckin bom
Check your editors, this is ascii only file!
MFH: Adjust tests. The order in which notices appear is platform dependend as the function call ordering in parameter lists is not defined in C.
Adjust tests. The order in which notices appear is platform dependend as the function call ordering in parameter lists is not defined in C.
- #45905
- MF53: #45905, imagefilledrectangle() clipping error
- WS
- WS
- MF53: #45905, imagefilledrectangle() clipping error
- #45905, imagefilledrectangle() clipping error
ChangeLog update
- MFH: New tests (WurzbrugUG testfest)
- New tests (WurzbrugUG testfest)
fix protos
fix args
- forgot to add the author of the initial patch
- merge errors support - merge IDN
- #48116
- #48116, fix build with openssl 1.0
add test
- #48116, restore 0.x compability, thx config.cache.
- #48116, fix build against openssl 1.0
- #48771
MFH. Enabling test as requested by the skipif comment... it does pass when slightly modified.
Enabling test as requested by the skipif comment... it does pass when slightly modified.
MFH. Adapting (old) tests to current PHP 6 semantics - s/unicode.semantics test/version_compare
Adapting (old) tests to current PHP 6 semantics - s/unicode.semantics test/version_compare
MFH. Adding --CLEAN-- sections to all ext/mysqli tests
Adding --CLEAN-- sections to all ext/mysqli tests
- Added missing file
- MFH: #48771, rename() between drives error: No error
- #48771, rename() between drives error: No error
ChangeLog update
fix test
fix test
fix test
ChangeLog update
ChangeLog update
- New tests (DutchUG testfest)
merge from 5_3
merge from 5_3
stop polluting my /tmp dir
MFH. ... to play with large data sets. Currently its only 10MB in size to keep the test runtime short. However, its easy to increase, if you want to test large data sets
... to play with large data sets. Currently its only 10MB in size to keep the test runtime short. However, its easy to increase, if you want to test large data sets
Nuke "hotfix", fix the real issue..
typo. or something. Who knows, the branches are a mess anyway..
MFH: Tests for ext/ldap from PHPBelgium TestFest
MFH: Tests for ext/ldap from PHPBelgium TestFest
Tests for ext/ldap from PHPBelgium TestFest
MFH. Global s/ini_get('unicode.semantics')/version check/ . Early PHP 6 times are gone. I hope unicode logic will not change any more
Global s/ini_get('unicode.semantics')/version check/ . Early PHP 6 times are gone. I hope unicode logic will not change any more
ChangeLog update
- Missing files
- New tests (DutchUG testfest)
- New tests (DutchUG testfest)
bugfix
bugfix
MFH: removed references to track_vars, since this option doesnt exist since ages
removed references to track_vars, since this option doesnt exist since ages
MFH. Adding CLEAN sections, fixing some SKIPIF sections. Cool new run-tests.php, Zoe (and other) - its a great help to detect stinky SKIPIF and CLEAN
call-time pass-by-reference is deprecated in 5.3
Adding CLEAN sections, fixing some SKIPIF sections. Cool new run-tests.php, Zoe (and other) - its a great help to detect stinky SKIPIF and CLEAN
Don't use short tags in tests
MFH - Test for bug #48754
Test for bug #48754
ChangeLog update
cleanup Locale::lookup
cleanup Locale::lookup
- MFH: New tests (NorwayUG testfest)
- MFH: New tests (NorwayUG testfest)
- New tests (NorwayUG testfest)
typo
typo
update API files
update API files
fix proto
fix proto
BFN #45280
BFN #48757
MFH - Changing tests to run with both PHP 6 and PHP 5.3 to make future MFH easier. Basically three changes over all files: a) s/unicode(/%unicode|string% b) s/[u/[%u|b% c) s/unicode.semantics/version_compare
Changing tests to run with both PHP 6 and PHP 5.3 to make future MFH easier. Basically three changes over all files: a) s/unicode(/%unicode|string% b) s/[u/[%u|b% c) s/unicode.semantics/version_compare
MFH - Adding XFAIL for some tests which expect the zval cache of mysqlnd to be on. It has been disabled for the PHP 5.3.0 release. Adding INI sections to ensure that statistics are collected. Adding tests that check if statistics collection can be disabled
Adding XFAIL for some tests which expect the zval cache of mysqlnd to be on. It has been disabled for the PHP 5.3.0 release. Adding INI sections to ensure that statistics are collected. Adding tests that check if statistics collection can be disabled
- New tests
ChangeLog update
- MFH: New tests (SaoPaulo UG testfest)
- New tests (SaoPaulo UG testfest)
fix json shared build on Windows
MFH: spl_autoload_unregister/spl_autoload_functions and closures
fixed bug #48681 (openssl signature verification for tar archives broken)
MFH: expanded the section about how to create the changelog
expanded the section about how to create the changelog
- New test
MFH: formatting fix for the re-releasing section
formatting fix for the re-releasing section
MFH Upgrade libsqlite to 3.6.16, fixes a possible error with triggers
MFB5.3: Add missing ini entries (Mikko)
ChangeLog update
Back to -dev
WS
The php.ini files we ship were renamed
Improve wording and drop outdated link
Basic test for max() on 64 bit platforms. Tested on Linux 64 bit
Basic test for max() on 64 bit platforms. Tested on Linux 64 bit
Basic test for max() on 64 bit platforms. Tested on Linux 64 bit
Basic tests for sleep() and usleep(). Tested on Windows, Linux and Linux 64 bit
Basic tests for sleep() and usleep(). Tested on Windows, Linux and Linux 64 bit
Basic tests for sleep() and usleep(). Tested on Windows, Linux and Linux 64 bit
ChangeLog update
Update libsqlite to 3.6.16
forgotten some credits :)
unicode support in ext/ldap
Update
MFH Add missing ini entries (Mikko)
Add missing ini entries (Mikko)
MFH: Add ibase settings
Add ibase settings
Drop debug switches from UPGRADING, they need --enable-debug and aren't ment for users
MFH: Add two ini settings and remove ini setting which is commented out in code
- Add two ini settings
- dot dot dot.. :)
- Typo, removed BOM (this file was supposed to be just ascii..right? :)
MFH: fix typo
fix typo
MFH: Add missing MySQL entries
Add missing MySQL entries
Record "new" ini param
FN
- fix build
- fix build
- MFH: fix regression introduced by the fix for #48518 (Ilia, Rasmus)
- MFH: fix regression introduced by the fix for #48518 (Ilia, Rasmus)
- MF52: calloc must actually clear the requested size (Andrei)
- calloc must actually clearing the requested size (Andrei)
ChangeLog update
- fix regression introduced by the fix for #48518 (Ilia, Rasmus)
[DOC] Support multiple paths (separated by path_separator) in config-file-scan-dir/PHP_INI_SCAN_DIR
Group the open_basedir entries
- Remove outdated version information - Remove no-longer-existing windows dll (there could be more..) - List missing INI directives (need to add descriptions to them and sort   them correctly..)
- Added missing deprecated things - Added missing INI settings
ChangeLog update
- clean
Seems like this wasn't merged, re-add credit for Pierre here
MFH: add libxml_disable_entity_loader function
Bump version to 5.3.0 and API Nos. up
Clarifications for oci8 changes
Typo, capitalization, wording
more grammar and spelling, consistent usage, suggestions for replacements
Add deprecated functions
- update the windows section
- some updates, typos, missing entries
- MF53:  - Windows ACL cache support, update existing tests and add a new one  - #48535,  file_exists returns false when impersonate is used
- WS
- add license
- add license
ChangeLog update
Revert mysqlnd to RC3 state after issues with pconnects
Persistent connections with mysqli missing
reduntant
More missing stuff
missing .cvsignore file added
- BFN #48696
Add test
- Added note about deprecation of  "#" comment-style in .INI files
fix skipif
fix skipif
fix skipif
fix skipif
fix skipif
fix a little typo I made, bug #48685
Whitespace fixes, reformatting to bring all lines to 80 cols, grammatical fixes, removed redundant information
MFB: Handle instances where TMPDIR = ""
Handle instances where TMPDIR = ""
ChangeLog update
Make clearer that thesse are internal functions
fix Bug #48681: openssl signature verification for tar archives broken in ext/phar, merge small fixes to phar.phar generation from PHP_5_3
fix slightly unclear error message in generation of phar.phar
Missing enhancements
Revert patch
BFN
- add readme.redist.bins as .txt
- add readme.redist.bins as .txt
- MF53: add licenses info for bundled libs, codes merged from other projects, etc., information for binary distributions (windows, linux, etc.)
- MF53: license for libgd
-add licenses info for bundled libs, codes merged from other projects, etc., information for binary distributions (windows, linux, etc.)
- add license info
ChangeLog update
New and fixed html tests. Tested in Windows, Linux and Linux 64.
New and fixed html tests. Tested in Windows, Linux and Linux 64.
New and fixed html tests. Tested in Windows, Linux and Linux 64.
New basic parse_str() tests. Tested on Windows,Linux and Lnux 64 bit. Some tests fail on PHP 6 (tagged with XFAIL) due to bug 48658
New basic parse_str() tests. Tested on Windows,Linux and Lnux 64 bit. Some tests fail on PHP 6 (tagged with XFAIL) due to bug 48658
New basic parse_str() tests. Tested on Windows,Linux and Lnux 64 bit. Some tests fail on PHP 6 (tagged with XFAIL) due to bug 48658
add S_IRWXU and friends as defined POSIX constants
Missing items
better place for it
TZ is no longer used to guess the timezone
MFH The experimental warning sohuld be in the configure output...
The experimental warning sohuld be in the configure output...
The json header should be installed so other exts can use it
The json header should be installed so other exts can use it
MFH: fix arginfo for libxml_use_internal_errors()
New function
MFH: add libxml_disable_entity_loader function
add libxml_disable_entity_loader function
Whops, nobody saw this :)
MFH: Move these defines to config.w32.h
Move these defines to config.w32.h
MFH: Use %* instead of a range + WS
Use %* instead of a range + WS
ChangeLog update
BFN
- gd compat mode news
- #48624
- news for #48619
- MF53: #48619, imap_search ALL segfaults
- MF53: #48619, imap_search ALL segfaults
- MF53: [PHP-CVS] cvs: php-src(PHP_5_3) /sapi/cgi cgi_main.c
fix shared build on Windows
Should have been in previous commit
moved to PHP_5_2
MFH: Use correct data types here, and gdImageSaveAlpha for the alpha flag
MFH: fixed bug #48555 (ImageFTBBox() differs from previous versions for texts with new lines)
Revert unrelated bits to the previous commit
- #48624 .user.ini never gets parsed
- #48619, imap_search ALL segfaults
- BFN #48641 (I missed to add in the previous commit: patch by crrodriguez at opensuse dot org) :P
Sync with docs
ChangeLog update
BFN - Partially fixed in RC4, fixed properly in the next release.
BFN
MFH Specific test for bug #48276
MFH Specific test for bug #48276
Specific test for bug #48276
New lang tests.
New lang tests.
New lang tests.
MFH: It's 2009
MFH: It's 2009
It's 2009
BFN
entry for bug #48555
MFH: fixed bug #48555 (ImageFTBBox() differs from previous versions for texts with new lines)
fixed bug #48555 (ImageFTBBox() differs from previous versions for texts with new lines)
Missing Windows constants
get_extension_funcs have been in PHP since php4
ChangeLog update
- MFH: old strlen cleanup
ChangeLog update
Make the check case sensitive, and since we can only have a constructor that matches the class name or is __construct its probably safe to just check for __. This means we can skip lowering the function_name, which is hard to be binary safe sine we don't store the length.
ChangeLog update
Basic tests for strftime(). Tested on Windows (all tests skip), Linux and Liinux 64 bit
Basic tests for strftime(). Tested on Windows (all tests skip), Linux and Liinux 64 bit
Basic tests for strftime(). Tested on Windows (all tests skip), Linux and Liinux 64 bit
Back to dev
Backport ob test to php 5.2 and 53.
Backport ob test to php 5.2 and 53.
5.3.0 RC 4
fix EXPECT section of test
fix EXPECT section of test
Temporarily disable this optimization causing too much trouble, kept in HEAD
- Updated to version 2009.10 (2009j)
- Updated to version 2009.10 (2009j)
- Updated to version 2009.10 (2009j)
Tests from Berlin test fest
Tests from Berlin test fest
Tests from Berlin test fest
Ah, broken vimrc..
ChangeLog update
Pierre, this can not be so hard
unfuck the file, fucked up by Pierre as usual
- Reorder
- fix NEWS (thx Felipe!)
- update with latest bits
- MF53: #47318, UMR when trying to activate user config
- kill unused var
- #47318, UMR when trying to activate user config
New test for standard object compare handler. Tested on Windows, Linux and Linux 64
New test for standard object compare handler. Tested on Windows, Linux and Linux 64
New test for standard object compare handler. Tested on Windows, Linux and Linux 64
New foreach tests. Tested on Windows, Linux and Linux 64 bit.
New foreach tests. Tested on Windows, Linux and Linux 64 bit.
New foreach tests. Tested on Windows, Linux and Linux 64 bit.
MFB5.2: "Make this happy on gcc2"
BFN #48578
MFH Add SplDoublyLinkedList::prev() and fix a memory leak when the iterator pointer isn't at the end
Update test to test a few more cases and another for calling prev() on a blank DLL.
Add SplDoublyLinkedList::prev(), no point in having a DLL that only goes one way
Back to dev
5.2.10
Additional class related tests.
Additional class related tests.
Additional class related tests.
fix skipf
fix skipif
fix skipif
fix skipif
- fix test
- missing --SKIPIF-- header
Need the gcc version check here too
Need the gcc version check here too
Need the gcc version check here too
ChangeLog update
- fix build when IO_REPARSE_TAG_SYMLINK is not defined (works with 2k+)
New strcoll error test. Tested on Windows, Linux and Linux 64.
New strcoll error test. Tested on Windows, Linux and Linux 64.
New strcoll error test. Tested on Windows, Linux and Linux 64.
MFH: C-comments
C-comments should be used
- MF53: fix readlink in TS SAPI
- fix readlink in TS SAPI
Tweak to make this compile with gcc2
Tweak to make this compile with gcc2
Another tweak to make 5.2 compile on gcc2
MFH: Memory usage optimisation. mysqlnd is not libmysql. mysqlnd does use the Zend allocator, which means that is easier to hit memory_limit if you have big stored (buffered) result sets. Before with libmysql you won't hit memory_limit because libmysql uses libc's allocator and nothing is checked. Now, with mysqlnd the situation is stricter and it is easier to hit memory_limit. We try to optimize for big result sets. If a result set is larger than 10 rows we will start freeing some data to keep memory usage after 10 rows constant. This will help in the cases where a buffered result set is scrolled forward only and just only once, or mysqlnd will need to decode data from the network buffers again - yes, it is a trade-off between CPU time and memory size. The best for big result sets is of course using unbuffered queries - for comparison : 3 Million rows with buffered take at least 180MB, with buffered you will stay at 3MB, and unbuffered will be just 7-8% slower.
Memory usage optimisation. mysqlnd is not libmysql. mysqlnd does use the Zend allocator, which means that is easier to hit memory_limit if you have big stored (buffered) result sets. Before with libmysql you won't hit memory_limit because libmysql uses libc's allocator and nothing is checked. Now, with mysqlnd the situation is stricter and it is easier to hit memory_limit. We try to optimize for big result sets. If a result set is larger than 10 rows we will start freeing some data to keep memory usage after 10 rows constant. This will help in the cases where a buffered result set is scrolled forward only and just only once, or mysqlnd will need to decode data from the network buffers again - yes, it is a trade-off between CPU time and memory size. The best for big result sets is of course using unbuffered queries - for comparison : 3 Million rows with buffered take at least 180MB, with buffered you will stay at 3MB, and unbuffered will be just 7-8% slower.
- fix title
- fix title
MFH: Hardwire function call instead of using callbacks. We don't actually need callbacks, it was done for making 2 functions static, not to pollute the global functions space but that had its price of 8 bytes overheat per allocation, which is just too much. Also making the app member 32b instead of 64b, which should save additional 4 byte, to the total of 12 byte per allocation of a row buffer.
Hardwire function call instead of using callbacks. We don't actually need callbacks, it was done for making 2 functions static, not to pollute the global functions space but that had its price of 8 bytes overheat per allocation, which is just too much. Also making the app member 32b instead of 64b, which should save additional 4 byte, to the total of 12 byte per allocation of a row buffer.
New class related tests. Tested on Windows, Linux and Linux 64. Tests written by  Iain Lewis
New class related tests. Tested on Windows, Linux and Linux 64. Tests written by  Iain Lewis
New class related tests. Tested on Windows, Linux and Linux 64. Tests written by  Iain Lewis
MFH: Use Zend's allocator instead of libc's and also don't try to work on zvals that are NULLs.
Use Zend's allocator instead of libc's and also don't try to work on zvals that are NULLs.
ChangeLog update
- revert last commit, should not have been applied
- #47767, include_once does not resolve windows symlinks or junctions
- Windows ACL cache support, update existing tests and add a new one
- #48441 and encoding
- Drop unused code
- Drop unused code
- Drop unused code
New test for bitwise operators. Tested on Linux 64 bit
New test for bitwise operators. Tested on Linux 64 bit
New test for bitwise operators. Tested on Linux 64 bit
Move tests to correct directory
- add TODO about int definition cleanup
- add TODO about int definition cleanup
MFH: Refactoring that will help fixing #48441
MFH: Refactoring that will help fixing #48441
Refactoring that will help fixing #48441
- #48535,  file_exists returns false when impersonate is used
- MFH: simplify, use correct type and silent warnings
- simplify, use correct type and silent warnings
- silent compilation warnings (no MFH yet)
BFN
MFH sync SQLite 3.6.15
sync SQLite 3.6.15
MFB: 48518
MFB: Simplify original fix for bug #33475
Simplify original fix for bug #33475
New POSIX extension tests from Berlin UG TestFest 2009.
New POSIX extension tests from Berlin UG TestFest 2009.
New POSIX extension tests from Berlin UG TestFest 2009.
- silent warning
- silent warning
ChangeLog update
Synced with the wiki
Remove unused file (see file UPGRADING for the 5.2->5.3 guide)
Backport ob test to php 5.2 and 53.
Backport ob test to php 5.2 and 53.
New foreach tests. Tested on Windows, Linux and Linux 64 bit.
New foreach tests. Tested on Windows, Linux and Linux 64 bit.
New foreach tests. Tested on Windows, Linux and Linux 64 bit.
Basic tests for function_exists() and get_defined_functions(). Tested on Windows, Linux and Linux 64 bit.
Basic tests for function_exists() and get_defined_functions(). Tested on Windows, Linux and Linux 64 bit.
Basic tests for function_exists() and get_defined_functions(). Tested on Windows, Linux and Linux 64 bit.
New json extension tests. Tested on Windows, Linux and Linux 64 bit.
New json extension tests. Tested on Windows, Linux and Linux 64 bit.
New json extension tests. Tested on Windows, Linux and Linux 64 bit.
- MF53: fix build (void alarm)
- MF53: fix build (void alarm)
ChangeLog update
fix missing erealloc in fix for bug #40091, spl_autoload_register of more than 1 copy of the same method in different objects
remove missing erealloc entry that will go in php 5.2 NEWS
fix Bug #48541: spl_autoload_register only registers first closure, then leaks the others
fix criminally unclear NEWS entry by me
New iconv extension tests. Tested on Windows, Linux and Linux 64 bit.
New iconv extension tests. Tested on Windows, Linux and Linux 64 bit.
New iconv extension tests. Tested on Windows, Linux and Linux 64 bit.
ChangeLog update
- Constified method_name arg. in zend_get_user_call_function() and zend_get_user_callstatic_function()
- Constified method_name arg. in zend_get_user_call_function() and zend_get_user_callstatic_function()
- MFH some changes (from last fix on 5.3+) - Constified method_name arg in zend_get_user_call_function()
- Refix the fix :| (missing skipif)
New iconv extension tests. Tested on Windows, Linux and Linux 64 bit.
New iconv extension tests. Tested on Windows, Linux and Linux 64 bit.
New iconv extension tests. Tested on Windows, Linux and Linux 64 bit.
New iconv extension tests. Tested on Windows, Linux and Linux 64 bit
New iconv extension tests. Tested on Windows, Linux and Linux 64 bit
New iconv extension tests. Tested on Windows, Linux and Linux 64 bit
- Dropped unnecessary var
- Sync with 5_3
- Dropped unused var (HEAD only)
ChangeLog update
Delete duplicate test
Delete duplicate test
Delete duplicate test
New intval() tests. Tested on Windows, Linux and linux 64
New intval() tests. Tested on Windows, Linux and linux 64
New intval() tests. Tested on Windows, Linux and linux 64
New 64 bit math tests. Tested on Windows, Linux and Linux 64 bit. Tests authored by Dave Kelsey
New 64 bit math tests. Tested on Windows, Linux and Linux 64 bit. Tests authored by Dave Kelsey
New 64 bit math tests. Tested on Windows, Linux and Linux 64 bit. Tests authored by Dave Kelsey
Put these in an ifdef because they are not used at all if the zval cache is off.
Revert by adding an ifdef
- nuke unused var
- MF53: silent warning and make it less ambiguous
MFB: add phar.phar generation to windows
update NEWS about phar.phar on windows
add phar.phar creation on windows
- silent warning and make it less ambiguous
New POISX tests. Tested on Windows (all test SKIP), Linux and Linux 64
New POISX tests. Tested on Windows (all test SKIP), Linux and Linux 64
New POISX tests. Tested on Windows (all test SKIP), Linux and Linux 64
Back to dev
RC2 not final
5.2.10RC2
MFH: Use a better extension version
Use a better extension version
MFH: fix bug #48518 (curl crashes when writing into invalid file handle)
MFH: fix bug #48518 (curl crashes when writing into invalid file handle)
fix bug #48518 (curl crashes when writing into invalid file handle)
reapply the fix
MFH: Mark spl as required and fix extension loading order # Not needed in 5.2 as the simplexmliterator is part of spl there
MFH: Protect the code when variable is NULL, which should never happen, but anyway, you know about "never happens" :)
Protect the code when variable is NULL, which should never happen, but anyway, you know about "never happens"
MFH:   Check the pointer before calling a function on it, or we will crash.   This is a very rare situation where the server is totally broken.
Check the pointer before calling a function on it, or we will crash. This is a very rare situation where the server is totally broken.
MFB: Reference decrement in own function. Make a function which is not called externally static, from PHPAPI.
Sync with PHP6 - TSRMLS_FETCH Extract reference decrement in own function Remove PHPAPI of a function and make it static as it is not called externally
ChangeLog update
back to -dev
5.3.0RC3
MFH Hannes said this shall not be run for RCs
Hannes said this shall not be run for RCs
- look for static lib too
- check for static lib as well
revert the fix for a while
MFH: fix arginfo for curl_multi_info_read()
MFH: fix arginfo for curl_multi_info_read()
fix arginfo for curl_multi_info_read()
- MFB: put mpir headers in their own directory
- put mpir headers in their own directory
ChangeLog update
- missing ACL entry
- #41874
- MFB: #41874, separate STDOUT and STDERR in exec functions
-   #41874, separate STDOUT and STDERR in exec functions
- fix NEWS
TZ update news
- fix build (test before commit maybe?)
- fix TS build
- ws
- fix build (void alarm)
- missing include
BFN
ChangeLog update
BFN
Add test
MFH #46019 - Memory leak when Mysqli::init() is called multiple times.
BFN
Move entry to 5.2
 #41874, separate STDOUT and STDERR in exec functions
MFH fix bug #44214: crash with preg_replace_callback and global variables
- typo
- typo
- Updated to version 2009.9 (2009i)
- Updated to version 2009.9 (2009i)
- Updated to version 2009.9 (2009i)
Re-apply patch with fixed build
fix build, revert faulty patch
New tests for operators. These tests were auto generated to verify correctness for a number of significant values.  The work was done by Dave Kelsey.
New tests for operators. These tests were auto generated to verify correctness for a number of significant values.  The work was done by Dave Kelsey.
New tests for operators. These tests were auto generated to verify correctness for a number of significant values.  The work was done by Dave Kelsey.
revert yet another wrongly MFBed fix
fix news
- MFB: sync with 1.0.2, improve perf x86-64 (patch by Solar Designer)
- sync with 1.0.2, improve perf x86-64 (patch by Solar Designer)
- #48469
MFH make SQLite3::enableExceptions() return the previous value.
Change more things to the UTF-16 API and make SQLite3::enableExceptions() return the previous value.
ChangeLog update
BFN
MFH: Removed credit
MFH: Removed credit
Removed credit
New tests for foreach loops. These were written by another member of the Projectzero team.
New tests for foreach loops. These were written by another member of the Projectzero team.
New tests for foreach loops. These were written by another member of the Projectzero team.
MFH: Changed error messages to use "cannot" instead of "can not" (meaning "also can")
Changed error messages to use "cannot" instead of "can not" (meaning "also can")
ChangeLog update
ChangeLog update
MFH: Make pass_two visible to extensions with ZEND_API (required for optimizer).
Make pass_two visible to extensions with ZEND_API (required for optimizer).
Make this happy on gcc2
We don't have these in gcc2
No always_inline attribute in gcc2
There is no always_inline attribute in gcc2
MFH: Added zend_eval_stringl and made create_function(), etc. binary-safe
Added zend_eval_stringl and made create_function(), etc. binary-safe
better fix for #48409 , #48428 , #48228
MFH: better fix for #48409 , #48428 , #48228
better fix for #48409 , #48428 , #48228 # (again, sorry)
MFH: fixed isset() on sub-directories (isset("blah") if file "blah/foo.php" exists)
fixed isset() on sub-directories (isset('blah') if file 'blah/foo.php' exists)
ChangeLog update
MFPECL: fix security vulnerability in phar's handling of long tar filenames
MFPECL: fix security vulnerability in phar's handling of long tar filenames
MFH: Updated tests after double->long conversion change (basically to match 5.2)
Updated tests after double->long conversion change (basically to match 5.2)
MFH: Restored double->long conversion behavior to that of PHP 5.2 (on most platforms) and prior:  * Out-of-range numbers overflow/preserve least significant bits (no LONG_MAX/MIN limit)  * See bug #42868 (presumably-rare platform with different results in 5.2)  * On 32-bit platforms with 64-bit long type, a zend_long64 cast has been added,     otherwise it's the same as 5.2  * Use this conversion method everywhere instead of some plain (long) casts
Restored double->long conversion behavior to that of PHP 5.2 (on most platforms) and prior:  * Out-of-range numbers overflow/preserve least significant bits (no LONG_MAX/MIN limit)  * See bug #42868 (presumably-rare platform with different results in 5.2)  * On 32-bit platforms with 64-bit long type, a zend_long64 cast has been added,     otherwise it's the same as 5.2  * Use this conversion method everywhere instead of some plain (long) casts
MFB
MFB
MFH: Include other flags as well
Include other flags as well
MFB: snprintf -> slprintf (Ilia)
MFH: CS + WS changes
- typo
- typo
- new constnats
- [DOC] MF53: add PHP_WINDOWS_NT_* and PHP_WINDOWS_VERSION_* constants (usefull for testing and features detections)    see http://msdn.microsoft.com/en-us/library/ms724451(VS.85).aspx for the explanation
- [DOC] add PHP_WINDOWS_NT_* and PHP_WINDOWS_VERSION_* constants (usefull for testing and features detections)    see http://msdn.microsoft.com/en-us/library/ms724451(VS.85).aspx for the explanation
ChangeLog update
MFH: Add test for Bug #47859 parse_ini_file() does not like asterisk (*) in key in the beginning
Add test for Bug #47859 parse_ini_file() does not like asterisk (*) in key in the beginning
Commiting testfest tests from tek
Commiting testfest tests from tek
Commiting testfest tests from tek
- fix title
- fix title
- MFB: fix parameter order and return value check in windows (Venkat Raman Don, Pierre)' link
- fix parameter order and return value check in windows (Venkat Raman Don, Pierre)' link
ChangeLog update
MFH: config.h is in this directory, not in ext/bcmath root, fixes re-compilation for me
config.h is in this directory, not in ext/bcmath root, fixes re-compilation for me
MFH: * We dont need to wrap to two lines here, its small enough to show with a standard sized cmd window * Bump copyright year in the .rc
* We dont need to wrap to two lines here, its small enough to show with a standard sized cmd window * Bump copyright year in the .rc
bfn
fix test
fix test
fix test
ChangeLog update
MFB: fix compiler warnings by moving all std includes after include of zend_config.h
fix compiler warnings by moving all std includes after include of zend_config.h. this also fixes the build with stricter compilers than gcc (like clang)
MFH: New tests # These tests were failing on different configurations, so adding them # all to get more chances of seeing one failing in case of problem.
MFH: New tests # These tests were failing on different configurations, so adding them # all to get more chances of seeing one failing in case of problem.
New tests # These tests were failing on different configurations, so adding them # all to get more chances of seeing one failing in case of problem.
MFH: better fix for #48409 , #48428 , #48228
MFH: better fix for #48409 , #48428 , #48228
better fix for #48409 , #48428 , #48228
fix ZTS build
Engine execution order tests
Engine execution order tests
Engine execution order tests
fix news
ChangeLog update
MFH: Add test for the timeout inside shutdown function
Add test for the timeout inside shutdown function
fix for #48247
fix for #48247
fix for #48247
fix for #48247
MFB
MFH: no dots in errors
MFH: no dots in errors
- No dots in error messages
fix news
This shouldn't have been in there
Make a note.
Expose encode/decode API.
Expose encode/decode API.
ChangeLog update
BFN
MFH: Take small blocks cache into account in memory_get_usage()
MFH: Take small blocks cache into account in memory_get_usage()
Take small blocks cache into account in memory_get_usage()
BFN
MFH: Make sure the timeout is checked in the shutdown function, patch from Etienne
Make sure the timeout is checked in the shutdown function, patch from Etienne
ChangeLog update
MFH - Updating test to reflect API changes.
Updating test to reflect API changes.
MFH - Skip test for libmysql. The MySQL C-API does not support it, mysqlnd does...
Skip test for libmysql. The MySQL C-API does not support it, mysqlnd does...
NEWS
MFH:Add support for mysql_stmt_store_result() from libmysql 6.0.8+ and 5.4.x
Add support for mysql_stmt_store_result() from libmysql 6.0.8+ and 5.4.x
MFH - 1) The wording of a message can differ by version and by libmysql vs. mysqlnd. 2) %i is better than %s
1) The wording of a message can differ by version and by libmysql vs. mysqlnd. 2) %i is better than %s
MFH - Behaviour is undefined with libmysql, accept whatever libmysql may return. With mysqlnd you get the defined value of -1 to indicate 'no value'.
Behaviour is undefined with libmysql, accept whatever libmysql may return. With mysqlnd you get the defined value of -1 to indicate 'no value'.
better fix
better fix
better fix
MFH - Another detail where mysqlnd is superior than libmysql. The mysql_info() from libmysql does not support SELECT: http://dev.mysql.com/doc/refman/6.0/en/mysql-info.html . mysqlnd does support it. Libmysql feature request filed http://bugs.mysql.com/bug.php?id=45189
Another detail where mysqlnd is superior than libmysql. The mysql_info() from libmysql does not support SELECT: http://dev.mysql.com/doc/refman/6.0/en/mysql-info.html . mysqlnd does support it. Libmysql feature request filed http://bugs.mysql.com/bug.php?id=45189
MFH: Weaker test - libmysql/server error messages can differ by version
Weaker test - libmysql/server error messages can differ by version
MFH - Weaker test: functions are only available if HAVE_EMBEDDED_MYSQLI is set. There is probably no proper way to check this condition in the user land.
Weaker test: functions are only available if HAVE_EMBEDDED_MYSQLI is set. There is probably no proper way to check this condition in the user land.
MFH - Skip when using libmysql. Likely a regression bug - http://bugs.mysql.com/bug.php?id=45184
Skip when using libmysql. Likely a regression bug - http://bugs.mysql.com/bug.php?id=45184
fixing to work with older levels of libcurl
fixing to work with older levels of libcurl
fixing to work with older levels of libcurl
MFH:The option has changed the name, hence we change the test
The option has changed the name, hence we change the test
- MFB: #42143, the constant NAN is reported as 0 on Windows
- MF52: #42143, the constant NAN is reported as 0 on Windows
Engine execution order tests
Engine execution order tests
Engine execution order tests
MFH: If we don't have a comment (for the 3rd argument in ARG_[ENABLE|WITH], then don't print a comment say "undefined"
If we don't have a comment (for the 3rd argument in ARG_[ENABLE|WITH], then don't print a comment say "undefined"
- #42143, the constant NAN is reported as 0 on Windows
Bug number was wrong.
ChangeLog update
Adjust news order
BFN
zstr should be used here, this nukes another compiler warning
% shouldn't be escaped here
MFB: This should be in HEAD regradless of uint8_t is available or not
MFH - Asynchronous queries are mysqlnd only. If you want them with libmysql, ping JimW who works on Connector/C.
Asynchronous queries are mysqlnd only. If you want them with libmysql, ping JimW who works on Connector/C.
MFH - Andrey needs to have a look at this one. The bug report itself is bogus. However, the bug report shows a result set and that is wrong.
Andrey needs to have a look at this one. The bug report itself is bogus. However, the bug report shows a result set and that is wrong.
MFH: Forgot to commit this one, of the ANSI_QUOTES fame
Forgot to commit this one, of the ANSI_QUOTES fame
MFH - I had accidently removed Andrey's path to work with ANSI QUOTES... fixing what I broke (part 1)
I had accidently removed Andrey's path to work with ANSI QUOTES... fixing what I broke (part 1)
MFH - what a wonderful word. After the change in HEAD its easy to do a merge. The merge removes all UEXPECTF sections from the old days. Yes, there have been UEXPECTFs in 5_3. I hope PHP 6 won't change again over time... :-)
1) Changing EXPECT[F] sections to work with PHP 5.3 and PHP 6.  2) Merging a couple of fixes I applied to PHP 5.3 only yesterday. The changes should make it a little easier to do MFH and follow the rules in the future as we will soon have identical tests for PHP 5_3 and HEAD.
- fix build with system gd
- #48738
- MFB: #48378, exif_read_data() segfaults on certain corrupted .jpeg files
fix test
- MFH: #48378, exif_read_data() segfaults on certain corrupted .jpeg files
#48378, exif_read_data() segfaults on certain corrupted .jpeg files
MFH: New tests
fix test
MFH: New test
New test
Moved to 5.2
MFH: merged http ignore_errors context option # [DOC] "since 5.2.10". See also bug #38802.
- MFB: fix build
New test
fix build
BFN, though this library gets a lot of updates
MFH sync SQLite 3.6.14.2
sync SQLite 3.6.14.2
ChangeLog update
- mf53: fix build, stderr cannot be used as var or struct member
Language Tests: returnByReference
- fix build, stderr cannot be used as var or struct member
Language Tests: returnByReference
Language Tests: returnByReference
MFH: Less warnings by usage of proper modifier
Less warnings by usage of proper modifier
MFH:because we use int64_t we need corresponding printf modifiers. the type can be different on 32 and 64 bit, thus we can't use ld and lld but C helps us with inttypes.h and PRId64 and PRIu64 modifiers (without the %)
because we use int64_t we need corresponding printf modifiers. the type can be different on 32 and 64 bit, thus we can't use ld and lld but C helps us with inttypes.h and PRId64 and PRIu64 modifiers (without the %)
Crappy anonymous MySQL user account... trying to make the test more portable.
The test is bogus as long as there is no (proper) way to detect from the PHP userland if persistent connections do a change user or not. If they do is controlled by define at the moment.
Testing a little further into the direction of a possible mysqlnd vs. libmysql compatibility break or a libmysql bug. It is not clearly stated in the MySQL C-API documentation what excactly happens on stmt_reset().
Trying to get test failures down by fixing tests.
- fix build
MFH: Revert in regard of my_ulonglong which should be used instead of long which can be anything.
Additional revert
use request encoding when parsing cookies fixes 14 segfaults in HEAD
Revert previous patch to something that make sense and works in error cases
- fix build on unix with bundled gd
Back to dev
- fix build on unix with bundled gd
5.2.10RC1
MFH: fix compile warnings
fix compile warnings
Remove duplicated code of zend_hash_func and alias it to zend_get_hash_value
fix build
- [DOC] always enable imagecolormatch
- [DOC] always enable imagecolormatch
- MFH: [DOC] always enable imagerotate (bundled or system gd)
- [DOC] always enable imagerotate (using bundled or system gd)
MFH: Lets pass the built php binary to run-tests.php's -p parameter
Lets pass the built php binary to run-tests.php's -p parameter
MFH: Added configure.bat to cvsignore
Added configure.bat to cvsignore
MFH: Silent dl() if it fails
Silent dl() if it fails
Nuke warnings
ChangeLog update
- MFH: [DOC]  - add image(filled)ellipse to the compat layer (work around a bug in debian too, function is declared but not present in the lib...)
 - silent warnings
- remove filters function in the main file (see gd_filter.c)
- gd_filter.c
- add gd_arc to w32 script
- add image(filled)ellipse to the compat layer (work around a bug in debian too, function is declared but not present in the lib...)
- Test for bug #48203
- Test for bug #48203
- Test for bug #48203
- missed this part
timezone update news
- Updated to version 2009.8 (2009h)
- Updated to version 2009.8 (2009h)
- Updated to version 2009.8 (2009h)
- MFB: [DOC] always enable imagefilter and imageconvolution, even when built against system's gd
WS
- ws
- Removed XFAIL section
ws
- enable filter constants
- expose gdImageGetTrueColorPixel in bundled lib - fix bundled lib build
- [DOC] always enable imagefilter and imageconvolution, even when built against system's gd
- MFH: Nuke unused variables
- Nuke duplicate tests
Nuke duplicate tests
- Revert this, was not supposed to be merged yet
fix test
fix test
fix test
- always add libgd/
- always add libgd/
- add a note about the actual problen so we don't forget it
- add a note about the actual problen so we don't forget it
- add a note about the actual problen so we don't forget it
- Added note about omitted break
- Added note about omitted break
- Add note about missing break
Add tests: DOMComment::__construct() with constructor called twice. DOMDocumentFragment::appendXML() with unbound fragment. DOMDocumentFragment::appendXML() with unbalanced chunks. DOMDocumentFragment::__construct() called twice. DOMDocumentType: basic access to all properties. DOMDocumentType::name with invalid state. DOMDocumentType::entities with invalid state. DOMDocumentType::notations with invalid state. DOMDocumentType::publicId with invalid state. DOMDocumentType::publicId with empty value. DOMDocumentType::systemId with invalid state. DOMDocumentType::systemId with empty value. DOMDocumentType::internalSubset with invalid state.
Add tests: DOMComment::__construct() with constructor called twice. DOMDocumentFragment::appendXML() with unbound fragment. DOMDocumentFragment::appendXML() with unbalanced chunks. DOMDocumentFragment::__construct() called twice. DOMDocumentType: basic access to all properties. DOMDocumentType::name with invalid state. DOMDocumentType::entities with invalid state. DOMDocumentType::notations with invalid state. DOMDocumentType::publicId with invalid state. DOMDocumentType::publicId with empty value. DOMDocumentType::systemId with invalid state. DOMDocumentType::systemId with empty value. DOMDocumentType::internalSubset with invalid state.
Add tests: DOMComment::__construct() with constructor called twice. DOMDocumentFragment::appendXML() with unbound fragment. DOMDocumentFragment::appendXML() with unbalanced chunks. DOMDocumentFragment::__construct() called twice. DOMDocumentType: basic access to all properties. DOMDocumentType::name with invalid state. DOMDocumentType::entities with invalid state. DOMDocumentType::notations with invalid state. DOMDocumentType::publicId with invalid state. DOMDocumentType::publicId with empty value. DOMDocumentType::systemId with invalid state. DOMDocumentType::systemId with empty value. DOMDocumentType::internalSubset with invalid state.
cs + ws
ws + cs
ChangeLog update
MFH: Typo
MFH: Typo
Typo
- #48202
- MFH: #48202, Out of memory error when passing non-existing filename, enable related tests (marked as XFAIL now)
- MFB: #48202, Out of memory error when passing non-existing filename, enable related tests (marked as XFAIL now)
- better fix for file:/// and file://localhost (thx Ilia), init file_dest when the path is an uri
- #48202, Out of memory error when passing non-existing filename, enable related tests (marked as XFAIL now)
- Dropped *_TEXT* macros in favor of unicode macros direct usage
Removing test
Removing test
Argh!  Please do not include entire GPL'ed packages in the PHP distribution.  Removing test and entire phpMyAdmin distribution in bug.tar.
- MFH: enable MPIR support and the good old 4.1.x gmp for VC6. solving the lgplv3 mess
- enable MPIR support and the good old 4.1.x gmp for VC6. solving the lgplv3 mess
Add the following new tests: DOMCharacterData::appendData() with no arguments. DOMCharacterData::deleteData() with count exceeding string size. DOMCharacterData::deleteData() with no arguments. DOMCharacterData::deleteData() with offset exceeding string size. DOMCharacterData::insertData() with no arguments. DOMCharacterData::replaceData() with no arguments. DOMComment::__construct() with more arguments than acceptable. DOMDocumentFragment::__construct(). DOMDocumentFragment::__construct() with too many errors. DOMDocumentFragment::appendXML() with no arguments. DOMDocumentFragment::appendXML() with children with properties.
Add the following new tests: DOMCharacterData::appendData() with no arguments. DOMCharacterData::deleteData() with count exceeding string size. DOMCharacterData::deleteData() with no arguments. DOMCharacterData::deleteData() with offset exceeding string size. DOMCharacterData::insertData() with no arguments. DOMCharacterData::replaceData() with no arguments. DOMComment::__construct() with more arguments than acceptable. DOMDocumentFragment::__construct(). DOMDocumentFragment::__construct() with too many errors. DOMDocumentFragment::appendXML() with no arguments. DOMDocumentFragment::appendXML() with children with properties.
Add the following new tests: DOMCharacterData::appendData() with no arguments. DOMCharacterData::deleteData() with count exceeding string size. DOMCharacterData::deleteData() with no arguments. DOMCharacterData::deleteData() with offset exceeding string size. DOMCharacterData::insertData() with no arguments. DOMCharacterData::replaceData() with no arguments. DOMComment::__construct() with more arguments than acceptable. DOMDocumentFragment::__construct(). DOMDocumentFragment::__construct() with too many errors. DOMDocumentFragment::appendXML() with no arguments. DOMDocumentFragment::appendXML() with children with properties.
ChangeLog update
MFH(r-1.103) Expand zend_symtable_update_current_key to allow specifying HashPosition
Expand zend_(u_)symtable_update_current_key to allow specifying HashPosition
MFH: fix potential segfault when converting phars with metadata to other formats, add test
fix potential segfault when converting phars with metadata to other formats, add test
add missing test
Improve fix for bug #48313
MFB: Improve fix for bug #48313
ChangeLog update
ws + cs
ws
ws
- fix build, fix TS build
fix build
ws + cs
Implement JIT request decoding support for $_GET and $_POST.
- New tests (testfest NorthWestUG)
- New tests (testfest NorthWestUG)
- MFH: Added missing param checks
- Added missing param checks
- New tests (testfest BerlinUG)
- New xsl files
- New xsl files
- New tests (testfest BerlinUG)
- New tests (testfest BerlinUG)
MFB: fix compilation of pdo_firebird and intl extension with ld --as-needed
fix compilation of pdo_firebird and intl extension with ld --as-needed
New test: DOMAttr read $name property. New test: DOMAttr read $ownerElement with null parent. New test: DOMAttr write non-string $value property New test: DOMCDATASection __construct() with no arguments. New test: DOMCharacterData - Invalid State Error when getting data out of content.
New test: DOMAttr read $name property. New test: DOMAttr read $ownerElement with null parent. New test: DOMAttr write non-string $value property New test: DOMCDATASection __construct() with no arguments. New test: DOMCharacterData - Invalid State Error when getting data out of content.
New test: DOMAttr read $name property. New test: DOMAttr read $ownerElement with null parent. New test: DOMAttr write non-string $value property New test: DOMCDATASection __construct() with no arguments. New test: DOMCharacterData - Invalid State Error when getting data out of content.
New test: DOMAttr __construct() with no arguments.
New test: DOMAttr __construct() with no arguments.
ChangeLog update
New test: DOMAttr __construct() with no arguments.
MFH: Previous commit was an old version of the patch, PHP_ZTS is not a boolean but the behaviour is still correct
Previous commit was an old version of the patch, PHP_ZTS is not a boolean but the behaviour is still correct
MFH: Don't build SQLite threadsafe on NTS builds
Don't build SQLite threadsafe on NTS builds
MFH: Added missing SKIPIF
Added missing SKIPIF
- New test
- New test
- New test
BFN
MFH: Use zend_get_property_info() in get_class_vars() (fixes #46812)
MFH: Use zend_get_property_info() in get_class_vars() (fixes #46812)
Use zend_get_property_info() in get_class_vars() (fixes #46812)
getClosureThis() and $this handling in closures was removed
ChangeLog update
MFH: set second argument of gettimeofday() to NULL (fixes #48346, patch by adriano at guiadohardware dot net)
MFH: set second argument of gettimeofday() to NULL (fixes #48346, patch by adriano at guiadohardware dot net)
set second argument of gettimeofday() to NULL (fixes #48346, patch by adriano at guiadohardware dot net)
MFH: Better fix for #45622 (patch by robinf at php do net)
MFH: Better fix for #45622 (patch by robinf at php do net)
Better fix for #45622 (patch by robinf at php do net)
MFH: ws
ws
ChangeLog update
MFB: Re-introduce the Matteo's patch and combine default & text handling since they appear to be the same irregardless on notes inside sqlite3.h
MFB: Re-introduce the Matteo's patch and combine default & text handling since they appear to be the same irregardless on notes inside sqlite3.h
Re-introduce the Matteo's patch and combine default & text handling since they appear to be the same irregardless on notes inside sqlite3.h
- Sync with HEAD (thanks Hannes :)
sync with HEAD
sync with HEAD
fix segfault
MFH: set default value of "precision" ini setting, many tests depend on this
MFH: set default value of "precision" ini setting, many tests depend on this
set default value of "precision" ini setting, many tests depend on this
Nuke warnings (only in HEAD)
Nuke newly introduced warning
ChangeLog update
- Getting rid of using the environment to guess timezone information from. #- [DOC]
ws
MFH: Partial fix for bug#48333
Partial fix for bug#48333 (DateInterval.format() expects a single, undocumented parameter)
MFB:  The \0 removal is only needed prior to 3.4.0
MFB: The \0 removal is only needed prior to 3.4.0
The \0 removal is only needed prior to 3.4.0
MFB: libsqlite3 3.6.14.1 upgrade
Warning fix
Upgraded to 3.6.14.1
MFB: Revert faulty warning fix
MFB: Revert faulty warning fix
Revert faulty warning fix
MFB: Cast to unsigned char to prevent compiler warning
Cast to unsigned char to prevent compiler warning
- Revert bad compile warning fix which causes compile failures with older glibc
- Revert bad compile warning fix which causes compile failures with older glibc
- Revert bad compile warning fix which causes compile failures with older glibc
MFH: Sync with PHP_5_3 the WS/CS and some missing constant fixes
Add GCC warnings in debug cflags for things likely to break VC builds (-Wpointer-arith -Wdeclaration-after-statement)
MFH: Unify macros
MFH: Unify macros
- Unify the macros
MFH: Cast to SQLUSMALLINT
Cast to SQLUSMALLINT
fix news
fix news
Keep the style
DBA entry
fix build
ChangeLog update
- MFH: Get rid of the four different versions of zend_extension* and only use   zend_extension. Because of the API identifier change in PHP 5.3 you also get   a proper warning message now. #- [DOC]
- Get rid of the four different versions of zend_extension* and only use   zend_extension. Because of the API identifier change in PHP 5.3 you also get   a proper warning message now.
- MFB: close manually the impersonation token
- close manually the impersonation token
Add support for tokyo cabinet, patch from Michael Maclean
Removing redundant UEXPECT
MFH: Sync WS / CS changes where applicable
MFH: ws + sync
- WS + sync with PHP_5_3 (thanks Ilia & Co.)
MFH: Print out WARNed
MFH: Print out the WARNed section
Print out the WARNed section (contains f.e. passing XFAIL tests)
MFH
- fix CS, merged one parameter parsing patch missing from HEAD
- sync with 5.3
- MFH: use ZEND_ARG_ARRAY_INFO for arginfo_curl_setopt_array
- sync with HEAD
- return NULL on invalid args
- WS
- more WS
- MFB: - disable file:// when  open_basedir are enabled
- MFH: add CURLPROXY_SOCKS4
- WS
- should not have been commited
- MFB: - disable file:// when safe_mode or open_basedir are enabled
- WS
ChangeLog update
- MFB: #44859, fixed support for windows ACL, drop win9x code
- #44859, fixed support for windows ACL, drop win9x code
- New tests (testfest BerlinUG)
- New tests (testfest BerlinUG)
- New tests (testfest BerlinUG)
un-duplicated code (merged unicode/string variants of stream_copy_to_stream and let the compiler optimize specializations)
- New tests (testfest BelgiumUG)
- New tests (testfest BelgiumUG)
- Changed %s to %v on createAggregate() error message
- New tests (testfet LondonUG)
- New tests (testfet LondonUG)
- New tests (testfest LondonUG)
ChangeLog update
- New tests (testfest Quebec)
- New tests (testfest Quebec)
- New tests (testfest DutchUG)
- New tests (testfest DutchUG)
- New tests (testfest DutchUG)
MFH: Test for #38802
Test for #38802
MFH: Minimal HTTP server to test HTTP stream wrapper
Minimal HTTP server to test HTTP stream wrapper
- New tests (testfest Quebec)
- New tests (testfest Quebec)
- New tests (testfest Quebec)
- Added responder dir (synced)
- Added changes from testfest ParisUG && Changed line endings
- Added changes from testfest ParisUG && Changed line endings
- New tests (testfest ParisUG)
- New tests (testfest ParisUG)
- New tests (testfest ParisUG)
- New tests (testfest DutchUG)
- New tests (testfest DutchUG)
- New tests (testfest DutchUG)
- New tests (testfest CataloniaUG)
- New tests (testfest CataloniaUG)
- New tests (testfest CataloniaUG)
ChangeLog update
- WS
- Reverted is such a strong word.. :)
- Not a news actually.
- Missing zend_exceptions.h (Kalle)
- MFH: Roll it back.
* MFH: Roll it back.
* Roll it back then.  I wonder if defaulting it to SORT_REGULAR would work well   and I think allowing user-supplied comparator should make more sense when it   comes to objects.
MFH: New array_multisort() test (Simon Westcott)
MFH: New array_multisort() test and code comment fix (Simon Westcott)
New array_multisort() test and code comment fix (Simon Westcott)
Added some more comments about deprecated ini settings
ChangeLog update
BFN
MFH Allow a custom recursion depth to be specified for json_decode()
Throw an error rather than silently changing to the default.
MFH
MFH
- MFH:Add a new test for the additional delimiter of the encoding conversion   filter
- MFH: Update the test as newer libc gets the bogus input through rather than     rejecting it.
- Add a new test for the additional delimiter of the encoding conversion filter
moved from 5.3
moved to 5.2
- Update the test as newer libc gets the bogus input through rather than   rejecting it.
Add missing file
- MFH: Improved fix for #42414
- MFH: Improved fix for #42414
- Improved fix for #42414
moved from 5.3
moved to 5.2
MFB: fix skipifs
MFH: prevent freeing NULL
MFH: fix potential free of NULL
fix potential free of NULL
ChangeLog update
BFN
Now in 5.2 (or should the entry be here as well...?)
- New tests
- New tests
- New tests
Allow the json_decode() depth to be any size, but keep the static one around for now. It might make sense to allow an unbound depth.
MFB: fix Bug #48257: PharData throws exception with non-phar tar
fix Bug #48257: PharData throws exception with non-phar tar
MFH: Nuke compiler warning
Nuke compiler warning
ChangeLog update
MFH - Moved test for bug #44861 to PDO commons and added support for pdo_oci # This allows scrollable cursors to be tested with all the drivers # that currently support them (pgsql and oci), ensuring a consistent # behaviour. The test is skipped when using other drivers.
- Moved test for bug #44861 to PDO commons and added support for pdo_oci # This allows scrollable cursors to be tested with all the drivers # that currently support them (pgsql and oci), ensuring a consistent # behaviour. The test is skipped when using other drivers.
Added proper credits for the last commit
MFB - Updated PDO_OCI to the latest version (from PHP_5_3 branch) # This commit reverts some changes to the tests. Given the very high # failure ratio of the current tests on HEAD I'm not going to fix them # now. Keeping ext/pdo_oci in sync with 5.3 will be much more helpful when # merging. The effort to fix the tests can start when 5.3 is out.
ChangeLog update
- Added missing param checks
- Added missing param checks
- Added missing param checks
moved to 5.2 as well
- MFH: define HAVE_PQPROTOCOLVERSION and HAVE_PG_LO_CREATE (Tim Starling)
- MFH: define HAVE_PQPROTOCOLVERSION and HAVE_PG_LO_CREATE (Tim Starling)
- define HAVE_PQPROTOCOLVERSION and HAVE_PG_LO_CREATE (Tim Starling)
MFH:- Removed unnecessary TSRMLS_FETCH() calls
- Removed unnecessary TSRMLS_FETCH() calls
MFH: cs + ws
- Syncing with PHP_5_3 (merging some stuff that was not merged before for some reason)
-fix path
- Starting tests for this extension
- Starting tests for this extension
- Starting tests for this extension
ChangeLog update
- And more CS fixes
- Nuked more whitespace
MFH: sync
sync with HEAD
ws
MFB: missing part of the GC stuff
- Replaced by zend_multibyte-01.phpt
BFN
MF5 fixes
revent wrong part
MFB: Add test for #48224
MFB: Add test for #48224
Add test for #48224
- MFB: Removed the RETURN_TRUE to keep consistency with documentation.   This function is supposed to be "void registerPHPFunctions"
- Removed the RETURN_TRUE to keep consistency with documentation. This function   is supposed to be "void registerPHPFunctions"
little errors cleanup
- Simplify test (cweiske)
- Simplify test (cweiske)
- Simplify test (cweiske)
WS
fix proto # Why doesn't this exist in HEAD?
ChangeLog update
really delete it
MFH Remove bad CREDITS file
Remove bad CREDITS file # I'd welcome sane proposals for ext/standard credits, there are ca. 20 people # mentioned as "Author" and >100 people who committed into *.c here
Add test for bug #47534
BFN
BFN
- Moved to PHP_5_2
MFH: Add support for Sun CC
MFH Update bundled libmagic to 5.03
Update bundled libmagic to 5.03
MFH Broken test when you have a snapshot as it relies on CVS
Broken test when you have a snapshot as it relies on CVS
ChangeLog update
MFH: Better fix for bug #42767 (at source instead of workaround); also fixes unclosed comments in tokenizer
MFb5.3: fix comments
PPC machines mark char as unsigned, rather than signed. This caused a segfault when using the T type for zend_parse_parameters because the default value ended up being 255 and never -1
Missing check
test for #44034
MFB5.3 fix for bug #44034 (FILE_IGNORE_NEW_LINES in file() does not work as expected when lines end in \r\n) (fixes #48175)
MFB5.3 fix for bug #44034 (FILE_IGNORE_NEW_LINES in file() does not work as expected when lines end in \r\n) (fixes #48175)
MFH: fix ZTS build
fix ZTS build
MFH: Add missing #ifdef for curl version that does not have FTP_FILEMETHOD or IPRESOLVE options. related to fix for bug #39637
Add missing #ifdef for curl version that does not have FTP_FILEMETHOD or IPRESOLVE options. related to fix for bug #39637
ChangeLog update
BFN
MFB Print warning when using loadExtension on non cli, cgi and embeded
Some unicode updates for sqlite3
Print warning when using loadExtension on non cli, cgi and embeded
MFH
- Missed one line
- Bug 45392 was never fixed in PHP_5_2
MFH
fixing missing semi-colon
MFB: fixed compiler warning
- Missing title
- Missing title
- MFH: Parameter parsing changes for get_defined_constants() (Kalle)
BFN
MFH Update bundled libsqlite to 3.6.14
Update bundled libsqlite to 3.6.14
Replacing generate script with a new version
use have been a keyword in a forever, thanks Greg
Windows ME is not supported either as of 5.3
* use is a reserved keyword * notes to Windows section
ChangeLog update
MFH
MFH
- Add missing file
Back to -dev
5.3.0RC2-dev
ChangeLog update
- fix conf
- MFH: fix build
MFH
- Maybe this is enough on windows..
Regenerate
Regenerate
MFH: ws fix
ws fix + missing folding tags
MFB: remove precautionary #ifdef - the problem was fixed by moving the efree inside the zend_try block
remove precautionary #ifdef - the problem was fixed by moving the efree inside the zend_try block
MFH: Implemented manual scanning for strings/comments, plus misc. fixes
Implemented manual scanning for strings/comments, plus misc. fixes For details, see http://news.php.net/php.internals/43808
ChangeLog update
MFH: fix build
- sync with HEAD
Changed wording
duh..
MFH: sync
- Sync with HEAD
Added E_DEPRECATED startup notice (5.3 only)
BFN
- revert last commit and fix inline
- revert last commit and fix inline
MFH Update libmagic data file to 5.02
MFH Update libmagic to 5.02
Update libmagic data file to 5.02
Update libmagic to 5.02
- a  macro will just do it too
- a  macro will just do it too
- cleaner fix
- cleaner fix
- add llabs
- add llabs
- fix build
Add missing prototypes for mhash, no code changes.
- fix build
- fix build
- win extension_dir
- win extension_dir
MFH: use correct function
MFH: use correct function
use correct function
MFH: don't segfault on bindto == NULL
don't segfault on bindto == NULL
- #39637
- [DOC] a note about the symbol -> version page/doc
- [DOC] a note about the symbol -> version page/doc
- [DOC] MFH: #39637, add CURLOPT_FTP_FILEMETHOD which accepts CURLFTPMETHOD_MULTICWD, CURLFTPMETHOD_NOCWD and CURLFTPMETHOD_SINGLECWD
- [DOC] #39637, add CURLOPT_FTP_FILEMETHOD which accepts CURLFTPMETHOD_MULTICWD, CURLFTPMETHOD_NOCWD and CURLFTPMETHOD_SINGLECWD
- #47739
- MFH: [DOC] #47739. add option CURLOPT_IPRESOLVE which accepts CURL_IPRESOLVE_WHATEVER, CURL_IPRESOLVE_V4 or CURL_IPRESOLVE_V6
- [DOC] #47739. add option CURLOPT_IPRESOLVE which accepts CURL_IPRESOLVE_WHATEVER, CURL_IPRESOLVE_V4 or CURL_IPRESOLVE_V6
MFB: disable mysterious segfault on PHP 5.3 (5.2 not affected)
disable cause of mysterious segfault in PHP 5.3 only (5.2 is fine)
ChangeLog update
- #47966, cannot access curl info array without binary   To check: why add_assoc_ascii_string_ex fails while add_assoc_ascii_string works
- MFH: Added timezone_version_get() to retrieve the version of the used   timezone database.
- Added timezone_version_get() to retrieve the version of the used timezone   database.
fix news
- #41712
- ws/cs
- ws/cs
- c/p error
- c/p error
- [DOC] MFH: #41712, implement  progress callback   - add constants  CURLOPT_PROGRESSFUNCTION
- [DOC] #41712, implement  progress callback   - add constants CURLOPT_NOPROGRESS and CURLOPT_PROGRESSFUNCTION
- MFH: Added test for (bogus) bug #48097.
- MFH: Added test for (bogus) bug #48097.
- Added test for (bogus) bug #48097.
ChangeLog update
MFH:- Revert bad patch (which caused bug #48133)
- Revert bad patch (which caused bug #48133)
- Extra newlines never hurt anyone..
- SPL can be disabled in PHP_5_2
- imap entries (2 more to come)
- SPL can be disabled in PHP_5_2
- [DOC] MFH: add imap_mutf7_to_utf8 and imap_utf8_to_mutf7
- [DOC] add imap_mutf7_to_utf8 and imap_utf8_to_mutf7
- NL cleanup (mixed or windows)
- NL cleanup (mixed or windows)
MFH: Update copyright year + line feeds
MFH: Update copyright year + line feeds
Update copyright year + line feeds
ChangeLog update
fix test
fix test
- ws / cs (separated from another commit coming next)
fixed to expect fail
initialize ext_len
initialize ext_len
ChangeLog update
revert to allow Andrei to make his changes
Added missing UChar* and zstr malloc variants
cleanup
Removed code for register_globals in file uploads
Removed code handling non-unicode input (was used when !UG(unicode))
fix test (for real)
- MFB: #47940, memory leaks in imap_body
- MFB: #47940, memory leaks in imap_body
- #47940, memory leaks in imap_body
- 45997
- MFB: #45997, safe_mode bypass with exec/sytem/passthru (windows only)
- #45997, safe_mode bypass with exec/sytem/passthru (windows only)
MFH: fix tests
MFH: fix test
MFH:fix test
MFH: - Removed HAVE_PQEXECPARAMS which was left out during the previous commit
- Removed HAVE_PQEXECPARAMS which was left out during the previous commit
- Added missing tests from this branch..*sigh*
- Reflection can be disabled in PHP_5_2
MFH
- Add missing test
- It is possible to disable reflection extension in PHP_5_2
- It is possible to disable reflection extension in PHP_5_2
- fix build (Marcus, fix re2c please)
- fix build (Marcus, fix re2c please)
MFPECL fix PECL Bug #14646: phar error message unclear with php stream wrappers (note: is there a standard way to list PECL bugs in NEWS?)
MFPECL: fixed PECL Bug #14646: phar error message unclear with php stream wrappers
ChangeLog update
Update tests to accomodate new parameter parsing API and make long2ip() use it as well
timezone db upgrade news
- Updated to version 2009.7 (2009g)
- Updated to version 2009.7 (2009g)
- Updated to version 2009.7 (2009g)
Refixing to follow documented behaviour
Refixing to follow documented behaviour
Refixing to follow documented behaviour
MFPECL: fix PECL bug #16338, php_stream_copy_to_stream{,_ex}()
MFPECL: fix PECL bug #16338, php_stream_copy_to_stream{,_ex}()
ChangeLog update
MF5 fix for #47930
fix for #47930
new test - test passes here, but the pear2coverage.phar.php segfaults in apache 2.2 sapi
- mail_criteria entry and revert previous wrong one
- MFH: SEARCHPGM struct has to be freed
fix test
fix test
fix test
fix test
nuke unicode crap, fix test
- space to tabs - CS
- space to tabs - CS
- space to tabs - CS
- [DOC] MFB: add imap_gc (purge cache(s) and constants IMAP_GC_ELT, IMAP_GC_ENV and IMAP_GC_TEXTS to control imap_gc behavior
- [DOC] add imap_gc (purge cache(s) and constants IMAP_GC_ELT, IMAP_GC_ENV and IMAP_GC_TEXTS to control imap_gc behavior
ChangeLog update
Removed unused variable
- BFN
update
BFN
MFH Add the ability to enable exceptions rather than warnings for sqlite3, needed for pyrus.
Add the ability to enable exceptions rather than warnings for sqlite3, needed for pyrus.
- utf8_mime2text is present in 5.2's cclient
ChangeLog update
- fixing spl_classes test here as well
- MFH: add latest cclient versions
- remove duplicate definition
- fix tests - output of spl_classes differs from 5_2 to 5_3, changed to is_array
- fixes to tests - spl_classes only checks  for is_array(), the output in 5_3_0 and 5_2_0 is very different, test will run this way in 5.2 and 5.3 w.o. problems - call user method recognizes the different errormessage in 5_2_0 now - the php_sap_name_variation001 check now goes for cgi instead of the cgi-fcgi output string
- rmeove duplicate definition
- correct clause
- correct clause
ChangeLog update
MF53: Sync the session.c file structure and some bug fixes forgotten to merge.
- Added missing SKIPIF
MFB: Added missing SKIPIF
- Missing skip section
MFH
gen
Handle HEAD output handler flags (fixes ext/standard/tests/general_functions/bug44394.phpt)
Initial import
Initial import
Initial commit
Initial commit
Initial commit
Initial commit
Initial commit
Initial commit
- Initial commit
- Initial commit
Initial commit
Initial commit
fix .cvsignore (Tony, it is not illegal to MFH to PHP_5_2..)
MFB
MFH
- fix test cleanup (== consistent now :)
- In PHP_5_2 it is still possible to disable reflection.
MFH: add .cvsignore file
- Added missing entry
MFB52: sync
MFB52: sync
MFH: Sync
MFB: fix strict aliasing issues
- ws
- ws
- ws
fix strict aliasing problems. this should fix the crash that Sebastian was having with gcc 4.4. Please confirm this is the case
- #elif
- #elif
- ws
- ws
- add 2007d and e
- sync 5.3 - add 2007d and 2007e
- MFH:  SEARCHPGM struct has to be freed
- SEARCHPGM struct has to be freed
- silent warning, NULL is not 0
- silent warning, NULL is not 0
- Initial commit
- Initial Commit
- Initial commit
- bad idea to free body
- bad idea to free body
Initial commit
- initial ci - basic test for ini_alter
This shouldn't have been in for now
MFH: Use correct data types here, and gdImageSaveAlpha for the alpha flag
Use correct data types here, and gdImageSaveAlpha for the alpha flag
ChangeLog update
MFH
MFH
zend_vm_gen
- make MP survive --disable-all (=disable to disable it)
- make MP survive --disable-all (=disable to disable it)
- #47940, pass body_len
- fix logic
- fix logic
- simplify and use PHP_CURL
- simplify and use PHP_CURL
ChangeLog update
- #47940 entry
- MFH: #47940,  leaks in imap_body()
- MFH: #47940,  leaks in imap_body()
- #47940,  leaks in imap_body()
- define HAVE_NEW_MIME2TEXT and detect utf8aux
- define HAVE_NEW_MIME2TEXT and HAVE_RFC822_OUTPUT_ADDRESS_LIST
- MFB: allow to set or disable the multithreaded build (n, auto or disable)
- allow to set or disable the multithreaded build (n, auto or disable)
- MFB
- wrong var name
MFH: check non-null before any use.
MFHcheck non-null before any use.
check non-null before any use.
- c/p error
- c/p error
ChangeLog update
MFH: fix DVAL_TO_LVAL conversion for static array indexes, related to bug #46701
fix DVAL_TO_LVAL conversion for static array indexes, related to bug #46701
- MFB: make it loud when libxml is missing or the dep is not present
- make it loud when libxml is missing or the dep is not present
Removed unused vars
PHP 6 version of a new date test missed from earlier drop
ChangeLog update
MFH: adjust reflection info
Adjust reflection info
MFB: Adjusted prototype
Adjusted prototype
Added missing note about gethostname() (Re: #47839)
ChangeLog update
MFB: missed these
MFB: Thanks to the "maintainers" who are too lazy to commit FIRST to HEAD!
- Sync with HEAD (just reorder to match HEAD order)
ws
MFH:- Added path sanity check (autotools + libtool do not cope with whitespace..)
MFH:- Added path sanity check (autotools + libtool do not cope with whitespace..)
- Added path sanity check (autotools + libtool do not cope with whitespace..)
NEWS entry related to #47991
MFH: Closes #47991 SSL streams fail if error stack contains items
MFH: Closes #47991 SSL streams fail if error stack contains items
Closes #47991 SSL streams fail if error stack contains items
- silent compiler warning
- nuke unused variable
- silent compiler warning
- silent compiler warning
- silent compiler warning
- use the new OB API (and fix build)
- nuke unused vars - silent warnings
ChangeLog update
MFH: Better fix for #47997
MFH: Better fix for #47997
Better fix for #47997
BFN moved to 5.2
new test
new test
ChangeLog update
ChangeLog update
- fix zts build
BFN
- improve file:// deactivation in curl_init and do not allow to enable it again manually
MFH: sync WS
MFH: make it possible to run on 5.2.7
MFH: Make it possible to run on 5.2
Make it possible to run on PHP5.2
Sync WS with 5.3
fixing incorrect --CLEAN-- sections
fixing incorrect --CLEAN-- sections
fixing incorrect --CLEAN-- sections
- disable file:// when safe_mode or open_basedir are enabled
Fugbix typo.
- #47978,  typo in ext/sockets/sockets.c
- #47978,  typo in ext/sockets/sockets.c
- #47978,  typo in ext/sockets/sockets.c
- MFH: Just a paranoiac test.  This works perfectly.
- MFH: just a paranoiac test.  This works perfectly.
- Just a paranoiac test.  This works perfectly.
- MFB (fixes build)
ChangeLog update
sync test with other branches
fix parse error
fix parse error
fix test
fix test
fix test
ChangeLog update
MFH: fix bug #47662: support more than 127 named subpatterns
upgrade to pcre 7.9
Sqlite news
MFH: revert wrong fix for bug #47930
MFH: revert wrong fix for bug #47930
revert wrong fix for bug #47930
ChangeLog update
add fix #47930
fix #47930
fix #47930
fix #47930
MFB: Upgrade to SQLite 3.6.13
Upgrade to SQLite 3.6.13
- Updated to version 2009.6 (2009f)
- Updated to version 2009.6 (2009f)
- Updated to version 2009.6 (2009f)
ChangeLog update
ChangeLog update
upgrade PCRE to version 7.9
upgrade PCRE to version 7.9
Added news entry about the 'n' flag
MFH: Added support for passing O_NONBLOCK to the underlying open() system call
Added support for passing O_NONBLOCK to the underlying open() system call
MFH: Removed an unnecessary item, that calls for doc builds
Removed an unnecessary item, that calls for doc builds
ChangeLog update
isync with 5 branch
merge grapheme substr fix
BFN 47552
MFB: fix #47662
fix bug #47662: support more than 127 named subpatterns
MFB: Implemented new shorter URLs for ini settings (ex: php.net/short-open-tag)
ChangeLog update
Implemented new shorter URLs for ini settings (ex: php.net/short-open-tag)
Don't strip leading zeros on floating point numbers and fix the test case
Don't strip leading zeros on floating point numbers And fix the test case
Don't strip a leading 0 in a floating point number
MFB: Added test for php_sapi_name()
MFB: Added test for php_sapi_name()
Added test for php_sapi_name()
Engelsk grammatikk
MFH: InglÃ©s gramÃ¡tica
Englanti kielioppi (Jani)
ChangeLog update
iadd utility macro
add utility macro
MFH: Rename reflection*.phpt to Reflection*.phpt for consistency.
MFH: Rename reflection*.phpt to Reflection*.phpt for consistency.
Rename reflection*.phpt to Reflection*.phpt for consistency.
Maintainer file update
MFH: Changed spelling from "build" to "built"
Changed spelling from "build" to "built"
Improved specialization (IS_CONST can't be IS_OBJECT)
Improved specialization (IS_CONST can't be IS_OBJECT)
Calculate hash value once
Calculate hash value once
Removed deprecated code and fixed function name in error message
Removed deprecated code and fixed function name in error message
Added ability to check build_id by extension
Added ability to check build_id by extension
MFH: Add guidelines for re-releasing
Add guidelines for re-releasing
ChangeLog update
- Added test
- Added test
Let's actually say what was updates ;-) # Thanks Jani & Johannes
BFN
MFH: fix bug #47849 (Non-deep import loses the namespace) add test
MFH: fix bug #47849 (Non-deep import loses the namespace) add test
fix bug #47849 (Non-deep import loses the namespace) add test
News
- missing implementation gdJpegGetVersionString (thanks Rob)
- silent warning or possible linker error on win
- ws
MFB53: Revert previous commit as it was causing alot more trouble than expected
Revert previous commit as it was causing alot more trouble than expected
- fix build
- not necessary
- only gd2+ is supported, no need of this check. (sidenote: PHP_CHECK_LIBRARY seems to use some weird flags (like -lidn in this case))
- MFB:  - #47812, undefined symbol: gdJpegGetVersionInt  - #46015, Build fails with system gd  - enable gd_compat when built using system's gd
 - MFB: initial import, support for external gd library while keeping bug fixes or features (more will be activated later)
- #47812, undefined symbol: gdJpegGetVersionInt - #46015, Build fails with system gd - enable gd_compat when built using system's gd
- initial import, support for external gd library while keeping bug fixes or features (more will be activated later)
ChangeLog update
MFB: ext/pgsql/tests/80_bug14383.phpt
- Updated to version 2009.5 (2009e)
- Updated to version 2009.5 (2009e)
- Updated to version 2009.5 (2009e)
This is apparently fixed
MFH: Add test for bug#42596
MFH: Add test for bug#42596
Add a test for bug#42596 so people wont try bogusly fixing it again
MFH: fix folding
- nuke unused var
Bug #47880 (crashes in call_user_func_array())
Bug #47880 (crashes in call_user_func_array())
- fix TS build
- naming & cleanup
MFH: Use an obscure name
MFH: Use obscure name
Use an obscure name # Yes, I have "foo.php" :]
MFB53: Kill warning about php_localtime_r not being defined
MFH: Mention which directives are hardcoded using the CLI SAPI
Mention which options are hardcoded in the cli sapi
bug 47886: fix test which failed during DST. Microsoft api working as designed, but unexpected.
ChangeLog update
Define _php_rfc822_len() only when needed
ChangeLog update
- Synced old changes
improve error message when missing c-client (just bit me on Ubuntu 8.10)
- nuke unused var
- nuke unused var
ChangeLog update
- Added new Reflection methods
- Backported fix for #35386 (originally commited in 5.3+), reported recently as 5.2 bug #47845
Improved GC speed and reduced stack usage
Improved GC speed and reduced stack usage
- MFH: Changed namespace separator
- Changed namespace separator
ChangeLog update
Block unused function
MFB Rebuild credits, was missed in previous RC
Rebuild credits, was missed in previous RC
MFH: We dont need to escape % here, it just generates a compiler warning
We dont need to escape % here, it just generates a compiler warning
ChangeLog update
- MFH: 8.3.x supports pqprepare
- 8.3.x supports pqprepare
- MFB: fix build when pqprepare does not exist
- fix build when pqprepare does not exist
MFH: replaced static gdPngJmpbufStruct, which is afraid of being shared with several threads, by a couple of auto variables.
replaced static gdPngJmpbufStruct, which is afraid of being shared with several threads, by a couple of auto variables.
MFH: reverted previous patch, using explicit cast instead
reverted previous patch, using explicit cast instead
MFH: const pointer was used in non-const context
const pointer was used in non-const context
ChangeLog update
- MFB: silent warning
- silent warning
- remove last test for MAX_INT, did not work on x64 and this case is covered by bug47745.phpt
- remove last test for MAX_INT, did not work on x64 and this case is   covered by bug47745.phpt
WS
BFN
MFH Update libsqlite to 3.6.12
Update libsqlite to 3.6.12
- MFH: Removed unused LONG_SIGN_MASK definition, and a stray \   - Changed sign flag to int (it's no longer being used in a calculation)
- MFH: Removed unused LONG_SIGN_MASK definition, and a stray \   - Changed sign flag to int (it's no longer being used in a calculation)
- Removed unused LONG_SIGN_MASK definition, and a stray \ - Changed sign flag to int (it's no longer being used in a calculation)
ChangeLog update
I wish people would test their changes before comitting, especially since the test is *IDENTICAL* as before just with different formatting.
Changed order by Wez's request
- Sync with 5.3
- MFB: better test case, it crashes on more architecture
- MFB: better test case, it crashes on more architecture
- #47828
- better test case, it crashes on more architecture
- MFH: Removed UG(unicode) checks
MFH: * Bypass the date/timezone warning by forcing UTC when running mkdist.php * Don't run the copy list for PECL if theres no PECL extensions to copy (fixes a few copy() warnings)
* Bypass the date/timezone warning by forcing UTC when running mkdist.php * Don't run the copy list for PECL if theres no PECL extensions to copy (fixes a few copy() warnings)
Nuke unused variable (only in this branch)
Reorder NEWS entries
MFH Add test for bug #47828
MFH Add test for bug #47828
Add test for bug #47828
ChangeLog update
BFN
added OpenLDAP TLS options to ldap_get_option/ldap_set_option
- check in the libpng dir as well
- check in the libpng dir as well
ChangeLog update
MFH: - Reverting: pcntl_signal() returning NULL when passing wrong parameters
- Reverting: pcntl_signal() returning NULL when passing wrong parameters # Wow, my first commit and I broke something, sorry about that :(
MFB: - Updated pdo_pgsql from PHP_5_3
MFH: - Added missing #undefs, fixing compile warnings
ChangeLog update
- Removed unicode.semantics check
fix segfault
- Removed leftover UG(unicode) checks
- Removed:      - UG(unicode) checks - Changed:      - ZEND_STR_TYPE -> IS_UNICODE      - convert_to_text -> convert_to_unicode
- Add test
MFH: fix skip-if
fix skip-if
Removed deprecation warning for ticks
ChangeLog update
- Removed unused declaration
- Removed unused variables
- Removed:        - UG(unicode) checks        - pcre_cache_entry.unicode_mode - Changed:        - ZEND_STR_TYPE -> IS_UNICODE        - convert_to_text -> convert_to_unicode        - convert_to_text_ex -> convert_to_unicode_ex
-  update extension=
- update extension=
Corrected missing comment.
Corrected missing comment.
ChangeLog update
- Missing changes related to #47757 for this branch
Add missing proto
Add missing proto
MFB: #43073, TrueType bounding box is wrong for angle<>0
MFH: fix test to follow #47757
fix test to follow #47757
MFH: mysql_db_query() is always deprecated
mysql_db_query() is always deprecated
Obsolete package2.xml: resume using package.xml
sync with 5.3
MFH: use random text
use random text
ChangeLog update
Updated PDO maintainers
- MFB: new php.ini names
- new php.ini names
- GEPJ.. (thx to Derick for the head!)
-  #47757 rename JPG to JPEG in phpinfo
- fix logic after my build fix, thx to Hannes for the head up!
- MFB: #47757 rename JPG to JPEG in phpinfo
- #47757 rename JPG to JPEG in phpinfo
- fix build
BFN
ChangeLog update
- MFB old changes
Improved parameter handling
- Updated to version 2009.4 (2009d)
- Updated to version 2009.4 (2009d)
- Updated to version 2009.4 (2009d)
Back to dev
5.3.0 RC 1
1. Involves an mbstring setting correction regarding: http://marc.info/?l=php-cvs&m=123596904426621&w=2
1. Involves an mbstring setting correction regarding: http://marc.info/?l=php-cvs&m=123596904426621&w=2
ChangeLog update
MFB: Improved parameter parsing
Improved parameter parsing
- Updated to version 2009.3 (2009c)
- Updated to version 2009.3 (2009c)
- Updated to version 2009.3 (2009c)
ChangeLog update
BFN
- disable it when ZTS is disabled
- fix build, add new cp850 file
clarification of wwwhether 'make test' needs the PHP xecutable to be set
clarification of wwwhether 'make test' needs the PHP xecutable to be set
clarification of wwwhether 'make test' needs the PHP xecutable to be set
added skipif for root
added skip if for root
added skipif for root
set return_len to 0 when returning empty string and fix segfault
ChangeLog update
- Add self to maintainer list so's I can get bug notifications :)
MFH: Handle overflow when decoding large numbers and avoid 2 conversions
MFH: Avoid 2 conversions when decoding numbers
Avoid 2 conversions when decoding numbers
MFH: Removed extra space from eval string
MFB (zend_execute_API.c v1.331.2.20.2.13): "Avoid strcpy() & strcat()" Removed extra space from eval string, and unnecessary variable
MFH: Add test covering for #47671
Add test covering for #47671
ChangeLog update
MFB:Improved parameter parsing
Improved parameter parsing
New tests for various date extension functions. Tested on Windows, Linux and linux 64
New tests for various date extension functions. Tested on Windows, Linux and linux 64
New tests for various date extension functions. Tested on Windows, Linux and linux 64
Removed unnecassary checks
Removed unnecassary checks
- some cleanup, more to come
- php.ini-dev/prod
- php.ini-dev/prod
- Use UTF-8 characters as 5.2's NEWS does.
- Add support for CP850 encoding (patch by Denis Giffeler)
- MFH: Synching .dsp file (I am not sure whether I really should do this)
- MFH: Synching .dsp file (I am not sure whether I really should do this)
- Synching .dsp file (I am not sure whether I really should do this)
- Typo.
- Add entries for the encodings that are already supported by mbstring but   not listed here.
- MFH: staticise private symbols
- staticise private symbols.
Improved speed of conditional jump instructions by checking for most useful case (conditional expression)
Improved speed of conditional jump instructions by checking for most useful case (conditional expression)
Inline only the most useful code
Inline only the most useful code
Forgotten file (sorry)
New tests for date extension DateTime methods Tested on Windows, Linux and linux 64
New tests for date extension DateTime methods Tested on Windows, Linux and linux 64
New tests for date extension DateTime methods Tested on Windows, Linux and linux 64
optimization
optimization
New tests for date extension DateTimeZone methods Tested on Windows, Linux and linux 64
New tests for date extension DateTimeZone methods Tested on Windows, Linux and linux 64
New tests for date extension DateTimeZone methods Tested on Windows, Linux and linux 64
Forgotten include
Better fix for bug #45877 (smaller and faster)
Better fix for bug #45877 (smaller and faster)
- to 5.2
- #43073, TrueType bounding box is wrong for angle<>0
ChangeLog update
- #43073
- #43073, TrueType bounding box is wrong for angle<>0
MFH Missing skip in tests
Missing skip in tests
MFH Replace magic values with a define for json encoding, makes reading it a bit easier
Replace magic values with a define, makes reading it a bit easier
BFN
MFH Add PHP_JSON_FORCE_OBJECT for forcing an object output of an array
Add PHP_JSON_FORCE_OBJECT for forcing an object output of an array
- MFH: Year++
- MFH: Year++
MFH: Replace old php.ini files with the new ones according to http://wiki.php.net/rfc/newinis (by Eric Lee Stewart)
Replace old php.ini files with the new ones according to http://wiki.php.net/rfc/newinis (by Eric Lee Stewart)
- MFB: make it less(er) sensible to bison version
- make it less(er) sensible to bison version
- make it less sensible to bison version
- MFB: s,win32,windows, and add myself to the list
- s,win32,windows, and add myself to the list
MFH Deal with overflow when decoding large numbers
Deal with overflow when decoding large numbers
- MFH: disable HAVE__CONTROLFP_S with VC9, 3x times slowdown
- disable HAVE__CONTROLFP_S with VC9, 3x times slowdown
MFH: mark mysqlnd's threading (which can be used for background pre-fetching)      experimental
- mark mysqlnd's threading (which can be used for background pre-fetching)   experimental
- MFH: Make iconv filter accept '.' as the delimiter between encoding names as   well as '/'. It's impossible to specify the filter in php://filter without   this fix.
- Make iconv filter accept '.' as the delimiter between encoding names as well   as '/'. It's impossible to specify the filter in php://filter without this   fix.
BFN
BFN
BFN
ChangeLog update
Removed unneeded HashPosition variable (php_implode() doesn't change the internal pointer) - It was added in '06 with the "200-300%" implode() optimization (hasn't been merged to HEAD)
test for /ext/tidy from stefan priebsch
test for /ext/tidy from stefan priebsch
test for /ext/tidy from stefan priebsch
- fix the build for win (vc6 or vc9) - fix logic in time convertion - force shared on windows, will fix the dirent issue later (no, it is not enough to simply remove the dep or header include) - add myself before I forget again
- fix the build for win (vc6 or vc9) - fix logic in time convertion - force shared on windows, will fix the dirent issue later (no, it is not enough to simply remove the dep or header include) - add myself before I forget again
Updated news file
Closes bug #47667
Closes bug #47667
Closes bug #47667
- MFB: fix build
- fix build
- revert last commit (tree was not updated)
- fix vc6 build
MFH Prepare for PECL OCI8 1.3.5
Prepare for PECL OCI8 1.3.5
MFH: Mac OSX customization for initialization error message
Mac OSX customization for initialization error message
ChangeLog update
Lets follow the same style, shall we?
- refer to fileinfo so the entry can easily be filtered out on 5.3.0 final
MFH fileinfo tests are missing skipif
fileinfo tests are missing skipif
BFN
MFH Update fileinfo to libmagic 5.00 and remove dependency on dirent.h on Windows
Update fileinfo to libmagic 5.00 and remove dependency on dirent.h on Windows
- Nuketh old remains
ChangeLog update
revert the NEWS line for bug #45799
NEWS
MFH: add LIBXML_LOADED_VERSION constant that contains currently loaded libxml2 version add libxml2 version being used to info output
ChangeLog update
record new curl options
add new CURL options
add new CURL options
add new CURL options
add LIBXML_LOADED_VERSION constant that contains currently loaded libxml2 version add libxml2 version being used to info output
fix build for VC9
BFN
MFB: fix bug #47430 (Errors after writing to nodeValue parameter of an absent previousSibling) add test
MFB: fix bug #47430 (Errors after writing to nodeValue parameter of an absent previousSibling) add test
fix bug #47430 (Errors after writing to nodeValue parameter of an absent previousSibling) add test
ChangeLog update
Add PECL Bug #14268
refixing %r in run-tests.php (thanks iain lewis for the fix)
refixing %r in run-tests.php (thanks iain lewis for the fix)
refixing %r in run-tests.php (thanks iain lewis for the fix)
MFH
MFH
ChangeLog update
Revert local setting changes
Revert local setting changes
Add recent OCI8 fixes
MFH: Bug #46994 (CLOB size does not update when using CLOB IN OUT param in stored procedure)
Bug #46994 (CLOB size does not update when using CLOB IN OUT param in stored procedure)
ChangeLog update
- MFH It's 2009
- It's 2009
- This is PHP 6 - if this ... ever gets out
- MFH Safer flag handling as requested by Greg
- Safer flag handling as requested by Greg
Clenaup deprecated namespace code
Clenaup deprecated namespace code
ChangeLog update
MFH: New test for oci_fetch_all
New test for oci_fetch_all
MFH: Make non-public prototype match the type passed at call
Make non-public prototype match the type passed at call
MFH: Use PHP 5 function name in error message
Use PHP 5 function name in error message
MFH: Bug #47243 (Crash at shutdown on Windows)
Bug #47243 (Crash at shutdown on Windows)
MHB/sync: Make tests portable with older PHP for PECL builds
Make tests portable with older PHP for PECL builds
MFH: PECL Bug #16035 (oci_connect without ORACLE_HOME defined causes segfault)
PECL Bug #16035 (oci_connect without ORACLE_HOME defined causes segfault)
MFH: PECL Bug #15988 (sqlnet.ora isn't read with older Oracle libraries)
PECL Bug #15988 (sqlnet.ora isn't read with older Oracle libraries)
- add path for libpq (other are kept)
MFH: Prepare for future PECL OCI8 1.3.5
Prepare README for future PECL OCI8 1.3.5
MFH: Silence initialization warning
Silence initialization warning
MFH: Bug #46623 (phpinfo doesn't show compile time ORACLE_HOME with phpize)
Bug #46623 (phpinfo doesn't show compile time ORACLE_HOME with phpize)
ChangeLog update
ChangeLog update
MFB: Adjust previous fix to avoid compiler warnings
Adjust previous fix to avoid compiler warnings
MFB: Improved parameter handling
Improved parameter handling
ChangeLog update
MFB: Improve parameter parsing code
Improve parameter parsing code
ChangeLog update
Removed bogus code
ChangeLog update
fixed test
ChangeLog update
BFN
Added %r section
Added %r section
Added %r section
removing UEXPECT
ChangeLog update
MFH: fix tokenizer makefile dependencies on parser/scanner files when built dynamically. (See bug #38762)
fix tokenizer makefile dependencies on parser/scanner files when built dynamically. (See bug #38762)
ChangeLog update
fix tests
fix tests
re-disable phar in HEAD on windows
MFB: revert removal of openssl check, was confusion on my part
revert removal of openssl check, was confusion on my part
MFB: add safeguard check for timestamp modification to phar_stub.phpt and phar_gzip.phpt
add safeguard check for timestamp modification to phar_stub.phpt and phar_gzip.phpt
MFB: fix hash support on windows in ext/phar (Kalle)
fix hash support on windows in ext/phar (Kalle)
MFB: fix blog.phar for front.phar.phpt test
fix blog.phar for front.phar.phpt test
MFB: fix swapping of time/date in timestamp saving for zip, which can cause crash on windows
update NEWS with phar enabling, fix swapping of time/date in timestamp saving for zip, which can cause crash on windows
MFB: fix SKIPIF, EXPECT in 2 tests
fix SKIPIF, EXPECT in 2 tests
ChangeLog update
make STDOUT function as STDERR, in case any module call print()
ChangeLog update
Back to dev
5.2.9
ChangeLog update
MFB: Adjust previous fix
Adjust previous fix
- Revert the patch then.
- MFH: strictly check UTF-8 and UTF-32 validity
- MFH: strictly check UTF-8 and UTF-32 validity
- Strictly check UTF-8 and UTF-8 validity.
ChangeLog update
Remove zend_dynamic_array and it's build targets as it is not longer needed
ChangeLog update
ChangeLog update
MFB: fix faulty logic in tests, needed to use ksort instead of asort and to sort output.  These tests failed on some systems with non-case sensitive filesystem sorting
fix faulty logic in tests, needed to use ksort instead of asort and to sort output.  These tests failed on some systems with non-case sensitive filesystem sorting
MFB: cosmetics: remove two unreachable return statements, removes warning in sun cc
cosmetics: remove two unreachable return statements, removes warning in sun cc
MFB: cosmetics: fix warning (only affects suncc)
cosmetics: fix warning (only affects suncc)
ChangeLog update
MFH: Add charsets from MySQL 6.0 as a structure to be used later
Add the charsets available from 6.0 as a structure, to be used later
- spl is not forced on everyone in 5.2 branch.
MFB: fix zip access to work in all compilers, present and future, and on all arches without potential for bus errors.  This removes PHAR_ZIP_PACK in favor of a safer approach
fix zip access to work in all compilers, present and future, and on all arches without potential for bus errors.  This removes PHAR_ZIP_PACK in favor of a safer approach
ChangeLog update
Back to dev
.2.9RC3
fix test
fix test
ChangeLog update
- New test
- New test
BFN
MFB: Removed unused var
Removed unused var
Revert fix to bug #46903 as per http://marc.info/?l=php-internals&m=123476465621346&w=2 .
BFN
MFH: Update bundled SQLite to 3.6.11
Update bundled SQLite to 3.6.11
ChangeLog update
fix test
fix test
fix test
FN
- MFH: Add an entry for http_output_conv_mimetypes to the output of   mb_get_info(). (patch by T. Komura, thanks!)
- Add an entry for http_output_conv_mimetypes to the output of mb_get_info().
Increased the sleep() from 1 to 5 to prevent intermittent failures
Increased the sleep() from 1 to 5 to prevent intermittent failures
MFH: Overflow comment
MFH: Overflow comment
Added overflow comment from div_function
Increased the sleep() from 1 to 5 to prevent intermittent failures
Wrap wrong lines
Entry for bug #47422
bug 46680
bug 46680
remove XFAIL
remove XFAIL
ChangeLog update
fix tests
fix tests
- Missing "DROP TABLE"
- Missing "DROP TABLE"
- Missing "DROP TABLE"
MFB: fix memleaks on zip corruption
fix memleaks on zip corruption
- MFH: Improve mysqlnd's internal method registration
- Improve mysqlnd's internal method registration
re-enable ext/phar on big-endian systems, fixes verified as workign
Moved from 5.2 news
exit -1 and exit -2 don't work for all sh. changed to exit 1
exit -1 and exit -2 don't work for all sh. changed to exit 1
exit -1 and exit -2 don't work for all sh. changed to exit 1
- MFH
- Test.
ChangeLog update
MFB: fix test
fix test
fix tests
fix the last remaining failing test (explicitly pass in SKIP_DOTS to directory iterator)
MFB: fix all remaining big-endian issues
fix remaining big-endian issues with phar
MFB: fix getting/setting of all 16/32 bit on zip
fix getting/setting of all 16/32 values in zip
revert accidental commit of config.m4, big-endian isn't ready quite yet
MFB: fix setting of 32-bit values on big-endian systems
fix setting of 32-bit value on big-endian systems
- Supressing error message for SKIPIF check works as expected
- Supressing error message for SKIPIF check works as expected
- Supressing error message for SKIPIF check works as expected
reverted fix
Revert patch for bug #46701 as it introduces a BC break
- MFH: these should have been in the previous commit.
- These should have been in the previous commit.
- BFN
- Forgot to include these files.
ChangeLog update
2.4.1 is safe
Unmangle
2.4.1 is safe
2.4.1 is safe to use.  Perhaps we should just drop the 3rd part from the check there?  Might be unsafe if they break 2.4.2 though
splitting array_chunk into smaller tests
splitting array_chunk into smaller tests
splitting array_chunk into smaller tests
- MFH: prevent unwanted overflow
- MFH: prevent unwanted overflow
- Prevent unwanted overflow
- MFH: fix Bug #45923 (mb_st[r]ripos() offset not handled correctly)
- MFH: these should be E_WARNING for consistency with strpos()
- MFH: These should be E_WARNING for consistency with strpos()
- These should be E_WARNING for consistency with strpos()
ChangeLog update
Revert bogus fix for #47370.
Revert bogus fix for #47370.
Revert bogus fix for #47370.
remove UEXPECT
fixed bad section name
fixed bad section name
fixed test
MFH: Revert previous change
MFH: Revert previous change
Revert previous change
MFH: fixed typos
fixed typos
- Added missing void param check and arginfo
- Added arginfo
- Good bug # order.
BFN
- New test
- New test
ChangeLog update
Back to dev
5.2.9RC2
- Remove dependencies on ustdio.h. Doing so allows HEAD to be built with   ICU that comes with the out-of-the-box Mac OS X.
* Update for bug #47370.
ChangeLog update
MFH: - fixed memory leaks in gdImageCreateFromXpm() - dropped unused codes
- fixed memory leaks in gdImageCreateFromXpm() - dropped unused codes
MFH: optimization via the row-major order.
optimization via the row-major order.
MFB: Improved param parsing
Improved param parsing
add test
add test
add test
MFH: fix bug #47353 (crash when creating a lot of objects in object destructor)
MFH: fix bug #47353 (crash when creating a lot of objects in object destructor)
fix bug #47353 (crash when creating a lot of objects in object destructor)
MFH: fix check for zend_extension type
MFH: fix check for zend_extension type
fix check for zend_extension type
ChangeLog update
MFH primary tester ml needs to be in the TO not CC
primary tester ml needs to be in the TO not CC
MFB:Adjust condition
MFB: Adjust condition
Adjust condition
MFB: Added path truncation E_NOTICE to let people now when path resolving caused the file path to be truncated.
MFB: typo fix
MFB: Added path truncation E_NOTICE to let people now when path resolving caused the file path to be truncated.
Added path truncation E_NOTICE to let people now when path resolving caused the file path to be truncated.
ChangeLog update
MFB: The constructor should also throw exceptions, make this semi useful now.
The constructor should also throw exceptions, make this semi useful now.
MFB: Initialize optional var
MFB: Initialize optional var
Initialize optional var
remove entry for bug #46026, this is fixed in 5.2 now, and needs no 5.3 entry
Better fix for #47341
Better fix for #47341
MFB fix Bug #46026 (this is a refinement of the previous fix)
ChangeLog update
MFB primary testers list is now mailed for every release
primary testers list is now mailed for every release
ChangeLog update
fix unicode implementation
fix typo
- Improve test
- Improve test
- Improve test
- New test
ChangeLog update
MFB: Make message punctuation consistent across PHP
Make message punctuation consistent across PHP
Tweak fix for #45458 to allow this branch (from PECL) to continue building with PHP 4 et al. No other branches need changing
Back to dev
5.2.9RC1
- zip fix entry
- Update
- Update
ChangeLog update
Syn spprintf fix with that of 5.3 and above
- fix build
ChangeLog update
- Added news item for Bugfix #46048
MFB: Return empty string when recv() does not fetch any data
MFB: Return empty string when recv() does not fetch any data
Return empty string when recv() does not fetch any data
MFB: fix bug #47085:rename() returns true even if the file in PHAR does not exist
fix bug #47085:rename() returns true even if the file in PHAR does not exist
MFB fix Bug #47265 (generating phar.phar fails because of safe_mode)
fix bug #47265 (generating phar.phar fails because of safe_mode)
ChangeLog update
regenerate
MFB: fix #46347
regenerate
fix bug #46347: allow * in ini keys
- define HAVE_SOCKLEN_T as it exists (vc6+)
- silent compiler warning about socklen_t benign redefinition
- silent compiler warning about socklen_t benign redefinition
- define HAVE_SOCKLEN_T as it exists (vc6+)
- MFH: fix build (use the same arginfo than the aliased func)
- fix build (use the same arginfo than the aliased func)
* Forgot to add the test.
ChangeLog update
New set_magic_quotes() tests. Tested on Windows, Linux and linux 64
New set_magic_quotes() tests. Tested on Windows, Linux and linux 64
New set_magic_quotes() tests. Tested on Windows, Linux and linux 64
New php_uname() tests. Tested on Windows, Linux and linux 64
New php_uname() tests. Tested on Windows, Linux and linux 64
New php_uname() tests. Tested on Windows, Linux and linux 64
New get_defined_vars(), get_included_files(), get_magic_quotes() and getmypid() tests. Tested on Winows, Linux and Linux 64
New get_defined_vars(), get_included_files(), get_magic_quotes() and getmypid() tests. Tested on Winows, Linux and Linux 64
New get_defined_vars(), get_included_files(), get_magic_quotes() and getmypid() tests. Tested on Winows, Linux and Linux 64
New escapeshellarg() tests. Tested on Windows, Linux and Linux 64
New escapeshellarg() tests. Tested on Windows, Linux and Linux 64
New escapeshellarg() tests. Tested on Windows, Linux and Linux 64
New floatval() tests. Tested on Windows, Linux and Linux 64
New floatval() tests. Tested on Windows, Linux and Linux 64
New floatval() tests. Tested on Windows, Linux and Linux 64
ChangeLog update
ChangeLog update
fix bug #14562
fix bug #14562
ChangeLog update
MFB: Improved validation checks inside str_pad()
- MFH: Year++
Improved validation checks inside str_pad()
- Year++
fix // comments
ChangeLog update
- MFH: Added arginfo
- Added arginfo
- Re-added safe mode check
MFB: turn the offset parameter of mmap() back to 0
the offset parameter of mmap() must be aligned to a page boundary (although linux doesnt strictly require it). use 0 as offset as it will be small and increment the ptrs afterwards
Broken test, skipif sections had a parse error
BFN
This commit was manufactured by cvs2svn to create branch 'PHP_5_3'.
MFB: fix bug #47229: preg_quote should escape '-'
fix bug #47229: preg_quote should escape '-'
- Add .cvsignore
- Add .cvsignore
- Add .cvsignore
Back to -dev
PHP 5.3.0beta1
Properly disable phar for the moment
- enchant entry and fix news
- Skeleton version taken directly from the scratchpad and tidied. @Lukas, Johannes: This is nowhere near complete, and may contain entries that would be happier in NEWS, but it's OK for the beta IMHO.
Disable Phar on big endian systems for beta 1.
fix test
fix test
fix test
- MFB: fix build
- MFB: sync 5.3
ChangeLog update
MFB: improved parameter parsing
Improved parameter parsing
- fix build
- prevent redefinition
fix compile warning
- Removed wrong '/' in parameter format
- MFH: Elevate no-tz set warning from E_STRICT to E_WARNING. #- [DOC]
- Elevate no-tz setting made from E_STRICT to E_WARNING. #- [DOC]
ChangeLog update
[DOC] Remove $this support in closures for PHP 5.3 beta 1 - Implementation notes here:   http://wiki.php.net/rfc/closures/removal-of-this
- idn build for win
- IDN entry
- [DOC] add IDN support, idn_to_ascii and idn_to_utf8   tests and MFB will follow Wednesday
Split-ip  var_export.phpt and add new error tests. Tested on Windows, Linux and Linux 64 bit
Split-ip  var_export.phpt and add new error tests. Tested on Windows, Linux and Linux 64 bit
Split-ip  var_export.phpt and add new error tests. Tested on Windows, Linux and Linux 64 bit
BFN
MFH: fix bug #47220 (segfault in dom_document_parser in recovery mode)
MFH: fix bug #47220 (segfault in dom_document_parser in recovery mode)
fix bug #47220 (segfault in dom_document_parser in recovery mode)
MFH: Improve spl_object_hash()
Improve spl_object_hash()
ChangeLog update
MFH use example.com
MFH use example.com
use example.com instead of real domain name
ifdef -> if
do not define CURLE_SSH twice
do not define CURLE_SSH twice
Split is_callable test. Test on Windows, Linux and Linux 64 bit
Split is_callable test. Test on Windows, Linux and Linux 64 bit
Split is_callable test. Test on Windows, Linux and Linux 64 bit
MFB: Improved fix for bug #47174 & added a test
MFB: Improved fix for bug #47174 & added a test
Improved fix for bug #47174 & added a test
- nicer features list
- nicer features list
- curl ssh entry
- MFH  - [DOC] Add support for SSH via libssh2   - new constants: CURLE_SSH, CURLSSH_AUTH_NONE, CURLSSH_AUTH_PUBLICKEY, CURLSSH_AUTH_PASSWORD, CURLSSH_AUTH_HOST, CURLSSH_AUTH_KEYBOARD, CURLSSH_AUTH_DEFAULT, CURLOPT_SSH_AUTH_TYPES, CURLOPT_KEYPASSWD, CURLOPT_SSH_PUBLIC_KEYFILE, CURLOPT_SSH_PRIVATE_KEYFILE, CURLOPT_SSH_HOST_PUBLIC_KEY_MD5    See http://curl.haxx.se/libcurl/c/curl_easy_setopt.html fortheir roles or usages
- [DOC] Add support for SSH via libssh2  - new constants: CURLE_SSH, CURLSSH_AUTH_NONE, CURLSSH_AUTH_PUBLICKEY, CURLSSH_AUTH_PASSWORD, CURLSSH_AUTH_HOST, CURLSSH_AUTH_KEYBOARD, CURLSSH_AUTH_DEFAULT, CURLOPT_SSH_AUTH_TYPES, CURLOPT_KEYPASSWD, CURLOPT_SSH_PUBLIC_KEYFILE, CURLOPT_SSH_PRIVATE_KEYFILE, CURLOPT_SSH_HOST_PUBLIC_KEY_MD5   See http://curl.haxx.se/libcurl/c/curl_easy_setopt.html fortheir roles or usages
- MFB:  - update check for libs  - add HAVE_CURL_EASY_STRERROR, HAVE_CURL_MULTI_STRERROR, HAVE_CURL_VERSION_INFO
- check for zlib too
Added INI sections
MFH: Patch by David Soria Parra <dsp@php.net>.
MFH: Patch by David Soria Parra <dsp@php.net>.
Patch by David Soria Parra <dsp@php.net>.
added INI and fixed assert02 to run on PHP6 and PHP53
added INI settings
ChangeLog update
fix test
fix test
expect -> expectf
fix test
fix build
fix build
add missing .cvsignore
New get_extension_funcs() and getrusage() tests. Tested on Windows, Linux and Linux 64 bit
New get_extension_funcs() and getrusage() tests. Tested on Windows, Linux and Linux 64 bit
New get_extension_funcs() and getrusage() tests. Tested on Windows, Linux and Linux 64 bit
BFN
MFH Add blobOpen method for reading binary blobs via streams.
Forgot test for the last commit
Add blobOpen method for reading SQlite3 blobs via streams.
ChangeLog update
Make test more robust; avoid hangs if fsockopen() fails. Tested on Windows, Linux and Linux 64 bit
Make test more robust; avoid hangs if fsockopen() fails. Tested on Windows, Linux and Linux 64 bit
Make test more robust; avoid hangs if fsockopen() fails. Tested on Windows, Linux and Linux 64 bit
New gzuncompress()  test.Tested on WIndows, Linux and Linux 64 bit
New gzuncompress()  test.Tested on WIndows, Linux and Linux 64 bit
New gzuncompress()  test.Tested on WIndows, Linux and Linux 64 bit
deleted invalid test.
deleted invalid test.
deleted invalid test.
added some mail tests. Tested on windows, linux and linux 64bit
added some mail tests. Tested on windows, linux and linux 64bit
added some mail tests. Tested on windows, linux and linux 64bit
MFH: Windows support for stream_socket_pair(), by moving the socketpair() implementation from ext/sockets to win32/
Windows support for stream_socket_pair(), by moving the socketpair() implementation from ext/sockets to win32/
various network tests. tested on windows, linux, linux 64 bit
various network tests. tested on windows, linux, linux 64 bit
various network tests. tested on windows, linux, linux 64 bit
IMPA fetchheader tests
IMPA fetchheader tests
IMAP fetchheader tests
fix tests
fix tests
fix tests
fix tests
ChangeLog update
New image tests. Tested on WIndows, Linux and Linux 64 bit
New image tests. Tested on WIndows, Linux and Linux 64 bit
New image tests. Tested on WIndows, Linux and Linux 64 bit
- call the right script
fixed test
fixed tests
MFH: export mysql_refresh
- Export mysql_refresh to mysqli (mysqli_refresh(), $mysqli->refresh())
fixed test
fstat tests. tested on windows, linux and linux 64 bit
fstat tests. tested on windows, linux and linux 64 bit
fstat tests. tested on windows, linux and linux 64 bit
New date tests for getdate() and gmstrftime(). Tested on WIndows, Linux and Linux 64 bit
New date tests for getdate() and gmstrftime(). Tested on WIndows, Linux and Linux 64 bit
New date tests for getdate() and gmstrftime(). Tested on WIndows, Linux and Linux 64 bit
final collection of zlib tests. tested on linux, windows and linux 64 bit
final collection of zlib tests. tested on linux, windows and linux 64 bit
final collection of zlib tests. tested on linux, windows and linux 64 bit
New basic  time()and microtime() tests. Tested on Windows, Linux and Linux 64 bit
New basic  time()and microtime() tests. Tested on Windows, Linux and Linux 64 bit
New basic  time()and microtime() tests. Tested on Windows, Linux and Linux 64 bit
New image tests. Tested on Windows, LInux and Linux 64 bit
New image tests. Tested on Windows, LInux and Linux 64 bit
New image tests. Tested on Windows, LInux and Linux 64 bit
added .project to the cvs ignore file
Deleting a .project file
fixed subtle bugs regarding attempting to chdir, plus cleanup issues. improved tempnam test, removed hardcoded line number. tested on windows, linux and linux 64bit.
fixed subtle bugs regarding attempting to chdir, plus cleanup issues. improved tempnam test, removed hardcoded line number. tested on windows, linux and linux 64bit.
fixed subtle bugs regarding attempting to chdir, plus cleanup issues. improved tempnam test, removed hardcoded line number. tested on windows, linux and linux 64bit.
ChangeLog update
correct minor mistakes in the php6 version of the zlib tests
MFH: fix typo
MFH: fix typo
- Updated to version 2009.1 (2009a)
- Updated to version 2009.1 (2009a)
- Updated to version 2009.1 (2009a)
new tests for zlib extension, tested on windows, linux and linux64
new tests for zlib extension, tested on windows, linux and linux64
new tests for zlib extension, tested on windows, linux and linux64
fix tests
fix tests
New gzuncompress() test. php6 tets fails currentlly due to #47179. Tested on Windows, Linux and Linux 64 bit
New gzuncompress() test. php6 tets fails currentlly due to #47179. Tested on Windows, Linux and Linux 64 bit
New gzuncompress() test. php6 tets fails currentlly due to #47179. Tested on Windows, Linux and Linux 64 bit
New gzencode() test. php6 tets fails currentlly due to #47178. Tested on Windows, Linux and Linux 64 bit
New gzencode() test. php6 tets fails currentlly due to #47178. Tested on Windows, Linux and Linux 64 bit
New gzencode() test. php6 tets fails currentlly due to #47178. Tested on Windows, Linux and Linux 64 bit
New testcases for strftime function
New testcases for strftime function
New testcases for strftime function
Some basic tests for mime_magic. Tested on windows only
ChangeLog update
New gzinflate() error test. Tested on WIndows, Linux and Linux 64 bit
New gzinflate() error test. Tested on WIndows, Linux and Linux 64 bit
New gzinflate() error test. Tested on WIndows, Linux and Linux 64 bit
New stripcslashes() tests. Tested on Window, Linux and Linux 64 bit
New stripcslashes() tests. Tested on Window, Linux and Linux 64 bit
New stripcslashes() tests. Tested on Window, Linux and Linux 64 bit
BFN #47087
MFB: Added an E_NOTICE when precision value is truncated
MFB: Added an E_NOTICE when precision value is truncated
Added an E_NOTICE when precision value is truncated
New vfprintf() tests. Tested on Window, Linux and Linux 64 bit
New vfprintf() tests. Tested on Window, Linux and Linux 64 bit
New vfprintf() tests. Tested on Window, Linux and Linux 64 bit
Removed wrong warning message
Removed wrong warning message
BFN
- fnmatch entry
- MFB  - [DOC] add support for fnmatch() on Windows  - enable tests (pass)
- [DOC] add support for fnmatch() on Windows - enable tests (pass)
- add fnmatch() support on windows (C API), using the BSD implementation
- add fnmatch() support on windows (C API), using the BSD implementation
ChangeLog update
- MFH: Added missing "return;"
- MFH: Added missing "return;"
- Added missing "return;"
BFN
New substr_replace() and unpack() error tests. Tested on Windows, Linux and Linux 64 bit.
New substr_replace() and unpack() error tests. Tested on Windows, Linux and Linux 64 bit.
New substr_replace() and unpack() error tests. Tested on Windows, Linux and Linux 64 bit.
MFH: bump up and use IMAGE_FILTER_MAX_ARGS instead of a magic number.
bump up and use IMAGE_FILTER_MAX_ARGS instead of a magic number.
fixing the test to expect PHP6 and PHP53 behaviour
fixing the test to expect PHP6 and PHP53 behaviour
New vprintf() tests. Tested on Windows, Linux and Linux 64 bit.
New vprintf() tests. Tested on Windows, Linux and Linux 64 bit.
New vprintf() tests. Tested on Windows, Linux and Linux 64 bit.
New strval() tests. Tested on Windows, Linux and Linux 64 bit.
New strval() tests. Tested on Windows, Linux and Linux 64 bit.
New strval() tests. Tested on Windows, Linux and Linux 64 bit.
New tests for str_pad(), str_shuffle(), stristr() and strlen(). Tested on WIndows, Linux and Linux 64 bit
New tests for str_pad(), str_shuffle(), stristr() and strlen(). Tested on WIndows, Linux and Linux 64 bit
New tests for str_pad(), str_shuffle(), stristr() and strlen(). Tested on WIndows, Linux and Linux 64 bit
MFH: fixed the bug of libgd #191 (A circle becomes square)
fixed the bug of libgd #191 (A circle becomes square)
MFH: fix memleaks in sscanf()
new tests for zlib extension, tested on windows, linux and linux64
new tests for zlib extension, tested on windows, linux and linux64
new tests for zlib extension, tested on windows, linux and linux64
MFH: fix memleaks in sscanf()
fix memleaks in sscanf()
Make sense of these NEWS entries
- ime_ nanosleep and time_ sleep_ until entry
- MFH:  - add nanosleep  - expose nanosleep and usleep  - [DOC] time_ nanosleep and time_ sleep_ until available on windows  - change nanosleep signature to match posix one
- include php win32's time.h
- add HAVE_NANOSLEEP
- add nanosleep - expose nanosleep and usleep - [DOC] time_ nanosleep and time_ sleep_ until available on windows
- [MFB] fix nts build
ChangeLog update
Port similar_text test to 5.2. Tested on Windows, Linux and Linux 64 bit
New nl_langinfo(), number_format() and ord()  tests. Tested on Windows. Linux and Linux 64 bit
New nl_langinfo(), number_format() and ord()  tests. Tested on Windows. Linux and Linux 64 bit
New nl_langinfo(), number_format() and ord()  tests. Tested on Windows. Linux and Linux 64 bit
New hebrev() and hebrevc()  tests. Tested on Windows. Linux and Linux 64 bit
New hebrev() and hebrevc()  tests. Tested on Windows. Linux and Linux 64 bit
New hebrev() and hebrevc()  tests. Tested on Windows. Linux and Linux 64 bit
New sha1f() tests. Tested on Windows. Linux and Linux 64 bit
New sha1f() tests. Tested on Windows. Linux and Linux 64 bit
New sha1f() tests. Tested on Windows. Linux and Linux 64 bit
MFB: Upgraded bundled sqlite3 to 3.6.10
Upgraded bundled sqlite3 to 3.6.10
New sscanf() tests. Tested on Windows. Linux and Linux 64 bit
New sscanf() tests. Tested on Windows. Linux and Linux 64 bit
New sscanf() tests. Tested on Windows. Linux and Linux 64 bit
New explode() tests. Tested on Windows. Linux and Linux 64 bit
New explode() tests. Tested on Windows. Linux and Linux 64 bit
New explode() tests. Tested on Windows. Linux and Linux 64 bit
- New tests
ChangeLog update
New money_format() tests. Tested on Windows, Linux and Linux 64 bit
New money_format() tests. Tested on Windows, Linux and Linux 64 bit
New money_format() tests. Tested on Windows, Linux and Linux 64 bit
- Removed XFAIL
- New test
- BFN #46282
New trim() tests. Tested on Windows, Linux and Linux 64 bit
New trim() tests. Tested on Windows, Linux and Linux 64 bit
New trim() tests. Tested on Windows, Linux and Linux 64 bit
New ltrim() tests. Tested on Windows, Linux and Linux 64 bit
New ltrim() tests. Tested on Windows, Linux and Linux 64 bit
New ltrim() tests. Tested on Windows, Linux and Linux 64 bit
build IDs
build IDs
Build IDs
ChangeLog update
MFH: Add tests for addAll/RemoveAll
Add tests for addAll/RemoveAll
fix nts build
New string tests. Tested on Windows, Linux and Linux 64 bit
New string tests. Tested on Windows, Linux and Linu 64 bit
New string tests. Tested on Windows, Linux and Linu 64 bit
MFH: Implement SplObjectStorage::addAll/removeAll
Implement SplObjectStorage::addAll/removeAll
- MFB: fix VC6 build
- fix vc6 build
-add some doc about versions
-add some doc about versions
New string function tests. Tested on Windows, Linux and Linux 64 bit.
New string function tests. Tested on Windows, Linux and Linux 64 bit.
New string function tests. Tested on Windows, Linux and Linux 64 bit.
- typo (thx rza)
- entry for symlink, readlink, linkinfo and link
- MFB: don't call it in non zts mode
- MFH:  - return SUCCESS on success  - check return value
- return SUCCESS on success - check return value
- simplify code by using OPENBASEDIR_CHECKPATH
- MFH: add OPENBASEDIR_CHECKPATH macro to ease merge between 5.3 and 6, it includes safemode (5.3) and openbasedir check
- symlink, hardlink & co support (2/2) & (3/3)
- add EG(windows_version_info), set at init time once per instance   contains a OSVERSIONINFOEX struct. It lets us determine easily on which windows version is used (for example)
MFB:  - add EG(windows_version_info), set at init time once per instance    contains a OSVERSIONINFOEX struct. It lets us determine easily on which windows version is used (for example)  - [DOC] add the ability to disable a function when the windows function does not support a feature (for example symlink)  - [DOC] symlink, hardlink & co support (1/3)
- add OPENBASEDIR_CHECKPATH macro to ease merge between 5.3 and 6, it includes safemode (5.3) and openbasedir check
ChangeLog update
- symlink, hardlink & co support (2.1/2 :)
- symlink, hardlink & co support (2/2)
- add EG(windows_version_info), set at init time once per instance   contains a OSVERSIONINFOEX struct. It lets us determine easily on which windows version is used (for example)
- add EG(windows_version_info), set at init time once per instance   contains a OSVERSIONINFOEX struct. It lets us determine easily on which windows version is used (for example) - add the ability to disable a function when the windows function does not support a feature (for example symlink) - symlink, hardlink & co support (1/2)
MFB: Improved parameter handling
Improved parameter handling
New test for strripos()  string function. All tests checked on Windows, Linux and Linux 64 bit.
New test for strripos()  string function. All tests checked on Windows, Linux and Linux 64 bit.
New test for strripos()  string function. 3 test fail on PHP6 until #47102 fixed and have XFAIL sections. All tests checked on Windows, Linux and Linux 64 bit.
MFH: Change optional parameter for IMG_FILTER_PIXELATE to be a boolean Added missing NEWS log entry for the new pixelation filter
Change optional parameter for IMG_FILTER_PIXELATE to be a boolean
ChangeLog update
MFB: Removed unused variable
Removed unused variable
MFH: added pixelate filter.
added pixelate filter.
fix typo
fix typo
fix typo
fix news
Reverted "Rebind closure when binding to property"
Reverted "Rebind closure when binding to property"
- entry for support for PNG gray levels+ alpha  image, loaded as truecolor
- [DOC] support for PNG gray levels+ alpha  image, loaded as truecolor
- [DOC] support for PNG gray levels+ alpha  image, loaded as truecolor
- NEWS entry for the recent DNS improvement - [DOC] already submitted but it is a good summary
ChangeLog update
*** empty log message ***
MFB: Improved parameter handling
Improved parameter handling
- Typo
news
Add test
MFH: Add method DomNode::getLineNo to return line number for a parsed node
Add method DomNode::getLineNo to return line number for a parsed node
New date extension tests. Tested on Windows, Linux and Linux 64 bit
New date extension tests. Tested on Windows, Linux and Linux 64 bit
New date extension tests. Tested on Windows, Linux and Linux 64 bit
- finish windows support
- fix build
fix test
fix test
fix test
New zlib extension tests. Tested on Windows, Linux and Linux 64 bit
New zlib extension tests. Tested on Windows, Linux and Linux 64 bit
New zlib extension tests. Tested on Windows, Linux and Linux 64 bit
BFN
MFH Add table key to getColumnMeta() with SQLite
Add table key to getColumnMeta() with SQLite
ChangeLog update
fix #46304 Defining namespaced constant using define() defines CASE SENSITIVE namespace
ns bugfix out
MFB test
report fix 46304
fix #46304: Defining namespaced constant using define() uses case sensitive match for namespace
- Reverted my previous commit to avoid unnecessary BC.
MFB
memset() requires a pointer.
BFN
MFH Update sqlite to 3.6.8
Update sqlite to 3.6.8
New math tests. Tested on Windows, Linux and Linux 64 bit
New math tests. Tested on Windows, Linux and Linux 64 bit
New math tests. Tested on Windows, Linux and Linux 64 bit
New math tests. Tested on Windows, Linux and Linux 64 bit
MFB: Upgraded libsqlite3 to 3.6.8
Upgraded libsqlite3 to 3.6.8
- Reverted my previous commit to avoid unnecessary BC.
New math tests. Tested on Windows, Linux and Linux 64 bit
New math tests. Tested on Windows, Linux and Linux 64 bit
New math tests. Tested on Windows, Linux and Linux 64 bit
MFH The previous error was masked by a missing entry, sync them back up.
The previous error was masked by a missing entry, sync them back up.
The previous error was masked by a missing entry, sync them back up.
MFH This entry doesn't exist upstream any more, it also caused all error messages to be one off.
MFB This entry doesn't exist upstream any more, it also caused all error messages to be one off.
This entry doesn't exist upstream any more, it also caused all error messages to be one off.
fix typo
fix typo (reported by Richard Quadling)
ChangeLog update
MFB: improved parameter handling
Improved parameter handling
MFB Add support for the older style bind 8 functions, this adds support for OS X to use all of the dns_* functions.
BFN
Add support for the older style bind 8 functions, this adds support for OS X to use all of the dns_* functions.
MFH: - Improved fix for #47035 (win32 part by Henrique M. Decaria) [DOC] The TXT part needs be returned as an array of strings. (dns_get_record())
- Improved fix for #47035 (win32 part by Henrique M. Decaria) [DOC] The TXT part needs be returned as an array of strings.
MFH: export php_pcre_free to make mbstring happy
export php_pcre_free to make mbstring happy
revert last commit, sizeof does not work in preprocessor :(
revert last commit, sizeof does not work in preprocessor :(
MFH: add sanity check for time_t size of win32
add sanity check for time_t size of win32
BFN
MFH: fix bug #45996 (libxml2 2.7 causes breakage with character data in xml_parse())
MFH: fix bug #45996 (libxml2 2.7 causes breakage with character data in xml_parse())
fix bug #45996 (libxml2 2.7 causes breakage with character data in xml_parse())
Disable dl() in CGI and FastCGI modes
Disable dl() in CGI and FastCGI modes
ChangeLog update
fix test
fix test
fix tests
- Removed entry (not solved yet)
ChangeLog update
Some more tests that needed fixed.
If a TZ environmental is set then it ends up getting used instead of the INI setting, use date_default_timezone_set() instead.
cleanup garbage
cleanup garbage
cleanup garbage
MF52: fix test: don't create tmp files in "." and clean up when done
MF52: fix test: don't create tmp files in "." and clean up when done
fix test: don't create tmp files in "." and clean up when done
use temp var instead of wrong typecast
okay, no news for new internal functions then
news
MFH: add zend_ts_hash_copy_to_hash()
add zend_ts_hash_copy_to_hash()
change functions to be consistent between branches
MFH: Corrected fix for bug #46844 to only trigger on the 1st line of CLI opened files.
Corrected fix for bug #46844 to only trigger on the 1st line of CLI opened files.
fix ZTS build
fix ZTS build
MFB: Added mail logging functionality that allows logging of mail sent via mail() function
[DOC] Added mail logging functionality that allows logging of mail sent via mail() function
fix news
New testcases for localtime function
New testcases for localtime function
New testcases for localtime function
ChangeLog update
MFH: use correct check for constants and stop segfaulting (5_2 doesn't need this)
use correct check for constants and stop segfaulting
fix tests
fix tests
fix test for real
fix tests
fix test
fix test use bigger file to be able to see the difference
Handle __call() on protected/private method access for callbacks too.
New PHPT tests for math functions (batch 1 of 3). Tested on Windows, Linux and Linux 64 bit.
New PHPT tests for math functions. Tested on Windows, Linux and Linux 64 bit.
New PHPT tests for math functions. Tested on Windows, Linux and Linux 64 bit.
MFH: XFAIL test
MFH: XFAIL test
XFAIL test
fix ZTS build
- BFN #47035
MFB: Improved parameter fixing & address a compiler warning
Improved parameter fixing & address a compiler warning
ChangeLog update
MFB: Simplify parameter parsing
MFB
Simplify parameter parsing
- MFH: Removed WRONG_PARAM_COUNT usage
- Removed WRONG_PARAM_COUNT usage
- MFH: More suitable parameter checking
- More suitable parameter checking
MFH: - New parameter parsing - Removed METHOD_NOTSTATIC_NUMPARAMS
MFB
- New parameter parsing - Removed METHOD_NOTSTATIC_NUMPARAMS
Add test for last commit.
MFB
Changed __call() to be invoked on private/protected method access, similar to properties and __get().
fix test
MFH: fix test
MFH: fix test
fix test
MFH: - Added check for EWOULDBLOCK - Using EWOULDBLOCK instead of EAGAIN by portability issues (Related to #46917)
MFH: - Added check for EWOULDBLOCK - Using EWOULDBLOCK instead of EAGAIN by portability issues (Related to #46917)
- Added check for EWOULDBLOCK - Using EWOULDBLOCK instead of EAGAIN by portability issues (Related to #46917)
- Checking 0 param in the new way [only in this branch]
- Revert in this branch (attention++, thanks Hannes :D)
- BFN #47029
New pcre extension tests. Tested on Windows, Linux and Linux 64-bit
New pcre extension tests. Tested on Windows, Linux and Linux 64-bit
New pcre extension tests. Tested on Windows, Linux and Linux 64-bit
New hash extension tests. Tested on Windows, Linux and Linux 64-bit
New hash extension tests. Tested on Windows, Linux and Linux 64-bit
New hash extension tests. Tested on Windows, Linux and Linux 64-bit
- fix regression introduced by the move to the new parsing api (thx Bjori)
- fix parameter parsing options
- MFB: declaration and impl match
- declaration and impl match
- fix parameter parsing options
- remove PHP_FE(dl) (actually removing the commented PHP_FE, was commited with my dns patch for win)
- MFB: sanity check if we got an A as well (valid too but not desired)
- sanity check if we got an A as well (valid too but not desired)
ChangeLog update
- MFB: fix build for win
- [DOC] MFB: VC6 does not have NAPTR
MFB: Arg parsing cleanup
Param parsing cleanup
- these ifdefs are a mess, fix build on win
- [DOC] VC6 does not have NAPTR
- MFB: fix build
- fix build
- MFB: add multi threaded build support (automatic detection of the number of cpus, add a custom number if you prefer to use only a few of your available cores)
- add multi threaded build support (automatic detection of the number of cpus, add a custom number if you prefer to use only a few of your available cores)
- [MFH] - [DOC] add support for all DNS function on Windows   - dns_check_record  (and its alias  checkdnsrr)   - dns_get_record    - IPV6 specific info not available yet:      . AAAA info is available only on vista/2k8 for now      . A6 info is not available   - dns_get_mx (and its alias getmxrr)
- add DNSApi for the DNS functions
- add DNSApi for the DNS functions
- [DOC] add support for all DNS function on Windows   - dns_check_record  (and its alias  checkdnsrr)   - dns_get_record    - IPV6 specific info not available yet:      . AAAA info is available only on vista/2k8 for now      . A6 info is not available   - dns_get_mx (and its alias getmxrr)
MFH: the #ifdef was never working. If Sun extends its NSAPI to support subrequests, much of this code must be rewritten. Because of that it is better to have a clean start. This commit does not change behaviour.
MFH: the #ifdef was never working. If Sun extends its NSAPI to support subrequests, much of this code must be rewritten. Because of that it is better to have a clean start. This commit does not change behaviour.
the #ifdef was never working. If Sun extends its NSAPI to support subrequests, much of this code must be rewritten. Because of that it is better to have a clean start. This commit does not change behaviour.
- BFN #46701
ChangeLog update
- Removed UEXPECT(F) - Unicodified some tests
- BFN
- New test
- New test
- BFN
MFB: Improved parameter handling
Improved parameter handling
create temporary db in the current dir and cleanup on completion
create temporary db in the current dir and cleanup on completion
fix ws
fix ws
fix build
MFH: only add "# original source" if a redirect is active
only add "# original source" if a redirect is active
MFB: fix memleaks correctly and make valgrind happy
fix memleaks correctly and make valgrind happy
ChangeLog update
- fix build
MFB: Added missing initialization
Added missing initialization
MFH: fix PDO and other 'redirected' tests - add that "# original source" line only if the test fails
fix PDO and other 'redirected' tests - add that "# original source" line only if the test fails
fix test
fix test
- MFH Add compiler globals as
- Add compiler globals as
MFH
capitalize
- MFH - Set scope when copying a closure with a new this pointer.
- Set scope when copying a closure with a new this pointer.
ChangeLog update
MFH: - Removed unnecessary repeated arginfos - Changed sqlite3stmt and sqlite3result to ZEND_ACC_PRIVATE to avoid reflection instantiation
- Removed unnecessary repeated arginfos - Changed sqlite3stmt and sqlite3result to ZEND_ACC_PRIVATE to avoid reflection instantiation
- MFB Missing namespace changes # Now all tests PASS again
- MFH Minor corrections and a new test
- Minor corrections and a new test
- MFB sync
- MFH Show closure's bound  as static parameter
- Show closure's bound  as static parameter
- MFH Prevent instantiation from Reflection
- Prevent instantiation from Reflection
MFH - Add ReflectionFunctionAbstract::getClosureThis() [DOC] # Returns the this pointer bound to the closure is the relection object # points to closure. Since not all closures have a bound this, the method # cannot be used to differentiate between normal functions/methods and # closures. Instead ReflectionFunctionAbstract::isClosure() has to be used.
- Return this pointer and not closure itself
- Add ReflectionFunctionAbstract::getClosureThis()
- MFH Overlooked one instance number
- Overlooked one instance number
- MFH Rebind closure when binding to property
- Rebind closure when binding to property
- BFN
- MFH Improved closure support
- Improved closure support
- MFH Add minimalistic closure support
- Small reordering
- MFH Add reflection support helpers
- Add minimalistic closure support
- Add reflection helpers
- There is no -v in keys
MFH: * Redirect the "1 file(s) copied" message to nul * Check if configure script was copied, and output an error if it wasn't
ChangeLog update
- MFH: Windows part
- MFH: Windows part
- Windows part
- MFH: Errr, rule nÂº 1: be portable :)
- MFH: Errr, rule nÂº 1: be portable :)
- Errr, rule nÂº 1: be portable :)
- MFH: Working with unintialized errno (#46917, noticed by Jost Boekemeier)
- MFH: Working with unintialized errno (#46917, noticed by Jost Boekemeier)
- Working with unintialized errno (#46917, noticed by Jost Boekemeier)
- MFH: Year++
- Year++
- MFH Catch exceptions in cli -a
- Catch exceptions in cli -a
MFH: Check if configure script was copied, and output an error if it wasn't
Check if configure script was copied, and output an error if it wasn't
Duplicate INI sections
MFH: Redirect the "1 file(s) copied" message to nul
Redirect the "1 file(s) copied" message to nul
- MF PHP_5_3
- MF PHP_5_2
- Remove NO_RECURSE as it causes a huge performance impact. Up to 50%   with Wordpress. Stack size is not really anymore of an issue than on   Linux with FastCGI (php-cgi.exe). For ISAPI it may be an issue but we   have other places where we may eat up stack.
Add some missing NEWS items
- MFB: fix build (declaration first please)
- fix build (declaration first please)
ChangeLog update
- year++
- year++
- MFB: fix filename property read
- MFB: restore overwrite feature (regression introduced in 5.2.8)
- MFB: restore fix for binary mode on win (regression introduced in 5.2.8)
- news entry for #46985 and zip property read
- MFH: fix filename property read
- fix filename property read
- MFB: restore overwrite feature (regression introduced in 5.2.8)
- MFB: restore fix for binary mode on win (regression introduced in 5.2.8)
BFN
- restore overwrite feature (regression introduced in 5.2.8)
- restore fix for binary mode on win (regression introduced in 5.2.8)
- MFH Add var_dump support for closures
- Add var_dump support for closures
- MFH: expose glob and globfree on wi ndows, can be used by shared ext (core or extern)
- expose glob and globfree on wi ndows, can be used by shared ext (core or extern)
MFH: [DOC] Renable socket_create_pair() on Windows
Renable socket_create_pair() on Windows
ChangeLog update
removing xfail sections as test passes
removing xfail sections as test passes
removing xfail sections as test passes
removing xfail sections as test passes
removing xfail sections as test passes
new test from Nat Mcugh
new test from Nat Mcugh
new test from Nat Mcugh
- MFB: enable gehostname on windows [DOC]
- enable gehostname on windows [DOC]
- Add needed include as reported by Pierre
- Add needed include as reported by Pierre
MFH: don't use WRONG_PARAM_COUNT with new param parsing API
don't use WRONG_PARAM_COUNT with new param parsing API
- BFN
- BFN
MFB: Nuke unused variables
Nuke unused variables
- MFB Use Revision instead of Id tag for version
- Use Revision instead of Id tag for version
MFB: Added gethostname() to return the current system host name.
[DOC] Added gethostname() to return the current system host name.
- Remove entry merged to 5.3
MFH - Changed dl() to be disabled by default. Enabled only when explicitly   registered by the SAPI layer. Enabled only with CLI, CGI and EMBED. (Dmitry) [DOC]
- WS
- Sync with HEAD, no ability to not start builtin functions
MFH - Register engine classes when and where they should be - Show core module version as PHP version
- Register engine classes when and where they should be - Show core module version as PHP version
- MFH Do not show core ini entries twice
- Do not show core ini entries twice
- MFH Move stdClass registering where it should be
- Move stdClass registering where it should be
MFH: Bump copyright year, 3 of 3.
MFH: Bump copyright year, 2 of 3.
MFH: Bump copyright year, 1 of 3.
MFH: Bump copyright year, 3 of 3.
MFH: Bump copyright year, 2 of 3.
MFH: Bump copyright year, 1 of 3.
Bump copyright year, 3 of 3.
Bump copyright year, 2 of 3.
Bump copyright year, 1 of 3.
Revert to the previous version for these tests as they were overwritten by mistake (checked on Windows but not on Linux... so the six skipped tests may not work correctly... but they should be ok and I'll watch the test results).
Revert to the previous version for these tests as they were overwritten by mistake (checked on Windows but not on Linux... so the six skipped tests may not work correctly... but they should be ok and I'll watch the test results).
Revert to the previous version for these tests as they were overwritten by mistake (checked on Windows but not on Linux... so the six skipped tests may not work correctly... but they should be ok and I'll watch the test results).
Revert to the previous version for these tests as they were overwritten by mistake (checked on Windows but not on Linux... so the six skipped tests may not work correctly... but they should be ok and I'll watch the test results).
ChangeLog update
- MFH Provide a core module that contains all Zend and php/main (in 5.3 incl. stdClass)
- Provide a core module that contains all Zend and php/main stuff but stdClass
MFH
Add mod_files.bat (equivalent to mod_files.sh).
MFB
- MFH Show version and ini entries as default module info.
- Show version and ini entries as default module info.
- MFH Do not show empty ini directive tables for modules without ini entries.
- Do not show empty ini directive tables for modules without ini entries.
MFH Use a module struct for the built-in functions
Use a module struct for the built-in functions
Revert to the previous version for these tests as they were overwritten by mistake (checked on Windows but not on Linux... so the six skipped tests may not work correctly... but they should be ok and I'll watch the test results).
Revert to the previous version for these tests as they were overwritten by mistake (checked on Windows but not on Linux... so the six skipped tests may not work correctly... but they should be ok and I'll watch the test results).
Revert to the previous version for these tests as they were overwritten by mistake (checked on Windows but not on Linux... so the six skipped tests may not work correctly... but they should be ok and I'll watch the test results).
Revert to the previous version for these tests as they were overwritten by mistake (checked on Windows but not on Linux... so the six skipped tests may not work correctly... but they should be ok and I'll watch the test results).
refixing missing skipif
refixing missing skipif
re-adding skipifs
removed commented out SKIPIF
- MFH Added missing check for void param. (patch by Kalle)
- Added missing check for void param. (patch by Kalle)
- MFH: Bug #46763 (mb_stristr() wrong output when needle does not exist) (patch by Henrique M. Decaria)
- Bug #46763 (mb_stristr() wrong output when needle does not exist) (patch by Henrique M. Decaria)
ChangeLog update
BFN
This is not TODO file..
ChangeLog update
- Unicodify (#46687)
ChangeLog update
- Errr, I lost the practice ;D
- BFN #46957
- Update (#46957)
- Bug #46957 (The tokenizer returns deprecated values)
MFH: Nuke more removed extensions
Nuke more removed extensions
MFH: - Add missing INI entries (pdo_odbc, odbc/birdstep, sybase_ct) MFH: - Remove entries from removed extension (ifx
- Add missing INI entries (pdo_odbc, odbc/birdstep, sybase_ct) - Remove entries from removed extension (ifx) [DOC] The sybase stuff is really confusing in the docs..
MFH: Add sysvshm.init_mem. [DOC] Looks like this setting has always been available
Add missing INI setting. [DOC] used as the default size for shm_attach(). PHP_INI_SYSTEM
MFH
lost part of the fix
MFH: fix compile warning
fix compile warning
add missing .cvsignore
add missing .cvsignore
MFH: proper exports/imports for win32
proper exports/imports for win32
MFH: add missing exports
add missing exports
MFH: fix explode behavior to respect negative limit when string is empty.
MFH: fix explode behavior to respect negative limit when string is empty.
fix explode behavior to respect negative limit when string is empty.
ChangeLog update
MFH: force export on win32 to workaround win32 conig issues
force export on win32 to workaround win32 conig issues
MFH: properly export functions
properly export functions
- MFB:   - remove the temp hack for libxml path (fixed now)   - do not raise a warning if the extension was not enabled anyway
- remove the temp hack for libxml path (fixed now) - do not raise a warning if the extension was not enabled anyway
- MFB:   - usual suspects must be in the default include/lib path (thx Rob for the notice!)   - fix the --wtih-php-build doc, remove dead url, update the name of the deps dir
- usual suspects must be in the default include/lib path (thx Rob for the notice!) - fix the --wtih-php-build doc, remove dead url, update the name of the deps dir
- MFB: be sure we define the deps so the right exts are built before (dom symbol error when dom and xsl are shared)
- be sure we define the deps so the right exts are built before (dom symbol error)
ChangeLog update
- Unicodifing
- Errr, that is 32bit. and cosmetic
MFH Enable salsa hashing algorithm
Enable salsa hashing algorithm
ChangeLog update
- add libxml cflag for shared and static
- work around missing libxml include path (will be replaced by a PHP_SETUP_LIBXML macro)
- MFH: be sure that at least one SAPI has been selected
- be sure that at least one SAPI has been selected
 - MFH: the config summary is a must, do not allow to disable it
- the config summary is a must, do not allow to disable
- MFH: disable simplexml when libxml is not enabled
- disable simplexml when libxml is not enabled
MFH Stop using sqlite3_aggregate_count() as this is now deprecated.
Stop using sqlite3_aggregate_count() as this is now deprecated.
BFN
MFH Make sure we clear out the error when the scalar version decoding works.
Make sure we clear out the error when the scalar version decoding works.
- New test
- New test
- New test
BFN
- version and WS
ChangeLog update
- Sync code with HEAD - [DOC] Backported: shm_has_var()
- Standard
New testcases for idate function
New testcases for gmmktime function
ChangeLog update
MFH Remove all of the stuff we have in here for pre PHP 5.2 support and memset the fileinfo struct.
Remove all of the stuff we have in here for pre PHP 5.2 support and memset the fileinfo struct.
MFH Enable ICU support within bundled SQLite if intl is enabled but not shared.
Enable ICU support within bundled SQLite
MFH Patch has the wrong filename
Patch has the wrong filename
BFN
MFH SQLite 3.6.7 plus a vc6 backport for LL
SQLite 3.6.7 plus a vc6 backport for LL
ChangeLog update
Adding test for stream_resolve_include_path()
ChangeLog update
This commit was manufactured by cvs2svn to create tag 'NEWS'.
MFH: Invalid string causes segfault within json_decode()
BFN
Add json_last_error() for getting a bit of information about what failed during a decode, also fixes a segfault when we have [1} [DOC]
MFH Add json_last_error() for getting a bit of information about what failed during a decode, also fixes a segfault when we have [1} [DOC]
ChangeLog update
- MFH: no need to look for bindlib_w32, not used anymore
- no need to look for bindlib_w32, not used anymore
Add name of reported to security issues because we apparently need to let everyone know.
- Added a test case for bug #46268. (Bug itself is not present in 5.2).
- MFH: export php_scandir and php_alphasort
Additional output buffering tests.
Additional output buffering tests.
Additional output buffering tests.
bug #46005 -> 5.2
bug #46005 -> 5.2
MFH fix #46005
ChangeLog update
MFB: remove fprintf usage
README for ext/imap tests
README for ext/imap tests
README for ext/imap tests
Miscellaneous tests for ext/imap
Miscellaneous tests for ext/imap
Miscellaneous tests for ext/imap
MFH Test for bug #45791
Test for bug #45791
MFH: bug tests
MFH
fix typoes
- Added test for bug #45161
New FTP test from Nathaniel McHugh
New FTP test from Nathaniel McHugh
New FTP test from Nathaniel McHugh
fix build
report fix
MFH fix #46005
fix #46005: User not consistently logged under Apache2
ChangeLog update
MFB: removed unused var
MFH: removed unused var
Removed unused variable
bug #46837 fix
bug #46837 fix
bug #46837 fix
bug #46884 fix
bug #46884 fix
bug #46884 fix
BFN
MFH: fix bug #46849 (Cloning DOMDocument doesn't clone the properties) fix some warnings add test
fix bug #46849 (Cloning DOMDocument doesn't clone the properties) fix some warnings add test
ChangeLog update
call_user_func_array() tests
call_user_func_array() tests
call_user_func_array() tests
fixed test
fixed test
fixed test
initialize op2
initialize op1
Add find_tested script to 5_2 branch (for use by gcov.php.net)
New testcases for gmdate function
New testcases for gettimeofday function
ChangeLog update
MFB: If a wrapper could not be found it is either a typo or a configuration issue. But in both cases it is critical enough to warn the user. [DOC] (?)
If a wrapper could not be found it is either a typo or a configuration issue. But in both cases it is critical enough to warn the user.
- fix build
- fix build
MFB: simplify code
Simplify code
ChangeLog update
MFH (Use the same test fiel as in HEAD)
MFB: Remove trailing whitespaces
Cleanup: remove trailing whitespaces
One len variable is enough here, we can reuse it
MFH Use ' -f' as requested
Use ' -f' as requested
Add CVE
- MFB: do not add .cvsignore to the tests package
- MFB: fix builds for VC8+, strnlen is available in vc8 and later (used in spprintf.c)
- fix builds for VC8+, strnlen is available in vc8 and later (used in spprintf.c)
- do not add .cvsignore to the tests package
Already in 5.2 NEWS
ChangeLog update
MFH
MFB
we do not need the strndup() now that php_stream_printf() handles non-null terminated strings correctly
make *printf() functions do not read strings past their specified length (if any)
BFN
MFH
Add sort flags parameter to array_unique().
BFN
fix test
- late MFB (sry): fix VC6 build
fix entry
BFN
MFH: fix bug #46699: (xml_parse crash when parser is namespace aware) fix a couple warnings add test
MFH: fix bug #46699: (xml_parse crash when parser is namespace aware) fix a couple warnings add test
fix bug #46699: (xml_parse crash when parser is namespace aware) fix a couple warnings add test
ChangeLog update
- MFB: fix build
- MFB: fix build
- fix build (all platforms)
- MFH: fix build (was never used like that before recent commit to session) > local include use quotes not <>
- MFH: fix build (was never used like that before recent commit to session) > local include use quotes not <>
- fix build (was never used like that before recent commit to session) > local include use quotes not <> (nb: please test before commit)
Added test for magic_quotes_gpc
Added test for magic_quotes_gpc
add missing .cvsignore
add missing .cvsignore
MFH
rename .php to .inc all .php files are deleted on `make clean`
MCrypt tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows and Linux but not Linux 64 bit or 5.3).
- WS
MCrypt tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows and Linux but not Linux 64 bit or 5.3).
MCrypt tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows and Linux but not Linux 64 bit or 5.3).
- WS
BFN
ChangeLog update
BFN
- ws
- ws
- ws
BFN
Tests for bug #43841 and #45923
Test for bug #43841
MFB: export pcre API when using gcc 4
export the pcre API when compiling with gcc 4. this fixes e.g. the linkage of APC (reported by shire)
- mfb: c/p error
- c/p error.
ChangeLog update
MFH: fixed test
MFH: fixed test
fixed test
update PCRE symbol list (sync with php 5.3). this should fix bug #46800
- fix EOL (which makes on bison 1.7 cry), nb: pls use unix EOL on mac
- double declaration and comments cleanup
- fix VC6 build
Comment out fprintf() use inside the library
MFH
MFH:- Better descriptions for these tests
- Better descriptions for these tests
MFH: fix tests
MFH: fix tests
MFH
MFH
- Use version id instead of defined() since latter does not work with magic constants
- fix tests
fix test
fix test
- MFH: silent conversion warnings as it is not going to be "fixed" any time soon, removing false positive alerts. noise--;
- silent conversion warnings as it is not going to be "fixed" any time soon, removing false positive alerts. noise--;
Deprecate session_register(), session_unregister() and session_is_registered() (removed in HEAD)
fix resource id
fix resource id
fix resource id
MFH: fix test
ini_set() should return false on failure, not return the orginal value and pretend everything is fine.
MFH
MFH
- cat, tail, lift :)
style
Whoops. Missing bit from the open_basedir tightening MFH
MFB: Add test for runtime tightening of open_basedir
MFH: - Changed open_basedir to allow tightening in runtime contexts. (Sara) - Add test
BFN
- not used anymore
MFH: - Changed opendir/dir/scandir to use default context when no context argument is passed. (Sara)
- Remove items that already done in earlier branches - It doesnt hurt to say what new functions do
MFB 5.3 Add test for the recent magic_quotes_gpc regression.
Add test for the recent magic_quotes_gpc regression.
ChangeLog update
- MFH:  - buildconf accepts arguments (pecl dir for ex.)  - copy configure.bat
- MFH:  - buildconf accepts arguments (pecl dir for ex.)  - copy configure.bat
- buildconf accepts arguments (pecl dir for ex.) - copy configure.bat
- MFH: add configure script
- MFH: add configure script
- add configure script helper
remove unused file to avoid confusion
tests for imap_fetch_overview
tests for imap_fetch_overview
tests for imap_fetch_overview
- Sync with all branches (same run-tests.php everywhere
- Sync with HEAD
- Sync with HEAD
New testcases for idate function
New testcases for idate function
improve windows version detection
improve Windows version detection
ChangeLog update
- MFH Only show switch -y if available
- Only show switch -y if available
- When installing phar, make phar a link to phar.phar
- MFH When installing phar, make phar a link to phar.phar
fix .cvsignore
Back to dev
5.2.8
5.2.8
Move active branch to 5.2.9
ChangeLog update
MFB: Back out bugfix for #42718 as this broke magic_quotes_gpc
Back out bugfix for #42718 as this broke magic_quotes_gpc
- MFH Remove more dead code
- Remove more dead code
- MFH Drop dead code
- Drop dead code
More changes to allow the same tests to be used with PHP5 and PHP6
More changes to allow the same tests to be used with PHP5 and PHP6
More changes to allow the same tests to be used with PHP5 and PHP6
ChangeLog update
Add some class related tests, fix hard-coded object ID in serialize_001.phpt.
Add some class related tests, fix hard-coded object ID in serialize_001.phpt.
Add some class related tests, fix hard-coded object ID in serialize_001.phpt.
MFH: fix arginfo - these also accept SimpleXMLElement
MFH: fix arginfo - these also accept SimpleXMLElement
fix arginfo - these also accept SimpleXMLElement
FTP  test from Nathaniel McHugh
FTP  test from Nathaniel McHugh
FTP  test from Nathaniel McHugh
Remove duff comment produced by the test generator tool
Remove duff comment produced by the test generator tool
Remove duff comment produced by the test generator tool
Array tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
MBString tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
MBString tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
MBString tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
MBString tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
Array tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
bug #46731 fix
bug #46731 modification to previous fix
Added test for bug #46739
Added test for bug #46739
Update to use norsh flag
Update to use norsh flag
Update to use norsh flag
New testcases for date_sunset function
New testcases for date_sunrise function
ChangeLog update
fix test
*** empty log message ***
*** empty log message ***
ChangeLog update
fix test
Back to -dev
fix vi user error
5.3.0. Alpha 3
MFH One more cleanup after running tests
One more cleanup after running tests
XML tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
XML tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
XML tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
bug #46731 modification to previous fix
- Coverage++
- Coverage++
- Coverage++
Back to dev
PHP 5.2.7
Add support for %u|b% and %unicode_string_optional% to facilitate writing tests compatible with both 5_2 and HEAD.
MBString tests: checked on PHP 5.2.6 (Windows, Linux and Linux 64 bit).
Put bug number in the XFAIL section for cross referencing
Put bug number in the XFAIL section for cross referencing
BFN, just some missing NEWS entries
Update credits
Update credits
Cleanup after running the tests ...
Cleanup after running the tests ...
MFH
- BFN
fix possible invalid read
Delete duff commit files
ChangeLog update
MFB (1.82.2.31.2.17.2.10): "Added a warning message on pdo::exec() failure in the event of an empty query"
#- Updated NEWS file
- MFH: Implemented http://wiki.php.net/rfc/rounding
- Implemented http://wiki.php.net/rfc/rounding
- MFH: Changed floating point behaviour to consistently use double precision   on all platforms and with all compilers.
- Changed floating point behaviour to consistently use double precision on   all platforms and with all compilers.
MFH: Changed logic for LONG_MIN
MFH: Changed logic for LONG_MIN
Changed logic for LONG_MIN
Array tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
Array tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
Array tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
- MFB: export php_scandir and php_alphasort correctly (used by APC for example)
- export php_scandir and php_alphasort correctly (used by APC for example)
ChangeLog update
MFH: hash_insert was renamed in MySQL 5.0 so we can safely use recode and mysql      with recent libmysql versions [DOC]
- hash_insert was renamed in MySQL 5.0 so we can safely use recode and mysql   with recent libmysql versions [DOC]
Adding tests for array_multisort
Adding tests for array_multisort
Adding tests for array_multisort
Exif tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
Exif tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
Exif tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
DOM tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
DOM tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
DOM tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
remove unneeded includes (not needed since NSAPI 3.0, wich is very old). This is needed for cleanup of the windows build.
remove unneeded includes (not needed since NSAPI 3.0, wich is very old). This is needed for cleanup of the windows build.
remove unneeded includes (not needed since NSAPI 3.0, wich is very old). This is needed for cleanup of the windows build.
ChangeLog update
- c/p fix, correct description
- c/p fix, correct description
- c/p fix, correct description
- MFB:  Enable fix fo #42862 (IMAP toolkit crash: rfc822.c legacy routine buffer overflow) on windows (we use the latest imap)
- MFB:  Enable fix fo #42862 (IMAP toolkit crash: rfc822.c legacy routine buffer overflow) on windows (we use the latest imap)
- Enable fix fo #42862 (IMAP toolkit crash: rfc822.c legacy routine buffer overflow) on windows (we use the latest imap)
- fix line ending
- fix line ending
- fix line ending
- #44900
- #44900, OpenSSL extension fails to link with OpenSSL 0.9.6 (5.2 only, 5.3+ requires a decent version)
BFN
Update ReflectionProperty::setAccessible() entry.
ChangeLog update
MFH: support stat cache of webserver (like apache does)
MFH: support stat cache of webserver (like apache does)
support stat cache of webserver (like apache does)
MFH: Some nsapi.h specific ifdefs unified & corrected (same like last commit, only cleanup)
MFH: Some nsapi.h specific ifdefs unified & corrected
Some nsapi.h specific ifdefs unified & corrected
MFH: remove one stat call and replace by cached one (release-manager: the same like with last commit)
MFH: remove one stat call and replace by cached one
remove one stat call and replace by cached one
Hallo release manager: This patch is not release critical (affects only NSAPI, but I want it to be fixed in the last version of PHP 5.2). If you do not want to have it in, revert it, a new RC is definitely not needed because of this (and I am sure nobody who tests RCs is using NSAPI :)!
MFH: - Implement the changes needed for http://news.php.net/php.cvs/54228 - Additionally implement flushing in NSAPI and fix some small things
- Implement the changes needed for http://news.php.net/php.cvs/54228 - Additionally implement flushing in NSAPI and fix some small things
ChangeLog update
report fix
MFB: init BG(page_uid) and BG(page_gid)
MFB: init server context before config variables are processed
MFB: init server context before config variables are processed
MFB: init BG(page_uid) and BG(page_gid)
properly initialize BG(page_uid) and BG(page_gid)
init SG(server_context) before processing configs
MFH: Change to zend_parse_parameters
Change to zend_parse_parameters
MFH: New param parsing for ext/mysql
New param parsing for ext/mysql
MFH: Updated description to match docs
MFH: Updated description to match docs
Updated description to match docs
Committing include files required for tests. Tests and bug reports to follow.
Committing include files required for tests. Tests and bug reports to follow.
Committing include files required for tests. Tests and bug reports to follow.
MFH: No infinite loop in case the connection broke
No infinite loop in case the connection broke
Last file..
- remove this too
Language tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
Language tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
Language tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
ChangeLog update
report fix
- MFH: fix build
- fix build..
Back to dev
5.2.7RC5
MFH Move mhash extension registration code into the hash module startup. This allows extension_loaded('mhash'); to work.
Move mhash extension registration code into the hash module startup. This allows extension_loaded('mhash'); to work.
MFH Add asprintf, use regular system malloc and free and add checks in configure.in for the functions
Add asprintf, use regular system malloc and free and add checks in configure.in for the functions
Updated NEWS file with CVE #s
Directory tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
Directory tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
Directory tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
Latest and greatest versions of these session tests - checked on 5.2.X snap on Windows, Linux and Linux 64 bit.
Latest and greatest versions of these session tests - checked on 5.2.X snap on Windows, Linux and Linux 64 bit.
Latest and greatest versions of these session tests - checked on 5.2.X snap on Windows, Linux and Linux 64 bit.
Latest and greatest versions of these session tests - checked on 5.3 snap on Windows, Linux and Linux 64 bit.
Latest and greatest versions of these session tests - checked on 6.0 snap on Windows, Linux and Linux 64 bit.
MFH Update libsqlite to 3.6.6.2
Update libsqlite to 3.6.6.2
- MFH: New parameter parsing API
- New parameter parsing API
ChangeLog update
File system tests: checked on PHP 6.0 latest snap (Windows, Linux and Linux 64 bit) - there are quite a large number of failing test cases (all marked with an XFAIL section), they wiill have bugs raised to cover the issues real soon now...
fix test
fix test
- New test
- New test
File system tests: checked on PHP 5.3 (Windows, Linux and Linux 64 bit).
MFH: Missed file from commit for #44181 & #44182
MFH: Missed file from commit for #44181 & #44182
Missed file from commit for #44181 & #44182
[DOC] Added ENT_IGNORE as a compatibility flag for htmlentities() and htmlspecialchars() to skip multibyte sequences intead of returning an empty string (as iconv's //IGNORE). These functions will still never return an invalid or incomplete multibyte sequence. Example: htmlspecialchars("...", ENT_QUOTES | ENT_COMPAT, "utf-8");
MFB 5.2
MFB 5.2
ChangeLog update
cleanup from ::->\ change
MFB: Upgraded bundled sqlite to version 3.6.6.1.
Upgraded bundled sqlite to version 3.6.6.1
cleanup
cleanup
fix tests for array/object BC
File system tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit). There seems to be an issue with trailing slashes on 5.2.7 RC1 which may cause some tests to fail...
Added support for namespaces with brackets. (Greg)
ChangeLog update
MFB: fix php_value application order for Apache
MFB: fix php_value application order for Apache
fix php_value application order for Apache
*** empty log message ***
MFB: restore BC for arrays
add object-compatible array modes
MFH
MFH
add object-compatible array parameters
restore BC for arrays [DOC] natsort, natcasesort, usort, uasort, uksort, array_flip, array_unique still won't work with objects
add object-compatible array modes
Adding some tests for array_product
MFH: Revert fix for 43782, as it caused problems.
MFH: Revert fix for 43782, as it caused problems.
Revert fix for 43782, as it caused problems. [DOC] We better document the issue at it is.
- Keep the style ;)
ChangeLog update
- MFH: New parameter parsing API
- New parameter parsing API
ChangeLog update
- declaration first (fix build win)
- Removed the "unreleased-fix-feature" entry as per Marcus's request - Made sure to include my PDO fix in the proper 5.3 release
MFH Patch file for sqlite3 amalgamation so things don't get missed.
Patch file for sqlite3 amalgamation so things don't get missed.
MFH Better fix for va_copy since some architectures like to do a deep copy.
Better fix for va_copy since some architectures like to do a deep copy.
- Removed my duplicate news entry
- Added the fixed bug #46615
- Added news item for bug #46615
- MFH - Bug #46615 - Return the count - 1 when invoking SplHeap->key() - Adjusted the tests
- Return the key - 1 - Bug #46615
- Added tests for bug #46615 (Adjustments)
- MFB: make va_copy safer using () around arguments
- make va_copy safer using () around arguments
MFH Error handler isn't properly restored when using fetchObject() with SQLite
Error handler isn't properly restored when using fetchObject() with SQLite
- BFN
MFH Update libsqlite to 3.6.6
Update libsqlite to 3.6.6
MFH Warnings from libmagic should be notices rather than sent to stderr, this fixes a test on Windows
Warnings from libmagic should be notices rather than sent to stderr, this fixes a test on Windows
ChangeLog update
- Missing SKIPIF :(
- Missing SKIPIF :(
- Missing SKIPIF :(
MFH Add vasprintf() so the buffer can be automatically calculated, you need to efree this when done though!
Add vasprintf() so the buffer can be automatically calculated, you need to efree this when done though!
- New tests
- New tests
- New tests
- New tests
- New tests
- New tests
- BFN #46578
MFH
- Nuke unused file
- MFH:  - expose PHP_BUILD in the Makefile  - ICU 3.8/4.0 are dynamically linked, add $PHP_BUILD\bin to the PATH so php.exe can find them (nmake test, nmake snaps)
- MFH: add build type (debug/release) and TS info to the summary
- expose PHP_BUILD in the Makefile - ICU 3.8/4.0 are dynamically linked, add $PHP_BUILD\bin to the PATH so php.exe can find them (nmake test, nmake snaps)
- add build type (debug/release) and TS info to the summary
Adding some tests for array_product
New testcases for gmmktime function
New testcases for gmmktime function
ChangeLog update
Back to dev
5.2.7RC4
- Changed split() to preg_split()
- Changed split() to preg_split()
- BFN
- BFN
mysqlnd fixes for Windows : - less warnings - PHPAPI for mysqlnd_poll
MFH: Windows fixes for mysqlnd Less warnings + PHPAPI for mysqlnd_poll
- MFH: ext/wddx: classes providing __sleep() are stored without properties (fixed) - ext/wddx: fixed wddx_add_vars() ignoring first var in php 5.3
Adding some tests for array_product
- MFB: ext/wddx: fixed test 003 which depended on arch (32bits vs 64bits)
- ext/wddx: fixed test 003 which depended on arch (32bits vs 64bits)
- MFH: Added ZEND_FETCH_RESOURCE_NO_RETURN
- MFH: Added ZEND_FETCH_RESOURCE_NO_RETURN
- Added ZEND_FETCH_RESOURCE_NO_RETURN
- MFH: ext/wddx: classes providing __sleep() are stored without properties (fixed)
- ext/wddx: classes providing __sleep() are stored without properties (fixed)
- MFH: #46496, wddx_serialize treats input as ISO-8859-1 (Mark Karpeles)
- MFB (PHP_5_2): #46496, wddx_serialize treats input as ISO-8859-1 (Mark Karpeles) # - The tests are failing for now (not handling PHP6 specific string types), this will be fixed in a few days
- MFH: declarations must be.. 1st
- declarations must be.. 1st
ChangeLog update
Proper bug id
CS
CS
- #46497
- #46497, wddx_serialize treats input as ISO-8859-1 (Mark Karpeles)
- new naming and allow libcurl static build - c/p error for zlib
- new naming and allow libcurl static build
typo
ChangeLog update
MFB: new parameter-parsing api
new parameter-parsing api
- mac eol to win eol
- Deprecate ereg
MFH: Asynchronous queries for mysqli, when mysqlnd is enabled. Includes 4 tests for mysqli_poll
Asynchronous queries for mysqli, when mysqlnd is enabled. Includes 4 tests for mysqli_poll
Reflection tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
Reflection tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
Reflection tests: checked on PHP 5.2.6, 5.3 and 6.0 (Windows, Linux and Linux 64 bit).
- MFH: declaration has to be first...
- declaration has to be first...
- #41033
- mfb: fix title
- MFB: #41033, enable signing with DSA keys
- MFB: fix title
- fix title
- MFH: #41033, enable signing with DSA keys
- #41033, enable signing with DSA keys
ChangeLog update
More detailed bug fix description
MFH: - Changed 'strlen' to use ZEND_FUNCTION(strlen) - Removed duplicated arginfo structs
- Changed 'strlen' to use ZEND_FUNCTION(strlen) - Removed duplicated arginfo structs
Missed test for previous commit
MFH Add openssl_random_pseudo_bytes() in order to expose access to a PRG, this wraps around whatever the OS provides.
Add openssl_random_pseudo_bytes() in order to expose access to a PRG, this wraps around whatever the OS provides.
Improve use syntax [DOC] use \foo\bar is the same as use foo\bar
MFH Sync libsqlite to 3.6.5
Sync libsqlite to 3.6.5
MFH: Feature request #46595. Use cc as default compiler and fallback to gcc.
Feature request #46595. Use cc as default compiler and fallback to gcc. [DOC]
Commit tests for ext/reflection
Commit tests for ext/reflection
- MFH: Added 'static' into ZEND_BEGIN_ARG_INFO_EX macro
- Added 'static' into ZEND_BEGIN_ARG_INFO_EX macro (again!)
Commit tests for ext/reflection
ChangeLog update
- MFB: skip if pcntl is not present
- MFB: skip if pcntl is not present
- skip if pcntl is missing
- entry for #46127
- MFH: #46127, php_openssl_tcp_sockop_accept forgets to set context on accepted stream
- MFH: manage references of stream context properly (Tony) - add tests for bug #46127
- #46127, php_openssl_tcp_sockop_accept forgets to set context on accepted stream
ChangeLog update
MFH: Added stream_cast() and stream_set_options() to user-space stream wrappers, allowing stream_select(), stream_set_blocking(), stream_set_timeout() and stream_set_write_buffer() to work with user-space stream wrappers. Will document.
Added stream_cast() and stream_set_options() to user-space stream wrappers, allowing stream_select(), stream_set_blocking(), stream_set_timeout() and stream_set_write_buffer() to work with user-space stream wrappers. Will document.
ChangeLog update
MFH: Interfaces extend other interfaces, not implement
Interfaces extend other interfaces, not implement
New testcases for gmdate function
New testcases for gmdate function
ChangeLog update
- MFH: Better fix
add error_log change
Add option to send error_log directly to SAPI
MFH: Document the xmlrpc_errors option
MFH: Document the xmlrpc_errors option
Document the xmlrpc_errors option, it is totally unrelated to the extension
MFB - Add error_log option to log directly to SAPI
[DOC] Add option for error_log to send directly to SAPI logger
- MFH: Better fix
- Better fix
- Reverted last change, only in this branch
- MFH: declaration goes first...
- declarations go first....
MFB: Updated header_handler in apache2filter and apache_hooks
Updated header_handler in apache2filter and apache_hooks
MFB: Added header_remove() (chsc at peytz dotdk, Arnaud)
Added header_remove() (chsc at peytz dotdk, Arnaud)
MFH: Added stream_context_get_params()
Added stream_context_get_params() [DOC] proto bool stream_context_get_params(resource context|stream)       Get parameters of a file context (parameters set by       stream_context_set_params())
ChangeLog update
- MFH: Removed unused variables
- MFH: Removed unused variables
- Removed unused variables
- Silent valgrind
- update NEWS for #14962
- MFH:  - #14962, makes extractTo 2nd argument really optional  - replace ZEND_ENGINE_2_1 by PHP_ZIP_USE_OO  - sync tests
- MFH:  - #14962, makes extractTo 2nd argument really optional  - replace ZEND_ENGINE_2_1 by PHP_ZIP_USE_OO
- fix #14962 (makes 2nd argument really optional) - replace ZEND_ENGINE_2_1 test with PHP_ZIP_USE_OO, version independent - sync tests with 5.3
- not necessary anymore
make sure the slash is actually thre before reading past it
ChangeLog update
fix potential crash in zend_do_assign due to opcodes realloc
fix crash - using old opline after realloc
Removed unused vars
fix memleak
Namespace resolution streamlining patch [DOC] new resolution rules should be documented soon
some new tests
- MFH: New parameter parsing API
- New tests
- New parameter parsing API
- New tests
- New test
- New test
- BFN #46543
- MFH: fix build with all curl versions, even very old (thx Felipe for having found all versions info)
- fix build with all curl versions, even very old (thx Felipe for having found all versions info)
fix build
fix build
ChangeLog update
- MFH: make the curl phpinfo more verbose
- make the curl phpinfo more verbose
- Make expected result compatible with recent Firebird version
- Make expected result compatible with recent Firebird version
- Make expected result compatible with recent Firebird version
MFH: State that bugs should be sorted desc.
State that bugs should be sorted desc.
- MFB (Which was an MFH) - Bug #44153 (ErrorCode returns NULL when no error) - Bug #44154 (ErrorInfo to ALWAYS have 3 elements)
MFH: Remove unneeded cast
Remove unneeded cast
(MFB because I'm a bad person) test to ensure that ArrayObject can act as an array
add test for ArrayObject acting as array (for 5.3)
- Added resolution of bug #44153, #44154
- After readying Johannes's mail, the conclusion that a "smarter" system   to find out if the return_value had the correct number of elements was   definitely needed. Simply added a difference to both dbh and stmt to   make sure that the error info always has 3 elements.
- Make test conform to the error reporting that always returns   three elements. Adjusted all bugs and tests that were using   errorInfo() and errorCode() (dbh & stmt)
- New tests
- New tests
- New tests
- Reverted my last commit # See http://news.php.net/php.cvs/54140
- Removed notes about fixes to sybase_ct that are already announced in PHP 5.2 news
- Hrphm, sorry about that, forgot the array value. Now the test runs fine
- Adjusted test to make sure it reflects the behavior of the method
- MFH: Make it work with bison 2.4.
- Make it work with bison 2.4.
- Make it work with bison 2.4.
- Documented changes / fixes to sybase_ct # MFB, all also in PHP_5_3
- MFB: Made this test independent of field types in master..sysprocesses # char on ASE 11, varchar on ASE 15
- MFB: Made this test independent of date format
- Adjusted tests to reality # We select 123456789.12345679, we should have this returned and not # something 123456789.123457 (rounded)
- MFB: Changed source to read host, user and password from environment # E.g. nmake test TESTS=ext/sybase_ct PHP_SYBASE_HOST=db PHP_SYBASE_USER=sa PHP_SYBASE_PASS=***
- MFB: Initial release
- New tests
- New tests
- Documented sybase_connect()'s new optional parameter 'new'
- Added test for optional parameter "new" to sybase_connect()
- Added optional parameter "new" to sybase_connect # [DOC] If a second call is made to sybase_connect() with the same arguments # no new link will be established, but instead, the link identifier of the # already opened link will be returned. The new parameter modifies this # behavior and makes sybase_connect() always open a new link, even if # sybase_connect() was called before with the same parameters.
New testcases for date_sunset function
New testcases for date_sunset function
MFH
credits
MFH: Added the oldset parameter to pcntl_sigprocmask(). Already documented.
Added the oldset parameter to pcntl_sigprocmask(). Already documented.
New testcases for date_sunrise function
New testcases for date_sunrise function
ChangeLog update
MFH
PHP 4.4 is no longer active, clarify that all changes should go to HEAD first and that NEWS entries should only go into one branch
- Initial release
- Initial release
- Initial release
- Added note on bugfix for #30312 - Added entry on CS_ROW_FAIL patch fix
- Added note on bugfix for #30312 - Added entry on CS_ROW_FAIL patch fix
- Added test for sybase_free_result() without full fetch
- Initial release # Tests sybase_unbuffered_query() together with sybase_free_result()
ChangeLog update
Potential fix for bug #46525
- MFH: Added connection checking on SKIPIF
- MFH: Added connection checking on SKIPIF
- Added connection checking on SKIPIF
- MFB: Initial release
- Adjusted tests to reality # We select 123456789.12345679, we should have this returned and not # something 123456789.123457 (rounded)
- MFB: Made this test independent of date format
- Adjusted tests to reality # We select 123456789.12345679, we should have this returned and not # something 123456789.123457 (rounded)
- Made this test independent of date format
- Initial release
- QA: Unified error messages in php_sybase_query()
- MFB: Changed while loop in php_sybase_fetch_result_row() to also read rows with   retcode == CS_ROW_FAIL. # Reported by Detlef Neumerkel and Frank Irnich of Sybase
- Changed while loop in php_sybase_fetch_result_row() to also read rows with   retcode == CS_ROW_FAIL. # Reported by Detlef Neumerkel and Frank Irnich of Sybase
- MFB: Made this test independent of field types in master..sysprocesses # char on ASE 11, varchar on ASE 15
- Changed source to read host, user and password from environment # E.g. nmake test TESTS=ext/sybase_ct PHP_SYBASE_HOST=db PHP_SYBASE_USER=sa PHP_SYBASE_PASS=***
- Changed source to read host, user and password from environment # E.g. nmake test TESTS=ext/sybase_ct PHP_SYBASE_HOST=db PHP_SYBASE_USER=sa PHP_SYBASE_PASS=***
- Made this test independent of field types in master..sysprocesses # char on ASE 11, varchar on ASE 15
fix more invalid reads
MFH: Support versions of valgrind from SVN. The version is shown as 3.4.0.SVN
ChangeLog update
MFB: new parameter-parsing API
new parameter-parsing API
- MFB: fix VC6 build, use our own strtoi64 implementation for VC6
- MFB: strtoi64 forward compatible replacement for VC6
MFB fix VC6 build
MFB: new parameter-parsing API
new parameter-parsing API
MFH: New parameter parsing API
New parameter parsing API
fix typo causing invalid reads
added const, as required by struct-definition
ChangeLog update
Use right format
Refer to a feature request that contains a better description of the flags
Back to dev
5.2.7RC3
MFB: Added the "update INSTALL and win32/install.txt" tasks
Added the "update INSTALL and win32/install.txt" tasks
MFH: Detect Sun C compiler and set default flags if it is used
Detect Sun C compiler and set default flags if it is used
MFB: More Windows types cleanup
More type fixes for Windows
- fix build
MFH: Use win32/php_stdint.h for stdint types on Windows
Rely on win32/php_stdint.h on Windows for stdint types
- MFH, has this feature before Vista/2k8 (use the same test in 5.3)
- prevent warning when some types or macros are already defines (ICU defines many of them already)
- MFH  - add 64bit typedef support  - fix vc6 build (1/2)  - still broken/does not build cleanly, more to come
- revert previous commit (borked editor)
- revert previous commit (borked editor)
- MFB: bump year
- bump year
MFH: More cleanup of config-win.h
More cleanup of config-win.h and missed merge, which actually occured in 5_3
MFH: Don't enable mysqlnd when pdo_mysql is being built with libmysql
Don't enable mysqlnd when pdo_mysql is being built with libmysql
MFH: Get rid of many defines (which simplifies the code a lot), as well as uint->unsigned int
Get rid of many defines (which simplifies the code a lot), as well as uint->unsigned int
- typo
- fix build on linux (static) - add gd[Format]Version[Int|String] first methods to work around the png   header issues
- MFH: Export DateTime and DateTimeZone class entries so that external   extensions can make use of it as well.
- Export DateTime and DateTimeZone class entries so that external extensions   can make use of it as well.
MFH: Support versions of valgrind from SVN. The version is shown as 3.4.0.SVN
Support versions of valgrind from SVN. The version is shown as 3.4.0.SVN
- Reorder
BFN #45166
ChangeLog update
Add references to #46421 #45976
sync zend_ini_scanner.c
sync zend_ini_scanner.c
MFH: Added parse_ini_string() function (grange at lemonde dot fr, Arnaud) [DOC] new function parse_ini_string()       proto array parse_ini_string(string ini_string           [, bool process_sections [, int scanner_mode]])       Same as parse_ini_file() except that it takes a string instead of a       filename.
Added parse_ini_string() function (grange at lemonde dot fr, Arnaud) [DOC] new function parse_ini_string()       proto array parse_ini_string(string ini_string           [, bool process_sections [, int scanner_mode]])       Same as parse_ini_file() except that it takes a string instead of a       filename.
MFH: New tests for syslog
MFH: New tests for syslog
New tests for syslog
MFH
typo fix (thx chris jones for spotting)
ChangeLog update
fixed ext/msql NEWS entry
MFH
added note about running scripts/dev/credits
ext/msql is now in PECL starting alpha3 [DOC]
MFH
ext/msql has been moved from php-src to PECL adhead of PHP 5.3
Test - if this works, something is wrong.
BFN
MFH: initialize memory
MFH: initialize memory
initialize memory
- MFH: add png and jpeg version info
- add png and jpeg version info
- MFH - Bug #44154: [DOC] Return 3 elements at all times. If the dbh stmt doesn't have   an error code we used to return an array with one element. For the sake   of consistency and verification of returned values at userland we are now   returning an array with 3 elements. Note the two last elements are null but   present
- Bug #44154: [DOC] Return 3 elements at all times. If the dbh stmt doesn't have   an error code we used to return an array with one element. For the sake   of consistency and verification of returned values at userland we are now   returning an array with 3 elements. Note the two last elements are null but   present
ignore stuff that clutters cvs diffs
MFH: Avoids fclose() from complaining that stream_socket_pair() streams have not been closed
MDH: Avoids fclose() from complaining that stream_socket_pair() streams have not been closed
Avoids fclose() from complaining that stream_socket_pair() streams have not been closed
- Next step in namespaces, using / as namespace separator.
- MFH We only rely on hash if it is built-in
- MFH Add hash dependency at module source level
- sync tests with pecl
ChangeLog update
- MFB dos2unix
- Cleanup
- MFH: Improved fix
- MFH: Improved fix
- Improved fix
cleanup
cleanup
cleanup
- New test
- New test
- New test
MFH: Use a better function name for closure related errors and debug_backtrace()
MFH
Use a better function name for closure related errors and debug_backtrace()
MFH
Actual name of the file is WinResRc.h - silly to make people rename their header files
credit
- Opss, reverted accidental changes
ChangeLog update
sync zend_ini_scanner.c
Add some missing news entries
- Revert ZEND_BEGIN_ARG_INFO change
- Revert ZEND_BEGIN_ARG_INFO change
fix build
MFH: XFAIL test for bug #46196 on restore_error_handler().
XFAIL test for bug #46196 on restore_error_handler().
- Backported str_getcsv() into 5.3
- Remove str_getcsv() entry. (Backported to 5.3)
- MFH: Added str_getcsv()
- New test
MFH: Sync libmagic with 4.26 and add support for the new v6 magic file format
Update libmagic to 4.26 and add support for v6 of the magic file format.
- Ignore crap
- Done in 5.2.7
MF53: added missing constants
ChangeLog update
MFH: fixed the macros
MFH
MF53: Sync with HEAD and PHP_5_3
[DOC] MF53: Forward compatibility
ChangeLog update
MFB: 64bit fixes: - fixes to sprintf modifiers, cleaning warnings - use _t types, like uint64_t instead of uint64, thus skipping series of typedefs.
64bit fixes: - fixes to sprintf modifiers, cleaning warnings - use _t types, like uint64_t instead of uint64, thus skipping series of typedefs.
ChangeLog update
- New test
- Improved test
MFH: #44938
MFH: #44938
The real fix for the gettext overflow bug  - The overflow issue was not limited to domains, but also present for msgids  - [DOC] msgids are now limited to 4096 chars, domains to 1024
- had nothing else to do :)
New testcases for gettimeofday function
New testcases for gettimeofday function
fix test
ChangeLog update
MFH: Tests for SQLite3Stmt::paramCount().
Tests for SQLite3Stmt::paramCount().
BFN
MFH: fix bug #46406 (Unregistering nodeclass throws E_FATAL)
MFH: fix bug #46406 (Unregistering nodeclass throws E_FATAL)
fix bug #46406 (Unregistering nodeclass throws E_FATAL)
- BFN #46064
MFH: Various tests for the sqlite ext. The sqlite session tests are by Mats Lindh <mats at lindh.no>.
Various tests for the sqlite ext. The sqlite session tests are by Mats Lindh <mats at lindh.no>.
ChangeLog update
NEWS
scottish time variation
scottish time variation
New testcases for array_intersect_uassoc function
New testcases for array_intersect_uassoc function
- Updated to version 2008.9 (2008i)
- Updated to version 2008.9 (2008i)
- Updated to version 2008.9 (2008i)
ChangeLog update
BFN
MFH: Improve test and fix skipif
Improve test and remove the temporary session file created by the skipif check
ChangeLog update
last commit was an old patch, revert faulty line
MFB: fix several errors found by valgrind 1 - entry metadata not properly processed or retrieved from cached phars 2 - copy on write was using a void return value instead of int, a dangerous oversight in phar_update_cached_entry 3 - metadata creation in entries for cached phars was causing an invalid read
fix several errors found by valgrind 1 - entry metadata not properly processed or retrieved from cached phars 2 - copy on write was using a void return value instead of int, a dangerous oversight in phar_update_cached_entry 3 - metadata creation in entries for cached phars was causing an invalid read
- BFN #46389
- MFH: add php-test-pack-[version].zip to nmake snap so we can distribute the tests as single zip   TODO: add run-tests.bat to the package
- add php-test-pack-[version].zip to nmake snap so we can distribute the tests as single zip   TODO: add run-tests.bat to the package
ChangeLog update
add test
add test
fix test
- MFH: Added 'static' into ZEND_BEGIN_ARG_INFO_EX macro
- Added 'static' into ZEND_BEGIN_ARG_INFO_EX macro
- MFH: Added 'static' into ZEND_BEGIN_ARG_INFO_EX macro
- Added 'static' into ZEND_BEGIN_ARG_INFO_EX macro
BFN
fix bug #46381 (wrong $this passed to internal methods causes segfault)
- MFH: Removed unnecessary check for array (#46273, noticed by serovov at gmail dot com)
- MFH: Removed unnecessary check for array (#46273, noticed by serovov at gmail dot com)
- Removed unnecessary check for array (#46273, noticed by serovov at gmail dot com)
ChangeLog update
Back to dev
5.2.7RC2
- MFB: flatten path and make them relative before extraction
BFN moved to PHP_5_2
BFN
- BFN #43925
- It is past, not command. Reorder.
- entries for zip changes
- remove unused files
- add missing files
- MFH  - Update ziplib  - flatten path and make them relative before extraction  - remove unnecessary export
- flatten path and make them relative before extraction - remove unnecessary export
ChangeLog update
MFB: revert define() fix for now
Revert define() fix, it needs further review
fix instantclient detection
fix instantclient detection
MFH: When using the internal database and there is an error it could try free some invalid things. This was causing a bus error on ppc.
When using the internal database and there is an error it could try free some invalid things. This was causing a bus error on ppc.
New PHP testcases for array_diff_ukey function
New PHP testcases for array_diff_ukey function
ChangeLog update
MFH: initialize optional vars
initialize optional vars
Already in 5.2
MFH: initialize optional vars
initialize optional vars
initialize optional vars
BFN moved to PHP_5_2
MFB: skip tests on systems without fnmatch() function (f.e.: old darwin)
skip tests on systems without fnmatch() function (f.e.: old darwin)
MFB: proper check for php-version
proper check for php-version
MFB: these tests work just fine on macos-x
these tests work just fine on macos-x
fixed wrong check for version
Committing test for till
Committing test for till
Committing test for till
typo
ChangeLog update
BFN
MFH: fix bug #46323 (compilation of simplexml for NetWare breaks)
MFH: fix bug #46323 (compilation of simplexml for NetWare breaks)
fix bug #46323 (compilation of simplexml for NetWare breaks)
WS
Better fix for #46313
- add strto*i64 (VC6, decent compilers/crt have them)
- add strto*i64 support (VC6 only, decent compilers/crt have them)
- support for VC6 and some other platforms (before some other cleanup)
BFN
MFH: fix bug #46335 (DOMText::splitText doesn't handle multibyte characters) add test
MFH: fix bug #46335 (DOMText::splitText doesn't handle multibyte characters) add test
fix bug #46335 (DOMText::splitText doesn't handle multibyte characters) add test
ChangeLog update
Add %S and %A to EXPECTF, they work like %s and %a but match empty strings, too
Add %S and %A to EXPECTF, they work like %s and %a but match empty strings, too
Add %S and %A to EXPECTF, they work like %s and %a but match empty strings, too
Link to spl iterator
MFH: fix mysqlnd detection
fix mysqlnd detection
MFH: Don't dereference NULL-pointer
Don't dereference NULL-pointer
ChangeLog update
revert the patch, it's not needed in this branch
ChangeLog update
MFH: fix memleak
MFH: fix memleak
fix memleak
Replacing explicit object ID with %d
Replacing explicit object ID with %d
missed one!
Replacing explicit object ID with %d
Committing for Robin Fernandes
Committing for Robin Fernandes
Committing for Robin Fernandes
ChangeLog update
Use PHP_DEP_FE instead of throwing an E_DEPRECATED manually inside define_syslog_variables() (Thanks Hannes!)
* MFH remainder
* MFH remainder
ws
ws
ws
- Revert
- Revert
Updated functions-signatures (const)
MFB: propagated const, to avoid "discards qualifiers from pointer target type" errors
propagated const, to avoid "discards qualifiers from pointer target type" errors
ChangeLog update
- MFH & BFN
- MFH
MFB: removed dead-code
Removed dead-code
[DOC] Deprecate define_syslog_variables() in 5.3
[DOC] Remove define_syslog_variables() and define_syslog_variables ini option
ChangeLog update
Update NEWS
MFH: Add PDO::MYSQL_ATTR_COMPRESS connection flag [DOC]
Add PDO::MYSQL_ATTR_COMPRESS connection flag
- Added SKIPIF
- Added SKIPIF
Disable optimizations at the moment for libsqlite on VC6 with the amalgamation, will most likely need to track down what particular function is causing problems or consider setting the flags to /O1 for libsqlite specifically.
ChangeLog update
MFB: last test for cached phar copy on write (forgot this one yesterday)
last test for cached phar copy on write (forgot this one yesterday)
- BFN #37100
- Updated to version 2008.8 (2008h)
- Updated to version 2008.8 (2008h)
- Updated to version 2008.8 (2008h)
MFB: increase code coverage
increase code coverage
MFB: add complete tests verifying copy-on-write for cached phars
add complete tests verifying copy-on-write for cached phars
ChangeLog update
MFB: fix faulty tests
fix faulty tests
MFH: fix ZTS build
fix ZTS build
MFB: fix incorrect key for Phar destructor
fix incorrect key for Phar destructor
MFB: add tests for copy-on-write support  - fix metadata handling with cached phars  - fix virtual_dirs with rmdir  - ensure that after copy-on-write, all existing Phar objects link to the newly copied phar data
add tests for copy-on-write support  - fix metadata handling with cached phars  - fix virtual_dirs with rmdir  - ensure that after copy-on-write, all existing Phar objects link to the newly copied phar data
WS
add missing --INI-- section
add missing --INI-- section
re-add as binary
oops, need to add as binary
add missing file for tests
- MFB: Removed unnecessary strcmp call (thanks Tony)
- Removed unnecessary strcmp call (thanks Tony)
- New tests
- MFB: Complete the fix for #46274, and tests
- Complete the fix for #46274, and tests
MFB: add new test for copy-on-write, fix copy-on-write for Phar/PharFileInfo methods
add new test for copy-on-write, fix copy-on-write for Phar/PharFileInfo methods
fix test files
need to re-add as binary
re-add as binary
stupid cvs added this as text
fix files for advanced include_path test
increase code coverage
increase code coverage
ChangeLog update
MFB: fix links for fseek as well
fix links for fseek as well
MFB: fix reading links from streams (works with PharFileInfo->getContent())
fix reading links from streams (works with PharFileInfo->getContent())
MFB: cosmetics/maintainability: reduce code redundancy on error conditions
cosmetics/maintainability: reduce code redundancy on error conditions
MFB: work around crap stream filter implementation, update tests for compressed aliases in zip-based phar so they actually test the compression
work around crap stream filter implementation, update tests for compressed aliases in zip-based phar so they actually test the compression
- BFN: #46274, #46249
MFB fix Bug #46026: bz2.decompress/zlib.inflate filter tries to decompress after end of stream MFB add concatenation option to bz2.decompress stream filter
fix Bug #46026: bz2.decompress/zlib.inflate filter tries to decompress after end of stream [DOC] add concatenation option to bz2.decompress stream filter
fix Bug #46026: bz2.decompress/zlib.inflate filter tries to decompress after end of stream
ChangeLog update
- MFH: add nts postfix to the dist filenames
MFH: Add missing zend_parse_paramters_none() in pdo_drivers()
Add missing zend_parse_paramters_none() in pdo_drivers()
improve OCI detection
improve OCI detection
- Added skipif
- Added skipif
- Added skipif (Opss :))
- New test
- New test
- New test
- MFH: Static'fication
- MFH: Static'fication
- Static'fication
- BFN #46139
backport convenience macro
- BFN: #44251, #41125
ChangeLog update
Back to dev
5.2.7RC1
ChangeLog update
MFB: fix bug #45907: undefined reference to PHP_SHA512Init
note fix to bug #45907: undefined reference to 'PHP_SHA512Init'
fix bug #45907: undefined reference to PHP_SHA512Init
MFB: use proper macro
use proper macro
ChangeLog update
ChangeLog update
MFH: * is_output and is_null parameters are now booleans instead of int in mssql_bind * Added missing conditional from old parameter parsing
* is_output and is_null parameters are now booleans instead of int in mssql_bind * Added missing conditional from old parameter parsing
Removed deprecated usage of zend_get_parameters_ex()
- BFN #45373
- Updated to version 2008.7 (2008g)
- Updated to version 2008.7 (2008g)
- Updated to version 2008.7 (2008g)
ChangeLog update
Moved to NEWS in 5_2
MFH: New parameter parsing API (with lots of help from Felipe)
New parameter parsing API (with lots of help from Felipe)
- MFH: Initialize variable
- Initialize variable
ChangeLog update
ChangeLog update
- MFB: Declarations MUST BE done in the beginning of a context
- Declarations MUST BE done in the beginning of a context
reorder
Adds signal handling around popen/pclose in mail.c. Related information on bugs #8992 and #14032 Original patch by D. Parthey
Adds signal handling around popen/pclose in mail.c. Related information on bugs #8992 and #14032 Original patch by D. Parthey
Adds signal handling around popen/pclose in mail.c. Related information on bugs #8992 and #14032 Original patch by D. Parthey
ChangeLog update
Committting tests for Olafur Waage
Committting tests for Olafur Waage
MFH: Use enum alternative instead of explicit value
Use enum alternative instead of explicit value
MFH: use HashPosition to prevent race condition in multithreaded env
use HashPosition to prevent race condition in multithreaded env
- New test
- New test
ChangeLog update
MFH: Improve order in MINFO output
Improve order in MINFO output
MFH: Handle failed connections right
Handle failed connections right
MFH: initialize variable
initialize variable
Added ability to send user defined HTTP headers with SOAP request
Added ability to send user defined HTTP headers with SOAP request.
remove BOM
Remove license condition that is no longer required.
ChangeLog update
MFH: use getenv
use getenv
MFH: initialize keyresource
initialize keyresource
fix test (thanks Tony)
fix test (thanks Tony)
MFH: Windows requires SystemRoot env var to run tests
Windows requires SystemRoot env var to run tests
MFH: SQLite3::escapeString can be static as it doesn't rely on an instance of SQLite
SQLite3::escapeString can be static as it doesn't rely on an instance of SQLite
note fix to Bug #46194 SIGSEGV when requested file is not found
MFB: fix Bug #46194: SIGSEGV when requested file is not found
fix Bug #46194: SIGSEGV when requested file is not found
ChangeLog update
MFH: Free persistent cache and improve MINFO output
Free persistent cache and improve MINFO output
MFH: No mysqli stuff in ext/mysql
No mysqli stuff in ext/mysql
BFN
MFH: fix bug #46185 (importNode changes the namespace of an XML element) add test
fix bug #46185 (importNode changes the namespace of an XML element) add test
ChangeLog update
BFN
MFH: fix bug #46191 (BC break: DOMDocument saveXML() doesn't accept null)
MFH: fix bug #46191 (BC break: DOMDocument saveXML() doesn't accept null)
fix bug #46191 (BC break: DOMDocument saveXML() doesn't accept null)
ChangeLog update
Avoid updating upload progress information too frequently on high transfert rate. [DOC] (HEAD only) Added session.upload_progress.min_freq http://wiki.php.net/rfc/session_upload_progress
ChangeLog update
MFB: fix 017.phpt in streams.c, and very dangerous intercepting of file functions in all cases introduced in multi-threaded fix
fix 017.phpt in streams.c, and very dangerous intercepting of file functions in all cases introduced in multi-threaded fix
note fix to Bug #46178 memory leak in ext/phar, remove 'useless entry' according to Hannes
MFB: fix bug #46178: memory leak in ext/phar
fix bug #46178: memory leak in ext/phar
- MFB: add nts to the zip names
- add nts to the zip names
New testcases for array_diff_uassoc() function
New testcases for array_diff_uassoc() function
MFB: fix another memory leak
fix another memory leak
MFB: fix obvious memory leak
fix obvious memory leak
ChangeLog update
- MFH: add VC version and architecture to the created zip(s) names
- add VC version and architecture to the created zip(s) names
ChangeLog update
fix test
ChangeLog update
MFB: clean some dead code
clean some dead code (with static analysis help)
- BFN #46160
ChangeLog update
sz is long not zval**
MFH: fix hints causing phpdoc crash
MFH: fix hints causing phpdoc crash
fix hints causing phpdoc crash
- BFN #46088
- New test
MF53: workaround for Bug #46147 for PHP < 5.2.7
workaround for Bug #46147 for PHP < 5.2.7
ChangeLog update
MF52 fix Bug #46147: after stream seek, appending stream filter reads incorrect data
MF52 fix Bug #46147: after stream seek, appending stream filter reads incorrect data
fix Bug #46147: after stream seek, appending stream filter reads incorrect data
WS
*** empty log message ***
*** empty log message ***
disable core dump by default
disable core dump by default
ChangeLog update
- fix VC6 build
ChangeLog update
ChangeLog update
MFH: Show the library version currently loaded as well as the version the extension was compiled with. Useful for checking PHP is using the latest version.
Show the library version currently loaded as well as the version the extension was compiled with. Useful for checking PHP is using the latest version.
fix test
fix typo
update tests
update tests
MFH: mhash algorithm parameter was modified when it was a zval, also update a test.
mhash algorithm parameter was modified when it was a zval, also update a test.
BFN
MFH: fix bug #46099 (Xsltprocessor::setProfiling - memory leak)
fix bug #46099 (Xsltprocessor::setProfiling - memory leak)
fix test
fix test
fix test
ChangeLog update
Added ability to cancel upload in rfc1867 handler
ChangeLog update
- BFN #46071
MFH
MFH
fix segfault with serialize(new __PHP_Incomplete_Class) found by Felipe add test
fix test
MFH: fix compile warning
fix compile warning
ChangeLog update
Missed variable declaration.
Forgot to merge these changes - Float conversion
MFH: Add float conversions too. Float users should understand how float works!!!
Add float conversions too. Float users should understand how float works!!!
MFH: - Added E_ERROR in constructors
- Added E_ERROR in constructors
- Updated to version 2008.6 (2008f)
- Updated to version 2008.6 (2008f)
- Updated to version 2008.6 (2008f)
- Updated to version Notice: Undefined offset: 1 in Command line code on line 1
MFH:Compile-in a string-to-int conversion for INT columns by default, controlled by a ini setting.
Compile-in a string-to-int conversion for INT columns by default, controlled by a ini setting.
add missing .cvsignore
add missing .cvsignore
MFH: More fileinfo tests.
More fileinfo tests
ChangeLog update
MFH: Sync libsqlite to 3.6.2 with some VC6 patches
Sync libsqlite to 3.6.2 with some VC6 patches
- fix build (declaration must be fist in a given contex)
MFB "Disabled $GLOBALS' refcount modification"
MFB / fix tests
sync with PHP 5.3: upgrade to pcre 7.8
update list of pcre symbols
fix compile on IRIX with MIPSPro (Bug #46072)
MFB: fix compile on IRIX with MIPSPro (Bug #46072)
MFB: increase code coverage, fix bzip2-compressed alias in zip
increase code coverage, fix bzip2-compressed alias in zip
ChangeLog update
MFB: fix minor issues found by ICC (unused variables and the like)
fix minor issues found by ICC (unused variables and the like)
MFH
actually reset stream position when finished
note fix of Bug #46060: Phar::addEmptyDir() breaks
MFB: fix Bug #46060: addEmptyDir() breaks
fix Bug #46060: addEmptyDir() breaks
- MFH: Reenable ini_set("mbstring.internal_encoding", VALUE) to work on runtime.     (noticed by Antony. Thanks!)
- MFH: Reenable ini_set("mbstring.internal_encoding", VALUE) to work on runtime.   (noticed by Antony. Thanks!)
- Reenable ini_set("mbstring.internal_encoding", VALUE) to work on runtime.   (noticed by Antony. Thanks!)
- MFH: Properly initialize/finalize the library. This plugs the leaks caused by   onig_new().
- MFH: Properly initialize/finalize the library. This plugs the leaks caused by   onig_new().
- Properly initialize/finalize the library. This plugs the leaks caused by   onig_new().
ChangeLog update
- MFH: mb_list_*() issue settlements
- Adding tests.
- MFH: WS
- MFH: WS
- WS
- mb_encoding_aliases() is more consistent with mb_preferred_mime_name()   despite the unconformance with the naming convention.
- MFH: Add missing =DIR
- MFH: Add missing =DIR
- Add missing =DIR
- The mb_list_* issue has been resolved in the following way:   - Keep the same prototype as 5.2 for mb_list_encodings().   - Add mb_list_encoding_aliases() with the mandatory parameter.   - Remove mb_list_mime_names() as the list can be made from iteration     on mb_list_encodings() with mb_preferred_mime_name().
- Remove unexposed functions.
- MFH: Use memcmp() for binary safety.
- MFH: use memcmp() for binary safety.
* Use memcmp() for binary safety.
Add tests for pcntl
Add tests for pcntl
MFH: initialize optional args
initialize optional args
- Missing argument to type "t"
MFH: make pharcommand.inc works without ereg
make pharcommand.inc works without ereg
MFB skipif
fix typo test before commit!
ChangeLog update
MFH: prev()-tests by Iain Lewis <ilewis@uk.ibm.com>
prev()-tests by Iain Lewis <ilewis@uk.ibm.com>
BFN
MFH: fix bug #46047 (SimpleXML converts empty nodes into object with nested array) add test
MFH: fix bug #46047 (SimpleXML converts empty nodes into object with nested array) add test
fix bug #46047 (SimpleXML converts empty nodes into object with nested array) add test
MFH: fix bug #45901 (wddx_serialize_value crash with SimpleXMLElement object) add test
MFH: fix bug #45901 (wddx_serialize_value crash with SimpleXMLElement object) add test
fix bug #45901 (wddx_serialize_value crash with SimpleXMLElement object) add test
fix test
fix test
Added tests
Implemented ability to provide upload progress feedback through session data.
New testcases for array_intersect_key() function
New testcases for array_intersect_key() function
remove weird relic of development past that somehow made it in here on the last commit
update NEWS to note bug #46032 fix
MFPHP5: fix Bug #46032: PharData::__construct wrong memory read
fix Bug #46032: PharData::__construct wrong memory read
ChangeLog update
add some windows-style INI entries to tests
update scanner files
fix file format
add some windows-style INI entries to tests
update scanner files
BFN
MFH: fix bug #46003 (isset on nonexisting node return unexpected results) add test
MFH: fix bug #46003 (isset on nonexisting node return unexpected results) add test
fix bug #46003 (isset on nonexisting node return unexpected results) add test
BFN
MFH: fix bug #46029 (Segfault in DOMText when using with Reflection)
MFH: fix bug #46029 (Segfault in DOMText when using with Reflection)
fix bug #46029 (Segfault in DOMText when using with Reflection)
- Union #45226 + #18916
BFN fix order
MFH: fix bug #45553 (Using XPath for attributes with a namespace does not work) add test
MFH: fix bug #45553 (Using XPath for attributes with a namespace does not work) add test
fix bug #45553 (Using XPath for attributes with a namespace does not work) add test
BFN
check for NULL before freeing
ChangeLog update
BFN #45226, #18916
- New tests
- New try
upgrade to PCRE 7.8. this includes a security improvement. I'll upgrade HEAD later (not urgent..)
ChangeLog update
update tests from 5.x
fix datefmt_parse function
fix tests to work both in ICU 3.6 and 3.8
- MFH: Changed error level E_ERROR into E_WARNING in parameter validation
- Changed error level E_ERROR into E_WARNING in parameter validation
pcntl_sigwaitinfo() and pcntl_sigtimedwait() functions are conditionally enabled, so, test should verify if they are present
add missing file
add missing file
add missing file
MFH: Added tests for rfc1867 post handler
Added tests for rfc1867 post handler
MFH: run-tests.php: Added %u|b% placeholder, like %unicode|string%, for array keys in var_dump() output.
run-tests.php: Added %u|b% placeholder, like %unicode|string%, for array keys in var_dump() output.
fix empty-value case in rfc1867 post handler
comment out debug printf
ChangeLog update
BFN #46010
- New entry
- MFH: The exact error message might differ (it's "Not owner" on Solaris)
- MFH: The exact error message might differ (it's "Not owner" on Solaris)
- The exact error message might differ (it's "Not owner" on Solaris)
- MFB:   - use php's stream in libmagic   - remove duplicate code (like mime_content_type() compatibility function     now use the same base as finfo_file())   - make it portable (works now on windows too, belongs other OSes)
MFB
- Revert idiotic patch (hint: Windows IS NOT the most important OS!)
MFH: More accurate max_file_size / upload_max_filesize (fixes #45124)
MFH: More accurate max_file_size / upload_max_filesize (fixes #45124)
More accurate max_file_size / upload_max_filesize (fixes #45124)
- MFH: Removed the doubled error message (the error level is no longer E_ERROR)
- Removed the doubled error message (the error level is no longer E_ERROR)
ChangeLog update
MFB: Tests for get_browser().
Tests for get_browser()
MFB: removed unused variables
Removed unused variables
Ported rfc1867 hooks to HEAD
bugfix is also applied to 5.2, so NEWS moved there
ChangeLog update
fix formatter tests for ICU 3.8
- MFH: #45985, touch on opened file raises a warning
- #45985, touch on opened file raises a warning
ChangeLog update
fix tests
fix formatting/parsing
ws cleanup
revert last change
revert last change
better detection for client libraries
better detection for client libraries
MFH
- made it clear which steps are relevant for RCs only
ChangeLog update
- New test
- New test
MFB: kill unused var
kill dead variables. found by LLVM's clang static analyzer
- Silent valgrind
- fix test (file or path not found) (Thanks Dmitry for the notice)
- don't close caller streams in libmagic (prevent leak and zombie stream) - string returned by magic_* are freed on magic_close, duplicate before   calling magic_close (set return value) - if stat failed, don't try to call magic_* (when FILEINFO_MODE_FILE)
- Moved to PHP_5_2
ChangeLog update
- New test
back to dev
dev -> release
- use php's stream in libmagic - remove duplicate code (like mime_content_type() compatibility function   now use the same base as finfo_file()) - make it portable (works now on windows too, belongs other OSes)
- MFB: fix typo and icu bundling
- fix typo and icu bundling
I hate not being able to test.
- MFB Remove pre-made phar.phar
MFH: - Added odbc.default_cursortype to control the ODBC cursormodel   (bug #43668)
- Remove pre-made phar.phar
Disabled warning messages in SoapClient constructor
Disabled warning messages in SoapClient constructor
- Remove extra )
fix news
Remove entries which are in previous release NEWS
- fixes for ext/odbc
- fixes for ext/odbc
ChangeLog update
- Missed the files we don't use yet
- unnecessary ; We are now 100% synched - let's keep it that way!
- cs, update package files following RC1 (just to keep it all in sync)
- Note to self: don't try to second-guess Greg
- MFB
move to 2.0.0-dev
use TAR_FILE instead of '0' and '\0' instead of 0
temp bandaid on broken build system, revert when snapshot build is fixed in win32
hadn't saved tar.c, use '\0' instead of 0 for char values, removes warning in intel compiler
use '\0' instead of 0 for chars, removes intel warning
remove unnecessary double variable declarations
remove unnecessary ;
- Ensure that we're always checking for OpenSSL support, rather than just for ext/openssl being loaded
Removed fileinfo related according to Jani's request
MFB: remove extra skipif
remove unicode skipif, as the test doesnt require such support
more detailed news-entry
added entry about change in ext/session
remove special treatment of /tmp path
remove special treatment of /tmp path
MFH
- added further details on the steps necessary to move ext from/to pecl
Changed name,name,name to name, name, name according to Pierre's advice
Added news entries about changes in ext/fileinfo
MFH
added note about how to move extensions from/to pecl
use safer strlcpy, patch by Tony Dovgal
commit missing files for tests
fix compile warning in PHP < 6.0
remove superfluous variable declarations, merge WS from pecl/phar
merge from pecl/phar strlen optimizations
remove superfluous return statements, merge from pecl/phar
merge minor optimization removing strlen from pecl/phar
remove unused variables, merge from pecl/phar
remove superfluous double variable declaration, merge from pecl/phar
use %u instead of %d, merge from pecl/phar
remove orphaned code, merge from pecl/phar
remove unused variables, merge from pecl/phar
WS merge from pecl/phar
ChangeLog update
update credits
update credits: new sapi, stuff moved to pecl..
- MFH: file will exist only on error (thx tony for the headup)
- file will exist only on error (thx tony for the headup)
sync with pecl/phar, missed one line change
sync with pecl/phar, this does not change any functionality in PHP 5.3, but makes syncing easier.  This commit is only functional changes, WS will be next
MFH: - Move tests to the correct dir
- Move the tests where they belong
fix OS-dependent order in test
WS
Oops, fix the assert.
- MFB: fix test (clean on exit)
- fix tests (clean on exit)
- Environment handling seems to have changed to respect unicode... so we   have to convert everything to binary before passing it along. A bunch of   tests suffer from this change in behavior as well. Can anyone explain to   me what was changed and why?
ChangeLog update
- MFH: Added odbc.default_cursortype to control the ODBC cursormodel   (bug #43668) #[DOC]
- Added odbc.default_cursortype to control the ODBC cursormodel (bug #43668) #[DOC]
MFH: - Updated unary_op_type typedef with TSRMLS_DC - Added binary_op_type typedef - Added missing ZEND_BOOL_XOR to get_binary_op()
- Updated unary_op_type typedef with TSRMLS_DC - Added binary_op_type typedef - Added missing ZEND_BOOL_XOR to get_binary_op()
MFH: - Saved opcode when unary +/- is applied to IS_CONST op (e.g. for negative numbers) - Made '+' in static_scalar context behave as '-' by calling add_function()
- Saved opcode when unary +/- is applied to IS_CONST op (e.g. for negative numbers) - Made '+' in static_scalar context behave as '-' by calling add_function(), so:     static $a = +'abc'; // 0 instead of abc     static $b = +array(); // "Invalid operand types," like -array(), instead of array()
MFH: fix get_browser() (broken in the process of param API conversion)
fix get_browser() (broken in the process of param API conversion)
MFH: check for \0 to be consistent with other functions
check for \0 to be consistent with other functions
- MFB: Disable COMPRESS support for now, as it requires forking. # @DOC [DOC] "DOC"
- Disable COMPRESS support for now, as it requires forking. # @DOC [DOC] "DOC"
- MFB: Remove ext/mime_magic, it was deprecated and it's only function is now   part of ext/fileinfo.
- Remove ext/mime_magic, it was deprecated and it's only function is now part of   ext/fileinfo.
- MFH: Adding back in mime_content_type().
- Adding back in mime_content_type().
- MFH preg_filter() # As discussed with Lukas # [DOC] check out the test
- MFH: Some more cleanups, and fixed some warnings.
- Some more cleanups, and fixed some warnings.
- MFH: Support for "back of <hour>" and "front of <hour>" phrases that are used   in Scotland.
- Support for the Scottish "back of" and "front of" hour phrases.
- [DOC] ming has been moved to pecl
- MFH: move ming to pecl
- move ming to pecl
- Be more specific about when constant substitution occurs - And should that be "values" or "value"? Hmm, feel free to improve wording
- MFH: fix warning
- fix warning
fix invalid read
fix invalid read
MFB: Some fileinfo tests
Some fileinfo tests
Added %unicode_string_optional% for differences in output between PHP 5 and 6
Added %unicode_string_optional% for differences in output between PHP 5 and 6
Imporoved compile-time constant substitution (Matt)
Imporoved compile-time constant substitution (Matt)
fix ZTS build
fix ZTS build
fix build
MFB: Test for fileinfo to check mime types.
Test for fileinfo to check mime types.
MFB: Replace ereg code with pcre, fix duplicate macro names and segfault. Patch by Mikko
Replace ereg code with pcre, fix duplicate macro names and segfault. Patch by Mikko
ChangeLog update
MFH: Bug #45888 (Refcounting in ZTS mode)
Bug #45888 (Refcounting in ZTS mode)
Add #45458
MFH: Bug #45458 (OCI8: Numeric keys for associative arrays are not handled properly)
Bug #45458 (OCI8: Numeric keys for associative arrays are not handled properly)
MHF: Test initialization cleanup
Test initialization cleanup
MFH: Update Oracle DLL examples to match build changes
Update Oracle DLL examples to match build changes
ChangeLog update
Already in 5.2
fix file check and avoid segfault
fix file check and avoid segfault
ChangeLog update
MFH
MFH
Sync with PHP_5_3 (what a nice mess..thanks guys for keeping the branches in sync..NOT)
MFH: sendmail mess cleared (PHP_PROG_SENDMAIL was not used at all, see also bug #42946)
ignore signal SIGXFSZ
ignore signal SIGXFSZ
MFB: switch to the new parameter-parse API
switch to the new parameter-parse API
MFB: this test depends on session.hash_bits_per_character, but it was not explicitly set
this test depends on session.hash_bits_per_character, but it was not explicitly set
- MFH: Improved fix
- Improved fix
Remove stray folding tag here
Remove stray folding tag here
- MFH: Added check for empty file name
- Added check for empty file name
cleanup garbage
clean up garbage
fix typo
fix typo
- MFB; support for copy of ICU DLLS for all ICU versions
- support for copy of ICU DLLS for all ICU versions
- MFB:inline definition (win32)
ChangeLog update
MFH: fix warning
fix warning
- New test
- New test
- New test
- New test
no zstr in 5_3
- New tests
- New tests
MFH
- and the last part of the fix, inline on win
MFH: fix build on win32
MFH
- Nuke unncessary checks already done elsewhere (ZEND) - Use the correct type header files if available. (win32 does what it does) - inline definition is in php_config.h, so include it always.
fix test: no crap left behind
MFH
- Nuke duplicate macro call
- fixed in 5.2 branch
ChangeLog update
MFH: - New parameter parsing API - CS
- New parameter parsing API - CS
MFH: - Copy custom callback to the child class if any - Prevent overwriting valid parent callbacks when implementing Serializable - Export zend_user_(un)serialize to be available for custom callbacks
- Export zend_user_(un)serialize functions to be used by custom callbacks - Transfer custom (un)serialize callbacks through inheritance
- Add new test
- Add new test
- fix zlib detection and enable features available in 7.18.1
- Added function preg_filter() [DOC] preg_filter() is basically the same as preg_replace but unlike the       latter it returns matches.
- Removed unused variable
- MFH: CS
- MFB: New parameter parsing API - CS (wddx)
- Removed unnecessary variable
ChangeLog update
- MFH: WS, Comestics - Folding
- MFB: New parameter parsing API - WS, Cosmetics
- MFH: fix build
- MFB: fix build (common inline definition will be done later)
- more fixes for inet_* with vc9/xp
- keep inet_aton declaration on non windows (what inet_aton has to do with flock?)
- MFB!!! _WIN32_WINNT and NTDDI_VERSION (bunnie--;)
- MFB: fix logic, build correctly when the build targets xp/2k
- we need it for vc < 9 (even if php6 will support officially only 9)
- readd the usual suspects to lib/include (was droped with the resolv.h check removal)
- MFH:  - drop bindlib usage on windows  - inet_pton, inet_ntop and inet_aton are always available (VC9 uses the CRT implementation, VC6 our own)
fix proto
- MFH: expose MAXPATHLEN (PHP_MAXPATHLEN)
- exposePHP_MAXPATHLEN
- fix build
MFH: - WS, Cosmetics - Removed unnecessary variables
- MFB: New parameter parsing API - WS, Cosmetics
ChangeLog update
- MFH: Removed unused arguments
- Removed unused arguments
Removed redundant code
Removed redundant code
MFH: fix zend_register_functions() not displaying duplicate functions (reported by Gopal)
MFH: fix zend_register_functions() not displaying duplicate functions (reported by Gopal)
fix zend_register_functions() not displaying duplicate functions (reported by Gopal)
- New tests
- New tests
- New tests
- MFH Cleanup exports and allow to overwrite ext registration
- Cleanup exports and allow to overwrite ext registration
- drop sys/ctype.h and use BEGIN/END_DECL_C  instead
ChangeLog update
- drop bindlib usage on windows - inet_pton, inet_ntop and inet_aton are always available (VC9 uses the CRT implementation, VC6 our own)
- [DOC] fix test, chr uses codepoint as input
MFB increase code coverage
- MFH: use date.timezone ini setting
- use date.timezone ini setting
- MFH: use date.timezone ini setting instead of ENV
- use date.timezone ini setting instead of ENV
- MFH: fix test on windows
- fix test on windows
report merged fix
merge fix for #43941
- MFH: different parser message on windows
- different parser message on windows
- MFH: "fix" crash on windows
- "fix" crash on windows
- new API - MFH: use 'C' on win
- use 'C' (and enable it on windows)
- MFH: don't skip if windows matches
- don't skip if windows matches
- MFB: use "C" instead of "" (and enable it on windows)
- new params parsing API - use "C" instead of ""
Adder error code into error message
Adder error code into error message
Adder error code into error message
- MFH: skip 007 on non windows platform and add a win specific version (file not found instead of filename too long)
- skip 007 on non windows platform and add a win specific version (file not found instead of filename too long)
- MFH: make it portable and clean on in the clean section, session file may still be open (can't be deleted)
- make it portable and clean on in the clean section, session file may still be open (can't be deleted)
- MFH: make it portable
- make it portable
revert for now
revert for now
- +skip
- +skip
- MFB:  skip on windows (setlocale can even crash on win+VC6...)
- skip on windows (setlocale can even crash on win+VC6...)
fix build
fix bug #45792: bz2 compressed files in zip failure
ChangeLog update
- MFH: work around vc6 bug
- work around ENV VC6 bug
Reverting local change
MFH: Allow mixed $initial (patch by Christian Seiler)
Allow mixed $initial (patch by Christian Seiler)
- quick fix for ICU dlls (better fix with n level deps will be done later)
initialize variable and fix WS
- MFB: strncpy returns the byte copied not error code or 0
- strncpy returns the byte copied not error code or 0
- new args parsing API and correct LOCALE definition (why utf-8 when only ascii is tested)
fix warning
fix warning
ChangeLog update
- Removed entries merged into 5_2
MFH: test for bug #42737
MFH: fix memleak in browscap code (noticed by Gopal)
fix memleak in browscap code (noticed by Gopal)
MFH: shutdown crypt correctly and fix memleak in ZTS mode
shudown crypt correctly and fix memleak in ZTS mode
- Opss, I forgot add my name...
- Note about property_exists()
MFH: constify strings
constify strings
ChangeLog update
 - MFB: don't use /tmp as tmpdir and avoid endless loop when fopen or tmpnam failed
- don't use /tmp as tmpdir and avoid endless loop when fopen or tmpnam failed
- MFH: new parameter API error
- new parameter API error
- BFN: #45743
- New test
- New tests
- New tests
fix windows build when building phar shared with native-ssl disabled (you can't use the symbols directly if openssl is built shared or is not built at all)
MFH
these are not bits, but bytes..
MFH: fix bug #45028 (CRC32 output endianness is different between crc32() and hash())
MFH: fix bug #45028 (CRC32 output endianness is different between crc32() and hash())
fix bug #45028 (CRC32 output endianness is different between crc32() and hash())
MFH: add note on 64bit compatibility and mention check_parameters.php
add note on 64bit compatibility and mention check_parameters.php
MFH: fix include
MFH: fix include
Reverted wrong "fix"
Reverted wrong "fix"
- MFH: this change was not part of the env patch
- this change was not part of the env patch
reverted because of test failures
reverted because of test failures
reverted because it causes lots of test failures in ext/soap
- MFB: unix is too young (<1970), make the test portable
- unix is too young (<1970), make the test portable
- [DOC] MFH: make putenv behaves like unix putenv on Windows:  .  FOO=1234 => set FOO to 1234  .  FOO= => set FOO to an empty string  .  FOO= => unset FOO  . Use Set/GetEnvironmnent variable only
- [DOC] make putenv behaves like unix putenv on Windows:  .  FOO=1234 => set FOO to 1234  .  FOO= => set FOO to an empty string  .  FOO= => unset FOO  . Use Set/GetEnvironmnent variable only
ws
update buffer size after having effectively realloc()ed it when appending data to an output buffer # may caused some problems if erealloc() failed here because of memory # limit ("memory limit exhausted" error message then written to # the buffer, etc)
- MFH: beware of signedness
- MFH: beware of signedness
- Beware of signedness
ChangeLog update
- New parameter parsing API (for mb_convert_variables())
- MFH: New parameter parsing API
- New parameter parsing API
generated zend_ini_scanner.c
MFH: Allow underscore at start of labels as underscore has no meaning here (fixes #44842)
generated zend_ini_scanner.c
Allow underscore at start of labels as underscore has no meaning here (fixes #44842)
fix news
- MFH: add %a for Compiler/Architecture
- add %a for Compiler/architecture
- [DOC] MFH: improve fix for #43261 for % and "
- [DOC] improve fix for #43261 for % and "
- MFH: typo and inline doc fix
- MFH: fix test (portable), use . as basedir and create the tmp dir in the test directory
- fix test (portable), use . as basedir and create the tmp dir in the test directory
- Remove unnecessary file
- unneeded file
- MFB:  - fix or improve tests  - add dump of the array_diff for compare_stats
- fix or improve tests - add dump of the array_diff for compare_stats
- fixes, portability and improvements for stat/file*/touch windows entry
ChangeLog update
- MFH: remove confusion for non windows/linux users
- remove confusion for non windows/linux users
MFH: [DOC] Added stream_context_set_default() function. (Davey Shafik)
Added stream_context_set_default() function. (Davey Shafik)
- MFB: wrong file commited (and fix test, thx Tony for the head up)
- wrong file commited (and fix test, thx Tony for the head up)
fix test
ChangeLog update
- MFB: fix unexpected EOF on line 391
- Removed unused variables
- attempt to fix unexpected EOF on line 391/6
- MFH: Removed some TSRMLS_FETCH()s
- Removed some TSRMLS_FETCH()s
 - MFH: make it portable without loosing pertinent data
- make it portable without loosing pertinent data
- MFH: make it portable without loosing pertinent data
- make it portable without loosing pertinent data
-MFH:  - fix test  - add debug build mode (crt outputs callback for invalid parameters)
- fix test - add debug build mode (crt outputs callback for invalid parameters)
- fix test
- MFH: New parameter parsing API >  new warning
- New parameter parsing API >  new warning
- Revert bad fix
- Revert wrong fix
- MFH: no config.h in ext/
- no config.h in ext/
- Remove crap
- [DOC] make stat, touch, filemtime, filemsize and related functions more portable (almost 100% equivalent to linux now) - [DOC] add support for touch($dir) - fix windows server 2008/vista support (#45447) (Pierre)
- [DOC] make stat, touch, filemtime, filemsize and related functions more portable (almost 100% equivalent to linux now) - [DOC] add support for touch($dir) - fix windows server 2008/vista support (#45447) (Pierre)
ChangeLog update
MFH
MFH: fix skipifs
fix skipif
MFH
MFH: fix tests
MFH: fix tests
- No unnecessary errors please
MFH: * Last _WIN32_WINNT macro redef * Include <config.w32.h> where _WIN32_WINNT was
MFH
fix test
- Skipif: as long as it is an extension, it can be disabled..
* Last _WIN32_WINNT macro redef * Include <config.w32.h> where _WIN32_WINNT was
MFH
MFH
add skipif (yes, reflection CAN be disabled still..)
MFH:fix test
MFH:fix test
MFH: Handlerify get_closure
Handlerify get_closure
MFH: fix tests, add missing test
do not leave crap behind
Silencio for some unnecessary errors
MFH: fix tests
- Nuke annoying errors already silenced elsewhere too
fix test
fix tests
MFH: fix test
fix test
- Something moved out -> update credits!
- New test
- New test
keep the style
- MFH: move declaration on top and fix build error
after rereading the documentation about preg_grep(), lets match the behavior in HEAD (return the original array elements instead of the new string). tune the test accordingly
sync with 5.3 branch. add test for bug #44925
- MFH Improve exception linking
new function
MFH: add quoted_printable_encode()
[DOC] add quoted_printable_encode()
fix folding
- Improved exception linking
MFH: nuke unused var
nuke unused var
fix build
fix build compile before commit?
fix folding
MFH: fix ws, cs and folding
fix ws, cs and folding
MFH: Implemented feature request #34381 (nl2br() should have an option for XHTML/HTML compatible BR element)
Implemented feature request #34381 (nl2br() should have an option for XHTML/HTML compatible BR element)
- MFB: New parameter parsing API
ChangeLog update
MFH: * Remove NTDDI_VERSION declaring and use the one in config.w32.h * Remove another _WIN32_WINNT macro redef in win32/time.c
* Remove NTDDI_VERSION declaring and use the one in config.w32.h * Remove another _WIN32_WINNT macro redef in win32/time.c
- move declaration on top and fix build error
- MFB: move declaration on top and fix build error
typoh
- move declaration on top and fix build error
- MFH: New parameter parsing API
- New parameter parsing API
- New parameter parsing API (for gmp_testbit)
fix long/int issues and a typo
- BFN #45798
MFH: fix compile warnings (patch by Phil Oleson)
MFH: fix compile warnings (patch by Phil Oleson)
fix compile warnings (patch by Phil Oleson)
Regenerate scanner
ChangeLog update
report old bugfix
MFH
[DOC]- Added methods to change/disable --with-config-file-scan-dir=PATH at [DOC]  startup: [DOC] [DOC]  To disable: Override default php.ini by using both -c and -n with [DOC]              CGI/CLI or set "PHP_INI_SCAN_DIR" environment variable [DOC]              to an empty string. [DOC] [DOC]  To change: Simply set "PHP_INI_SCAN_DIR" environment variable to point [DOC]             to another path.
MFB: move empty_fcall_info* to const table
mark empty_fcall_info and empty_fcall_info_cache as constant. a few less bytes in the dirty page :P
- News: http://news.php.net/php.cvs/52239
- New parameter parsing API (for fscanf)
- New parameter parsing API
- MFH: Constness (Added const qualifier to several function parameters)
- Constness (Added const qualifier to several function parameters)
- MFB
- MFH:  update test after php's portable realpath change (filename/ is not valid anymore)
- update test after php's portable realpath change (filename/ is not valid anymore)
- MFH: not supported on windpws
- not supported on windows
- MFH Add new test
- Add new test
- MFH Add new test
- Add new test
- Committing new array_diff_key tests for Sanjay Mantoor
- MFH Add missing ';'s
- Add missing ';'s
- Update .c after .l change
ChangeLog update
MFH: clear stat cache in chroot()
MFH: clear stat cache in chroot()
clear stat cache in chroot()
increase code coverage
news
- Cleanup
- Cleanup
- MFH EXPECT rather than EXPECTF
- EXPECT rather than EXPECTF
MFH: fix build when pcre is not present
fix build when host machine doest has pcre installed
MFH: Missing files in previous commit (Check the relevant path for open_basedir in symlink())
MFH: Missing files in previous commit (Check the relevant path for open_basedir in symlink())
Missing files in previous commit (Check the relevant path for open_basedir in symlink())
MFH: Check the relevant path for open_basedir in symlink()
MFH: Check the relevant path for open_basedir in symlink()
Check the relevant path for open_basedir in symlink()
add
add
- MFH: New tests
- MFH: has_property check
- MFH: skip on windows, chgrp not supported
- skip on wndows, chgrp not supported
- removed commented code
- [DOC] MFH: detect if dest is a dir (if the given stream layer supports stat)   and fails  . remove win32 specific test. The errors are not the same
- [DOC] detect if dest is a dir (if the given stream layer supports stat)   and fails  . remove win32 specific test. The errors are not the same
- MFH Closure/Reflection integration (original idea by Christian Seiler)
- Closure/Reflection integration (original idea by Christian Seiler)
- remove and add again as text not binary 2/2
- remove and add again as text not binary 1/2
- MFH: make it platform independent (/ vs \)
- WS (actually my falut)
- Made closures implementation reflection friendly (Christian) - Changed E_ERROR(s) into E_RECOVERABLE_ERROR(s) (Marcus)
- Made closures implementation reflection friendly (Christian) - Changed E_ERROR(s) into E_RECOVERABLE_ERROR(s) (Marcus)
increase code coverage
ChangeLog update
- BFN: #45765
- Oops
- Improve gdb support # I was actually debugging and trying to solve memleaks a hell lot
missing entries
- MFH: New parameter parsing API (for *printf())
- New parameter parsing API (for *printf())
- debugbreak may not be desired (harmless in release mode :)
- MFH: fix the VC6 fix or strncpy_s (md5 crypt failed with VC9 as it used strncpy wrongly)
- fix the VC6 fix or strncpy_s (md5 crypt failed with VC9 as it used strncpy wrongly)
new test
fix bug reported by Henrique add test
fix tests
MFH
fix compilation on AIX
- MFH: New parameter parsing API (for min() and max())
- New parameter parsing API (for min() and max())
- Already in 5.2 NEWS
- MFH: fix string len
- fix string len
MFH: Do not expand $target in symlink(). This made it impossible to symlink to a symlink. This also caused the target to be wrongly expanded relatively to the CWD when target was not an absolute path.
MFH: Do not expand $target in symlink(). This made it impossible to symlink to a symlink. This also caused the target to be wrongly expanded relatively to the CWD when target was not an absolute path.
Do not expand $target in symlink(). This made it impossible to symlink to a symlink. This also caused the target to be wrongly expanded relatively to the CWD when target was not an absolute path.
- [DOC] win's strftime does not support all posix formatting code and have some win specific rules see http://msdn.microsoft.com/en-us/library/fe06s4ak(VS.80).aspx for a complete list: split test for  win32 and posix
- [DOC] win's strftime does not support all posix formatting code and have some win specific rules see http://msdn.microsoft.com/en-us/library/fe06s4ak(VS.80).aspx for a complete list: split test for  win32 and posix
- New parameter parsing API
ChangeLog update
disable the test on AIX
disable the test on AIX
disable the test on AIX - unlink() deletes directories there (omg..)
MFH: do not fail & segfault if malloc(0) returns NULL, that's expected
MFH: do not fail & segfault if malloc(0) returns NULL, that's expected
do not fail & segfault if malloc(0) returns NULL, that's expected (reproducible on AIX with simple date() and UTC timezone)
fix leak
fix typo
fix typo
ChangeLog update
- missing entry
- MFB: add new files
- sync with 5.3
- MFH error handling, now with save, replace, restore
- Turns out the easy solution for correct error_handling doesn't work. So   we need to provide save/replace/restore functions right away. It also   to save/restore in the vm.
- MFH: constify zend_function_entry and update phpinfo
- MFH: missing openbasedir check
- MFH: use PHP_ZIP_VERSION_STRING and add add_ascii_assoc_string macro (easy sync)
- MFH: fix leak in zif_zip_entry_read and ::ExtractTo on Error
- use OPENBASEDIR_CHECKPATH instead of SAFEMODE_CHECKFILE, easier to keep code synced with HEAD
- MFH: Sorry for the compiler warning
- Sorry for the compiler warning
MFH: Test the catching of chains of exceptions
Test the catching of chains of exceptions
- MFH store error handling mode on stack when executing internal   or overloaded functions and methods. [...]
- PHP 5.3 todo, store error handling mode on stack when executing internal   or overloaded functions and methods. The issue is that a function might   set and rely on a certain mode and then calls another internal function   which changes it again, probably changing it back to the normal mode.   With this change we need to drop all calls that change the mode back to   normal using php_std_error_handling(). However there might be places   where someone wants to restore the last mode. If there is such a case we   need to add two functions one to save and one to restore. I briefly on   this and not all cases are clear, especially one in sqlite but that seems   to be a rather misleading comment. Eitherway I chose to not drop and mark   as deprecated for now.
MFB: Tests for ReflectionMethod::getClosure() and ReflectionFunction::getClosure()
Tests for ReflectionMethod::getClosure() and ReflectionFunction::getClosure()
Apparently this is broken in alpha1 too
MFB: Documentation fix for getClosure()
Documentation fix for getClosure()
move unused vars into their ifdef
- add missing files for 0.9
*** empty log message ***
ChangeLog update
- fbsql to pecl
- moved to PECL
- dbase moved to pecl
- MFH: moved to pecl
- moved to pecl
- MFH: update to 0.9 (torrentzip support, files open only when necessary), windows fixes
-  update to 0.9 (torrentzip support, files open only when necessary), windows fixes
MFB: Basic and error tests for stream_filter_remove().
Basic and error tests for stream_filter_remove()
MFB: fix build
fix this, so that I can build php without litespeed..
use PHP_ARG_WITH instead of AC_ARG_WITH
use PHP_ARG_WITH instead of AC_ARG_WITH
MFH: New maintainer :)
New maintainer :)
MFH: fix (thx Christian Hoffmann)
fix (thx Christian Hoffmann)
MFH: Update EXTENSIONS file
Update EXTENSIONS file
Disable closures serialization/unserialization
Disable closures serialization/unserialization
not experimental anymore
not experimental anymore
not experimental anymore
remove EXPERIMENTAL flag
remove EXPERIMENTAL flag
remove EXPERIMENTAL flag
MFB: upgrade to PCRE
upgrade to PCRE (i.e. get ride of ereg usage)
regenerate
MFB: fix crash
regenerate
fix crash: yytext can't be modified because it is mmaped(). strndup() will take care of last zero char
fix WS
fix WS
Tune news, added missing entry
MFH: Added clear_realpath_cache and filename parameters to clearstatcache() (Jani, Arnaud) [DOC] clearstatcache() now defaults to not affect the realpath cache. clearstatcache() now takes two optionnal parameters, clear_realpath_cache to clear the realpath cache (defaults to false), and filename to clear only the given filename from the cache.
Added clear_realpath_cache and filename parameters to clearstatcache() (Jani, Arnaud) [DOC] clearstatcache() now defaults to not affect the realpath cache. clearstatcache() now takes two optionnal parameters, clear_realpath_cache to clear the realpath cache (defaults to false), and filename to clear only the given filename from the cache.
fix test NaN != NaN
MFH: fix bug #45712 ($something == NaN returns true with 5.3, false with 5.2.*)
fix bug #45712 ($something == NaN returns true with 5.3, false with 5.2.*)
ChangeLog update
MFH
separate tagging of the zend dir should not be necessary, fix reST formatting of titles
Backport #45406 (session.serialize_handler declared by shared extension fails) to PHP_5_2
Backport fix for #45406 to PHP_5_2
Backport fix for #45406 - Patch by oleg dot grenrus at dynamoid dot com
MFH
lets me all american :)
MFH
updated in regards to windows, added some clarifications and addition tipps
Re-add mysql_set_charset. Missed during introduction of mysqlnd. Exists in HEAD, thus no merge
Stupid typo
Stupid typo
Sync libsqlite to 3.6.1
MFH: Sync libsqlite to 3.6.1
MFB: Update coding standards and fix a test, this was already in 5.3 alpha 1
MFH: increase context refcount before open() to avoid crash when open() fails and destroys the context
increase context refcount before open() to avoid crash when open() fails and destroys the context
fix 11g crap
MFH: General sync. WS / CS / etc. crap some people didn't bother to merge MFH: before this commit..bunnies thank you all.. [DOC] - Added ext/hash support to ext/session's ID generator. (Sara) [DOC] Ask Sara for explanation..
- Old news
- MFB: sync parameter parsing API changes in session_set_save_handler()
- MFB: snprintf -> slprintf, nuketh extra folding tags, ws fixes
- litespeed was merged from HEAD
ChangeLog update
ws + folding tags
- nuketh period from error message
- Nuke ending period
- Nuke ending periods from error messages
added litespeed SAPI
add CREDITS
fix test
useless entry
ok, clarify :)
add bugfix
fix memnstr bug by Laurent Gaffie
- MFH: fix oci8_11g when build shared (invalid extension)
- fix oci8_11g when build shared (invalid extension)
Some fancy detection for sqlite3 and pdo_sqlite3 - so the two extensions don't depend on each other if shared, and don't try to put two versions of the sqlite3 lib if static
Some fancy detection for sqlite3 and pdo_sqlite3 - so the two extensions don't depend on each other if shared, and don't try to put two versions of the sqlite3 lib if static
fix memnstr bug, by Laurent Gaffie
fix memnstr bug, by Laurent Gaffie
- MFH: fix zlib detection (shared/static) and add zlib_a support
- fix zlib detection (shared/static) and add zlib_a support
- MFH: not shared
 - not shared
MFH
- No need to load any php.ini here
MFH
- Portability fix. (si_fd seems to be linux only thing)
fix typo
MFH:- Add test for bug #45712
MFH:- Add test for bug #45712
- Add test for bug #45712
- MFH: add dll path to mkdist default path
- add dll path to mkdist default path
ChangeLog update
- MFH: detect _a or normal lib
- detect _a or normal lib
- MFH: Added .libs to .cvsignore
- MFH: Added .libs to .cvsignore
- Added .libs to .cvsignore
- More fixes for bug #45691
- MFH: More fixes for bug #45691
- MFH: More fixes for bug #45691
MFH: proper version check
MFH: Add proper version check (new c-clients have this)
- MFH: Added new parameter parsing API (part II)
- Added new parameter parsing API (part II)
- Add test for bug #45705
numerous int<->long fixes (this code just couldn't work on 64bit OSes) here is why we need to put ming to PECL
Improve ArrayObject::exchangeArray() behaviour with objects and CoW references (see http://turl.ca/exarr ).
Improve ArrayObject::exchangeArray() behaviour with objects and CoW references (see http://turl.ca/exarr ).
Removed shebang line check from CGI sapi (it is checked by scanner)
Removed shebang line check from CGI sapi (it is checked by scanner)
ChangeLog update
- MFH Drop libsqlite even here
- Drop libsqlite even here
MFH: Remove cast and fix mem errors
Remove cast and fix mem errors
typo, grammar
MFH: nuketh C++ comments
- Nuketh C++ comments from C files.
MFH
- Nitpicking # Chris I merged you with Oracle corp. as you work for the company, or do # you need to be clear about what you did?
MFH
- fix comment style
missing eol
MFH: no c++ comments in c files
MFH: no c++ comments in c files
- No C++ comments in C files!
oops
oops
- No C++ comments in C files!
- No C++ comments in C files!
- Added missing $Id$ tags and nuked c++ comments
- What a mess..
- These files do not conform to any kind of coding standard. Sync from 5.3 too
ChangeLog update
- MFH:Forgot to take account of the case when mbstring.language is processed   afterwards.
- MFH: Forgot to take account of the case when mbstring.language is processed   afterwards.
- Forgot to take account of the case when mbstring.language is processed   afterwards.
- MFH: improve previous fix for scan, disable optimizer only for scan() using #pragma optimize
- improve previous fix for scan, disable optimizer only for scan() using #pragma optimize
- MFH: parser's scan function is too large for VC6-7.x, disable the optimizer (size optimization instead) fixes it
- parser's scan function is too large for VC6-7.x, disable the optimizer (size optimization instead) fixes it
MFH Remove obsolete check (thanks Tony)
- Remove obsolete check
MFB: Allow urlencode()d filer names in php://filter (fixes #43008)
news
Allow urlencode()d filer names in php://filter
- MFH: Added parameter TSRMLS_DC in zend_is_callable()
- Added parameter TSRMLS_DC in zend_is_callable()
- MFH:  Removed unnecessary TSRMLS_FETCH()
- Removed unnecessary TSRMLS_FETCH()
MFH: Avoid leaks when zlib streams can not be closed properly.
MFH: Avoid leaks when zlib streams can not be closed properly.
Avoid leaks when zlib streams can not be closed properly.
ChangeLog update
- Add a test for bug #43993.
- Move finalization code to the proper place
remove unneeded define
remove unneeded define
- MFH: use static lib first if found
- use static lib first if found
- MFH: fix EOL broken by previous commit
- fix EOL broken by previous commit
- MFH: drop 8.x support
drop 8.x support
- Somehow 'cvs add' managed to ignore these completely(?)
- MFH: support for Oracle 11g (either 8 or 11g can be built but not both
- support for Oracle 11g (either 8 or 11g can be built but not both
- ws/cs, macros, code that only affects other branches - some unsynced changes need valgrind testing before they can go into this branch, see PECL/HEAD
- This is as good as it gets in HEAD at present (~30% tests fail here)
- Bring phar command into sync with 5_3 and PECL
- MFH Bring phar tests into line across all branches
- Bring phar tests into line across all branches
MFB: Make pdo_sqlite use the bundled extension with sqlite3
- MFH: add new default dir (old still works)
- add new default dir (old still works)
- MFH: first static lib then dyn or old one
- first static lib then dyn or old one
MFB5.3: INI options for new extions
Add ini options for the new exts
MFH: fix int<->long mess causing lots of segfaults on x86_64
fix int<->long mess causing lots of segfaults on x86_64
fix skipif
- Consistency rocks: Make all lines start with tabs for indentation # Just as anythign else we do. # Also saves about ~0.5k in phar.phar
ChangeLog update
back to dev
5.3.0alpha1
Still need defines so that sqlite3.h will match the lib that sqlite3 uses
remove that file, too
Bundled pdo_sqlite files are no longer required
- MFH: new usual suspects
- new usual suspects
MFB5.3: "without" and "do not include"
Class rename to match Coding Standards
Which means do not include.., thanks Jani :)
Say without, since its enabled by default
MFB: Enable by default and fix compile error
Enable by default and fix compile error
- Added a few exts
Typo
move 'Improved' stuff together and max 80 char width
Update NEWS
MFH (DOC] Add array_replace/array_replace_recursive (Mett Wilmas)
- Add array_replace/array_replace_recursive (Mett Wilmas)
- MFH: add detection for newer libs
- add detection for newer libs
MFB: Stray RETURN_TRUE value
Stray RETURN_TRUE value
 - MFB: update config to match config.m4    (still does not build but will be fixed for alpha2)
- update config to match config.m4   (still does not build but will be fixed for alpha2)
MFH:- fix test
MFH:- fix test
- fix test
Removed Closure::__toString()
Removed Closure::__toString()
ChangeLog update
typo
MFH: Resync libsqlite files from amalgamation. Save the kittens, no EOL mess.
Resync libsqlite files from amalgamation. Save the kittens, no EOL mess.
MFH:- Applied the missing parts to phpize.m4 for zend extension builds
MFH:- Applied the missing parts to phpize.m4 for zend extension builds
- Applied the missing parts to phpize.m4 for zend extension builds
MFH: get fileinfo building again on Windows
get fileinfo building again on Windows
MFH: sync build stuff
MFH:- Detect whether debugging was enabled in PHP and drop optimizing flags if so (merge from configure.in)
- Detect whether debugging was enabled in PHP and drop optimizing flags if so (merge from configure.in)
MFH:CS
CS
MFH: sync
ws
fix warnings
fix warnings
We can afford a larger stack here and other json parsers out there go deeper than 128.
We can afford a larger stack here and other json parsers out there go deeper than 128.
We can afford a larger stack here and other json parsers out there go deeper than 128.
- New test
- New test
fix folding
fix folding
enable this test on all platforms, no reason to limit it windows only
fix tests
fix test
- mbstring is built shared on windows   it looks like the idea was to have it static (but does not work)
- fix VC9 build (5.3+)   Please do not revert this fix again and to merge 5.3's changes to HEAD
MFH:ws
ws
MFH: Add test for imagecolorclosesthwb()
Add test for imagecolorclosesthwb()
MFB: Add test case for #44849
Add test case for #44849
ChangeLog update
make it compatible with PHP 6.0 using new php output API
- MFH: missing in the previous crypt commit (shutdown frees the locking mechanism)
- missing in the previous crypt commit (shutdown frees the locking mechanism)
MFH: Added pcntl_sigwaitinfo(), pcntl_sigtimedwait() and pcntl_sigprocmask() [DOC] pcntl_sigprocmask() allows to block signals. pcntl_sigwaitinfo() allows to fetch blocked signals or signals delivered while pcntl_sigwaitinfo() is running. pcntl_sigtimedwait() is pcntl_sigwaitinfo() with a timeout.
Added pcntl_sigwaitinfo(), pcntl_sigtimedwait() and pcntl_sigprocmask() [DOC] pcntl_sigprocmask() allows to block signals. pcntl_sigwaitinfo() allows to fetch blocked signals or signals delivered while pcntl_sigwaitinfo() is running. pcntl_sigtimedwait() is pcntl_sigwaitinfo() with a timeout.
MFH: Added pcntl_signal_dispatch() [DOC] pcntl_signal_dispatch() allows to dispatch pending signals to registered signal handler functions on-demand. This allows to use pcntl_signal() without ticks.
Added pcntl_signal_dispatch() [DOC] pcntl_signal_dispatch() allows to dispatch pending signals to registered signal handler functions on-demand. This allows to use pcntl_signal() without ticks.
Removed warning
Removed warning
don't segfault if given invalid/empty private key
don't free function name before calling the function
fix folding
MFH: fix copy/paste error (patch by Mikko)
MFH: fix copy/paste error (patch by Mikko)
fix 5 years old copy/paste error (patch by Mikko)
fix test
make ReflectionProperty::getValue() and ReflectionProperty::setValue() consistent with their implementations in 5_3
add zend_u_read_property() and zend_u_update_property()
this shouldn't have been backported
- MFH Exclude bundled libs from gcov processing
- Exclude bundled libs from gcov processing
no need for FETCH anymore..
more similar fixes
add TSRMLS_DC and fix crash in ZTS mode
ChangeLog update
MFH: Add freelist for tracking sqlite statements to free on implicit SQLite3::close()
Add freelist for tracking sqlite statements to free on implicit SQLite3::close()
- Typo.
- Updated to version 2008.5 (2008e)
- Updated to version 2008.5 (2008e)
- Updated to version 2008.5 (2008e)
MFH: When automatically redirecting an HTTP request, use the GET method when the original method was not HEAD or GET (fixes #45540) # # The RFC says that in case of 3xx code, "The action required MAY be # carried out [...] *only if the method used in the second request is GET or # HEAD*". # # This may not break anything as actually POST requests replying # with a Location header never worked as the redirecting request was sent using # the POST method, but without Entity-Body (and without Content-Length header, # which caused the server to reply with a "411 Length Required" or to treat # the request as GET). #
When automatically redirecting an HTTP request, use the GET method when the original method was not HEAD or GET (fixes #45540) # # The RFC says that in case of 3xx code, "The action required MAY be # carried out [...] *only if the method used in the second request is GET or # HEAD*". # # This may not break anything as actually POST requests replying # with a Location header never worked as the redirecting request was sent using # the POST method, but without Entity-Body (and without Content-Length header, # which caused the server to reply with a "411 Length Required" or to treat # the request as GET). #
Secure versions of string functions don't exist for VC6
Secure versions of string functions don't exist for VC6
- MFH: vc6 is picky about brackets when used with a defined type...
- vc6 is picky about brackets when used with a defined type...
MFH: Increase coverage a bit
Increase coverage a bit
- MFH: New tests
- New tests
- nothing to do here
- not here anymore (old crypt implementation)
-MFH:  - #45430, windows implementation of crypt is not TS  - add Blowfish (using implementation from Solar Designer <solar at openwal dot com>) and extended DES support  - Make crypt features portable:    - if no crypt_r, php's implemetation is used (all algo and TS), php can't be used with unsafe crypt anymore    - if one algo is missing, php's implemetation is used    - Windows always use php's implementation  - removed old code in windows/
- silent warning with vc8 + dbg mode
- #45430, windows implementation of crypt is not TS - add Blowfish (using implementation from Solar Designer <solar at openwal dot com>) and extended DES support - Make crypt features portable:   - if no crypt_r, php's implemetation is used (all algo and TS), php can't be used with unsafe crypt anymore   - if one algo is missing, php's implemetation is used   - Windows always use php's implementation - removed old code in windows/
- mac to unix
- mac to unix format
- Touch.
- SCNG(input_filter) can be null if the script encoding is idential to   the internal encoding.
- ???
- Touch.
- Another portion to merge.
- Sync function signature with the 5.3 branch
- Touch
- WS
- touch
ChangeLog update
- Allow building with ming-0.4rc1 (the latest available ming) # Necessary to get gcov.php.net working again
MFH Update README.  Bump ver ready for PECL release
Update README.  Bump ver ready for PECL release
MFH: Sync oci8.default_prefetch example value with recent change
Sync oci8.default_prefetch example value with recent change
Add OCI8 changes
MFH: Partial sync
ChangeLog update
*sigh*
nuke \r\n
MFH: fix build
jfc..*SIGH*
MFH: build fixes, cs, ws, etc.
- Removed merge typos
NO Winblows EOLs here!!!
fix folding tag
update credits
correct year and version
update credits
MFH:tune
tune
- No tabs.
- No tabs.
*** empty log message ***
Added checks for destroied objects
Added checks for destroied objects
Added support for overloaded functions (e.g. COM) in call_user_func().
Added support for overloaded functions (e.g. COM) in call_user_func().
. Added support for using static HEREDOCs to initialize static variables and class members or constants. (Matt) . Improved syntax highlighting and consistency for variables in double-quoted strings and literal text in HEREDOCs and backticks. (Matt) . Optimized interpolated strings to use one less opcode. (Matt)
. Added support for using static HEREDOCs to initialize static variables and class members or constants. (Matt) . Improved syntax highlighting and consistency for variables in double-quoted strings and literal text in HEREDOCs and backticks. (Matt) . Optimized interpolated strings to use one less opcode. (Matt)
ChangeLog update
Forgot to add these earlier SQLite3 extension, still has 2 failing tests that will be sorted shortly.
SQLite3 extension, still has 2 failing tests that will be sorted shortly.
fix warnings
fix warnings
- fix a typo in mb_stripos() that caused segfault.   (noticed by bs@php.net, thanks).
MFH: fix zts build
- MFH: fix EXT_FOO_SHARED usage as dep mgt broke it (one more hack but we can clean them after alpha)
fix zts build
- fix EXT_FOO_SHARED usage as dep mgt broke it (one more hack but we can clean them after alpha)
- MFB: New parameter parsing API (set_time_limit)
- No tabs, fix indent in configure --help
fix typo
fix typo
- MFH: Allow the results of a partial run to be saved when -s option is   explicitly specified.
- Allow the results of a partial run to be saved when -s option is explicitly   specified.
MFB: generated with a bit newer re2c
MFH: enable fileinfo by default
- Enable fileinfo by default
Update credits
MFH: cleanup
- Cleanup after test
fix typos
- Changed HTTP stream wrapper to accept any code between and including   200 to 399 as successful. (patch by Noah Fontes)
- Changed HTTP stream wrapper to accept any code between and including   200 to 399 as successful. (patch by Noah Fontes)
This commit was manufactured by cvs2svn to create branch 'PHP_5_3'.
- No C++ comments.
- Updating the libmagic patch. - Adding myself to credits.
Substitute persistent constants by their values at compile time. (Matt)
Substitute persistent constants by their values at compile time. (Matt)
- MFH: suppress signedness warnings
- Suppress signedness warnings.
SQLite3 extension, still has 2 failing tests that will be sorted tomorrow. Will merge to head tomorrow as well.
This commit was manufactured by cvs2svn to create branch 'PHP_5_3'.
ChangeLog update
- No need to advance the cursor
- Revived zend multibyte
- Revert accidental commit.
- MFH: Suppress signedness warnings
- Suppress signedness warnings.
- MFH: Constify read-only arguments
* Constify read-only arguments.
- MFH: Added TSRMLS_DC to apply_func_args_t and zend_hash_apply_with_arguments.
- Added TSRMLS_DC to apply_func_args_t and zend_hash_apply_with_arguments.
- MFH: fix win32 build
- MFH:  force static for now, broken now
- force static for now, broken now
- MFB: Removed unused variable.
- Removed unused variable.
MFH
MFH (prepare() fallback logic)
use "r" instead of "z" when accepting resources
Test for PS fallback logic in prepare()
we don't do fstat, hence st struct is uninitalized
silence compile warning
fix folding
MFB: Added tests for #42663
don't ignore .patch if it's in CVS
drop freeing of uninitialized variable add missing return nuke unused variable
MFH: Remove non existent defines and change THREADSAFE to SQLITE_THREADSAFE
do not include libmagic/file.c into the build
Remove non existent defines, change THREADSAFE to SQLITE_THREADSAFE and sync with 5.3
MFH: set GCC to "no" if ICC was detected
MFH: Added test file
Added test file
set GCC to "no" if ICC was detected
Optimized ZEND_SIGNED_MULTIPLY_LONG() (Matt)
Optimized ZEND_SIGNED_MULTIPLY_LONG() (Matt)
- Bundle the data file - you can still use the external file if you   specify that in the call to finfo_open().
- MFH: Added "mbstring.http_output_conv_mimetypes" INI directive.
- Add mbstring.http_output_conv_mimetypes that allows common non-text   types such as "application/xhtml+xml" to be converted by   mb_output_handler().
MFH (32bit fix)
Make the test pass on 32bit and not bail out because of int vs. double
- MFH: New parameter parsing API
- New parameter parsing API
MFH: Add .cvsignore, update config.w32 and remove the other bundled sqlite library
Add .cvsignore, update config.w32 and remove the other bundled sqlite library
LSB parent/self forwarding
LSB parent/self forwarding
MFH: Allow filters to work on INPUT_SERVER in CLI (bug #44779)
Allow filters to work on INPUT_SERVER in CLI (bug #44779)
MFH Make test x-platform
MFH SPL_FILE_DIR_UNIXPATHS.
- Make test x-platform
- Introduce SPL_FILE_DIR_UNIXPATHS.
Add a couple of methods to SWFVideoStream
bump copyright year
Syncronize the ming extension with libming 0.4 [DOC] PHP 5.3 requires libming 0.4
fix test
fix test
- MFH: Improved parameter handling
- Improved parameter handling
ChangeLog update
MFB: Update pdo_sqlite to use the amalgamation, much easier to upgrade / maintain. Also kill useless PECL version tag in MINFO.
Update pdo_sqlite to use the amalgamation, much easier to upgrade / maintain. Also kill useless PECL version tag in MINFO.
MFH: corrected library search path order in tests
corrected library search path order in tests
array_intersect_ukey tests by Sanjay Mantoor
array_intersect_ukey tests by Sanjay Mantoor
implement bug #14266
typoes
80 chars per line..
add compose syntax as per request #14266
- MFH: New parameter parsing API
- New parameter parsing API
add test
add locale_accept_from_http
Allowing "%unicode|string%" as a placeholder (backport from HEAD)
Allowing "%unicode|string%" as a placeholder. In 6, this placeholder is resolved to "unicode", in <6 to "string". This allows to easily write portable tests. Patch by uw
NEWS!:
MFH: some fixes to allow certain tests to pass regardless of system php.ini settins
MFH
This little detail seems MySQL version/setup dependent
- Change credits for #44246
MFH: invert the logics - FLAG_FCLOSE -> FLAG_NO_FCLOSE
MFH: invert the logics - FLAG_FCLOSE -> FLAG_NO_FCLOSE
invert the logics - FLAG_FCLOSE -> FLAG_NO_FCLOSE
MFH: missing test
fix test
fix test
fix test
fix test names
fix tests names
fix test
fix test
fix test
fix test
sync test with other branches
MFB + Unicode: added support for object ids in pg_lo_create() and pg_lo_import() where available (based on code provided by Tatsuo Ishii)
MFH: add PHP_STREAM_FLAG_FCLOSE to zip streams
MFH: add PHP_STREAM_FLAG_FCLOSE to zip streams
add PHP_STREAM_FLAG_FCLOSE to zip streams
splitted test cases for lo_create and lo_import, added version aware SKIP tests
MFH: add PHP_STREAM_FLAG_FCLOSE, bz2 streams can be closed with fclose()
MFH: add PHP_STREAM_FLAG_FCLOSE, bz2 streams can be closed with fclose()
add PHP_STREAM_FLAG_FCLOSE, bz2 streams can be closed with fclose()
- MFH [DOC] Add FilesystemIterator::SKIP_DOTS (flag to skip '.' and '..' in iteration)
- [DOC] Add FilesystemIterator::SKIP_DOTS (flag to skip '.' and '..' in iteration)
- MFH Add new classes
- Add new classes
ChangeLog update
add test
add acceptFromHttp
added support for object ids in pg_lo_create() and pg_lo_import() where available (based on code provided by Tatsuo Ishii)
MFH: Two less failing tests, one of which was definitely a leak in mysqli with mysqlnd      and pconn. ext/mysql is being fixed with a better fix for similar leak.
Two less failing tests, one of which was definitely a leak in mysqli with mysqlnd and pconn. ext/mysql is being fixed with a better fix for similar leak.
- MFH Add MultipleIterator (Arnaud, Marcus)
- Add MultipleIterator (Arnaud, Marcus)
MFB: constructors fixes and cleanup
use correct locale check
typofixes
refactor ctors, cleanup code
- MFH: The error level must be E_ALL | E_STRICT.
- The error level must be E_ALL | E_STRICT.
MFH: Add test for escapeshellcmd and restore previous behaviour with stripping % on Windows.
Add test for escapeshellcmd and restore previous behaviour with stripping % on Windows.
More debugging info for the trace log
More debugging info
MFB: sync
ws + cs + sync with PHP_5_3
ws + cs
MFH: unused stuff
- Add missing tests (thanks for being so fucking lazy Ilia!)
- BFN: #44246
MFH: Visibility (bug #45557)
- Visibility (bug #45557)
- fix build
MFH Add missing help text
- Add missing help text
- Remove duplicated lines.
ws
ws
Closure object cannot have properties
Closure object cannot have properties
- This test works fine (patch by Lars Strojny)
- This test works fine (patch by Lars Strojny)
Improved webPhar speed (frontcontroller11.phar.phpt is disabled, should be removed)
- MFH: Segfault when an exception is thrown on persistent connections
- Segfault when an exception is thrown on persistent connections
- MFH: Added arginfo
- Added arginfo
ChangeLog update
MFH: - Removed ntest and utest - Removed -U flag to `make test' just to test once each test
Tidy language and order
Optimisation for zend_memnstr when the needle is only a single character. (Patch by Michal Dziemianko - GSoC08)
Optimisation for zend_memnstr when the needle is only a single character. (Patch by Michal Dziemianko - GSoC08)
- SAB: #41996, Problem accessing Oracle ROWID (Martin Jansen)
- #41996, Problem accessing Oracle ROWID (Martin Jansen)
Added check for small ZEMD_MM_SEG_SIZE
Added check for small ZEMD_MM_SEG_SIZE
Added check for small ZEMD_MM_SEG_SIZE
- MFB: sync changes with 5.3...
MFH:- Visibility (bug #45564)
- Visibility (bug #45564)
MFH: sync
Sync with 5_3 changes
MFH: Sync with PHP 6.
Sync with PHP 5.3 (might not work 100% yet due to huge inconsistencies AND bugs in PHP
- MFB: New parameter parsing API
MFH: Add mysqlnd support for PDO_mysql, fixes at least bug#41997,#42499,      pecl#12794, pecl#12401
- Add mysqlnd support for PDO_mysql, fixes at least bug#41997,#42499,   pecl#12794, pecl#12401
Pure, old-fashion CVS grown, bug fix.
MFB :
- forgot to commit to HEAD
- Forward compatibility. # @DOC@, [DOC], *DOC*: Added FILE_TEXT and FILE_BINARY constants for forward compatibility.
- Removed unicode_semantics()
MFB: The rest of the fix too for previous commit
MFH
Forgot to fix title
- More stupid WS etc fixes. Plus the missing help text place holders for Steph to fill up..
- This is still available in HEAD, so keep the override here!
MFH: Stupid WS fixes..Thanks Steph!
MFH: sync acinclude.m4 (leave the PHP_PROG_LEX for BC!)
- Sync to PHP_5_3
MFH: sync configure.in with HEAD (where applicable)
ws
MFB Removed generated file (no longer used for .dsp builds)
Run the tests with E_STRICT again # Why isn't E_STRICT in E_ALL?
MFB Make compiler/architecture info potentially cross-platform
MFH project file generation + a few small fixes made along the way
MFH: Add E_USER_DEPRECATED (patch by Lars Strojny)
MFH: fix proto
Add E_USER_DEPRECATED (patch by Lars Strojny)
ws + style fix
- MFH Little debug hack to allow printing vm function
- Little debug hack to allow printing vm function
- MFH: fix test
MFH
this should be "=", not "=="
ChangeLog update
- Added test case to HEAD too.
MFB
MFH + NEWS entry
- MFH: Bug #45572
- Bug #45572
MFH: Iterator methods overwriting optimisations
Iterator methods overwriting optimisations
- BFN: #45571
- MFB: Added arginfo
- Added arginfo
- WS fix
- Happy New Year! (better late than never, eh?)
ChangeLog update
- Update get_define() calls to reflect earlier change in return value on failure - Rename output files (to avoid that build option for "php5ts.exe") - Add libpath to intermediate dir path (avoids a naming collision that wasn't there last week) - Don't make assumptions about trailing whitespace in incoming data
MFH: Complete the ZTS build fix
Complete the ZTS build fix
- MFH: Country codes are ISO 3166.
- Country codes are ISO 3166.
- Rejig REMOVE_TARGET - Tidy ADD_EXTENSION_DEP - Put summary output in alphabetical order
- MFH Add MultipleIterator (http://blog.somabo.de/2008/01/multipleiterator-for-php.html)
- Add MultipleIterator (http://blog.somabo.de/2008/01/multipleiterator-for-php.html)
- MFH Added RecursiveTreeIterator
- added missing @since tag
- Move RecursiveTreeIterator from PHP to C code (Arnaud, Marcus) [DOC] Added RecursiveTreeIterator       Documentation in ext/spl/internal/recursivetreeiterator.inc
MFH: Implement DirectoryIterator::seek
Implement DirectoryIterator::seek
ChangeLog update
New tests
Add unicode suport to ext/openssl
New tests
- New tests
- Added: Deprecated ticks support.
- BFN: #45556, #45555
- Make SAPI include paths work (on my box at least)
- New test
- Make REMOVE_TARGET work in all cases
- MFH: Added support for selectively listing timezone identifiers by country   code through timezone_identifiers_list() / DateTimezone::listIdentifiers(). - MFH: Added timezone_location_get() / DateTimezone::getLocation() for   retrieving location information from timezones.
- Added support for selectively listing timezone identifiers by country code   through timezone_identifiers_list() / DateTimezone::listIdentifiers(). - Added timezone_location_get() / DateTimezone::getLocation() for retrieving   location information from timezones.
- Updated to version 2008.4.1 (2008d)
- Updated to version 2008.4.1 (2008d)
- Updated to version 2008.4.1 (2008d)
- Updated to version 2008.4 (2008d)
fix segfault
- SAPIs are go. Caveat: aolserver, isapi, nsapi, pi3web and (obviously) Linux-specific modules not tested.
Remove GD 1.0 support, still need to adjust the configure scripts to correctly check for a newer version
ChangeLog update
Remove freetype1 support
- MFB: fix crash when some crafted font are given
 - MFB: fix crash when some crafted font are given
- MFB: fix crash when some crafted font are given
- Deprecate ticks
vc9 build fix
vc9 build fix
- MFH: CS/WS
- CS/WS
MFB: This file isn't needed any more
This file isn't needed any more
- MFH: Removed dependencies from php_mbregex to oniguruma types
- Removed dependencies from php_mbregex to oniguruma types
update PCRE symbols
update PCRE symbols
fixed win32 build when ext/mbstring is enabled.
fix folding
fix folding
Support for closures
support for closures
ChangeLog update
Allow PECL builds with PHP 4.  No MTH needed
MFH: [DOC] Add LOB & Collection class parameter reflection
Add LOB & Collection class parameter reflection
revert my previous patch.
Update README to reflect current state of play
- A bit more finesse for .dsp generation - Builds (on my box) for cgi or cli - This is still VC6-only at present
MFH
MFH: improve skipif
improve skipif
- MFB: Added arginfo
- Added arginfo
-nuke weird char
-nuke weird char
-nuke weird char
MFH:- Prevent errors in CVS builds when bison is not there (for Sean :)
MFH:- Prevent errors in CVS builds when bison is not there (for Sean :)
- Prevent errors in CVS builds when bison is not there (for Sean :)
- Added missing test-file.
- fix the fix
Improved support for opcode caches. Now some open() syscalls might be eliminated by caches.
- Regenerated using more recent re2c
- Revert (dunno why I had this like this..)
fixed compile error on Win32 environment.
- MFB: Added arginfo
- Added arginfo
fix build
- Oops.
- MFH: Added a new configure option --with-onig=[DIR] that allows the extension   to link to the external oniguruma library. - MFH: Prevent libmbfl files from being installed when --with-libmbfl is   specified.
ChangeLog update
* MFH: indentation fix only.
* MFH: indentation fix only
- indentation fix & reenable mbregex again.
- MFH: Also add the warnings for times. This does not make sense for the   english text parser, as invalid times are never allowed in there.
- Also add the warnings for times. This does not make sense for the english   text parser, as invalid times are never allowed in there.
- MFH: Port mcrypt_create_iv to windows (aka fix it on windows)
- Port mcrypt_create_iv to windows (aka fix it on windows)
- MFB: do not enable libxml or dom when a dep/header/lib is missing
Sync with bzr
Sync with bzr
- Reverted fix for #44197 (unsuitable for minor versions)
MFB: Tests for strpbrk(), testfest.php.net task #91 and #92.
Tests for strpbrk(), testfest.php.net task #91 and #92.
fix test
fix test
Return null on when param parsing errors occur
New parameter parsing API
Merging from 5_3
Reenabling the test but removing the test cases for old_function as the alternative syntaxes are still there
MFH: fix test
ChangeLog update
add intl to extensions
- MFB: Added arginfo
- Added arginfo
- Added arginfo
- MFH: Added a warning to the error struct in case a parsed-date was found to   be invalid.
- Added a warning to the error struct in case a parsed-date was found to be   invalid.
- Tests from TestFest - Have slightly modified similar_text_error.phpt from original file
- Tests from TestFest - Have slightly modified similar_text_error.phpt from original file
- New tests
- New tests
use int for length
use long for "l"
use zend_bool for "b"
MFB
MFH: Prevent build failure after closures
- Closures come in 5.3
Added support for lambda functions and closures
MFB
No dots
- Some config*.m4 file cleanups: NO tabs in these!
- Update credits: Whenever some extension is removed/added, remember to run scripts/dev/credits and commit ext/standards/credits* !!
MFH: minor speedup - convert offset to long only when needed
minor speedup - convert offset to long only when needed
fix test
add icu version to phpinfo
add icu version to phpinfo
fix typo
fix test
- increase max locale to 80 - add some macros
todo
ChangeLog update
- BFN
- Use new helper
more fixed tests
- MFH Exception handling [DOC] - Exceptions can be thrown while exceptions are pending, they are linked - Exceptions can be handled in __destruct - Add optional Exception $previous parameter to   . Exception::__construct   . ErrorException::__construct
fix skipif sections
- Use new helper
add missing SKIPIF sections
- Improve/fix debugging experience
MFH
add missing SKIPIF
improve code coverage
improve code coverage
MFH: Implement toArray,fromArray and get_properties (Thanks Tony for the patches)
Implement toArray,fromArray and get_properties (Thanks Tony for the patches)
blind fix for a segfault in ext/pdo_firebird/tests/bug_38253.phpt
fix test
fix test
- MFB: wrong bracket position while merging
- wrong bracket position while mergin
apply correct fix
fix segfault in Exception::__toString()
fix test
MFPHP5_3
fixed #43227 removed PHP_INI_PERDIR from mbstring.func_overload.
ChangeLog update
updated bundled oniguruma from 4.4.0 to 4.7.1
- MFH: fix build with VC9 PSDK6.x
- fix build with VC9 PSDK6.x
- MFH: support for new naming
- support for new naming
- MFH: don't use inet_ntop when not present
- don't use inet_ntop when not present
BFN: #45220
- Missed one line in merge
- MFH Allow multiple exceptions in spl's autoload
- Allow multiple exceptions in spl's autoload
- MFH Add support for linking exceptions (implements TODO)
- Add support for linking exceptions (implements TODO) # Right now backtrace is broken, for internal functions I only see the # first char and debugging reveals the length of the function name is seen # as one when building the trace. There is something out of the scope of # this patch broken.
BFN: #45485
ChangeLog update
- BFN: #45449, #45486
MFB: dont forget the header
dont forget the header
- Enable bundled library
MFB: fix iconv linking
fix iconv linking
- Move lib to libmagic
- Step one for bundling the libmagic library. Some config.m4 issues left.
nuke unused variable
MFH: silence warning
MFH: silence warning
- Silence "unused variable" warning when ip6 support is disabled
MFH
make sure dom extension is present
not all stream wrappers use context, so no need to addref in all cases
- BFN: #45460
MFH: manage references of stream context properly
manage references of stream context properly
MFH
fix skip messages
MFH
check for posix_getuid()
drop unused var
fix function protos and is_link() wrapper
ChangeLog update
PHP Testfest. Tests done by Felix De Vliegher
PHP Testfest. Tests done by Felix De Vliegher
fix date formatter positions (bug #14263)
Added tests that demonstrate serious PHAR errors They cannot be easly fixed without algorithms modification
Forgot to remove the count method here
Extensions MUST NOT manipulate with internal functions from EG(function_table) in run-time. It may cause problems with opcode caches and in multi-threaded environment. Now the same functions are overriden at MINIT and call original functions or PHAR ones dependent on flag setting.
Removed SKIPIF sections
ChangeLog update
MFH: Move SXI::count to SXE::count and make it user-friendly
Move SXI::count to SXE::count and make it user-friendly
MFH: Test extended iterators methods
Test extended iterators methods
MFB: fix zlib detection and linking - synch zip config.w32
fix zlib detection and linking
- It's amazing the havoc one little misplaced bracket can cause...
- Clean up ws/cs a bit and add some comments
add missing cvsignore
add zero-terminator to the delimiter (and make valgrind happy)
- MFB: Added arginfo
- Added arginfo
remove UEXPECTF section
add SplFileInfo::getPathInfo fix to NEWS
- MFH: tweak test case to better trigger the (now-fixed) reference bugs
- tweak test case to better trigger the (now-fixed) reference bugs
- Add generated files to .cvsignore
- Embryonic project file generation. Use buildconf --add-project-files and hopefully it'll work. - Please read the README before complaining.
ChangeLog update
Woopsy
MFH:  - use _a for static lib  - fix logic for shared zlib
- use _a for static lib - fix logic for shared zlib
MFB: increase pcre.backtrack_limit
increase pcre.backtrack_limit so that the phpinfo.phpt test passes on my computer. we should really consider increase the default of this limit.. (but not the recursion one though)
- MFH: Memory issues - MFH: // style comments
- Replaced // by /* .. */ comments.
- Replaced // by /* .. */ comments.
Closure::__invoke() is fixed to support references
let re2c do its magic
MFB: fix remaining # comments issues
fix typo
regenerate
now really fix once and for all the #-style comments. also remove some duplicated code in <?, <%, <%= handlers. this also has the side-effect of producing better bytecodes in some special cases
add new tests
add more tests for the parser. currently both fail
Typo, missing items and clarify what sqlite was updated.
This change was backed out of 5.2 and is now in 5.3+
Add missing NEWS items.
- We do not mention bugs that were not in any release. (DMITRY!..)
- Some more reordering
- Reorder, simplify, make it somewhat more readable and easier to read. :)
capitalize multibyte support
Added closures support
ChangeLog update
Exif tests from Eric Steward. Testfest task 82.
Exif tests from Eric Steward. Testfest task 82.
Tweak last commit, should always return NULL when an entry doesn't exist.
Add zend_ini_string_ex so that the you can differentiate between NULL as a value and its absence, this is important for ini_get. Related to bug #42657 and #43348
Add zend_ini_string_ex so that the you can differentiate between NULL as a value and its absence, this is important for ini_get. Related to bug #42657 and #43348
MFB: once is enough
He doesn't actually maintain it that much... :)
MFB: - Added arginfo
- Added arginfo
- MFB: Added arginfo
- Added arginfo
MFB: - Removed zend_arg_defs.c   The first_arg_force_ref, second_arg_force_ref, third_arg_force_ref,    fourth_arg_force_ref, fifth_arg_force_ref and all_args_by_ref are not more used.
- Updated to version 2008.4 (2008d)
- Updated to version 2008.4 (2008d)
- Updated to version 2008.4 (2008d)
- Removed zend_arg_defs.c   The first_arg_force_ref, second_arg_force_ref, third_arg_force_ref,    fourth_arg_force_ref, fifth_arg_force_ref and all_args_by_ref are not more used.
- MFB: Removed unused variables
MFB: - Added arginfo - Removed unnecessary #include "zend_arg_defs.c"
- MFH:  - use ARG_ENABLE for the summary option  - move test if summary function
- move common functions to confutil - MFB: allow to disable the summary (and move test in the function)
- move common functions to confutils - rename the summary option to reflect its usage (Enable Sumamry, yes)
- Removed unused variables
- Added arginfo - Removed unnecessary #include "zend_arg_defs.c"
- Update credits
- Update credits
MFB: string length -> int
MFB: updated to the new parameter-parsing api
MFB: added arginfo (fixes #45388)
- test for ZLIB_SHARED (possible conflict)
- add support for old named zlib (no _a or dynamic) - nuke the right unused vars
- restore wrongly removed vars - test if zlib is shared or not (possible conflict)
ChangeLog update
- Don't do stuff twice over @Jani: pick up mail!
- This file is generated from win32/build/config.w32.h.in. It should never have been in CVS in the first place...
- We forgot to check that the phar exists before trying to extract files from it :)
Duplicate tests to accommodate parameter parsing fixes in 5_3 core (NB the 5_2 tests will fail currently due to name changes, will fix tomorrow)
Remove .htaccess file(??)
Remove .htaccess file(??)
Avoid a leak on return_value
MFH: Add missing test
Add missing test
MFH: First part of count/handlers related fixes
First part of count/handlers related fixes
 - some updates (will be used to send mails when an extension is broken, snaps or from RM/QA)
- has been moved to PECL
- has been moved to siberia (the true one)
- some updates (will be used to send mails when an extension is broken, snaps or from RM/QA)
- MFH:   - update lib/headers detection   - nuke unused variables
- update lib/headers detection - nuke unused variables
add
add test for the shebang thing
- MFH: update lib detection and does not enable it when lib/headers are missing
- update lib detection and does not enable it when lib/headers are missing
- MFB:  don't enable xmlrpc when libxml is missing
- don't enable xmlrpc when libxml is missing
uhm, forgot to commit this one
MFB
regenerate
fix test for good consoles (tm)
regenerate
fix last part of bug #44654
regenerate
fix first part of bug #44654: scan for opening tag <? after a # char
add
add test for #-style comments. passes fine on both 5.2 and 5.3
improved zend-multibyte detection.
MFB: fix CVE-2008-2371
fix CVE-2008-2371. patch by Tavis Ormandy # currently there's no release of PCRE with this fix. PCRE's author recommended applying this patch in the meantime
upgrade to pcre 7.7
upgrade to PCRE 7.7
- MFB: correctly test the VCVERS (four digits now)
- correctly test the VCVERS (four digits now)
MFB: - Added arginfo - Removed #include "zend_arg_defs.c"
MFB: Added arginfo
added test script for zend-multibyte  (moved/modified from ext/mbstring/tests/)
ChangeLog update
- Added arginfo - Removed #include "zend_arg_defs.c"
MFB: - Added arginfo - Removed #include "zend_arg_defs.c"
- Added arginfo - Removed #include "zend_arg_defs.c"
- MFB: Removed unnecessary #include "zend_arg_defs.c"
- Removed unnecessary #include "zend_arg_defs.c"
MFB: - Added arginfo (methods) - Removed #include "zend_arg_defs.c"
- Added arginfo (methods) - Removed #include "zend_arg_defs.c"
- MFB: zend_arg_defs.c is unnecessary now
- zend_arg_defs.c is unnecessary now
-MFH:  improve detection of VC version and summary (2k2 and 2k3 are 1300 and resp. 1310) (Thx Marcus)
- improve detection of VC version and summary (2k2 and 2k3 are 1300 and resp. 1310) (Thx Marcus)
- MFH: don't redefine WINDOWS and pid_t
- don't redefine WINDOWS and pid_t
- MFH: _getpid is in process.h
- _getpid is in process.h
- MFH: silent redefinition warning
- silent redefinition warning
-MFH:  fix build (function was never implemented), even if noone uses it (or complains about broken build ;)
- fix build (function was never implemented), even if noone uses it (or complained about broken build ;)
cosmetic change.
removed wrong bytes.
revert commit.
added CP1254
- added koi8-u (Ukrainian) and CP1254 (Turkish).
ChangeLog update
- MFB: fix compile error with VC6
- fix compile error with vc6 (snaps)
MFB: fixed tests not to rely on actual strings of errors, as those are not defined by any standard and are platform-dependent
- Moved protos to .c (sync with HEAD)
- Reverted previous commit - Moved protos to .c (sync with HEAD)
fixed tests not to rely on actual strings of errors, as those are not defined by any standard and are platform-dependent
MFB: - Added arginfo - Removed #include "zend_arg_defs.c" (it's unnecessary now)
- Added arginfo - Removed #include "zend_arg_defs.c" (it's unnecessary now)
- Removed ntest and utest - Removed -U flag to `make test' just to test once each test
- Revert that crap.
ChangeLog update
New parameter parsing API
fix key container access
- MFB: add 2007a/b info - update config.w32 to detect static lib
size_t -> int
- mcrypt_create_iv entry
- fix mcrypt_iv on windows, use urandom equivalent - MFH, code cleaning and reorganisation
- MFB: New parameter parsing API
- New parameter parsing API
- MFB: Added arginfo (functions)
fix run-tests.php failure when no custom php.ini passed
fix test
fix test
add a line to phpinfo() to indicate whether multibyte support is On or Off
make --enable-zend-multibyte known to configure
fix tests
- Added arginfo (functions)
ChangeLog update
fix win build
- MFB: compiler version and architecture detections
- MFB:  Add summary info
- MFB: improve ADD_EXTENSION_DEP detection
- MFB: does not enable zlib when a lib or header is missign
- add summary function and VC version info
- MFH: re2c detection, PHP_VERSION
- add version info for 2007a and b - update config.w32
- MFH: fix make test TESTS=... and dynamic extension usage on windows
- fix make test TESTS=... and dynamic extension usage on windows
MFH
fix test
MFH: check return value of hash_find()
use zend_ascii_hash_find() and check its return value to prevent crash when function not found
ChangeLog update
- MFB: Added arginfo
- Added arginfo
- MFB: Added arginfo
- Added arginfo
- MFB: Added arginfo
- Added arginfo
- MFB: Added arginfo (functions)
- Added arginfo (functions)
- MFB: Added arginfo
- Added arginfo
- MFB: Added arginfo
- Added arginfo
Removed redundant code
Removed redundant code
- Removed unused variables
cleanup on test failure
Use new parameter parsing API
Use new parameter parsing API
fix test
fix crash in define()
fix typo
misc parse_parameters fixes
int -> long
this should be long
MF53
fix curl_init() "s" in HEAD accepts zstr
long -> int + minor sources reorganization
fix typo
string length -> int
int->long, add missing "s"
more int -> long fixes
more long -> int fixes
on the contrary, string length is int
MFH
int -> long
ChangeLog update
convert all built-in functions to new API
- MFB: Added arginfo
- Added arginfo
- MFB: zend_arg_defs.c is unnecessary now
MFB: - Added arginfo - Removed #include "zend_arg_defs.c"
- Added arginfo - Removed #include "zend_arg_defs.c"
- zend_arg_defs.c is unnecessary now
"l" is long, that's why it is "l", not "i"
int -> long
ChangeLog update
- New parameter parsing API
MFB: - Added arginfo
- Added arginfo
MFB: - New parameter parsing API - Added arginfo
- New parameter parsing API - Added arginfo
- New parameter parsing API
- New parameter parsing API - Added arginfo
touched zend_language_scanner.c
update zend_language_scanner.l to maintain the dependencies.
implemented again zend-multibyte for PHP 5.3
ChangeLog update
- MFB: Added arginfo
- Added arginfo
- New parameter parsing API
updated to the new parameter-parsing api
added arginfo (fixes #45388)
MFH: Sort Windows changes for mhash BC layer
Sort Windows changes for mhash BC layer
MFB: Make the old mhash API a wrapper around hash, this removes a dependency.
updated to the new parameter-parsing api (port from 5.3)
fixed types (no more compiler warnings)
updated to the new parameter-parsing api
ChangeLog update
deprecate zend_get_parameters_ex
deprecate zend_get_parameters_ex
- MFB: Added arginfo
- Added arginfo
enable on MSVC too
enable on MSVC too
OCI8: MFH: (PECL #14219) Improve README
OCI8: (PECL #14219) Improve README
- MFB: Added arginfo
- Added arginfo
- MFB: Added arginfo
- Added arginfo
- MFB: Added arginfo
- Added arginfo
- MFB: Added arginfo
- Added arginfo
ws
ws
- New parameter parsing API
ChangeLog update
MFB: allow to deprecate engine functions
in preparation for a performance optimization that involves eliminating phar's interception of zend_compile in favor of a new to-be-added hook in PHP 5.3+, allow "include 'phar:///path/to/my.phar';" to work as equivalent to php /path/to/my.phar this slight change in scripting still allows inclusion and execution of phar stub, but removes the need to check and modify path in zend_compile, which allows us to play much nicer with external tools like debuggers/opcode caches
- New parameter parsing API
allow deprecating engine functions
Make the old mhash API a wrapper around hash, this removes a dependency.
MFB: tests for lchown(), testfest.php.net task number 129.
Tests for lchown(), testfest.php.net task number 129.
ChangeLog update
- MFB: Removed E_DEPRECATED on is_a()   (http://marc.info/?l=php-internals&m=121390431523970&w=2)
- Removed E_DEPRECATED on is_a()   (http://marc.info/?l=php-internals&m=121390431523970&w=2) [doc]
- New parameter parsing API
- New parameter parsing API
- New parameter parsing API
- New parameter parsing API
Added support for namespaces
Added support for namespaces
New parameter parsing API
Reverted zpp API Cleanup patch - memory troubles?
- Hackish but working parameter parsing, no longer using   zend_get* at least
- New parameter parsing API
ChangeLog update
- New parsing parameter API - Tests have been adjusted, if you have something else failing   let me know now! All tests seem to pass fine at the moment.
- Tests for parsing parameter api
- New parameter parsing API
New testcases for hash_file(), Committed for Felix De Vliegher, TestFest Task No: 75 & 76, Tested on RHEL5 -32bit, WinXP-32bit
New testcases for hash_file(), Committed for Felix De Vliegher, TestFest Task No: 75 & 76, Tested on RHEL5 -32bit, WinXP-32bit
MFB: Added arginfo
- Added arginfo
MFB: tests for ob_get_flush(), testfest task number #131
Tests for ob_get_flush(), testfest task number #131.
Add missing header
Add missing header
Even more debug info
Even more debug info
Reverted part of Steph's patch (stdin stream must be closed to make script finish)
Not sure why this file was comitted? I was running a CVS update and then I see commit messages with my user id! Reverting the changes.
MFH
no message
ChangeLog update
fix several issues: 1) segfault in phar_buildfromdirectoryiterator8.phpt 2) tests failing because SKIPDOTS is default on 64 bit, not on 32 3) Marcus, you really need to add SKIPDOTS as a class constant, so we don't have to use 0x00001000
Added more debug info for tracking problems
Added more debug info for tracking problems
- move sybase to pecl
- One solution for the openssl issues - config.m4 needs bringing into line with config.w32, there may be broken behaviour under *nix until this is done
- do not enable an ext when a lib/header fails - use MESSAGE in mysql* - use correct CFLAGS for ext/libxml headers
- MFB: Added arginfo
- Wrong SKIPIF message
- Added arginfo
- Added arginfo
- Added arginfo
- Added XFAIL
- Added XFAIL
- use stdout for MESSAGE (thx Steph)
- set PHP_[EXTNAME] to yes for spl, pcre and reflection (always on), this variable is required by ADD_EXTENSION_DEP
- add a MESSAGE function   [DOC] to be used instead of STDOUT in config.w32, it allows them to be redirected (like in a quiet mode) - add the list of enabled SAPI - improve the table output
- fix ADD_EXTENSION_DEP detection so it can match it anywhere in a line
true fix for potential segfault in phar_build
fix tar-related failures
- New parameter parsing API
ChangeLog update
- really check for the dependency, libs and header and don't enable the ext if something is missing
- bindlib has its own package
- return true/false when a dep addition was succeeded or not
fix flushing for PHP6 output code
URI should be UTF-8
- don't show zlib as available when libs or headers are missing
- do not show libxml as enabled when libs are missing so ADD_EXTENSION_DEP('myext', 'libxml') can do its job
- add a list of the enabled extensions and how they are built (shared or static   list of SAPIs and libs used will follow shortly (to be used as QA check during the builds and as convenience)
- clean new line (unix only now)
New parameter parsing API for string, part I
MFH: Response to: [PHP-DEV] cleaning up the functions - any volunteers? :)
MFH: Response to: [PHP-DEV] cleaning up the functions - any volunteers? :)
Response to: [PHP-DEV] cleaning up the functions - any volunteers? :)
- Revert the two blocks of code that implement the phar_build optimization, causes segfaults under *nix - Leave the new structure in place to make re-implementation trivial
MFH: Add some tests to increase code coverage
Add some tests to increase code coverage
- New parameter parsing API
updated to the new parameter-parsing api
updated to the new parameter-parsing api
- Revert the tar.c part of the inode calculation fix - All tests now pass under win32, please test under *nix/osx (4 known fails at present)
fix parameter parsing change
updated to the new parameter-parsing api
Testcases for vfprintf(), testfest task #133.
- New parameter parsing API
- ws, typo fix
Basic test for ob_get_length(), testfest.php.net task #132
Basic test for ob_get_length(), testfest.php.net task #132
updated to the new parameter-parsing api
- Removed unused variables
- Changed zend_get_parameters_ex -> zend_parse_parameters - Simplified source in php_sybase_do_connect() # Part 1, more to follow
Testfest task 93. Written by Sebastian Deutsch.
Testfest task 93. Written by Sebastian Deutsch.
ChangeLog update
fix inode calculation, we need fname to be set for phar/tar formats prior to manifest parsing
new tests for phar.cache_list
- New parameter parsing API
updated to the new parameter-parsing api
- Don't free stuff you still need
- Kill a couple of double frees and a memleak @Greg: You may want to run valgrind over the filestat functions before release..
- pefree pemalloc'd filename
- fix for segfault in 5.2 (patch from Greg)
- ws
- New parameter parsing API
define ALLOC_PERMANENT_ZVAL for PHP 5.2
PHP 5.2 fixes to direct include of compressed archives
- New parameter parsing API
close stream on failure
82x(./profile2) speedup for buildFrom*()
fix leak
- New parameter parsing API
ChangeLog update
- New parsing parameter API cleanups
- New parameter parsing API
fix buglet
- New parameter parsing API for var.c & tests
- New parameter parsing API
Allowed to override internal classaes with "use"
Allowed to override internal classaes with "use"
- 5_2 compatibility stuff (so we can stay in sync with PECL)
- New parameter parsing API
- Use SKIP_SLOW_TESTS where it's most useful
- Kill the last compiler warning under 5.3 (release-only)
- New parameter parsing API
The only reason that particular 'real solution' wasn't applied in the first place was that it also breaks the shared build Maybe we don't need to call a non-existent dtor if we're going to physically apply zend_hash_graceful_reverse_destroy()? - This works on my box, please test under *nix/OSX
minor performance improvement
making progress - up to 42/phar vs. 48/disk with these optimizations
revert really bad solution to the zend_init_rsrc_list/zend_destroy_rsrc_list problem, replace with real solution
New testcases for vfprintf(), Committed for Felix De Vliegher, TestFest Task No: 124, Tested on RHEL5 -32bit, WinXP-32bit Added *.txt to .cvsignore
ChangeLog update
- remove debug code
Oops.
Two new options for Travis to come to terms with: - --set-timeout <n> sets the timeout in seconds for the call to stream_select() during system_with_timeout() - -x sets an environmental variable, SKIP_SLOW_TESTS, which can be checked for during a SKIPIF clause
Two new options for Travis to come to terms with: - --set-timeout <n> sets the timeout in seconds for the call to stream_select() during system_with_timeout() - -x sets an environmental variable, SKIP_SLOW_TESTS, which can be checked for during a SKIPIF clause
MFB: sync with 5.3
Test updates and bundle 1.3.3
update the docs # if we keep it in CVS, it should have correct docs
- ext/standard currently has a dependency on ext/ereg thanks to browscap.c
- '' != 'no'
- NEWS for fpdf and ncurses > PECL
- move fpdf to PECL
- mvoe ncurses to PECL
Added test for bug #45312
Added test for bug #45312
ChangeLog update
fix tests for builtin Zend functions using new parsing API
Use new parameter parsing API for builtin functions
- inherited methods don't unixify paths along the way. Allow for it.
- Kill 10 MSVC compiler warnings due to type conflict - Make cached manifest test platform agnostic - Comment out zend_(init|destroy)_rsrc_list() and associated references
- really fix the windows builds, don't cast many times when only the hash function requires void ** - copy/paste evilness with TSRM_CC/DC (tests still pass but would be nice to speed them up...)
fix windows build and more performance jumps (these are minor) implement real copy-on-write use virtual_dirs for wrapper stat
MFH: updated website team info
MFH: updated website team info
updated website team info
ChangeLog update
Committed for Felix De Vliegher, TestFest Task No: 123, Tested on RHEL5-32bit, WinXP
Committed for Felix De Vliegher, TestFest Task No: 122, Tested on RHEL5, WinXP
Committed for Felix De Vliegher, TestFest Task No: 123, Tested on RHEL5, WinXP
Committed for Felix De Vliegher, TestFest Task No: 122, Tested on RHEL5, WinXP
ChangeLog update
Test committed for felixdv
Test committed for felixdv
MFH: add parameter allowing node to be exported into existing Document context [DOC] add test fix warnings
add parameter allowing node to be exported into existing Document context add test fix warnings
remove unused variables in phar_fix_filepath copy virtual_dirs to avoid segfault on multi-process fix metadata reading for phar.cache_list initialize manifest to exact size needed (performance increase) fix freeing of signature on error to use the correct persist value (fixes segfault on error in cache.list) reset EG(regular_list) so it is identical to how we found it
fix hashtable creation for tar to be estimated size needed
fix hashtable creation for zip to be exact size needed, fix endian issue for loading manifest
ChangeLog update
minor performance improvement
fix memleak
another optimization - move inode hash to initial manifest parsing, improves runtime perf of stat slightly
minor optimization
- MF5.3: Improved warning message to call-time pass-by-reference when used with internal function   (http://news.php.net/php.internals/38252)
- Improved warning message to call-time pass-by-reference when used with internal function   (http://news.php.net/php.internals/38252)
HUGE speed improvement, from 19 req/sec to 27 req/sec for phpMyAdmin - now speed with apc+phar.cache_list = on-disk speedcvs diff -u |less  This is by generating a list of virtual directories and using those in stat calls instead of scanning the whole manifest hash table.  on-disk phpMyAdmin = 28 req/sec
MFH: Add tests for iterators when instanciated without argument (by Sebastian SchÃ¼rmann)
Add tests for iterators when instanciated without argument (by Sebastian SchÃ¼rmann)
ChangeLog update
BFN fix ordering
MFH: fixed bug #45251 (double free or corruption with setAttributeNode()) add test
MFH: fixed bug #45251 (double free or corruption with setAttributeNode()) add test
fixed bug #45251 (double free or corruption with setAttributeNode()) add test
ChangeLog update
[DOC] implement full signature support for tar-based archives.  By default, data archives do not have a signature, but can have one set via setSignatureAlgorithm()
full refactor of signatures complete - now to implement them for tar as a starting point
Commited for Sanjay, reviewed by Pierre. Testfest task 5.
PHP_5_2 compat - add pestrndup if undefined
Commited for Sanjay, reviewed by Pierre. Testfest task 5.
Commited for Sanjay, reviewed by Pierre. Testfest task 117.
Commited for Sanjay, reviewed by Pierre. Testfest task 117.
MFH
MFH
fixed bug #27421 (by david at dfoerster dot de) mbstring.func_overload set in .htaccess becomes global
Commited for Sanjay, reviewed by Pierre. Testfest task 79.
Commited for Sanjay, reviewed by Pierre. Testfest task 79.
Commited for Sanjay, reviewed by Pierre. Testfest task 117.
Commited for Sanjay, reviewed by Pierre. Testfest task 117.
Commited for Sanjay, reviewed by Pierre. Testfest task 118.
Commited for Sanjay, reviewed by Pierre. Testfest task 118.
partial refactor - move signature verification into its own function, in preparation for tar/zip signature support. next is signature creation
MFH: Add pestrndup()
ChangeLog update
- Removed UEXPECTF
Testfest: putenv() safe_mode tests by Brian DeShong
Testfest: various tests for ReflectionParameter
Testfest: various tests for ReflectionParameter
Testfest test cases for ReflectionExtension
Testfest test cases for ReflectionExtension
Testfest: ReflectionExtension tests by Gerrit te Sligte and Leon Luijkx
Testfest: ReflectionExtension tests by Gerrit te Sligte and Leon Luijkx
Add tests from testfest
Add tests from testfest
Testfest: ReflectionExtension::info()-test by Stefan Koopmanschap
Add tests from testfest
Testfest: ReflectionExtension::info()-test by Stefan Koopmanschap
Add tests from testfest
Reflection::getModifierNames()-test by Felix De Vliegher (Testfest)
Reflection::getModifierNames()-test by Felix De Vliegher (Testfest)
[DOC] add phar.cache_list, a PATH_SEPARATOR-separated list of full paths to phar archives to cache at startup.  This caches the manifest, so that on first access to a phar archive, no file manifest parsing occurs.
ensure we don't try to use an unitialized hash table
MFH
avoid invalid reads when reached memory_limit during initialization
- Tidy up loose ends in diff and exp output - All test output now has *nix line endings (only diffs didn't in 5_3)
remove oops
fix build
fix build (noticed by Alexey Zakhlestin)
- Some calls to file_put_contents() need FILE_BINARY, others choke on it. You tell me.
fix error messages
ChangeLog update
- New test
- New test
MFH
remove 8 years old tests (not used anyway)
- more cs/ws fixes
- binary safety
- kill unicode.semantics checks
- code beauty (ws/cs)
- Removed direct executor recursion. - Use fastcall calling convention in executor on x86.
- Removed direct executor recursion. - Use fastcall calling convention in executor on x86.
Filesystem tests.
Filesystem tests.
Filesystem tests.
closeder/readdir/rewinddir must work only with directories
closeder/readdir/rewinddir must work only with directories
closeder/readdir/rewinddir must work only with directories
MFH: fixed imap_listscan() proto
MFH: fixed imap_listscan() proto
fixed imap_listscan() proto
ChangeLog update
- Change E_COMPILE_ERROR to E_WARNING (for wrong visibility on magic methods)
new tests (forgot to add these earlier)
fix PHP Bug #45218: PHAR archive built from directory limited by max open file handles
Written by Sanjay Mantoor and reviewed by Pierre.
Written by Sanjay Mantoor and reviewed by Pierre.
fix memleak on error
- BFN
fix typo
fix typo
fix typo
ChangeLog update
- Removed ntest and utest - Removed -U flag to `make test' just to test once each test
add get_debug_info
add get_Debug_info + fix proto
fix compile warnings if openssl is enabled statically.  fix dangerous use of wrong length var in openssl signature verification
- Removed unnecessary SKIPIF (unicode/tests/*) - Removed non-unicode tests (tests that uses SKIPIF like "die('skip unicode.semantics=on');")
MFH
fix .cvsignore
fix test
fix test
ChangeLog update
with unicode buffers, positions are in uchars
- MFB: do not export the api or install the headers
- should not be called butlet remove it as well
MF5: allow aggregating use statements
allow aggregating use statements
ChangeLog update
fix ZTS build
MFH: more checks and tests
more checks and tests
Update exif tests to conform with the unicode functions
Add Unicode support
Update tests to conform with the unicode functions
Add Unicode support and set as unicode compatible
add more tests (Felipe)
more tests (by Felipe)
MFH
fix several memleaks and invalid reads
add new test
MFH: disallow $a[] = value syntax
disallow $a[] = value syntax
MFH
update credits
ChangeLog update
MFH: Implements C arrays wrapper
Implements C arrays wrapper
Backout fix for spaces in both the program name and argument name, this will be fixed in PHP 5.3+ only
backport the yyless patch from 5.3 branch. it seems I forgot to commit this.. # you'll probably need re2c 0.13.5 or newer to regenerate this file # Matt: please advise if there's still somrthing pending (i.e. was the heredoc/nowdoc patch MFB already?
fix test
ChangeLog update
Update
(Bugs 41348, 41563, 42456, 42939) Appease the masses and fix compilation with Oracle 8.1.  This gives cleaner support for older releases now that PHP 5.3 is firmly Oracle 9.2+ only.  No plans to MTH.
MFB: OCI8: Remove macros obsoleted by rev 1.55.2.3.2.11.2.1 when Oracle 8 support was dropped
MFB: sync with PECL 1.2.5 release
OCI8: Remove macros obsoleted by rev 1.71 when Oracle 8 support was dropped
MFH: Make tests interruptible; clean up tables at start
Make tests interruptible; clean up tables at start
Sync for PECL OCI8 1.2.5 release
- New tests
- New tests
MFH: fix test
fix test
ChangeLog update
MFH: rawurlencode now conforms to rfc 3986 (~ is not encoded) [DOC]
rawurlencode now conforms to rfc 3986 (~ is not encoded) [DOC]
- New test
- New test
- Make phar.phar building work for virtualized builds
- Make sure we are not trying to pack directories
- Update
- Use -n only for current built PHP
- Improve pear usage and PHP_Archive detection
fix test (the test still fails because of broken preg_match())
fix test
fix tests
ChangeLog update
- Prefer current CLI target to build phar.phar - Use php -n - Use shared phar, bz2, zlib automatically
MFB: Add snefru256 as an alias for snefru, since in reality that is the implementation.
Add snefru256 as an alias for snefru, since in reality that is the implementation.
BFN
- Removed unnecessary XFAIL section
- Removed unnecessary XFAIL section
- New tests
- New tests
Tests from London test fest 2008
Tests from London test fest 2008
ChangeLog update
- Remove checked-in or older version of phar.phar as we might not be able to open it
- Need to use a proper inheritance check
Correct test name
MFB: Add sha224 support.
- PCRE is always there, no need for this check anymore
MFH: simplify, readability
- Simplify a bit and make a bit more readable
Add sha224 support.
- Revert pointless patch: a) the version is already there, see line above, b) one branch commits are idiotic to begin with, we have three active branches! This only leads to out-of-sync situations Ã¡la PDO..
MFH: Initialize with length instead of 0
Initialize with length instead of 0 (and thanks Antony for finding)
fix uninitialized variable
fix uninitialized variable
- reintroduce the x.y.z version string info (a bit nicer to make the other guy happier) - silent warning (windows only and don't remove it, thanks)
- Revert crap # Someone should remove Pierre's karma too..
- don't use openldap/portable and build the human readable version - silent strdup redclaration warning
ChangeLog update
- add OpenLDAP version info in phpinfo (windows only, have to check if openldap/portable.h is present on linux headers)
MFB5.3: arginfo & fix protos
Add arginfo & fix protos
MFB: fix arginfo
fix arginfo and proto
MFB: Add arginfo & fix protos
Add arginfo & fix protos
MFB: Back out the previous change as it broke the Windows builds.
Back out the previous change as it broke the Windows builds.
- Make work with new API
- Add Openssl support
add openssl signing support.  This adds an extra parameter for the contents of the exported private key to Phar->setSignatureAlgorithm, and expects the public key to be in a file named blah.phar.pubkey in the same directory as the phar blah.phar.  This works with openssl static or shared and fails gracefully if openssl is not present without adding a dependency. config.w32 needs updating to match config.m4 [DOC]
ChangeLog update
- MFH Simplify
- MFH Add 'help commands' support
- MFB config stuff
- Add phar command as installable command
- MFH Add pharcmd to default targets if present
- Add pharcmd to default targets if present
Add support for proxies (patch by Christopher Jones)
- Add version comand
- Add version comand
ChangeLog update
patch by Christopher Jones: use wget/fetch by default if available, correct typo/Errrrrorr in fetch.php
MFB: fix corrupted zips, fix postprocess for compressed zip file
fix corrupted zips, fix postprocess for compressed zip file
MFB: refactor function names for clarity.  No functionality change
refactor function names for clarity.  No functionality change
- not exported
MFH: Only check args once in php_array_diff_key/intersect_key, not on each iteration. This also makes sure ALL args are checked (pre-5.2.5 behavior)
MFH: Only check args once in php_array_diff_key/intersect_key, not on each iteration. This also makes sure ALL args are checked (pre-5.2.5 behavior) - Also, use new hash_quick_del function where possible
Only check args once in php_array_diff_key/intersect_key, not on each iteration. This also makes sure ALL args are checked (pre-5.2.5 behavior) - Also, use new hash_quick_del function where possible
ChangeLog update
MFB: fix PECL bug #13981: Third-party zips fail entry interrogation
fix PECL bug #13981: Third-party zips fail entry interrogation
MFB
ChangeLog update
- Added check for encoding optional parameter (avoiding the segfault in filter.c: strlen(encoding))   If the parameter is not suplied, it will try to use the UG(stream_enconding)
- Added zval separation (avoid crash when using fwrite($fp, $fp)).
- Added XFAIL section in tests to issue under discussion
- Added XFAIL section in tests to issue under discussion
ChangeLog update
- c/p evilness
- c/p evilness
- [MFH] Add compiler informations on Windows (will add more info later, like x86 or x64 and makes it available in userland)
- Add compiler informations on Windows (will add more info later, like x86 or x64 and makes it available in userland)
- killed off UEXPECT - com_dotnet gets a .cvsignore - Ulf will take care of mysql extensions, rest complete
- Removed UEXPECT(F)
- Removed UEXPECT(F)
- Removed UEXPECT(F)
- Removed UEXPECT(F)
DOM tests from TestFest
DOM tests from TestFest
DOM tests from TestFest
- Updated to version 2008.3 (2008c)
- Updated to version 2008.3 (2008c)
- Updated to version 2008.3 (2008c)
- Removed UEXPECT(F)
Regenerate
Regenerate
- killed off UEXPECT - html_translation_table and setlocale tests are no longer relevant - there are a number of ANSI-encoded files. Is this deliberate?
MFH: Add array_init_size() and use it where array size is known at initialization
Add array_init_size() and use it where array size is known at initialization
MFH: DOM Tests from London Testfest
DOM Tests from London Testfest
- killed off UEXPECT
- killed off UEXPECT
- killed off UEXPECT - no getmxrr() under doze
- killed off UEXPECT
- Removed UEXPECT(F)
- Removed UEXPECT(F)
ChangeLog update
- killed off UEXPECT
- killed off UEXPECT - E_DEPRECATED doesn't always allow stuff to pass?
- killed off UEXPECT - everything passes here on my box, yay
- killed off UEXPECT
- killed off UEXPECT - Tony has a patch that should fix all these
- killed off UEXPECT - another of those parser differences in assert_02.phpt. Please check.
- killed off UEXPECT - could someone please fix var_export2.phpt? NUL is corrupted, can't fix here
- killed off UEXPECT
- killed off UEXPECT - altered EXPECT for parser errors. This may or may not be a Good Thing.
fix typo
ChangeLog update
Added --XFAIL-- section
Added --XFAIL-- section
Remove E_DEPRECATED from get_magic_quotes_*()
ws
MFH: Add a prepend param to spl_autoload_register
Add a prepend param to spl_autoload_register
remove the skipif
remove the skipif
MFH: Drop SKIPIF check for ext/spl.
Drop SKIPIF check for ext/spl.
ChangeLog update
New tests from testfest
New tests from testfest
dos2unix
MFH: dos2unix
dos2unix
MFH: Also register the get_iterator handler for Max/Min Heap
Also register the get_iterator handler for Max/Min Heap
- [DOC] restore get_magic_quotes_gpc and get_magic_quotes_runtime   they always return false.   (let save the world, spare bandwidth and kill the trolls 1/2)
- MFB major fixes    * found felipe's segfault in util.c and fixed the segfault (3 tests fail due to odd behavior of . and .. on this machine)    * fixed serious flaws in the setting/resetting of is_data - now it works properly.  Assume      all new PharData are tar-based, and allow passing Phar::ZIP to PharData constructor to override this    * fix broken earlier commit, introduced segfault that broke 20 tests here
MFH: Drop SKIPIF check for ext/spl.
Drop SKIPIF check for ext/spl.
MFH: dos2unix
MFB: Drop SKIPIF check for ext/spl.
Drop SKIPIF check for ext/spl.
- MFB fix offset detection in tar files
Add tests from testfest
MFB: Drop SKIPIF check for ext/reflection.
Drop SKIPIF check for ext/reflection.
Add tests from testfest
- MFH Add constants and new test (test from testfest.php.net)
- Add constants and new test (test from testfest.php.net)
ChangeLog update
- Make use of a valid .phar pear installer
More basic ReflectionClass tests from Dutch TestFest.
More basic ReflectionClass tests from Dutch TestFest.
MFH
improve regexp to support b0rked SED versions (i.e. Solaris)
MFH: use bundled PCRE library when both yes & no passed as argument, look for headers and the lib otherwise
use bundled PCRE library when both yes & no passed as argument, look for headers and the lib otherwise
When dumping entire document to file via asXml() don't lose the encoding
MFB:When dumping entire document to file via asXml() don't lose the encoding
When dumping entire document to file via asXml() don't lose the encoding
ChangeLog update
Enable inet_pton() and inet_ntop() on Windows in HEAD
[DOC] enable inet_pton() and inet_ntop() on Windows
Basic ReflectionClass tests (from Dutch TestFest)
Basic ReflectionClass tests (from Dutch TestFest)
major fixes  * found felipe's segfault in util.c and fixed the segfault (3 tests fail due to odd behavior of . and .. on this machine)  * fixed serious flaws in the setting/resetting of is_data - now it works properly.  Assume    all new PharData are tar-based, and allow passing Phar::ZIP to PharData constructor to override this  * fix broken earlier commit, introduced segfault that broke 20 tests here
ChangeLog update
fix offset detection in tar files
MFB fix convertTo\*() for same-named archives with no files
fix convertTo\*() for same-named archives with no files
- fix test
- fix test
- actually disable the ASSERT error dialog box (affects debug mode only), helps to run the tests and coverage analyze
- Committing tests reviewed after London TestFest 08 - Credits to: Mike Sullivan and James Lewis
MFH
use macros instead of hardcoded encoding names (%$#@# AIX is totally broken..)
- Committing tests reviewed after London TestFest 08 - Credits to: Mike Sullivan and James Lewis
- Remove check for unicode.semantics
fix run-tests.php (Felipe)
MFH
MFH
add missing .cvsignore
use ZEND_U_CONVERTER() macro to prevent segfaults when the converter is not set (i.e. NULL)
looks for Unicode constants in Unicode mode
- sync with PECL HEAD
ChangeLog update
use correct check for unicode strings may be still strings, even in Unicode mode
make sure that converters are not equal to utf8 & ascii before destroying them, or we may end up with double free
fix tests
fix tests (say hello to disk C:\)
Coding style
Coding style
MFH: Allow non-long values for proxy_port, connection_timeout and convert them
Allow non-long values for proxy_port, connection_timeout and convert them
fix function signature and silence compile warning
nuke unused variables
fix invalid free in Unicode filter
proper fix
proper fix
proper fix
s/zend_hash_exists/zend_hash_find/
MFB relax rename requirements
relax conversion, so that if a phar has no files, we can convert it to another format without changing the extension
ChangeLog update
Crossing the Rubicon: remove the unicode.semantics switch and default unicode mode to On.
- unicodify expected output
- IS_UNICODE checks and conversions - stub and creation file updates - far too many test updates to think about
partial fix for Bug #44939, E_DEPRECATED warnings on pear install
Tests from PHP London TestFest 2008
Tests from PHP London TestFest 2008
Moving DOM tests to correct folder.
Moving DOM tests to correct folder.
Tests from PHP London TestFest 2008
Tests from PHP London TestFest 2008
ChangeLog update
MFH fix mem leak, add test for previous segfault fix
fix memleak, add test for previous segfault fix
MFB fix segfault
fix segfault, test coming shortly
- Reverted the accidental previous commit
- Removed "short_open_tag" entry (the related patch was reverted)
- MFB: Making compatible with 64bit platform
- Keep 5_3 stub and creation files in sync with what I have in CVS HEAD (MFB will likely be tomorrow now)
Revert.
Revert.
MFB: Make mcrypt_enc_self_test() return value compatible with documentation and mcrypt_module_self_test()
Make mcrypt_enc_self_test() return value compatible with documentation and mcrypt _module_self_test()
- MFB: Making compatible with 64bit platform
- Making compatible with 64bit plataform
MFB: Added missing INI handler
Added missing INI handler
Wrong file
Wrong file
ChangeLog update
- Added UEXPECTF
MFH: Tests from Munich PHP Testfest 2008
MFH: Tests from Munich PHP Testfest 2008
Tests from Munich PHP Testfest 2008
enable by default statically instead of shared this is done by removing zlib/bz2 explicit dependencies because they are unnecessary we only ever use the stream filter, and the check for existence has been moved to runtime where it is after startup
enable by default statically instead of shared this is done by removing zlib/bz2 explicit dependencies because they are unnecessary we only ever use the stream filter, and the check for existence has been moved to runtime where it is after startup
MFB fix test (again)
fix test (again)
MFB fix test
fix test
Tests from London test fest 2008
Tests from London test fest 2008
ChangeLog update
Tests from Testfest 2008
Tests from Londn test fest
MFH: small CSE optimizations
Make it backward compatibility
- Changed 'Z' to 's' (parameter parsing), the code didn't check if the parameter is a string.
- MFH: Improved fix (used 's' in parameter parsing)
- Improved fix (used 's' in parameter parsing)
- MFB: Added conversion to string.
- Added conversion to string.
ChangeLog update
cosmetics
as discussed on internals, enable phar by default for testing purposes. Phar is enabled as a shared extension by default in order to allow zlib/bz2 to be built shared.  If phar is statically built, both zlib and bz2 must be statically built in order for phar to use them, so default compile as shared is much more flexible
MFB: add full metadata support for tar-based archives and test
add full metadata support for tar-based archives and test
Replace the iterator correctly after being cloned (related to #44964)
Implement SplPriorityQueue::getExtractFlags()
MFB: plug security hole of unfettered creation access to .phar magic directory
fix potentially major security hole: modification/creation of files in .phar directory enabled in many locations which then allows easy creation of tar/zip-based phar archives with a simple rename even when phar.readonly=1.  Plug the hole very tightly, allowing read access to files, and also excluding them from opendir() output
make test OS-agnostic
Tests from Testfest 2008
Tests from London test fest 2008
ChangeLog update
BFn
- MFH - Make internal code forward-compatible. This included a binary cast in the default stub, hence test updates.
- Make internal code back-compatible. This included a binary cast in the default stub, hence many test updates. - Just over a third of tests pass. Test manifests are broken currently.
and the last one..
fixed more titles
fix test titles
fix test names
fix test names
- MFH: Add check for avoid segfault when trying instantiate PDORow manually
- MFH: Add check for avoid segfault when trying instantiate PDORow manually
- Add check for avoid segfault when trying instantiate PDORow manually
MFB: The "Steph special" :-) to allow plain 'configure' to be used
MFB: Steph's changes; to fix build failure after confutils.js changes (PRODUCT_NAME being undefined)
MFB and steph's pecl fixes into confutils
Windows configure fixes, a few additional lib names allowed, apache2 only on for zts builds since apache on win is always threaded, isapi no longer stops configure in non-zts mode, look for _debug for debug libraries when debug is enabled
ChangeLog update
- MF53 dotted.path support
MFB fix tests
- 'It builds on my box'. - Don't expect any tests to pass.
fix test
MFH: PECL #13523 (x86_64 build)
- Added SKIPIF
- Added SKIPIF
- Allow broken.dirnames to use phar too - Add test - Kill MSVC compiler warning
ChangeLog update
MFH: new test
MFH: New/updated tests
New/updated tests
This commit was manufactured by cvs2svn to create branch 'PHP_5_3'.
back to dev
prepare for release
fix weird alias issues, add tests to check for new-found problems
- Update package/TODO as best memory allows
- New tests
- New tests
fix minor memleak
- Make sure default alias is set in phar.zip - Add test
MFH
MFH
add missing .cvsignore
- New tests
- New tests
- MFH: New tests
- New tests
MFH: revert patch that causes invalid reads/crashes on Linux
MFH: revert patch that causes invalid reads/crashes on Linux
revert patch that causes invalid reads/crashes on Linux
Added a script that generates phpt test coverage information for functions and methods.
Added API to use namesapces in internal extensions
Added API to use namesapces in internal extensions
ChangeLog update
increase code coverage
increase code coverage in util.c
increase code coverage to test mounting of phar URLs to internal file, and fix odd semi-race condition where stream resources were not properly freed at script end
increase code coverage
simplify phar_get_link_location and increase its coverage to 100%
increase code coverage and fix tiny bug in handling of absolute links
don't copy contents of linked/mounted files when converting an archive, and be sure to dupe mounted value
- MFH: New tests
fix test
- New tests
slightly increase efficiency of function interception, and ensure that nothing fails even if the archive is unlinked mid-process
add safety check to prevent unlinkArchive() from being called by a file within the archive
fix memleak
split test into two versions for differences in parameter parsing in PHP 5.3+
make test version-agnostic
increase code coverage of funcinterceptors to 90%+, fix many bugs, fix errant wrong test condition in fgc_edgecases
MFH: Add tests for ReflectionFunction::getExtension*().
MFH: Add tests for ReflectionFunction::getExtension*().
Add tests for ReflectionFunction::getExtension*().
MFH: dos2unix *.phpt
MFH: dos2unix *.phpt
dos2unix *.phpt
- MFH: New tests
- New tests
ChangeLog update
MFH: Restore end check for "escape" strings
MFH: Restore end check for "escape" strings
Restore end check for "escape" strings (not needed for single-quoted strings as they can't have an unescaped backslash at the end)
ChangeLog update
MFH
MFH
- New tests
- New tests
- New tests
Added a script that generates phpt test coverage information for functions and methods.
- s/rmdir/rd - Patch supplied by Richard Quadling
MFH: Test for loss of backslash at end of heredoc; For bug #44830 (Very minor issue with backslash in heredoc)
MFH: Test for loss of backslash at end of heredoc; For bug #44830 (Very minor issue with backslash in heredoc)
Test for loss of backslash at end of heredoc; For bug #44830 (Very minor issue with backslash in heredoc)
Collect all the open_basedir security tests into one place
Collect all the open_basedir security tests into one place
Collect all the open_basedir security tests into one place
open_basedir tests for error_log
ChangeLog update
- Use PHP_DEP_FE and PHP_DEP_FALIAS (magic_quotes related functions)
Sync spl tests with 5.3
Sync spl tests with HEAD
fix test
fix test
fix test
Remove old references to flex.skl
fix windows build
fix handling of mounted entries when flushing in all phars, and of deleted entries with open references in tar-based phars, do not extract mounted entries, add to test
ChangeLog update
fix serious logic error and potential security issue with phar_compiled_file and phar_find_in_include_path.  We were allowing data-based phars to be executed, and actually marking phar-based phar archives without '.phar' in the name as data-based phars, which would allow modifying them even if phar.readonly=0.  Add test for this sinister case
MFB: kill unused vars
Kill unused vars
new ini_get_all() parameter
BFN
fix tar extension detection in open code
optimize phar filename extension detection to first search through known phars.  This eliminates several stat/realpath calls for archives with lots of files
MFH
no need to add this entry - it's in 5_2 already
- Test for bug #44811
MFH: new tests and test cleanup
- Added NEWS item for fixation of bug 44811
rename the test
fix test title
Update mysqlnd - new ini variable
Update mysqlnd
- Bug #44811 (Improved error message for creating invalid new SoapClient)
reorder
- Added NEWS item for fixation of bug 44811
- Test for bug #44811 (Improve error message when new SoapClient has invalid data)
- New tests
- New tests
Use IS_CV for dirrent access to $this variable
Use IS_CV for dirrent access to $this variable
prepare for 2.0.0b1 release, pending review (finally)
remove files created
validate user-supplied aliases when converting archives to other formats
[DOC] remove phar.extract_list remove Phar::getExtractList()
remove APC fanciness - this was causing non-caching of some files include()d inside a phar archive
ChangeLog update
Add consistency with the flag
Add a flag that defines whether the objects should get iterated through or not
fix zip metadata for archive/fix perms for file in zip/all.phpt test
new failing test for testing all zip creation facets
fix segfault in buildfromdirectory2 test and potential segfault
fix alias overloading handling for archives that are not in use
new test for unset behavior
Make mysqli compilable in a 5_2 environment. Some want to use mysqlnd+mysqli with 5_2. This won't hurt 5_2 in any way. Won't be MFB-ed because HEAD is completely different.
Use lazy symbol table initialization for op_arrays called from internal php functions
Use lazy symbol table initialization for op_arrays called from internal php functions
GC fix
GC fix
Changed php_*h() + php_log1p() + php_expm1() to be static
* Changed php_*h() to be static * Changed NEWS entry to be say 'native' insted of 'Windows' (ref. *h())
Regenerate zend_vm_execute.h
ChangeLog update
MFB: Specify the necessary precision
No domainname element in utsname on OSX
There is no domainname element in utsname on OSX
add atanh() for real
Support for old-style constructors in namespaces
Support for old-style constructors in namespaces
Implemented Windows support for asinh(), acosh(), atanh(), log1p() and expm1() + removed Windows check on tests
ChangeLog update
- Some tests for buildFromDirectory()
- MFH: Added support for "<xth> <weekday of" and "last <weekday> of" phrases to   be used with months - like in "last saturday of februari 2008".
- Added support for "<xth> <weekday of" and "last <weekday> of" phrases to be   used with months - like in "last saturday of februari 2008".
BFN
MFH: fix bug #44891 Memory leak using registerPHPFunctions and XSLT Variable
MFH: fix bug #44891 Memory leak using registerPHPFunctions and XSLT Variable
fix bug #44891 Memory leak using registerPHPFunctions and XSLT Variable
fix compile warnings
- MFH: Added support for using ISO 8601 time intervals to define a DatePeriod   iterator. #- @doc
- Added support for using ISO 8601 time intervals to define a DatePeriod   iterator.
MFH: fix folding
fix folding
ChangeLog update
- Introducing nmake clean-all - This should probably be merged with nmake clean, but I've no way to test the impact on distro builds.
- Kill Windows warning when int meets short - All tests still pass
Committing corrected test from Eric Stewart
Committing corrected test from Eric Stewart
Committing corrected test from Eric Stewart
BFN: #44899
- Tabs to spaces.
- Added support for using an end date to limit the amount of recursions   with the DatePeriod iterator. #- @doc
- Added support for using an end date to limit the amount of recursions   with the DatePeriod iterator.
add Phar::unlinkArchive() to allow complete removal of a parsed phar archive from memory and disk
ChangeLog update
fix build
fix build
- More coffee required...
MFB
- MF53: fix for bug #44870: rename() on directory deletes same named file.   (Patch by Pierre)
Hard enabling it for Windows, readding define for UNIX [DOC]
Hard enabling it for Windows, readding define for UNIX [DOC]
Hard enabling ext/reflection on UNIX too [DOC]
Hard enabling ext/reflection on UNIX too  [DOC]
refactor isTar/isZip/isPhar into isFileFormat(int format) where format is one of Phar::TAR,, Phar::ZIP, Phar::PHAR [DOC]
update TODO, re-order methods to be alphabetical, tweak extractTo to set permissions and handle NULL for files # this also matches the docs I just committed :)
ChangeLog update
- MFH: Rearranged some structures to allow for more powerfull period/intervals.
- Rearranged some structures to allow for more powerfull period/intervals.
- MFH: Include the starting date by default in the iterator output, but add an   option to disable this behavior.
- Include the starting date by default in the iterator output, but add an   option to disable this behavior.
open_basedir tests for directory functions
open_basedir tests for directory functions
open_basedir tests for directory functions
open_basedir tests for directory functions
open_basedir tests for directory functions
open_basedir tests for directory functions
ChangeLog update
- MFH: Added the DatePeriod class/iterator that iterates over a date time   object for a specific number of iterators and applies a DateInterval each   time. @DOC: More will follow though
- Added the DatePeriod class/iterator that iterates over a date time object   for a specific number of iterators and applies a DateInterval each time.
fix possible read past end of buffer by ridiculously stupid convoluted logic (I wrote it, I can call it that) reported by valgrind
fix unix-only valgrind issue by initializing arch
fix cwd test in php 5.2, now all tests pass in 5.2 on unix
fix test to be truly path-agnostic
fix Bug #13786 on unix (Steph can you verify?)
fix test (passes in PHP_5_3 on my 64-bit machine, have not yet tested in 5_2)
add helper file I use for debugging the front controller tests
add missing file for test
fix double free
stupid cut/paste error
increase code coverage to test cwd stuffs
Back to dev
5.2.6
Break up complicated rename tests into some smaller more consumable chunks
Break up complicated rename tests into some smaller more consumable chunks
Break up complicated rename tests into some smaller more consumable chunks
IS_CONST operands are always have is_ref==1 and refcount==2, so we can eliminate  unnecessary checks at specialization/compilation stage
IS_CONST operands are always have is_ref==1 and refcount==2, so we can eliminate unnecessary checks at specialization/compilation stage
remove unneeded exception handling (webPhar is always within an outer zend_execute block which handles exceptions for us, this is unnecessary)
ChangeLog update
fix spelling
fix spelling
- Prevent phars with empty manifests flushing to disk - This would've fixed that test... removing clean section
- Add test for bug #13786
More session tests to improve code coverage for untested extension code
More session tests to improve code coverage for untested extension code
More session tests to improve code coverage for untested extension code
Added missing lazy initialization
Added missing lazy initialization
More session tests to improve code coverage for untested extension code
More session tests to improve code coverage for untested extension code
More session tests to improve code coverage for untested extension code
Lazy EG(active_symbol_table) initialization
Lazy EG(active_symbol_table) initialization
MFH
lexer fix by Greg
cosmetic enhancements
fix test
fix test
ChangeLog update
fix segfault (now all tests pass here)
fix double free and broken stat.phpt
remove hack introduced because of broken usage of php_resolve_path instead of zend_resolve_path
MFB: fix erroneous use of php_resolve_path in _php_stream_wrapper_open_ex - this breaks require/include for all extensions that intercept zend_resolve_path
fix erroneous use of php_resolve_path in _php_stream_wrapper_open_ex - this breaks require/include for all extensions that intercept zend_resolve_path
it's a bit cheesy, but make this test 5.2/5.3 agnostic :)
fix tar generation - we were subtly corrupting the header with \0 because of use of strcpy
MFH
The SDK 6.1 adds some new networking functions that cause build errors, pick Windows 2000 as the minimum version we will build for.
fix off-by-one for writing of timestamp and file modes in tar files
more fixes for PHAR_G(cwd)
fix crash (this area really needs code coverage)
ChangeLog update
add open_basedir/safe_mode checks for files in Phar::addFile()
fix test
- Kill another one from the gcov site's parameter parsing report
- Another test that gives completely different results if readonly=0
- Deleting files we cannot see...
- Make it possible to extract all *and* overwrite
- Always give reasons for skipped tests
- Kill a few uninitialized vars (thanks gcov)
fix out-of-bounds read potential by replacing strstr with a custom strnstr
fix invalid free
fix APC compile hook interception, now APC actually caches files
fix ridiculously critical omission in zip flush - we never set compressed file size!  Augment zip test for bz2/zlib-compressed alias files to increase code coverage
add checking for invalid alias on opening tar, and test
add screening of alias to reading of zip archives, and test for bad aliases
new test/updated test to ensure stub integrity (I was wrong, zip is fine)
add logic test to ensure stub is not overwritten when adding a file (zip currently does this - bad zip)
increase code coverage
really fix test by fixing the regex
increase code coverage (and magically, mysteriously this tests passes with no other changes - weird)
fix clean
increase code coverage
new test increases code coverage
add failing portion of test for compressed alias read
add failing portion of test for bz2 compressed file on open
fix buildfromiterator base to exclude directory separator on unix or windows, fix 10 test to have new tests
fix cleanup
add Phar::extractTo(dest_directory[, mixed files[, bool overwrite]]) this is very similar to ext/zip's extractTo and is based on that code, with the addition of the third parameter, which is used to allow overwriting existing files (disallowed by default, unlike ext/zip's implementation) [DOC]
finish code coverage work (whew)
- cs
- fixed those pesky memleaks
ChangeLog update
- implemented Phar::buildFromDirectory
make dang sure this ridiculous test cleans up after itself
add test for bug #13727, fix bug #13727
finish code coverage testing of phar_object.c (except for iterator building, which Steph is doing) and fix segfault in error message for directory getcontent if it is a temp directory
new test with code coverage for PharFileInfo::setMetadata/delMetadata, improve error messages
remove unneeded skipif conditions
new code coverage test, improve clarity of error message when chmod is used on a temp directory
- MF53: Added new date/time functionality:   . support for diffing date/times through date_diff() / DateTime::diff().   . added DateInterval class to represent the difference between two date/times.   . support for parsing ISO intervals for use with DateInterval.   . date_add() / DateTime::add(), date_sub() / DateTime::sub() for applying an     interval to an existing date/time.
fix potentially serious security issue: buffer overrun if the tar filename > 101 characters in length.  This fixes tests/tar/bignames.phpt
fix access fault on windows, fix memleak on all platforms when accessing a temp directory via offsetGet
fix tests on windows
add missing file (Steph: this fixes tests/tar/truncated.phpt, sorry :)
ChangeLog update
fix test (except for memleaks)
rework PharFileInfo->decompress and add failing test
new test
new test for PharFileInfo::__destruct
- clean the right file :)
- kill a couple of (release build) MS compiler warnings
Extra open_basedir tests
Extra open_basedir tests
Extra open_basedir tests
- Removed unused variables
- re2c requirement update (sorry, I thought I'd committed this ages ago)
Optimized handlers for ZEND_RECV and ZEND_RECV_INIT opocdes
Optimized handlers for ZEND_RECV and ZEND_RECV_INIT opocdes
Update ext/mysql's and ext/mysqli's tests Add mysqli_stmt_more_result()/mysqli_stmt_next_result(), but only in mysqlnd builds as libmysql doesn't support this feature.
Update ext/mysql's and ext/mysqli's tests Add mysqli_stmt_more_result()/mysqli_stmt_next_result(), but only in mysqlnd builds as libmysql doesn't support this feature.
Allow for chmod() to fail on symbolic links
Allow for chmod() to fail on symbolic links
Allow for chmod() to fail on symbolic links
- MFH: improve test and remove files on exit
- improve test and remove files on exit
test PharFileInfo::__construct, fix potential segfault, and bad logic in phar detection
increase code coverage
fix break when uncompressed files are re-saved, fixes phar_copy.phpt test
remove redundant unreachable code in Phar::copy, augment test, and add failing condition that needs to be fixed
new test for Phar::decompress()
ChangeLog update
increase code coverage
increase code coverage
increase code coverage
increase code coverage, fix minor memleak
increase code coverage
increase code coverage
increase code coverage
fix default format conversion, increase code coverage
increase code coverage slightly
new test increases code coverage, fix memleak found by test
increase code coverage
fix extension detection for executable=2
new test for Phar::loadPhar with phar.extract_list
new test for Phar::mapPhar with phar.extract_list
remove/move unreachable code
improve rewrite callback support, add test for callback that does not return string/false
new test for valid callback that fails for rewrite callback
new test for invalid rewrite callback
new test for SCRIPT_NAME not containing the filename
new test for webPhar failure on opening file
new test for webPhar with phar.extract_list
open_basedir tests for file system functions (v5.2, 5.3 and 6.0 branches)
open_basedir tests for file system functions (v5.2, 5.3 and 6.0 branches)
open_basedir tests for file system functions (v5.2, 5.3 and 6.0 branches)
ChangeLog update
ensure freeing of cwd/name happens in all cases
fix headers in test
new test for fatal error in php file executed by front controller
re-enable disabled cwd code
remove unreachable code, add test for large non-php file
remove unreachable code
fix PATH_INFO munging, add to test case
remove unreachable code, add test for no file extension and unknown file extension with Phar::webPhar
New set of session extension tests for PHP 6.0 branch.
These tests were backported from the PHP 6.0 branch, which in turn were ported from this branch and then updated to remove any dependencies on register_globals. With register_globals removed they are useful tests to run against the 5.X branches.
New set of session extension tests for PHP 5.3 branch.
New set of session extension tests for PHP 5.2 branch.
These tests were backported from the PHP 6.0 branch, which in turn were ported from this branch and then updated to remove any dependencies on register_globals. With register_globals removed they are useful tests to run against the 5.X branches.
fix tests
fix tests
Added a warning message on pdo::exec() failure in the event of an empty query
big ol code coverage test for bad parameters to Phar methods
ChangeLog update
fix Phar::mount() to also allow running externally with full phar:// path, add test
fix Phar::running()
fix discovery of files hidden in a URL - makes using any regular front controller possible
new test for custom 404 handler, fix segfault found by test
increase code coverage of phar.c significantly by ensuring signature algorithm test is actually run (duh)
increase code coverage
remove unused code
another refactoring to combine an error and improve code coverage as a side effect
minor re-factoring reduces code lines for an error (and evilly increases code coverage at gcov ;)
minor re-factoring reduces code lines for an error (and evilly increases code coverage at gcov ;)
cosmetics: same case as other tests
new test for non-executable zip named as phar
implement opendir for mounted directories - much simpler to do than I initially thought
add news entry
[DOC] add hash_copy() to be able to copy hash resource
[DOC] add hash_copy() to be able to copy hash resource
- Added UEXPECTF
Optimized function call helper
Optimized function call helper
finish code coverage for tar file format
add test for huge filenames, fix huge filename reading
new test for corrupted tar with hard link to nowhere
implement symbolic link support within a tar-based phar archive this also resulted in a major fix for mounted directories, which were recycling the 'link' field which could cause stupid conflicts with actual links, so move that to new 'tmp' field.
ChangeLog update
use a tar generated by the tar command to test links.  Test still fails
add test for symbolic and hard links
new test for bad checksum, fix tar.c to catch tar archives with a corrupted first entry, fix memleak on bad checksum
fix tests to match CVS
fix truncation test
add failing test for truncated tar archive
new test, increases code coverage slightly
fix test to be OS-agnostic
re-adding as binary
added as text, removing in order to re-add
amend zip test to actually test file perms creation/reading and fix severely broken permissions creation
add new test for openoffice-created zip
new test for unix 'zip' command-created zip archives
fix fopen test problem - behavior is slightly different from PHP 5.2 -> PHP 5.3 now all tests pass on windows on my box
fix all but 1 test on windows (yay)
fix a couple more tests on windows
- Better error message
- Better error message
- Better error message
ChangeLog update
fix 98 of 105 failing tests on windows (real progress now)
fix 3 failing tests out of 108 on windows (whoop-de-doo)
fix ZTS build
fix ZTS build and Phar::isValidPharFilename
new test for unsupported compression versions, vastly enhance error messages on unsupported compression methods, fix memleak
new tests for corrupted zips
new test for zip archives with files created from stdin
new test for encrypted zips
new test for central directory offset being wrong
new test for truncated file comment, fix memleak found by test
new corrupt zip test
new test for corrupted zip with mis-matched entry counts, and fix memleaks in this test case
add utility for creating corrupted zip archives for testing purposes
ChangeLog update
- New tests
- New tests
fix test
COMPLETELY rework filename extension detection.  Now the only requirements are: 1 - executable phars must contain '.phar' in the filename 2 - non-executable phars must not contain '.phar' and must have an extension of at least 1 character
MFB: Set extension status back to dev
Set extension status back to dev
Update description
ChangeLog update
BFN
MFH
BFN
MFH: fix bug #44648 (Attribute names not checked for wellformedness) add test fix some warnings
fix bug #44648 (Attribute names not checked for wellformedness) fix some warnings
- New test
- New test
make Matt happy =)
ChangeLog update
Hash extension is no longer experimental
fix compression zip tests
add failing tests for compression of zip files internally
fix large zip test
load entire end of zip instead of weird 8k looping, logic is much simpler, and it's only 65k instead of 8k
make test OS-agnostic
MFH: use new parameter parsing API
plug minor memleak
always initialize mod_type
unicode support and minor leak fix
convert ext/ldap to use new parameter parsing API also restructure the extension to get rid of some garbage
MFB: Update CVS from the development tree
Update ext/mysql, ext/mysqli and ext/mysqlnd from development tree
- add test
- prepare 1.0.2
change %d to %ld and silence the warning
fix end of directory locator detection code, add failing test for large zips
fix test - metadata works now
fix segfault in meta-data parsing of zip archives
add failing test for metadata support in zip archives
rename is_zip parameter of phar_parse_metadata to more accurately reflect what it is
increase code coverage
forgot F in EXPECTF
increase code coverage
add another test for alias overloading and make sure we disallow it when passed in constructor
fix tests so $Revision$ does not screw with things
increase code coverage for phpinfo(), rework CLI phpinfo for phar.extract_list to be legible
ChangeLog update
increase code coverage
Changes to the code that generates variations (Robin & Josie)
re-add as binary
aha - added as ascii, removing in order to re-add
this was corrupted on my windows box.  $1m question: is this newly regenerated phar valid on Steph's box and my unix box?
further big-endian systems fixes for zip
fix test on windows
use nonblock listener socket to avoid blocking
forgot to commit this yesterday - make error message test PHP-version agnostic
MFB
These are really old config.w32 files - now they use PHP_PHP_BUILD correctly instead of hard coding the path to the libraries
MFH: force use of BSD sed for OS X hack (patch by Alexey Zakhlestin)
force use of BSD sed for OS X hack (patch by Alexey Zakhlestin)
Selected better initial VM stack size
Selected better initial VM stack size
- Clean files that actually exist ;)
truly enable APC in phar
MFH: remove -ldl
remove -ldl - it doesn't seem to be required on Linux and it's not present on FreeBSD
Optimized request startup sequence for php.ini without per dir and per host conf igurations
Optimized request startup sequence for php.ini without per dir and per host configurations
MFH
- missed one line
MFH
- Readd config_get_has(). No need to document, it is only available for debug builds.
add support for proper APC caching
add interception for readfile [DOC]
add support for big-endian systems to zip implementation
ChangeLog update
fix test to be OS-agnostic
fix invalid variable access
fixes test on windows.  Does it break on unix?  the shadow knows
fix test on windows
fix test
complete rename code coverage tests, completely re-do errors (why are the streams funcs so dang inconsistent in error handling/return values?)
remove unused file
remove redundant check for file existence, add another unlink edgecase test
- Workarounds are no longer needed - thanks PECLers!
disallow unlink() on extracted phars (the idea is that it is a read-only for execute thing), add tests for unlink edge cases
add stat test for root dir
add tests for extract_list and stat
nuke potential segfault in phar_open_url, remove mem leaks due to error logging in phar_wrapper_stat, add to test case
s/l/L/ to match actual lstat errors
add test case for SEEK_CUR fseek
- Kill doze compiler warning
add test case for inability to open extract_list file
2 more test coverage edge cases down
minor re-factoring of phar_open_url to remove one nested brackets, put fopen edge cases in its own test, tweak test phar file names
Use PHP to fetch the pear phar
add test coverage for fopen() with append mode
add phar.extract_list test coverage for opendir
add test coverage for phar.extract_list and mkdir/rmdir
fix potential segfault if some idiot tries to remove the root directory of a phar, add creation of root directory to test
increase code coverage further
add error message on attempt to rmdir/mkdir 'phar://', add to test
update tests to ensure all temp files are erased, and to current error messages
increase code coverage slightly
add test for mkdir() of sub-directory of existing file, and restore the removed free()s with an is_temp_dir test
increase test coverage of phar_wrapper_mkdir, fix segfault when mkdir() on existing directory
MFB5.3: Remove config_get_hash() & and add new boolean parameter to ini_get_all() to list ini entries key=>current_value like config_get_hash()  did.
[DOC] Remove config_get_hash() & and add new boolean parameter to ini_get_all() to list ini entries key=>current_value like config_get_hash() did.
fix edge case where a new phar is created via mkdir(), add to dir.phpt test
MFH: Add "params" argument to stream_context_create()
fix ZTS build and sync with HEAD
another attempt at fixing mac OS X compile, remove unused obsolete code
missing from previous commit to remove stat from opendir wrapper ops
more test coverage and fixes from increased coverage to opendir(). dir.phpt fails, but for wrong reasons (bug uncovered that needs fix)
ChangeLog update
add fstat to 027 test.  Remove phar_dir_stat, stat should not be possible on a dir handle
add to 027 test (for code coverage) of fwrite on dir handle
minor optimization
100% code coverage for dir handle seeking, remove error log (not used in dir seeking, causes leak), update 027 test to have seeking test
add test for stat interception, fix stat interception
MFB do not scan include_path with faulty plain_wrapper-based include_path fopen
do not scan include_path with faulty plain_wrapper-based include_path fopen
sync fixed test properly with 5.3 branch
fix test
make tests php version-agnostic with regards to stream errors
fix test
add test for fopen interception, fix fopen interception
add test for file_get_contents interception, fix file_get_contents interception
Kill unused var
add test for opendir, fix bugs found
fix build if SPL is disabled
ChangeLog update
MFH: Update URL for go-pear
Update url for go-pear
Apparenty go-pear no longer exists (bug#44699)
Speedup GC initialization
Speedup GC initialization
restore Phar->compress/decompress() to simplify $phar->convertToExecutable(NULL, Phar::GZ) to $phar->compress(Phar::GZ) [DOC]
cosmetics, extra space
combine PharFileInfo->setCompressedGZ/setCompressedBZIP2 into compress() with parameter Phar::GZ or Phar::BZ2 use ZEND_ACC_PUBLIC in PharFileInfo definitions, to be consistent [DOC]
merge PharFileInfo->isCompressed/isCompressedGZ/isCompressedBZIP2 by adding an optional parameter to isCompressed for testing specific compression algorithm [DOC]
change PharFileInfo->setUncompressed to decompress [DOC]
fix tests
fix tests
fix tests
MFH: fix 2 segfaults in ZTS mode
MFH: fix 2 segfaults in ZTS mode
fix 2 segfaults in ZTS mode
Optimized ZEND_RETURN opcode to not allocate and copy return value if it is not used.
Optimized ZEND_RETURN opcode to not allocate and copy return value if it is not used.
POSIX extension error tests
POSIX extension error tests
POSIX extension error tests
POSIX extension variation tests (failing due to spurious array to string conversion notices).
POSIX extension variation tests
POSIX extension variation tests
Adding some tests for ereg and url functions.
Adding some tests for ereg and url functions.
Adding some tests for ereg and url functions.
BFN
refactor compress/convertToTar/convertToPhar/convertToZip/convertToExecutable/convertToData into 2 methods: convertToExecutable/convertToData.  Both methods accept 3 optional parameters 1 archive type, Phar::PHAR, Phar::TAR, or Phar::ZIP 2 compression Phar::NONE, Phar::GZ, or Phar::BZ2 3 file extension.  Default is <format>.<compression> where .phar.tar is executable .tar convertToExecutable always returns a Phar object convertToData always returns a PharData object also added Phar::PHAR, Phar::TAR, and Phar::ZIP class constants [DOC]
ChangeLog update
Back to dev
5.2.6RC5
Bump OCI8 version to 1.2.5 (This change is for 5.2 branch only)
- MFH No longer allow to disable pcre
- No longer allow to disable pcre
fix heredoc+nowdoc #patch by Matt Wilmas
MFB53
MFB
add SKIPIF # Patch by Christian Hoffmann
MFB5.3: fix SKIPIF
MFB
fix SKIPIFs # Patch by Christian Hoffmann
s/getContents/getContent/
re-factor all-file compression.  Remove compressAllFilesGZ/compressAllFilesBZ2 in favor of unifying compressFiles which accepts Phar::GZ or Phar::BZ2 as argument.  rename uncompressAllFiles to decompressFiles
MFH: Updated the documentation credits
MFH: Updated the documentation credits
Updated the documentation credits
add Phar->isWritable() for detecting whether a phar archive can be written to based on phar.readonly combined with actual file permissions [DOC]
make built-in SplFileInfo->isWriteable() work for PharFileInfo as well, by ensuring phar->is_writeable is set/reset when phar.readonly is changed
ChangeLog update
WS
fix the yyless() definition to match flex one and revert part of last patch (so that it remains similar with flex's scan)
- MFH SPL can no longer be disabld as discussed some time ago (checked back with RM)
- SPL can no longer be disabld as discussed some time ago (checked back with RM)
add addFile/addFromString/addEmptyDir.  API is identical to ext/zip [DOC]
add PharFileInfo->getContents() to retrieve file contents [DOC]
Bug #44653 (Invalid namespace name resolution)
Bug #44653 (Invalid namespace name resolution)
ChangeLog update
MFB: Bug #44650	escaepshellscmd() does not check arg count (port from 5.3)
MFH: Missing basic single ini file test (bug #44574)
- Add missing basic test (see also bug #44574)
- Generated with re2c 0.13.4
- fix test
ChangeLog update
MFB: various bug fixes
MFB: PECL #13523 (x86_64 build) and versioning sync
MFB: Test updates
Test updates
PECL #13523 (x86_64 build).  Make OCI8 buildable with PHP 4.3.9.
- #13181, fix resource destruction during context change
MFH: Add E_DEPRECATED comment
Add E_DEPRECATED comment
- Reset back to 0.13.4 now that it released.
fix test
MFH: fix test
fix test
MFH: Implement forward_static_call(_array) to complete LSB. Patch by Mike Lively
initialize variable
Implement forward_static_call(_array) to complete LSB. Patch by Mike Lively
ChangeLog update
- MFH add new tests
- MFH add new tests
- add new tests
ChangeLog update
- HEREDOC syntax with double quotes
MFB: - Allow HEREDOC syntax with double quotes [DOC] (http://wiki.php.net/rfc/heredoc-with-double-quotes)
- Allow HEREDOC syntax with double quotes (http://wiki.php.net/rfc/heredoc-with-double-quotes)
ChangeLog update
MFB: remove redundant test
remove redundant test for file size
MFB: add sanity check for ZEND_MMAP_AHEAD
add sanity checks for ZEND_MMAP_AHEAD and reduce the value from 32 to 16 (lowest safe value)
MFH: fix folding
fix folding
ChangeLog update
Back to dev
5.2.6RC4
dual-license LSAPI lib, code style updates
fixed name
ChangeLog update
MFB: imap bug fixes
MFH
MFH
decrement parent's refcount only when destroying the child, not when decrementing child's refcount
MFH: initialize variable
initialize variable
ChangeLog update
Typo
Typo
Use new version macro
Use new version macro.  Make code portable to older PHP versions
Bump dev version ready for any new changes
code style changes: using TAB for indenting, moving opening { to the end of previous line
MFB: fix the darwin 9 hack again; add the -O2 back in to avoid performance loss when not compiling for debug
fix the darwin 9 hack again; add the -O2 back in to avoid performance loss when not compiling for debug
ChangeLog update
Revert unintended bits from "Added a warning message" commit
- Don't rely on a version that doesn't exist - that breaks snapshots.
- Bring the majority of PECL extensions into line with macro/x.x.x versioning. - Please use the -dev tag during the development cycle so that snapshots can easily be distinguished from releases.
- Allow most of the existing strangely-named headers to get by
ChangeLog update
Revert "minimum version requirement" until there's a version to match it
MFB:  Added a warning message
Added a warning message
ChangeLog update
ChangeLog update
New entry (MFH: goto)
correct last commit (comparison of "nu" in wrong order)
ignore generated files
ignore generated files
MFH: Implemented "jump label" operator (limited "goto") [DOC]
fix compile warnings
ChangeLog update
Back to dev
5.2.6RC3
fix Bug #13518: comparision of a char* pointer with a string literal
follow PHP coding standard
MFB: fix test
Recreate
don't ignore pre-generated files
- Ifdef out code that has if(0) and doesn't compile anyway
Added ability to use stream wrappers in include_path
Added ability to use stream wrappers in include_path
add missing EOL and fix build
fix build on PHP 5.2, prepare release of 2.0.0a2
ChangeLog update
This was done in 5.1
Adding tests for gethostbyaddr() and gethostbynamel()
Adding tests for gethostbyaddr() and gethostbynamel()
Adding tests for gethostbyaddr() and gethostbynamel()
- Add files generated by re2c
MFB53: genfiles update
- Give Marcus good old warm and fuzzy feeling.. :)
MFB 5.3: Rest of the changes for re2c merge
MFB 5.3: Rewrite scanner to be based on re2c instead of flex
- Use the right tool here too
MFH: check if return value of write() is -1 and abort upload, setting the correct error status
allow NULL argument to be passed where binary string expected
turns out it is now tomorrow, so update package.xml
prepare release of 2.0.0a1
ChangeLog update
- MFH Use sizeof rather than strlen and cleanup
- Use sizeof rather than strlen and cleanup
Removed unused variable
news entry
Small updates & a fix for Bug #43832 mysqi_get_charset() doesn't expose charset comment
MFH: - Renamed zend_do_fetch_class_name() to zend_do_build_full_name() (It is not used only for classes) - Moved zend_resolve_class_name prototype to zend_compile.h
revert stmt release on connection error change (and sync with PHP 6)
Remove trailing period from error thus syncing with PHP 6
- MFH: New egg
- New egg
Optimized detection of "__call" and "__callstatic" methods.
Optimized detection of "__call" and "__callstatic" methods.
oci8: Sync with 5.3 - version macro updates and DRCP tweaks
rename PHP_OCI8_VERSION in preparation for peclversioning RFC.  Remove obsolete HAVE_OCI8_ATTR_STATEMENT macro
ChangeLog update
MFH: disabled mmap() when copying files to memory
MFH: disabled mmap() when copying files to memory
Change streams to not use mmap() when reading files (aka copying to memory).
Another thing version_compare() allows...
- Updated to version 2008.2 (2008b)
- Updated to version 2008.2 (2008b)
- Updated to version 2008.2 (2008b)
- Add documentation
a subtle plea for help to Marcus...
fix read/write for PharData object, update tests to current API
check for invalid aliases, add tests for this and direct setting of stub/alias
ChangeLog update
prevent direct setting of stub or alias in tar/zip
update TODO
not all tests have been converted over to the new API, but it works
- Extend that regexp (again) - Revert the changes affecting external template.rc files
add Phar->getPath() for retrieving the full path to the phar archive. this is useful for renaming and also always returns the realpath()
fix param parsing for Phar::running() to be optional # this is the last bug for ZF app - it now works!
- MFH Add .cvsignore
- MFH Add .cvsignore
- Add .cvsignore
MFB: removed unused var
Removed unused variable
- MFH Add tests
- MFH Add tests
- MFH Add tests
don't disallow opening .tar/.zip files as Phar object if readonly is disabled, the whole idea is to be able to add crap including an automatic stub or explicit stub
fix potential segfault by misuse of phar_find_in_include_path
ChangeLog update
fix memleak found by valgrind
fix Bug #13110: using rewrite parameter to webPhar causes memory error
add failing test for bug #13110
Don't break PECL extensions that are oh-so-nearly doing The Right Thing [TM] (mcve, runkit, win32ps)
move all blah++ to ++blah where possible for those with crapass compilers
fix all frontcontroller tests - cgi sapi was not being detected, only fastcgi
fix memleak in php 5.2, simplify code slightly
Satisfy Greg's inertia
fix test
- Renamed zend_do_fetch_class_name() to zend_do_build_full_name() (It is not used only for classes) - Moved zend_resolve_class_name prototype to zend_compile.h
- Make multibyte a tad bit less crappy
- Another re2c version bump and scanner regeneration # It appears no one has used re2c in the way we do
Make versioning more standard
- Require 0.13.3
use correct flags
use correct flags
Allow Stas his "1.0.0RC1-dev"
Independent versioning for PECL extensions (and only PECL, for now) This affects the RC template used to ship information with the DLL in Windows distributions - nothing else. It will potentially affect 13 PECL modules at present (and yes I do know which ones!)
- Update and include 'channel://pear.php.net/PHP_Archive-0.11.3'
- Still missed one debug output
ChangeLog update
Further improvements to error handling
- If multiple possible exts are found use the first one.   This fixes an issue with: phar.phar info -f install-pear-nozlib.phar   because that archive contains a .tar file
- Constify
- Don't throw exception for uninitialized instance
- Damn forgot to remove the debug code
fix the memleak - but this breaks the \*compressAllFiles\*() methods because of fatal flaw in renaming implementation - see pecl-dev email for details
- MFH Settle to 4 MB, see internals@ archives
- Settle to 4 MB, see internals@ archives
with stream wrappers in include_path, and after marcus's last fix, only 1 failing test (tar/tar_makegz.phpt)
- Simplify
- MFH Increase max mmap size to 8 MB
- Increase max mmap size to 8 MB
MFH: revert
[DOC] revert short tags to their previous state
- Bugfix 44461
- MFH Add new test
- Add new test
fix #43477 (Error mode ignored in unicode_decode()) patch by Stephen Bach
sync with 5_3
add missing .cvsignore
fix ZTS build
fix ZTS build
fix ZTS build
Deliberate test breakage (no idea how many) in an attempt to see where the valgrind 'bad news' is coming from on gcov.php.net.
Cosmetics (RC data)
ChangeLog update
save work - sandbox is completely f**ed up, have to rm -rf and start again
MFB: Refine fix for multibyte char hanling inside command names and args
MFB: Refine fix for multibyte char hanling inside command names and args
Refine fix for multibyte char hanling inside command names and args
document the change
MF5: make short_open_tag user-accessible
[DOC] make short_open_tag user-accessible
BFN re-order
MFH: fix bug #44478 (Inconsistent behaviour when assigning new nodes) add test
MFH: fix bug #44478 (Inconsistent behaviour when assigning new nodes) add test
fix bug #44478 (Inconsistent behaviour when assigning new nodes) add test
News entry
Small fix and a test case to prove it
Small fix and a test case to prove it's right
Allow Elizabeth's favourite function to accept 2-4 sets of digits in version.
- Don't modify the variables which are passed for parameter binding.   We need to clone them, if there will be a transformation (convert_to_xxx)   which will change the origin   (bug#44390 bind_param / bind_result and Object member variables) - Make mysqlnd more compatible to libmysql, in this case if the execute of   a statement fails set the state of the statement back to PREPARED - A test case to check the case of a failing statement.
Missing lines from the param-bind-non-changing fix
- Don't modify the variables which are passed for parameter binding.   We need to clone them, if there will be a transformation (convert_to_xxx)   which will change the origin. - Make mysqlnd more compatible to libmysql, in this case if the execute of   a statement fails set the state of the statement back to PREPARED - A test case to check the case of a failing statement.
MFH
MFH
expect->expectf
fix tests
MFH: fix tests
fix tests (tcp_socket is tcp_socket/ssl when/if openssl is enabled)
ChangeLog update
add
ignore generated files
fix gcov build
catch up with the latest release
Adding language tests.
Adding language tests.
Adding language tests.
Added some class tests; Replaced some hardcoded instance ids with %d.
Added some class tests; Replaced some hardcoded instance ids with %d.
Added some class tests; Replaced some hardcoded instance ids with %d.
Adding tokenizer test
Adding tokenizer test
Adding tokenizer test
Adding streams tests
Adding streams tests
Adding streams tests
Adding filesystem tests
Adding filesystem tests
Adding filesystem tests
MFB
Typo (I wonder if anybody would ever have noticed this)
Cosmetic
On Windows I guess there is no point starting the timeout thread until we actually have a timeout value.
Make sure we set the signal handler when reset_signals is true, regardless of the actual timeout value.
Added UEXPECT
fix test
MFH
fix typo
MFH: make use of zend_atol()
MFH: add zend_atol()
make use of zend_atol()
add zend_atol() and use it instead of zend_atoi() where applicable
fix test
fix test
fix test
Removed ze1_compatibility_mode INI options
Disabled $GLOBALS' refcount modification
Remove accidental change
ChangeLog update
MFB: Bug #44445 (email validator does not handle domains starting/ending with a -)
MFB: Bug #44445 (email validator does not handle domains starting/ending with a -)
Correct name for the file
Add new empty child terminate sapi hook to the rest of the sapis
exit_on_timeout patch
Make the sigsetjmp change more robust.  On systems that don't have sigsetjmp use setjmp.  Windows is of course weird in that it seems to have sigsetjmp but not sigjmp_buf (??) so force it to use setjmp in config.w32.h.in
Use sigsetjmp and siglongjmp instead of setjmp/longjmp in order to be consistent in how we deal with the signal mask.  POSIX doesn't specify what to do with the signal mask in setjmp/longjmp which has resulted in the signal mask getting saved on *BSD and not getting saved on Linux. Making the behaviour explicit via sigsetjmp/siglongjmp gives us consistency and saves expensive sigprocmask() syscalls on *BSD.
Ignore steph's pretty batch file
MFB : fix the build
Generic function for binary probes, kill the other two. And get rid of the annoying double check for CL.
MFB - Bug #44352 mysqli_connect_error() false negative for host errors
Adding more tests for serialize() and unserialize().
Adding more tests for serialize() and unserialize().
Adding more tests for serialize() and unserialize().
remove ze1_compat tests
one more forgotten ze1_compat leftover
remove ze1_compat leftovers
MFH: Dropped zend.ze1_compatibility_mode [DOC]
Removed hack (we don't need to modify class name). (the problem is covered by Zend/tests/ns_056.phpt)
Removed hack (we don't need to modify class name). (the problem is covered by Zend/tests/ns_056.phpt)
Implemented concept of "delayed early binding" that allows opcode caches to perform class declaration (early and/or run-time binding) in exactly the same order as vanila php. The following pseudo-code explains how it should be used in opcode cache.
Implemented concept of "delayed early binding" that allows opcode caches to perform class declaration (early and/or run-time binding) in exactly the same order as vanila php. The following pseudo-code explains how it should be used in opcode cache.
You might as well have 'the Steph special' too :-) I can never remember the cscript line, so let's just have 'configure' instead.
re2c checking. If it's not installed, the least scary of messages goes out. If it's installed but older than the required version, the download link is given.
ChangeLog update
report printf fix
fix integer overflow in lenght calculation
fix integer overflow in length calculation
MFB: Properly address incomplete multibyte chars inside escapeshellcmd()
MFB: Properly address incomplete multibyte chars inside escapeshellcmd()
Properly address incomplete multibyte chars inside escapeshellcmd()
fix integer overflow in length calculation
Revert
We need to pass PHP-managed pointers to filter here to avoid having emalloc'ed data assigned to things like r->uri and having it get efree()'ed on request shutdown which then means that if the Apache logging module tries to log r->uri it would be reading from free'ed memory.  So a simple estrdup before the filter call takes care of that.
fix win32 build
MFB: detect duplicate sections
remove duplicated sections
detect test cases with duplicated sections
add request_order
fix tests (removed duplicated stuff)
remove leftovers
fix test
fix test
return empty string of correct type if __toString() returned invalid value
fix tests
fix tests
BFN
MFH: fix #39127 (Old-style constructor fallbacks produce strange results)
fix #39127i (Old-style constructor fallbacks produce strange results)
fix test
fix test
use @ to silence the commands
- new tests for ctype functions
- new tests for ctype functions
- new tests for ctype functions
fix 5_3 ZTS build
ChangeLog update
Make re2c required
- No more flex underwindows either
- Update windows build script
- Add files generated by re2c
- Rewrite scanner to be based on re2c instead of flex   The full patch is available as:   http://php.net/~helly/php-re2c-5.3-20080316.diff.txt   This is against php-re2c repository version 98   An older patch against version 97 is available under:   http://php.net/~helly/php-re2c-97-20080316.diff.txt
- Rewrite scanner to be based on re2c instead of flex   The full patch is available as:   http://php.net/~helly/php-re2c-5.3-20080316.diff.txt   This is against php-re2c repository version 98   An older patch against version 97 is available under:   http://php.net/~helly/php-re2c-97-20080316.diff.txt
MFB: Remove unused variable
Remove unused variable
- Updated to version 2008.1 (2008a)
- Updated to version 2008.1 (2008a)
- Updated to version 2008.1 (2008a)
ChangeLog update
BFN: #41828, #44440
ChangeLog update
Add SKIPIF (32bit platform only)
Add SKIPIF (32bit platform only)
MFH
updated due to the creation of the primary testers mailinglist
Improve GC to support garbage created in destructors during objects utilization
Improve GC to support garbage created in destructors during objects utilization
- MFH: Allow datetime objects to be serialized and woken up. - MFH: Implemented __set_state().
- Allow datetime objects to be serialized and woken up. - Implemented __set_state().
Removed commented code and unnecessary inline function
Removed commented code and unnecessary inline function
MFH: check if return value of write() is -1 and abort upload in this case setting the correct error status
check if return value of write() is -1 and abort upload in this case setting the correct error status
ChangeLog update
[DOC] adds new odbc driver specific ODBC_ATTR_ASSUME_UTF8 to deal with unicode coming out of Microsoft SQL Server and is only relevant on windows, use it if unicode output from the server is garbled and it will autoconvert text - original patch by wez
- MF53: Added support for parsing date/time strings returned by MS SQL with strtotime().
- Added support for parsing date/time strings returned by MS SQL with strtotime().
Disable path resolution for filenames with stream wrappers More careful check for relative pathes (./xxx and ../xxx)
Disable path resolution for filenames with stream wrappers More careful check for relative pathes (./xxx and ../xxx)
fix zts build
ChangeLog update
MFB: add request_order INI variable to control $_REQUEST content # if not set (default), variables_order still is used # request_order accepts G,P and C
[DOC] add request_order INI variable to control $_REQUEST content # if not set (default), variables_order still is used # request_order accepts G,P and C
Sync with fix for #44394
Sync with fix for #44394
Sync with fix for #44394
MFH: New test for existing behavior
MFH: New test for existing behavior
New test for existing behavior
New test
New test
New tests
New tests
Code simplification
Code simplification
Optimized ZEND_FETCH_CLASS + ZEND_ADD_INTERFACE into single ZEND_ADD_INTERFACE opcode
Optimized ZEND_FETCH_CLASS + ZEND_ADD_INTERFACE into single ZEND_ADD_INTERFACE opcode
implement full support and usage of phar stream in include_path, for both 5.2 and 5.3. 5.3 code expects the proposed patch for stream wrapper in include_path to be committed 5.2 code only supports phar stream wrapper in include_path. this is a 2-step process.  After this, more magic, particularly in funcinterceptors.c will be converted to use phar_resolve_path, which is far safer than the current implementation.
fix leaked var, fixes all tests for me
ChangeLog update
MFH
Cleaned up whitespace
Adding itk again to non-threaded MPMs. Sorry for the confusion
Adding itk again to non-threaded MPMs. Sorry for the confusion
Add new test (bug reported in internals list by Robin)
Add new test (bug reported in internals list by Robin)
Add new test (bug reported in internals list by Robin)
Add new test (bug reported in internals list by Robin)
Missing a line
Missing a line
New tests
New tests
some more tests
some more tests
MFH: fix segfault - error_string may be NULL, in this case we have to follow the old behavior
MFH: fix segfault - error_string may be NULL, in this case we have to follow the old behavior
fix segfault - error_string may be NULL, in this case we have to follow the old behavior
- Added extra whitespace around error messages in expected output
- Replace with previous commit
- Added extra whitespace around error messages in expected output
- Modified tests
- Added extra whitespace around error messages in expected output
ChangeLog update
More todo items
MFH: New way for check void parameters
MFH: Added new macro for check void parameters. (deprecating ZEND_WRONG_PARAM_COUNT for this cases)
Update mysqlnd, ext/mysql and ext/mysqli - now possible to compile with different configurations one or the another extension to use libmysql or mysqlnd mixed in one binary
Update mysqlnd, ext/mysql and ext/mysqli - now possible to compile with different configurations one or the another extension to use libmysql or mysqlnd mixed in one binary
char **error_string was passed but not used. This causes problems in cases of getaddrinfo() failure, because the upper layers don't get the error. initialize a variable because we were reading initialized in case of error.
  char **error_message was passed but not used. This causes problems in cases   of getaddrinfo() failure, because the upper layers don't get the error.   initialize a variable because we were reading initialized in case of error.
char **error_message was passed but not used. This causes problems in cases of getaddrinfo() failure, because the upper layers don't get the error. initialize a variable because we were reading initialized in case of error.
fix gcov build
- New tests for getcwd() function
- New tests for getcwd() function
- New tests for getcwd() function
- Modified expected output to allow tests to work on all platforms
Improve the Darwin 9 hack considerably and switch to using dl*() instead of NS*() on Darwin 8+.
- Modified expected output to allow tests to work on all platforms
MFB: Improve the Darwin 9 hack considerably and switch to using dl*() instead of NS*() on Darwin 8+. (Patch by Gwynne)
- Modified expected output to allow tests to work on all platforms
Improve the Darwin 9 hack considerably and switch to using dl*() instead of NS*() on Darwin 8+. (Patch by Gwynne)
Unused function in HEAD, fixes compiler warning
- New tests for scandir() function
- New tests for scandir() function
- New tests for scandir() function
Remove unneeded entry
Update NEWS
ChangeLog update
%v -> %s, this is 5_3
MFB: Initialize ts only after successful argument parsing
Initialize ts only after successful argument parsing
sapi/apache2(handler|filter)/config.m4: Removing itk from the list of threaded MPMs (thanks Hannes)
sapi/apache2(handler|filter)/config.m4: Removing itk from the list of threaded MPMs (thanks Hannes)
Rename archive during compressAllFiles*() Note: this only works for tar archives at present pending a fix for bug #13352
pack tar structs so speed optimizations don't add extra bytes to the header
ChangeLog update
Adding itk and and peruser MPM to the list of threaded Apache MPMs
Adding itk and and peruser MPM to the list of threaded Apache MPMs
User error handlers no longer catch supressed errors
MFH: User error handlers no longer catch supressed errors
MFB: User error handlers no longer catch supressed errors (patch by Etienne Kneuss)
User error handlers no longer catch supressed errors (patch by Etienne Kneuss)
- MFH . Libxml version < 2.6.21 it fails. Patch from scoates
fix tests if allow_url_fopen is disabled in php.ini
fix tests if allow_url_fopen is disabled in php.ini
- MFH - If libxml dotted version smaller than 2.6.20 it's a fail. Patch from scoates
- Skipif libxml dotted version is < 2.6.20. Patch from scoates
fix test if allow_url_fopen is disabled in php.ini
fix test if allow_url_fopen is disabled in php.ini
- MFB. Ok to fail on OSX. Patch from scoates
- Ok to fail on OSX, adjusted bug, patch from scoates
Countable requires SPL
Countable requires SPL
Bug fixed in MySQL 5.0.46
Bug fixed in 5.0.46
update NEWS
BFN: #44373
MFB: fix #44214
BFN #44214
fix bug #44214: crash with preg_replace_callback and global variables
BFN: #39108
MFB53 skipif patch as asked by gentoo guys
BFN: #44336
MFB
implement #44336: optimize utf8 string matching add PREG_BAD_UTF8_OFFSET_ERROR constant
add new tests
add new tests
Cosmetics (removed space on error message)
Cosmetics (removed space on error message)
BFN
BFN
ChangeLog update
Forgot one file in last commit
MFH: fix bug #32330 (session_destroy, "Failed to initialize storage module", custom session handler)
- MFH: New tests
- New tests
- MFB: #44355  	compilation breaks due illegal const usage
- #44355, compilation breaks due illegal const usage (Guenter Knauf)   I suppose it must break on other platform, it is not used anywhere else   but here, and it was introduced after 5.2.5 (why no news)
BFN.
- Tests awaiting fix of bug #44246
- Tests awaiting fix of bug #44246
- Tests awaiting fix of bug #44246
- New tests for rewinddir() function
- New tests for rewinddir() function
- New tests for rewinddir() function
fix test
- New tests for closedir() function
- New tests for closedir() function
- New tests for closedir() function
update TODO
style
BFN
MFB: Update bundled SQLite to 3.5.6
Update bundled SQLite to 3.5.6
Typo, bundled version is really 3.3.7
fix build
fix build
test was failing because I had a file named 1 in the checkout directory # note to tests writers: never assume anything about directory # contents.
test was failing because I had a file named 1 in the checkout directory # note to tests writers: never assume anything about directory # contents.
improve seed calculation # better solution would be to port mt's multi-value seed procedure
improve seed calculation # better solution would be to port mt's multi-value seed procedure
improve seed calculation # better solution would be to port mt's multi-value seed procedure
ChangeLog update
Better readability (USTR_BYTES)
Back to dev
5.2.6RC2
MFH: fix segfault when trying to clone uncloneable object
fix segfault when trying to clone uncloneable object because of zend.ze1_compatibility_mode which we should have got rid of years ago
Add new tests for class/object functions and features.
Add new tests for class/object functions and features.
Add new tests for class/object functions and features.
ChangeLog update
MFB: Revert patch for bug #44325
MFB: Revert patch for bug #44325
Revert patch for bug #44325
- MFB: #42505, new sendmail default path breaks on Novell (Guenter Knauf)
- MFB: #40013, php_uname() does not return nodename on Netware   (Guenter Knauf)
- #40013, php_uname() does not return nodename on Netware (Guenter Knauf)
- #42505, new sendmail default path breaks on Novell (Guenter Knauf)
Using new magic constant __DIR__ in run-tests.php
Using new magic constant __DIR__ in run-tests.php
- fix test (MF53)
Optimized require_once() and include_once() by eliminationg open() syscall on se cond usage.
Optimized require_once() and include_once() by eliminationg open() syscall on second usage.
add missing .cvsignore
MFH: apply better fix
MFH: apply better fix
apply better fix, so that the default handle would be closed when closing its reference
cosmetic fixes
MFH: fix memory corruption due to double destruction of default dir handle
MFH: fix memory corruption due to double destruction of default dir handle
fix memory corruption due to double destruction of default dir handle (detected by ext/standard/tests/dir/readdir_variation6.phpt)
ChangeLog update
New way for check void parameters
New way for check void parameters
Add oci_bind_by_name update
Add #41069. Clarify attributions.
Attempt greater test portability
Attempt greater test portability
- new tests for readdir() function
- new tests for readdir() function
- new tests for readdir() function
re-fixing to skip on 64 bit
MFH
MFH
fix test
- new tests for opendir() function
- new tests for opendir() function
- new tests for opendir() function
ChangeLog update
fix tests
Remove inconsistent behaviour when a protected static prop is overridden by public static prop (details: http://turl.ca/phhhf ).
Remove inconsistent behaviour when a protected static prop is overridden by public static prop (details: http://turl.ca/phhhf ).
Removed unnecassary strlen()
- A bit more work on PharData creation/conversion. - If readonly=0, why not $phardata->convertToPhar()? - Known issue with directories creating 'as-file' copies within the archive (all formats) @Greg/Marcus/Tony: This passes all tests on my box, 5.2/5.3/release_ts/debug_ts, and I can't find any more memleaks. Obviously this is too good to be true, so if conversion is still messy elsewhere please feel free to fix, or bug and assign to me.
ChangeLog update
ChangeLog update
Going back to square one ("it works on Scott's box" - OSX 10.5, gcc version 4.0.1 (Apple Inc. build 5465)). Thanks ScottMac, David C and Philip for testing... Possibly a gcc version issue?
MFH
typo fix (thx chris)
MFH
link primary tester URLs and tried to limit lines to 80 chars
Should work on all platforms now. (Testing.)
Right problem, wrong solution. Also missed an '= 1' , thanks Marcus
Tested this time. All's fine here, MacOSX still complaining @ present.
MFH: New tests
- New tests
Untested. Killing remaining warnings under MacOSX (thanks again Philip).
All tests pass here now. Thanks Philip for reporting compiler errors that don't show on my setup.
MFH: Allow implementation of abstract methods with optional parameters (Christian   Schneider)
- Allow implementation of abstract methods with optional parameters (Christian   Schneider)
ChangeLog update
fix segfault, comment out useless line
Heaps addition
ChangeLog update
Add "Strict error" when assigning value to property of inexistent object
MFB
count() before and after a simplexml array cast should be the same
We don't nave to change request shutdown sequence if dl() was failed
We don't nave to change request shutdown sequence if dl() was failed
Added UEXPECT
Set proper RC version (Thanks Hannes)
Revert
New macro for check void parameters
Added new macro for check void parameters. (deprecating ZEND_WRONG_PARAM_COUNT for this cases)
MFH
use pcre for testing reflection
Kill an unnecessary bit of internal docu and add 'compression' to the TODO
ChangeLog update
Forgot to return... not that I understand this stuff...
Allow alias for phar.tar/phar.zip
Back to dev
5.2.6RC1
Update TODO
Initial support for PharData object. Note: two tests currently fail. IMHO we should be throwing E_ERROR on encountering a corrupted archive, not trying to throw a trail of exceptions... New tests still to be written, not all functionality is in place yet.
MFH
MFH
Chris is now primary maintainer of OCI8
ChangeLog update
MFB: Improved fix for #44242
MFB: Improved fix for #44242
Improved fix for #44242
- New tests for chdir() function
- committed chdir() tests in wrong directory
- New tests for chdir() function
- New tests for chdir() function
ChangeLog update
fix test noise
MFB: Better fix for bug #44189
MFB: Better fix for bug #44189
Better fix for bug #44189
Add recent OCI8 bug fixes
OCI8: fix bug #44008 (OCI-Lob->close) & bug #44206 (ref cursor leak)
MFH: OCI8: fix bug #44008 (OCI-Lob->close) & bug #44206 (ref cursor leak)
OCI8: fix bug #44008 (OCI-Lob->close) & bug #44206 (ref cursor leak)
MFH: SplHeap, SplMinHeap, SplMaxHeap, SplPriorityQueue implementation
SplHeap, SplMinHeap, SplMaxHeap, SplPriorityQueue implementation
MFH: fix win32 build
fix win32 build
Update protos.
Make it possible to read the TODO file on a laptop :)
Lunchbreak III
Lunchbreak II
Lunchbreak.
Update reflection info
Leftover from experimenting with zend_hash_del...
Replace hardcoded resource ids with %d in fgetc() tests.
Replace hardcoded resource ids with %d in fgetc() tests.
Replace hardcoded resource ids with %d in fgetc() tests.
update TODO
add little fix to phar_mount_entry to ensure path separators are unix-based on windows
implement Phar::mount() for directories, add test
ChangeLog update
fix tests
fix --CLEAN--
fix test
add missing declaration of phar_rename_archive
A bunch of stuff to do with filename conversion. Hopefully it won't sink the ship.
Updating tests. 100% pass rate here now - not sure about the rest of the world just yet (sorry Marcus).
New test
New test
New test
Entry existent in 5_2
New E_ALL value
Removed internal warning
Removed internal warning
Added UEXPECTF
ChangeLog update
FIxed tests (new error message - E_DEPRECATED)
fix faulty & in check for creation of phar manifest
free mounted_dirs on error to avoid memleak
- Felipe just told me we forgot this one
fix unfreed value found in tempmanifest1.phpt
fix double error (this fixes frontcontroller22.phpt)
New E_ALL value
Change some E_STRICTs to E_DEPRECATED
down to 1 failing zip test with this commit
fix unfreed value
port same fix from tar.c to zip.c
best fix for the bad logic in tar.c, now all tests pass that should
revert previous changes to tar.c, fix incorrect user_stub == dummy check, now things work that should
revert previous changes to tar.c, fix incorrect user_stub == dummy check, now things work that should
fix test, missing phar.readonly=0 --INI-- section
- MFH Add E_DEPRECATED (Lars Strojny, Felipe Pena, Marcus) [DOC] Finally added deprecation messages
- Add E_DEPRECATED (Lars Strojny, Felipe Pena, Marcus)
that !zend_hash_exists should be zend_hash_exists
fix unfreed stuff when adding default stub
free spprintf'ed stub after using it
fix test - needed phar.readonly=0 INI section
ChangeLog update
typo (closes bug #43943)
- bug #44212  array_diff_assoc_error.phpt should  expect warnings for missing parameters
- bug #44212  array_diff_assoc_error.phpt should  expect warnings for missing parameters
- New tests for reset() function
- New tests for reset() function
- New tests for reset() function
No point in echoeing the raw value back here in the error message
Missing footer comment
Missing footer
ChangeLog update
As the line below says - there shouldn't be an exception here.
Updated wrong expectation (different stub).
New parameter parsing [DOC]
- New tests for end() and next() function
- New tests for end() and next() function
- New tests for end() and next() function
Update tests to accommodate those two extra bytes
Satisfy the pedants :)
Updating conversion tests to check for more conversion parameters than one. Note that these will all fail against current CVS. @Greg: We need to clarify conversion policy across the board.
- New tests for key() function
- New tests for key() function
- New tests for key() function
s/zip/tar
fix test
fix test
news entry for new stuff
MFH
new Oracle stuff
Cosmetics change
MF53
ws->tab fixes
Prevented recursive collector invocation
Prevented recursive collector invocation
ChangeLog update
A much better solution for setDefaultStub(). The convertTo*() fixes should be trivial now.
New test
New test
New test
Implement $phar->setDefaultStub() Note that Phar::createDefaultStub() still exists at this point
Let's have reflection reflect reality...
Take some of the pain out of stub rewrites. (Full default stub is tested elsewhere.)
- New tests for current() function
- New tests for current() function
- New tests for current() function
Move supporting files to their own directory (toplevel tests)
Added checks for destoied objects
Added checks for destoied objects
ChangeLog update
Update for PECL release
everted (this part was committed by mistake)
- New tests for each() function
- New tests for each() function
- New tests for each() function
Reverted wrong commit (debug code)
New test
New test
MFB
some BDs (e.g. firebird) dont support text, so replace it with varchar(255).
- New tests for natcasesort() function
- New tests for natcasesort() function
- New tests for natcasesort() function
- changed UEXPECTF section
MFH: Fugbix typo.
MFH: Fugbix typo.
Fugbix typo.
Update tests to match new stub length
MFB: sync DRCP connection pooling and FAN support from PHP 5.3
ChangeLog update
MFH: Add debug_info handler to SplDoublyLinkedList/Stack/Queue to make them var_dump friendly
Add debug_info handler to SplDoublyLinkedList/Stack/Queue to make them var_dump friendly
Allow createDefaultStub() to accept 0, 1 or 2 parameters. Default for both CLI and web is 'index.php'. @Greg: this breaks a handful of tests due to the change in stub.h - will fix in a bit. The only one that's interesting is you can't do strlen(Phar::createDefaultStub()) and expect anything other than an exception now.
Made code opcode-cache friendly. (It is disallowed to change code during execution)
Made code opcode-cache friendly. (It is disallowed to change code during execution)
Made code opcode-cache friendly. (It is disallowed to change code during execution)
fixed some failures on test scripts caused by bug fix.
Removed redundant refcount manipulations
Removed redundant refcount manipulations
Removed redundant refcount manipulations
add initial support for hashing mounted directories.  Actual matching of mounted directories is not yet supported.
add Phar::mount() to manually mount a file or directory
add externally parsed files to temporary manifest (this will be made optional and must be explicitly enabled per-phar)
ChangeLog update
- MFH Allow zend_extensions to be build inside ext and tested with 'make test'
- Allow zend_extensions to be build inside ext and tested with 'make test'
- MFH: fixed typoes.
Mbstring bug fixing news
MF PHP5_3 (fixed #43841)
MF PHP5_3 (fixed #43994)
MF PHP5_3 (fixed #43998)
MF PHP5_3 (fixed #43840)
ChangeLog update
 - MFB: add PHP_PHP_BUILD\bin to the path in PATH_PROG (option set with --with-php-builds=[PATH] the zip.zip contains all we need (except re2c! )
- add PHP_PHP_BUILD\bin to the path in PATH_PROG (option set with --with-php-builds=[PATH] the zip.zip contains all we need (except re2c! )
fixed #43998  	Two error messages returned for incorrect encoding for mb_strto[upper|lower]
fixed #43994  mb_ereg 'successfully' matching incorrectly.
fixed #43841  mb_strrpos offset is byte count for negative values.
fixed bug #43840  mb_strpos bounds check is byte count rather than a character count.
MFB
MF PHP5_3
removed unnecessary space.
MF PHP5_3
'auto' encoding was not initialized correctly per request basis.
MFB: Test existing LOB error messages
MFB: Test existing LOB error messages
Test existing LOB error messages
ChangeLog update
Streamlined code and incorporated review comments. Respect oci8.ping_interval when oci_pconnect called multiple times in a script. Changed OCIServerVersion to OCIPing (http://pecl.php.net/bugs/bug.php?id=11976)
MHB: Bug #44113 (New collection creation can fail with OCI-22303)
MHB: Bug #44113 (New collection creation can fail with OCI-22303)
Bug #44113 (New collection creation can fail with OCI-22303)
- New tests for rsort() function
- New tests for rsort() function
- New tests for rsort() function
- [DOC] MFB: add PHP_MAJOR_VERSION, PHP_MINOR_VERSION, PHP_RELEASE_VERSION,   PHP_EXTRA_VERSION, PHP_VERSION_ID, PHP_ZTS and PHP_DEBUG constants
optimization
- [DOC] add PHP_MAJOR_VERSION, PHP_MINOR_VERSION, PHP_RELEASE_VERSION,   PHP_EXTRA_VERSION, PHP_VERSION_ID, PHP_ZTS and PHP_DEBUG constants
optimization
- Add the ReflectionProperty::setAccesible() method that allows non-public   property's values to be read through ::getValue(). #- [DOC]
- Add the ReflectionProperty::setAccesible() method that allows non-public   property's values to be read through ::getValue().
MFH
more cosmetics
MFH: recursion protection in count()
MFH: recursion protection in count()
recursion protection in count()
MFH
cosmetic fix
begin work on ability to mount files from external locations as if they were inside of a phar archive
ChangeLog update
- New tests for count() function
- New tests for count() function
- New tests for count() function
- removing .project file
- New variation test for array_values()
- New variation test for array_values()
Another fix
Another fix
- New tests for array_values() function
- New tests for array_values() function
- New tests for array_values() function
New test
New test
New test
Update mysqlnd - fix bg_store
Update mysqlnd - fix bg_store
- New tests for array_slice() function
- New tests for array_slice() function
- New tests for array_slice() function
Reverted memrchr() patch, because it is broken on linux 64-bit
Reverted memrchr() patch, because it is broken on linux 64-bit
ChangeLog update
New calendar parsing API
- MFH: Add some missing elements from the return value.
- Add some missing elements from the return value.
- MFH Add missig .cvsignore
- Add missig .cvsignore
- New tests for array_shift() function
- New tests for array_shift() function
- New tests for array_shift() function
Use memrchr() instead of zend_memrchr() if available. (Nuno)
Use memrchr() instead of zend_memrchr() if available. (Nuno)
- New tests for array_push() function
- New tests for array_push() function
- New tests for array_push() function
remove refcount hack to workaround zlib memleak fixed in zlib intercepted file functions now fall through if the file is not found in the phar, this allows access to external libraries actually use include_path for locating files for inclusion and in file_get_contents/fopen when include_path is requested. This allows applications like Zend Framework MVC implementation to function properly
- committing tests for array_merge() function
- committing tests for array_merge() function
- committing tests for array_merge() function
- committing tests for array_key_exists() function
- committing tests for array_key_exists() function
- committig tests for array_key_exists() function
- MFH Make this behave like in <= 5.2.5 and test for it
- MFH Make this behave like in <= 5.2.5 and test for it
- Make this behave like in <= 5.2.5 and test for it
ChangeLog update
MFH: fix potential memleak due to destruction of filterparams zval
MFH: fix potential memleak due to destruction of filterparams zval
fix potential memleak due to destruction of filterparams zval
- MFH: Make clear what's going on and avoid overwriting parameters
- MFH: Make clear what's going on and avoid overwriting parameters
- Make clear what's going on and avoid overwriting parameters
Disable mbstring overload
- committing array_change_key_case variation tests
- committing array_change_key_case variation tests
- committing array_change_key_case variation tests
Add missing SKIPIF, rename vars for readability
- it helps if you add the new files :)
Make tests/tar in line with tests/zip.
MFH
nuke unnecessary TSRMLS_FETCH()
Added NOWDOC
Added NOWDOC
Added NEWDOC
fix TSRM build
update TODO to reflect must-haves prior to 2.0
fix test (all tests pass on unix now)
fix remaining broken tests broken by the addition of phar->fp closing
fix some of the failing tests due to non-reopened phar fp
ChangeLog update
fix build
New test
New test
fix folding
HNY
MFB __DIR__ constant support
MFB __DIR_ constant support
MFB tests for __DIR__
HNY
add T_DIR
add tests for __DIR__
__DIR__ announce
[DOC] Add compile-time __DIR__ constant which implements dirname(__FILE__)
There's a difference between 'BORKED' and 'FAILED'...
Funnily enough those frontcontroller tests still pass here! Investigating...
kill a couple of msvc warnings
revert last commit to phar_object.c fix open file pointers issue on windows
add destructor for Phar object to decrease refcount
cvs sync
cvs sync
MFH: Provide ctod/dtor with TSRM
Provide ctod/dtor with TSRM
new 6.0 flag
new 6.0 flag
MFH: cosmetics
MFH
this is integer, not pointer
fix windows pathname issues
fix TSRM and 5.2 build
update TODO
move creation of phar archive to the point at which it is committed to disk, instead of at the moment it is attempted access. (making some real progress now, all tests pass on unix)
minor refactoring to remove 1 call to zend_get_executed_filename()
new test for special tar-based app and more iteration test
major refactoring of internal handling of aliases. 1) rename is_explicit_alias to is_temporary_alias for clarity and flip the value 2) fix setAlias so that it sets a permanent to-be-saved alias, and restores the old one on error 3) fix Phar constructor to work with sub-directories in RecursiveDirectoryIterator
fix 5.2 build
ChangeLog update
update test phars
MFH: The exact message differs on different systems
MFH: The exact message differs on different systems
The exact message differs on different systems
Possible fix for bug #43861
Cosmetics, move stuff around, ws
New test
ChangeLog update
- MFH Windows build fix
- Windows build fix
New test for strtok
ChangeLog update
fix ===DONE=== with windows EOLs
fix ===DONE=== with windows EOLs
MFB: add new test
add new test to test function with many arguments (i.e. test the new stack implementation) this increases the converage of zend_execute.h by 18%
Remove dead code
- Type
add ifdefs and fix folding
fix 5_3 build
Improved md5() implementation (Solar Designer)
Improved md5() implementation (Solar Designer)
fix issues in opendir() with empty directories within a phar archive, port filterparams fix to tar.c
make maximum manifest size 100MB for phar archives, simple apps are hitting the 1 MB limit quite easily.
better fix for double free - ensure that SEPARATE_ZVAL() inside zlib_filter.c actually separates the zval, then we can zval_dtor() it properly
remove test accidentally added
remove unnecessary INIT_ZVAL(filterparams) that causes unfreed value
fix memory leaks.  There are some leaks in libz that I can't fix, but none triggered in the current tests
SEPARATE_ZVAL does not work for this situation.  We always want to duplicate and copy, so do it manually and reset refcount to 1
ChangeLog update
fix flipped logic
fix mem leaks strip trailing slash if present in a directory entry.  This code assumes that tar_type is directory, as it must be to be a valid directory.
better fix for invalid mem access
fix invalid read/write if strstr() returns NULL
[DOC] refactor the $rewrites parameter in Phar::webPhar.  Now it is a callback that accepts the path requested.  This callback should return the actual filename requested as a string, or false to deny access as HTTP 403. Also fix incorrect munging of SCRIPT_NAME variable in mungServer More importantly, Phar::webPhar now finds the filename hidden in: http://localhost/myphar.phar/internal/file.php/extra/stuff as 'internal/file.php' in phar 'myphar.phar' with REQUEST_URI '/internal/file.php/extra/stuff' this will allow pharring up apps that use REQUEST_URI for front controller stuff.
Update copyright
- MFH Simplify
- MFH Add %Z to *printf
- Simplify
- Add %Z to *printf
- WS
fix test
Added UEXPECTF
Added UEXPECTF
- MFH WS
- WS
MFH
MFH: fix TSRM mutex return value inconsitencies (patch by Scott MacVicar)
fix TSRM mutex return value inconsitencies (patch by Scott MacVicar)
remove old code leftover causing problems
fix webPhar() in CGI sapi, update tests to reflect reality of how these ENV vars are passed
New param parsing API
ChangeLog update
- Is there an easier way to figure out something is a string?
MFH
MFH
- Add test for the "modifying original array" bug
ws
Pconnect working with mysqli_real_connect()
Pconnect working with mysqli_real_connect(). To less failing tests.
- BFN
- WS
- WS/Cleanup/grouping - WOW that'll be a really nice release! # Thanks for everyone working on this already!!
- WS
Tests for assorted Maths functions
Tests for assorted Maths functions
Tests for assorted Maths functions
ChangeLog update
- MFH Add new test
- Add new test
- fix arsort_variation3.phpt which was missing its EXPECT section
- fix arsort_variation3.phpt which was missing its EXPECT section
- fix arsort_variation3.phpt which was missing its EXPECT section
ChangeLog update
- Damnit you flags (wrong commit)
- MFH Really last flag change (got confused with code)
- MFH Really last flag change (got confused with code)
- Really last flag change (got confused with code)
Revert fix for bug #43981, not yet ready for 5.2
- MFH Flag handling and documentation
- MFH Update docu
- Update docu
MFH: allow using these constants in php.ini (f.e. PHP_SAPI..)
- Allow using any constants registered by PHP in php.ini too
Add NEWS entry for ext/dom arginfo changes.
- MFH Really fix flag handling
- Really fix flag handling
- Setting flags once is enough
MFB: Simplify unique string generation and plug a leak.
Simplify unique string generation and plug a leak.
- CS/WS
MFH: Add missing Reflection API metadata for DOM classes.
MFH: Add missing Reflection API metadata for DOM classes.
Add missing Reflection API metadata for DOM classes.
- Spread some %v's
ChangeLog update
- added some new tests for arsort
- added some new tests for arsort
- added some new tests for arsort
- Update .cvsignore
- Update .cvsignore
- MFB Sync
- Small improvements, no malloc needed for the zval
- MFH Typo
- Typo
- MFH Rename it again [DOC] - MFH Add config_get_hash()
- Rename it again [DOC] - Add config_get_hash()
- Sync tests.
- MFH Rename dump_config_hash() to get_config_hash() as it doesn't dump
- Rename dump_config_hash() to get_config_hash() as it doesn't dump
- MFH: Support "first/last day of <month>" style texts.
- Support "first/last day of <month>" style texts.
- Only one line heading
- Only one line heading
Missing Johannes' name
Moving the the phpt generation script to scripts/dev directory at Jani's suggestion.
ChangeLog update
fix test, add 64bit version
- MFH Synch directory changes [DOC] # Class FilesystemIterator was introduced to have a better DirectoryIterator # without having to change DirectoryIterator or RecursiveDirectoryIterator. # On top of FilterIterator the new GlobIterator was introduced. This one allows # to implement Countable(). But a glob stream flattens all structure, so it # cannot be derived from RedursiveIterator. With the new structure all children # of FilesystemIterator have nearly the same behavior. Just their capabilities # are a bit different. Check out new inheritance tree on SplFileInfo: # # [marcus@frodo PHP_5_3]$ php ext/spl/examples/class_tree.php SplFileInfo # make: `sapi/cli/php' is up to date. # SplFileInfo # |-DirectoryIterator (Iterator) # | \-FilesystemIterator # |   |-GlobIterator (Countable) # |   \-RecursiveDirectoryIterator (RecursiveIterator) # |     \-Phar (ArrayAccess, Countable) # |-PharFileInfo # \-SplFileObject (RecursiveIterator, SeekableIterator) #   \-SplTempFileObject
- Add new classes
- MFB glob handling - Add GlobIterator and FilesystemIterator # Commit to 5.3 for more
MFH: fix leak appearing when calling non-static protected or private methods as static
fix leak appearing when calling non-static protected or private methods as static (error message is allocated twice)
- MFH Show interfaces
- Show interfaces
- MFH: Make timezone_open() work again.
- MFH: Make timezone_open() work again.
- Make timezone_open() work again.
- MFH Add comment that explains why we need E_ERROR  in those cases
-Add comment that explains wh we need E_ERROR in those cases
- MFB static callable message mess
- Drop useless TODO, this would need to be fixed in a generic way
- It appears HEAD needs to be MFB'ed and this needs another fix now
- MFH Use new parameter parsing API
Countable requires SPL
fix logic of path redirection.  always prepend index_php with "/" if it doesn't have it, and then if path_info ends with "/" just use entry + 1
Another batch of fixed tests
Ops, fix the fix
ChangeLog update
What's the [0] for here?  Looks wrong and causes stuff to segv
2 more test fixes
fix test, add 64bit version
fix test, add 64bit version
Small tweak.  Need to make array and string callback syntax behave the same way.  Also change "cannot" to "should not" since we obviously "can" make the call.
move to in between BEGIN_EXTERN_C() block, to avoid breakage with C++ (i.e. windows)
- OSX "extern" compatibility fix.
remove unused variable, eliminate an invalid read reported by valgrind
MFH: Added new parameter for strstr(), stristr()
Command line script to help generate the basic framework of a PHPT
The new parameter was merged to 5.3 [DOC]
A few new tests for math functions - Note the "constants" test will fail on Windows - Bug 42143.
A few new tests for math functions - Note the "constants" test will fail on Windows - Bug 42143.
A few new tests for math functions
- a few more gd tests (committed on behalf of andy wharmby)
- a few more gd tests (committed on behalf of andy wharmby)
- a few more gd tests (committed on behalf of andy wharmby)
- Committing new tests for MBString extensions - The tests listed in the following link will fail as they are adjusted to expose bugs (more details here: http://news.php.net/php.qa/62382)
- Committing new tests for MBString extension. More details can be found here: http://news.php.net/php.qa/62382
- Committing new tests for MBString extension. More details can be found here: http://news.php.net/php.qa/62382
ws
Generate newline at end of stub.h
New tests and fix tests (new error message)
MFH: New parameter 'before_needle'
check for empty/null path still some leaks are left
we don't want to modify the pointer contents, we just want to change the pointer itself
this string should be freed later since path == free_path
fix compile warning (No newline at end of file)
glob:// was added in 5.3, no need to mention bug fixes for it
ChangeLog update
MFH: New test for old, suspended bug
New test for old, suspended bug
BFN
MFH: fix bug #42369 (Implicit conversion to string leaks memory) add test
MFH: fix bug #42369 (Implicit conversion to string leaks memory) add test
fix bug #42369 (Implicit conversion to string leaks memory) add test
Typo
These two tests both need a timezone
PDO is hardly experimental
BFN
Update test environement description. Typos
fix gcc 4 build
try to fix build with gcc 4: take #2
There are plenty of other non-Windows operating systems
try to fix build with gcc 4: take #1
- fix flag handling in is_callable()
fix win32 build
ChangeLog update
- SPL has been changed
- MFB SplDirectoryIterator/glob:// stream integration
- WS
- MFH Get rid of overoptimization
- Get rid of overoptimization
- Sub path may be NULL
Removing superfluous --INI-- section
Removing superfluous --INI-- section
Removing superfluous --INI-- section
BFN
MFH: fix bug #41562 (SimpleXML memory issue)
MFH: fix bug #41562 (SimpleXML memory issue)
fix bug #41562 (SimpleXML memory issue)
Revert
Adding tests for class features, including __autoload(), property inheritance rules and class constants. Note: autoload_012.phpt failing on php6, fix expected via bug 43973.
Adding tests for class features, including __autoload(), property inheritance rules and class constants.
Adding tests for class features, including __autoload(), property inheritance rules and class constants.
fix ZTS build
fix ZTS build
fix #43973 (__autoload called with wrong classname when triggered by static callback) the issue was present only in HEAD patch by Felipe
Imporoved PHP binary size and startup speed with GCC4 visibility control (Nuno)
Improved PHP binary size and startup speed with GCC4 visibility control (Nuno)
both pdo & spl dependencies are optional
fix typo
Copy-paste typo
ZTS fix
ZTS fix
This one depends on the precision setting
fix #43941: invalid utf-8 not accepted
fix #43941: invalid utf-8 not accepted
ChangeLog update
OK so let's kill the bug-hider
Change readline extension status to Working
MFH: fix win32 build
fix win32 build
no sleep here either
rm cruft
upgrade to pcre 7.6
upgrade to pcre 7.6
upgrade to PCRE 7.6. #changes to code are minimal. this fixes a security bug
- MF53: That should have been ||.
- That should have been ||.
- Make whitespace the same as in HEAD.
- Make whitespace the same as in 5.3.
- Commit generated file.
MFH: Add Reflection API metadata for DOMXPath.
MFH: Add Reflection API metadata for DOMXPath.
Add Reflection API metadata for DOMXPath.
MFH: Add Reflection API metadata for DOMNode.
MFH: Add Reflection API metadata for DOMNode.
Add Reflection API metadata for DOMNode.
entry moved to 5_2
MFH: fix #43927 (koi8r is missing from html_entity_decode()) patch by andy at demos dot su
fix test
missing spaces
missing spaces
fix test Derick, you're adding new methods too fast =)
Unicode support
Moved initialization into a separate function
Moved initialization code into a function.
- One last tweak (so Phar and no-phar work the same again now) - Bunch of test fixes - Note: I added a silencer to the unlink() call in zip/tarmaker to avoid system warnings here. If this messes up tests elsewhere we'll need to re-think.
Job done.
BFN
BFN
- MFH compact_variation1.phpt  - fix for bug #29044
- update compact_variation1.phpt to take into account fix for bug #29044
MFH: Add Reflection API metadata for XSLTProcessor.
MFH: Add Reflection API metadata for XSLTProcessor.
Add Reflection API metadata for XSLTProcessor.
Rock'n'roll... just php includes to figure out now.
- Good proto message and description of function
ChangeLog update
Simplify code
MFH: fix #43596 (array_slice(): $length arg ignored when it is 0)
fix #43596 (array_slice(): $length arg ignored when it is 0)
MFH: fix type and bug #43646
MFH: fix typo and bug #43646
fix typo and bug #43646
fix type
fix type
Moving extension specific code to php_mysqlnd.c as the old rule is.
Moving extension specific code to php_mysqlnd.c as the old rule is.
BFN
MFB: fix #43927 (koi8r is missing from html_entity_decode()) patch by andy at demos dot su
add test
fix #43927 (koi8r is missing from html_entity_decode()) patch by andy at demos dot su
MFB: some config.w32 fixes moved mysqlnd's block allocator to a separate file and also now it's part of the connection, no MT problems.
some config.w32 fixes moved mysqlnd's block allocator to a separate file and also now it's part of the connection, no MT problems.
- MFH Make SplObjectStorage implement ArrayAccess [DOC]
- Make SplObjectStorage implement ArrayAccess
'It works on my box'.
- MFH: Added two optional parameters to timezone_transitions_get() /   DateTimeZone::getTranstions() to limit the range of transitions being   returned.
- Added two optional parameters to timezone_transitions_get() /   DateTimeZone::getTranstions() to limit the range of transitions being   returned.
- MF53: Added missing folding tags.
- Add missing folding tags.
- MFH: Send the debug info to stderr instead of stdout.
- Send the debug info to stderr instead of stdout.
- MFH: Added date_timestamp_get() / DateTime::getTimestamp() to retrieve the   Unix timestamp belonging to a date object.
- Added DateTime::getTimestamp() / date_timestamp_get().
fix PharFileInfo->setAlias (was wildly broken) fix directory creation in zip archives update zip tests to use phar to create the zip, and then copy to a new file
MFB: More optimizations - less MM calls Clearly separated fetching (physical reading) from decoding phases (data interpretation). Threaded fetching added but disabled as needs more work for Windows. For Linux needs some touches to add pthreads if this is enabled, probably with a compile-time switch. The code reorganisation makes it easy to add also async API, similar to cURL's one.
More optimizations - less MM calls Clearly separated fetching (physical reading) from decoding phases (data interpretation). Threaded fetching added but disabled as needs more work for Windows. For Linux needs some touches to add pthreads if this is enabled, probably with a compile-time switch. The code reorganisation makes it easy to add also async API, similar to cURL's one.
Get rid of zip requirement in the last few tests @Greg: zip/tarmaker.inc needs a rewrite
Get rid of zip requirement
- Moved phar_unixify_path_separators() to a single central point - The last two VC 6 compiler warnings gone. Please test under *nix.
Remove items already in 5.3
remove unused PHP_MYSQL_API macro
remove unused PHP_MYSQL_API macro
Better message
remove ext/zip dependency entirely, write better native zip support re-organize, create util.c, move entry_info/archive_data/entry_data access methods to this file refactor entry->fp, now this is abstracted with phar_get_efp() and phar_seek_efp(), fixes all weird dependency issues permanently solve the "millions of file pointers" issue for read access.  All compressed files are read into a single temporary stream, and their constraints are controlled by the entry->fp abstraction
ChangeLog update
Remove bogus test (should be in HEAD)
- Test went to 5.2... somehow.... very strange
MFH: [DOC] Add ability to store associative infor with objects in SplObjectStorage - Add second parameter to SplObjectStorage::attach() - Add SplObjectStorage::setInfo() - Add SplObjectStorage::getInfo()
- Add second parameter to SplObjectStorage::attach() - Add SplObjectStorage::setInfo() - Add SplObjectStorage::getInfo()
- Add second parameter to SplObjectStorage::attach() - Add SplObjectStorage::setInfo() - Add SplObjectStorage::getInfo()
- MFH: Update proto
- Update proto.
- MFH: Added support for selectively listing timezone identifiers through   timezone_identifiers_list() / DateTimezone::listIdentifiers().
- Added support for selectively listing timezone identifiers through   timezone_identifiers_list() / DateTimezone::listIdentifiers().
fix test
fix test
WS
be more strict in the skipif
be more strict in the skipif
MFB: fix skipifs
fix a bunch of SKIPIF (check for non available locales)
MFH: add missing export
MFH: add missing export
add missing export
- Minor rearrange and fix potential issue with double adding
- MFH revert over constfying
- revert over constfying
MFH: Typo
Typo
MFH: -Pointer doesn't move if we're moving forward and shifting at the same time -Userland implementation -Doxygen doc
-Pointer doesn't move if we're moving forward and shifting at the same time -Userland implementation -Doxygen doc
ChangeLog update
MFH: Iterator implementation in SplDoublyLinkedList, SplStack, SplQueue
Iterator implementation for SplDoublyLinkedList, SplStack, SplQueue
ChangeLog update
MFB: const keywording
more const kewywording remove spl_functions_none var (wast used anywhere
MFB: const keywording
const more 216 bytes (on a 32-bits host)
const'ify more 372 bytes
MFB: const'ify
const'ify more 768 bytes
MFB: move data to const segment
move about 3K of data to the const area. also reduce memory usage (~ -266 bytes :P)
spread some static keywords
spread some static keywords
backport functionality to call user functions within XPath add test
"What helly said"
MFH: fix win32 compile
fix win32 compile
MFH: fix zts build
fix zts build
Make all possible build combinations work under doze (external zip library)
MFH: endless loop (and stack overflow) protection in compact()
endless loop (and stack overflow) protection in compact()
ChangeLog update
Adjust new chr() param handling to address chr("") calls
- Add a basic test for array_shuffle()
- Add a basic test for array_shuffle()
- Add a basic test for array_shuffle()
- add some basic tests for array diff and intersection functions
- add some basic tests for array diff and intersection functions
- add some basic tests for array diff and intersection functions
MFH
MFH
use local header when building bundled regex engine
- New tests for compact()
- New tests for compact()
- New tests for compact() # compact_variation1.phpt will fail until bug #29044 is fixed
MFH: fix zts build
MFH: fix zts build
fix zts build
Increased Zend MM cache size
Increased Zend MM cache size
- MFH: Show GC statistics if GC benchmarking is enabled. #- Discussed this with Dmitry.
- Show GC statistics if GC benchmarking is enabled. #- Discussed this with Dmitry.
Flag unicode safe functions
Changed EG(argument_stack) implementation.
Changed EG(argument_stack) implementation.
ChangeLog update
initial work on more efficient zip implementation, read support working, write not implemented yet This implementation will support read/write of extra field headers, both zlib/bzip2 compression read/write it will also delay header comparison/crc32 check until file open, making opening a single file within the zip much more efficient for large zip files it also uses emalloc/php streams and is therefore less likely to leak. this code is not yet built in config.m4/config.w32
Added myself as pdo_mysql & pdo_pgsql maintainer
fix build
typo
Additional executor specialization
Additional executor specialization
add missing TSRMLS_CC and fix segfaults in ZTS mode
BFN
MFH: fix #43559 (array_merge_recursive() doesn't behave as expected with duplicate NULL values) patch by Felipe
fix test
fix #43559 (array_merge_recursive() doesn't behave as expected with duplicate NULL values) patch by Felipe
MFH: fix leak appearing when appending data to unnamed attribute
use expectF
fix test
fix leak appearing when appending data to unnamed attribute
ChangeLog update
- MFH Bugfix #37076 (SimpleXML ignores .=). (felipe, marcus)
- Bugfix #37076 (SimpleXML ignores .=). (felipe, marcus)
fix 2 tests, add phar.readonly checks to rmdir/mkdir
MFH: Typos (Dan Scott) ctor inside the structure. dtor/ctor used on push/pop for better potential interoperability
News: already in 5_3 Typos (Dan Scott) ctor inside the structure. dtor/ctor used on push/pop for better potential interoperability
add new test
add new test
new test by Lars Strojny
Added garbage collector
Added garbage collector
fix tests to match CVS
use new param parsing API
ChangeLog update
MFH: Add doxygen docs for SplDoublyLinkedList, SplStack, SplQueue
Add doxygen docs for SplDoublyLinkedList, SplStack, SplQueue
Changed exception handling. Now each op_array doesn't contain ZEND_HANDLE_EXCEPTION opcode in the end
Changed exception handling. Now each op_array doesn't contain ZEND_HANDLE_EXCEPTION opcode in the end
Yet another comparison optimisation for usual cases
Yet another comparison optimisation for usual cases
- Added lcfirst() announcement.
fix #42861 (strtr() crashes in Unicode mode when $from argument is empty)
Eliminate unnecessary checks for INC/DEC IS_CV
Eliminate unnecessary checks for INC/DEC IS_CV
fix newly added segfault
Unicode migration for ext/ctype
Some unicode upgrades...
Flag safe func
Flag additional unicode safe funcs
Make unicode ready
fix problems found while documenting.  Throw consistent exceptions, chmod is not allowed on temporary directories, but is allowed on regular ones allow uncompressAllFiles() to decompress a gzip/bzipped tar archive fix some protos
ChangeLog update
MFB: Optimize wddx boolean encoding
Optimize wddx boolean encoding
Add note about new getopt() features
ChangeLog update
add web-based support for default stub, now phars written with webPhar() will work out of the box regardless of server configuration with phar file format split up stub.h strings into 2046 byte chunks because MS VC 6 is friggin stupid
s/1.3.0/2.0.0/
bump 1.3.0 to 2.0.0, this is a big feature addition release
- Wrong icu call, now using u_strToLower correctly
- MFH (lcfirst()) - Initial test for lcfirst
- Added lcfirst() function. The sister function of ucfirst() - Test #1 for lcfirst()
update package.xml
bump API version if the created phar has directories in it, so that it won't load with older phar versions
add Phar::createDefaultStub(), which can take as an argument the filename that should be loaded as a "bootstrap" for the phar archive
ChangeLog update
fix gcov build
MFH: Add ifdef
MFH: Add ifdef
Add ifdef
MFH: fix test
fix test the library vresion is actually exposed by ext/mysqli, not ext/mysql
fix test
fix test
BFN
major improvement: the new default stub allows creation of phars that run identically 1) with Phar extension 2) without Phar extension 3) extracted to disk from the phar this makes the default phar format quite interesting as it eliminates the only drawback of the extension
remove .cvsignore
ChangeLog update
- MFB: reflect the correct version
- MFB: reflect the correct version
- reflect the correct version
MF5.3: install headers, use correct zip version
MF5.3: install headers, use correct zip version
MFPECL: install headers
update module version number
add needed define back into config.w32, make zip required mod on win32, remove lib/.cvsignore
pcre 7.5 is in 5.2 branch as well
MFH: add errors when missing dependencies (Steph)
remove unneeded define, zip is required on windows
add new test for opening a zip-based phar with no zip ext, update skipif for phar_convert test
MFH
- mention rfc 1855
do fancy-shmancy zip dependency validation because ZEND_MOD_OPTIONAL_EX doesn't do any version validation
update package.xml
refine config.m4 to use the newly found zip headers
remove HAVE_ZIP defines just as we removed HAVE_BZ2 defines and for the same reason update outdated description of phar in config.m4 make zip extension mandatory on windows for compiling purposes
no need to use conditional defines for bz2, we don't call it except indirectly through stream wrappers. After removing HAVE_BZ2 conditionals, phar works even if bz2 is not present on installation through pecl
give up on gpg signing because of non-existent windows support for gpg signing lib
update m4 to make zip support always enabled so zip headers must be installed, add dep to package.xml
ChangeLog update
add optional whole-file compression to convertToTar/convertToPhar
fix build on windows
- run-tests.php -U - The unicode test's error messages are working
- MFB - Make sure to return the good error message with new parse parameters api   of ucfirst()
- Making sure the tests are not failing after modifications to the new   zend-parsing-parameters in ucfirst()
MFH: fix #43863 (str_word_count() breaks on cyrillic "ya" in locale cp1251) patch by phprus at gmail dot com
MFH: fix #43863 (str_word_count() breaks on cyrillic "ya" in locale cp1251) patch by phprus at gmail dot com
fix #43863 (str_word_count() breaks on cyrillic "ya" in locale cp1251) patch by phprus at gmail dot com
add Phar::convertToTar(), Phar::convertToZip(), and Phar::convertToPhar()
- MFH - Making sure this is also using the good zend parsing and added   the php_ucfirst function
- Make sure ucfirst is using the new zend-parse-parameters api - added php_ucfirst for non-unicode calls
ChangeLog update
MFH: fix #41941 (oci8 extension not lib64 savvy)
MFH: fix #41941 (oci8 extension not lib64 savvy)
fix #41941 (oci8 extension not lib64 savvy)
add support for creation of gzipped and bzipped tar-based phars
MFH: Testcase for #43492 (nested cursors)
MFH: Testcase for #43492 (nested cursors)
Testcase for #43492 (nested cursors)
MFB: fix #43497 (OCI8 XML/getClobVal aka temporary LOBs leak UGA memory)
MFB: fix #43497 (OCI8 XML/getClobVal aka temporary LOBs leak UGA memory)
fix #43497 (OCI8 XML/getClobVal aka temporary LOBs leak UGA memory)
fix #43680 (OnUpdateUTF8String problems in PHP 6) patch by Christopher Jones
MFH: fix win build
fix win build
MFH: fix memleak in sign and verify functions
MFH: fix memleak in sign and verify functions
fix memleak in sign and verify functions
Allow test to run from any directory
- MFH valgrind detection, note in header
- Detect versions of valgrind that have an appendix to their verion number - Show whether valgrind is being used in test header
oops.. I didn't mean to commit this
MFH: Bump year
Bump year
MFH: Implement splDoublyLinkedList, splQueue, splStack classes in SPL
Implement splDoublyLinkedList, splQueue, splStack classes in SPL
MFH: rename macros patch by colder
rename and export the macros patch by colder
ChangeLog update
MFB: Missing patch bit from the FETCH_GROUP fix
MFB: Missing patch bit from the FETCH_GROUP fix
Missing patch bit from the FETCH_GROUP fix
- Add missing .cvsignore
- cleanup and make build with HEAD
force tests to be run in CGI mode
MFH: fix bug #42945, as asked by Ilia
MFB5.2: fix script for files with short names
MFB5.2: fix script for files with short names
upgrade PCRE to version 7.5 (as asked by Ilia
add cvsignore
ignore run-tests generated files
fix build
fix test (make OS-agnostic)
fix test to be OS-agnostic
unixify path separators in tar-based phars, always use this value for duping alias
add missing skip sections in zip tests
fix test (make OS-agnostic)
add a whole slew of missing returns after throwing an exception, and remove 1 spurious return after RETURN_TRUE
fix test (make OS-agnostic)
merge in cgi fixes from PHP_5_3
add missing alias .h files
MFH: export libzip symbols
MFH: fix windows build for all cases, and always export symbols (Steph Fox)
MFPECL: fix windows build for all cases, and always export symbols (Steph Fox)
fix build on windows (Steph Fox)
ChangeLog update
MFH: add missing define for statically-built zip ext
add missing define for statically-built zip ext
use correct macro
MFB: fixed test
- MF53: Added new date/time functionality:
- Added new date/time functionality:
MFB: fix bug #42945
upgrade to PCRE 7.5
upgrade PCRE to version 7.5
MFB: a few fixes: overwrote all my careful work in zipint_alias.h with zipint.h, so had to restore that. PHP_RAW_NAMED_FE() won't work, have to use ZEND_RAW_FENTRY
a few fixes: overwrite all my careful work in zipint_alias.h with zipint.h, so had to restore that. PHP_RAW_NAMED_FE() won't work, have to use ZEND_RAW_FENTRY
MFH: alias all zip identifiers to avoid potential name conflicts with other apache libs that may export zip symbols
MFPECL: alias all zip identifiers to avoid potential name conflicts with other apache libs that may export zip symbols
ChangeLog update
wrong file version merged in fix for Bug #40189, here is the correct fix
new test for inclusion within phar that takes CWD into account
fix segfault in Phar::mungServer() found in frontcontroller20.phpt
fix segfault in Phar::webPhar() if file is in root directory, found in frontcontroller16.phpt
MFH: far better fix for bug #40189
MFB: far better fix for bug #40189
far better fix for bug #40189
MFH: fix faulty fix for Bug #40189, and provide real fix for the bug
MFH: fix faulty fix for Bug #40189, and provide real fix for the bug
fix faulty fix for Bug #40189, and provide real fix for the bug
fix conflict on win32 if phar compiled statically
add definitions for MAX_WBITS in case it isn't defined
MFH: clarify error message on why opening a stream wrapper failed for allow_url_include/allow_url_fopen, add test for allow_url_fopen
clarify error message on why opening a stream wrapper failed for allow_url_include/allow_url_fopen, add test for allow_url_fopen
make zip optional
fix compile on windows remove internal libzip add required dep on zip (will make optional in a few minutes)
MFH: export symbols for use by other extensions like phar
revert last commit, was to wrong branch
MFH: export symbols for use by other extensions like phar
export symbols for use by other extensions like phar
add missing defines, s/filename_len/filename_length/ (thanks steph) - now over to the windows box and debug this properly
ChangeLog update
Simplified assignment to string offset
Simplified assignment to string offset
MFH
- added rules about real names and signatures
MFH: starting with 2.6.30, standard libxml2 build can be used
MFH
- minor typo fixes
MFH
- initial commit .. feedback appreciated
stupid windows doesn't allow varargs macros, so remove it.  remove unused variable
update package.xml
add Phar::interceptFileFuncs() To intercept fopen(), file_get_contents(), opendir(), and all the stat-based functions so that code like "if (is_readable('./config.inc.php'))" actually works inside of a phar [DOC]
always mung PATH_INFO and PATH_TRANSLATED, fix segfault if tar-based phar has no stub
ChangeLog update
MAPPHAR_ALLOC_FILE slipped in there somehow
fix tsrm build, fix various problems with initialization and zlib/bz2-compressed phars
- MFH fix truncation of large values on 64-bit systems in http_build_query
- MFH fix truncation of large values on 64-bit systems in http_build_query
- fix truncation of large values on 64-bit systems in http_build_query
MFH: add errors when missing dependencies (Steph)
add errors when missing dependencies (Steph)
add interception of is_dir(), file_exists() and file_get_contents() - will make these optional shortly
fix #43750 (stristr() modifies string) patch by Felipe Pena
Added missing warning message
Added missing warning message
fix test
correct number of symbols
fix test
ChangeLog update
MFH: fix crash when using default algorithm
fix crash when using default algorithm
fix typo
Remplemented support for SplArray using Traversable interface.
Remplemented support for SplArray using Traversable interface.
MFH: fix win32 compile
fix win32 compile
update package.xml
new tests for bz2-compressed tar or phar-based phars (wow, worked on first try, how about that)
fix gzipped phars in phar file format, add test
apply proper fix of bug #43793 to zlib.deflate (window+16 = gzip)
apply proper fix of bug #43793 to zlib.deflate (window+16 = gzip)
apply proper fix of bug #43793 to zlib.deflate (window+16 = gzip)
implement whole-file compression of phars for phar/tar-based phars still not 100% working, add failing test add Phar::isCompressed(), which returns either 0, Phar::GZ, or Phar::BZ2 [DOC]
apply same fix of bug #43793 to zlib.deflate
apply same fix of bug #43793 to zlib.deflate
apply same fix of bug #43793 to zlib.deflate
fix Bug #43793: zlib filter is unable to auto-detect gzip/zlib file headers
fix Bug #43793: zlib filter is unable to auto-detect gzip/zlib file headers
fix Bug #43793: zlib filter is unable to auto-detect gzip/zlib file headers
add tests to package.xml, note new empty directory feature
add tests for directory creation and management for tar and zip-based phars, add isPhar() to phar-based test to confirm it is indeed a phar-based archive
add rmdir() support, add rmdir to dir test fix *extremely* ancient problem where phar_wrapper_stat always returned success indicating the file existed rename phar_destroy_manifest to phar_destroy_manifest_entry
- MFB: #43790, fix crash when no family name has been found
- MFB: #43790, fix crash when no family name has been found
- #43790, fix crash when no family name has been found
ChangeLog update
fix empty directories in phar, add test
implement mkdir (compiles, not yet tested), support for empty directories in phar (not yet tested) revert last commit of efree(), it's necessary.
remove invalid free if opening a phar file in plain_map fails
update package.xml so this can be installed
split stream file handlers into stream.c and directory handlers into dirstream.c
split out zip functions
Those functions have been deprecated and removed. We'll test them only internally but not bother php.net with it. Unless you really want to have tests for deprecated and removed functionality...
MySQL 6 compatibility fix.
strncpy->strlcpy
strncpy->strlcpy
Looks more than it is. Its whitespace, adding error handling in a few places, changing SQL statement formatting etc. No "real" changes.
complete set of new tests for zip-based phars (need to test compression for zip-based phars) fix a whole bunch of zip-related bugs tar tests need some naming add phar information to error messages, fix existing tests to reflect this
ChangeLog update
add tar-based to 2 tests
eliminate potential double-free of alias major improvement of zip/tar-based phar stub execution, now __FILE__ says it is the phar, and not phar/.phar/stub.php, so that the same stub can be used for phar or tar/zip-based phars ridiculous speedup of rename() within a phar (something like 1000%) last of the tar-based phar fixes new tests for tar-based phars, fix existing tests to use new format of __FILE__
new tests
make test OS-agnostic
fp must be nulled on every write also when == phar->fp or we get stale fp and problems.  add new test that unearthed this problem
add tar-based to test names
new tests
fix segfault (now all existing tests pass
fix segfault (duh, can't free something that was not initialized)
fix extension detection for aliases with no extension
WS
fix test
fix stat of directory in tar/zip improve phar recognition of tar/zip-based phars in phar_compile_file fix segfault in Phar::webPhar() with invalid redirect add Phar->isTar()/isZip()/isPhar() to determine internal file format fix creation of tar-based phars from filename in some circumstances fix read of corrupted file contents from a tar if the tar had been opened readonly and then modified ensure directories are marked with is_dir in tar file format entries copy fp_refcount logic into phar_tar_flush() from phar_flush() fix segfault when flushing a tar with a new stub/alias
new tests for tar format
ChangeLog update
- Add .cvsignore
- MFH Show info for CL and CGI if both are going to be used
- Show info for CL and CGI if both are going to be used
eliminated memleak, now to make it recognize "dir" as a directory
fix typo in phar.c if bz2 is disabled
ChangeLog update
new test, exposes some memleaks, but not yet sure where they are (done for today)
fix segfault, add separate tar test for readonly=0 on corrupted tar
remove mung server list hash destroy, this is done in shutdown
do not attempt to create a new phar if a file exists and is corrupted or is not a phar archive, i.e. require a clean slate - a non-existent file or a valid phar archive - to muck around with phar contents add the first tar-based phar test
modify test to ensure that query string is preserved when munging server vars
complete tests for Phar::mungServer
remove potential preg warnings if --EXPECTHEADERS-- is combined with --EXPECTF-- or --EXPECTRE--
remove potential preg warnings if --EXPECTHEADERS-- is combined with --EXPECTF-- or --EXPECTRE--
remove potential preg warnings if --EXPECTHEADERS-- is combined with --EXPECTF-- or --EXPECTRE--
implement --FILE_EXTERNAL-- section for using an external file as --FILE--, use CGI for --EXPECTHEADERS--, fix --POST_RAW--
implement --FILE_EXTERNAL-- section for using an external file as --FILE--, use CGI for --EXPECTHEADERS--, fix --POST_RAW--
implement --FILE_EXTERNAL-- section for using an external file as --FILE--, use CGI for --EXPECTHEADERS--, fix --POST_RAW--
new tests, fix mime type overrides (all web front controller primary features are now tested and working for regular phar files)
new test, free resources on error in webPhar() (thanks new test\!)
new test
new test
new test
new test
beautify 404 error handler, and note missing file. throw exception if webPhar() is attempted with an extracted file, as webPhar() makes no sense on-disk
clarify test names
fix Location header for index if request has a /, 2 new tests, add index.php to frontcontroller phar
clarify test name
fix front controller tests (requires patch to run-tests.php posted to internals a little while ago) allow phars to have extension .php as last resort fix phar-based phars for MIME_OTHER type
ChangeLog update
MFH
Added:
use zip_free() instead of zip_close(), and don't add a stub if it already exists in phar_zip_flush(), update TODO
- Change 'print' to 'die' for skip notices
- Pendantic changes
New testcases for array_diff() function
New testcases for array_diff_assoc() function
New testcases for array_diff() function
New testcases for array_diff_assoc() function
New testcases for array_diff_assoc() function
New testcases for array_diff() function
fix windows build (hopefully :)
replace crappy $_SERVER munging with explicit munging via Phar::mungServer().  This static method takes an array with one of these 4 indices (case-sensitive): 'PHP_SELF', 'SCRIPT_NAME', 'SCRIPT_FILENAME', 'REQUEST_URI' and removes any reference to the actual path on the server.  This allows older apps to function unmodified inside a phar. the variables are re-registered as PHAR_PHP_SELF and company to allow access from clever script files [DOC]
Phar::webPhar() and various problems relating to shutdown in an apache process fixed
ChangeLog update
fix tar-based phars creation and loading
MFH: Remove test for deprecated (and removed) function
Remove test for deprecated (and removed) function
MFB: Skip test for PostgreSQL driver since error is too dissimilar to other drivers
MFB: Skip test for PostgreSQL driver since error is too dissimilar to other drivers
Skip test for PostgreSQL driver since error is too dissimilar to other drivers
remove unused PHP_EXTNAME_API macros. #in preparation for the gcc 4 visibility patch
MFB: remove unused PHP_EXTNAME_API macros. #in preparation for the gcc 4 visibility patch
- MFH: Remove more replication stuff
- Remove more replication stuff
Header protection
Header protection
Remove unneeded field
Remove unused field
Make it work for MySQL 6.x as well.
this testcase has been split into many smaller testcases and committed.
 new smaller testcases for array_map() function
 this testcase has been split into many smaller testcases and committed.
new smaller testcases for array_map() function
this testcase has been split into many smaller testcases and committed.
New smaller testcases for array_map() function
Adding PHPT tests for the ReflectionMethod class.
Adding PHPT tests for the ReflectionMethod class.
Adding PHPT tests for the ReflectionMethod class.
commit missing files (helps if you cvs add, don't it?) for tar implementation
initial tar support - a few kinks to work on in phar creation, but read works
ChangeLog update
ChangeLog update
MFB: Update copyright
MFB: Update copyright
Update copyright
fixed binary arithmetic (MF5.2)
- Updated to version 2007.11
- Updated to version 2007.11
- Updated to version 2007.11
MFB: Leftover: Bump copyright year.
MFB: Leftover: Bump copyright year.
Leftover: Bump copyright year.
ChangeLog update
add zip-based phar support.  not quite working is webPhar(), not sure why yet
Update copyright
Leftover: Bump copyright year.
Leftover: Bump copyright year.
Leftover: Bump copyright year.
MFH: Bump copyright year, 2 of 2.
MFH: Bump copyright year, 1 of 2.
MFH: Bump copyright year, 2 of 2.
MFH: Bump copyright year, 1 of 2.
Bump copyright year, 2 of 2.
Bump copyright year, 1 of 2.
Document the 'cxx' parameter to PHP_NEW_EXTENSION.
ChangeLog update
Test for bug 43663
ChangeLog update
MFH:- This makes no sense with non-ipv6 builds. (and fixes lot of issues with misconfigured servers)
MFH:- This makes no sense with non-ipv6 builds. (and fixes lot of issues with misconfigured servers)
- This makes no sense with non-ipv6 builds. (and fixes lot of issues with misconfigured servers)
correct fix for bug #43522
correct fix for bug #43522
apply correct fix for bug #43522 fix Unicode streams too this time
fix test
fix test
make blah.phar/ access indexfile just like blah.phar
fix redirects and s/redirects/rewrites/
MFH: Update the class method documentation links
MFH: Update the class method documentation links
Update the class method documentation links
remove FIXME - it's been fixed
fix index/custom 404 page
update proto, arginfo for webPhar
add vastly improved 404 handling
ChangeLog update
fix redirect to index file
Here comes the NEWS entry. The RM knows his job ;)
Remove RPL functions. They were always experimental and lead to crashes. The underlying functions will be removed from libmysql as of MySQL 6.0, so it's right time to remove them.
Remove RPL functions. They were always experimental and lead to crashes. The underlying functions will be removed from libmysql as of MySQL 6.0, so it's right time to remove them.
Sooner or later these old 0*.phpt tests had to bite us - fixing SQL syntax, HEAD sync will follow.
Sync from 5_3. Cutting off a few edges:  - use connection parameter from environment variables  - check if MySQL supports procedures  - whitespace
Cutting off a few edges:  - use connection parameter from environment variables  - check if MySQL supports procedures  - whitespace
Initialize operand type
Initialize operand type
ChangeLog update
MFB: fix tests
fix tests
Use proper result type
Use proper result type
Added ability to use SplArrays instead of plain arrays in ext/soap. (Joshua Reese, Dmitry)
Added ability to use SplArrays instead of plain arrays in ext/soap. (Joshua Reese, Dmitry)
Added 64-bit tests (Serg)
BFN
ChangeLog update
fix on windows
ChangeLog update
fix test : do not run when run as root
fix test : do not run when run as root
fix test : do not run when run as root
ChangeLog update
fix windows build
remove unused variable
fix mem leak
Additional fix for bug #42868
Additional fix for bug #42868
new testcases for dir() function
new testcases for dir() function
new testcases for dir() function
fix tests
fix tests
fix tests
Changing the regex for %f so the it will match e-, e+ and e.
Changing the regex for %f so the it will match e-, e+ and e.
Changing the regex for %f so the it will match e-, e+ and e.
complete re-factoring of front controller.  Now it is done with Phar->webPhar(): <?php Phar::webPhar(); __HALT_COMPILER();
new test for front controller
first attempt at major new feature: default front controller for web Currently, an entire phar entry is leaked for no obvious reason, otherwise it works.  Sample code: The phar has to be created using Phar->useFrontController(); and the stub performs actual resolution of which file to load: <?php Phar::mapPhar(); include 'phar://' . __FILE__ . '/' . substr($_SERVER['REQUEST_URI'], strlen(basename(__FILE__))); __HALT_COMPILER(); ?>
ChangeLog update
same fix we used in linux to make all extension deps optional
on second thought, hooking into getcwd() is a bad idea, who uses this for code loading, anyways?
ChangeLog update
implement cleaning of crap paths - major functionality boost
fix tests
fix tests
fix tests
x86_64 assembler optimization (Brain Shire)
x86_64 assembler optimization (Brain Shire)
x86_64 assembler optimization (Brain Shire)
New test - Indexing - various special cases
New test - Indexing - various special cases
New test - Indexing - various special cases
new tests for array_map usage variations - string keys and references
new tests for array_map usage variations - string keys and references
new tests for array_map usage variations - string keys and references
remove minor (and unnecessary I might add) windows compile warnings
ChangeLog update
fix test
fix test
fix test
holy cow - include/fopen/cwd magic fully working on unix now for windows testing
making progress (include magic works)
ChangeLog update
Adding PHPT tests for the ReflectionProperty class. reflectionProperty_getValue_error.phpt and reflectionProperty_setValue_error.phpt are failing with behaviour that is inconsistent with PHP5_3.
Adding PHPT tests for the ReflectionProperty class.
Adding PHPT tests for the ReflectionProperty class.
[unfinished] magically handle getcwd() and fopen() with include_path inside phar this work is incomplete, but compiles and existing tests pass
oops, need to make these things optional, not required
ChangeLog update
Kill unused vars
fix tests
fix tests
MFB5.3: - Allow to specify php executable on commandline MFB5.3: - Allow to check the out,exp and diff results on console while executing the tests
MFH (json.c r-1.32) Add support for encoding options
Add support for encoding options
Add scoping braces for variable declaration
ChangeLog update
WS
fully implement Phar->copy(), fix test
ChangeLog update
add failing test
Phar::copy() [not yet working]
fix test
fix test
ChangeLog update
- MFB: Bug #41528 - Added possibility to serialize and unserialize classes that extend to ArrayObject - See ext/spl/tests/array_023.phpt and ext/spl/tests/bug41528.php for references - Put a folding for all SPL_ARRAY_METHOD() def
Phar->buildFromIterator now can also accept a stream handle as a value in addition to a file path (string) or SplFileInfo object [DOC]
fix test
fix alias overloading detection on windows
fix test
fix terrible logic discovered in windows testing (not sure how it ever worked on unix)
New testcases for token_get_all() function
New testcases for token_get_all() function
New testcases for token_get_all() function
MFB: Change createFromTimestamp to setTimestamp
Change createFromTimestamp to setTimestamp
MFH: Add Datetime::createFromTimestamp to allow setting of a unix timestamp without invoking the date parser.
- Add Datetime::createFromTimestamp to allow setting of a unix timestamp without invoking the date parser.
executor optimization
executor optimization
windows fixes #2 (thanks Steph you rule)
windows fixes (thanks Steph you rule)
fix test
remove stupid*$(# debug code
- Added other test with some unicode words (Sorry if this chinese word   turns out to be offensive I have no clue what it means, just copied it)
better fix, revert unintentional commit to Makefile.frag
fix build on windows, fix segfault in tsrm by uninitialized pointer
ChangeLog update
update todo
MFH
MFH: add workaround for glibc issue
add workaround for glibc issue
add tests for ldap_dn2ufn()
add tests for ldap_dn2ufn()
add tests for ldap_dn2ufn()
expand ldap_explode_dn() tests.
expand ldap_explode_dn() tests.
expand ldap_explode_dn() tests.
MFH: add new tests written by Felipe Pena
add new tests written by Felipe Pena
Allowed import of global classes "use ::GlobalClassName;" (Gregory)
Allowed import of global classes "use ::GlobalClassName;"
Allowed multiple namespaces per file (Gregory)
Allowed multiple namespaces per file (Gregory)
new test now, SplDirectoryIterator can be used directly with Phar->buildFromIterator() in order to populate the files in a phar archive.  When combined with a RegexIterator and other filters, it becomes very easy to create a phar archive with 1 line of code [DOC]
ChangeLog update
new test
code re-organize to make it more logical
new test
fix test, new test
Phar->buildFromIterator: fix another mem leak, fix test
kill 1 memleak
Phar->buildFromIterator: use spl_iterator_apply(), add 4 tests (mem leaks not yet fixed in the 4th)
MFH: add valgrind 3.3.0 support
implement Phar::buildFromIterator() first argument is an iterator that returns as values paths to files to add to the phar archive the key should be the path that the file should be saved as within the phar archive if the optional second parameter is passed, then the key is ignored and substr(value, strlen(base_directory)) is used as the save path within the phar archive [DOC]
MFH: add support for Valgrind 3.3.0 (which doesn't have --log-file-exactly option)
add support for Valgrind 3.3.0 (which doesn't have --log-file-exactly option)
- Nitpicking, using same code (without unicode handling) than in HEAD   just removed useless } else {
ChangeLog update
- Unit test for bug #41528 - Checking that when you serialize a class that extends to ArrayObject   Is keeping it's properties.
use thread-safe global var to store zend_compile_file, and restore the current zend_compile_file, not the one we found in MINIT
use stream_copy_to_stream again, figured out how to make the stupid filters work
fix test in 5.3+
WS
add skipif case if the ldap extension is not loaded
add skipif case if the ldap extension is not loaded
put ldap_explode_dn.phpt in proper directory
add skipif case if the ldap extension is not loaded
put ldap_explode_dn.phpt in proper directory
Adding initial tests for LDAP module. Adding tests for ldap_explode_dn() function
Adding initial tests for LDAP module. Adding tests for ldap_explode_dn() function
Adding initial tests for LDAP module. Adding tests for ldap_explode_dn() function
MFH:- Revert previous patch, it was correct to do this, error is logged if logging is enabled
MFH:- Revert previous patch, it was correct to do this, error is logged if logging is enabled
- Revert previous patch, it was correct to do this, error is logged if logging is enabled
MFH: fix error displaying
MFH: fix error displaying
New testcases for array_walk() function
New testcases for array_walk_recursive() function
New testcases for array_walk() function
New testcases for array_walk_recursive() function
delete because there are two smaller testcases for this
New testcases for array_walk() function
New testcases for array_merge_recursive() function
New testcases for array_merge_recursive() function
New testcases for array_merge_recursive() function
MFB: sync version macro check
Sync with 5.2
add note about new include functionality
ChangeLog update
ChangeLog update
add the ability to automatically resolve includes inside a phar to files within that phar, so no code modification is needed to include/require
new testcases for array_unique() function
new testcases for array_unique() function
new testcases for array_unique() function
ChangeLog update
ChangeLog update
fix win build
ChangeLog update
MFB: WS
WS
-MFH: db 4.6 detection
- MFB: DB 4.6 detection
- More about 4.6
 Add db 4.6 to detect list
ChangeLog update
- - Allow to check the out,exp and diff results on console while executing the tests
- Allow to specify php executable on commandline
ChangeLog update
MFH: starting with 2.6.30, standard libxml2 build can be used
starting with 2.6.30, standard libxml2 build can be used
MFB: fixed test
MFB: fixed test
MFH: detect IBM iconv implementation and use correct encoding names
detect IBM iconv implementation and use correct encoding names
MFH
MFH
fix folding
ChangeLog update
fix typos use the earliest bug report in the description
bug numbers
- Updated to version 2007.10
- Updated to version 2007.10
- Updated to version 2007.10
fix tests : better float values
fix tests : better float values
fix tests : better float values
New testcases for array_pad() function
fix tests: better float values
fix tests: better float values
fix tests: better float values
New testcases for array_pad() function
New testcases for array_pad() function
The -f option is fixed to work in the same way as in CLI sapi
The -f option is fixed to work in the same way as in CLI sapi
New testcases for array_chunk() function
New testcases for array_chunk() function
New testcases for array_chunk() function
ChangeLog update
ChangeLog update
ChangeLog update
MFH: fix folding
fix folding, move protos to the top of the sources
ChangeLog update
fix build
ChangeLog update
BFN
Marked with defect
Marked with defect
Marked with defect
ChangeLog update
docbook based spec docs
test commit mail
This commit was generated by cvs2svn to compensate for changes in r247182, which included commits to RCS files with non-trunk default branches.
New testcases for array_combine() function
New testcases for array_combine() function
New testcases for array_combine() function
New testcases for array_sum() function
New testcases for array_sum() function
New testcases for array_sum() function
fix test
fix test
fix test
fix test
ChangeLog update
MFB: Revert addition of - char support for bound param names
MFB: Revert addition of - char support for bound param names
Revert addition of - char support for bound param names
MFH: No zval is stored here
- No zval is stored here
ChangeLog update
add helper phars for test
new test to verify signature algo parsing works
new test for dir iteration (covers some code missing in gcov tests)
fix errors found in delMetaData(), add get/delMetaData() to MetaData read test
new test for Phar::getModified()
new test for no signature
fix test expected output
MFB fix to test
add new tests for Phar::getSupportedCompression
ChangeLog update
- MFH
- fixed unexpected emphasis in reST parsing due to use of *
- 5.2 is only for bug fixes - emphasis should be made with enclosing with ** and not with _
preliminary work on using gnupg to verify/create signatures - no implementation, just phpinfo() output and build rules
WS (spaces instead of tabs)
experimental support for optional bz2 extension - should make windows users a whole lot happier (forgot w32)
experimental support for optional bz2 extension - should make windows users a whole lot happier
ChangeLog update
fix proto
- Improve make pharcmd - Add -b to pack and stub-set commands of phar.phar
- WS
# My editor somehow likes to convert to UTF-8
# My editor somehow likes to convert to UTF-8
- Add another LSB test
- Add another LSB test
*** empty log message ***
MFB fixes to phar.phar
ChangeLog update
- MFH
- adapted to reST format - added 5_3 branch - added note about getting confirmation from RM on significant changes
Speed-up of ZEND_DO_FCALL and ZEND_INIT_FCALL_BY_NAME by lowercasing and calculating hash values at compile time.
Speed-up of ZEND_DO_FCALL and ZEND_INIT_FCALL_BY_NAME by lowercasing and calculating hash values at compile time.
- port from todo wiki to reST (http://wiki.pooteeweet.org/ReleaseChecklist)
- port from todo wiki to reST (http://wiki.pooteeweet.org/ReleaseChecklist)
MFB fixes for tests
ChangeLog update
Add some more pcre tests
Add some more pcre tests
Add some more pcre tests
Macro definitions are moved to zend.h
Macro definitions are moved to zend.h
Safe exit from executor()
Safe exit from executor()
MFH: chown bug test
- Added test for chown bug
MFH: fix crash bug in chown when 2nd parameter != string or int
MFH: - Add support for optional values MFH: - Add support for = as seperator
- MFH Improved version of ternary shortcut (Marcus)
- Improve test
Missing bla...credit :)
fix #42866, from Claudio Cherubino
test for 42866
ChangeLog update
- MFH ?: operator (Marcus)   [DOC] "expr1 ?: expr1" is a shortcut for: "expr1 ? expr1 : expr2" as         exists in gcc and discussed some time back. Note that this is not         an implementation ifsetor($var, default). While ifsetor would not         generate any message for non existing variables or array indices         the ternary shortcut does. Also the ternary shortcut does a boolean         evaluation rather then checking for isset(). That way ther ternary         shortcut can work on any expression while ifsetor can only work on         variables. Also to be silent one has do do: "@$expr1 ?: $expr2".
- Add test
revert previous pdo patch
MFB: Adjusted fix for bug #42978
Adjusted fix for bug #42978
- Add support for optional values - Add support for = as seperator
MFH: Add stream_supports_lock() function (Benjamin Schulz)
Add stream_supports_lock() function (Benjamin Schulz)
Win32 still fails to build ...
MFH: Add msg_queue_exists() function (Benjamin Schulz) [DOC]
Add msg_queue_exists() function (Benjamin Schulz)
Win32 fails to build
dead code
MFH: add ZEND_DEBUG_BUILD constant
- Added ZEND_DEBUG_BUILD constant
- Add phar.phar to package
Optimization of zend_do_fcall_common_helper()
Optimization of zend_do_fcall_common_helper()
MFH: math and comparison optimization + use macroses
math and comparison optimization
ZEND_FETCH_DIM optimization
ZEND_FETCH_DIM optimization
Added support for "namespace::" prefix that is resolved to current namespace name.
Added support for "namespace::" prefix that is resolved to current namespace name.
fix faulty logic on verification of phar
ChangeLog update
much better fix for the problem of phar://c:\path\to\blah.phar
fixed SIGSEGV in chgrp()
MFB 'L' size support
fix test
fix test
fix test broken by Sara's commit
ChangeLog update
- MFH: Initialize the reserved resource bits so that they can be reliably used.
- MFH: Initialize the reserved resource bits so that they can be reliably used.
- Initialize the reserved resource bits so that they can be reliably used.
Removed duplicate case. (Thanks Hannes)
ChangeLog update
MFH(r-1.192) Remove extraneous space in error/notice messages (felipe)
MFH(r-1.192) Remove extraneous space in error/notice messages (felipe)
Remove extraneous space in error/notice messages (felipe)
make phar use this build's PHP instead of global PHP [gopal]
ChangeLog update
New testcases for sizeof() function
New testcases for sizeof() function
New testcases for sizeof() function
fix test for linux64 - choosing smaller float values
fix tests: removed values that generate diff. output on Linux64
fix tests: removed values that generate diff. output on Linux64
fix tests: removed values that generate diff. output on Linux64
fix bug number
- fix bug number
ignore gcov files
ignore gcov files
typo
ChangeLog update
MFH: fix test
MFH: fix test
fix test (thanks to Felipe Pena for noticing)
Completed fix for bug #42739 (fixes bug #43276)
MFH test
MFH: Allow numeric options & tests
- Allow numeric options - Add tests
Ensure that the same phar can be referenced in multiple logical ways:
ChangeLog update
MFB: Don't show file names being examined
Don't show file names being examined
# Also nulling cursor_open when closing a named cursor
MFH
update pdo_firebird status
- Clearing cursor-name when closing it.
MFB
MFB
Allow passing additional configuration parameters to config.nice.bat
New testcases for uasort() function
New testcases for uasort() function
New testcases for uasort() function
fix test for linux64 - choosing smaller float values
fix test for linux64 - choosing smaller float values
- MFH: Add a testcase for chgrp() with a NULL as group name, which crashes ATM.
- Add a testcase for chgrp() with a NULL as group name, which crashes ATM.
fix test
- MFH: pass parameters to buildconf.bat over to buildconf.js (#43281)
- pass parameters to buildconf.bat over to buildconf.js (#43281) [DOC] install.windows.building.php currently reads like "e.g. cscript /nologo   win32/build/buildconf.js --add-modules-dir=../php-gtk2 [...]"  that   might be changed to "buildconf.bat --add-modules-dir=../php-gtk2 [...]"
ChangeLog update
MFH: fix typos
MFH: disallow multiple access modifiers and 'abstract abstract' methods (patch by Etienne Kneuss) add tests
disallow multiple access modifiers and 'abstract abstract' methods add tests
MFH: remove Oracle8 support
remove Oracle8 support (it should have been done long ago..)
fix typo
fix typo (nice catch, Nuno!)
begin win32 fixes for Phar object - still have a problem I can't track down yet, but it's only a matter of time before it is killed too
ChangeLog update
MFH: Changing the regex for %f so the it will match E-, E+ and E.
BFN
MFH: fix bug #43221 (SimpleXML adding default namespace in addAttribute) add test
MFH: fix bug #43221 (SimpleXML adding default namespace in addAttribute) add test
fix bug #43221 (SimpleXML adding default namespace in addAttribute) add test
MFH: Changing the regex for %f so the it will match E-, E+ and E.
Changing the regex for %f so the it will match E-, E+ and E.
better error messages
better error messages
MFH: fix error message (reported by Felipe Nascimento)
MFH: fix error message (reported by Felipe Nascimento)
fix error message (reported by Felipe Nascimento)
New testcases for ksort() function
New testcases for krsort() function
New testcases for ksort() function
New testcases for krsort() function
New testcases for ksort() function
new testcases for krsort() function
MFH: fix #42736 (xmlrpc_server_call_method() crashes)
MFH: fix #42736 (xmlrpc_server_call_method() crashes)
fix #42736 (xmlrpc_server_call_method() crashes)
ChangeLog update
- MFH typo fix by Jon
- MFH: static can't be used as type hint, fixes #43126 (Etienne Kneuss)
- static can't be used as type hint, fixes #43126 (Etienne Kneuss)
s/Ident/Indent
- MFH
- migrate syntax to rEST to allow html/docbook rendering
ChangeLog update
- Use #if instead of #ifdef there (by Mikko Koppanen)
ChangeLog update
MFH:- Added support for [HOST=www.example.com] special sections MFH:- Allowed using full path to load modules using "extension" directive
- Allow using full path to load modules using "extension" directive
- Added support for [HOST=www.example.com] sections # Works the same way as PATH, just the SERVER_NAME is matched with these
MFH: ws + cs + sync
ws + cs
new test
fix tests
fix tests
fix tests
- That line got lost while merging around...
Conditions optimization
- MFH: Allow persistent zent_ptr_stacks (patch by Andrey Hristov)
- Allow persistent zent_ptr_stacks (patch by Andrey Hristov)
fix test: better float values
fix test : better float values
fix test : better float values
fix tests: better float values
fix tests: better float values
fix tests: better float values
missing testcases - sprintf() function
ChangeLog update
- ibase_query.c bugfixes
[DOC] prototype for ibase_query() should be changed to: PHP4:   resource ibase_query ( [resource $link_identifier,] string $query [, mixed $bind_arg [, ...]] ) PHP5:   resource ibase_query ( [resource $link_identifier,] [resource $transaction_identifier,] string $query [, mixed $bind_arg [, ...]] )
Back to dev
5.2.5
MFH
fix open tag
MFH: plug leak on invalid result type
plug memory leak on invalid result type
fix test
MFH
MFH
fix test
fix tests
fix tests
fix tests
fix test
fix test
fix test
MFH: fix test
this error message may vary
MFH: fix test
MFH: fix test
fix test
add missing 64bit version of the test
fix test
MFH
MFH
fix tests
ChangeLog update
add glob wrapper
fix tests
fix tests
fix tests
T_IMPORT nuked
T_IMPORT -> T_USE
T_IMPORT -> T_USE
MFH
ChangeLog update
MFH: ws + cs
Ws + cs + missing fix for MOPB-33-2007:PHP mail() Message ASCIIZ Byte Truncation
MFH: sync
- MFB Add tests
- fix more variable stuff
- fix tests
- Add hash bang line
fix tests
fix: #2
try #2
MFH: sync
fix cleanup
fix cleanup
MFH: fix tests, add 64bit versions
fix tests, add 64bit versions
fix NEWS
- MFH Add glob stream wrapper [DOC] The glob stream wrapper allows stuff like this: php -r '$it = new DirectoryIterator("glob://ext/spl/*.c");         foreach($it as $f) var_dump($f);'
- nuke extra UEXPECTF
- MFH glob stream wrapper (part 1)
ws + cs
MFH streams stuff
MFH: fix non ipv6 enabled win build
MFH: ws + folding tags
ws
fix non ipv6 enabled win build
- MFB ws
MFH
- ws + cs
MFH: partial MFH before?
T_IMPORT is gone
MFH
- Clarify the difference with * and + args
add news
- Move some entries to 5.3
Allow user defined malloc/realloc/free
T_IMPORT -> T_USE
Allow user defined malloc/realloc/free
ChangeLog update
MFH: Sync [DOC]: note [DOC] -/* {{{ proto bool copy(string source_file, string destination_file) [DOC] +/* {{{ proto bool copy(string source_file, string destination_file [, resource context]) [DOC] [DOC] Apparently this was undocumented so far anyway..
MFH: sync
New testcases for asort() function
New testcases for asort() function
New testcases for asort() function
ws
better test title
fix typo in title
ws
ws + cs + sync some fixes from PHP_5_3 branch
New testcases for sort() function
New testcases for sort() function
ws + cs
New testcases for sort() function
New testcases for array_intersect_assoc() function
New testcases for array_intersect_assoc() function
MFH: sync
ws + cs + missing PHPAPIs
New testcases for array_intersect_assoc() function
MFH: Sync
nuke compile warning
ws
MFH
- ws
MFH
ws + cs
ws + cs
- fix oumlaut :)
update credits
Update credits
MFH
ws + cs
MFH
- ws + cs + nuke a warning
MFH: ws + cs + folding tags
ws + cs
- Updated to version 2007.9
- Updated to version 2007.9
- Updated to version 2007.9
ChangeLog update
-MFB, Right filename
-MFB, Right filename
- Right filename
MFH: http/ignore_errors context option
Allow http fopen wrapper to fetch content on 'error' condition (David Zulke)
PDO_Firebird bugfixes
ChangeLog update
- Add missing tests from HEAD
- MFH from HEAD:   . Folding tags   . Parameter parsing   . SPL debug info   . array function improvements (not all yet)   . Improvements to function calling with call_user_* functions   . Improvements to debugging info in var_dump/print_r # I propably forgot already something but this all was pretty close tied # to each other so it wasn't possible to do it in parts.
fix bug37251.phpt failure (two error messages instead of one) should I merge this to 5_2?
- Missing test. (NOTE: Fails due to unexpected double output for me, OKOK)
fix build (temp fix pending Andrey's review)
- WS + CS and namespace protection
- WS + CS + use Z macros where possible
- nuke extra s
fix test
fix typo and silence compile warning
ws + cs
Reimplemented support for namespaces in indexes id constant arrays (removed zval.idx_type)
Reimplemented support for namespaces in indexes id constant arrays (removed zval.idx_type)
more ws
ws
ws + cs + missing folding tags
fix tests: proper temp file names
fix tests: proper temp file names
fix tests: proper temp file names
fix tests: proper temp file names
fix tests: proper temp file names
fix tests: proper temp file names
fix tests: better float values
fix tests: better float values
ChangeLog update
ws + cs + fix test
back to dev
5.2.5RC2
- CPP macros are supposed to start at column 1 (# at least)
fix news
add gmp_testbit()
add gmp fixes
MFB gmp fixes
fix 64-bit
MFH: initialize correct variable
MFH: initialize correct variable
initialize correct variable
add tests for testbit, sync with HEAD
fix gcd - can return larger than long with long arg
add testbit()
generalize resource names
merge gmp_testbit()
MFH: nuke unused variables
MFH: nuke unused variables
- Nuke unused variables
- MFH missing get_debug_info piece
Another fix for bug #42773
Another fix for bug #42773
Another fix for bug #42773
ws + cs
MF53: fix tests
cs + ws
fix tests
fix test
use slprintf()
delete .project file
delete .project file
fix reading uninitialized values
- Nuke crap
fix 64bit issues & tests
update min_error and max_error testcases to take into account bug fix for bug#43125
update min_error and max_error testcases to take into account bug fix for bug#43125
update min_error and max_error testcases to take into account bug fix for bug#43125
ChangeLog update
Added CGI SAPI -T option, to measure execution time of script repeated several times.
MFH: fix typo
MFH: fix typo
ChangeLog update
MFB: Test not relavent for sqlite that uses built-in bound syntax
MFB: Test not relavent for sqlite that uses built-in bound syntax
Test not relavent for sqlite that uses built-in bound syntax
[DOC] Added 3 firebird specific attributes that can be set via PDO::setAttribute() to control formatting of date/timestamp columns: PDO::FB_ATTR_DATE_FORMAT, PDO::FB_ATTR_TIME_FORMAT and PDO::FB_ATTR_TIMESTAMP_FORMAT.  These attributes are strftime format strings, and operate in the same way as the ibase.dateformat, ibase.timeformat and ibase.timestampformat ini options. (related to bug #36128, Interbase PDO)
- Added default timestamp format definitions (ISO 8601) (related to bug #36128, Interbase PDO)
[DOC] Added 3 firebird specific attributes that can be set via PDO::setAttribute() to control formatting of date/timestamp columns: PDO::FB_ATTR_DATE_FORMAT, PDO::FB_ATTR_TIME_FORMAT and PDO::FB_ATTR_TIMESTAMP_FORMAT.  These attributes are strftime format strings, and operate in the same way as the ibase.dateformat, ibase.timeformat and ibase.timestampformat ini options. (related to bug #36128, Interbase PDO)
- Added default timestamp format definitions (ISO 8601) (related to bug #36128, Interbase PDO)
backport zero args checks from HEAD (fixes error message when passing parameters to a function accepting none)
Use heap-allocated return value
Use heap-allocated return value
ChangeLog update
Note addition of +/* specifiers
Backport +/* vararg specifiers from PHP6
optimization
optimization
MFH
MFH: fix test
fix test
ChangeLog update
ChangeLog update
New testcases for shuffle() function
New testcases for shuffle() function
New testcases for shuffle() function
New testcases for array_intersect() function
New testcases for array_intersect() function
New testcases for array_intersect() function
ChangeLog update
add attribution
Remove unneeded INI sections
Remove unneeded INI sections
Remove unneeded INI sections
more testcases for array_unshift() function
more testcases for array_unshift() function
more testcases for array_unshift() function
new testcases for array_splice
new testcases for array_splice
new testcases for array_splice
new testcases for max and min
new testcases for max and min
new testcases for max and min
fix news
Added check for HAVE_GETTIMEOFDAY
Added check for HAVE_GETTIMEOFDAY
ChangeLog update
MFH
MFH
that endElement() call was required
MFH
MFH
fix test
MFH: ws
ws
Added ability to control memory consumption between request using ZEND_MM_COMPACT environment variable
Added ability to control memory consumption between request using ZEND_MM_COMPACT environment variable
Added ability to control memory consumption between request using ZEND_MM_COMPACT environment variable
Added CGI SAPI -T option, to measure execution time of script repeated several times.
Added CGI SAPI -T option, to measure execution time of script repeated several times.
ChangeLog update
ChangeLog update
-MFB, Be paranoid and dont allow multiplication with zero
-MFB, Be paranoid and dont allow multiplication with zero
- Be paranoid and dont allow multiplication with zero
ChangeLog update
more testcases for array_filter() function
more testcases for array_filter() function
more testcase for array_filter() function
Make it compile with libmysql 3.23
forgotten description
ChangeLog update
ChangeLog update
New testcases for array_rand() function
ChangeLog update
New testcases for array_rand() function
New tetscases for array_rand() function
New testcases for array_fill() function
New testcases for array_fill() function
New testcases for array_fill() function
New testcases for array_filter() function
New testcases for array_filter() function
New testcases for array_filter() function
New testcases for array_unshift() function
New testcases for array_unshift() function
New testcases for array_unshift() function
formatting
ChangeLog update
News for getcwd() failure fix.
Back to dev
5.2.5RC1
ws
fix TSRM, a couple of compile warnings on windows, and test
- BFN
- Missing piece
- Commit new tests to correct brnach (funny broken checkout)
- MFB #42654, #42704
- MFB #42654, #42704
ChangeLog update
- There's no need to mention these bugs, they all belong to "Added namespaces"
commit lost part of the patch
MFH
..and correct macro
MFH: use correct dtro and variable for the callback
use correct dtor and variable for the callback
ChangeLog update
Sync mysqlnd with HEAD. Same sources as in 5_3
Sync mysqlnd. Should still compile with 5_2 for those who want to use the current stable branch. mysqli from 5_3 patched for mysqlnd should be also compilable with 5_2.
avoid double free and use zval_dtor() where neccessary
avoid double free and use zval_dtor() where neccessary
use zval_dtor() instead of efree() + FREE_ZVAL()
MFB5_3 : Shadowing of params bring undefined results.
ChangeLog update
New testcases for array_flip() function
New testcases for array_flip() function
New testcases for array_flip() function
New testcases for array_reverse() function
New testcases for array_reverse() function
New testcases for array_reverse() function
ChangeLog update
ChangeLog update
BFN [DOC] Note: getimagesize() needs a note about icon support and that information is about the icon with the highest bitrate.
MFB: Added icon file format support to getimagesize
Added icon file format support to getimagesize
MFH: Add skipif
Add skipif
MFH: fix typo and remove dots in error message
ChangeLog update
Same as for HEAD: make it skip and not fail if it can't connect to DB
Now HEAD should be fine: skip test (by default), if DB connect fails.
Same as for PHP_5_3: Trying to skip tests if they can't connect to the DB server. Note the environment variable MYSQL_TEST_SKIP_CONNECT_FAILURE to control if you want tests that can't connect to fail or to be skipped.
Same as for HEAD: Trying to skip tests if they can't connect to the DB server. Note the environment variable MYSQL_TEST_SKIP_CONNECT_FAILURE to control if you want tests that can't connect to fail or to be skipped.
Trying to skip tests if they can't connect to the DB server. Currently they have failed by default. Note also the environment variable MYSQL_TEST_SKIP_CONNECT_FAILURE to control the default (skip or fail)
Trying to make them not fail but skip if they cannot connect to the DB.
MFH (and build fix)
fix typo
ChangeLog update
- Updated to version 2007.8
- Updated to version 2007.8
- Updated to version 2007.8
fix test (temp. file name)
fix test (temp. file name)
fix test (temp. file name)
MFB53
- fix typo
MF53
fix test
ChangeLog update
- MFH debug object helper
MFB
MFB and unify code
Version specific EXPECF sections would be wonderful (bug31668.phpt). And sometimes it helps to read the commit messages to keep tests up to date: we removed mysqli_set_local_infile_handler() from mysqlnd (061.phpt) some time ago.
MFH
ret is still int
MFH
- Use correct definition
Test changes for HEAD = synching with 5_3
Adding tests to ext/mysql in HEAD = synching with 5_3
Should be the last commit for HEAD. Now HEAD and 5_3 should have the latest set of ext/mysqli tests. On Linux 32bit we've about 10 tests failing. Before the commit we had about 20 tests failing with HEAD.
More changes = synching HEAD with 5_3
Commiting changes into HEAD = synching with 5_3
More updates to the ext/mysqli tests in HEAD = synching with 5_3
Adding new tests = making sure we're in sync with the 5_3 branch
Last bunch of new tests.
Adding new tests: mysqli_s*.phpt
Adding new tests: mysqli_q*.phpt mysqli_r*.phpt
Adding new tests: mysqli_m*.phpt mysqli_n*.phpt mysqli_o*.phpt mysqli_p*.phpt
Adding new tests: mysqli_g*.phpt mysqli_i*.phpt mysqli_k*.phpt
Adding new tests  mysqli_d*.phpt mysqli_e*.phpt mysqli_f*.phpt
Adding new tests. Again, I'll commit in chunks and try to find acceptable commit sizes.
Test code for bug #42378
Further changes to regression/bug-verification tests.
Last set of changes to the classical 0*.phpt - 06*.phpt/07*.phpt
Changes to 04*.phpt, 05*.phpt.
Changes to 02*.phpt, 03*.phpt
Changes to all 01*.phpt tests
Changes to existing tests: 0*.phpt
Starting to merge updated set of tests into 5.3.
And the last set of new tests for ext/mysql. "new" does not really mean new. We've checked them into HEAD/PHP6 before already.
Second last set of new tests for ext/mysql
Next set of new tests - more to follow. Trying to find reasonable commit size...
Adding new tests.
New tests use more helper files.
Starting to merge the latest set of tests from the mysqlnd development tree into the PHP 5_3 tree.
- Generated with more recent re2c version
- Generated with more recent re2c version
- Generated with a bit more recent re2c version
ChangeLog update
MFH: Add constant to allow setting of character set with mysqli_options prior to connection.
New testcases for strip_tags() function
New testcases for strip_tags() function
New testcases for strip_tags() function
fix test
fix tests
fix tests
added unicode output
fix tests
fix tests
fix tests
MFH: ws + cs
MFH: ws + cs
ws + cs
fix tests
fix tests
fix tests
more tests for fseek(), ftell() & rewind() for win32
more tests for fseek(), ftell() & rewind() for win32
fix tests
fix tests
fix tests
ChangeLog update
News entry
add iODBC support to pdo_odbc
Move non-public code to non-public header file. This should also solve #42890 "Constant "LIST" defined by mysqlclient and c-client"
fix test
fix test
fix test
fix test
MFB: Move declarations from the public header file.
Move declarations from the public header file.
fix tests
fix tests
New testcases for strtr() function
New testcases for get_html_translation_table() function
New testcases for strtr() function
New testcases for get_html_translation_table() function
New testcases for strtr() function
New testcases for get_html_translation_table() function
fix tests
fix test
fix test
MFH: stmt->fetch.func.values is not a zval and should not be freed with FREE_ZVAL
stmt->fetch.func.values is not a zval and should not be freed with FREE_ZVAL
ChangeLog update
add test for bug #42737. HEAD didnt have this bug, as it uses a smarter way to iterate over utf-8 chars
silence the warning
fix typos
MFB: fix ZTS build
now fix the thread-safe build.. #sorry for the noise, but I didnt commit patches to PHP for a long time..
MFB
fix the previous patch: the rc var doesnt need to be passed to the make_subpats_table()
MFB: fix #37911
BFN: #37911
fix bug #37911:  preg_replace_callback ignores named groups
upgrade pcre to version 7.4
one more fix
fix build
MFH: Added macros for managing zval refcounts and is_ref statuses
Added macros for managing zval refcounts and is_ref statuses
ChangeLog update
MFH: fix ws & folding
MFH: fix ws & folding, nuke unused vars
fix ws & folding, nuke unused vars
fix ws and avoid freeing integer vars
MFH:- Add support for LDAP_X_OPT_CONNECT_TIMEOUT (Netscape LDAP SDK equivalent for LDAP_OPT_NETWORK_TIMEOUT)
- Add support for LDAP_X_OPT_CONNECT_TIMEOUT (Netscape LDAP SDK equivalent for LDAP_OPT_NETWORK_TIMEOUT)
BFN [DOC] Note: ldap_[get|set]_option() manual pages needs an entry for [DOC] LDAP_OPT_NETWORK_TIMEOUT
MFH: - Added LDAP_OPT_NETWORK_TIMEOUT option for ldap_set_option() to allow setting network timeout (FR#42837)
- Added LDAP_OPT_NETWORK_TIMEOUT option for ldap_set_option() to allow setting network timeout
ChangeLog update
Import mysqlnd Patch ext/mysql and ext/mysqli to support mysqlnd
New testcases for setlocale() function
New testcases for setlocale() function
New testcases for setlocale() function
New testcases for nl2br() function
New testcases for nl2br() function
New testcases for nl2br() function
New testcases for strrpos() function
New testcases for strrpos() function
New testcases for strrpos() function
New testcases for str_split() function
New testcases for str_split() function
New testcases for str_split() function
New testcases for vsprintf() function
New testcases for vsprintf() function
New testcases for vsprintf() function
MFH: fix win build
fix win build
MFB:-r1.139.2.2 Export symbols that will allow building WDDX as shared object
MFH:- Moved the old regex functions to own extension: ereg
MFH: fix test
MFH: fix test
fix test
allow lcov 1.6
MFB: allow lcov 1.6
lcov 1.6 also works correctly
- Sync with configure.in from HEAD (the CGI stuff is as ini options nowadays)
WS fix. Space instead of tab.
WS/Indent fix.
WS/Indent fix
ChangeLog update
BFN
Generated files that are part of the previous patch
MFH: Removed ending dots from error messages
Try to fix the windows build of mysqlnd
fix Bug #12124: Phar object cannot be iterated over remove unused variables fix jit file open sprintf calls
fix phar to work with PHP 5.3
ChangeLog update
MFH: fix CURLOPT_TIMEOUT_MS support
MFH: fix CURLOPT_TIMEOUT_MS support
- fix CURLOPT_TIMEOUT_MS support (available since 7.16.2)
remove \u, \U and \C support in single quotes, as they are meant to contain binary data only and no escape sequences except \' fixes bug #42746
MFH:- Removed the %destructor declaration (requires bison 1.875 or above)
- Removed the %destructor declaration (requires bison 1.875 or above)
MFH: Add an escape parameter to fgetcsv to satisfy rfc4180 and bug #40501. [DOC] 5th parameter available since PHP 5.3+
- Add an escape parameter to fgetcsv to satisfy rfc4180 and bug #40501.
ws
ws
MFB unicode test
MFB do not accept partial multibyte sequences in html* functions
MFB utf test
MFB do not accept partial multibyte sequences in html* functions
add html* utf fix
add test with invalid sequences
do not accept partial multibyte sequences in html* functions
ChangeLog update
ucnv_toUnicode() in ICU 3.8 requires target buffer size to be even, otherwise it bails out with U_ILLEGAL_ARGUMENT_ERROR this commit fixes endless loop (due to the absence of error catching) and also fixes the cause of the error
- Use non-unicode input method (other one crashes for some reason in ZTS mode)
fix tests
make strcspn() behave the same way in both Unicode and native mode (bug #42731)
fix test
Update mysqlnd in HEAD Updated ext/mysql and ext/mysqli in HEAD
- There really is no point in mentioned fixed bugs in something that has never been in any release..
fix news (stuff added in 5.3 wont be needed to mentioned here)
MF5_2: improved recursion detection in array_walk() fixes #42752, though the leaks are still there
MF5_2: improved recursion detection in array_walk() fixes #42752, though the leaks are still there
improved recursion detection in array_walk() fixes #42752, though the leaks are still there
- Added xsl->setProfiling() for profiling stylesheets. (MFB)
- Added xsl->setProfiling() for profiling stylesheets.
ChangeLog update
- pass the adress not the value
MFB: Added test for bug #42785
MFB: Added test for bug #42785
Added test for bug #42785
MFB: Refactor code to make fixes for coverity issues #385 and #386 a bit more obvious
MFB: Refactor code to make fixes for coverity issues #385 and #386 a bit more obvious
Refactor code to make fixes for coverity issues #385 and #386 a bit more obvious
MFB: fix test
MFB: fix bug #42142 and cs+ws
- ws + cs + sync HEAD
MFH:- Added common getopt implementation to core. MFH:- Added long-option feature to getopt(). MFH:- Made getopt() available on win32 systems. MFH:  Patch by: David Soria Parra <dsp@php.net> [DOC]: These changes will be available from 5.3+
MFH: sync (adds php_prefix_varname() API function)
- Added common getopt implementation to core. - Added long-option feature to getopt(). - Made getopt() available on win32 systems. Patch by: David Soria Parra <dsp@php.net> [DOC]: These changes will be available from 5.3+
- Added unicode result
Late Static Binding make no sense in compile-time constants.
Late Static Binding make no sense in compile-time constants.
fix test
fix tests
these dots exist since PHP3 even though Jani removed them in 5_3, I can't see how they can cause any BUGS
- add notice about glob regression (Lukas)
ChangeLog update
Nuke unused vars
fix test
fix tests
MFH: Nuked ending dots from error messages
- Nuked ending dots in error messages
- Nuked ending dots from error messages
- ws+cs (prepare syncing some parts to PHP_5_3)
ChangeLog update
smaller tests already exist
smaller tests already exists
New testcases for strrchr() function
New testcases for stripos() function
New testcases for sprintf() function
New testcases for join() function
New testcases for htmlspecialchars_decode() function
New testcases for chunk_split() function
New testcases for sprintf() function
New testcases for sprintf() function
New testcases for chunk_split() function
New testcases for chunk_split() function
Updated API version numbers
MFB: fix compiler warnings
Updated API version numbers
use FREE_ZVAL() instead of free() to free a zval
fix a few compiler warnings (mostly use of unitialized values)
Added "compact" handler for Zend MM storage.
Added "compact" handler for Zend MM storage.
Added support for __callstatic() magic method (missing part). (Sara)
New testcases for strrchr() function
New testcases for stripos() function
New testcases for stripos() function
New testcases for strrchr() function
New testcases for join() function
New testcases for join() function
New testcases for htmlspecialchars_decode() function
New testcases for htmlspecialchars_decode() function
Added support for __callstatic() magic method. (Sara)
optimization
Removed commented code
Added support for Late Static Binding. (Dmitry, Etienne Kneuss)
- Nuked unused variable
ChangeLog update
fix expected output
Support for namespaces
Namespaces
Support for namespaces in dynamic calls
nuke unsued variable
ws + cs
ws
ws
fix build
One more thing..
BFN
MFH:
- Added ".htaccess" style user-defined php.ini files support for   CGI/FastCGI. - Added support for special [PATH=/opt/httpd/www.example.com/] sections   in php.ini. All directives set in these sections will not be able to be   overridden in user-defined ini-files or during runtime in the specified   path.
ChangeLog update
MFH: ws + cs
ws + cs fixes
Improved memory usage by movig constants to read only memory. (Dmitry, Pierre)
Fugbix typo.
Improved memory usage by movig constants to read only memory. (Dmitry, Pierre)
BFN
MFH: BC (missed from the patch :)
BC
MFH: Nuked unnecessary TSRMLS_FETCH() call
- Nuked unnecessary TSRMLS_FETCH().
MFB52: ---8<--- revision 1.39.2.2.2.10 date: 2007/06/17 14:31:12;  author: iliaa;  state: Exp;  lines: +22 -15
MFH: missing folding tag + use Z_STR* macros
missing folding tag
MFH: use Z_STR* macros
MFB: Missing part of some fix (by Ilia)
MFH: ws
last ws
ws
MFH: ws + cs (to keep in sync with HEAD/PHP_5_3 only!)
MFH: ws + cs (more to follow)
ws + cs (more to follow)
MFB52: cs+ws (and synced the folding wrap style!)
MFB52: ws+cs
ws + cs fixes
Improved ext/soap to support element names in context of XMLShema's <any>
Improved ext/soap to support element names in context of XMLShema's <any>
MFH: fix coverity issue #412
MFH: fix coverity issue #412
fix coverity issue #412
MFH: fix coverity issue #411
MFH: fix coverity issue #411
fix coverity issue #411
MFH: Improved ext/openssl . Added support for OpenSSL digest functions . Added support for OpenSSL cipher functions . Added access to internal values of DSA, RSA and DH keys
Revert ws-breaking patch
MFH: Improved and cleaned CGI code. FastCGI is now always enabled and can not be disabled. See sapi/cgi/CHANGES for more details.
ws
Bump version.
ChangeLog update
- Readd support for ynamic access of static members (Etienne)
This commit was manufactured by cvs2svn to create branch 'PHP_5_3'.
BFN
new testcases for strrev() function
new testcases for strrev() function
MFH
fix proto
Late Static Binding (Dmitry, Etienne Kneuss)
New testcases for crc32() function
New testcases for crc32() function
ChangeLog update
Another typo fix
ChangeLog update
MFH: added support "entity" as substitute_character settin accoding to bug #39404
added support "entity" as substitute_character settin accoding to bug #39404
ChangeLog update
ChangeLog update
Improve check for filename (fixed coverity issue #355)
New testcases for strspn() function
New testcases for strspn() function
New testcases for strcspn() function
New testcases for strcspn() function
New testcases for strtok() function
New testcases for strtok() function
replaced by array_search_variation1.phpt, hence removed.
replaced by array_search_variation1.phpt, hence removed.
update and split of testcases for functions array_search() and in_array()
update and split of testcases for functions array_search() and in_array()
ChangeLog update
MFH: add NULL check (coverity issue #385) and fix CS
add NULL check (coverity issue #385) and fix CS
MFH: check for NULL (coverity issue #386)
check for NULL (coverity issue #386)
MFH: check the return value of getgroups() for -1 (coverity issue #390)
check the return value of getgroups() for -1 (coverity issue #390)
MFH: plug leak on error (coverity issue #405)
plug leak on error (coverity issue #405)
plug leak on error (coverity issue #407)
MFH: plug leak on error (coverity issue #407)
Improved speed of array_diff_key(), array_diff_assoc() and array_udiff_assoc().
Improved speed of array_diff_key(), array_diff_assoc() and array_udiff_assoc().
initialize all fields of the struct (it's generally good idea even though they should not be used)
MFH: fix invalid read when opendir over FTP fails (coverity issue #462)
fix invalid read when opendir over FTP fails (coverity issue #462)
ChangeLog update
oops.. thats what you get for commiting code without compiling nor testing..
better fix for iconv_substr
better fix for iconv_substr
MFB: fix crash in tidy_get_body() and related functions when the node doesnt exist
fix crash when fetching a node type that doesnt exist # reported in a manual user note
MFB length check fix (Mattias Bengtsson)
fix potential overflow (Mattias Bengtsson)
add test for dl() with long name
add test for dl() with long name
MFH
MFH
BFN
MFH: fix bug #42139 (XMLReader option constants are broken using XML()) add test
fix bug #42139 (XMLReader option constants are broken using XML()) add test
Improved speed of array_intersect_key(), array_intersect_assoc() and array_uintersect_assoc(). (100 times faster on arrays with 100000 elements)
Improved speed of array_intersect_key(), array_intersect_assoc() and array_uintersect_assoc(). (100 times faster on arrays with 100000 elements)
MFH
if one of regular expressions in the array fails, return NULL right away this fixes "String is not zero-terminated" error and makes the behaviour consistent with regexps passed as strings
ChangeLog update
MFH
fix test name
fix test names
ChangeLog update
MFB one more test
one more test
MFB length tests
report iconv fix
MFB: limit iconv parameters here too
limit iconv parameter sizes - workaround for libc bug
limit iconv parameters here too
limit iconv parameter sizes - workaround for glibc bug
add length tests for iconv functions
use right variable name
MFH: fixed bug #42502 va_* cannot detect.
fixed bug #42502 va_* cannot detect.
modified line end CR -> CR+NL
add dl() limit patch
limit dl() argument length (patch by Christian Hoffmann)
limit dl() argument length (patch by Christian Hoffmann)
BFN
ChangeLog update
ChangeLog update
ChangeLog update
better output matching/fixes
better output matching/fixes
ChangeLog update
New testcase for strncasecmp()
New testcases for chop()
Removing from file dir as it was wrongly committed to this dir
New testcases for wordwrap()
Removing from file dir as it was wrongly committed to this dir
New testcases for strncasecmp()
New testcases for chop()
New testcases for wordwrap()
New testcases for strncasecmp() function
New testscases for chop() function
Changing to use %a to match recent run-tests.php patch
Changing to use %a to match recent run-tests.php patch
MFB: change run-tests.php to add %a
changes to run-tests.php: - change %s to %a - make %s = [^\r\n]+ - fix tests accordingly
MFB: fix expected output
fix expected output
better comments
better comments
New testcases for wordwrap()
New testcases for wordwrap() function
fix test
fix test
fix news
ChangeLog update
register mail.force_extra_parameters change
MFB: disallow setting mail.force_extra_parameters from .htaccess
disallow setting mail.force_extra_parameters from .htaccess
MFB
fix test, particularly when running with valgrind, bacause it may take more than one second to execute both instructions and thus get different dates
MFB
attemp to set locale if it exists. fix skip condition
MFB: fix expected output
fix expected output
MFB: fix expected output
fix test expected output
MFB: fix skip reasons
fix skip reasons. the word 'skip' should be followed by a single space and doesnt need any \n at the end
List recent fixes
MFB: Added a note indicating that the tests may fail to due libc implementation
Added a note indicating that the tests may fail to due libc implementation
MFH: cs/ws
cs/ws fix
ChangeLog update
MFB: docs say dl() parameter can be filename only - enforce it
docs say dl() parameter can be filename only - enforce it
MFB: fix crash if stream is empty and reader function sets buffer as null
fix crash if stream is empty and reader function sets buffer as null
MFB: fix #39651
reorder
BFN
BFN #39651
fix bug #39651: proc_open() append mode doesnt work on windows
marked with Bug #42038
fix news
marked with Bug #42038
marked with bug#42638
marked with Bug# 42638
ChangeLog update
- MFB
- MFB: alpha support for colorize filter
- MFB:  - gdImageTileApply does not respect transparent color  - gdImageArc regression  - Alpha channel support for gdImageColor (IMG_FILTER_COLORIZE)
- [DOC] add alpha support for imagefilter's IMG_FILTER_COLORIZE
MFB: remove HAVE_CONFIG_H
remove the -DHAVE_CONFIG_H switch again to fix things on windows this means that the upgrade script strips the #ifdef automatically
typo
forgotten part
MFH: revert config header change
revert config header change
- in case of ambiguity class name in namespace call  __autoload() only after   checking for both (class from current namespace and internal class) - improved class fetching performance - fixed wrong (lowercase) name passed to __autoload() from call_user_func()
Simplify (the prototype of zend_u_get_constant_ex() is going to be changed)
fix test
fix test
ChangeLog update
fix tests
fix tests
ChangeLog update
use macros
remove the original
MFB: split test
unicode part of \v and \t patch
split one more ten-in-one test and fix \v\f stuff while we're here..
BFN
BFN
- #106 entry
- re-add fix for libgd #106, imagerectangle draws 1x1 rectangles   as 1x3 rectangles
ChangeLog update
output is started in php_module_startup(), no need to start it twice fixes leaks in sapi/cgi/tests/005.phpt
MFH: point to valid config header
point to valid config header
ChangeLog update
- #42592, remove ending dot in warning msg
New testcases for ucwords() function
New testcases for ucwords() function
New testcases for strncmp() function
New testcases for strncmp() function
- Make the macro into function (for the sake of idiotic ZEND_STRL() macro)
- Can not remove because of the idiotic ZEND_STR*() macros
New testcases for stripslashes() function
New testcases for stripslashes() function
made equivalent (to php5 test) changes to the expected output. Although this test did originally have the right EXP section
fixing error in expected output
- Added reminder for 5.3
- Missed this from previous commit to zend_ini.h
- No need to break binary compatibility here
BFN
MFH: folding tags
BFN
forgotten part
Added checks for malformated FastCGI requests (Mattias Bengtsson)
Added checks for malformated FastCGI requests (Mattias Bengtsson)
Added missing safety checks for 2nd parameter of setlocale() function
Added missing safety checks for 2nd parameter of setlocale() function
ChangeLog update
- MFH: Add a comment why not ~0 or -1.
- Add a comment why not ~0 or -1.
New testcases for addslashes() function
New testcases for addslashes() function
ChangeLog update
MFH: fixed typo in function name
Bug #42541 (Check for namespace decl. on first line doesn't work when extended info is on)
ChangeLog update
bfn
MFH: detect endianness in compile time when using Apple's GCC (fixes universal binary build)
detect endianness in compile time when using Apple's GCC (fixes universal binary build)
MFH: fixed bug #29955 invalid case conversion in iso-8859-9.
fixed bug #29955 invalid case conversion in iso-8859-9.
- We have to store the original (allocated) pointer here as it was freed after   the pointer itself was modified, otherwise we'll get an invalid free error   here.
Test cases for sin, cos, tan, asin, acos, atan, sinh, cosh, tanh, asinh, acosh, atanh.
Test cases for sin, cos, tan, asin, acos, atan, sinh, cosh, tanh, asinh, acosh, atanh.
fix tests
fix tests
ChangeLog update
MFB: malloc+memset == calloc # this was sitting here for quite a looong time..
- Ugh, fix this properly.
ChangeLog update
- Avoid confusion.
ChangeLog update
MFB: upgrade to PCRE 7.3
adapt for PCRE 7.3 remove ability to include config.h from php_pcre.c, as it seems pretty useless and produces a few warnings
upgrade to PCRE 7.3
new test
spaces -> tabs
also remove this file in HEAD
ChangeLog update
1.2.4
fix package2.xml
add Chris to the maintainers
MFB New tests for getAttribute
MFB Add $dbh->getAttribute() support for ATTR_SERVER_VERSION, ATTR_SERVER_INFO, ATTR_CLIENT_VERSION, ATTR_AUTOCOMMIT. Sync WS between PHP 5 & 6 and add a couple of casts.
New tests for getAttribute
Add $dbh->getAttribute() support for ATTR_SERVER_VERSION, ATTR_SERVER_INFO, ATTR_CLIENT_VERSION, ATTR_AUTOCOMMIT. Sync WS between PHP 5 & 6 and add a couple of casts.
MFH: prohibit arguments by ref in magic methods
prohibit arguments by ref in magic methods
update changelog, prepare for 1.2.4 release
MFH: ws + protos
ws
MFH: ws
ws
MFH: ws fixes
ws fixes
MFH
ws + apify cfg_get_entry
MFH: Revert revert.
- Revert the revert: this is not causing any problems (or we have lot bigger issues), the bug is elsewhere
MFH: Moved php.ini related protos where they belong
- Moved the php.ini related function protos where they belong
MFH: ws
ws
MFH
- Include php_ini.h (needed in future, does not break anything)
ChangeLog update
MFB New tests
New tests
BFN
MFH: fix bug #42462 (Segmentation when trying to set an attribute in DOMElement)
fix bug #42462 (Segmentation when trying to set an attribute in DOMElement)
- Allow binary strings as method name in $class::$method(), fixes   tests/lang/044.phpt (Etienne Kneuss)
fix C++ extensions build C++ doesn't allow implicit casting of void* to Uchar*, we have to do it explicitly
MFB: Add optional parameter  to debug_backtrace().
Add optional parameter  to debug_backtrace().
Back to -dev.
fix test: do not run when noatime set
fix tests: do not run when noatime set
when opening an internal file read-only, recycle the phar archive's fp.  This makes phar twice as fast (2.21x according to callgrind)
ChangeLog update
5.2.4
- Put the PHPAPI php_u_str_to_str() function in the .h, just like the rest.
fix tests: do not run on MACOS
fix test: do not run on MACOS
- gd bug #102, alternative fix when an old library is used
fix test, do not run on macos
fix test, do not run on macos
ChangeLog update
not exprimental
ChangeLog update
- revert fix for #106 - add news entry for pslib fix   NB: Please next time, inform us before a complete freeze is done for       a given branch. And a week for a RC is defitively too short.
ChangeLog update
- MFB: gd #106, imagerectangle draws 1x1 rectangles as 1x3 rectangles
- gd #106, imagerectangle draws 1x1 rectangles as 1x3 rectangles
PDO is not experimental anymore
ChangeLog update
fixed compilation error on Visual C++ 2005
fix tests
add missing /* }}} */
move to 1.3.0 development add Phar::delete()
ChangeLog update
prepare release
Prep for 1.5 release
adding check for rc1 to version-compare test
adding check for rc1 to version-compare test
Namespace constants
fix segfault on shutdown due to UG(utf8_conv) being destroyed twice
fix test name
ChangeLog update
add test for pre-existing alias failure, fix source to fail if alias already exists
Back to dev
5.2.4RC3
-BFN
MFH: revert the patch which breaks multithreaded servers
revert patch which breaks multithreaded servers
- MFH: Make version_compare() also understand the lower case variant of "RC".
MFB: -r1.100.2.3.2.5
MFH: ws + cs changes (sync to ease merging patches around!)
MFH: sync
missing )
- Make version_compare() also understand the lower case variant of "RC".
fix tests
fix tests
implement Phar->setAlias()
ChangeLog update
typo
typo
ChangeLog update
Bagder says I don't need these ifdefs
ChangeLog update
No longer experimental
Add support for CURLPROXY_SOCKS4
- MFB: Fugbix typo.
- Fugbix typo.
MFH:- Part 1 of fixing problems with runpath switch (make --disable-rpath work for real)
- Part 1 of fixing problems with runpath switch (make --disable-rpath work for real)
Added namespace related optimizations and comments
fix test: skip if user is root
fix test : skip if user is root
fix tests
fix tests
fix test: skip if user is root
fix test: skip if user is root
ChangeLog update
BFN
No longer relavent, extension is made absolete by fileinfo
MFH (fixed #42085)
added negative offset support in mbfl_strrpos (fixed #42085)
ChangeLog update
some rewording and typofixing
Added examples
- MFH: Mark the parameter for ReflectionProperty::GetValue as optional
- Mark the parameter for ReflectionProperty::GetValue as optional # [DOC] The documentation on this is wrong, too. The parameter is only # needed for getting the value of an object's property, not for static # ones. (I'm not sure if it has always been that way...)
MFH: PDO_OCI: fix Instant Client build broken by logic correction in previous Solaris lib/lib32 fix
PDO_OCI: fix Instant Client build broken by logic correction during previous Solaris lib/lib32 fix
Namespaces: improved run-time speed
fix issue with large number of open file handles killing php with large phars on creation - close file handles that have no references for entries - add just-in-time re-processing of file handles - make sure file size is set in renaming - add old_flags to phar_entry_info so we can decompress when flushing a modified entry whose fp is closed
fix dump_entry
ChangeLog update
Back to dev
5.2.4RC2
fix proto
fix proto
- Check the length too (just like in HEAD)
add dump_entry
fix test
fix tests
ChangeLog update
add docs
make pharglobals hidden func
add fp and refcount display
Extension is no longer experimental
add helper functions for gdb debugging phar reference counting (needs more work, but a good start)
ChangeLog update
Docs were added
fix tests
MFH
fix lib/lib32 checks to work with broken Solaris shell
BFN
MFH: fix bug #42259 (SimpleXMLIterator loses ancestry) add test
fix bug #42259 (SimpleXMLIterator loses ancestry) add test
bfn
fix is fix, change is something else
ChangeLog update
Oracle news
variable class patch was reverted for 5.2.4
revert variable class support for 5.2
Revert variable class patch for 5.2
touch try 2
touch
- RC2 on the run
MFH
make sure the temp file is closed before removing it
New testcase for clearstatcache() function
New testcase for clearstatcache() function
New testcase for parse_ini_file() function
New testcase for parse_ini_file() function
ChangeLog update
WS
New testcases for fgetss() function
New testcases for fgetss() function
More new testcases for fopen() & fclose() functions
More new testcases for fopen() & fclose() functions
MF PHP_5_2
ChangeLog update
MFH
more fixed tests
MFH: fix tests
fix tests failing on 64bit
fix typo in tmp file path
fixed compilation error: S_ISDIR is undefined.
ChangeLog update
New testcases for fscanf() function
New testcases for fscanf() function
New testcases for htmlentities() & htmlspecialchars()
New testcases for htmlentities() and htmlspecialchars()
MFB: sync
split the test
No dots in error messages!
empty/invalid names are not allowed (empty prefixes are)
allow empty prefix (restore 5_2 behavior)
.. and remove the original one
split the test
fix tests
fix tests
MFH
resolve dir before calling mktemp/mkstemp this is tested by ext/standard/tests/file/tempnam_variation2.phpt
MFH: fix ws/cs & folding
fix ws/cs & folding
nuke the dot
oci8: MFH with Ilia's OK: changes to build with Oracle Database 11g
pdo_oci: MFH with Ilia's OK: changes to build with Oracle Database 11g
oci8: merge changes to build with Oracle Database 11g
pdo_oci: merge changes to build with Oracle Database 11g
more new testcases for tempnam() function
more new testcases for tempnam() function
New testcases for strtolower() and strtoupper() functions
New testcases for strtolower() and strtoupper() functions
More new testcases for copy() function
More new testcases for copy() function
ChangeLog update
- Write to the correct file...
-MFB: libgd #101, imagecreatefromgd can crash if gdImageCreate fails
- libgd #101, imagecreatefromgd can crash if gdImageCreate fails
-MFB: libgd #94, imagecreatefromxbm can crash if gdImageCreate fails
- libgd #94, imagecreatefromxbm can crash if gdImageCreate fails
Same as for ext/mysqli tests: addition of a new environment variable MYSQL_TEST_SKIP_CONNECT_FAILURE  which controls how to deal with connection problems. If MYSQL_TEST_SKIP_CONNECT_FAILURE = false (default) connection problems will make a test fail. If you set MYSQL_TEST_SKIP_CONNECT_FAILURE to any value that evaluates to true in PHP, a test which cannot connect to the database will be skipped.
I forgot those files when merging mysqlnd SVN and HEAD. Only required by tests that test experimental features and are skipped by default that's why I missed them.
No need for an extra skip*.inc file, this check is done in just one place
More changes related to MYSQL_TEST_SKIP_CONNECT_FAILURE.
New tests (stubs?) for a few experimental (to be removed?) functions. The tests will only be run if you set MYSQL_TEST_EXPERIMENTAL = 1.
Next set of files which now feature the new environment variable MYSQL_TEST_SKIP_CONNECT_FAILURE which controls how connection problems are handled: failure (MYSQL_TEST_SKIP_CONNECT_FAILURE = false, default) or skip (MYSQL_TEST_SKIP_CONNECT_FAILURE = true)
bfn
Introducing new environment variable:   MYSQL_TEST_SKIP_CONNECT_FAILURE = false
New testcases for tempnam() function
New testcases for tempnam() function
ChangeLog update
remove unneeded variables
remove unneeded variables
fix ws & folding
remove unneeded variables
fix startup - remove unneeded variables
initialize variables
initialize values
fix TSRM embed startup
fix TSRM embed startup
New testcases for fgetcsv() function
New Testcases for fgetcsv() function
More testcases for fputcsv() function
More testcases for fputcsv() function
MFB: fix bug #41973
MFH: fix typos in comments
MFH: This is what we get for not doing MFH..or MFB..a mess
- MFB: fix regressio introduced by #42222
- fix regression introduced with #42222 (thx to tony and mattias for the   head up)
Record 'nother bug fix
New testcases for fputcsv() function
New testcases for fputcsv() function
ChangeLog update
Add bugs fixed
update changelog
ChangeLog update
MFH: oci8: flush persistent connection after password change
flush persistent connection after password change
- MFB: #42222, forgot this one (thanks mattias)
- #42222, forgot this one (thanks mattias)
- move entry to right place..
- #42222 entry
- MFB: #42222, truncate the _default to the buffer size (was 200 since day #1, we don't need dynamic alloc here)
- #42222, truncate the _default to the buffer size (was 200 since day #1, we don't need dynamic alloc here)
Touch generated file
Touch generated file
ws fix
- fix ws
MFB: fix compile warning (+ some ws fixes)
fix build
BFN
MFH: fix bug #42082 (NodeList length zero should be empty). (Hannes) add and update tests
fix bug #42082 (NodeList length zero should be empty). (Hannes) add and update tests
update changelog & list of files
fix build
fix build
Improved ext/openssl   . Added support for OpenSSL digest functions   . Added support for OpenSSL cipher functions   . Added access to internal values of DSA, RSA and DH keys
ChangeLog update
ChangeLog update
MFH(r-1.49)Bugfix#36492 Userfilters can leak buckets
Bugfix#36492 Userfilters can leak buckets
ChangeLog update
MF5: it's custom to use 1<<
'I32' and 'I' support
'I32' and 'I' support (per request by Marcus)
MFH: fix for broken shells
MFB: adjust the test names a bit
fix test names
MFB
- Hopefully this fixes the "test: argument expected" error on solaris..
fix folding
fix folding
MFH: add I64 support to spprintf()
add I64 support to spprintf() (snprintf() already has it)
MFB
- Sync with apache2handler
ws
- ws + sync apache2filter apache_config.c with the one from apache2handler
MFB: New oci8 test for oci_password_change()
New oci8 test for oci_password_change()
MF5: fix for access control with .htaccess
ChangeLog update
check correct value
correct fix for access control for save_path and .htaccess
make error_log setting access-controlled by safe_mode/open_basedir
implement separate .htaccess stage
add stage for .htaccess
it's 4 either way, but it's customary to use 1<<
use hardcoded INI like CLI
use hardcoded ini like CLI
Treat privileged oci_pconnect() as non-persistent
Test existing PHP 5 safe mode functionality and make consistent.  No MTH.
Back to dev
fix test
5.2.4RC1
- Add possibility to call static class members using variables (Etienne Kneuss)
- Add possibility to call static class members using variables (Etienne Kneuss)
MFH: int -> zend_bool
int -> zend_bool
BFN
MFH: Bug #42173 (INTERVAL and TIMESTAMP type fixes)
Bug #42173 (INTERVAL and TIMESTAMP type fixes)
Done: Make ext/tokenizer package-aware. (Johannes)
- MFH: Respect value of the parameter for get_loaded_extensions() and only   print zend extensions if set to true
- Respect value of the parameter for get_loaded_extensions() and   get_defined_cosntants()
ChangeLog update
fix win32 build
revert wrong fix
revert wrong fix
MFH: New test for error handling
New test for error handling
- fix win32 build
an attempt to fix win32 build
MFH
ChangeLog update
- MFH: Use a script to generate tokenizer data from zend_language_parser.h
- Use a script to generate tokenizer data from zend_language_parser.h
- BFN
MFH:- Allow using * in test filenames to match pattern
- Allow using * in test filenames to match pattern
add test
add test (thanks Chris!)
MFH: missing part of the fix for bug #42134
missing part of the fix for bug #42134
MFH: fix #42134 (oci_error() returns false after oci_new_collection() fails)
fix #42134 (oci_error() returns false after oci_new_collection() fails)
Add ext/tokenizer support to the TODO.
BFN
MFH: fix bug #41833 (addChild() on a non-existent node, no node created, getName() segfaults)
fix bug #41833 (addChild() on a non-existent node, no node created, getName() segfaults)
MFH: fix possible crash
fix possible crash
fix typo
fix typo it would be much better if Gentoo people send us this patch long ago instead of using their private patches.
fix test
ChangeLog update
sometimes c-client returns non-null entry with null host
sometimes c-client lib returns non-null entry with null host
- MFB:  - fix gd bug #102, < 0 means that no load are loaded, return false  - add error code in the warning
- fix gd bug #102, < 0 means that no load are loaded, return false - add error code in the warning
allow user specified class to be returned from transformToDoc
Start TODO for namespaces/packages.
ChangeLog update
ChangeLog update
allow user specified class to be returned from transformToDoc
BFN
ChangeLog update
Improved fix for bug #41633 (self:: doesn't work for constants) to support function define()
Improved fix for bug #41633 (self:: doesn't work for constants) to support function define()
Extended tests
Namespace support for name ambiguity between namespace and class name
Support for namespaces in compile-time constant reference
ChangeLog update
- Align help texts and added note about embedded not being available when   the MySQL native driver is used.
WS
MFH: - Made build system less major version dependant to ease MFB/MFH
- Made build system less dependant for the PHP major version to also   ease MFB/MFH as acinclude.m4 and Makefile.global are identical in both   branches.
I must be blind..
- copy-paste typo
- Check also if ulong is available
Return to previous code
MFH: cs + ws fixes
- ws + cs fixes
fix typo
file.inc : Added dumping of stat array in functions (compare_self_stat() & compare_stats() ) Smaller testcases for lstat_stat_variation[1-7].phpt files
file.inc : Added dumping of stat array in functions (compare_self_stat() & compare_stats() ) Smaller testcases for lstat_stat_variation[1-7].phpt files
MFH: arginfo
Add arginfo
Added warning for useless import statement
Disabling declaration of class which name conflicts with import.
BFN
ChangeLog update
- Moved mysqnd to it's own directory: It is sort of an extension itself.   (Similar to what ext/libxml is..)
MFH: - Allow using extra headers in PHP_CHECK_SIZEOF
Already exists in PECL
- Allow using extra headers in PHP_CHECK_SIZEOF
Alignment fixes for 64bit and fixing macroses
MFH
fix --with-php-config option
MFH: Show "wrong parameter count" error messages
Show "wrong parameter count" error messages
ChangeLog update
- These functions where MFHd >1 year ago
- MFB: New ReflectionExtension::info() function to print the phpinfo() block   for an extension.
- New ReflectionExtension::info() function to print the phpinfo() block   for an extension. [DOC]
[DOC] MFH: add PCRE_VERSION constant to ext/pcre
add PCRE_VERSION constant to ext/pcre
fix ZTS build
fix ZTS build
namespace protection GD uses the same variable, too.
ignor php_have_mysqlnd.h
Don't use AC_CHECK_TYPES, as autoconf 2.13 is buggy, use an workaround.
Add missing file
Import of mysqlnd and ext/mysql + ext/mysqli patched to be built either with libmysql or mysqld.
MFH:- Changed "display_errors" php.ini option to accept "stderr" as value which MFH:  makes the error messages to be outputted to STDERR instead of STDOUT with MFH:  CGI and CLI SAPIs (FR #22839).
- Changed "display_errors" php.ini option to accept "stderr" as value which   makes the error messages to be outputted to STDERR instead of STDOUT with   CGI and CLI SAPIs.
Test name formatting fixes
fix folding
MFH:- Added missing MSG_EOR and MSG_EOF constants
- Added missing constants for MSG_EOR and MSG_EOF
MFH: removed useless file
- Removed useless file
MFB
- fix NEWS
ChangeLog update
fix test
fix test
fix test
remove the tests, they've been splitted into smaller ones
BFN
add announcement copy as README for easier reference
Damn, Pierre is clever.
Tests for mysqli_stmt_send_long_data()
Tests which verify that you really cannot clone any of the mysqli objects. Technically it might be possible to tweak ext/mysqli and make the objects cloneable - tough, we haven't checked in depth.
Tests that check mysqli_fetch_field(), mysqli_fetch_field_direct() and retrieve metadata
Tests for mysqli_fetch_object()
Another nice new function that comes with mysqlnd: return all rows of a result set in one array. This is handy if want to fetch all results and pass the data directly to a template engine, for example. In this case you save a loop.
fix ws/folding
Adding tests for a few new functions that come with mysqlnd:
Playing with background processing: parent and child process fetching data from the "same" result handle and checking with each other if the fetched rows are the same or not. Inspired by a bug report. There seem to be really people doing this...
Tests for mysqli_fetch_assoc(), mysqli_fetch_array(), mysqli_fetch_row()
Tests for mysqli_connect(), mysqli_real_connect(), mysqli_connect_errno(), mysqli_connect_error()
Tests that deal with mysqli_set_local_infile_handler() and mysqli_set_local_infile_default()
Adding new tests that check the interface of the classes exported by mysqli
Primarily whitespace/CS - synching with mysqlnd SVN repository
MFH: sync
MFH: fix descriptions
fix descriptions
More new testcases for glob()
fix test descriptions
more tests
more tests
Whitespace (space to tab)/CS
more testcases for glob() function
New testcases for glob() function
New testcases for glob() function
ChangeLog update
MFB: Avoid endless loop
Avoid endless loop
MFH: ws fix + sync U stuff for patches to MFB easier
WS fix
MFH: sync
- Test properly for socketpair inside an extension.
MFB: sockepair is not always available
More new testcases for fread() function
More new testcases for fread() function
New testcases for fread() functions
New testcases for fread() functions
Added test for KEY_PAIR code and fixed KEY_PAIR detection code
New testcases for stat() function on windows
New testcases for ftruncate() function
smaller testcases for stat() function on Windows
New testcases for ftruncate() function
fix tests
fix tests
ChangeLog update
New testcases for umask() function
New testcases for umask() function
New testcases for lstat() and stat() functions
New testcases for is_file() function
New testcases for is_dir() function
New testcases for fseek(), ftell() and rewind() functions
New testcases for lstat() and stat() functions
New testcases for is_file() function
New testcases for is_dir() function
New testcases for fseek(), ftell() & rewind() functions
New testcases for fflush() function
New testcases for fflush() function
- MFH: Allow the use of a user defined template.rc file to override the   default ones. This makes it possible to include the extension's version   inside the version properties of the generated extension DLL instead   of the PHP version the extension is build against.
- Allow the use of a user defined template.rc file to override the   default ones. This makes it possible to include the extension's version   inside the version properties of the generated extension DLL instead   of the PHP version the extension is build against.
New testcases for fwrite(), fgetc() and fgets() functions
New testcases for fgetc() and fgets() functions
Add support got zend_class_entry->get_static_method() and matching __callStatic() userspace method @doc
ChangeLog update
MFH: cs+ws+compile warning fixes
- ws + compile warning fixes
MFH: fix warnings
MFH: fix #41691 (ArrayObject::exchangeArray hangs Apache)
fix #41691 (ArrayObject::exchangeArray hangs Apache)
revert
ChangeLog update
fix #41989 (move_uploaded_file() & relative path in ZTS mode)
MFH: fix #41989 (move_uploaded_file() & relative path in ZTS mode)
MFH: Use SEPARATE_ZVAL_IF_NOT_REF for cleaner code.
- Use the SEPARATE_ZVAL_IF_NOT_REF macro (cleanup code)
MFH
fix tests, add 64bit versions
add new tests from HEAD
split the test
fix unicode mode
fix test
fix ws & folding
fix ws & folding
MFH
Beautify and reword a bit.
MFH:- Stop configure if scanner files are not found and invalid/no flex is found
- Stop configure if scanner files are not found and invalid/no flex is found
MFH
make sure the cache is flushed when doing stat calls
use constant
fix test
ChangeLog update
fix oci8 entries for Chris Jones
MFH: add casts to fix compilation warnings
Add casts to fix compilation warnings
MFH: cleanup & sync
- Cleanup + removed PHP_SETUP_ICU call (has to be done per extension, not globally!)
fix test
attempt to fix pdo_pgsql tests in HEAD
MFH
add comment (the code is not that obvious indeed)
MFH: Use correct macro name
- Use correct macro name
New testcases for filesystem handling function : unlink()
New testcases for filesystem handling function : unlink()
ChangeLog update
Allow file uploads to bypass open_basedir checks (fixes regression)
MFH: ws fix
ws fix
MFB: update
update for latest library rlease
MFH: removed dots from error messages
MFB: %f -> %F
ChangeLog update
MFB: initialize glob struct
initialize glob struct
fix typo
more build fixes
fix win32 build
there is no such file
fix win32 build
fix tests
fix tests
New testcases
New testcases
add missing skipifs
- Cleanup and simplify
remove ext/informix leftovers
add skipif
fix test
MFH
add missing skipif sections
- Removed leftovers from nuking safe-mode
- Use explode instead of split (ereg goes bye bye..)
MFH: split test
split test
fix test
- The --enable-zend-multibyte option does not exist in PHP 6
ChangeLog update
- Skip these tests always if unicode.semantics=on
- Moved the old regex functions to it's own extension: ereg
- Remove ereg/ from PHP_5_2 branch. (not yet wanted here :)
- Initial commit (files will be moved from elsewhere in CVS!)
MFH: folding tags and some more ws fixes
MFH: ws fixes (sync!)
MFB: free error messages + ws fix
MFH: removed unused macros
- Unused macros removed
Clear out last error & last error file information at the end of the request to ensure that they don't propogate to the next request
ChangeLog update
ignore *.gcda
ignore *.gcda
ignore *.gcda
ignore *.gcda
fix ws, cs & folding
ChangeLog update
Wrong function name in error message
- MFH: Let's always use the macro as llabs() requires c99.
- Let's always use the macro as llabs() requires c99.
fix test
add key values to the output
("0" == NULL) must be false even in Unicode mode
MFH: split the test
add 64bit version
split one more huge test into several smaller ones
fix test, add 64bit version
fix %u in Unicode mode
fix tests
Unicode support
Assert test cases
Assert test cases
MFH: fix wrong logic
- fix wrong logic
Assert test
MFH: cleanups + fixes
MFH: use macro - llabs not always available on win32
use macro - llabs not always available on win32
- Do not break thousands of scripts.. (will remove in 5.3)
MFH: don't allow $PHP_OCI8 to be empty if OCI8 is enabled fixes bug #41988
don't allow $PHP_OCI8 to be empty when OCI8 is enabled
fix test
simplify the patch and prevent NULL retval_ptr_ptr's
MFH: - Make sure people call ldap_first_attribute() before ldap_next_attribute()
- Make sure people call ldap_first_attribute() before ldap_next_attribute()
ChangeLog update
- Removed non-existing function entry
revise test to reflect recent code
Commit previously missing patch for bug #41919
reflectionObject tests
reflectionObject tests
The last bunch of changes to the old 0*.phpt tests. Once final time a verbose explanation of changes:
Will this never end?    - connection parameter tweaking    - a bit of whitespace here and there    - use UEXPECTF if need be
As usual:
Connection parameter should be taken from connect.inc and used all in mysqli_connect() and friends. Use UEXPECTF instead of crippled EXPECTF.
I forgot to mention: some will fail. In particular in unicode mode.
Next 10 in row to be tweaked:
The usual tweaking:
Pretty much the same cosmetics and tweaking as before (proper UEXPECTF, "done!" at the end to detect crashes, connection parameter tweaking, ...) - plus: check return codes even if failures are unlikely.
More typical changes:
All the upcoming changes in the 0*.phpt files are pretty much the same. I'll describe them only once in with a bit of detail.
Adding tests for mysqli_affected_rows() and mysqli_autocommit()
Some of the upcoming new tests will use this little helper to create a very simple MySQL table with some data in it to play with.
Some tests intentionally fail connecting to the DB. Not being able to connect is no reason to skip the test. Also, no test should have hard-wired connection parameter in it. Connection parameters come from connect.inc (see environment variables in connect.inc).
Starting to merge the latest set of ext/mysqli tests from the mysqlnd SVN repro into HEAD. Again, it might happen that I crash the set of tests and don't mention one or the other change while merging. Blame me...
- MFH: Commit generated file.
- Commit generated file.
- MFH: Missing file in previous commit.
- Missing file in commit.
fix the configure output
fix test
- Removed unnecessary stuff
1) Whitespace/CS 2) Playing with column aliases
Testing SELECT "a" AS "". This is nice to test strcmp() and similar...
Synced mail function in mb_send_mail function(Escape mail.force_extra_parameters value).
Synced mail function in mb_send_mail function(Escape mail.force_extra_parameters value).
fix MINFO handler
Blame me for not checking in a version that's been cleaned up with regards to Whitespace/CS...
Whoever has hacked this function into ext/mysql,  here's a "test" for it.
Checking the phpinfo() entries of ext/mysql
Adding test for mysql_list_tables()
- missing comma
Checks if ext/mysql exposes all constants it should expose.
No skipping needed anymore, function is there even with mysqlnd.
A bit more verbose message in case of problems. It's been helpful to debug a cross-server version issue.
1) Whitespace/CS 2) Added test for default link
1) Whitespace/CS 2) Added: skip test with mysqlnd, mysqlnd does not support this function currently
1) Whitespace/CS 2) Added check for default connection
MFB: fix warning
MFH: fix invalid logic + prevent non-integers to be passed
MFH: close file handles
- Added test for bug #41815
1) Whitespace/CS 2) Tiny check for default link added
1) Whitespace/CS 2) Portability: don't expect any values and have them in the [U]EXPECTF, if they will be available only with certain MySQL Server versions.
1) Whitespace/CS 2) One line added to test default connection
1) Whitespace/CS 2) Test mysql.default_socket only if we're using a socket to connect
Whitespace/CS only
fix ws, cs and folding
fix WS, CS and other S
add new test
new test
fix test
fix test
Namespaces
fix #41970 (call_user_func_*() leaks on failure)
ChangeLog update
MFH: - Changed AC_ARG_* options to PHP_ARG_* options. MFH: - Some cleanups here and there MFH: - Enabled PHP_CHECK_CONFIGURE_OPTIONS (checks for unknown configure MFH:   options) # Note to Marcus: ext/dba/config.m4 needs to be "converted" to use # the PHP_ARG_* options. I did't touch it needs quite a lot of work to keep # it's current behaviour regarding "enabled-by-default" parts of it. # # Hint: By using the PHP_ARG_* options you have the "default" option.. ;)
- Enabled PHP_CHECK_CONFIGURE_OPTIONS (check for unknown configure options)
- Changed all AC_ARG_* options to PHP_ARG_* options.
- Changed all AC_ARG_* options to PHP_ARG_* options and cleaned up some
MFH
check PHP version only when enabled and replace tabs with spaces
MFH
implement (or fix?) #41884 (ReflectionClass::getDefaultProperties() does not handle static attributes)
MFH
- Removed unused empty macro and nuked illegal use of $withval
MFB: PHP_CHECK_CONFIGURE_OPTIONS
More reflectionClass tests
More reflectionClass tests
- Always enable mail() function
- MFH: Always enable mail() function
Unicode support
Unicode support
Whitespace/CS only
Whitespace/Coding Standards and check added for default connection.
Whitespace only
Whitespace and more testing.
Unicode support
Whitespace and new checks for default connection.
- Introducing 1st part of "show unknown configure options" and nuked PHP_REGEX macro for good
Whitespace only
Mainly Whitespace/CS changes. Partly "too many arguments" check added.
Whitespace and new "too many arguments" check.
Whitespace/Coding Standards and new check what happens if one tries to free not a mysql resource but a file resource.
Whitespace/Coding Standard
Removing reference to skipifemb.inc which is not needed and Whitespace/Coding Standards.
Whitespace and the usual suspect: skipifemb.inc
Whitespace/Coding Standards, removal of skipifemb.inc, improved testing and checking for expected field types.
Whitespace and - as usual - removing skipifemb.inc
Whitespace/Coding Standards, removing reference to skipifemb.inc, tweaking EXPECTF.
Whitespace. Removing reference to skipifemb.inc.
Aside from whitespace / coding standards this one is more interesting. We added a flag to check if a MySQL column type is a binary type. If so, ext/mysql should return data for such columns not as unicode strings but as binary strings if unicode.semantics is on.
Whitespace / Coding Standards
MFH: fix copy/paste type and bug #41962
fix typo and bug #41962
1) Whitespace / Coding Standards 2) Don't even dare to have variables that sound like connection parameters and don't come from connect.inc 3) skipifem.inc is not there for ext/mysql tests
Whitespace/Coding Standards. The tests origin from ext/mysqli/tests. ext/mysqli/tests should have a skipifemb.inc, which is not needed and not available for ext/mysql/tests. Nevertheless the tests tried to include that file.
Made uniform error reporting for unicode/non-unicode modes
Whitespace/Coding Standards. Test for default link added.
Those two should be whitespace / coding standards only. However, in some of my commit messages I might be wrong, it's hard to say what we added to the tests and I might miss this or that little detail, although I check the diff before commit.
Should be whitespace/coding standards changes only.
Mostly whitespace (replacing spaces with tab). Additional, weak test for "host:port:socket" syntax, just to make sure we cover the underlying C code.
mproced openssl_x509_parse() to return extensions in readable form
Unicode support improved openssl_x509_parse() extensions support
Whitespace: replacing spaces with tab to follow coding conventions.
MFH: Nuked unnecessary AC_MSG_CHECKING
- Nuke extra AC_MSG_CHECKING
MFH: cleanup, removed unnecessary macro definitions
fix folding, CS and WS
Trying to fix broken tests. The last set of files committed a few weeks ago broke almost all tests. I'll try to merge the CVS with a working set of tests from the mysqlnd development repository. With this first set of changes most tests should run (and pass) again.
- Improved PHP_SETUP_ICU
- Cleanup, nuked some unnecessary macros.
MFH: No return values for void function
- No return value for void function
better check for skip
MFH: Changed AC_ARG_ENABLE to PHP_ARG_ENABLE
- Changed AC_ARG_ENABLE to PHP_ARG_ENABLE
unicode support
removed seccond --UEXPECT--
ChangeLog update
add CVE ref
Escape mail.force_extra_parameters value
Escape mail.force_extra_parameters value
- fix concurrent reader/writer use case   (we read, while the other process writes -> if we don't try    read we won't notice that the file has been growing.)
check if write is allowed before writing to error log
suppress warnings to avoid potential loop
always check save_path (issue reported by Maksymilian Arciemowicz)
fixes
check if write is allowed before writing to error log
always check save_path (issue reported by Maksymilian Arciemowicz)
tests for reflectionClass
Tests for reflectionClass
MFB htmlentities() / htmlspecialchars() "don't double encode" flag support
fix folding and ws
fix folding and ws
BFN
MFB: fix bug #41947 (SimpleXML incorrectly registers empty strings as namespaces add test
fix bug #41947 (SimpleXML incorrectly registers empty strings as namespaces add test
MFH: use safe_emalloc()
use safe_emalloc()
Skip unicode tests in non-unicode mode
MFH: Removed --enable-versioning
- Removed --enable-versioning
fix and new test for sunos
ChangeLog update
fix build on b0rked OSes (see #41920)
These testcases are now split into smaller testcases, hence being deleted
These testcases are now split into smaller testcases, hence being deleted
Added ability to create local or remote (URL) user streams Local user streams must not be able to open(), URLs if allow_url_include is off Implemented new function stream_is_local() [ - stream_wrapper_register() extended with additional optional argument "flags"   of type long. This time only one flag is implemented - STREAM_IS_URL, that means that userstream wrapper is remote (URL).   By default stream is local. - stream_is_local() is a new function that accepts stream and tell if this   stream is local or remote (URL) ]
wrong comments
Proper fix for MOPB-29
wrong condition
Proper fix for MOPB-29
MFH: use defined values instead of plain integers
- Use the defined values instead of plain integers here
array copy on write tests
ReflectionClass  constructor tests
array copy on write tests
ReflectionClass  constructor tests
bfn
MFH
no tabs
- Better wording
MFH: - Use $PHP_LIBDIR where appropriate
- Use $PHP_LIBDIR where appropriate
ECONNABORTED is not a critical error (Andrei Nigmatulin)
ECONNABORTED is not a critical error (Andrei Nigmatulin)
fix news
MFH
use correct types for scale and precision
ChangeLog update
These files are now split into one or more smaller testcases, hence being deleted.
These files are now split into one or more smaller testcases, hence being deleted.
Run only on 32-bit OS
ChangeLog update
Bug #41917: New OCI8 tests for scale and precision
*** empty log message ***
PCRE unicode/binary support
MFH
fix indentation and make Andrey happy =)
fix folding
fix #41908 (CFLAGS="-Os" ./configure --enable-debug fails) patch by christian at hoffie dot info
MFH: fix #41908 (CFLAGS="-Os" ./configure --enable-debug fails) patch by christian at hoffie dot info
Unicode support fix
better check for root user
Better check for root user
ChangeLog update
- Marking already fixed bug in NEWS file (Bug #41909).
fix test: 006_error.phpt & filegroup_basic.phpt fix and smaller tests for symlink_link_linkinfo_is_link[basic|error|variation].phpt
fix test: 006_error.phpt & filegroup_basic.phpt fix and smaller tests for symlink_link_linkinfo_is_link[basic|error|variation].phpt
- MFH: Updated timezone database to 2007.6 (2007f).
- Updated to 2007f.
ChangeLog update
MFH: add CURLINFO_PRIVATE & CURLOPT_PRIVATE patch by Andrey A. Belashkov
add CURLINFO_PRIVATE & CURLOPT_PRIVATE patch by Andrey A. Belashkov
do not fax the fixes :)
ChangeLog update
v2 package file
MFB: new test
New test
BFN
MFB: fix bug #41861 (getNamespaces() returns namespaces of node's siblings) add test
fix bug #41861 (getNamespaces() returns namespaces of node's siblings) add test
Store existent file in realpath cache
Store existent file in realpath cache
Added ability to create local or remote (URL) user streams Local user streams must not be able to open(), URLs if allow_url_include is off Implemented new function stream_is_local() [ - stream_wrapper_register() extended with additional optional argument "flags"   of type long. This time only one flag is implemented - STREAM_IS_URL, that   means that userstream wrapper is remote (URL). By default stream is local. - stream_is_local() is a new function that accepts stream and tell if this   stream is local or remote (URL) ]
MFB: Basic PDO->quote() for PDO_OCI
Added basic PDO->quote() functionality to PDO_OCI
ChangeLog update
oracle BFN
Allow unicode XML
BFN
MFB: fix bug #41867 (getName is broken) add test
fix bug #41867 (getName is broken) add test
Unicode support
ChangeLog update
ChangeLog update
ChangeLog update
MFH
- More portable..
MFB. Test for old bug fixed in some previous, unknown change
Test for old bug fixed in some previous, unknown change
ord() must not convert binary data to unicode in unicode mode
MFH
- More portable solution
MFB. Add testing steps
typo
oops
Allowed loading XML from unicode strings
- Added missing SKIPIFs
- Added missing SKIPIF
divide the test into smaller tests
cleanup tmp files
divide the test into smaller ones
MFH
remove the quotes in for
oops
oops
MFH
fix `make test` with shared extensions
Un-DOSify line terminators.  No merge to 6 required.
Add testing steps
ChangeLog update
remove unused vars
When working with persistent connections re-initialize options on each connection. Flags like error reporting may differ.
MFB
add env vars for test settings (like in PDO)
MFH
fix crash on shutdown on Win32 patch by Scott
MFH
synchronized range() behaviour in HEAD with 5_2
more smaller tests
MFH
divide array_search.phpt into several smaller tests
MFB
remove 32bit restriction
more smaller tests
more smaller tests
MFH
divide the test into several smaller ones
Remove dot at the end of the message
ChangeLog update
MF5 __HALT_COMPILER fix: Remove limitation of __HALT_COMPILER() that allowed only one instance per request.
more ksh fixes
ksh is a pita
fix test
fix test
Tests for constant initialisation
Tests constant initialisation
MFH:- Added PHP_CHECK_SIZEOF macro (special version of AC_CHECK_SIZEOF)
- Added PHP_CHECK_SIZEOF macro (special version of AC_CHECK_SIZEOF) # Now types like ptrdiff_t, ssize_t and intmax_t get defined to something # useful..
fix ZTS build
apply corrected fix fix tests
MFH: fix #41692 (ArrayObject shows weird behaviour in respect to inheritance)
fix #41692 (ArrayObject shows weird behaviour in respect to inheritance)
Unicode support
Implemented ++ and -- operations for unicode strings
BFN
add test
add test
MFB: fix #41813 (segmentation fault when using string offset as an object) patch by judas dot iscariote at gmail dot com
fix #41813 (segmentation fault when using string offset as an object) patch by judas dot iscariote at gmail dot com
Added persistent connection status checker to pdo_pgsql
ChangeLog update
fix ws & folding
fix ws & folding
fix ws & folding
add missing include and fix warning
MFB
fix tests as discussed
MFH: fix #41445 (parse_ini_file() has a problem with certain types of integer as sections)
fix #41445 (parse_ini_file() has a problem with certain types of integer as sections)
fix ws
MFH: fix #41795 (checkdnsrr does not support DNS_TXT type) patch by lucas at facebook dot com
fix #41795 (checkdnsrr does not support DNS_TXT type)
MFH
fix 'make test' on platforms with broken shells
ChangeLog update
fix test
fix test
fix #41773 (php_strip_whitespace sends headers with errors suppressed) MFB is not needed, output buffering in HEAD handles this situation correctly
MFH: fix #41711 (Null temporary lobs not supported)
fix #41711 (Null temporary lobs not supported)
MFH
cleanup test data
fix test
fix test
(forgotten part of fix)
Better fix for bug #41655
Better fix for bug #41655
Restore big exponent letter in var_export() ('1e300' -> '1E300')
Restore big exponent letter in var_export() ('1e300' -> '1E300')
ChangeLog update
MFB:fix memleak in sxe_prop_dim_read()
fix memleak in sxe_prop_dim_read() #found by coverity
ChangeLog update
Reverting test to original after dicsussion with Raghu. Will open bugzilla for Linux/VMware behaviour
Changed expected output so that this runs on Linux under VMWare as well as Linux.
- MFB: add test cases for #41655
- MFB: add test cases for #41655
New tests for file system handling functions
New tests for file system handling functions
ChangeLog update
fix #41765
fix #41765
New tests for file system handling functions
New tests for file system handling functions
New functons to compare stat array
New functons to compare stat array
Proper fix for bug #39215 Inappropriate close of stdin/stdout/stderr
Proper fix for bug #39215 Inappropriate close of stdin/stdout/stderr
no need to return exit status of the last fastcgi request
no need to return exit status of the last fastcgi request
ChangeLog update
ChangeLog update
bfn
new test
new test
final PCRE 7.2 release
final PCRE 7.2 release :-)
ChangeLog update
rephrase
mysql fix
New tests for file system handling functions
New tests for file system handling functions
rephrase
ChangeLog update
malloc+memset == calloc (sync with libgd)
- Re commit "sync with libgd: improve _gdImageFillTiled()", I reverted   it in my previous commit
- MFB: Drop useless tests (Daniel Diaz)
- Drop useless tests (Daniel Diaz)
- MFH: #41717, imagepolygon does not respect thickness   (sync with libgd)
- #41717, imagepolygon does not respect thickness   (sync with libgd)
- MFB: #41321, read error downgraded to E_NOTICE
ChangeLog update
MFH
ChangeLog update
MF5: Disallow characters that Cookie RFC does not allow in unquoted cookies
Disallow characters that Cookie RFC does not allow in unquoted cookies
MFB: sync with libgd: improve _gdImageFillTiled()
sync with libgd: improve _gdImageFillTiled()
upgrade PCRE to version 7.2 RC3 # I'll update to the final version early next week when its released
MFB: new tests #they pass here, but segfault on php 5.2/pcre 7.0
add tests for pcre 7.0 regression update to pcre 7.2 will follow soon
HTTP 500 is sent to browser in case of PHP error instead of blank page
HTTP 500 is sent to browser in case of PHP error instead of blank page
Prevent memory overflow
Prevent memory overflow
(wrong previous patch)
Prevent crash in case of wrong arguments to CRT functions (dtrftime()) on PHP complead by MS VC8
Prevent crash in case of wrong arguments to CRT functions (strftime()) on PHP complead by MS VC2005
ChangeLog update
New tests for file system handling functions
New tests for file system handling functions
- #41609, file_put_contents is not binary safe when a binary string is   given (make it consistent with fwrite&co when unicode=1)
upgrade to PCRE 7.2 RC3 add script to automate upgrade of the bundled PCRE lib
Tests are not valid if run by root - adding check to skip is user is root.
Tests are not valid if run by root - adding check to skip is user is root.
ChangeLog update
New tests for file system handling functions
New tests for file handling system functions
MFB: Handle very small longs via double
Handle very small longs via double
ChangeLog update
ignore tmp-php.ini
ignore tmp-php.ini
Display PCRE ini entries as part of module info
Display PCRE ini entries as part of module info
ChangeLog update
regroup
 New tests for file handling system functions
New testcase for get_defined_vars() function: get_defined_vars.phpt
New tests for file handling system functions
New testcase for get_defined_vars() function: get_defined_vars.phpt
New testcase for unset(), isset() and empty functions : 019.phpt
Update test
ChangeLog update
ChangeLog update
MFB
MFH
- fix "make test" issue with extension entries
MFH:- Added php_ini_loaded_file() function which returns the path to the actual   php.ini in use.
- Added php_ini_loaded_file() function which returns the path to the actual   php.ini in use. # there was only a function to return the _additional_ files in use..
ChangeLog update
bfn
MFH: fix #41561 (Values set with php_admin_* in httpd.conf can be overwritten with ini_set())
fix #41561 (Values set with php_admin_* in httpd.conf can be overwritten with ini_set())
fix tests
oops, empty properties are not allowed
MFB: fix #41504 (json_decode() incorrectly decodes JSON arrays with empty string keys).
news
MFH: enable statement cache for non-persistent connections (patch by Chris Jones)
enable statement cache for non-persistent connections (patch by Chris Jones)
adjust test for 64bit
fix test, add 64bit version
- #41630 entry
- MFB: #41630, fix segfault when an invalid color index is present in the   image data
ChangeLog update
Added missing error check inside bcpowmod().
MFB: Final shot at the date issue
Final shot at the date issue
- #41630, fix segfault when an invalid color index is present in the image   data
MFH: reset active_result_id when fetching persistent connection patch by Peter Christensen
reset active_result_id when fetching persistent connection patch by Peter Christensen
MFH: php_localtime_r() checks
php_localtime_r() checks
MFH: php_gmtime_r() fixes
php_gmtime_r() fixes
check return value of *time_r() functions for NULL more checks will follow
MFH: check return value of *time_r() functions for NULL
MFH: change E_NOTICE to E_ERROR when using a class constant from non-existent class (noticed by Jani) add tests
ChangeLog update
MFB: Adjust previous patch to work on all compilers
Adjust previous patch to work on all compilers
MFB: Optimize out a loop
Optimize out a loop
fix news
revert - already have unpack.phpt
add edge case test
MFH: improve the checks for integer overflow
improve the checks
MFB: Added missing format validator to unpack() function
Added missing format validator to unpack() function
improve the check
MFH
new fixes
fix the chunks fix
fix test format
fix test format
add some edge cases
add moneyformat test
add some edge cases
add test for moneyformat
New tests for file handling
fixed file permission for new empty file
New tests for file handling
fixed file permission for new empty file
fix gcov build..
fix gcov build for the 100th time..
MFH: minor optimization - make sure the objects are not the same instance before we start comparing their properties
minor optimization - make sure the objects are not the same instance before we start comparing their properties
more details
MFH: fix several integer overflows in GD
fix several integer overflows in GD
BFN + fix other entries
MFH: fix #41608 (segfault on a weird code with objects and switch())
fix #41608 (segfault on a weird code with objects and switch())
ChangeLog update
fix build
fix folding
fix folding
fix folding
fix folding
MFH
no readlink() on windows
enable display_startup_errors
fix test, add missing ones
add SET_VAR_ASCII_STRINGL()
fix HTTP_RAW_POST_DATA in Unicode mode
port the max_input_nesting_level ini option to Unicode mode
enable display_startup_errors, fix test
MFH: fix #41582 (SimpleXML crashes when accessing newly created element)
fix #41582 (SimpleXML crashes when accessing newly created element)
new test cases for general functions
New test cases for file system functions
new test cases for general functions
New test cases for file system functions
Added fill_buffer() function
Updated test output in line with changes to file.inc
Added fill_buffer() and fixed file_fill() to write binary data only
MFH: fix #41594 (Statement cache is flushed too frequently)
fix #41594 (Statement cache is flushed too frequently)
ChangeLog update
ignore *.gcno
ignore *.gcno
MFH
clean up temp file
missing ?> in skipif section
news entry
MFH: add missing open_basedir checks to CGI
add missing open_basedir checks to CGI
fix folding
change E_NOTICE to E_ERROR when using a class constant from non-existent class (noticed by Jani) add tests
no register_globals in HEAD
fix ws
fix ws
ChangeLog update
MFB: fix sprintf/printf %u tests so they work correctly on both 32-bit and 64-bit. (broken in previous fix)
fix sprintf/printf %u tests so they work correctly on both 32-bit and 64-bit. (broken in previous fix) # just made these EXPECTREGEX expressions, if there's a prefered way to comply with both 32/64 bit let me know.
fix test
fix test
add missing test
MFH
another missed ])
fix configure
- MFB: fix logic
- fix logic (goto is a gift, I should use it :)
- MFB: PECL #11216, addEmptyDir crashes if the directory already exists
- pecl bug #11216, better fix, leak removed and improved test - typo in news, better late than never (-d)
bug news
- PECL #11216 test
- PECL #11216, addEmptyDir crashes if the directory already exists
fix news
MFB: Corrected fix for CVE-2007-2872
Corrected fix for CVE-2007-2872
- MFH: @DOC add constants GD_MAJOR_VERSION, GD_MINOR_VERSION, GD_RELEASE_VERSION   GD_EXTRA_VERSION and GD_VERSION_STRING
- @DOC add constants GD_MAJOR_VERSION, GD_MINOR_VERSION, GD_RELEASE_VERSION   GD_EXTRA_VERSION and GD_VERSION_STRING - fix #ifdef else clause
MFH:- Improved the error message for exceeding max_input_nesting_level.
- Improved the error message for exceeding max_input_nesting_level.
MFB: Improved fix for MOPB-02-2007
Improved fix for MOPB-02-2007
MFH: Change printf %u behavior so that it does not truncate numbers at 32-bits.  (Reported by Aditya Agarwal.)
Change printf %u behavior so that it does not truncate numbers at 32-bits.  (Reported by Aditya Agarwal.)
ChangeLog update
- MFB: sx/sy must be > 0 and < INT_MAX
- sx/sy must be > 0 and < INT_MAX
- enable tests even when an external GD is used. Latest releases   (2.0.34 or 2.0.35) work.
ChangeLog update
fix test
fix test
MFH: - Add missing CXXFLAGS_CLEAN variable.
- Add missing CXXFLAGS_CLEAN variable.
MFH: fix #41518 (file_exists() warns of open_basedir restriction on non-existent file)
fix #41518 (file_exists() warns of open_basedir restriction on non-existent file)
MFH: fix #39330 (apache2handler does not call shutdown actions before apache child die)
fix #39330 (apache2handler does not call shutdown actions before apache child die)
fix several mis-spelled 'temporary's add missing space in comment, and change 'script end' to 'stub end' in manifest read error messages
ChangeLog update
fix folding
ChangeLog update
Back to dev
5.2.3
- Add -p to stub-set command
- Need to readd this but do it as a echo
- Minor fix
- This is not needed here
- Skip precommand 'phar.php' and keep a pre-built phar.phar in cvs
MFH
remove semicolons and make SunCC happy
fix test names
fix test names
- add missing cert (thx Tony)
fix test (second try)
fix test
MFH: fix lstat() function resolving symlinks
fix lstat() function resolving symlinks patch by Scott MacVicar
fix tests
set module in internal_function struct
check length only when it's specified add the same check to fgetss()
- version agnosticism (PECL/HEAD) - release 1.4 # you ignorants shall burn in hell
ChangeLog update
more typofixes
MFB
fix #41516 (fgets() returns a line of text when length parameter is <= 0)
fix typo & build
MFB
fix build on msvc 8
fix tests, add 64bit versions
- fix build where mhash.h is not declaring   mhash_get_hash_name_static and/or   mhash_get_keygen_name_static protos
fix tests
fix test
fix tests in unicode mode
fix test
fix tests
fix test
fix tests
fix tests
- Improve header of pharcommand
fix test
- Update with temp/copied files
- Precise dependencies
- Bug #41525 ReflectionParameter::getPosition() not available # This was supposed to be dropped in 5.1.4, I wonder why thisis not in # because the functionality is documented. # [ DOC ] Make sure the function documentation is correct for: # ReflectionParameter::getPosition # ReflectionParameter::getDeclaringFunction # ReflectionFunction::getExtension # ReflectionFunction::getExtensionName
fix typo
ChangeLog update
MFB
MFB
MFB
MFB
MFB
MFB
- Add make target for precommand
fix #41517 (different behaviour of floatval() in Unicode mode)
fix test names
fix test names
- Turn the loader into a stream wrapper if necessary
- Make compatible with PEAR/PHP_Archive CVS
- enable tests even when an external GD is used. Latest releases   (2.0.34 or 2.0.35) work.   NB: if you use Debian, you'll realize how bad their package is and start   to either use the source or push all patches I posted to their bugs   tracker
- fix test, requires binary string
- Add 'Stub-size' to info command
- Oops
- It is more unlikely to be looking for files named '0' or '1' and those   are also quite intuitive if seeing them as return value of the search.
- Actually allow pack -p optional for precommand
- Notice about missing class file when using pack -p optional
- Notice about missing class file when using pack -p optional
- WS
- Implement auto/optional for pack -p
- MFH:  - tests for #39217  - skip test if openssl is too old
- MFB: enable DSA key if HAVE_DSA_DEFAULT_METHOD is set
- skip if openssl is too old - MFB test bug41353.phpt
- MFH: add HAVE_DSA_DEFAULT_METHOD
MFH
Remove weird useless entries
MFH: fix logic
reorder
- Add target pharcmd as shortcut for ...phar.phar
MFH
use unsigned modifiers
Removed deprecated comment
Removed deprecated comment
ChangeLog update
MFH
"sapi/cgi/php" -> "sapi/cgi/php-cgi"
fix tests
MFB: fix #41236 (Regression in timeout handling of non-blocking SSL connections during reads and writes). Everybody please calm down, we can always fix such issues without starting a war..
the binary is called php-cgi now
The binary is called php-cgi now
- Add missing entry
MFH: add missing entries, these are in PHP_4_4 branch..
Adjust tests to reflect the new expected output
- Update
fix handling of &&amp; by htmlentities 'no-double-encode' expand the test cases
- Update
fix the new 'no-double-encoding' feature of htmlspecialchars()  (the length for char search was wrong. this could lead to crashes..)
make make_digest() output a 16-byte string so that it wont break the internal PHP API (it was breaking the SOAP extension)
MFH: add missing skipif sections
add missing skipif sections
fix news
check for required func
fix test
ChangeLog update
MFB(r-1.18.2.5.2.7) Use slprintf() instead of snprintf() - Bad Ilia, no biscuit for you.
ChangeLog update
Remove simple optimization here for now until we clean up this SAPI/TSRM mess.
MFH: Mention why short_open_tags is off (bug#37068)
Mention why short_open_tags is off (bug#37068)
Allow skipping hint_charset (fixes ext/standard/tests/strings/htmlentities18.phpt)
New tests for file/general_functions/strings
New testcaes for file/strings/general_functions
MFH: protos (patch by jeffg at activestate dot com)
- fix typo
- fix typo
Mention json nesting dept bump
This test should only test failures
Slightly cleaner code
Optimize sapi_get_request_time() slightly making it use the cached time and also checking if there is a server_context before trying to call the request_time sapi hook.
Optimize sapi_get_request_time() slightly making it use the cached time and also checking if there is a server_context before trying to call the request_time sapi hook.
ChangeLog update
Back to dev
5.2.3RC1
MFB:- Unify installation of SAPIs: CGI is no exception anymore.
- Unify installation of SAPIs: CGI is no exception anymore.
Make the code match the commit comment
MFB 5_2 - increase json parser depth from 20 to 128
I don't see any reason to leave the stack limitation at 20.  We have reports of this limit being hit now and as far as I can tell bumping it to 128 isn't going break anything in the parser code.
- Type was meant to be named typ on purpose - change back
MFB
- Allow build without flex/bison installed (fixes builddir != srcdir build   when using distributed sources which inlude pre-generated bison/flex   output. See bug #38762 for more..)
MFB 5_2
Uh, only meant to remove the null check, not the assignment
MFB 5_2
Avoid running off the end of a non-null terminated string.  Not that we should have any of those, but a mistake in an extension could hit this and the check doesn't actually make any sense as far as I am concerned.
Impoved error reporting on parser errors (Matt, Dmitry)
Impoved error reporting on parser errors (Matt, Dmitry)
-- Added the cli_cmd_inf_meta_del function back in.
ChangeLog update
Simplify code
ChangeLog update
new curl constants
fix tests
fix test
fix tests
fix test
Add entry about --ini
ignore *.gcno files (gcov)
New version of gettype_settype_basic.phpt,  gettype_settype_variation3.phpt, gettype_settype_variation7.phpt, gettype_settype_error.phpt, gettype_settype_variation4.phpt,  gettype_settype_variation8.phpt, gettype_settype_variation1.phpt,  gettype_settype_variation5.phpt, gettype_settype_variation2.phpt,  gettype_settype_variation6.phpt
New version of basename_basic.phpt  basename_error.phpt  basename_variation.phpt
New version of gettype_settype_variation1.phpt gettype_settype_variation6.phpt gettype_settype_variation2.phpt  gettype_settype_variation7.phpt      gettype_settype_variation3.phpt  gettype_settype_variation8.phpt gettype_settype_basic.phpt  gettype_settype_variation4.phpt gettype_settype_error.phpt  gettype_settype_variation5.phpt
New version of basename_basic.phpt, basename_error.phpt, basename_variation.phpt
Philip, the new phpdoc editor \o/
Ladies and gentelmens, I bring you our new documentation editor.... Philip Olson!
Update proto&arginfo for double_encode in htmlspecialchars()&htmlentities()
- add cve ref
MFH: improve variable name checks add more tests
improve variable name checks add more tests
MFB: max_input_nesting_level
Add max_input_nesting_level
[DOC] Added a 4th parameter flag to htmlspecialchars() and htmlentities() that makes the function not encode existing html entities. The feature is disabled by default and can be activated by passing FALSE as the 4th param
- Changed hardcoded "tempdb" database name to a constant
- Added constant TEMPDB, defaulting to "tempdb" # This constant is used by some of the tests and should point # to a database where the user has create proc|table permissions
- Changed hardcoded "tempdb" database name to a constant # This constant is defined in test.inc and defaults to "tempdb" # In certain setups, create procedure permissions may not be granted # in tempdb
MFH: fix #41442 (imagegd2() under output control)
fix tests
fix #41442 (imagegd2() under output control)
MFH(r-1.112) Add CURLOPT_TIMEOUT_MS and CURLOPT_CONNECTTIMEOUT_MS option constants
ChangeLog update
- Update
- Provide error function in base class - Add add and delete subcommands - Add -l to pack and add subcommands
- Make Pahr::loadPhar() and Phar::mapPhar() respect extract list
MFB: first check the SSL lib string in libcurl and then the header
- first check the SSL lib string in libcurl and then the header
MFH: fix #41455 (ext/dba/config.m4 pollutes global $LIBS and $LDFLAGS)
fix #41455 (ext/dba/config.m4 pollutes global $LIBS and $LDFLAGS)
libfcgi cleanup (Andrei Nigmatulin)
libfcgi cleanup (Andrei Nigmatulin)
use zend_make_string_zval() thanks Matt!
MFH
check if fci->object_pp points to NULL
ChangeLog update
- Update
- MFH Add print_htptr, print_htstr
- Add print_htptr, print_htstr
- This test needs to write
- Update copyright
- Make it executeable
ChangeLog update
- use the same checks for zip_stat
- #41423. PHP assumes wrongly that certain ciphers are enabled in OpenSSL
- #41423, PHP assumes wrongly that certain ciphers are enabled in OpenSSL
Optimized digest generation in md5() and sha1() functions by using code from ext/hash. This makes the functions 20-50% faster on short strings.
 - fix compiler/linker agnostic runpath switch
- fix compile/linker agnostic runpath switch
Eliminate memory allocation in RINIT for spl
Remove pointless RINIT
Avoid strlen()
- Better handling of alias = NULL
MFH
use correct constant
and now the right number
fix reference
ChangeLog update
reorder
news about #41401
fix unary operator precision (bug #41401)
fix test add separate test for 64bit
fix leak and check for < 0 only of the 5th arg was passed
fix leak and check for < 0 only of the 5th arg was passed
add test for 41401
add test for 41401
fix #41401 - parser precedence on unary operators # now 1/-2*5 is -2.5 as it should be
- Increment extension version
- Update TODO
- Make phar class optional, allowing PHP_Archive instead
- Add Phar::getAlias()
- Make alias optioal and return it in info command
fix #41432 (extract() does not accept empty prefix)
Improved compilation of heredocs and interpolated strings. (Matt)
Improved compilation of heredocs and interpolated strings. (Matt, Dmitry)
- Use the right variable name
MFB syscall optimizations # boredom on the plane to China...
MFH: fix #41430 (Fatal error with negative values of maxlen parameter of file_get_contents())
fix #41430 (Fatal error with negative values of maxlen parameter of file_get_contents())
BFN
MFH: fix #41421 (Uncaught exception from a stream wrapper segfaults)
fix #41421 (Uncaught exception from a stream wrapper segfaults)
fix tests
fix tests
Get rid of a stray time() syscall in tsrm and clean up lcg rinit
fix tests
fix tests
- Add Phar::isValidPharfilename() really
- Update package to version 1.2.0
- Drop RINIT completely (as discussed @ php|tek)
- Update todo - Drop EXPERIMENTAL
ChangeLog update
fix gcov build.......
add test
zend_make_printable_zval -> zend_make_string_zval
use zend_make_string_zval(), we want to see the notices
fix test
news entry
implement FR #41416 (getColumnMeta() should also return table name)
fix test
Get rid of a useless RINIT and an empty RSHUTDOWN on non-Windows
ChangeLog update
- Get rid of RINIT completely
- Reduce overhead of Phar's RINIT
- Include 'class Phar extends PHP_Archive {}' when using -p
- Add support to include PHP_Archive when using pack
- fix title
- fix title
- Update after conference discussions
- BFN
MFB: r1.28.2.3.2.4
- fixed bug #41358: configure cannot determine libcurl's SSL lib as of v7.16.2
Updated range() test
Updated range() test
Upgraded libsqlite3 to SQLite 3.3
Make test work in sqlite
- Add ability to extract a single value from info command
- Add -k to meta-* commands
typofix
MFB: PDO:FETCH_KEY_PAIR
news
[DOC] Added PDO::FETCH_KEY_PAIR mode that will fetch a 2 column result set into an associated array.
- Add -k to support direct metadata array-key extraction
- MFH Extensions are indexed lowercased and not case aware
- Extensions are indexed lowercased and not case aware
MFH: fix #41394 (dbase_create creates file with corrupted header)
fix #41394 (dbase_create creates file with corrupted header)
MFH: fix #41403 (json_decode cannot decode floats if localeconv decimal_point is not '.')
fix #41403 (json_decode cannot decode floats if localeconv decimal_point is not '.')
do not send cookie when session is passed in URL, same as it happens with GET/POST
ChangeLog update
do not send cookie when session is passed in URL, same as it happens with GET/POST
- Quickly reorganized some of the arguments array syntax.
- Use Phar::isValidPharFilename - Better output of compression ratio - Add ability to work on global metadata - Minor updates
- Add forward declaration
- Add Phar::delMetadata() - Add Phar::hasMetadata() - Add Phar::isValidPharFilename()
- Add Phar::delMetadata() - Add Phar::hasMetadata() - Add Phar::isValidPharFilename()
- Add compression ratio to info command
- Add help-list command
- Align output of info command
- Better hint that you can get help to a specific command
- Add auto compression mode to phar command and use it in Makefile.frag - Allow parameter types to be based on select type - Allow to use compress command for selected entries
fix test
fix tests
add the original author of the patch
ChangeLog update
- Drop commented line
- Optimize flushing, don't generate metadata twice
- Unoptimized fix for metadata writing
News file cleanup
- Phar version 1.2.0+ requirement allows some simplifications
- Require phar version 1.2.0+
- Update
- Add Phar::getSupportedCompression()
- Only show available hash algorithms
- Flush on changes
MFB: Typo from old parsing API spotted by bjori
Prefix NEWS item so documentation team know of new function and typo from old parsing API spotted by bjori
- Add new test
- Update
- Add -h to command pack - Rename commands   . setstub to stub-set   . getstub to stub-get - Make -s to stub-get/set optional and use stdout/in as default - Add a few commands   . compress   . info   . meta-set   . meta-get   . meta-del   . sign
- Add help <command> - Allow commands to have '-' in their name
- Add PharFileInfo::hasMetadata() & delMetadata()
- Add -h sha1 to target phar.phar
MFB: Add mysql_set_charset() so that the connection encoding can be changed. This is similar to the SET NAMES statement but allows the mysql_real_escape_string to use the correct character set.
Add mysql_set_charset() so that the connection encoding can be changed. This is similar to the SET NAMES statement but allows the mysql_real_escape_string to use the correct character set.
- Add ability to specify hashing
fix test
fix tests, add UEXPECTF
allow passing Unicode strings when a boolean is expected
MFH
use estrdup() and plug the leak
MFB: free wholetext properly
free wholetext properly
BFN
fix CS
remove floats, their text representation varies depending on many factors
add 64bit tests
fix precision
fix tests - make them 32bit only, 64bit version will be later add --INI-- section remove recursive arrays, that thing should be in a separate test
- [@DOC] MFH: #41326, better fix. It restores BC and allows both canonical   and short form:   - when $content is given, the closing tag will be generated (even for empty   string)   - when $content is ignored or NULL is given, the short form will be used
- [@DOC]#41326, better fix. It restores BC and allows both canonical and short   form:   - when $content is given, the closing tag will be generated (even for empty   string)   - when $content is ignored or NULL is given, the short form will be used
ChangeLog update
ChangeLog update
MFH: bug#41361 (shell_exec() does not find binaries)
New version of 019.phpt
- Handle regex parameters in clicommand
New version of debug_zval_dump_b.phpt, debug_zval_dump_v.phpt, is_float.phpt, is_numeric.phpt, is_string.phpt, var_dump.phpt, debug_zval_dump_e.phpt, is_array.phpt, is_int.phpt, is_object.phpt, print_r.phpt, debug_zval_dump_o.phpt, is_bool.phpt, is_null.phpt, is_scalar.phpt, strval.phpt
New version of addcslashes.phpt, implode1.phpt, strpos.phpt, str_replace.phpt, substr_count.phpt,  trim1.phpt, chr_ord.phpt, md5_file.phpt, str_repeat.phpt, strstr.phpt, substr.phpt
- Add get/setstub commands to phar.phar
- Impprove cli_wordwrap() make it respectstart of initial line correctly
New version of 005.phpt, array_keys.phpt, array_values.phpt, extract.phpt, 009.phpt, array_map.phpt, each.phpt, array_change_key_case.phpt, array_pop.phpt, end.phpt, array_key_exists.phpt,  array_search.phpt, extract.php
New version of debug_zval_dump_b.phpt, is_array.phpt, is_null.phpt,     is_string.phpt, debug_zval_dump_e.phpt, is_bool.phpt, is_numeric.phpt,  print_r.phpt, debug_zval_dump_o.phpt, is_float.phpt  is_object.phpt, strval.phpt, debug_zval_dump_v.phpt, is_int.phpt, is_scalar.phpt, var_dump.phpt
New version of addcslashes.phpt, md5_file.phpt, str_replace.phpt, substr.phpt, chr_ord.phpt, strpos.phpt, strstr.phpt, trim1.phpt, implode1.phpt, str_repeat.phpt, substr_count.phpt
New version of 005.phpt, array_change_key_case.phpt, array_key_exists.phpt, array_keys.phpt, array_map.phpt, array_pop.phpt, array_search.phpt, array_values.phpt, each.phpt, end.phpt, extract.phpt
New version of 009.phpt
ChangeLog update
- More wrappingfor indented stuff
- Provide working wordwrap for command help
- Provide working wordwrap for command help
- Update
- Finish adding -i & -x to extract command
- Readd 1.1.0 to history
- Simplify argument handling - Add -i & -x to commands list & tree
- Add rule for phar.phar to Makefile.frag
- Change -x to -i (include) so that -r can become recursive
MFH: remove warnings in resource dtor
remove warnings in resource dtor
BFN
MFH: fix #41134 (zend_ts_hash_clean not thread-safe) fix also zend_ts_hash_*destroy()
fix #41134 (zend_ts_hash_clean not thread-safe) fix also zend_ts_hash_*destroy()
BFN
MFH: fix #41351 (Invalid opcode with foreach ($a[] as $b))
fix #41351 (Invalid opcode with foreach ($a[] as $b))
ChangeLog update
- Add new helper class
- Sort commands
 - MFH Add invert option to RegexIterator
-Addvert optionto RegexIterator
- Allow to easily exclude file by regular expression
- Make remainder arguments be typ-agnostic - Remove debug message
- WS
- CS
- Add extract command
MFH: fix segfault in strripos() when offset == INT_MAX+1 identified and repoted by Joxean Koret
fix segfault in strripos() when offset == INT_MAX+1 identified and repoted by Joxean Koret
add missing header
%d -> %ld
- Update phar command
MFB
- Add phar.phar command input files
MFB - use php_strtok_r() rather than strsep()
- Extend help command
MFH: flush output buffer when/if highlight_string()/php_strip_whitespace()/highlight_string() fail
flush output buffer when/if highlight_string()/php_strip_whitespace()/highlight_string() fail
MFH: fix segfault in iptcembed()
cleanup temp test data
fix segfault in iptcembed()
MFH: bcmath.scale must be greater or equal to zero
bcmath.scale must be greater or equal to zero looks like negative value cannot cause any problems, but it's still invalid
ChangeLog update
- Update make pack work (well more or less)
- This is version 1.2.0 now due to fix of Phar::canWrite()
ChangeLog update
- Reorganize   . Move parsing arguments into new CLICommand   . Move analyzing the handler class into CLICommand   . Derive PharCommand from CLICommand   . Provide specific argument parsing in PharCommand
- Provide nice little phar command, inital version, not yet fully working
- MFH: #41326, Writing empty tags with Xmlwriter::WriteElement[ns]
- #41326, writing empty tags with Xmlwriter::WriteElement[ns]
ChangeLog update
Register RAW_POST_DATA even when always_populate_raw_post_data is off in instances where content type is not known
fix tests (add precision)
fix tests
fix tests
fix tests
fix tests
fix test
fix test
Added support for --GZIP_POST-- and --DEFLATE_POST-- that allows emulation of compressed POST input
fix test names
fix test names
fix test names
fix test names
update pcre symbols list
fix test title
fix test title
update bundled PCRE to version 7.2 RC1. if everything goes right, this will be merged later to php 5.x
- MFH: fix build when use with a museum freetype version (1.x)
- fix build when use with a museum freetype version (1.x)
add 64bit version of the tests
add 64bit version of the tests
fix tests
fix tests
fix test
fix test
ChangeLog update
Allow SOAP extension's handler() to work even when always_populate_raw_post_data is off.
Added HTTP_RAW_POST_DATA test for instances where post length exceeds post_max_size.
Added $HTTP_RAW_POST_DATA test
Clarify bug fix details
ChangeLog update
fix tests, add more
fix tests, add more
MFH
fix test on systems where php.ini has something else than default settings
- MFH --ri does not require ext/Reflection - MFH --ini to show ini files being used
- output handler buffers are always binary, thanks Johannes
- Update version in error message as well
- Simplify/use consts
ChangeLog update
MFH
check GMP version and skip the test if it's <= 4.2.1
- WS/CS
MFH:- Prevent bugs like #41265 being submitted from now on.
- Prevent bugs like #41265 being submitted from now on.
BFN
BFN
MFB: fix bug #41257 (lookupNamespaceURI does not work as expected) fix related issue in isDefaultNamespace add test reconcile namespaces when setting attribute in a new namespace
fix bug #41257 (lookupNamespaceURI does not work as expected) fix related issue in isDefaultNamespace add test reconcile namespaces when setting attribute in a new namespace
MFB: Update Apache 2 libs to 2.0.59 on the build box and standardize the dirs
Update Apache 2 libs to 2.0.59 on the build box and standardize the dirs
use the new 's&' parameter type and simplify the code
get ride of warnings (different signdess)
ws
fix comments
fix comments
add tests
new tests
fix disabled classes
fix arrays with NULL keys in Unicode mode
MFH
fix spelling
merge one more missing patch from 5_2 thank you for not doing MFB
MFH
fix "checking checking" noticed by Mikko
MFH
fix machine dependent test
ChangeLog update
improve test
improve test
ChangeLog update
Back to dev
5.2.2
add SKIPIF section
MFH: add USE_ZEND_ALLOC env var
this test is only valid when Zend MM is enabled
make USE_ZEND_ALLOC env var available in SKIPIF section
fix build when ext/hash is compiled as shared module
New test
New test
ChangeLog update
Removed completed TODO items
- MFH: Added test case for bug #41252.
- Added test case for bug #41252.
ChangeLog update
Remove quotes
MFH: initialize optional params
initialize optional parameters
BFN
- Add new test
Sync correctly with configure.in
make concatenating two binary strings a special case
ChangeLog update
MFB: Sync with zlib
Sync with zlib
ChangeLog update
typofix..and exactly HOW or WHAT in commandline handling was fixed?
- Updated credits
this case is handled in convert_to_unicode(), no need to duplicate it
convert non-strings to unicode in unicode mode
add new tests
add new tests
ChangeLog update
add new tests
add new tests
fix typo (Z_USTRVAL_P -> Z_USTRLEN_P) and CS
Sync with configure.in
MFH: improve the tests
improve the tests
MFH: initialize retval_ptr_ptr before returning FAILURE this fixes invalid read in #41209
initialize retval_ptr_ptr before returning FAILURE this fixes invalid read in #41209
ChangeLog update
fix tests add test for yet not merged fix
fix tests
fix tests
MFH
add Id tag
Back to dev
5.2.2RC2
MFH: fix build on Tru64
fix build on Tru64
Set CG(literal_type) for backticks.
MFH: add test & GMP_VERSION constant do not allow zero operand in gmp_divexact()
Prevent double close() of the same file handle
Prevent double close() of the same file handle
remove highlight.bg
removed unused highlight.bg ini option
ChangeLog update
Update TODO: filter extension was added
add GMP_VERSION constant add test do not allow zero operand in gmp_divexact()
ZTS fix
ZTS fix
fix ZTS build
- Don't pick up php.ini from cwd on BSDs - "Resolve" (with the help of $PATH) to /path/to/php and pick up 	the php.ini from there
MFH: php --ri main
rename --ri core to --ri main # "the man has spoken"
> date: 2006/12/09 22:18:42;  author: wez;  state: Exp;  lines: +14 -6 > merge PHP 5 pdo into HEAD.  This source compiles on both PHP 5 and PHP 6. > If you're poking around in here, please make sure that any changes you make > compile on both PHP 5 and 6.  Thanks!
ChangeLog update
- fix compile warning
ChangeLog update
Add the ability to display the core ini entries via "php --ri core"
- Keep unicode.semantcis for SKIPIF
- MFH: Add my name (sync to CREDITS file)
- Add my name (sync to CREDITS file)
- Rephrase as suggested by Chris Jones
- Add 'php --ini' to CLI which returns the INI file/dir configuration
MFH: Plug leak when trying to write via the http wrapper
Plug leak
Bug fixing news
[DOC] add gmp_testbit() function tests if the specified bit is set and returns false/true
MFH: add CURLOPT_FTP_CREATE_MISSING_DIRS
add CURLOPT_FTP_CREATE_MISSING_DIRS
Order by bug id
MFH
there are definitely no problems found if all tests passed
MFH: fix long options
fix long options
MFB fix for #41034 add missing tests
64-bit support
WIN64 support
fix folding
fix folding
64-bit support
WIN64 support
revert
revert
revert
revert
ChangeLog update
BFN
MFH: fix #41118 (PHP does not handle overflow of octal integers)
fix tests
fix [l]trim() in unicode mode
- MFH Update docu
- Update docu
- BFN
- MFH getopt fixes
- Add new test
ChangeLog update
ChangeLog update
fix tests
open the file in text mode and avoid downcoding
fix tests
fix test
avoid 10 000 warnings
fix tests
fix timezone_abbreviations_list() in unicode mode
make this test 32bit only
fix gcov build
update install instructions (auto-generated from phpdoc XML sources)
apply correct fix
fix test
fix test
new test
new test
MFH
update ext/gmp status and maintainers
fix test
fix test
MFH
this test is for 32bit
ChangeLog update
Use ZEND_U_CONVERTER().
fix #41118 (PHP does not handle overflow of octal integers) MFB a small part of optimization patch applied only to 5_2
The right place to edit
Hmm, the right place to edit
Update credits line
Update credits
fix gmp_gcdext() in Unicode mode
fix double-to-string conversion utils
fix & unify double-to-string conversion utils
- fix vpath build
- fix vpath build
ChangeLog update
Upgraded SQLite 3 to version 3.3.16
new tests for ext/gmp
add new tests for ext/gmp
MFH
same for gmp_scan*()
MFH
do not allow negative byte index tests will follow soon
- fixed bug #40325 (Vary: header missing in gzip output handlers); no MFH   [DOC] since PHP 6 a Vary header will be sent without regards to whether         the negotiation was successful or not and unless the complete         output buffer gets discarded
update to reflect current status
update EXTENSIONS file: - drop extensions which have been moved to PECL - add pdo*, zip, xmlreader, xmlwriter, json - update maintainers lists and statuses to reflect current situation
MFB: add file locking under windows change win build to use common clock compat files
add file locking under windows change win build to use common clock compat files
more test fixes
win32 test fixes
ChangeLog update
MFH: fix putenv("var") (i.e. unset) on BSD systems add test
fix putenv("var") (i.e. unset) on BSD systems add test
fix test
fix test
add .cvsignore
add .cvsignore
add tests for CGI
add tests for CGI
MFB
MFH: fix leak appearing when more than one -f option specified
fix leak appearing when more than one -f option specified
Add support for CURLOPT_TIMEOUT_MS and CURLOPT_CONNECTTIMEOUT_MS
fix leaks in row_get_properties() thanks to Kellen Bombardier for noticing
- INFO_EX not INFO
- +ZEND_BEGIN_ARG_INFO_EX not _INFO (thx bjori)
- imagegrab* entry
- MFH: add imagegrabwindow and imagegrabscreen (win32 only) [DOC]   capture a window using its handle or a full screen
Separate parm zval.
- fix arginfo
- add imagegrabwindow and imagegrabscreen (win32 only)   capture a window using its handle or a full screen   optional bbox and to/from clipboard  will follow shortly
Updated testcase ltrim()
typo
typo
ChangeLog update
MFB:- Updated bundled shtool to 2.0.6 and added "platform" command in it.
- Updated bundled shtool to 2.0.6 and added "platform" command in it.
MFB (handling of control characters)
MFB use strlcat() fix buffer overrun & bug #41101
WIN64 support
fix test
fix test
fix test
WIN64 support
fix fold typo
ChangeLog update
MFH: Simplify previous patch.
MFB: Allow using syntax highlighting in fastcgi mode
MFB: sync getopt from CLI
- Allow using syntax highlighting under FastCGI mode.
- Synch these files from sapi/cli/ and allow using s.c. long-options   with CGI.
ChangeLog update
- add reference to the initial report (helps the packager)
- MFH: libgd #74, gdImageFilledArc, huge CPU usage with large angles
-  libgd #74, gdImageFilledArc, huge CPU usage with large angles
use default socket (removed by mistake?)
MFH
set MYSQL_OPT_RECONNECT (see bug #41083)
MFH: fix #41083 (mysql_ping() requires MYSQL_OPT_RECONNECT to be set since MySQL 5.0.13)
fix #41083 (mysql_ping() requires MYSQL_OPT_RECONNECT to be set since MySQL 5.0.13)
ChangeLog update
- MFB: Updated timezone database to version 2007.5. (Derick)
- Updated timezone database to version 2007.5. (Derick)
BFN
fix #41075 (memleak when creating default object caused exception)
fix #41075 (memleak when creating default object caused exception)
add UEXPECTF
add new test
new test
fix tests
MFB: reverting incorrect changes to pack test # only a problem on darwin, latest gcc-4.2 branch works as expected.
reverting incorrect changes to pack test # only a problem on darwin, latest gcc-4.2 branch works as expected.
ChangeLog update
MFH: add support for %I64(u|d) to sprintf() utilities
add support for %I64(u|d) to sprintf() utilities
- Prepare release 1.1.0
- Add test
bail out if unicode.semantics is On (stream_select() is unable to cast Unicode streams to FDs) check stream_select() return value correctly and avoid endless loop
return success only if succeeded casting at least one stream to fd
add new test and SKIPIF sections
MFH
swap the options
add missing SKIPIF sections
add new test
MFH
add short descriptions for PCRE ini options
ChangeLog update
MFB
minor improvement
improve test
improve test
Don't define KEY_END twice
added support for HOME and END key
MFH
we don't ship libmysql anymore, so there is no need for this message
- add HAVE_GD_FONTMUTEX and HAVE_GD_FONTCACHESHUTDOWN to win32 build
new tests: array_merge, array_push, fprintf. modified tests: count_recursive, md5.
- add HAVE_GD_FONTCACHESHUTDOWN to w32 build script (always here)
fix #41048 (PHP6 Segmentation fault issue)
ChangeLog update
Wrong locale name.
Back to dev
MFB: fix #40931 (open_basedir bypass via symlink and move_uploaded_file())
5.2.2RC1
fix #40931 (open_basedir bypass via symlink and move_uploaded_file())
skip test if openssl is present
skip test if openssl is present in this case the error messages are different
skip this test on MacOS
skip this test on MacOS
fix test name
fix #41043 (pdo_oci crash when freeing error text with persistent connection)
- MFB Synch
- WS/CS
- Cleanup the cleanup
declare THREADSAFE explicitly (it's On if undefined)
fix test
fix test
MFH: fix #41037 (unregister_tick_function() inside the tick function crash PHP)
fix #41037 (unregister_tick_function() inside the tick function crash PHP)
MFB
Initial WIN64 support
Initial WIN64 support
ChangeLog update
fix folding tags
Upgrade libsqlite 3 inside PDO sqlite to version 3.3.15
Removed wrong size_t definition
Removed wrong size_t definition
ZTS fix
Usage of sizeof(void*) is not portable
ZTS fix
BFN
fix #41026 (segfault when calling "self::method()" in shutdown functions)
new test
ChangeLog update
MFB: fix #40999 (mcrypt_create_iv() not using random seed)
MFB: Avoid locks when appening to the error log file
- MFH: Added linenumbers to array returned by token_get_all()
- Added linenumbers to array returned by token_get_all()
ChangeLog update
MFB: clean & refactored disk_*() funcs implementation Ilia, feel free to make these functions public, though I don't see why would want to do that
- Add a helper
fix test
fix test
MFB
We can't use the printf attribute here since we are supporting non-standard formats (like 'F').
- MFB #40091 fix
Apologies. Didn't realize we were using custom snprintf().
Typo?
- Add bug name
- Better fix for #40091
Avoid locks when appening to the error log file
ChangeLog update
- MFH zend_info_call_*() stuff, fixes coverity issue #328, noticed by tony
fix win32 build
fix win32 build
- depends on 2.0.34
- reflect the "real" version to avoid confusions. Users should really use   only the bundled version
- MFB: import the right data 005_crt.txt
MFH: fix build
fix build without FreeType
- MFH: add missing data for 005.phpt
fix build & test improve coding style
fix test
fix ZTS build
ChangeLog update
- nuke c++ comments
- #39867 and openssl MB fix
- filter and gd entries
- MFB: #40947, allow a single filter as argument for filter_var_arra
- #40947, allow a single filter as argument for filter_var_array
MFH: fix #40998 (long session array keys are truncated)
fix #40998 (long session array keys are truncated)
- Update TODO, we most likely release current state as 1.1.0
Sync with mail function in mb_send_mail function(problem MOPB-33-2007:PHP and MOPB-34-2007:PHP).
Sync with mail function in mb_send_mail function(problem MOPB-33-2007:PHP and MOPB-34-2007:PHP).
MFB: fix race condition on font cache shutdown
fix race condition on font cache shutdown
- MFH:  - do not try to use the global color map when none was found (Nuno, Pierre)  - free im on error
- do not try to use the global color map when none was found (Nuno, Pierre) - free im on error
MFH: fix leak on error
fix leak on error
- MFH: don't declare MSHUTDOWN if both cachesetup and t1lib are not used
- fix previous commit (missing #ifdef in shutdown declaration) - MFB:  - Sync with gd 2.0.35 (bug #52, #60 and #66)   - Improve TS of gif loading code (Roman Nemecek, Nuno, Pierre)   - a frame size must be confined to the screen defition (Pierre)   - be sure to always read the dimensions in the frame and does not use     the screen size (see #66 for a side effect) (Pierre)   - Update #37360 test. The frame does not fit the logical screen (specs     tell that it must fit) (Pierre)
- Sync with gd 2.0.35 (bug #52, #60 and #66)  - Improve TS of gif loading code (Roman Nemecek, Nuno, Pierre)  - a frame size must be confined to the screen defition (Pierre)  - be sure to always read the dimensions in the frame and does not use    the screen size (see #66 for a side effect) (Pierre) - Update #37360 test. The frame does not fit the logical screen (specs   tell that it must fit) (Pierre)
ChangeLog update
- MFH:  - remove double lock (tween colors cache is created in each thread, the    cache mutex is already locked earlier)  - #40858, other TS improvements for gd freetype cache management    cache initialization and shutdown is now done in MINIT and MSHUTDOWN.
- remove double lock (tween colors cache is created in each thread, the   cache mutex is already locked earlier) - #40858, other TS improvements for gd freetype cache management   cache initialization and shutdown is now done in MINIT and MSHUTDOWN.
Addres limitation of __HALT_COMPILER() that allowed only one instance per request.
- MFB: colors allocated henceforth from the resulting image overwrite 	the palette colors (sync with 2.0.34) (Rob Leslie)
. colors allocated henceforth from the resulting image overwrite   the palette colors (sync with 2.0.34) (Rob Leslie)
BFN
MFH: fix #39351 (relative include fails on Solaris)
fix #39351 (relative include fails on Solaris)
MFB: correction for previous fix to bug #38770 (pack/unpack is broken on 64bit) fix pack test, correct space to tabs
correction for previous fix to bug #38770 (pack/unpack is broken on 64bit) fix pack test, correct space to tabs
MFB: allow registered classes to be changed
allow registered classes to be changed
Fugbix typo.
Removed undocumnted and incomplete support for strings in list() operator
ChangeLog update
fix #33664
fix for #33664 Console window appears when using exec()
fix for #33664 Console window appears when using exec()
MFB- 64bit test
- 64bit test
MFB:- Make this 32bit only test. (will add 64bit version next)
- Make this 32bit only test. (will add 64bit version next)
MFB52:- Changed phpinfo() to make difference between set php.ini path and what was actually loaded.
- Changed phpinfo() to make difference between set php.ini path and what was actually loaded.
ChangeLog update
ChangeLog update
new test
new test
ChangeLog update
Add missing #if check
add news entry + minor text fixes
MFH: fix PECL bug #10194 (crash in Oracle client when memory limit reached in the callback) preallocate the required buffer, so that it would fail earlier.
fix #10194 (crash in Oracle client when memory limit reached in the callback) preallocate the required buffer, so that it would fail earlier.
ChangeLog update
Oracle seems to return non zero terminated strings or strings with only 1 zero at the end in Unicode mode surely u_strlen() doesn't like it, so lets use OCIStringSize() and avoid u_strlen()
Improved FastCGI SAPI to support external pipe and socket servers on win32
Improved FastCGI SAPI to support external pipe and socket servers on win32
new ltrim, rtrim and str_pad tests
New tests for ltrim, rtrim, str_pad
drop deprecated funcs and change error level to E_WARNING
add .cvsignore
add .cvsignore
MFH: fix #40392 (memory leaks in PHP milter SAPI)
fix #40392 (memory leaks in PHP milter SAPI) we should have dropped this SAPI years ago
New ucfirst() test.
new test for printf
New tests for printf and ucfirst
MFH: fix compile warning
fix compile warning
Three new string tests for funtions strcasecmp, strcmp and strlen.
ChangeLog update
- Compatibility with suhosin
- MFH Allow to load multipe extensions via -d
- Allow to load multipe extensions via -d
- Update package info
MFH: fix compile warning
fix compile warning
fix compile warning
ChangeLog update
- Split TODO
BFN
MFB: fix bug #37386 (autocreating element doesn't assign value to first node) all single SimpleXMLElements are addressable using offset 0 use correct node for xpath context node add test
fix bug #37386 (autocreating element doesn't assign value to first node) all single SimpleXMLElements are addressable using offset 0 use correct node for xpath context node add test
- Prevent rename on extracted archieves
fix memleak in external dirs update package.xml move API to 1.1.0 update package version to 1.1.0RC1 update API test
fix extra extsrcrelease tags
as Marcus said: "don't we need this for bz2?" :)
MFH: fix #40915 (addcslashes unexpected behavior with binary input)
fix #40915 (addcslashes unexpected behavior with binary input)
MFB
ChangeLog update
fix tests, add missing break to setSignatureAlgorithm()
update note
update package.xml
add tests for signature algo
[DOC] implement setSignatureAlgorithm() and add class constants Phar::MD5, Phar::SHA1, Phar::SHA256, Phar::SHA512, Phar::PGP
default must be SHA1 or we get a BC break
add <providesextension> to the hash dep so it can be built statically as well
- Add general SHA-2 support by optional pecl/hash dependency # We actually need support to select the signature type somehow
- Use package.php for the first time
new package generator
typo
- Add ini: phar.extract_list - Add Phar::getExtractList - Both allow to set a mapping <phar-file> to <extract-dir> [[DOC]]
- MFH Need to install headers
- Need to install headers
Typo
MFB:- Check if Makefile.frag actually exists before running sed on it.
- Check if Makefile.frag actually exists before running sed on it.
ChangeLog update
- MFH Drop double variable declaration
- Drop double variable declaration
ChangeLog update
MFB: fix MOPB-29 - unserialize modifier S does not calculate length correctly
regenerate to fix gcov build. plus use re2c bitvectors
fix MOPB-29 - unserialize modifier S does not calculate length correctly
fix MOPB-29 - unserialize modifier S does not calculate length correctly # reported by Stefan Esser
fix comment
fix comment - guard system changed
Replaced all instances of ldap_get_values() with ldap_get_values_len(), which returns back the length of the data so on non-NULL terminated data we don't crash in a strlen(). Removed the PHP function ldap_get_values() since it's the same thing as ldap_get_values_len() now and made it alias ldap_get_values_len(). This should fix some random PHP<->LDAP crashes
export the module guy in the external dll version of the build
fix typo and bug #40898
ChangeLog update
Added -- test case
Replaced all instances of ldap_get_values() with ldap_get_values_len(), which returns back the length of the data so on non-NULL terminated data we don't crash in a strlen(). Removed the PHP function ldap_get_values() since it's the same thing as ldap_get_values_len() now and made it alias ldap_get_values_len(). This should fix some random PHP<->LDAP crashes
update for 1.0.0 release
rename begin/isFlushingToPhar/commit to startBuffering/isBuffering/stopBuffering
ChangeLog update
Add php_pdo_sqlite_external.dll to windows build. This allows the user to provide their own version of sqlite3.dll. The php_pdo_sqlite.dll is still there, and will continue to be there. It is built from the bundled sources. [[DOC]]  (this should cc: phpdoc, if it's wrong, please let the docs folks know :-)
minor typo s/whetehr/whether/
- Revert this patch, as the code was incorrect. - It was also not committed to HEAD.
ChangeLog update
- MFH Optional dependency for SPL must be specified in header
- Optional dependency for SPL must be specified in header
BFN
MFH: fix shmop_open() with IPC_CREAT|IPC_EXCL flags on win32
fix shmop_open() with IPC_CREAT|IPC_EXCL flags on win32
Added ability to encode arrays with "SOAP-ENC:Array" type instead of WSDL type. To activate the ability use "feature"=>SOAP_USE_XSI_ARRAY_TYPE option in SoapClient/SoapServer constructors.
Added ability to encode arrays with "SOAP-ENC:Array" type instead of WSDL type. To activate the ability use "feature"=>SOAP_USE_XSI_ARRAY_TYPE option in SoapClient/SoapServer constructors.
Improved Zend Memory Manager to guarantee reasonable time for worst cases of best-fit free block searching algorithm.
Improved Zend Memory Manager to guarantee reasonable time for worst cases of best-fit free block searching algorithm.
ChangeLog update
add folding tags
MFB
new test
new test
MFB: Make DLL only once (Wez)
Make DLL only once (Wez)
ChangeLog update
BFN
MFH: fix bug #40836 (Segfault in ext/dom) add test
fix bug #40836 (Segfault in ext/dom) add test
MFB, #40848
BFN, #40848
fixes #40848
ChangeLog update
MFH: fix #40794 (ReflectionObject::getValues() may crash when used with dynamic properties)
fix #40794 (ReflectionObject::getValues() may crash when used with dynamic properties)
fix tests
fix tests
ChangeLog update
fix spprintf usage
clarify
array_user_key_compare() fix
add test
Changed %d to %i in EXPECTF
new test cases for string functions
BFN
MFB: fix #40805 (Failure executing function ibase_execute())
MFB: Fugbix typo.
Fugbix typo.
ChangeLog update
fix #40805 (Failure executing function ibase_execute())
BFN
fix #40815 (using strings like "class::func" and static methods in set_exception_handler() might result in crash)
new test
reset the exception if it's still NULL
ChangeLog update
MFH: remove unnecessary warning in case of exception
don't emit any warnings in addition to an exception
MFH: fix #40750 (openssl stream wrapper ignores default_stream_timeout)
fix #40750 (openssl stream wrapper ignores default_stream_timeout)
- leak in extract
- add ::open to the safemode check entry
- MFH: openbasedir and safemode check in ::open()
- add openbase_dir checks in ::open and addFile()
- MFB: Changed expected output # select getdate() returns something like "Mar 14 2007 12:44PM", we # were checking for one additional (nonexistant) whitespace after "Mar" # which was wrong. Don`t know when and how this changed
- Changed expected output # Due to var_export() & __set_state() changes
- MFB: Changed message handler also to handle message #11021 - Adjusted expected output # Seems newer Sybase versions yielf different error codes for getdate(NULL)
BFN
MFH: fix #40800 (cannot disable memory_limit with -1)
- Changed message handler also to handle message #11021 - Adjusted expected output # Seems newer Sybase versions yielf different error codes for getdate(NULL)
fix #40800 (cannot disable memory_limit with -1)
- Changed expected output # select getdate() returns something like "Mar 14 2007 12:44PM", we # were checking for one additional (nonexistant) whitespace after "Mar" # which was wrong. Don`t know when and how this changed
- Changed expected output # Due to var_export() & __set_state() changes
- MFB: free rsrc on error in zip_read (old API)
- MFB: free buffer when zip_entry_read returns an empty entry
- MFB:  - rename SAFEMODE_CHECKFILE to OPENBASEDIR_CHECKPATH (can be used without    confusing in head without confusion)  - Add safemode and open basedir checks in zip:// wrapper (revert Ilia's    patch). Bug found by Stefan Esser in his MOPB-20-2007
- rename SAFEMODE_CHECKFILE to OPENBASEDIR_CHECKPATH (can be used without   confusing in head without confusion) - Add safemode and open basedir checks in zip:// wrapper (revert Ilia's   patch). Bug found by Stefan Esser in his MOPB-20-2007
- add more cases for getComment
Typo
Typo
Added missing open_basedir & safe_mode checks to zip:// and bzip:// wrappers.
ChangeLog update
ChangeLog update
MFB: fix odbc resource handling, patch by Dave Lawson
fix odbc resource handling, patch by Dave Lawson
return false instead of empty string when -length is greater than (len - offset)
malloc() -> pemalloc()
MFH
fix folding and add missing footer
synchronize iconv_substr() behavior with substr() no MFB so far, since substr() changes are not MFBed either
BFN
MFH: fix #40784 (Case sensivity in constructor's fallback)
fix #40784 (Case sensivity in constructor's fallback)
Lib upgrade news
ChangeLog update
malloc() -> pemalloc()
MFH
one more fix
fix tests
fix sybase tests
ChangeLog update
Re-added check removed by the previous patch
Added additional checks for long input arrays inside import_request_variables().
- MFH: CVE-2007-1001, integer overflow with invalid wbmp images
- CVE-2007-1001, integer overflow with invalid wbmp images
ChangeLog update
- MFB: #40764, line thickness not respected for horizontal and vertical   lines
- #40764, line thickness not respected for horizontal and vertical lines  - add test  - NEWS entry
add testcase
add testcase
Return HTTP 403 in case of "access denied".
Return HTTP 403 in case of "access denied".
fix substr() it's perfectly legal to do substr("str", 0, 1000000);
fix tests
Add _SESSION to checklist
ChangeLog update
MFB Off by ! in file:/// control char check
Off by ! in the url control char check for file:/// urls
- #40764, line thickness not respected for horizontal and vertical lines
MFB: fix crash/leak in bug #38710
more fixes
fix crash/leak in bug #38710
add news
BFN: gd gif reading
MFB: fix crash on $x['x']['y'] += 1, patch by Brian Shire
MFB test
fix crash on $x['x']['y'] += 1, patch by Brian Shire
MFB: fix thread unsafety in the gif reader code (merge from libgd cvs)
fix thread unsafety in the gif reader code (merge from libgd cvs)
- Improved version of ternary shortcut
ChangeLog update
clarify checks and error messages
MFH: fix #40752 (parse_ini_file() segfaults when a scalar setting is redeclared as an array)
fix #40752 (parse_ini_file() segfaults when a scalar setting is redeclared as an array)
Improved length parameter validation
Improved offset validation
fix MOPB#14 # The error message seems wrong, so maybe better fix is needed
New test case for array_slice
fix small typo add --with-zlib-dir option (and simple automagic zlib detection)
MFH: fix #40727 (segfault in PDO when failed to bind parameters)
fix #40727 (segfault in PDO when failed to bind parameters)
ChangeLog update
malloc() -> pemalloc()
Add checks around raw allocation code
- MF52: Updated timezone database to version 2007.3.
- Updated timezone database to version 2007.3. (Derick)
MFH
comment out unused function need to figure out why and what for it has been added in the first place..
use the aliases and eliminate one more compile warning
MFH: declare zend_mm_random() only when needed
declare zend_mm_random() only when needed
fix tests
fix tests
be consistent with non-unicode implementation
fix segfault in import_request_variables() and its test I'm not completely sure it's correct to import numeric vars like _POST["1"] etc.
Update function names for PHP6 to php6*
initialize variable
fix tests
remove (large) static buffers for header names and request uri
remove (large) static buffers for header names and request uri
use slprintf instead of snprintf and remove 0termination things (because slprintf is always available now)
use slprintf instead of snprintf and remove 0termination things (because slprintf is always available now)
MFH
fix AC_TRY_COMPILE usage
Added missing allocation checks
use safe_realloc
use safe_realloc
use safe_erealloc
ChangeLog update
- Add missing return value check
- Revert last part and fix issue under windows
- And the sizes too
- More to go # CVS sucks, you cannot mix -D with -r # However, thanks edin for reminding me that we have mini version tags # I still prefer subverison. There we don't have any problem of this kind
- There you go
- MFH Revert back to sprintf (we could define snprintf for windows but we don't)
- Revert back to sprintf (we could define snprintf for windows but we don't)
fix broken snprintf code
use safe_emalloc
snprintf patch
snprintf patch
Remove bug entry for 35872 as now in 5.2
BFN
- fix ws as requested by derick
- fix ws as requested by derick
- fix bug #40691: add comparison object handler
- fix bug #40691: add comparison object handler
ChangeLog update
- Implement '?:' [DOC] "expr1 ?: expr1" is a shortcut for: "expr1 ? expr1 : expr2" as       exists in gcc and discussed some time back. Note that this is not       an implementation ifsetor($var, default). While ifsetor would not       generate any message for non existing variables or array indices       the ternary shortcut does. Also the ternary shortcut does a boolean       evaluation rather then checking for isset(). That way ther ternary       shortcut can work on any expression while ifsetor can only work on       variables. Also to be silent one has do do: "@$expr1 ?: $expr2".
- MFH simplify, synch docu/implementation
- Missed one is-dot check
- Match docu with implementation - RecursiveFilterIterator::accept() needs to be abstract
- Simplify
ik, make it memcpy
fix wrong code # noticed by Stefan Esser
ChangeLog update
- And finally use prefix style names for consistency sake
MFB: Check that manifest file exists before trying to embed it
Check that manifest file exists before trying to embed it
- Reverting glob on child logic makes globbing work better with the example   code
- Missed to add [ to meta char check
- Glob might require us to refetch the path for every entry
- Allow to retrieve flags with php_glob_stream_get_count() - Detect meta chars in pathand switch to append mode so that path can   actually changes for each entry
Library update
- Add DirectoryIterator::count()
- Allow to get number of entries of a glob stream
- One more tab to go
- Change to hex to help read-/maintainability
- Add glob support for DirectoryIterator
- Add glob stream to win build
- Provide access to pattern used in glob
- php_stream_is() requires php_glob_stream_ops to be public - little bit of additional whitespace
- Add glob stream wrapper
- MFH A stream wrapper might only allow directory access
-A stream wrapper might only allow directory access
- The # line does not belong here
- MFH [DOC] Add SplFileInfo::getBasename(), DirectoryIterator::getBasename - MFH Add SplFileInfo::getLinkTarget(), SplFileInfo::getRealPath() # All based on suggestions by Arnold Daniels
Adjust checks to allow paths without a trailing /
- SplFileInfo::getRealPath() is not always present
# This block got lost somehow
- [DOC] Add SplInfo::getBasename(), DirectoryIterator::getBasename()
- Catch empty class name error earlier
- Catch empty class name error earlier
Lib upgrade update
ChangeLog update
limit nesting level of input variables
fix variable name
limit input variable nesting
limit nesting level of input variables
MFB
increase the stream_select() timeout, to make the test pass in a slow machine with valgrind
MFB #Pierre: libgd isn't affected. this problem was caused by the recent conversion to strlcpy()
fix access to non initialized memory (check valgrind reports on http://gcov.php.net)
mask resource numbers
improved test
ChangeLog update
Improve safe_mode check
new tests
new tests by Chris and me
MFB: allocate and define descriptors dynamically
allocate descriptors dynamically
MFB
merge from gd sources: unlock mutex before shuting it down
MFH
fix iconv cross-compilation
MFH: fix #40678 (Cross compilation fails)
fix #40678 (Cross compilation fails)
ChangeLog update
Typo
Typo
ChangeLog update
Adjust vsnprintf() usage
snprintf() -> slprintf()
snprintf() -> slprintf()
ChangeLog update
- Add missing access check
- Add SplFileInfo::getLinkTarget - Add SplFileInfo::getRealPath
nuke dead code
simplify disk_*_space() functions sources by moving ifdef'ed implementations into separate functions
fix typo
MFH: remind about 'make test'
remind about 'make test'
fix folding
fix folding
MFH: fix win build
fix win build
fix the sprintf() -> zend_spprintf() change affected this
fix ws/cs and make the ugly code less ugly..
fix CS/WS
MFB: use zend_spprintf()
ZTS fix
add new test
new test
poll() is not affected by FD_SETSIZE (Tony)
poll() is not affected by FD_SETSIZE (Tony)
Revert previous commit that caused a buffer overflow (Bug #40634)
ChangeLog update
MFH: do not allow db without fields
do not allow db without fields fix test
MFH: zerofill socket structs
zerofill socket structs
MFB: update pcre symbol list
update pcre symbols list
- MFH Readability
- Readability
- MFB: sync with libgd.org, patch from Kees Cook
- sync with libgd.org, patch from Kees Cook
ChangeLog update
BFN
MFH: fix #40621 (Crash when constructor called inappropriately (statically))
fix #40621 (Crash when constructor called inappropriately (statically))
- merge from pecl: Force binary mode on windows
- MFB: free temp buffer
- MFB Synch
- Make [v]s[nl]printf compatible with 5.2 versions and [v]spprintf of head
- Add [v]slprintf
- Add [v]slprintf to overcome the returnvalues issue of snprintf
missing -1
strncpy() -> strlcpy()
Pad to given length, not replace data with spaces
Eliminate strncpy and simplify code
Eliminate strncpy() and simplify code
strncpy > strlcpy
Only do size check on create operations
- avoid sprintf
Segment size validation
Unify validation of shm segment size inside shm_attach()
- Drop superflous efree
- Make debug code really safe
Use poll() instead of select() if available
Use poll() instead of select() if available
strdup() can fail
use safe allocations
Unfortunately, VC does not have snprintf, and sprintf_s supported only in vc2005 Fortunately, we don't need it here too badly.
fix typo
fix typos
- Avoid sprintf, even when checked copy'n'paste or changes lead to errors
- Provide dedicated hex function for digests
ChangeLog update
disallow negative length
MFH (r-1.82): Add retry for interrupted reads and graceful handling for failed retries
Add retry for interrupted reads and graceful handling for failed retries
use strlcat
use strlcat
use snprintf
use snprintf
increase array size to fit buffer size
MFH: fix leak
fix leak no need to allocate the buffer if there was no data
use safe_emalloc
MFH: fix #40606 (umask is not being restored when request is finished)
fix #40606 (umask is not being restored when request is finished)
BFN
fix bug #40598 (libxml segfault) mark more functions unicode safe
fix bug #40598 (libxml segfault)
ChangeLog update
- MFB: #40578, fix the 2nd race condition on shutdown when the cache is   freed
- #40578, fix the 2nd race condition on shutdown when the cache is freed
Simplify code by converting emalloc() + sprintf() to spprintf()
MFH: check for buflen (on FreeBSD _SC_GETGR_R_SIZE_MAX is not implemented) patch by stas at FreeBSD dot org
check for buflen (on FreeBSD _SC_GETGR_R_SIZE_MAX is not implemented) patch by stas at FreeBSD dot org
MFB
fix test on ultra-fast-machines and/or SOs with long time slices # Thanks Tony
MFH
check for NULL, then add flag
ChangeLog update
One more strcpy. (Thanks Stas)
strcpy() elimination
MFH
minor improvements
MFH: implement PHP_STREAM_FLAG_NO_CLOSE and avoid hacks
implement PHP_STREAM_FLAG_NO_CLOSE and avoid hacks in plain wrapper
use snprintf
use snprintf
fix test
fix test on FreeBSD
fix tests
fix tests on AIX
add test
wrong string len
add test for 64bit arch
fix test
fix test
fix test
MFB
use /usr/bin/nohup instead
fix gcov build (#line stuff)
Check for FD_SETSIZE limit
Check for FD_SETSIZE limit
MFH: fix #40578 (imagettftext() multithreading issue)
fix #40578 (imagettftext() multithreading issue)
MFH: fix #40576 (double values are truncated to 6 decimal digits when encoding)
fix bug #40576 (double values are truncated to 6 decimal digits when encoding)
Special case for last iteration
Special case for last iteration
fix typo
Improve redirect validation
Use strlcpy() rather then strcpy()
fix putenv - if there was no previous, remove variable from environ
ChangeLog update
Cosmetic fix - safe_emalloc(nmemb, size, offset)
MF5.2: CreateInstance requires BSTR (should fix #33188)
Cosmetic fix - safe_emalloc(nmemb, size, offset)
CreateInstance requires BSTR (should fix #33188)
fix unallocated free
MFH: move PHP_TEST_WRITE_STDOUT to acinclude.m4 and use it in configure.in
move PHP_TEST_WRITE_STDOUT to acinclude.m4 and use it in configure.in its result is used in sapi/cli & sapi/embed, not just sapi/cgi
MFH: make use of startup hooks
don't call php_module_startup() directly, use startup functions patch by Andrei Nigmatulin
MFH: fix leak and errmsg add test
new test
fix leak, convert unicode values to string before assigning change error message to use zend_error() since there is no active function
MFH: fix #38406 (crash when assigning objects to SimpleXML attributes)
fix #38406 (crash when assigning objects to SimpleXML attributes)
- BFN
- Make stat based functions throw an exception
- Make stat based functions throw an exception
BFN
MFH: fix #40545 (multithreading issue in zend_strtod())
fix #40545 (multithreading issue in zend_strtod())
MFB
update package.xml for potential release
ChangeLog update
Upgraded SQLite 3 library to version 3.3.13
Eliminate strcat() usage.
- Bugfix #40546: SplFileInfo::getPathInfo() throws an execption if directory is in root dir.
- Bugfix #40546: SplFileInfo::getPathInfo() throws an execption if directory is in root dir.
MFH: check SQLError() return value and output a meaningful errmsg when it fails
check SQLError() return value and output a meaningful errmsg when it fails
fix tests
MFB: PQfreemem() checks
MFB: #40503 (json_encode() value corruption on 32bit systems with overflown values)
MFH: fix heap protection on SPARC, required by GCC4 patch by Dmitry
fix heap protection on SPARC, required by GCC4 patch by Dmitry
Info on new lib versions and BFN
typo
typo
MFB
- WS/CS
- MFH CachingIterator implements Countable
MFB
On win32 directories in the middle of the patch may be unreadable
On win32 directories in the middle of the patch may be unreadable
Initialize "retval" on each request
Initialize "retval" on each request
MFH: fix test
fix test stdout is closed in non-debug mode
ChangeLog update
PQfreemem checks
ChangeLog update
use safer functions, check error value
use safer functions, check error value
ChangeLog update
fix typo
typo in Dmitry's last name =)
Added runtime JIT auto-globals fetching and caching
use error message size
use error message size
fix snprintf size #-1 is not needed
use snprintf, increase hebdate buffer
increase hebdate buffer, use snprintf
fix build
add safe_realloc
fix typo
add safe_realloc
Optimize out RINIT()
Optimize out RINIT()
MFB: fix leak
fix possible double free
MFH
fix test name
Allow C++ extensions to use CG(), EG() ... (Caroline)
Allow C++ extensions to use CG(), EG() ... (Caroline)
Reduce stack usage & improve boundary checks
ChangeLog update
MFB: fix build on cygwin with windows-style EOLs
fix build on cygwin with windows-style EOLs
MFB: fix cvsclean on cygwin with windows-style EOLs
fix cvsclean on cygwin with windows-style EOLs
MFH
fix Cygwin build (costs us nothing, but makes some people happy)
use constant
ChangeLog update
Improved validation route for size parameter of the mcrypt_create_iv() function.
- MFH: Clarify the source of the timezone data.
- Clarify the source of the timezone data.
fix a few tests in unicode mode
MFB
- Give Dmitry credit for all the FastCGI work
ChangeLog update
Make sure p is not pointing to the start of the buffer
MFH
output debug messages before calling OCI functions
MFB
MFH: improve php_userstreamop_seek()
improve php_userstreamop_seek() check for errors in stream_seek() and return correct status
MFB
- Simplify
- Inherit interface ArrayAccess correctly
fix #40455 (proc_open() uses wrong commandline when safe_mode_exec_dir is set)
new/improved tests
new/improved tests
MFH
plug possible leak
fix .cvsignore's
ChangeLog update
- MFH Drop useless stuff
- Drop useless stuff
- MFH Add new example
- Add new example
MFB: #40451 (addAttribute() may crash when used with non-existent child node)
fix #40451 (addAttribute() may crash when used with non-existent child node)
upgrade to new parameter parsing API + mostly ws/cs fixes, sort of MFH
MFH: fix #40109 (iptcembed fails on non-jfif jpegs)
fix bug #40109 (iptcembed fails on non-jfif jpegs) + use safe_emalloc
MFH: fix tests
fix tests
MFH: add separate IPv6 test
add separate IPv6 test
MFH: fix pcre tests
add SKIPIF sections to check if PCRE has the functionality tested/used
MFH
typofixes and other improvements by Chris Jones
fix news entry
ChangeLog update
add test
new test
MFH
add a note
fix test
fix test
sync tests with php 5.2
merge the tidyNode::getParent() patch from HEAD
MFH
fix typos
ChangeLog update
MFH
fix #40431 (dynamic properties may cause crash in ReflectionProperty methods)
fix gcov build (#line directives)
ChangeLog update
MFH
use the same ifdef anf get rid of "unused var" warnings
fix off-by-one accidentally introduced by safe_emalloc() patch
upgrade PCRE to version 7.0
new test to keep track of the reported pcre regression
upgrade pcre to version 7.0
BFN
MFH: fix #40410 (ext/posix does not compile on MacOS 10.3.9)
fix #40410 (ext/posix does not compile on MacOS 10.3.9)
Upgraded SQLite 3 to version 3.3.12
ChangeLog update
- MFH Add include
- Add include
- Include spl_iterators.h
- MFH Rearrange code: mode Countable from spl_array.c to spl_iterator.c
- Moving Countable from spl_array.c to spl_iterator.c   allows CachingIterator to implement Countable
- MFH php --ri <extension>
fix a few tests (segfaults + wrong output)
- Simplify call_user_func/call_user_func_array implementation - Allow call_user_func/call_user_func_array to return reference
- Show whether a zval is a reference in printzv user command
MFB: remove ereg() calls
convert all ereg*() calls to preg_match(), so that we become future-proof (ereg is scheduled for removal in PHP 6)
- No reason not to pass return_value_ptr for non return-by-reference functions
- Do not set is_ref/refcount for functions that return by reference
- More ZEND_API's
- MFH Add new test
- Add new test
Remove already done item from the todo
ChangeLog update
add test
add test
fix MFHed segfault
- MFH options/exports
explicitly set module name
MFH: use getenv() instead of _ENV enable multiple error reporting on the same test
MFH: check if GCC on MacOS supports -no-cpp-precomp before using it
MFH: new tests
upgrade apache2filter to php6
change "php5" to "php6" everywhere rename mod_php5.c to mod_php.c
- Let's go with RC2
- Add new test
ChangeLog update
Back to dev
5.2.1
- Add possibility to check for a specific compression method
- Avoid direct tsrm manipulating in ini setting
fix macros for bigendian platforms
add missing closing marker
fix test, this error message may vary
- Drop another superflous stream close
- Prepare RC2
- Drop superflous stream close
correct release notes
use strdup()
correct version number/stability
add test cases, prepare for release, indent fixes in package.xml deps
fix several potential segfaults, add tests for chmod(), fix chmod()
add PharFileInfo->chmod() to set permissions (no other way to do it)
ChangeLog update
- Check temp file creation
copyright year updates
- Add additional check & test
- Add missing PHPAPI
- Detect \0 in paths where possible
Update
Update ! docs.
- Check for illegal chars (control + potential UTF-8 (need to take care of in PHP 6))
improve error message empty entry => empty directory.  Add check for phar://blah.phar/. and phar://blah.phar/..
- Make sure to be ANSI C compliant
- Make sure to be ANSI C compliant
ChangeLog update
- Need to drop //
- PHP_VERSION_ID exists only in newer PHPs (5.1+) - Improve error checking
Added a double free check.
- Disallow stars in paths
- Add Makefile.frag
- Add path sanitizer for new paths - Add test for a few things we check with the sanitizer # We might want to use the sanitizer for opening as well
ChangeLog update
- MFH Add PHPAPI to stuff needed by streams API for shared exts - MFH Readonly issue fix to memory streams option handling (still not   activated in 5.2.1 though)
- Allow building with 5.1 (not all works thenperfectly though)
- Provide both version strings, api and ext
- Update package file
fix mem leak on error, fix cwd issue.  go back to BadMethodCallException for Phar->set*CompressedAllFiles().  ALL TESTS PASS, RELEASE IS IMMINENT
fix test
ChangeLog update
s/isFlushing/isFlushingToPhar much clearer purpose in method name
Typos.
- Add ^ specifier that returns original string type before conversion. - Add ZVAL_ENC_STRING[L] macro that allows returning either a binary   string or an encoded strings as Unicode based on type, instead of   UG(unicode)
- add note about the past for the future, see http://bugs.php.net/?id=40310&edit=1
Remove bug fix entries #34564 and #37927 as now in 5.2.1
add new tests
-exactly 1 arguments +exactly 1 argument
Update NEWS for ealier bug fixes
add new tests
fix tests
fix isset() & unset() with CV-superglobals see #40311
ChangeLog update
Better generated parser
Removed dead code
Removed dead code
Enable canary protection in DEBUG mode only.
Enable canary protection in DEBUG mode only.
MFH
bailout if bucket is NULL
MFH: free class_name when necessary
free class_name when necessary
plug leak
fix leaks on error
ChangeLog update
use correct comment marker (dnl, not #) add comment regarding AC_DECL_YYTEXT and the annoying warning (just in case I'm not the only one who's annoyed by it)
BFN
MFH: improve tests
MFH: fix segfault on rebindinging and rexecuting a statement with LOBs fix compile failure in ZTS mode when collections support is missing
fix compile failure in ZTS mode when collections support is missing
fix segfault on re-binding and re-executing a statement improve the test patch by Chris Jones
ChangeLog update
Minor code optimization
- Update TODO - Add Phar::isFlushing() - Improve test
use getenv() instead of the _ENV var
improve test patch by Chris Jones
- Add new test
ChangeLog update
Prepare news file for release
display all errors/leaks/warnings on each test, instead of showing just the top most error
fixed incompatibility with PHP 5.2.0 for encoding conversion between ShiftJIS(CP932), eucJP, ISO-2022-JP.
Prevent flush() of closed handle on php_module_shutdown()
fix access to already free'ed memory
Prevent flush of closed handle on php_module_shutdown()
fix test different Oracle client versions report different error messages
fix test
- MFB: #40228, ZipArchive::extractTo does create empty directories  recursively
- #40228
- #40228, ZipArchive::extractTo does create empty directories   recursively
- don't do memory limit checks for chunk_size
update TODO for needed things
throw exceptions from Phar object, and errors from stream wrapper
Copyright update
implement Phar->getMetadata() Phar->setMetadata(), add tests, implement meta-data in the header
make Phar metadata todo more explicit
add rename support
- Split commit into commit and setStub
make sure we are in the test directory
new test for creation of phar in current directory
note finishing of docs (whew)
- Make new flushing work
add rename() to TODO for 1.0
add todo about metadata, and 1.1 todo to search/match metadata [take 2]
add todo about metadata, and 1.1 todo to search/match metadata
- In Commit reset donotflush
beginWrite()/commitWrite() => begin()/commit(), note optional rollback() for 1.1
- Move offsetGet()/SplFileClass entry to 1.1
- Add missing files
- Drop phar_destroy_phar_data() from api
- Test naming
- Hash is donein ext/standard
fix commitWrite test, enable creation of Phars with phar object
new failing test for commitWrite()
up API version to 1.0.0 - the file format is solid, prepare for release sometime in the near future
stream context for specifying meta-data
ChangeLog update
- Clean up on flush
- Refcounting
- More on 5.2.1 support
nullify param.parameter and avoid destroying it twice
- Add 5.2.1 support
- Dropped one line by accident
- Prevent memory corruption
- Update package file
- Disable memory streams set option until 5.2.2
- MFH truncate support for mem/temp streams
- Cannot change stream here
fix uncompressAllFiles() and compressAllFilesBZIP2(), add tests
php_stream_truncate_set_size() is a noop with temp streams. so, we're going to use a brand new tempfile for truncation.
- Add missing INI setting
php_stream_truncate_set_size() is a noop with temp streams. so, we're going to use a brand new tempfile for truncation.
fix memleaks and all but 1 test
fix memleak in unlink()
fix incorrect refcount increment on unlink()
- Add new tests
- context not needed here
- Make phar_flush() work without reloading - Make refcounting fly
- Add option support for temp/memory stream (adds ftruncate support)
ChangeLog update
- Simplify by providing delref function
use length - 1 when we fetch it from hashes
fix leak readuce size of the buffer to prevent ORA-01461
fix test (still fails, but the test is accurate now)
implement phar refcounting move setStub to commitWrite() and add beginWrite()
check if -no-cpp-precomp is supported by GCC before using it (mac os only)
ChangeLog update
Back to dev
5.2.1RC4
add package2.xml
add missing ifdefs
setlocale() returns static buffer, which must be copied
MFH: fix #40189 (possible endless loop in zlib.inflate stream filter)
fix #40189 (possible endless loop in zlib.inflate stream filter)
PHP4 compatibility
ChangeLog update
Added safety checks to the code
Eliminate strcat() and strcpy()
Expand allow_url_fopen/allow_url_include functionality
prepare to release 1.2.3
remove unused constants, note addition of docs in TODO
ChangeLog update
strcat() -> strlcat()
MFH
initialize errno
fix folding and a couple of typos
- Add --ri/--rextinfo
- Simplify - Add PHPAPI php_info_print_module()
MFB: fix a few crashes
add test
fix a few crashes
- Use utf-8 instead of utf8 as encoding to fix phpinfo()
ChangeLog update
emalloc() -> safe_emalloc()
fix PECL bug #7295 (ORA-01405: fetched column value is NULL on LOB fields)
MFH
fix wrong param definition
fix long/int mess
fix test
fix test array_unique() is not expected to modify its argument
fix classname
fix classname
MFH
add skipif
MFH: fix #40191 (use of array_unique() with objects triggers segfault)
fix #40191 (use of array_unique() with objects triggers segfault)
fix tests, fix corruption issues with compression, simplify code.  3 tests still fail, memory leaks and mysterious crc error - the 16 tests are faulty
- Test names
- Don't be to picky, as long as we get an error here, we're fine
-Simplify
- Generate CRC32 in case not done in original file
- CRC is done on uncompressed data
ChangeLog update
- Drop erroneously added numbers in error messages
- Finish get/setStub()
new test for stream context setting of compression
- Add Phar::getStub(), step 1
add setUncompressed(), setCompressedGZ(), setCompressedBZ2() to PharFileInfo, and a failing test (due to bug in streams + bug in phar)
 X Phar->setStub() for specifying a new stub to the phar [Greg]
- Make ext/date happy if present
- Rewrite/Finish metadata handling
spelling
- Per defautl class Phar returns Info class on offsetGet()
- Update tests
- Simplify dtor - Zero terminate meta data
- Disable most of class Phar and all of class PharFileInfo if SPL is not present
- MFH Add *.mem
- Add *.mem # for i in `find . -regex '.*/test.*/\.cvsignore' -exec grep -L '*.mem' {} \+`; do echo $i; sed "1a*.mem" $i >| $i.new; mv -f $i.new $i; done; # find . -name '.cvsignore' -exec cvs ci {} \+
- Add tests
fix final memory leak, fix metadata reading (simple), add basic test that it doesn't break
fix 1 mem leak
implement reading meta-data from phars.  writing is not yet supported
ChangeLog update
fix ini tests EXPECT
MFH: catch overflow right away
catch overflow right away
implement ini handler for phar.readonly and phar.require_hash that allows enabling it on    PHP_INI_ALL if it is disabled in the system, but does not allow disabling it    if it is enabled in the syste
use getenv()
use getenv()
MFH: fix accessing public key from x509 resource add test fix test under win32
Resolve autoglobals as global-fetch CVs when possible
typo in the test name
CS
- Mode debug info
- Drop left-over
- Make use of get_debug_info() handler in ArrayObject/Iterator
MFB: fix crash & add tests
new tests. bump code coverage to 81%
fix another crash
MFB: fix crash
fix crash. tests will follow
update TODO to include missing items move permissions to the lowest bits of flags fix warnings about signedness fix unclear /* docs */
ChangeLog update
- Make use of get_debug_info handler in SplObjectStorage
MFH
fix configure check with imap-2001
- Use Z_OBJDEBUG_PP()
- Add Z_OBJDEBUG[_P[P]] helper macros
MFH
improve readability and use constant instead of its value
MFH: improve utf8_mime2text() signature detection
improve utf8_mime2text() signature detection look also for U8T_CANONICAL, which must exist if new signature was detected
MFH
fix test
update install instructions from phpdoc XMl sources
fix accessing public key from x509 resource add test fix test under win32
MFB: fix segfaults with new libtidy
fix segfaults with new libtidy. the patch is backwards compatible
MFH
improve the fix
MFH: fix #40169 (CURLOPT_TCP_NODELAY only available in curl >= 7.11.2)
fix #40169 (CURLOPT_TCP_NODELAY only available in curl >= 7.11.2)
- MFB: save/restore the alpha blending mode correctly in imagefill and     imagefilltoborder
- save/restore the alpha blending mode correctly in imagefill and   imagefilltoborder
MFH: fix #40168
fix #40168
- Update unicode progress on SPL, looks like nearly done, actually all is   unicode safe by now but a few things need to be added and a few problems   be clarified. # I wonder why my keyboard has space issues...it should be out of Us by now
- Nicer version
- Update
- Change hardcoded size to lentgh translation to use sizeof(UChar) as suggested by Andrei
ChangeLog update
- A few unicode fixes and tidying
Back to dev
5.2.1RC3
Added read-timeout context option "timeout" for HTTP streams.
Old bug fixing news
Syntax highlighting fix for hex numbers.
- Implement debug helper
- Add debug_info helper to overloadedobjects
- We want the size here not the length
- We need to return the length not the byte size
- Use correct string inunicode mode
fix win32 build
add roadmap
- Simplify by using zspprintf
*** empty log message ***
MFH
more snprintf()
MFB: use only 2 bits
only 2 bits are needed for shutdown(2) method (only 3 possible values). this is new code in 5.2.1, so don't worry..
MFH
use snprintf()
fix the previous patch
MFH
use snprintf()
MFH: use snprintf()
use snprintf()
MFH: improve check configure for new version of utf8_mime2text()
improve check configure for new version of utf8_mime2text()
MFH: use strlcat()
use strlcat()
fix fodling, mark set_time_limit() unicode safe
moved ext/informix to PECL
moved ext/informix to PECL
fix folding
fix folding, mark functions as unicode safe
ChangeLog update
add class constants Phar::COMPRESSED, Phar::GZ, and Phar::BZ2 for eventual compression manipulation
- Different results in unicode now
- Ensure string-type is always set correctly
- More help from David
- A little help from Andrei
MFH: fix #40129 (iconv extension doesn't compile with CodeWarrior on Netware) patch by gk at gknw dot de
fix #40129 (iconv extension doesn't compile with CodeWarrior on Netware) patch by gk at gknw dot de
MFH
fix grammar
ChangeLog update
INI options should not be modified directly. Bad extension.  No cookie for you.
- Steps towards unicode
Update PHP API version.
- Add php_u_stat()
- Add more unicode stuff
MFH: return false if realpath()/getcwd() fail
return false if realpath()/getcwd() fail
MFH: free temp cwd_state struct on error
free temporary cwd_state struct on error
MFH
plug leaks initialize the last argument of RegQueryValueEx() fix ws
fix test
fix for deleted files when read from, generalize refcount1 test better
failing test that demonstrates existing file pointer and PharFileInfo don't respond to changes in the underlying file
ChangeLog update
tweak docs for canCompress
- Help streams debugging
MFH: add trailing '\0' to stream hashes
add trailing '\0' to stream hashes
revert the patch temporarily, I need to test a bigger patch in HEAD..
MFH
include \0 to the hash it does matter because we use these strings in phpinfo()
tabs -> ws
improve icu-config check
fix test
fix test
missing comma
fix error message and #40111
ChangeLog update
- Use relay to aid debugging
ChangeLog update
- Drop useless comment - Move global macro def to .c - Cleanup by using bit fields for internal flags
- Change version validation to minimum api version required
MFB: Improve validation of argnum, width and precision.
Improve validation of argnum, width and precision.
- Change to new layout wich has some more flags that will be used for perms - Update/simplify tests
MFB
OMG, this line was really bogus (and allocating huge amounts of memory unecessarly)
MFB
fix valgrind error in test bug24594.phpt while at it, remove some dead code and change the pts vector to char to save (much) memory # Pierre: one more to merge ;)
MFH: Kill warnings when mt is not installed or is found as the tape command under cygwin
Kill warnings when mt is not installed or is found as the tape command under cygwin
- WS
add a sticky note
Use PHP_SETUP_ICU in self-contained extensions
Create PHP_SETUP_ICU macro that can be used in self-contained extensions.
MFH
nuke more dead code
MFH: nuke skeleton leftovers
delete useless comments and skeleton leftovers
Typo
MFH
fix folding and ws
MFH
plug newly added leak
MFB: Use long instead of int where long is expected.
Use long instead of int where long is expected.
ChangeLog update
Fake out the module name, since the filename is different now.
- Reorder includes
- Consistency: macros shall be uppercased (as requested by Andrei)
- Make test compatible with HEAD
- MFB Missing part of __toString() support
MFH
avoid changing original zval
- Unicode support
- Add zstrlen() helper
MFH
make sure the string is non-empty and use strlcpy() & strlcat()
MFH
use closesocket() on Win32 and close() on *nix
MFH: fix #39988 (type argument of oci_define_by_name() is ignored) patch and tests by Chris Jones
fix #39988 (type argument of oci_define_by_name() is ignored) patch and tests by Chris Jones
MFH: fix #40078 (ORA-01405 when fetching NULL values using oci_bind_array_by_name())
fix #40078 (ORA-01405 when fetching NULL values using oci_bind_array_by_name())
add misssing temp directories to .cvsignore
MFH
#ifdef out the rest of that getpwuid_r() patch, see prior commit
Some platforms have getpwnam_r() but are missing _SC_GETPW_R_SIZE_MAX
ChangeLog update
Rename php5 module to php6. Remove version number from sapi/apache/mod_php.* filenames (for future's sake). No other SAPI moduels modified (up to invididual maintainers).
Update with rewrites by me and Evan G.
Update with info from README.UNICODE.
Add convenience function for openeing files with unicode names
- MFH: Bump year
- Bump year
MFB: Add missing ifdefs
Remove const warnings. (Andrey)
Another bug fixed by Dmitry
Add missing ifdefs for shutdown()
MFB: fix ifdefs
BFN
fix #40083
use RETURN_* instead of RETVAL_* and fix #40083
ChangeLog update
- Simplify/Add comment
- Simplify
MFH: Add CURLOPT_TCP_NODELAY constant
- Simplify
- Cleanup
- Ups wrong place
- MFH (Ilia's changes)
- BFN
- Improve debugging and fix #40073
Close open files in case of failure (Amit)
Close open files in case of failure (Amit)
Prevent SESSION/GLOBALS overload via session decoding
MFB: Added key_length intialization for intergers
Added key_length intialization for intergers
Bump year.
Bump year.
MFH: zerofill info_data and fix possible segfault partly fixes #40073
zerofill info_data and fix possible segfault partly fixes #40073
- Easy debugging
ChangeLog update
- Add new test
- Add initial hash support write/read/verify md5/sha1(default)
MFB
avoid calling MSHUTDOWN when built without libt1
MFB: remove mshutdown func
remove useless MSHUTDOWN function
MFB: constify
make the hash_ops structures const and save some memory # ram memory is so expensive these days...
MFH
Add CURLOPT_TCP_NODELAY
Allow libxml DomNodes to remain persistent when requested by other extensions
- Be picky about names
- Better handler names (group by prefixing)
Let caller issue error.
Note.
MFB: Use safe_emalloc() rather then emalloc()
Use safe_emalloc() rather then emalloc()
Provide means for opening file for zend with error supression. Allows us to avoid INI hackery such as the one used in SPL.
ChangeLog update
MFH: Make mt more silent
Make mt more silent
fix unlink
new test for unset()
another attempt to fix unlink()/unset()
fix unlink - make sure it actually erases the file
Typo
add test to make sure the phar is modified on disk
Use relative timestamp
Use relative timestamp #Thanks Nuno :)
Remaining unicode updates for user filters
Add add_property_zstr(l)(_ex)()
Add pestrndup()
Flesh out some missing API calls
ChangeLog update
MFH
make a var static
MFB
fix a few memleaks and double-free()s on error conditions
MFB: fix build with libming 0.3
fix build with libming 0.3 and older
Var declarations first (fixes windows build)
update xmlwriter_write_dtd_entity parameters
MFH: parameter entity argument (pe) should be bool update test
parameter entity argument (pe) should be bool update test
removed dl() block
MFB: fix skipif
ext/XMLWriter updates
Remove bugfix entry (will be in 5.2.1)
MFH: bug #39504 (xmlwriter_write_dtd_entity() creates Attlist tag, not entity) Add & improve test
Improved proc_open(). Now on Windows it can run external commands not through CMD.EXE
Improved proc_open(). Now on Windows it can run external commands not through CMD.EXE
merged from 5_2 (mysqli_info crash)
ChangeLog update
MFH: (r-1.16) ttyname_r() is broken on BSD
Refix posix_ttyname(), test for a working implementation of ttyname_r() -- which BSD doesn't have
BSD4.1 (possibly others) doesn't support _SC_TTY_NAME_MAX
Update create_function()
Clean up set_include_path().
Don't bother with conversion when the converter is already UTF8
%f -> %F
add unset support and test make sure isset() does not return deleted files do not store implicit aliases for the phar
add support for creating new files via array access
Allow ext/session to use ext/hash's algorithms for generating IDs
fix creation of phar from scratch, add test case
Unicode Updates
add test for delete in phar, we needed to check the deleted flag in case the new phar has not been flushed to disk
fix creation of new files within an existing phar, add test
ChangeLog update
revert changes to test
fixed crc - write test works
Back to dev
5.2.1RC2
MFB: Added missing open_basedir checks
Added missing open_basedir checks
Cleanup ext/session so that I can do a unicode update without going insane.
MFB
remove --show-details from lcov's genhtml, as currently we don't separate the coverage data per test, making this option useless # gathering per test coverage data is possible, but way too slow and would require modifications to run-tests.php
major reworking of how the phar is re-worked in memory when written to, fix written phar
ChangeLog update
MFB
reduce the test data size even further or when running with valgrind it times out
MFH: fix infinite cycle #this was the infinite cycle that was bugging me in the gcov machine...
fix a bug where PHP would enter in an infinite cycle with chars with ascii value > 127 while at it, remove the lim structure parameter (it wasn't being used)
more magic number fixes
MFH
use constant
fix PDO_DRIVER_API
fix lcov build
MFH: revert pcrelib version string
Revert pcrelib version string to 2006
fix magic numbers
MFH
revert this date to its previous state
add unlink support
fix all but one of the double-destroyed hashes, and all but one of the unclosed streams
MFH
and one more..
fix test
fix test
Use proper length
Use proper length
MFB: 	Added filter callback 	Unlink temporary file on error
Added filter callback Unlink temporary file on error
ChangeLog update
correctly generate version string for new phar
add some error handling to phar creation
add some error handling to phar creation
- Change write macros to inline funcs
add new failing test for write support
fix a number of bugs found in testing new (uncommitted) unit test
- TSRM fix
- Make Andrei happy - spread some U's
initial support for writeable phars
MFB
fixed parameters for unicode in mysqli_change_user
ChangeLog update
add doc comments to help sort out what's what
MFB
add EXTRA_LDFLAGS_PROGRAM to config.nice (as LDFLAG is quite useless)
MFB: fixed compiler warnings
fixed compiler warnings
fixed compiler warning
Update copyright year
MFH: Bump year.
Bump year.
ChangeLog update
MFB: Simplify code and change strchr() to memchr()
Simplify code and change strchr() to memchr()
MFB: Added boundary checks to php_binary deserializer
Added boundary checks to php_binary deserializer
- MFH Bugfix: #39996 Wrong PHPDoc comment for SplFileInfo::getType()
- Bugfix: #39996 Wrong PHPDoc comment for SplFileInfo::getType()
MFB: fix #36427. patch by jdolecek at NetBSD dot org
MFB: fix PID info on windows
ChangeLog update
Added missing resource validation checks
MFB: Added missing resource type checks
Added missing resource type checks
BFN
MFB: fix bug #39760 (cloning fails on nested SimpleXML-Object) add test
fix bug #39760 (cloning fails on nested SimpleXML-Object) add test
C++ comment
MFB: Mark test as being 32bit only
Mark test as being 32bit only
Simplify & optimize code
ChangeLog update
ChangeLog update
MFH
make sure l != 0
that was not intentional thanks Nuno
MFH
nuke dead code
MFH
use strlcpy()
MFB
make this test run a little faster (is currently timeout with valgrind)
include basic_functions.h for php_get_current_user() declaration
it's ptr, not ptrptr
use the macro, casting works only with GCC
fix sapi/embed build
MFB: Added buffer length checks
Added buffer length checks
fix build
MFB: strcat() stuff
Simplify code and eliminate strcat() usage
MFH: force tidy.clean_output=0
force tidy.clean_output=0
fix ZTS build
MFH
use strlcat()
MFH
minor improvements
MFH
use strlcat()
MFH
use strlcat()
MFH
use strlcat() and a bigger buffer
ChangeLog update
Avoid strcpy() & strcat()
fix tests
fix tests
NULL is a special value for number_format() meaning "use default separator"
restore old behaviour when casting objects to strings and NULL
fix convert_to_unicode() and convert_to_string() which didn't set the type of the op properly
fix *scanf() tests
add zend_u_strtoul() and fix build
fix php_stream_u_get_line() macro
die("skip this is for PHP < 4.2.3");
MFB
oops: remove uneeded code in the skip condition
add fr_FR@euro to the setlocale list
MFH
initialize memory with 0's, so we won't get garbage if the statement does not set the var
MFH more test improvements by Chris Jones
that should not be there..
more test improvements by Chris Jones
ChangeLog update
Unicode support in sscanf() and fscanf(). (Tony, Andrei)
fix build
MFB: safety checks
MFB:   Session deserializer protection.
Don't forget to free url structure
Session deserializer protection.
is_numeric_string() optimization
is_numeric_string() optimization
MFH
fix arguments order (just in the sake of purity)
- MFH: add better zlib detection
- Add better zlib detection
- #39952 zip ignoring --with-libdir on zlib checks (judas dot   iscariote at gmail dot com)
- #39952 zip ignoring --with-libdir on zlib checks (judas dot   iscariote at gmail dot com)
Code review:   . fixed integer overflow   . fixed buffer overflow/underflow   . added more strict IP validation   . reimplemented float number validation
Code review:   . fixed integer overflow   . fixed buffer overflow/underflow   . added more strict IP validation   . reimplemented float number validation
ChangeLog update
Ensure that OnUpdateLongGEZero is greater or equal to 0. Added a update wrapper for ensuring >0 values
Allocation safety checks
MFH
add missing space for \0
Allocation safety checks
MFH
more safe_emalloc()
MFH
use safe_emalloc()
MFH
use safe_emalloc()
Use safe_emalloc()
fix weird strlen() usage
MFH
use safe_emalloc()
MFH
use safe_emalloc()
MFH
use safe_emalloc()
MFH
improve check for overflow
fix CS, add missing folding markers mark Unicode safe functions as they are
stream_socket_shutdown() is Unicode safe by definition
fix proto
fix protos
mark most of the ext/posix functions as Unicode safe, for they do not use strings in any way
mark all LOB functions as Unicode safe
MFB: Use %F (ignores locale) for internal representation of floats
Use %F (ignores locale) for internal representation of floats
Add missing NEWS entrys and update the README.UPDATE file
MFH: fix bug #39890 (using autoconf 2.6x and --with-layout=GNU breaks PEAR install path)
fix bug #39890 (using autoconf 2.6x and --with-layout=GNU breaks PEAR install path)
MFH
fix build
fix test
fix test
MFB: Define SENDBUFLEN for older c-client libs
Define SENDBUFLEN for older c-client libs
MFH
update credits at request of Gabor
fix tests
fix tests
fix #36392 in Unicode mode
ChangeLog update
MFB: Added empty string checks
Added empty string checks
update function signature
BFN
MFB: fix bug #33734 and related (Something strange with COM Object)  - caused by fix in com_handlers.c rev 1.22.2.5
fix bug #33734 and related (Something strange with COM Object)  - caused by fix in com_handlers.c rev 1.22.2.5
BFN
MFB: - fix bug #33386 (ScriptControl only sees last function of class): com_wrapper.c - fix bug #37588 (COM Property propputref converts to PHP function   and can't be accesed): com_handlers.c - fix bug #39596 (Creating Variant of type VT_ARRAY): com_variant.c - add tests
- fix bug #33386 (ScriptControl only sees last function of class): com_wrapper.c - fix bug #37588 (COM Property propputref converts to PHP function   and can't be accesed): com_handlers.c - fix bug #39596 (Creating Variant of type VT_ARRAY): com_variant.c - add tests
ChangeLog update
MFB: safety checks
Safety checks
MFB: Added checks for negative max length and overflow checks for overly long strings.
Added checks for negative max length and overflow checks for overly long strings.
fix test
fix typo
fix tests
use add_ascii_assoc_text()
MFH
use OCI_SUCCESS constant, do not rely on its value
ChangeLog update
Implement OnUpdateUTF8String() handler. It always assumes UTF-8 input, since we cannot check for UG(unicodE) inside it.
Unicode support in number_format().
fix lcov/genhtml build (yes it is very picky)
Small optimization of the date() function
new tests
more OCI8 tests by Chris Jones
more tests
more ext/date tests by Chris Jones
ChangeLog update
- Implement ezstrndup()
- Make custom serializing work with zstr (as discussed with andrei)
- Make custom serializing work with zstr (as discussed with andrei)
- Use conversion macro
levenshtein() already supported Unicode.
Metaphone will work only with binary runtime-encoded strings.
- No misleading comments
- Mark a fewthings as unicode ready
- Serialization doesn't work with unicode data
-Serialization doesn't work with unicode data
temporary fix for oci_error(), just to make it work it should be using add_ascii_assoc_text() instead
MFH
added support for CALL statement type (patch by Chris Jones)
MFH
fix ws, cs and overall code readability
Bite the bullet and port the natural comparison algorithm to support UChar strings. Also, simplify the original code.
temp is freed in zend_unicode_to_string() on failure
MFH
lookup_browser_name cannot be NULL
improve tests
improve tests, add new ones
Initial commit(Synced PHP_5_2 Branch.).
Synced PHP_5_2 Branch.
MFB: fix issues identitified by coverity
fix issues identitified by coverity
new tests
new tests by Christopher Jones
MFH
fix possible leak
Default memory_limit value is set to 128M
Default memory_limit value is set to 128M
emoved dependency from SHELL32.DLL
Removed dependency from SHELL32.DLL
ChangeLog update
MFH
apply correct fix (aka "oops!")
MFB: Optimize out zend_hash_num_elements() call
Optimize out zend_hash_num_elements() call
fix leak on error
MFH
don't leak on error
fix possible leaks
fix possible leaks
MFH
fix potential leak
prevent potential leak on error
bail out if zend_unicode_to_string() fails
make sure err_char is initialized properly
fix double free
MFH
fix potential leak, improve length checks
MFH
- Quick hackto make tests pass # There is something missing, ZVAL_TYPED_ASCII_STRING(z, type, char*,flags) # Or am i overseeinghow that works?
do not allocate the return value if it wasn't requested
MFH
fix possible leak on failure in get_defined_functions()
MFH
fix leak in zend_disable_class()
fix double free on error
- More unicode
- Add unicode expectations
Update.
- Make shorter and do not use problematic attribute
- Compilers mightnot like the zstr return,thus return void*
Unicode support in get_browser(). To avoid additional copying/conversion during parsing, the browscap values in the returned array will be of IS_STRING type.
Check for conversion failure in "s&" and return appropriately.
- Mention zend_zstrndup()
- Implement zend_zstrndup()
fixed ZTS build
protect _SESSION, HTTP_SESSION_VARS and GLOBALS maintain an internal reference of _SESSION, so that it won't be possible to destroy it from userspace
remove register_globals remains maintain an internal reference of _SESSION, so that it won't be possible to destroy it from userspace
MFH
return NULL right away if invalid length was passed
Align Unicode and binary versions of formatted printing.
More correct patch for b-prefixes.
MFH: fix #39903 (Notice message when executing __halt_compiler() more than once)
fix #39903 (Notice message when executing __halt_compiler() more than once)
use Z_* macros
MFH
don't reinvent the wheel, use sprintf()
MFH
gracefully bail out on invalid header
Make MEMORY_LIMIT and ZEND_USE_MALLOC_MM to be always enabled. They don't make a ny significant slowdown, but incrise maintainability a lot. Note that the setting of memory_limit wasn't changes (neither in main/main.c nor in php.ini) and it still set to 16M.
Make MEMORY_LIMIT and ZEND_USE_MALLOC_MM to be always enabled. They don't make any significant slowdown, but incrise maintainability a lot. Note that the setting of memory_limit wasn't changes (neither in main/main.c nor in php.ini) and it still set to 16M.
ChangeLog update
Unicode support in ezmlm_hash().
- Use new 'x' parameter parsing
- Make spl_autoload_call() unicode safe
- Changed macro once again
- x was added toparameter parsing api
- Implement parameter parsing 'x'
- Implement zend_u_call_method to deal with situations where the function   name type is already known
Unicode support in set_include_path().
new test
new test
MFH: check CRYPTO_get_id_callback() if anyone else already set thread lock callbacks
- check CRYPTO_get_id_callback() if anyone else already set thread lock callbacks
MFB
Update.
on FreeBSD these locales have different names
- Marcus was too quick. Let's put type before zstr in the macros. - Also mark get_include_path() and restore_include_path() with U.
MFH
add check for setlocale() and sv_SE to SKIPIF section
Unicode support in *printf() functions. (Antony, Andrei)
Support 'b' prefix in front of string literals for forward compatibility with PHP 6.
MFB: little cleanup in json_determine_array_type()
remove NOP code in json_determine_array_type(), as we already know the zval passed is an array (based on patch by Ron Korving)
add missing SKIPIF sections
add missing SKIPIF sections
MFH
-NAN should not be possible
MFH
inf->INF nan->NAN
Support for systems without locale.h
Support for systems without locale.h
fix test on MacOS
fix test on MacOS
fix serialize tests after s: -> S: change
MFB: serialize() should use '.' as decimal point irrespectively to locale
serialize() should use '.' as decimal point irrespectively to locale
MFB
Updated list of available extensions in dlls. Updated oci extension ini settings. -- christopher.jones at oracle dot com
MFB: Enable full build with newer Microsoft compilers
Enable full build with newer Microsoft compilers
Added function stream_socket_shutdown(). It is a wraper for system shutdown() function, that shut downs part of a full-duplex connection
Added function stream_socket_shutdown(). It is a wraper for system shutdown() function, that shut downs part of a full-duplex connection
BFN
- zip is done
- unicode support for the procedural API
ChangeLog update
- More tests - Test naming
- Support members in SplObjectStorage serialization / shorter serialization
Unicode support in get_cfg_var().
Unicode support in parse_ini_file().
MFB: Cleanup & optimize php_filter_encode_url()
Cleanup & optimize php_filter_encode_url()
MFB: Less hackish support for spaces at the start of tags within strip_tags()
Less hackish support for spaces at the start of tags within strip_tags()
MFH: fix #39850 (SplFileObject throws contradictory/wrong error messages when trying to open "php://wrong")
fix #39850 (SplFileObject throws contradictory/wrong error messages when trying to open "php://wrong")
MFH: fix possible invalid read (reproducible only on big-endian machines)
fix possible invalid read (reproducible only on big-endian machines)
Whitespace
MFH
fix test names
remove the comment, it's not valid anymore
MFH: - make %f locale aware again - fix precision loss with %F (noticed by Sebastian Nohn) - add new tests
- make %f locale aware again - fix precision loss with %F (noticed by Sebastian Nohn) - add new tests
MFH: __builtin_expect() exists only in GCC 3.0 and higher
ChangeLog update
- Make this work in unicode mode # Well of course i should have set the return type to ascii here :-)
MFB: fix build
ChangeLog update
Remove items that are already in 5.2
- Implement feature request #39836i (SplObjectStorage empty after   unserialize) # Unicode mode currently does not work...looks like funny changes in the # unserializer.
ChangeLog update
Make convert_to_*() APIs return SUCCESS/FAILURE.
Update with INI file info.
Unicode support in ini_*() functions.
__builtin_expect() exists only in GCC 3.0 and higher.
Make all macros (RETURN_*, RETVAL_*, ZVAL_*, add_*) that convert binary strings to Unicode actually issues errors on failure. I'm surprised we haven't done this already.
Make utf8_conv stop on conversion errors when converting to UTF-16.
- MF 5.2 (put cookie in first place)
- I prefer cookie to be the first element.
Added internal heap protection   . safe unlinking   . cookies   . canary protection (debug build only)
Added internal heap protection   . safe unlinking   . cookies   . canary protection (debug build only)
merge php5 pdo_sqlite into head; this source compiles on both php5 and php6.
ChangeLog update
back to dev
5.2.1RC1
Support for 'S' format in unserialize() (forward compatibility with PHP 6)
Use 'S' for escaped binary strings and 's' for non-escaped.
add ability to call PHP functions from XPath update test
ChangeLog update
Removed deadcode found by Ron Korving
optimize out strlen() calls
ChangeLog update
MFH: Bugfix# 39435: 'foo' instanceof bar gives invalid opcode error
Bugfix# 39435: 'foo' instanceof bar gives invalid opcode error
erm.. somehow this part got here twice
fix test
- utf8
- utf8 CREDITS and php_info API - unicode progress in info.c
*** empty log message ***
Do not convert args to Unicode in getopt(), they should stay binary.
Make hebrev(c) support only binary strings.
Keep CLI args as binary strings.
Removed dummy vars.
disable tests
disable tests I don't think it makes sense to test a segfault which we cannot fix..
fix test
fix test
MFH: skip BFILE tests if Oracle is not on localhost
BFILE tests are only valid when Oracle is installed on the same host skip them if it's not
MFH
_THREAD_SAFE might be used instead of _REENTRANT
MFH: missing part of the fix for #39795
missing part of the fix for #39795 crypt.h defines struct crypt_data only if _REENTRANT is defined
fix test
fix LOBs internal position in Unicode mode
MFH
fix typo
add new tests
add new tests
MFH
OCILobGetChunkSize() does not like BFILEs, return read_length right away
MFH: fix #39795 (build fails on AIX because crypt_r() uses different data struct)
fix #39795 (build fails on AIX because crypt_r() uses different data struct)
ChangeLog update
Clarify stream_encoding.
Removed bool<>long optimization as it causes issues with strict type checks
Minor optimization (2-3%) from Brian Shire
MFH
prevent any possible problems with negative values
add new test
add new test
ChangeLog update
Optimize extract()
- upgrade phpinfo() and phpcredits()
- build fix the other driver as well (a macro would be nicer)
-  MFB: addDir returns true
- MFB: #39286, misleading error message when invalid dimensions are given
- #39286 entry
- #39286, misleading error message when nvalid dimensions are given
- fix build on HEAD   (not sure if it should compile on 6 and 5 or if it is required only for    pdo, other drivers require this fix)
- MFB: #39508, imagefill crashes with small image
- #39508, add test (imagefill crashes with small image)
- #39780 entry
- MFH:#39780, PNG image with CRC/data error raises fatal error
ChangeLog update
- #39780, PNG image with CRC/data error raises fatal error
BFN
merge PHP 5 pdo into HEAD.  This source compiles on both PHP 5 and PHP 6. If you're poking around in here, please make sure that any changes you make compile on both PHP 5 and 6.  Thanks!
MFH: sys_get_temp_dir()
MFH: new cookie tests
Cookie tests
Improve handling of POST data with Andrei's help.
MFB: Strip leading spaces from cookie names, that can come from multi-cookie headers where ; can be followed by any number of spaces.
Strip leading spaces from cookie names, that can come from multi-cookie headers where ; can be followed by any number of spaces.
BFN
MFB: fix heap corruption when adding/caching typelib (also fixes bug 39606) add test
fix heap corruption when adding/caching typelib (also fixes bug 39606) add test
MFB: fixed test
ChangeLog update
MFH
don't change public API
MFH: fix possible issue in the serializer, which might currupt struc when reallocating arguments stack
fix possible issue in the serializer, which might currupt struc when reallocating arguments stack (no reproduce case, sorry)
MFH: fix #39732 (oci_bind_array_by_name doesn't work on Solaris 64bit)
fix #39732 (oci_bind_array_by_name doesn't work on Solaris 64bit)
fix typo
Unicode filename support in dl().
Don't use zend_ascii_hash_find() here -- module names are binary strings.
fix tests
-BFN
revert the fix for #39763
revert the fix for #39763
mark more functions unicode safe add test
mark more functions unicode safe add tests
add new tests by <zoe dot slattery at googlemail dot co dot uk>
add new tests by <zoe dot slattery at googlemail dot co dot uk>
MFB: new tests
add tests for old bug reports
ChangeLog update
More BC bodges for fgets/fgetss
Allow POST of unicode data as utf8
MFB test
MFB tests (they still fail though) fix BC in fgetss()
Unicode support in strptime(). Uses runtime encoding for conversion.
version_compare() will use runtime encoding.
Unicode support/safety in iptc* functions. Untested, cause I know crap about IPTC.
initialize variables
initialize variables and make Coverity happy
Apply Matt W's patch  to only allow ASCII digits and not use u_digit().
Guard against ambiguous 'else' clauses.
Unicode support in parse_url().
MFH: fix #39763 (magic quotes are applied twice by ext/filter)
fix #39763 (magic quotes are applied twice by ext/filter) no need to add slashes manually, they are added by php_register_variable_ex()
Change fgets() behavior back to BC version
ChangeLog update
Allow submission of unicode data in utf8 form
Use proper zstr for str_getcsv() and add documentation for Andrei's peace of mind
Typo
test. please ignore
Final set of unicode changes
First part of unicode upgrade
fix import_request_variables()
add Unicode support to oci_statement_type()
mark most of the OCI8 functions as unicode aware
MFH
move handling of 'F' to the top
Make functions as being unicode safe
MFH: add missing 'F' modified (noticed by Matt)
add missing 'F' modified (noticed by Matt)
fix tests
fix tests
add zend_u_strtod() implementation by Matt Wilmas major speedup when using floats in Unicode mode also fixes several problems with the current code
MFH
destroy freelist before destroying the mutexes
news
MFH: use BSD licensed implementation of double-to-string utilities instead of LGPL one this patch also fixes thread safety issues in zend_strtod()
use BSD licensed implementation of double-to-string utilities instead of LGPL one this patch also fixes thread safety issues in zend_strtod()
ChangeLog update
MFH
let PHP_ADD_EXTENSION_DEP() to take care of this
extract() should convert keys using runtime encoding.
cosmetic improvements
cosmetic improvements
Remove PHP4.x stuff
Remove PHP4.x stuff
#39429 Update API
#39429 Update API
MFH: nuke redundant zval_ptr_dtor() call
nuke redundant zval_ptr_dtor() call and fix memory corruption/segfault
Unicode support in http_build_query().
Revert previous patch and it breaks builds with built-in cdb lib
MFB: fix test
don't pass negative maxchars to php_stream_get_line_ex()
remove duplicating line
BFN
MFB: fix bug #39625 (Apache crashes on importStylesheet call)
fix bug #39625 (Apache crashes on importStylesheet call)
Removed unused zend_mm.*
Removed unused zend_mm.*
Add str_getcsv() and fix a couple cases in recent fgetcsv() reimplementation
Unicode upgrade for fgetcsv()
ChangeLog update
- invalid filter
- MFH: invalid filter id should not return unsafe values
- invalid filter id should not return unsafe values
- WS
- MFH: callback test
- MFB: use %s
- WS
- default filter is not string anymore (in comment) - WS and error msg sync with head
- MFH: init tmp var
Make headers-related functions accept Unicode strings, but only if their contents can be converted to ASCII.
Unicode support in var_export().
Improve tolower()-related functions on Windows and VC2005 by caching locale and using tolower_l function. # Gives 10-18% speedup on bench.php # Does not change behaviour for non-windows
MFH: fix build with Sun compiler, which doesn't support -O0
fix build with Sun compiler, which doesn't support -O0
MFH: partly fix #39724 ext/spl has a soft dependcy from ext/pcre (not ext/pcre-regex)
partly fix #39724 ext/spl has a soft dependcy from ext/pcre (not ext/pcre-regex)
fix tests
fix tests, use -n to prevent any problems with existing php.ini
MFH: fix retval type
fix retval type it should be int, not zend_bool
dummy change
MFH: look for tests in sapi/cli
look for tests in sapi/cli
ChangeLog update
MFB: Added test for previous bug
Added test for previous bug
MFB: 	Default to buffered queries (much faster) 	Default to prepared statement emulation to avoid hitting MySQL bugs
Default to buffered queries (much faster) Default to prepared statement emulation to avoid hitting MySQL bugs
MFB: Added missing check for mismatching number of tokens & bound params in prepared statement emulation.
Added missing check for mismatching number of tokens & bound params in prepared statement emulation.
MFB: Added "default" option that allows a default value to be set for an invalid or missing value.
Added "default" option that allows a default value to be set for an invalid or missing value.
Config fix from Gentoo
fix Solaris build
MFH
MFH: fix leaks
fix leaks
MFH: fix AIX build
fix AIX build
add UEXPECT sections
MFB: fix test on fbsd
ChangeLog update
MFH (not tested. so some tests may fail in unicode mode)
new tests. increase coverage for more than 90%
ChangeLog update
Bug #39438 (Fatal error: Out of memory)
Bug #39438 (Fatal error: Out of memory)
typo
typo
Finalize Unicode support in serialize() and unserialize().
MFB: fix #39458
tests + BFN
fix bug #39458: ftp_nlist() returns false on empty dirs
ChangeLog update
MFB: Disallow \0 chars inside session.save_path
Disallow \0 chars inside session.save_path
Small hash table optimization
get_headers() will keep headers as binary strings.
Mark setlocale() as Unicode-safe. It shouldn't be used in unicode.semantics=on mode anyway.
Forgot to mark import_request_variables() as Unicode-safe.
Mark strtr() as Unicode-safe.
Mark pack()/unpack() as Unicode-safe. They will accept Unicode strings but convert them to binary. We can revisit supporting something like 'U' format in the future, if it's needed.
Make quoted_printable_decode() take only ASCII strings.
MFB: Added check for crypt_r()
Added check for crypt_r()
MFB: Added missing function checks
Added missing function checks
zts fixes
last set of zts fixes
MFB: Thread safety fixes.
Thread safety fixes.
MFB: Thread-safety issues
Thread-safety issues
MFB: Use reantrant crypt_r() whenever possible.
Use reantrant crypt_r() whenever possible.
MFB: Use thread-safe code
Use thread-safe code
fix test
fix test
ChangeLog update
MFB: Thread safety fixed for *nix systems
Thread safety fixed for *nix systems
MFH
add missing folding marker
- Updated timezone database to version 2006.16.
- Updated timezone database to version 2006.16.
MFH: fix #39673 (file_get_contents causes bus error on certain offsets)
fix #39673 (file_get_contents causes bus error on certain offsets)
MFB: correct fix for bug #39662 to fix leak and tree corruption fix test
correct fix for bug #39662 to fix leak and tree corruption fix test
ChangeLog update
- MFH: Add new example
- Add new example
MFH: resolve coverity issue #224
resolve coverity issue #224
add php_unescape_html_entities() proto to the header (fixes #39665)
add php_unescape_html_entities() proto to the header
MFH: fix #39662 (Segfault when calling asXML() of a cloned SimpleXMLElement)
fix #39662 (Segfault when calling asXML() of a cloned SimpleXMLElement)
add test
add test
BFN
MFH: fix #39653 (ext/dba doesn't check for db-4.5 and db-4.4 when db4 support is enabled)
fix #39653 (ext/dba doesn't check for db-4.5 and db-4.4 when db4 support is enabled)
- fix warning - addEmptyDir returns true on success - remove useless semi column
ChangeLog update
MFB: Replace non-threadsafe rand() with php_rand_r()
Replace non-threadsafe rand() with php_rand_r()
MFH: fix #39564 (PDO::errorInfo() returns inconsistent information when sqlite3_step() fails)
fix #39564 (PDO::errorInfo() returns inconsistent information when sqlite3_step() fails)
MFH: fix test on FreeBSD
fix test this errmsg is different on FreeBSD
ChangeLog update
MFH: Improve robustness of sending routines
Improve robustness of sending routines
MFB: fixed test
MFB: Added a meta tag to phpinfo() output to prevent search engines from indexing the page.
Added a meta tag to phpinfo() output to prevent search engines from indexing the page.
ChangeLog update
MFH: fix #39621 (str_replace() is not binary safe on strings with equal length)
fix #39621 (str_replace() is not binary safe on strings with equal length)
add missing argument to zend_parse_parameters()
more tests
more tests
MFB
fix tests after Tony's commit and add a test for the bug he fixed
fix test
fix test
add tests for CLI
add .cvsignore
add tests for CLI
MFH: fix #39583 (ftp_put() does not change transfer mode to ASCII)
fix #39583 (ftp_put() does not change transfer mode to ASCII)
call sapi_deactivate() & friends on error fixes leak with `php-cli -n -c ..`
initialize CG(literal_type) using ZEND_STR_TYPE macro add CG(literal_type) initialization in non-ZTS mode fixes backticks operator
BFN
fix #39613 (Possible segfault in imap initialization due to missing module dependency) patch by wharmby at uk dot ibm dot com
fix #39613 (Possible segfault in imap initialization due to missing module dependency) patch by wharmby at uk dot ibm dot com
ChangeLog update
nullify opened_path and filename (when required) fixes invalid reads with `php-cli -F <script>`
nullify opened_path and filename (when required) fixes invalid reads with `php-cli -F <script>`
MFB
add tests for 2 old bugs
do not set an env variable without a name and a value
do not set an env variable without a name and a value
MFB
add two more tests (test bogus parameters and bogus server respsnes)
fix error messages in Unicode mode when global error handle is used
fix oci_bind_array_by_name() with SQLT_ODT type fix tests
fix tests
fix oci_bind_array_by_name() in Unicode mode
ChangeLog update
Unicode support in get_html_translation_table().
*** empty log message ***
Unicode support in ftok().
*** empty log message ***
- Unicode support for tick functions. - Update unicode-progress.txt
- MFH:  #39538, fgetcsv can't handle starting newlines and trailing odd   number of backslashes (David Soria Parra, Pierre)
- #39538, fgetcsv can't handle starting newlines and trailing odd   number of backslashes (David Soria Parra, Pierre)
fix #39575 (move_uploaded_file() no longer working (safe mode related))
fix #39576 (array_walk() doesn't separate userdata zval)
- fix ENV section handling
- fix ENV section handling
MFH: fix #39576 (array_walk() doesn't separate userdata zval)
space to tab
ChangeLog update
Unicode support in import_request_variables().
ensure that bucket->brigade is NULL in newly created bucket
Note.
Unicode support in highlight_string().
add test
remove redundant error message add test by <zoe dot slattery at googlemail dot com>
remove redundant error message add test by <zoe dot slattery at googlemail dot com>
MFB: Adjust previous patch to work better
Adjust previous patch to work better
fix #39551 (Segfault with stream_bucket_new in user filter) also fixes several segfaults and leaks add test
add test
add test for some of builtin funcs
fix leak in get_extension_funcs()
MFH: fix proto
fix proto
ChangeLog update
add new test
add new test
fix leak in zend_register_functions() this is very odd, but Zend MM said nothing about it..
Update for basic_functions.c
MFH test
improve test
- MFH: Add new test
- Add new test
- Add optional use_keys parameter to iterator_to_array(), (idea by Kevin)
MFH
fix test on those platforms where infinity is not "INF", but "Infinity"
fix test on Solaris
fix test on Solaris
MFH
efree() if not NULL
ChangeLog update
MFB
new tests. what a crazy idea...
MFB: pack()/unpack() tests
pack()/unpack() tests
added testcases for ext/mysql (written by Ulf Wendel)
added unicode support for ext/mysql
ChangeLog update
catch up: - Sara upgraded ext/bcmath - Sara upgrades ext/bz2 - Dmitry upgraded ext/ctype - Sara upgraded ext/gmp - Sara upgraded ext/hash - Andrei upgraded ext/json - Georg upgrades ext/mysqli - Dmitry and Andrei upgraded ext/reflection - Rob upgrades ext/simplexml - Dmitry upgraded ext/soap - Nuno upgrades ext/tidy - Rob upgrades ext/xml - Rob upgraded ext/xmlreader - Rob upgraded ext/xmlwriter - Rob upgraded ext/xsl
ChangeLog update
Use u_memcpy() instead of memcpy().
- return domain in FS encoding - use ZSTR_DUPLICATE
COM initialization/deinitialization are done only if necessary
COM initialization/deinitialization are done only if necessary
Unicode support. Now the real UG(unicode) value is available during MINIT calls.
ChangeLog update
- Add the strtr implementation for unicode for the case where there are   characters with a code point value >= 256.
remove old file (which was already removed from 4.4 and HEAD trees)
MFB: fixed compiler warnings
fix tests
fix tests (add missing SKIPIF sections and a fix for FreeBSD)
- fix protos
- fix ext/zlib status;   Nuno upgraded gzio   stream wrapper and filter seem untouched
add new tests
more new tests, yikes!
- ext/ progress
renamed to oo_getcomment.phpt
ChangeLog update
- mv oo_get_comment.phpt oo_getcomment.phpt
- MFH: #39217, serialNumber might be -1 when the value is too big
- unicode upgrade - fix typo: ENIGNA->ENIGMA - add and fix tests
fix typo (patch by Mike Wallner)
add new tests, improve existing ones
fix array_key_exists() with NULL key in Unicode mode
add new tests
fix leak, add test
fix memory leak and typo in zend_parse_parameters(), which caused segfault add test
Backport md2, ripemd256, and ripemd320 algos from HEAD
#9278 and #39506, force the binary mode for the zip operation only. At least I do not have to set/restore it in each function.
typo
typo
fix leak appearing when converting object to NULL add test
fix leak appearing when converting object to NULL add test
add new tests
add new tests
- mhash news
- unicode upgrade - use current parameter parsing API - added keygen constants - Added keygen functions: mhash_keygen_count, mhash_get_keygen_name,   mhash_keygen_uses_hash, mhash_keygen_uses_salt, mhash_get_keygen_salt_size,   mhash_keygen
- unicode upgrade # as setlocale() throws an E_STRICT deprecated warning, I guess we'll   see ICU message catalogue support?
#39506 and PECL #9278, should fix the problem for the other SAPI (works for CLI, CGI and embed) see: http://news.php.net/php.internals/26606 for the details
Removed unnecessary getenv/putenv calls
Removed unnecessary getenv/putenv calls
mark more functions unicode compatible
fix test on AIX
fix test on AIX
add unicode support so Andrei finally stops asking me about it update tests
fix test
fix test
fix test
fix test
ChangeLog update
Added missing object support to file_put_contents().
one more test
one more test
add new tests
add new tests
Bundled lib upgrade
MFB: Tell linker that we're using stati libcurl
Tell linker that we're using stati libcurl
- MFH: No idea if we actually support 16 bit systems, but this just looked wrong
- No idea if we actually support 16 bit systems, but this just looked wrong
- #39508, do not use the 4 neighbors implementation for small images (w<4)   test will follow
cgi.* and fastcgi.* directives are moved to INI subsystem. The new directive cgi.check_shebang_line can be used to ommiting checnk for "#! /usr/bin/php" line.
cgi.* and fastcgi.* directives are moved to INI subsystem. The new directive cgi.check_shebang_line can be used to ommiting checnk for "#! /usr/bin/php" line.
add .libs to .cvsignore
add .libs to .cvsignore
Added comments
Added comments
ChangeLog update
add new test
BFN
don't forget to close the stream when/if flock() fails
don't forget to close the stream when/if flock() fails
MFH: fix leaks in get_meta_tags() when used with b0rked HTML add test
fix leaks in get_meta_tags() when used with b0rked HTML add test
MFH: improve the fix and the test
improve the fix and the test
It's called addEmptyDir(), not createEmptyDir()
MFB: php_splice() optimization
Use symbolic names
Use symbolic names
MFH
actually copy input to return_value input is a local var, you can't use it this way
new test
new test
- fix tests
- fix buffer size alignment - avoid memory overflow #if MEMORY_LIMIT
add a note that libxml2 2.6.2x is required
add a note that libxml2 2.6.2x is required
MFH: fix compile warning
fix compile warning
fix test
ChangeLog update
MFB: add missing headers
Add missing header installation..
MFB: updated generated file
- Optimize SPL directory stuff by making iterator part of object
- Update test after SPL change
MFH: SplFileObject no longer overwrites SplFileInfo::getFilename()
SplFileObject no longer overwrites getFilename()
removed bogus char
MFH: SplFileObject::getFilename() no longer overwrites SplFileInfo::getFilename() (SplFileObject::getFilename() therefor only returns the filename now)
Optimized array functions utilizing php_splice().
- MFH: Correct comments
- Correct comments
ChangeLog update
MFB: fix leak in oo_stream.phpt
fix leak in oo_stream.phpt
MFB: fix leak in the object destrucotr when zip_close() fails (fixes oo_delete.phpt)
fix leak in the object destrucotr when zip_close() fails (fixes oo_delete.phpt)
MFB: fix leaks within zip entries in several tests
fix leaks within zip entries in several tests
MFB :fix leak in oo_setArchiveComment.phpt
fix leak in oo_setArchiveComment.phpt
- fix leak in zip_close when the function's succeeded
ChangeLog update
MFB
fix the bug I introduced previously, sorry anyway, convert the recursive version of the binary search to an iterative one
MFH
fix type mess (thanks again, Chris)
fix build with old client versions
MFB
fix possible issue with negative values in oci_set_prefetch (reported by Chris Jones)
MFB
mark a few variables and functions as static
MFB
mark the binary search delimiters as unsigned, so that the compiler can use a quick shift operation
Revert wrong path
add _not yet 100% complete_ Unicode support
fix segfault in ZTS mode when statements containing sub-statements are destroyed in wrong order
fix segfault in ZTS mode when statements containing sub-statements are destroyed in wrong order
stat() is reimplemented using using GetFileAttributesEx(). The new implementation is faster then implementation in MS VC CRT, but it doesn't support Windows 95.
stat() is reimplemented using using GetFileAttributesEx(). The new implementation is faster then implementation in MS VC CRT, but it doesn't support Windows 95.
Unicode support
Removed unnecessary ftell() calls (one call for each included PHP file)
Removed unnecessary ftell() calls (one call for each included PHP file)
Disabled reading from stream (calls to read()) after EOF
Disabled reading from stream (calls to read()) after EOF
VCWD_REALPATH() is improved to use realpath cache without VIRTUAL_DIR
VCWD_REALPATH() is improved to use realpath cache without VIRTUAL_DIR
- Forward port the binary cast, which will do the same as the string cast in   PHP 5.2.
Intialization code is moved from request startup to module startup
Intialization code is moved from request startup to module startup
Allow mixing Unicode/binary string types.
Start timiout thread on Windows only if necessary
Start timiout thread on Windows only if necessary
Implemented registry cache that prevent registry lookup on each request. In case of modification of corresponding registry-tree PHP will reload it automatic.
Implemented registry cache that prevent registry lookup on each request. In case of modification of corresponding registry-tree PHP will reload it automatic.
opendir() is reimplemented using GetFistFile/GetNextFile those are faster then _findfirst/_findnext
opendir() is reimplemented using GetFistFile/GetNextFile those are faster then _findfirst/_findnext
Removed unnecessary checks for ISREG file and corresponding stat() calls on Wind ows
Removed unnecessary checks for ISREG file and corresponding stat() calls on Windows
typo
Zend Memory Manager Improvements . use HeapAlloc() instead of VirtualAlloc() . use "win32" storage manager (instead of "malloc") on Windows by default
Zend Memory Manager Improvements . use HeapAlloc() instead of VirtualAlloc() . use "win32" storage manager (instead of "malloc") on Windows by default
Use $(CC) for linking instead of $(LD). This allows usage of advansed optimization techniques (like Intel's inner-procedure optimization)
Use $(CC) for linking instead of $(LD). This allows usage of advansed optimization techniques (like Intel's inner-procedure optimization)
Faster and better licensed implementation
Faster and better licensed implementation
Simplify the code base as this getpwd() was used only once
Simplify the code base as this getpwd() was used only once
ChangeLog update
Added missing API declarations.
add two more unicode related macros
Enable xmlwriter_start_dtd_entity(), xmlwriter_end_dtd_entity() & xmlwriter_write_dtd_entity()
MFB: Added missing PHPAPI declaration
Added missing PHPAPI declaration
MFB: fix test
fix test for non English guys
MFB: fix possible segfault
fix an invalid read + invalid free()
MFB: static'fication
statification of local functions and variables. also remove a few uneeded global variables interesting new warnings: /cvs/php5/ext/xmlwriter/php_xmlwriter.c:391: warning: 'xmlwriter_objects_clone' defined but not used /cvs/php5/ext/xmlwriter/php_xmlwriter.c:1281: warning: 'zif_xmlwriter_start_dtd_entity' defined but not used /cvs/php5/ext/xmlwriter/php_xmlwriter.c:1325: warning: 'zif_xmlwriter_end_dtd_entity' defined but not used /cvs/php5/ext/xmlwriter/php_xmlwriter.c:1333: warning: 'zif_xmlwriter_write_dtd_entity' defined but not used
Add "As of 5.2.1" notes as requested
New features/errormsgs/return values in ext/zip New optional parameter in ext/ming
MFB 5_2: Revert patch for warnings about missing headers. These are fixed in the latest version of libming. Sync code for SWFMovie::streamMP3. This function will now return the number of frames in the file.
Revert patch for warnings about missing headers. These are fixed in the latest version of libming. Sync code for SWFMovie::streamMP3. This function will now return the number of frames in the file.
ChangeLog update
fix more tests
fix test
eliminate a couple of compile warnings
fix test and prevent endless loop
fix #39300 (make install fails if wget is not available) add support of 'fetch'
HashTable copying optimization (Matt Wilmas)
HashTable copying optimization (Matt Wilmas)
Put zend_lookup_class_ex back into the API for BC.
ChangeLog update
1.0.4
Improved mime magic file detection
MFB: fixed tests
BFN
- MFH: No C++ comments (fix #39414)
- No C++ comments (fix #39414)
ChangeLog update
MFH: arginfo fixes
Unicode support in entities/special chars funcs. See the NOTE at the top.
It is allow_url_include not allow_fopen_include
include php://input && data: have been disabled (with allow_fopen_include off) new DateTime(new stdclass) now throws exception imap_[re]open() has new optional parameter
param parsing fix
Enable the new 5th parameter
MFH: throw exception on invalid parameters
Throw exception on invalid parameters in DateTime::__construct() #makes sure the object doesnt get initialized with bogus parameters
MFH: fix segfault & improve test
Windows doesn't have chown(). Remove unused function and reference to undeclared macro VCWD_CHOWN().
Windows doesn't have chown(). Remove unused function and reference to undeclared macro VCWD_CHOWN().
ChangeLog update
data: and php:stdin/input allow_url_include checks
data: and php:stdin/input allow_url_include checks
- gdpng entry
ChangeLog update
- MFH: Make parameter parsing api check happy
- Make parameter parsing api check happy
Mark memory streams as is_url
Mark memory streams as is_url
- MFH Store length of autoload file exts
- Store length of autoload file exts
- Mark some funcs as unicode ready
- MFB: update cvsignore
- WS
- MFB: vim folding
- MFB: silent compiler warnings
- MFH: optimize horizontal and vertical lines
- ws
- MFH #39366, imagerotate does not use alpha with angles>45
- #39366, imagerotate does not use alpha with angles>45
- #39273 entry
- MFB: #39273, imagecopyresized and alpha channel
- #39273, imagecopyresized and alpha channel
ChangeLog update
- News entry for zip MFH
wrong bug #
- BFN
- MFH: Synch
- MFH: Include new headers only if present
- Include new headers only if present
Add "comment" to make tracking the commit down easier
- fix build (var.s is for zstr)
- _zip_error_clear declaration - WS
- fix protos
- add .libs
MFH: fix parameter parsing in getrusage()
Generated file
MFH: Add "wrong param" warning to strtotime()
MFH: oneliners..
MFH: use PHP_ME_MAPPING rather than ZEND_NAMED_FE/ZEND_FN
MFH: Remove SKIPIF
Remove SKIPIF
MFH: fix crash on invalid regex
CS fix
MFH: missing includes
Add missing includes
Filter extension news
MFH: 	Added filter support for $_SERVER in cgi/apache2 sapis 	Make sure PHP_SELF is filtered in Apache 1 sapi
fixed illegal encoding detection when mbstring.encoding_translation is enabled.(made by komura)
added japanese legacy encoding support (made by moriyama@miraclelinux.com)
ChangeLog update
- restoring init of the uni str which has been removed (patch by Pierre)
- add simple test for addEmptyDir()
convert a few more functions
start converting the tidy and tidyNode objects to be Unicode aware I added a converter pointer per node, so that the text can be converted to unicode when requested this commit also breaks a few tests in unicode mode, but it isnt scary at this time :P
MFB: Added missing boundary checks.
Added missing boundary checks.
ChangeLog update
- fix stat when used with freshly added entries - add zip_clear_error, zip_file_clear_error and  zip_stat_init in libzip - add addEmptyDir(name) method, creates an empty directory
- use zip_name_locate in getCommentName
- bug first
cleaning some warnings (char* -> zstr)
- Consistency of apply funcs, #39320
- update ext/zip
- mark extractTo as U-ready, path and filenames are now encoded correctly
- Drop some uncompletley synched code, makes it work at least
- fix possible leak in addFile when an unicode filename is given - Mark getStream as Unicode ready, the tests was wrong   $unistring .= fread($fpbinary); $unistring remains as unicode.
Cleanup of 5.2 update file from Steph
- initial unicode support  . entry names will be converted to ascii. zip works with cp437    when 7zip support will be added, unicode string will be supported  . path and filenames are now encoded using php_stream_path_param_encode    if the filename/path is used as entry name, it is converted to ascii  . the stream (getStream and zip://) needs some tweak. I'm not sure if it    should return unicode or binary, neither how to change the default. For    now it returns unicode (seems to be the default :) comments/suggestions welcome
- update release date
- add comment
ChangeLog update
- missing test archive
Back to dev
5.2.0
- nuke flags local variable, it is constant
Prep news file for 5.2
- add tests for extractTo, set/getComment and stream and zip_entry_close
- fix leak in statName and statIndex - use zip_locate_name instead of zip_stat in setCommentName (faster and   work around for a possible bug)
Pierre requested an update to this.  I don't think it makes sense to remove what little API docs we have here, and the simple example in this doc is a lot easier to follow than ext/filter.
ChangeLog update
fix build
- convert unicode messages to strings - mark functions unicode safe - fix test
- upgrade to current parameter parsing API - mark functions unicode safe
ChangeLog update
Turn doc comments into zstr strings with corresponding adjustments.
- upgrade ext/sysvshm to current parameter parsing API - mark functions unicode safe - add shm_has_var()
convert_cyr_string() should operate only on binary strings.
- default filter is not string (only comment fix for dave :)
update news
MFH: update readme
update readme
ChangeLog update
no more magic quotes
Unicode support for link functions.
Oops.
Make url encoding/decoding functions use binary strings only.
Mark syslog functions with U. No upgrading is necessary -- we'll just use runtime encoding to convert strings.
fix wrong function prototype (see bug #39260)
ChangeLog update
*** empty log message ***
Unicode support for get(server|proto)by(name|number) family of funcs.
Unicode support for is_uploaded_file()/move_uploaded_file().
Unicode support for fnmatch().
- add test for callback with non modified var - update changelog
More curl constants
Add a note reffering to the "new feature" section (lukas)
Add oneliner descriptions
Missing RETURN_TRUE inside the PHP_ZIP_SET_FILE_COMMENT macro
New extensions 	- json 	- filter 	- zip New classes 	- DateTime 	- DateTimeZone New functions 	- image_type_to_extension 	- gmp_nextprime 	- xmlwriter_full_end_element 	- xmlwriter_write_raw 	- timezone_identifiers_list Added error message (objects without casting handler) caught by rasmus
ChangeLog update
Silly me. those PDO constants are class constants #thanks ilia \o/
New constants
New INI entrys php-cli searching php.ini "bc break"
session_set_cookie_params new param
mention php_errormsg bc break..
Add sections: backwards incompatible error messages & new functions/methods/classes/constants/optional parameters
Mark reflection methods as Unicode-compliant (except for FIXME parts).
fix add_u_assoc_null() macro
Revert patch because we are at last RC stage.
ChangeLog update
Added filter support for $_SERVER in cgi/apache2 sapis Make sure PHP_SELF if filtered in Apache 1 sapi
ChangeLog update
Removed unused var
ChangeLog update
- remove remaining "mode" arguments in the old api
ChangeLog update
- add signature_algo to the function signature
- #39217, use openssl i2s_ASN1_INTEGER to get a string representation of   the integer (large or not). It also keeps BC by using only decimal fmt - add test
fix #39217 (serialNumber is might be -1 when the value is too big)
fix ZTS build without SPL enabled
- fix windows build with php < 6 - fix runtime error on other OS
Back to dev
rename REAL_KEY_SIZE() to USTR_BYTES() and move to zend_unicode.h this macro is going to be actively used in Unicode version of OCI8 (and other extensions, probably)
Make use of abstract methods be E_STRICT rather then E_ERROR
MFH(r-1.114) Can't use real arrays held by ArrayObjects in write context
5.2.0RC6
ChangeLog update
Update test to reflect fix in spl_array.c r-1.114
getrusage.c was easy(). But don't ever use zend_parse_parameters() like that.
Unicode support in microtime() and gettimeofday().
Pick some low-hanging fruit.
Clarify why the result of json_encode() is a binary string.
fix tests
Unicode support for remaining image.c functions.
Unicode support for headers_sent().
add new test by Pierre
add new test by Pierre
fix folding tags, nuke json globals
fix invalid write
fix coverity issue #262 (uninitialized variable)
ChangeLog update
MFH: fix bug #38882 (ldap_connect causes segfault with newer versions of OpenLDAP)
fix bug #38882 (ldap_connect causes segfault with newer versions of OpenLDAP)
- Here, too
- MFH: added missing return...
- added missing return...
MFH: fix arginfo
MFH: fix PECL bug #9061 (oci8 might reuse wrong persistent connection)
fix PECL bug #9061 (oci8 might reuse wrong persistent connection)
ZTS fix
ChangeLog update
fix test
fix test
Don't mention http_input_encoding converter as it won't be used anymore soon.
Typo.
Extend open_basedir functionality to allow runtime tightening
More unicode upgrading notes
Update the upgrading doc to the current wisdom.  Pass One. This pass simply retruthifies the information already present. The next pass will add additional information.
Unicode support in JSON functions.
Implement add_utf8_property_* API.
- MF52: Updated timezone database.
- Updated timezone database.
MFB: Unify handling of return values on validation failure and var not found
Unify handling of return values on validation failure and var not found
Unicode support. (Two more places must be fixed. Look for FIXME comments.)
ChangeLog update
Optimize ZEND_U_CASE_EQUAL() and move it to the header file.
MFH: initialize optional vars
initialize optional variables
Patch to support primitive types. (Ilia)
ChangeLog update
fix compile warning
fix compile warning
ChangeLog update
MFB: Remove bogus INI entry
Remove bogus ini entry
ChangeLog update
- Add an extra parameter to the cast_object handler that can be used by   various types as needed. - Use that parameter to pass a specific converter for   IS_UNICODE/IS_STRING types.
fix win32 build
fix win32 build
fix test
MFB: missing API declaration
Added missing API function declaration.
- fix skipif - generalize error message expectation
- add test, segfaults ATM
ChangeLog update
MFB: main/php_open_temporary_file.c
Improve open_basedir checks
  MFB:   Memory assigned to the request_rec should be allocated from apache pools   and should not be free'ed at the end of the handler phase
Memory assigned to the request_rec should be allocated from apache pools and should not be free'ed at the end of the handler phase
- use new zend_fcall_info API - use enums where appropriate
- missing part of zend_fcall_info API patch
MFH: use connection charset when reading LOB data
use connection character set when reading LOB data
Make zend_memory_peak_usage() to be avalable even without --enable-memory-limit
Make zend_memory_peak_usage() to be avalable even without --enable-memory-limit
ChangeLog update
fix test
fix test
BFN
MFH(r-1.96) Bugfix#38649 Optional param not initialized
Bugfix#38649 Optional param not initialized
MFH(r-1.38) Bugfix 38648: Don't assume all buckets are part of a brigade
Bugfix 38648: Don't assume all buckets are part of a brigade
Extend zend_fcall_info_args functions. (Patch from Mike Wallner)
- imagecreatefrompng(emptyfile) fix entry
MFH
initialize variable
MFH: fix #39125 (Memleak when reflecting non-existing class/method)
fix #39125 (Memleak when reflecting non-existing class/method)
add test
add test
MFB: s/false/null/
s/false/null/
- MFH: Change validating filters to return "null" on failure so that they can be   distinguised from the value "false" which might be valid as well.
- Change validating filters to return "null" on failure so that they can be   distinguised from the value "false" which might be valid as well.
MFH: check filter and class names for empty strings
check filter and class names for empty strings
MFB:  Catch empty strings right away.
Catch empty strings right away.
fix test on 64bit
MFH: avoid reading str[-1], add warning when invalid format specified add test
avoid reading str[-1], add warning when invalid format specified add test
MFH: fix crash when parsing invalid hostnames/IPs
fix crash when parsing invalid hostnames/IPs
MFH
more fixed problems
MFH: fix segfault/leak, add test
fix segfault/leak, add test
MFB: Sync with Unix build
Sync with Unix build
BFN
BFN
BFN
ChangeLog update
- don't check signature if the file is empty (valgrind reports with test   001), thx Tony for the head up
- don't check signature if the file is empty (valgrind reports with test   001), thx Tony for the head up
MFH: access mode for dbase_open() cannot be < 0
access mode for dbase_open() cannot be < 0
add new test
add new test
MFH: fix leak and typos in error messages
fix leak and typos in error messages
missing variable initialization
MFH: fix #39112 (typo in error message)
fix #39112 (typo in error message)
- Make fileinfo compile with PHP 5.2 as well.
ChangeLog update
PHP6 Updates
Typos!
print_r(), error_log() and sys_getloadavg() are Unicode-safe.
Initialize optional vars.
MFB: Improve parameter parsing
Unicode support for call_user_* functions.
Improve parameter parsing
Proper name for credits
MFH tests
MFB5.2  Constants:  - OPENSSL_VERSION_TEXT  - OPENSSL_VERSION_NUMBER  - OPENSSL_KEYTYPE_EC  Functions:  - openssl_pkey_get_details()  - openssl_csr_get_subject()  - openssl_csr_get_public_key
MFB
improve SKIPIF condition
BFN
MFH: fix PECL bug #8816 (issue in php_oci_statement_fetch with more than one piecewise column) patch by jeff at badtz-maru dot com
Oi
Add stream_resolve_include_path()
ChangeLog update
- MFB: fix possible segfault (see test 004) always exists and returns NULL   on error (thx Bjori for the head up)
- fix possible segfault (see test 004) always exists and returns NULL on   error
MFB: Added missing configuration checks
Added missing configuration checks
- MFB: #39082, image* segfaults when used with only one argument  (introduced in 5.2+, no news entry)
- #39082, image* segfaults when used with only one argument   (introduced in 5.2+, no news entry)
Error message cleanup (patch by  Matt W (php_lists -AT- realpain.com))
fix test
Error message clean up (patch by Matt W (php_lists -AT- realpain.com))
Remove duplicate 'wrong param count' warning
ChangeLog update
MFB (move static keywording from .h to .c)
fix tests
Update test
Remove double "wrong param count" warnings
Add "wrong param count"/"expecting parameter .. to be.." warning to strtotime()
fix build
MFB: Added missing safety checks (Problem identified by Coverity scan)
Added missing safety checks (Problem identified by Coverity scan)
- update tests
MFB: Added missing safety checks (Problem identified by Coverity scan)
Added missing safety checks (Problem identified by Coverity scan)
- forgot one and order the ext lists alpha.
Initial Unicode support
- I learned today that telling Andrei about what I'm working on is not   not enough, selber schuld?
Another build fix
Update SQLITE2 (non-PDO parts at least) for PHP6/Unicode Change default build of bundled libsqlite to utf8 mode iso-8859 mode is still available using --disable-sqlite-utf8
More PHP6 Updates
Hash functions for UTF-8 keys.
MFH(r-1.356) Don't assume the array elements are arrays too
Minor refactoring using zpp API A few meaningful Unicode updates. A handful of leak plugs, and a crash fix in a pear tree.
Avoid portability problems
BFN
Win32 build gets confused by expansion of U_STRING_DECL macro with constants
ChangeLog update
Default to ZEND_STR_TYPE.
MFB: Make quote() in PostgreSQL use PQescapeByteaConn() whenever possible for binary strings.
Make quote() in PostgreSQL use PQescapeByteaConn() whenever possible for binary strings.
MFB: Make pg_escape_bytea() use PQescapeByteaConn() whenever possible.
Make pg_escape_bytea() use PQescapeByteaConn() whenever possible.
back to dev
MFB: Expose session storage module locater and serialization function via PHPAPI
Expose session storage module locater and serialization function via PHPAPI
modulo 0 news entry
Unicode support in is_callable().
Unicode support in uniqid().
Mark memory funcs with U.
more improvements
more improvements
Mark with U.
Mark pageinfo.c funcs with U.
Mark rand.c functions with U.
Forgot to mark these u-safe
MFH: fix #39067 (getDeclaringClass() and private properties)
fix #39067 (getDeclaringClass() and private properties)
Patch from Matt W to fix the case of hitting ERANGE too early.
Unicode string support for extension_loaded().
Unicode string support in get_extension_funcs().
MFH(r-1.376): Preserve EG(return_value_ptr_ptr) when calling zend_execute_scripts()
re-add the test
MFH: fix #39060 (virtual_file_ex() is broken on *BSD)
fix #39060 (virtual_file_ex() is broken on *BSD)
BFN
fix PECL bug #8816 (issue in php_oci_statement_fetch with more than one piecewise column) patch by jeff at badtz-maru dot com
new test
ChangeLog update
Revert until 5.2's release since we're in RC stage
MFH(r-1.376): Preserve EG(return_value_ptr_ptr) when calling zend_execute_scripts()
Preserve EG(return_value_ptr_ptr) when calling zend_execute_scripts()
This might not be necessary if we clean it all up ourselves.
TODO
Unicode support for str_replace() and str_ireplace().
Updated for PHP6
<tony2001> ilia: are you serious? <ilia> tony2001: yes
- env/server support is not yet fixed
add test
add test
5.2.0RC5
Increment replace count value for case-sensitive single char searches.
MFB: - nuke unused variable - "prefer" two arguments - only print "wrong parameter count" once
- nuke unused variable - "prefer" two arguments - only print "wrong parameter count" once
MFH: decrement ch->uses (or destroy handle) when destroying multi handle
decrement ch->uses (or destroy handle) when destroying multi handle
MFB: fix build with new c-client
fix build with new version of c-client
CRLF->CR
mark functions unicode compliant add test
Library updates
MFB: Added PQescapeStringConn support to windows too
Added PQescapeStringConn support to windows too
Allow future extensibility without binary compatibility break
Allow future extensibility without binary compatibility  break
ChangeLog update
MFB:  Added support for character sets in PDO quote() method for PostgreSQL 8.1.4 and higher.
Added support for character sets in PDO quote() method for PostgreSQL 8.1.4 and higher.
MFB: Added support for character sets in pg_escape_string() for PostgreSQL 8.1.4 and higher.
Added support for character sets in pg_escape_string() for PostgreSQL 8.1.4 and higher.
- Mark stristr() with U. - zpp support for ucwords()
*** empty log message ***
Unicode support in substr_compare().
- ENV/SERVER entry
add test
add test for #39036 (reproducible with 5.1.6, but works fine in 5.2 and HEAD)
MFH
add missing ifdef
MFH
minor AIX fix
add missing ifdef
add missing ifdef
- output layer and ext/zlib news
Update credits
Update credits
Update to the new parameter parsing API
-  Add Ilia
- update changelog
BFN
fix bug #39035 (Compatibilty issue between DOM and ze1_compatibility_mode
- used only in HEAD
- MFB: api shake up and bug fixes (Ilia,Pierre)   all non unicode tests pass
- wrong definition
fix typo
MFH: fix #39032 (strcspn() stops on null character)
fix #39032 (strcspn() stops on null character)
return false on invalid mode and don't segfault
fix test
ChangeLog update
- MFB
- more tests for the last commits
remove TSRMLS_CC, php_stream_path_decode() is a macro
int -> size_t
use correct type for p_len
- typo
- fix failure with tests/lang/bug23489.phpt - allocate fci param space at once with php_output_handler_user_func_t
Shoehorn myself into the credits.
leaks-- fix test
fix tests
fix leak
don't forget to increase refcount when adding entry to the return_value
MFB: Last set of zend_hash_init() optimizations
PHP6 updates for convert_uu(en|de)code()
Last set of zend_hash_init() optimizations
Update proc_open() for PHP6
Update.
nuke unused variables
fix build
Unicode support in strripos().
MFH: throw a warning when doing modulus by 0 (fr #39027)
throw a warning when doing modulus by 0 (fr #39027)
MFB: optimize zend_hash_init() with known hash table sizes.
optimize zend_hash_init() with known hash table sizes.
MFH: compact() doesnt throw "wrong param count"
compact() doesnt throw "wrong param count"
PHP6 Update for get_included_files() and export of path decode for Zend
MFB: pg_send_prepare(), pg_send_query_params() & pg_send_execute() do not throw "Wrong parameter count"
pg_send_prepare(), pg_send_query_params() & pg_send_execute() do not throw "Wrong parameter count"
use PHP_ME_MAPPING rather than ZEND_NAMED_FE/ZEND_FENTRY
fix ZTS build
- vi folding, ws
Speedup array/HashTable copying. (Matt W)
Speedup array/HashTable copying. (Matt W)
fix test
- use fci/fcc instead of zval* for user ob handler
- fix (ZTS) build
Refactor the filter extension 	- Cleanup API 	- Added handling for circular references 	- Renamed functions.
ChangeLog update
fixed --disable-mbregex to disable multibe-regex.
MFH: fix #38996 (PDO_MYSQL doesn't check connections for liveness)
fix #38996 (PDO_MYSQL doesn't check connections for liveness)
Flag the easy stuff out of the way, proc_open() is the real beast in here
MFH: the last part of the fix for #39004
the last part of the fix for #39004
Use php_error_docref() instead.
More offset fixes. Added E_NOTICE where appropriate.
fix the fix for #39004
fix the fix for #39004
Update glob() for PHP6
Unused label, now how the heck did it get there?
Note context param changes in opendir(), dir(), and scandir()
Switch opendir/chroot/chdir to new path_param API and upgrade scandir() for PHP6
Make stripos() work with Unicode strings.
don't rely on uninitialized var
fixed bug #37103: libmbfl headers was not installed correctly.
fix tests
fix tests
Rename utils.php to utils.inc
Rename utils.php to utils.inc
MFH: #39001 (ReflectionProperty returns incorrect declaring class for protected properties)
fix #39001 (ReflectionProperty returns incorrect declaring class for protected properties)
MFH: fix #39003 (__autoload() is called for type hinting)
fix #39003 (__autoload() is called for type hinting)
Initial commit..
protos
Protos
add proto
Add .cvsignore
Note context parameter in copy() function and group streams related additions
Apply new path encoding style to the rest of e/s/file.c
Apply simplified path encoding to copy() and give it a context param. Funnily enough, this makes the copy() implementation almost identical to what it was back in PHP5.
Try out simplified API for encoding paths/filenames
Allow hash()/hash_hmac() to accept ascii-unicode data, Update tests to work in unicode.semantics mode.
ChangeLog update
ZTS fix
Allow unicode-ascii to binary conversion and do proper path conversion for file variants
unicode fixes
fixed bug #37103: libmbfl headers was not installed correctly.
ChangeLog update
MFB: Added safety checks against integer overflow.
Added safety checks against integer overflow.
ChangeLog update
MFB: Added missing API function declaration.
Added missing API function declaration.
MFB: Added missing declaration of the php_get_uname() PHPAPI function.
Added missing declaration of the php_get_uname() PHPAPI function.
Heck, might as well commit this..
fix proto
fix protos
fix arginfo
MFH
declare subclass after adding class constants to the parent
If one name is disallowed don't drop all files
MFH: fixed error message
ChangeLog update
MFH
more 64bit fixes
MFH
more 64bit fixes
MFH
64bit fixes
add .libs to .cvsignore
fix test name
fix test name
Gah. these werent suppost to get committed atm # Those do differ from -dist thought, if someone could write a line # or two as to why they differ I would appreciate it!
MFB: remove unused ini options
Remove unused ini options
MFB; new ini options
Add new ini options #feel free to add comments to it
bjori->Hannes
MFB: Added handling for virtual_file_ex() failures.
Added handling for virtual_file_ex() failures.
BFN
MFH: fix #38981 (using FTP URLs in get_headers() causes crash)
fix #38981 (using FTP URLs in get_headers() causes crash)
new tests
new tests
fix test
fix test
add new tests
add new tests
MFH: fix arginfo&proto
fix some compiler warnings
fix some compiler warnings
Removed unused libfcgi
- imagefill entry
- MFB: imagefill(), infinite loop with wrong color index
- imagefill(), infinite loop with wrong color index
MFH
fix compile warning
initialize variable and make valgrind happy
ChangeLog update
- Return timezone's names as Unicode strings.
- Updated the Apache 1.3 sapi as add_assoc_string's signature has been changed.
MFH: use if() instead of ?:
use if() instead of ?: and avoid possible optimization problems
ZTS fixes. Implemented Andrei's hints (simplifying unicode stuff)
BFN
MFB: fix bug #38949 (Cannot get xmlns value attribute) add test
fix bug #38949 (Cannot get xmlns value attribute) add test
fix test
fix test the error message is different in Oracle10
MFH: fix #38961 (metaphone() results in segmentation fault on NetBSD)
fix #38961 (metaphone() results in segmentation fault on NetBSD)
ChangeLog update
MFB: 64bit fix (Possible fix for bug #38961)
64bit fix (Possible fix for bug #38961)
added unicode support for mysqli extension
ChangeLog update
MFH: change CXXFLAGS along with CFLAGS as there might be C++ code
change CXXFLAGS along with CFLAGS as there might be C++ code
- fix test, php6 displays the class - mv 38943.phpt to bug38943.phpt
- MFB: #38944, freshly created archive has no comment or cdir
- #38944, freshly created archive has no comment or cdir
add test
add test
Removed warning about unreferenced local variable
Removed warning about unreferenced local variable
ZTS fix
PHP6 Updates and some very minor feature add in dns_get_record()
Make settype($var, 'string'); behave like $var = (string)$var; e.g. switch between (binary) and (unicode) depending on UG(unicode)
Flag a couple more unicode ready functions
ChangeLog update
base64 functions are basicly binary-only ops
- #38943, properties in extended class cannot be set - use zend_object_std_init instead of a manual initialisation
- #38943, properties in extended class cannot be set - use zend_object_std_init instead of a manual initialisation
PHP6 Update: fsockopen/psfockopen
PHP6 Updates for rmdir/mkdir/rename
PHP6 Updates for popen() and related functionality
PHP6 Update for get_meta_tags() -- What a silly function...
PHP6 Updates
PHP6 Updates w/ minor refactoring
PHP6 Updates
PHP6 Updates
disabled mb_list_*_names() and mb_list_encodings(arg) which are introduced in PHP 5.2.0RC to reconsider/discuss the specification.
ChangeLog update
add missing parameter to opendir() and fix segfault
fix CGI build
fix CGI build
one more try to fix ZTS build
fix ZTS build
MFH: fix possible segfault in #38891
fix possible segfault in #38891
fixed build problem of some extensions which depend on ext/mbstring.
ChangeLog update
PHP6 Updates
Update copy() for PHP6
Update stream_copy_to_stream() for PHP6
Unicode upgrade for quotemeta(). Yes, I know it's ugly. You try making it pretty.
Update stream_get_contents() for PHP6
Bring localeconv(), money_format(), and nl_langinfo() to standards. Add E_STRICT notices about them being deprecated in Unicode mode.
Tweak file_get_contents()'s return value a little
Unicode support in count_chars(). Note that due to the size of the Unicode character set only mode=1 is supported.
MFB: Restore support for unquoted -d options
Restore support for unquoted -d options
Prevent access to dead zval
Prevent access to dead zval
mark functionality unicode safe add test
PHP6 Updates
ChangeLog update
Add missing function protos
PHP6 Updates
MFB: fix test
Update (most of) the functions in streamsfuncs.c
Add double-width ripemd tests to package2.xml as well
Add double-width ripemd tests to package.xml
Updated bundled oniguruma library (used for multibyte regular expression) to 4.4.4. fixed some Segmentation Fault, and build fails in OSX(Xcode 2.4/gcc 4.0.1 problem). See #38452.
fix domcomment property handler so it inherits from domcharacterdata mark tested functions as unicode safe add tests
finish unicode updates update test
ZTS fix
ChangeLog update
Backfill protos for ext/unicode functions
fixed compilation problem on Mac OS/X. (bug #38892,38778,38452)
Bug fixes for substr_replace().
Install SPL headers.
Added ability to make SOAP call userspace PHP<->XML converters
Added ability to make SOAP call userspace PHP<->XML converters
Add ripemd256 and ripemd320 algos
ChangeLog update
PHP6 Updates
MFB: make input_get_args() not modify the original values.
make input_get_args() not modify the original values.
MFB: array_key_exists() should not work by by-ref
array_key_exists() should not work by by-ref
Strip unused implementations of md5(), md5_file(), sha1(), and sha1_file() from this extension.
Refactor parameter parsing into the 21st century and flag Unicode readiness
Use internal converter name to speed up instantiation.
Unicode support in preg_grep().
Add INI controlled default stream encoding (unicode.stream_encoding). Add convenience function stream_defualt_encoding() for setting it.
Upgrade preg_quote() to support Unicode.
fix test
fix tests
fix spl tests
fix tests
fix leak in preg_split()
Delete empty temporary files if file upload hook forbids the upload
fix test
fix tests
Disabled autoconversion of hash keys (from string to unicode) for PHP arrays
argh.. nuke UEXPECTF
support objects in array_walk*()
support objects in array_walk*() add new tests, fix old ones
fix tests
MFH: fix #34066 (recursive array_walk causes segfault) add tests
fix #34066 (recursive array_walk causes segfault) add tests
Forgotten part of patch (Small optimization of ZEND_INIT_ARRAY/ZEND_ADD_ARRAY_ELEMENT)
ZTS fix
ChangeLog update
MFB: Avoid generating php_errormsg twice in some instances.
Avoid generating php_errormsg twice in some instances.
add PHP version detection to this branch too, since I'm using this branch to make PECL releases
Upgrade preg_split() to support Unicode strings.
More work on Unicode support in PCRE. When UG(unicode) is on, all strings passed to PCRE have to be IS_UNICODE or IS_STRING in UTF-8 encoding. Failure to do so will result in unpredictable results.
Add .libs to .cvsignore
Small optimization of ZEND_INIT_ARRAY/ZEND_ADD_ARRAY_ELEMENT. (Nuno, Dmitry)
Small optimization of ZEND_INIT_ARRAY/ZEND_ADD_ARRAY_ELEMENT. (Nuno, Dmitry)
fix test
fix test (the error message is different across the systems)
ChangeLog update
- add test for callback and input_get and input_get_args   this test fails now, the callback never worked with input_get or args   fix already done, will be applied with the api shake up.
- Unicode fix
ChangeLog update
MFB: One last expand_filepath() check
MFB: fix compiler warnings introduced in my previous commit
fix compiler warnings introduced in my previous commit
One last expand_filepath() check
MFB: Additional expand_filepath() checks
Additional expand_filepath() checks
MFB: Added missing validation checks around expand_filepath()
MFB
plug leaks that in the previous patch
add missing checks around expand_filepath()
Added missing validation checks around expand_filepath()
MFB
fix possible crash in posix_access()
fix lcov report
use relative paths, so that we dont break the lcov reports
BFN
MFB: implement workaround for bug #38823 (DOMComment->appendData does nothing) fix bug #38850 (lookupNamespaceURI doesn't return default namespace) add test
implement workaround for bug #38823 (DOMComment->appendData does nothing) fix bug #38850 (lookupNamespaceURI doesn't return default namespace) add test
MFB
fix mem leak. hash keys dont need to be strdup'ed
ChangeLog update
MFB: Added a check for PQftable() function
Added a check for PQftable() function
MFB
fix a valgrind warning. this also provides a 5x speedup in the imagefttext.phpt test, because without this patch it never got cache hits
MFH: missing part of the fix for #38844
missing part of the fix for #38844
MFB: still output an error, even if there is no curl_easy_strerror()
still output an error, even if there is no curl_easy_strerror()
MFB
mark some huge arrays as read-only
MFH: fix segfault in curl_multi_info_read()
fix segfault in curl_multi_info_read()
MFB
remove warning. thanks Tony for noticing
MFB
remove more old code and macros. also remove the module global 'inst' (not needed anymore)
MFH: fix #38844 (curl_easy_strerror() is defined only since cURL 7.12.0)
fix #38844 (curl_easy_strerror() is defined only since cURL 7.12.0)
- MFH: PECL Bug #8700, zipArchive::getFromIndex() fails
- PECL Bug #8700, zipArchive::getFromIndex() fails
MFH: fix leak when call to shutdown function fails
fix leak when call to shutdown function fails
fix leak with `php -c /path -h`
fix leaks with `php -d option=value -c /path -h`
MFH: free node pointer using correct function fixes leak in ext/dom/tests/dom_create_element.phpt
free node pointer using correct function fixes leak in ext/dom/tests/dom_create_element.phpt
MFH: fix double free(), add test
fix double free(), add test
ChangeLog update
Back to dev
PHP 5.2.0RC4
MFB: Make float filter handle things like 02.324 properly
Make float filter handle things like 02.324 properly
MFB
add --STDIN-- support
MFB
separate zval only when needed (fixes 035.phpt and doesn't affect SAPI filtering)
fix test
BFN
MFB: fix bug #38813 (DOMEntityReference->__construct crashes when called explicitly)
fix bug #38813 (DOMEntityReference->__construct crashes when called explicitly)
Reinamed variables to avoid name conflicts
Reinamed variables to avoid name conflicts
*** empty log message ***
Removed unused macro USE_ZEND_ALLOC
Write valid run-time value for Zend Memory Manager
Added is_zend_mm() to allow runtime check for zend memory manager
Write valid run-time value for Zend Memeory Manager
Added is_zend_mm() to allow runtime check for zend memory manager
ChangeLog update
add for VC build
fix VC build: - update PCRE defines - create timelib_config.h - update .def dependencies
fix fcgi build
fix tests
fix tests on MacOS
MFH
change test to work with Oracle 10
ChangeLog update
new tests
new tests
declare oci_lob_seek()
uhm.. declare oci_lob_seek() along with OCI-Lob->seek() method
MFH: improve spelling (fixes #38780)
improve spelling (fixes #38780)
- Make passing filter flags as LONG work again. - Make super globals filtering work again (as quick workaround). #- Will merge to head later... need to get things sorted out first.
- MFB:PECL Bug #8676, addFile was not updated and still used VCWD_REALPATH,   it now uses expand_filepath
- PECL Bug #8676, addFile was not updated and still used VCWD_REALPATH,   it now uses expand_filepath
MFH: fix leak when binding a variable to the same placeholder several times
fix leak when binding a variable to the same placeholder several times
remove a leftover
remove a leftover
fix test
fix test
ChangeLog update
Typo fix from Steph Added note about CLI and INI search path
- MFH: Print the type of the original value
- Print the type of the original value
BFN
MFH: Bug #38687 - sockaddr local storage insufficient for all sock families
Bug #38687 - sockaddr local storage insufficient for all sock families
 fix
Add a couple more UTF-8 functions.
BFN
MFH: fix #38779 (engine crashes when require()'ing file with syntax error through userspace stream wrapper)
fix #38779 (engine crashes when require()'ing file with syntax error through userspace stream wrapper)
fix tests
fix tests
add tests
add tests
Upgrading updates from Steph
fix test
fix test
Don't try to do safe connection close in case of FastCGI protocol error
Don't try to do safe connection close in case of FastCGI protocol error
ChangeLog update
dissallowing->disallowing
new tests
new tests
add new test
add new test
MFH: proots
Add protos
MFH: date_timezone_set() needs both arguments MFH: throw exception in DateTimeZone::__construct() when no arguments are passed
- date_timezone_set() needs both arguments - Throw exception in DateTimeZone::__construct if no arguments are passed
Add *.lo into .cvsignore
Add *.lo into .cvsignore
MFB: abstracting ReflectionFunctionAbstract & fix couple of typos
Make ReflectionFunctionAbstract abstract - Move ReflectionFunctionAbstract::__construct to ReflectionFunction - Move ReflectionFunctionAbstract::__toString to ReflectionFuncion - Delcare ReflectionFunctionAbstract::__toString abstract - fix couple of typos
fix coverity issue #197 "I can't think of a reason to pass a NULL buf" (c) Wez
fix coverity issue #197 "I can't think of a reason to pass a NULL buf" (c) Wez
MFB
fix lcov processing with gcc 4.1 (some .h files were not copied)
more improvements
more improvements
MFH: improve the script
add help scan directories specified in argv
ChangeLog update
MFB: typos
Minor tweak to the file upload hooks.  The MULTIPART_EVENT_FORMDATA event was only triggering when an input filter was applied.  This simple change makes the event also trigger when no filter is applied.  The newlength pointer is set to NULL to let a downstream module differentiate between the two cases.
 - Remove register_globals from the "different" section  - Add allow_url_include = Off  - compatability -> compatibility and other typos
Add E_RECOVERABLE
Add "moved to pecl" section (only ncurses at this time)
Removed duplicated entry
CURL->cURL
Be overly picky: CURL->cURL
One more typo
Cleanup
- Update news.
- MFH: The .c file is generated... so updating the .re file and cleaning up WS.
- The .c file is generated... so updating the .re file and cleaning up WS.
- fix crash when unicode.sematics are enabled and unicode.output_encoding doesn't match iconv.internal_encoding
MFH: fix #38759 (PDO sqlite2 empty query causes segfault)
fix #38759 (PDO sqlite2 empty query causes segfault)
ChangeLog update
MFh: fix #38721 (date_parse() invalid read)
fix #38721 (date_parse() invalid read)
implement feature request #38731 (openssl_pkey_new does not support DSA key generation) patch by marci at balabit dot hu
implement feature request #38731 (openssl_pkey_new does not support DSA key generation) patch by marci at balabit dot hu
convert_to_string_with_converter_ex()
MFB bug#35589
Bump libxslt version to 1.1.0 (closes bug#35589)
MFB
add the script to run diagnostic tests on zend_parse_parameters*() usage, per Andrei's request
fix prototypes
Prevent opening of empty filename ""
Prevent opening of empty filename ""
ChangeLog update
add unicode support  registered_phpfunctions hashtable still needs to be handled update tests
- add note why we can't have a chunk-sized output handler
- MFH: fix warnings
 -fix warnings
- use ucnv_compareNames - check output_context->op for PHP_OUTPUT_HANDLER_CLEAN instead of php_output_get_status()
add new tests
add new tests, increase code coverage
MFH: fix def file for 2.6.26 (xmlXPathCompiledEvalToBoolean required in .27)
fix def file for 2.6.26 (xmlXPathCompiledEvalToBoolean required in .27)
ChangeLog update
MFH: update def file (2.6.26)
update def file
- upgrade ob_iconv_handler
fix build
- upgrade ob_tidyhandler
- bump zip version, 2.0.0
- bump version, 5.2.0 will have zip-2.0.0-stable
- wrong cast, strlen is int
MFB: fix memleak of pcre study data
fix memleak of pcre study data
MFB
fix one more parameter (int*->int)
MFH zend_parse_parameters() fixes
fix a few more zend_parse_parameters() issues
- MFH: zip_open takes only one parameter (Thx Nuno L.)
fix leak in pg_copy_to() when invalid resource was passed
fix leak in pg_copy_to() when invalid resource was passed
do not search for empty strings with strpos() and strrpos()
do not search for empty strings with strpos() and strrpos()
MFB: more int->zend_bool conversions
more int->zend_bool conversions
fix leaks & uninitialized vars add test
fix leaks & uninitialized vars add test
- MFH: Added support for the full ISO week number format. (2006-W52-7)
- Added support for the full ISO week number format. (2006-W52-7)
Reverted last Ilia's patch (for #38579). The patch didn't fix the bug and made new one.
Reverted last Ilia's patch (for bug #38579). The patch didn't fix the bug and made new one.
ChangeLog update
BFN
sync code and tests with PHP_5_2
sync code and tests between HEAD and PHP_5_2 branches. what a confusion...
finish the cleaning. also add a new test
Added missing defines needed for win32 build
add test
add new test for multiple leaks in openssl_csr_new()
MFH: init variables
init variables
fix test
remove some leftover code from the time tidy would throw exceptions
MFB: int->zend_bool where possible
int->zend_bool where possible
MFB (int->long)
first fix from my new zend_parse_parameters_* checker
CWD php.ini search news
MFB
Search for php.ini in CWD in all sapi's *but* CLI. This patch reverses wrong behavaiour introduced before the release of 5.1.0.
fix leak in imap_utf8(), avoid extra strlen() call add test
fix it in an other way
fix leak in imap_utf8(), avoid extra strlen() call add test
fix typo, add test
fix segfaulting typo in dcngettext() =) add new test
ChangeLog update
MFB: fix gcc warning
fix gcc warning
MFB: fix gcc warning
fix gcc warning
Removed unreachable handlers
Removed unreachable handlers
- fix issues with ob_start("ob_gzhandler") - add tests
ChangeLog update
- new openssl constants entry
- add OPENSSL_VERSION_TEXT and OPENSSL_VERSION_NUMBER constants - skip tests if openssl version < 0.9.7j (known to work)
little typo (bug #38531)
- Remove version number here as already done in HEAD
- attempt to fix #38696
- attempt to fix #38696
ChangeLog update
- MFH: Add HAVE_REFLECTION define for win32 (by Steph)
- Add HAVE_REFLECTION define for win32 (by Steph)
fix test
ChangeLog update
MFH
and add a test
omg. take #2 to fix the bug. sorry..
MFB: fix possible crash
fix possible crash
MFH: Obsolete, prepaing for new installer script
Obsolete, prepaing for new installer script
currently it's RC4-dev
ChangeLog update
Back to dev
5.2.0RC3
- this moved out, invalid format
- MFH
- updates
- add new tests to the package.xml
- MFH
- implement FILTER_FLAG_ARRAY/SCALAR in input_get - update changelog - update tests
add test
- MFH: test for mulitple filter calls
new test
MFH
change filters to operate on the copy of data, so multiple filters an be applied one after another
- skip these tests for RC3  - CGI does not read commandline options when it sees REQUES_METHOD  - errors are shown two times now, to be checked post RC3
- MFH: pecl bug #8316,   empty strings are not int or float, return false (due to popular demand)
- pecl bug #8316,   empty strings are not int or float, return false (due to popular demand)
- fix tests SKIPIF
last portion of z/Z fixes
last portion of z/Z fixes
- add a test for input_get and array   This test fails now. When the input variable is an array, its contents   is replace by the filter result. To be fixed asap (before 5.2.0)
- MFB:  - clean the auto trim (behaves like php_trim now)  - simplifies bool  - fix octal parsing  i- boost int/hex/octal validate_int
- clean the auto trim (behaves like php_trim now) - simplifies bool - fix octal parsing - boost int/hex/octal validate_int
fix typo in errmsg
fix typo in errmsg
ext/filter z/Z fixes
ext/filter z/Z fixes
more z/Z fixes
more z/Z fixes
more z/Z fixes
more z/Z fixes
MFH: z/Z problem fixes
z/Z problem fixes
- add basic zlib.output_compression tests
 - output handler alias ctor should know about chunk_size and flags
fix test
fix test
MFH: fix problem with mixed arguments accepted as zval* causing leaks/segfaults when converting to other types
fix problem with mixed arguments accepted as zval* causing leaks/segfaults when converting to other types
FastCGI environment variables must not be overriden by system environment variables
FastCGI environment variables must not be overriden by system environment variables
Show name of storage layer in case of initialization fault
Show name of storage layer in case of initialization fault.
minor changes in iconv_substr() to avoid zval converting
minor changes in iconv_substr() to avoid zval converting
fix warnings about nonextistent functions
ChangeLog update
no such function
no such function
fix tidy problems caused by returning local static buffers looks like somebody forgot to MFB this patch..
- good bye ob_gzhandler - ego promo
MFH: fix leak, add test
- fix PHP_OUTPUT_CONFLICT macro
add UEXPECTF
fix a couple of leaks, add new test
s/pinter/pointer/
s/pinter/pointer/
fix segfault/leak, add test
fix segfault/leak, add test
MFH: fix segfault in openssl_seal(), add test
fix segfault in openssl_seal(), add test
fix ZTS build
pcre news
MFB: Upgrade PCRE lib to 6.7
Upgrade PCRE lib to 6.7
Avoid TSRMLS_FETCH
Added ftps portion of the patch
fix typo
fix leak, add test
fix leak, add test
MFH: fix leak in iptcembed()
fix leak in iptcembed()
change ini handlers to produce E_ERROR if they are called during startup
change ini handlers to produce E_ERROR if they are called during startup or per request
fix leak
fix leak
MFH: change E_ERROR to E_WARNING when invalid argument has been passed make sure ini_set() doesn't reset PS(mod) and PS(serializer) to invalid values
change E_ERROR to E_WARNING when invalid argument has been passed make sure ini_set() doesn't reset PS(mod) and PS(serializer) to invalid values
- allow (de)activation with ini_set()
- add PHP_OUTPUT_WRITTEN and PHP_OUTPUT_SENT status flags
fix minor issue in autoload with unicode enabled
- add php_zlib_output_encoding() decl
- the Vary header for zlib.output_compression is now handled inside the output handler
- avoid a loop around deflate() by using Z_SYNC_FLUSH for standard write
- output handler may modify context->op - discard any context->out.data on failure
MFH: fix #38653 (memory leak in ReflectionClass::getConstant())
fix #38653 (memory leak in ReflectionClass::getConstant())
fix off-by-one in zend_fetch_dimension_address_inner()
fix test
- implement new output API - ported deflate/inflate code - require zlib >= 1.2.0.4 - add gzdecode()
- revise output handler alias API - add convenience macros for conflicts and aliases - generalize flags to php_output_stack_pop() - mark the handler as started *after* run - handler should still be flushable after marking it immutable
ChangeLog update
add missing addref now it works fine
Check for is_utf8.
add UEXPECT
More Unicode work.
fix PCRE tests
fix compile warning
fix build
- Upgrade timezone db to 2006.11 (k).
- Upgrade timezone db to 2006k.
Corrected problems introduced by previous commit.
Finalize implode() patch
fix win32 build EG(precision) can be changed in runtime, even in php_implode() (hint: __toString()), so please think twice before optimizing
ChangeLog update
BFN
MFB: fix #38474 (getAttribute select attribute by order, even when prefixed) add test
fix #38474 (getAttribute select attribute by order, even when prefixed) add test
Adjust code to avoid TSRMLS_FETCH
Add Unicode support for preg_match[_all]
MFH: make sure ext/standard is down before ext/session (fixes #38534)
make sure ext/standard is down before ext/session (fixes #38534)
fix tests
implement output formatting for saveHTML with libxml 2.6.23+
MFH: set BG(locale_string) to NULL on shutdown (partly fixes #38534)
set BG(locale_string) to NULL on shutdown (partly fixes #38534)
typofix
MFH: fix #38199 (fclose() unable to close STDOUT and STDERR)
Add APIs for UTF-8 strings (common with XML, PCRE, etc)
fix #38199 (fclose() unable to close STDOUT and STDERR)
- add SKIPIF and skip test if zlib is not available
delete commented part, as it was done in HEAD
MFH: fix #38624 (Strange warning when incrementing an object property and exception is thrown from __get method)
fix #38624 (Strange warning when incrementing an object property and exception is thrown from __get method)
fix ZTS build
ChangeLog update
Optimize the operation of implode() on non-string parameters
Register missing math constants (been missing since 4.0.2!) Remove M_PI from math.c (its defined in php_math.h)
fix tests on freebsd
ChangeLog update
- MFB: don't rely/use VCWD_REALPATH, use expand_filepath instead   NB: that'd to be true for all this VCWD mess
- don't rely/use VCWD_REALPATH, use expand_filepath instead   NB: that'd to be true for all this VCWD mess
ChangeLog update
add unicode support
added configure option --disable-mbregex-backtrack.
- MFB: bundled version matches pecl release 1.7.1
- bundled matches pecl 1.7.1
ChangeLog update
*** empty log message ***
- store the resolved path
- MFB: solve the relative path issues in TS environment
Initial commit. Updated bundled oniguruma library (used for multibyte regular expression) to 4.3.1.
Initial commit. Updated bundled oniguruma library (used for multibyte regular expression) to 4.3.1.
Updated bundled oniguruma library (used for multibyte regular expression) to 4.3.1.
added returned value in mb_get_info( ).
added returned value in mb_get_info( ).
- solve the relative path issues in TS environment
it's not a PEAR only issue
it's not a PEAR only issue, this happens with shared builds also
sys/msg.h does not exist on MacOS X
sys/msg.h does not exist on MacOS X, we need to detect it in configure
update version in phpinfo()
update version in phpinfo()
bump version number
bump version number
compat fixes
release 1.2.2 from 5_2 branch, as HEAD doesn't have safe_mode anymore
prepare to 1.2.2 release
the error message is different on different OSes and zlib versions
the error message is different on different OSes and zlib versions
tm_yday may be 0
tm_yday may be 0 (Solaris)
MFH: fix segfault in strptime() on 64bit Linuxes, caused by the missing declaration
this fixes segfault in strptime() on 64bit Linuxes, caused by the missing declaration unfortunately defining _XOPEN_SOURCE breaks the build (some odd dependencies in glibc headers) and this seems to be the best solution
Added SoapServer::setObject() method (it is a simplified version of SoapServer::setClass() method).
Added SoapServer::setObject() method (it is a simplified version of SoapServer::setClass() method).
ChangeLog update
MFB
Namespace more PCRE functions.
- MFH: add support for entities in hexadecimal format, like &copy; can   be passed as &#169 or &#xA9; (sync with gd)
- add support for entities in hexadecimal format, like &copy; can   be passed as &#169 or &#xA9;
MFH: fix possible crash in free_statement()
fix possible crash in free_statement()
- MFH: please don't use base64 to test image files, it does not work   fix tests on 64bit platfrom
- please don't use base64 to test image files, it does not work   fix tests on 64bit platfrom
MFH: build ext/spl and ext/reflection as static (fixes #38556)
build ext/spl and ext/reflection as static (fixes #38556)
MFH: make run-tests to work with directories containing spaces (bug #38558) Patch by danielc at analysisandsolutions dot com
make run-tests to work with directories containing spaces (bug #38558)
ChangeLog update
add test for real
fix implode() function (see http://news.php.net/php.qa/26876) add test
add test
MFH: fix separate TSRM build
fix separate TSRM build
minor improvements
minor improvements dropped unused parameters, changed long to int where it should be int
- fix php_output_handler_started()
- use the handler name zval directly when listing stati, too
- fix tests to comply with upgraded string.c - use add_next_index_zval() when listing handlers
- allocate handler stack on the heap and avoid segfaults on shutdown when startup fails - don't try to append empty buffer - fix some dbg format strings
ZTS fix
ChangeLog update
typo
typo
MFH: fix PECL bug #8112 (OCI8 persistent connections misbehave when Apache process times out)
fix PECL bug #8112 (OCI8 persistent connections misbehave when Apache process times out)
ChangeLog update
MFH: sa_len compile fix for IRIX
"sa_len" is defined to "sa_union . sa_generic . sa_len2" on IRIX, so we use another variable name here.
ChangeLog update
Use proper write callback
ChangeLog update
Unicode support for str_word_count() (using the same semantics as for binary strings).
fix #38486 (openssl extension does not build correctly)
MFH: add a notice to fgetcsv() when delimiter or enclosure is longer than 1 char (feature request #38496)
add a notice to fgetcsv() when delimiter or enclosure is longer than 1 char (feature request #38496)
ChangeLog update
fix #38485 (bz2 extension does not compile with GCC 4.1)
initialize static buffer with 0's
initialize static buffer with 0's
Back to dev
5.2.0RC2
MFB: Increased default memory limit to 16 megabytes to accommodate for a more accurate memory utilization measurement.
Increased default memory limit to 16 megabytes to accommodate for a more accurate memory utilization measurement.
ChangeLog update
Simplify php_u_trim().
MFB: Added skip condition for sqlite2 driver, that uses more forgiving emulated prepared statements.
Added skip condition for sqlite2 driver, that uses more forgiving emulated prepared statements.
Sync with php_trim() API change.
ChangeLog update
BFN
fix bug #38454 (warning upon disabling handler via xml_set_element_handler) fix bug #38427 (unicode causes xml_parser to misbehave) add test
fix bug #38454 (warning upon disabling handler via xml_set_element_handler) fix bug #38427 (unicode causes xml_parser to misbehave) remove need for TSRMLS_FETCH() call add test
apply correct fix for bug #38461
apply more correct fix for bug #38461
- add openssl_csr_get_subject() and openssl_csr_get_public_key()
MFH: fix #38467 (--enable-versioning causes make fail on OS X)
fix #38467 (--enable-versioning causes make fail on OS X)
MFH: don't try to use "auto", "none" and "pass" charsets returned from mbstring
don't try to use "auto", "none" and "pass" charsets returned from mbstring
BFN
MFH: fix #38461 (setting private attribute with __set() produces segfault)
fix #38461 (setting private attribute with __set() produces segfault)
minor CS/WS fixes
minor CS/WS fixes
MFH: error message might be NULL
error message might be NULL
MFH: OCIBreak() is not supported on Windows
OCIBreak() is not supported on Windows
add test
add test
new tests
new tests
MFH:  - fix leak when cloning DateTimeZone, detected by Antony  - don't fetch objects multiple times when cloning
- fix leak when cloning DateTimeZone, detected by Antony - don't fetch objects multiple times when cloning
ChangeLog update
- add OPENSSL_KEYTYPE_EC constant - openssl_pkey_get_details(), returns the key details
Unicode support for strcoll().
Remove UTODO's -- this is handled during name mangling/unmangling.
fix previous patch
fix my previous patch
add_next_index_zstr[l]()
Unicode support for str_split().
Typo.
Unicode support in chunk_split().
Set T_arg_type to default string type if we were not able to determine it from the args.
BFN
fix #38451 (PDO_MYSQL doesn't compile on Solaris)
move static declaration to *.c files mroe static/const keywording
MFH: add cloning support to DateTime classes
- add cloning support to DateTime classes
MFH: Cleanup before reusing failed persistant connection. Better formating of timestamp and decimal values
Cleanup before reusing failed persistant connection. Better formating of timestamp and decimal values
MFB: Upgraded libsqlite in pdo_sqlite to 3.3.7
Added missing file entry
Updated libsqlite in ext/pdo_sqlite to 3.3.7.
Upgraded bunbled SQLite lib to 3.3.7
- MFB: nuke unused parameter (not present in old versions)
MFB: static keywording
more static keywording also remove the libtidy patch, as it is too old. users should use a newer libtify anyway
- nuke unused parameter (not present in old versions)
MFH: fix #38450 (constructor is not called for classes used in userspace stream wrappers)
fix #38450 (constructor is not called for classes used in userspace stream wrappers)
MFB: a few more static keywording
a few more static keywording
BFN fix typo
MFB: fix bug #38424 (Different attribute assignment if new or existing) add test
fix bug #38424 (Different attribute assignment if new or existing) add test
MFB: fix underlying issue for bug #38438
fix underlying issue for bug #38438
make sure USE_ZEND_ALLOC is always 1
make sure USE_ZEND_ALLOC is always 1 when running tests without -m
fix segfault and leak in ext/xmlrpc add tests
fix segfault and leak in ext/xmlrpc add tests
ChangeLog update
- MFH: locateName should not change the state/error, can be used to test   an entry
- locateName should not change the state/error, can be used to test   an entry
- remove all safe mode checks instead of borking the sources...Y
- remove package.xml, not needed in php-src but only in pecl
- package.xml is not needed here, only in pecl
- add overwrite mode to ZipArchive::open, always starts a new archive - fix build with php6 - remove safemode when built against php6
- MFH: remove dl() usage
- MFH: remove dl() usage
- remove dl() usage
- Always show unicode_semantics state (required for our gcov stuff)
- MFH Add link
- Add link
ChangeLog update
- temp fix for a segfault happening when one adds two entries with   the same name
MFH: const/static keywording
const/static keywording
- MFH: NL
ChangeLog update
PHP 6 does not have safe_mode
MFH: fix #38431 (xmlrpc_get_type() crashes PHP on objects)
fix #38431 (xmlrpc_get_type() crashes PHP on objects)
MFB5.2: fix #38402 (wrong proto for Array*::offsetGet())
fix #38402: wrong proto for Array*::offsetGet()
MFB: Extend safe_mode/open_basedir checks to imap_reopen() as well.
MFB: Extend safe_mode/open_basedir checks to imap_reopen() as well.
fix test
fix test
ChangeLog update
MFB: fix proto
MFB: Various security fixes
missing bug fixing news
MFB: Added support for httpOnly flag for session extension and cookie setting functions.
Added support for httpOnly flag for session extension and cookie setting functions.
typos in comments and other minor improvements
typos in comments and other minor improvements
add test
improve connection character set detection: * output a warning if invalid character set was passed to the function * use NLS_LANG by default
improve connection character set detection: * output a warning if invalid character set was passed to the function * use NLS_LANG by default
initialize variable
ChangeLog update
sync install instructions with the phpdoc xml sources
fix test
fix ZTS build
Unicode support for str_shuffle().
Upgrade str_rot13() to work with IS_UNICODE type.
wrong directory
addcslashes() and stripcslashes() should work only on binary strings.
Make params API sound less like Raymond Babbitt.
BFN
update
add support for NCLOBs fix #35973 (Error ORA-24806 occurs when trying to fetch a NCLOB field)
add support for NCLOBs fix #35973 (Error ORA-24806 occurs when trying to fetch a NCLOB field)
- error message enhancements - avoid duplicate error messages - add PHP_OUTPUT_HANDLER_FLUSHABLE - add PHP_OUTPUT_HANDLER_HOOK_GET_LEVEL - add more tests
update changelog and file list
MFH: fix #38161 (oci_bind_by_name() returns garbage when Oracle didn't set the variable)
fix #38161 (oci_bind_by_name() returns garbage when Oracle didn't set the variable)
oops, wrong directory
fix leak on failure
fix leak on failure
- mark unicode safe functions
- use HashPosition for traversal of registered reverse conflicts - fix protos
MFH: fix #8112 (Persistent connections misbehave when Apache process times out)
fix #8112 (Persistent connections misbehave when Apache process times out)
ChangeLog update
fix test
initialize vars
fix tests to be able to run just .phpt's
Convert nl2br() to suppor IS_UNICODE.
add unicode support update tests (binary string must be passed to simplexml_load_string)
additional unicode/xml macros
fix tests
fix tests
fix test
fix test
fix logic and memleak
fix test
Adjust zend_get_unified_string_type() to give correct types.
Should be slightly faster to use U16_NEXT here.
fix leak in assert()
unused variable
implement zend_unicode_to_string() and zend_string_to_unicode() part #2 (of 2)
implement zend_unicode_to_string() and zend_string_to_unicode() part #1 (of 2)
MFH: implement #38357 (dbase_open can't open DBase 3 dbf file)
- implement #38357 (dbase_open can't open DBase 3 dbf file)
tix fypo
fix bug with variables clobbered by longjmp
fix bug with variables clobbered by longjmp
zend_hash_get_current_key_ex() returns string_len + 1, so we need to subtract 1 to get the real length
- fix compiler warnings
there is no realiable way to detect memrchr() presence because of a mess in glibc so let's use our own implementation
there is no realiable way to detect memrchr() presence because of a mess in glibc so let's use our own implementation
- compiler warnings
use memrchr/zend_memrchr instead of strrchr
%s -> %v ce names are in Unicode
add new test
add new test
use memrchr/zend_memrchr instead of strrchr fix wrong test
- Added some docs here so that nobody needs to figure it out once more.
add zend_memrchr()
add zend_memrchr()
fix test
fix typo and invalid read
ChangeLog update
- Speling
- Speling
- MFB Test name must not be more than a single line
- Test name must not be more than a single line
- Add new test
fix test
fix test in unicode mode
fix test
add missing UEXPECTF section
fix test
fix tests
suppress errors from date() if no date.timezone set don't try to look for libtool if $sys_libtool_path is empty
suppress errors from date() if no date.timezone set don't try to look for libtool if $sys_libtool_path is empty
fix test - class Date has been renamed the test still fails, though...
- should not have been commited
- should not have been commited
fix types of the variables
fix types, add missing parentheses
Removed extra byte
Removed extra byte
should be RETURN_ not RETVAL_
MFB: asXML() needs to return bool when serializing doc and filename is passed in do not copy the content of the outputbuffer twice in asXML() fix compiler warnings
asXML() needs to return bool when serializing doc and filename is passed in do not copy the content of the outputbuffer twice in asXML() fix compiler warnings
nuke unused variable
- Update
ChangeLog update
use -O0 with --enable-debug
use -O0 with --enable-debug
fix test
fix test
add test
add test
MFH: fix #38347 (Segmentation fault when using foreach with an unknown/empty SimpleXMLElement)
fix #38347 (Segmentation fault when using foreach with an unknown/empty SimpleXMLElement)
long -> int
long -> int
avoid extra strlen() call
avoid extra strlen() call, we have the length of the data
ChangeLog update
fix PECL bug #7827 add small optimization
fix PECL bug #7827 add small optimization - no need to do anything if hash lookup failed, just move along
MFH
yet another appempt to fix Windows bug thanks Rob for the patch
update tests use binary strings for loadXML() method
unicode changes
update tests use binary strings for XML() method
ChangeLog update
Simplify strrchr().
MFB: Improved fix for bug #37671
Improved fix for bug #37671
Upgrade pathinfo() to Unicode support.
Add add_assoc_zstr_ex() and related.
I believe Rob indicated that XML() should take strictly a binary string.
revert previous patch
revert previous patch, it's wrong
add unicode support update test
updated to use new modifier to specify converter
Upgrade dirname() to support IS_UNICODE.
Add macros to be able to initialize/return values based on zstr.
One fewer walks needed.
Add Unicode constants for default slash and directory separator.
Scan through all the modifiers at once, setting flags.
add new test
add new test
fix compile
MFH: fix #38322 (reading past array in sscanf() leads to arbitary code execution)
fix #38322 (reading past array in sscanf() leads to arbitary code execution)
fix test
comparing libxml documents and nodes is not yet possible and we can't fix it fix test instead
Unicode support
- MFB: Bison 2.3 is working as well.
- There is a 2.3 now as well.
ChangeLog update
Add IS_U_SLASH_* macros to test for path separator chars.
Upgraded basename() to work on IS_UNICODE strings as well.
- Adjusted php_u_strtoupper/php_u_strtolower/php_u_strtotitle API to be   more sane. - Upgrade strtoupper(), strtolower(), strtotitle() to use params API.
Update similar_text() to use params API.
fix leak in php_sapi_filter()
fix leak in php_sapi_filter()
Unicode support.
MFH: fix #38276 (file_exists() works incorrectly with long filenames on Windows)
fix #38276 (file_exists() works incorrectly with long filenames on Windows) aka "Ilia forgot to MFB fix for #31347"
Added version specific registry keys to allow different configurations for different php version.
Added version specific registry keys to allow different configurations for different php version.
In addtion to path to php.ini, PHPRC now may specify full file name
In addtion to path to php.ini, PHPRC now may specify full file name
make it consistent
make it consistent
MFH: improve error message
improve error message
Added "PHPINIDir" Apache directive to apache and apache_hooks SAPIs
Added "PHPINIDir" Apache directive to apache and apache_hooks SAPIs
ChangeLog update
fix test
fix test
fix ZTS build
fix build
A few fixes noted during analysis.
Notes after analyzing remainder of string.c.
bin2hex() should accept only binary strings.
*** empty log message ***
Make string comparison functions conver to unicode or printable strings depending on unicode.semantics and do the right thing.
Some updates.
*** empty log message ***
*** empty log message ***
Add '&' modifier (for 's' type) that will apply the specified converter during conversion of Unicode strings.
MFB: Expose the xml_utf8_encode function.
Expose the xml_utf8_encode function.
init variable, eliminate compile warning
init variable, eliminate compile warning
MFH: fix #38289 (segfault in session_decode() when _SESSION is NULL)
fix #38289 (segfault in session_decode() when _SESSION is NULL)
zts fix
ChangeLog update
MFH: implement my own FR #36995 add missing ifdefs
implement my own FR #36995 nuke unused variable
Add SORT_LOCALE_STRING support to array_multisort() and mark it with U.
Rewrite IS_LONG, IS_DOUBLE, and IS_RESOURCE to IS_UNICODE conversion to use custom functions instead of u_sprintf() which is terribly slow at the moment (for numbers). Now long-to-unicode is only 8% slower than long-to-binary and double-to-unicode is actually 6% faster.
- update test
- update test
MFH: use library error message on time string parse failure
- use library error message on time string parse failure
Unicode support
MFH:  - fix leaks on multiple calls to DateTime::__construct()  - throw exception on unparseable time strings in DateTime::__construct()
- fix leaks on multiple calls to DateTime::__construct() - throw exception on unparseable time strings in DateTime::__construct() # I guess I'm done now
MFH:  - OO fixes:   . no is_ref for objects in PHP5+   . initialize objects when created with the `new` operator   . check for proper initialization in child classes  - fix typo: transistion -> transition  - add test
MFH: fix #38269 (fopen wrapper doesn't fail on invalid hostname with curlwrappers enabled)
- OO fixes:   . no is_ref for objects in PHP5+   . initialize objects when created with the `new` operator   . check for proper initialization in child classes - fix typo: transistion -> transition - add test
fix #38269 (fopen wrapper doesn't fail on invalid hostname with curlwrappers enabled)
improve error message on Win32
improve error message on Win32
BFN
BFN
MFH: fix #38278 (session_cache_expire()'s value does not match phpinfo's session.cache_expire)
fix #38278 (session_cache_expire()'s value does not match phpinfo's session.cache_expire)
ChangeLog update
Reimplemented SoapServer and SoapClient classes using ZE2 object API. All internal properties are hidden now.
Prevented possible double call in case of fault
return false instead of null, if it's an invalid document (MFB)
return false instead of null, if it's an invalid document
return true, if xsl import did work
return true, if xsl import did work
MFH: fix #37581 (oci_bind_array_by_name clobbers input array when using SQLT_AFC, AVC)
fix #37581 (oci_bind_array_by_name clobbers input array when using SQLT_AFC, AVC)
ChangeLog update
- #36732 entry - move openssl bug fixes
- MFB: #36732, add req_extensions support to openssl_csr_new and _sign    (ben at psc dot edu) - MFB: fix leaks in openssl_csr_new and sig
- #36732, add req_extensions support to openssl_csr_new and _sign   (ben at psc dot edu) - fix leaks in openssl_csr_new and sign
update changelog
MFH: fix #38173 (Freeing nested cursors causes OCI8 to segfault)
fix #38173 (Freeing nested cursors causes OCI8 to segfault)
- group openssl entries
- #28382, add support for x509 extensions
- #28382, add support for x509 extensions
- MFB: #38261, openssl_x509_parse leaks with invalid certs
- 38261: openssl_x509_parse leaks with invalid certs
improve checks and fix #38251
improve checks and fix #38251
MFH: fix compile warnings (#38257)
fix compile warnings (#38257)
MFB: bug #38253 (PDO produces segfault with default fetch mode) add test
fix bug #38253 (PDO produces segfault with default fetch mode) add test
Added testcase for bug #37090
- MFB: silent compiler warnins (signess)
- silent compiler warnings (signess)
- MFB: vi happiness
Make array_merge(_recursive) handle binary keys safely. (Patch by Matt W)
ChangeLog update
- MFH: make the test more obvious and add an explanation
- make the test more obvious and add an explanation
- vi happiness++
MFB: improve test
improve test
- #38255, fails on array as well
- #38255, fails on array as well
- entry for #37820 and leak
- forgot the tests
- MFH: #38255, fix possible leak in php_openssl_evp_from_zval
- fix leak when the key is not a valid key (like false or an array)
- #37820, add support for algorithm type in openssl_verify()
fix tests.
fix tests.
- MFH: #8315, float is affected too
- #8315, flaot is affected too
ChangeLog update
- MFH: #8315, NULL character stops the validation
- #8315, NULL character stops the validation
MFB: Update test
MFB: cleanup of the phpinfo() output.
cleanup of the phpinfo() output.
ext/standard/info.c ext/standard/info.h
MFB: Cleanup phpinfo() output
Cleanup phpinfo() output
fix test
fix test I really hope there are no systems where /dev is a symlink
MFH: disable --leak-check
enabling --leak-check was bad idea, since there are way too much false positives caused by the absence of Zend MM
MFH: patch for #37846 (wordwrap() wraps incorrectly) by Dmitry Kononov <ddk at krasn dot ru>
patch for #37846 (wordwrap() wraps incorrectly) by Dmitry Kononov <ddk at krasn dot ru>
- HEAD does not suppot magic_gpc
ChangeLog update
Binary safe multipart request handling
upgrade the rest of the functions to Unicode (except ob_gzhandler, that I leave for Mike). also update tests to force binary data to be passed
convert void* to zstr when using the 't' parameter type
MFB: An improved fix for bug #38224
An improved fix for bug #38224
Removed deprecated #ifdef ZEND_ENGINE_2
Unicode support (not finished)
MFB: make C++ compilers happy
make C++ compilers happy
Removed debug code
removed debug code
MFH: fix leak in php_local_infile_init() handler
fix leak in php_local_infile_init() handler
MFH: - Added PHP_VERSION_ID == PHP_VERSION as integer.
- Removed unnecessary quotes
- Added PHP_VERSION_ID == PHP_VERSION as integer value.
MFB: fix test on 64bit machines
fix test on 64bit machines
initialize var
fix build with Intel C Compiler
ChangeLog update
update credits
MFH: fix phpize build
MFB:   Improved fix for bug #38132
Added test for bug #38132
- fix test
- readability
- fix test
Improved fix for bug #38132
eliminate compilation warnings on AIX
fix news
turn Off Zend MM and check for leaks when running tests through valgrind
turn Off Zend MM and check for leaks when running tests through valgrind
nuke unused variable
nuke unused variable
- 38212 & 38214
- MFB #38214, gif interlace never worked
- #38214, gif interlace never works
- MFH: mv 38179.phpt to bug38179.phpt
- mv 38179.phpt to bug38179.phpt
MFH: fix compile warning on Solaris, getloadavg() is in sys/loadavg.h there
fix compile warning on Solaris, getloadavg() is in sys/loadavg.h there
- MFH #38212, Segfault on invalid imagecreatefromgd2part() parameters
- #38212, Segfault on invalid imagecreatefromgd2part() parameters
fix bug #38217 (ReflectionClass::newInstanceArgs() tries to allocate too much memory)
MFH: fix bug #38217 (ReflectionClass::newInstanceArgs() tries to allocate too much memory)
improve connection timeout check (implements FR #38210)
improve connection timeout check (implements FR #38210)
ChangeLog update
- fix compiler warnings
- reduce memory footprint
- fix TS issue found by Jani
MFH: Update protos & arginfo for memory_get_usage() & memory_get_peak_usage()
Update protos & arginfo for memory_get_usage() & memory_get_peak_usage()
forgot to remove .cvsignore
forgot to remove .cvsignore thanks, bjori!
- ws
Changed memory_get_usage() and memory_get_peak_usage(). Optional boolean argument allows get memory size allocated by emalloc() (by default) or real size of memory allocated from system.
Changed memory_get_usage() and memory_get_peak_usage(). Optional boolean argument allows get memory size allocated by emalloc() (by default) or real size of memory allocated from system.
news entry
move ext/hwapi to PECL
moved ext/hwapi to PECL
ext/filepro moved to PECL
ext/filepro moved to PECL
MFH: check g_hash for NULL before resetting it
check g_hash for NULL before resetting it
revert shitty whitespace patch (forgot to reconfigure my editor after reinstallation)
initialize variable
initialize variable
ChangeLog update
- MFH Update tests
- MFH Correctly handle binary proeprty names which are not mangled
- Update tests
- Correctly handle binary proeprty names which are not mangled
- MFH Yet another problematic case with mangled properties
- Yet another rproblematic case with mangled properties
back to dev
5.2.0RC1
- #38179 and zip entry
+1 for keys
- MFH zend_unmangle_property_name(), drop zend_unmangle_property_name_ex()
- Better fix for #34505 and related, drop zend_unmangle_property_name_ex()
- zend_(u_)_unmangle_property_name() has changed
fix segfault
- missing file
- this one was not in
This commit was manufactured by cvs2svn to create branch 'PHP_5_2'.
- reimport (cannot symlink without replacing 4.4 and 5.0 versions)
Documentation fix
- note about allow_url_include
Documentation fix
Test for bug #38146 (Cannot use array returned from foo::__get('bar') in write context)
Test for bug #38146 (Cannot use array returned from foo::__get('bar') in write context)
ChangeLog update
fix build and typo after another lazy ass who does not test before commit: Dmitry
fix build
MFH: cleanup after lazy people
fix another compile failure. (bjori: TEST before commit!)
MFH: fix compile failure and remove unnecessary TSRMLS_FETCH calls
fix compile failure and remove unnecessary TSRMLS_FETCH calls
typofix
- MFB: #38179, imagecopy, palette to truecolor must use alpha channel too
- #38179, imagecopy, palette to truecolor must use alpha channel too
- This was reintroduced by Zeev # I could need help in writing this file. Actually i know why i didn't want # to start it in the first place.
- Tiny piece of unicode support
-fix a bunch of warnings
ChangeLog update
Mark XMLReader methods with U.
Gah.
Matt should be happy now.
Added RFC1867 fileupload processing hook.
MFH: enable by default
enable by default
MFB
more const keywording
MFB
dont create images in the php source root. output them instead
enable native and unicode tests add ntest and utest build targets
force unicode off in native mode (-N switch) swap usage of single and double quotes for win32 compat
- MFB: fix compiler warnings
- hopla, before I got more conflicts ;)   (fix compiler warnings with latest const char changes)
MFB
use const keyword where possible
MFB: - API Shake up #1, change input_get_args argument order - silent compiler warnings - update tests
- silent compiler warnings (char/unsigned char)
- api shake #1, parse_pararameter has to be changed too
- API Shake up #1, use input type as first argument in input_get_args   (INPUT_GET/POST)
ChangeLog update
MFH
Apply Matt W's patch (with a fix) for array_combine() binary key safety.
It's not legacy - it's binary.
Remove references to BG(user_compare_fnnc_name).
Make array_*intersect* functions use params API with FCI cache and mark them with U.
- MFH Update docu
- Update docu
- MFH Match code with docu
- Match code with docu
- MFH Update RegexIterator, Docu & Tests
- Update tests
- Add control functions to RegexIterator
Changed error message (E_ERROR -> E_NOTICE) in case of indirect modification of overloaded property.
Changed error message (E_ERROR -> E_NOTICE) in case of indirect modification of overloaded property.
ZTS fix
return EMPTY_TEXT here
ChangeLog update
unicode support for handling filenames
Make array_walk(_recursive) use params API with FCI cache and mark them with U.
- Synch RegexIterator with HEAD
- Need to initialized zvals completley
Make all array_*diff* functions use params API (along with FCI cache) and mark them with U.
tsrmls fix
- Change order of ctor args # Do it before the child falls in the brunnel - aka prior to first release.
Lib update
- TSRM fixes
- Update docu
- WS
# Sometimes i hate CVS and have no idea what it is doing
- Update RegexIterator
- Add new unicode functions: add_u_assoc_*[_ex]() which allow to add values   using a unicode key.
Rewrite array_map() to use params API with fci cache and mark it with U.
*** empty log message ***
Initial commit. Updated bundled oniguruma library (used for multibyte regular expression) to 4.2.0.
- MFH: Rename date classes to DateTime and DateTimeZone
- Rename date classes to DateTime and DateTimeZone
Updated bundled oniguruma library (used for multibyte regular expression) to 4.2.0.
- update changelog
- MFB:  - make boolean logical filter works like int/float and php itself  - add more tests for boolean input
- make boolean logical filter works like int/float and php itself - add more tests for boolean input
rephrase
rephrase
MFH: simplify
Simplify configure, no need to have dozen macros which have no use
update
update
MFH
missing credits file
MFH: use E_WARNING on recursion and add null to the result to keep it valid
use E_WARNING on recursion and add null to the result to keep it valid
MFH: ZTS fix
ZTS fix
add missing .cvsignore
add missing .cvsignore
MFH: add recursion protection to json_encode() and new tests
add recursion protection to json_encode() and new tests
fix segfault, add test
fix segfault caused by empty keys is JSON data add test
MFH
json_escape_string() doesn't use tsrm_ls, so no need to pass it
MFH
no need to return bool and false in the same time =)
break; break; -> break;
ChangeLog update
- WS
- MFH: fix tests, libxml 2.6.24 and up adds a new line after a processing   instruction (PI)
- fix tests for PI with libxml 2.6.24+, a new line is now added
unicode support update tests
add unicode compatible macros for returning strings from xml based extensions
Make 't' and 'T' use zstr for storage type.
Add '+' varargs specifier that requires at least one arg.
Extension news
un*uck NEWS
Missing file..
MFH: added error_get_last() function
- added error_get_last() function
no need to fetch name and free it immediately after that
no need to fetch name and free it immediately after that the patch also fixes a segfault
fix tests
fix tests
MFH: increase refcount when adding zval to the result array
increase refcount when adding zval to the result array
fix compile warnings
fix compile warnings
MFB: fetch tsrm_ls, don't use it uninitialized
fetch tsrm_ls, don't use it uninitialized
Initialize some vars.
ChangeLog update
- CS
Implement varargs parameter parsing. See README for examples.
Callable checks and class fetching and lookup should support identifer normalization now. (Marcus, Andrei)
- Capture Dmitry's Zend MM email for later reference
MFH: fix build on platforms without mremap()
fix build on platforms without mremap()
Unicode support (not finished)
patch merged into 5_2
news entry
MFH: add gmp_nextprime() patch by ants dot aasma at gmail dot com
- Enable all new date functions and classes
- Enable all methods in the already existing Date and Timezone classes
fix test
fix test
New memory manager
New memory manager
fix logic
fix logic
MFH: fix DVAL_TO_LVAL() on AIX with old gcc
fix DVAL_TO_LVAL() macro, which doesn't seem to work correctly on AIX & GCC < 3.5
ChangeLog update
MFB: Added possible failure note.
Added possible failure note.
*** empty log message ***
Update array_filter() and array_reduce() to use params API with FCI cache and mark them with U.
Upgrade uasort() and uksort() to use params API with FCI cache and mark them with U.
- Upgrade usort() to support Unicode (including valid Unicode callbacks). - Make usort() use 'f' specifier for function call info/cache.
MFB52: fix bug #37945 pathinfo() cannot handle argument with special        characters like german "Umlaute"
- fix bug #37945 pathinfo() cannot handle argument with special characters   like german "Umlaute"
- Use zend_uchar for param type - %v is for UG() - dependent strings, which is not the case here - 'T' is only useful for multiple parameters, so use 't' instead
*** empty log message ***
- MFB: #38112, corrupt GIF Image segfault
- #38112, add test and use MAX_LWZ_BITS instead of the value
- sync tests with HEAD
MFB: valgrind args change
make valgrind trace child processes. useful for the PCNTL extension (fork()), for example
MFB
new test
MFB 5.2
now they are really equivalent..
typofix
typofix
tweak constant() to use the brand new unicode parameters API
make use of new param parsing API use convert_to_text(), which makes constant() unicode aware finally nuke invalid reads
ZTS fix
MFH
fix access to freed memory in pathinfo() add test
added option parameter mb_strrpos( ).
added option parameter mb_strrpos( ).
MFB: Don't use regex where none is needed.
Don't use regex where none is needed.
ChangeLog update
If the $PHP_AUTOCONF and $PHP_AUTOHEADER environmental variables are set to full paths, the `shtool path` test would fail (because it only tests for the existence of a bare filename in the current $PATH).  We now test the the executability of $PHP_AUTOCONF and $PHP_AUTOHEADER before falling back to the `shtool path` test.
Wrapping the $PHP_AUTOCONF and $PHP_AUTOHEADER error messages to fit within 80 columns.
- MFH Typo
-Typo
- MFH Update docu
- Update docu
- MFH:   . Upgrade RegexIterator capabilities, see docu   . Update docu   . Add test (which fails right now: iterator_049.phpt)   . Add tests for new functionality
- MFH: Little bit refactoring: Two new PHPAPI functions:   . php_pcre_match   . php_pcre_split
- Upgrade RegexIterator capabilities, see docu
- This test fails right now and requires a zend API change to fix
MFB
new tests. almost 90% of code coverage
- Little bit refactoring: Two new PHPAPI functions:   . php_pcre_match   . php_pcre_split
- Update docu
- MFH Correct test name
- Correct test name
MFB improved code (after suggestion by helly)
improved code (after suggestion by helly)
fix test
3+1 != 3  =)
- MFB: PATHINFO_FILENAME constant registration (Sara)
all stream functions are actually macros that already have TSRMLS_CC, no need to pass it manually
Added DOMNode::getNodePath() for getting an XPath for a node. (MFB)
Added DOMNode::getNodePath() for getting an XPath for a node.
- #38112, corrupt GIF segfaults, test will follow
- MFH Pathinfo allows to get filename (Toby S, Christian S)
- Pathinfo allows to get filename (Toby S, Christian S)
ChangeLog update
- Provide defined value for autoload flag
- MFH Implement todo: SplFileObject: ability to set the CSV separator per object
- Update docu
- Be on the safe side
- Implement todo: SplFileObject: ability to set the CSV separator per object, part 2
- Implement todo: SplFileObject: ability to set the CSV separator per object
- MFH array_fill_keys, better unicode support, use new param parsing API
- Readd proto
- Update array_fill_keys, better unicode support, use new param parsing API
- MFH Added array_fill_keys(). (Marcus, Mathew W)
- Add array_fill_keys() (Matt W, php_lists at realplain com)
ChangeLog update
remove debugging
run-tests.php maintainers, rise up!
Do this workaround only for unicode mode.
Add test for compact().
Encode $wanted in output_encoding for comparison (workaround).
Adjust array_pad(), array_reverse(), and array_unique() for params API and mark them with U.
Logic fix:  (!a == b) != (a != b)
- Simplify array_combine() and adjust for params API - Adjust array_count_values() and array_rand() for params API and mark   with U
Adjust array_key_exists(), array_slice(), and array_splice() for params API and mark them with U.
#38105 (4/3) ustrlen != USTRLEN, update variable names used to keep this block's meaning clear
MFB: rephrase the error message (fixes #38106)
rephrase the error message (fixes #38106)
Make array_change_key_case() -- a candidate for the quite possibly the most useless function ever -- use params API and mark it with U.
#38105 (3/3) Default file_put_contents() to FILE_TEXT when unicode.semantics=on and flags param not specified
#38105 (2/3) Filters should report char/UChar count, not bytes
#38105 (1/3) Backward logic, filter_product == IS_STRING means the wrapper HAS applied pre-filtering
Update end(), prev(), next(), reset(), current(), and key() for params API and mark with U.
*** empty log message ***
Update array_search()/in_array() for params API and mark with U.
Update array_keys() and array_values() for params API and mark with U.
- Simplify array_fill(). - Do params API for a couple of funcs and mark them as Unicode   compliant.
fix test with some aspell versions
add USTR_VAL() access zstr value
WS and CS fixes I suppose STR_FREE() is better than if(..) {efree (..);}
ChangeLog update
FIXME note
Update array_sum() and array_product() (U).
Mark a few more funcs.
- Let the caller output a warning instead of having   zend_get_unified_string_type() do it. - Mark a few more functions are Unicode compatible.
- Make compact() normalize variablem name before checking symtable. - Mark tested/upgraded functions with 'U' flag.
initialize variables
fix build
fix build
Unicode support (not finished)
Unicode support in ReflectionParameter::__construct()
fix C++ comments in C code and comment out unused variable
nuke unused variable
MFH: fix #38086 (stream_copy_to_stream() returns 0 when maxlen is bigger than the actual length) add tests
fix #38086 (stream_copy_to_stream() returns 0 when maxlen is bigger than the actual length)
ChangeLog update
Make notes about array.c functions.
fix assert() in Unicode mode
MFH: init variables and get rid of annoying warnings
get rid of more "might be uninitialized" warnings
make sure return_value_used is always initialized
initialize EG(exit_status)
No need for TSRMLS_FETCH().
MFH: initialize EG(exit_status) in ZTS mode
Implement convert_to_unicode_with_converter() and adjust zval_* APIs.
Use zend_convert_from_unicode() in var_dump().
Commit Sara's patch for supporting filesystem enccoding in include/require.
MFH: add note why replace is 0, so that I don't wonder again in 2 months      why session_regenerate_id() sends the session cookie twice
- add note why replace is 0, so that I don't wonder again in 2 months   why session_regenerate_id() sends the session cookie twice
restore missing check and prevent segfaulting MFB and add test
bailout on error and don't try to create fields of unknown type add test
it's usually good idea to initialize variables especially if you rely on their values
fix invalid read - no need to compare strings if haystack is "" or shorter than needle add test
don't try to compare strings if haystack is "" or shorter than needle add test
MFB: fix #38072 (boolean arg for mysqli_autocommit() is always true on Solaris)
fix argument parsing utilities test before commit?
fix #38072 (boolean arg for mysqli_autocommit() is always true on Solaris)
fix TSRM build
MFH new test cases
new test cases for mysqli_warnings and mysql_driver properties
- Reorder and add missing
- Reorder and add missing
fixed C&P errors in groups handling, activated groups feature
fixed C&P errors in groups handling, activated groups feature
ChangeLog update
MFH
MFH make sure that embedded database is correctly initialized
debug output was breaking all tests
make sure embedded server is correctly initialized
skip when testing embedded server
MFH test for ping and kill methods
no need to test ping and kill with embedded server
Explain new specifiers
Typos
Update design doc.
Remove unused 'y' specifier.
*** empty log message ***
add new tests by Ligaya Turmelle
add new tests by Ligaya Turmelle
MFH: /tmp is often a symlink, use /bin instead
/tmp is often a symlink, use /bin instead
Protos.
Implement getAll() that can be used to get all the pieces defined by the boundaries.
Make next() and previous() take optional step parameter and optimize return value usage.
Implement getRuleStatus() and getRuleStatusArray() as well as related constants.
Rename to a more explanatory macro.
fix typo, add new test
fix typo add test with error messages
Use object flags.
Nuke signed/unsigned compiler warnings
Nuke signed/unsigned compiler warnings
Nuke signed/unsigned compiler warnings
Nuke signed/unsigned compiler warnings
fix segfault in jdmonthname(), add test
fix segfault in jfmonthname(), add test fix tests (I don't have /home/hartmut here =))
MFB: eliminate compile warnings
eliminate compile warnings
there is no Unicode in 5_2
check both OO and procedural style as "thread_id" is a property and not a method in the OO interface
modified test to use (and cover) mysqli->thread_id
test kill()
test ping()
test multi_query(), next_result(), more_results() (only partially covered by a bug testcase yet)
get_client_info() test
test was only covering fetch_fields(), added fetch_field() and fetch_field_direct()
test was not covering DOUBLE bindings
ChangeLog update
MFB: apache2handler sapi is no longer experimental
apache2handler sapi is no longer experimental
Implement getAvailableLocales().
*** empty log message ***
Optimize zero-arg case for parameter parsing. No more need for manual checks.
Include uclean.h header.
Implement isBoundary() for combining sequences.
Implement following() for combining sequences.
add Unicode EXPECT tags
(MFH) "transaction" tests should test commit, too, not only rollback
"transaction" tests should test commit, too, not only rollback
MFH
two additional tests improving pdo/pdo_mysql test code coverage
nuke unused variable
- revert messed up patch
- fix 5.2 build
MFH: fix mysqli_*_free_storage() funcs to conform with their prototypes
fix mysqli_*_free_storage() funcs to conform with their prototypes
Another fix for #38019
Another fix for #38019
MFH: initialize vars
initialize vars
MFH
SHOW ENGINES is only available in PHP 4.1.2 and above (and the output format slightly changed between 4.1 and 5.0, too), SHOW VARIABLES LIKE 'have_%' is the more portable alternative here
fix test on non-Harmut machine :)
ChangeLog update
- BFN
- Add missing test name prefix
- Drop unused var
- Add new test
MFB: Removed pointless declarations
Removed pointless declarations
- Add new entry
- Add missing entry
- MFH It appears i am the maintainer
- It appears i am the maintainer
- BFN
more test coverage
- Reword comment
- Entry doesn't belong here, fixed in 5.2
- BFN
- Drop dead code
- MFH Add new test
- Add new test
additional test cases added, should now cover all functions and modes allthough still not all edge cases
- MFH DualIterator
- MFH Add spl_object_hash()
- Add spl_object_hash()
ChangeLog update
change char* to void* when using the 't' parameter (as noted by Andrei)
Implement following() and preceding() for codepoint iterators.
- MFH Add test
- Add new test
ChangeLog update
MFH
remove some left overs plus static keywording
static + const keywords
upgrade a couple of functions to Unicode
static+const keywords
Implement isBoundary() for code point iterator.
Implement TextIterator::isBoundary() for break iterators.
Implement TextIterator methods following() and preceding().
MFH: ReflectionFunction::isDisabled()
Added new method to see if function is disabled or not
add missing items to the changelog
ChangeLog update
MFB: E_ERROR > E_RECOVERABLE_ERROR
E_ERROR > E_RECOVERABLE_ERROR
add test
add test
MFH (def.h rev:1.121, execute.h rev:1.120) Silence FETCH_OBJ_IS / undefined notices
Silence FETCH_OBJ_IS / undefined notices
ChangeLog update
E_ERROR > E_RECOVERABLE_ERROR
add test
add test for bug #38003
fix tests (take #2)
fix tests
fix tests
oops.. fix copy/paste typo
BFN
MFH: fix bug #38003(in classes inherited from mysqli it's possible to call private constructors from invalid context)
fix bug #38003(in classes inherited from mysqli it's possible to call private constructors from invalid context) also, use appropriate macro instead of accessing structure elements directly
MFH: export zend_std_get_constructor()
export zend_std_get_constructor()
MFH: improve error messages
improve error messages
apache2filter on windows news
This commit was manufactured by cvs2svn to create branch 'PHP_5_2'.
Added windows build support for apach2filter, supporting apache 2.0.x and 2.2.x
ChangeLog update
MFB: Eliminate some compiler warnings
Eliminate some compiler warnings
mfh
Obs. ZEND_BEGIN_ARG_INFO => ZEND_BEGIN_ARG_INFO_EX
Changed priority of PHPRC environment variable on win32 to be higher then value from registry.
Changed priority of PHPRC environment variable on win32 to be higher then value from registry.
ChangeLog update
Make everyone happy
make everyone happy
Adding Apache2Filter news
Reimplementation of the way Apache 2 Filter works. Instead of ripping the source from a file (thus bypassing any previous filters in the chain). This implementation wraps Zend's internal stream mechanism, allowing ZE to read from Apache's streams instead.
fix tests
fix tests
MFB
more testing
new tests and fix the locales test where the pt local isnt available.
ChangeLog update
ChangeLog update
MFH: arginfo fixes
nuke types in arginfo
MFB5.2: fix assert() problems
fixed segfaults and such things within the new assert02.phpt test
MFB5.2: const keywording
add const keywords
ChangeLog update
MFH reference fixes
Do not force pass by-ref, these functions only prefer by-ref
news
MFH: add error messages to disk_free_space() & disk_total_space() (feature request #37971)
add error messages to disk_free_space() & disk_total_space() (feature request #37971)
fix off-by-one in addslashes() in Unicode mode
ChangeLog update
MFB: AIX and Solaris have different (gm)strftime() implementation
fix test on AIX and Solaris
mfh
fix/improve test
fix test
fix test
url->URL
url->URL
MFB: url -> URL
Bug #37961 (url should be URL)
fix tests in unicode mode
fix tests
Try to make combining sequences work. Not entirely succesful.
MFH: make sure we won't get into endless loop
make sure we won't get into endless loop if value shm_var->next is corrupted
add new tests
add new tests
ChangeLog update
Improved safe_mode check for the error_log() function.
unicode_semantics -> unicode.semantics
update changelog
BFN
MFH: fix #37931 (possible crash after database restart when using persistent connections)
fix #37931 (possible crash after database restart when using persistent connections)
Use object's copied text (fixes some bug somehow).
MFB
new tests (001.phpt is just a rename from the older one) increases coverage from 20% to 70%
Rename unicode_semantics to unicode.semantics.
Rework break iterator based implementation to make it more generic for forward and backwards iterators and to return current elements properly.
ChangeLog update
MFB: Improved the error reporting in SOAP extension on request failure.
Improved the error reporting in SOAP extension on request failure.
MFB: new tests
add new tests. bump code coverage to more than 80%
arginof fixes
arginfo fixes
add new tests
add new tests
revert per Derick request
MFH: no need to throw E_ERROR here
no need to throw E_ERROR here, E_WARNING is more than enough
add a couple of static and const keywords, to let the compiler optimize better will MFB in a hour, or so
more tests
more tests
more date() tests
more date() tests
fix segfault with 'B' format param
BFN
MFH: fix #37920 (compilation problems on z/OS)
fix #37920 (compilation problems on z/OS)
ChangeLog update
MFH: fix/add SKIPIF
MFH: fix test
add new tests
add new tests
MFH: zero-terminate strings produced with FORCE_DEFLATE
zero-terminate strings produced with FORCE_DEFLATE
MFB: don't try to inflate empty strings
don't try to inflate empty strings (and stop segfaulting!)
nuke obsolete arginfo
MFH: argument info
add new tests, improve the old ones
MFH: test for bug #37244
Add arginfo for sys_getloadavg() iUpdate arginfo for base64_decode()
MFB: bug #37244 (base64_decode violates RFC 3548) -Add test
add new tests, improve the old ones
MFH: detect empty mode string and avoid off-by-one
detect empty mode string and avoid off-by-one
MFB: sys_getloadavg()
Updated protos & vim folding
MFH: argument info for php_user_filter Add tests
MFH: use the ZEND_ACC_DEPRECATED flag rather than custom warnings
MFB: saveXML() -> asXML() alias
MFH: Removed obsolete arginfo include
Removed obsolete arg_info include
Added SimpleXMLElement::saveXML() as an alias for SimpleXMLElement::asXML()
MFH: fix sapi_getenv() leak
Cleaner fix
sapi_getenv() estrdups the returned string now, so we need to free it
Removed custom deprecate error messages Use the fancy ZEND_ACC_DEPRECATED flag.
ChangeLog update
MFH http_build_query() & parse_url() news # Patch by helgi thormar
curl_setopt_array() was added in 5.1.3 http_build_query() & parse_url in 5.2 # patch by helgi
Added argument info (forces user-space filters to register correct arguments) Added tests
MFB: improve test
improve test file don't forget to test invalid parameters etc.
Added image_type_to_extension() # Was suppost to be in 5.0beta#3... :)
WS fix
MFH: image_type_to_mime_type()
Enabled image_type_to_extension() which has been in cvs for 2,5 years now.. Added test
Argument info
A lot of work on making TextIterator support propert codepoint-level offsets and making it more robust in general.
- Remove support for code units in TextIterator (people shouldn't be   examining individual code units anyway) - Add offset() method. - Add optional locale parameter to the constructor.
ChangeLog update
*** empty log message ***
plug leak
plug leak in my last patch
MFB: Change E_ERROR to E_RECOVERABLE_ERROR
Change E_ERROR to E_RECOVERABLE_ERROR
MFH: fix typo and bug #37886
fix typo and bug #37886
MFB: use %zu to format size_t
- use %zu to format size_t
ChangeLog update
Update.
fix typo
fix typo
MFH: add wrappers for timelib_day_of_week_ex()
timelib_day_of_week_ex() returns -1 if the year is less than 1753 don't use its return value directly, as accessing array element with negative index may lead to unpredictable result (crash?)
add 4.3.10 dependency to package.xml add check for PHP version in ./configure
MFH: don't try to parse empty string, return false immediately (fixes off-by-one)
don't try to parse empty string, return false immediately (fixes off-by-one)
- initialize the custom values to null (optional arg) - raise error for REQUEST and unknown mode
ChangeLog update
Implement user conversion error handler support. Works as normal error handler, in that it can return false to make the default one take over. Handler signature is:   user_handler($direction, $encoding, $char_byte, $offset, $message)
Typos.
MFH: improve check for stream mode, add tests
improve check for stream mode, add tests
MFH: don't try to read or write from/to a stream if it was open in different mode (leads to segfault in libbz2)
don't try to read or write from/to a stream if it was open in different mode (leads to segfault in libbz2)
MFH: fix invalid read with bzopen("","") and prevent filename from being empty (which causes endless loop somewhere is libbz2)
fix invalid read with bzopen("","") and prevent filename from being empty (which causes endless loop somewhere is libbz2) tests will follow
fix compile failure with <s>ancient</s> older PHP versions caused by new globals management code
Implement unicode_set_error_handler() / unicode_restore_error_handler(). The error handler doesn't do anything yet. (vaporware)
Plug memory leak in set_exception_handler().
MFB: Removed pointless callbacks.
Removed pointless callbacks.
MFB 5.2
make sure the test outputs what we want
fix tests
Bug fix news...
Renamed to bug37864.phpt
MFH
Renamed file to bug37864.phpt
Test for bug #37864 (file_get_contents() leaks on empty file)
fix test
don't leave garbage in tmp dir
don't leave garbage in tmp dir
MFH: test for file_get_contents leaking on empty file
add test for file_get_contents() leaking on empty file
fix tests
MFH: plug memleak
Plug memleak (leaks on empty files)
MFH: Missing header include
Add missing header include
MFH: init variables
init variables
init vatiables
MFH: nuke unused variables and init variables when needed
nuke unused variables and init variables when needed
fix test
fix test to work on all platforms
fix test
fix test
initialize pointers
MFH: initialize pointers
fix tests
MFB: Added missing ifdef block.
Added missing ifdef block.
MFH: display oci8 version in phpinfo()
display oci8 version in phpinfo()
MFH: plug leak in CGI SAPI when running scripts with query string in console
plug leak in CGI SAPI when running scripts with query string in console
fix tests
BFN
MFB: fix #37848 (ext/odbc compile failure)
fix #37848 (ext/odbc compile failure)
MFH: fix #37807 (segmentation fault during SOAP schema import)
fix #37807 (segmentation fault during SOAP schema import)
MFH: add missing ifdef and avoid "unused variable" warning
add missing ifdef and avoid "unused variable" warning
MFB: Added posix_initgroups() function.
Added posix_initgroups() function.
Revert accidental libxml class property declaration..
MFH: arg ifno
MFB
plug memory leak in sapi_putenv, by using setenv(), that doesnt need any malloc
MFB
change the timezone used (per Derick request) add one string I missed yesterday. Now every strotime() rule is covered
MFB: new tests
new tests. the .re file coverage increases to 96%. really good :)
changed GINIT definition.
MFH: Backported allow_url_include from HEAD.  This directive allows separate control of URL handling in includes/requires allowing sites to enable allow_url_fopen without enabling remote includes.
MFH: Only care about wrong flex version, when needed.
New crypt() implementation for win32 which is about 10 times faster and has more friendly license.
New crypt() implementation for win32 which is about 10 times faster and has  more friendly license.
MFH: Optimize the other string conversion functions here to just create raw text nodes.
Optimize the other string conversion functions here to just create raw text nodes.
- reimport logical_filter.c
MFH: I don't think the call to xmlNodeSetContentLen() is needed here and it is causing performance problems because it tries to parse the blob and create a subtree.  Because we are escaping the string anyway, we are never going to get a subtree, but the entity parsing that is done by xmlNodeSetContentLen() is killing performance on large blobs of text.  On one recent example it took a couple of minutes to parse whereas if we just create a text node like this and set the contents to the raw string it is down to milliseconds.
Added automatic module globals management
I don't think the call to xmlNodeSetContentLen() is needed here and it is causing performance problems because it tries to parse the blob and create a subtree.  Because we are escaping the string anyway, we are never going to get a subtree, but the entity parsing that is done by xmlNodeSetContentLen() is killing performance on large blobs of text.  On one recent example it took a couple of minutes to parse whereas if we just create a text node like this and set the contents to the raw string it is down to milliseconds.  As far as I can tell all the tests pass with this patch.
Rename to str_transliterate().
Add array type hinting Remove unnecessary array checkes
changed GINIT definition.
MFB: fix bug #37800
fix bug #37800: preg_replace() limit parameter odd behaviour #this is a regression in PHP_5_2 and HEAD branches only
MFH: Revert array type hinting
Revert array type hinting
Added automatic module globals management
MFH: Added automatic module globals management.
fix news. gaps left intentionally..
MFH: argument info..
MFB
MFB: fix mem leak
fix memory leak uncovered by the pcre_extra.phpt test
more tests (and fix 2 from yesterday)
MFB: remove pcre_dfa_exec.c
remove the pcre_dfa_exec.c file, as it is needed (we dont expose that API)
MFB
missing newline
MFB: E_ERROR -> E_RECOVERABLE_ERROR
E_ERROR -> E_RECOVERABLE_ERROR
transliterate()
MFB
also ignore lcov generated files
add new tests, increasing coverage by about 10%
- MFH Arginfo fix (Hannes)
- Arginfo fix (Hannes)
MFB: Removed unused variables.
Removed unused variables.
Move GINIT definition above re-definition of iconv. Gah.
Removed warnings
Removed warnings
Removed warning
Removed warning
Added automatic module globals management
Added automatic module globals management.
MFH: Added hook for compile_string()
Added hook for compile_string()
- don't use anonymous union
Be more explicit.
Only display visibility for methods
Improved performance of the implode() function on associated arrays by 200-300%.
Nuke unused var
MFH: fix typo
MFH: argument infos
Make zend_print_zval_r_ex() use the write callback function.
MFB: Fully print array() in phpinfo().
Fully print array() in phpinfo().
MFH: arginfo, protos, vim folding
MFH: fix test
MFB: Improved performance of str_replace() when doing 1 char to 1 char or 1 char to many chars replacement by 30-40%.
Improved performance of str_replace() when doing 1 char to 1 char or 1 char to many chars replacement by 30-40%.
MFH - Created new abstract class, ReflectionFunctionAbstract implementing Reflector - Moved all methods from ReflectionFunction (except export, invoke & invokeArgs) - ReflectionFunction now inherits everything from ReflectionFunctionAbstract     and implements its own export, invoke & invokeArgs methods - ReflectionMethod now extends ReflectionFunctionAbstract and implements     its own export, invoke & invokeArgs methods. - Removed stdClass typehint from ReflectionClass::isInstance - Removed stdClass typehint from ReflectionClass::set/getValue
MFH: Patch from Nuno
Patch from Nuno
- sync with apache2handler
- sync with apache2handler
MFH: fix bug #37720 (merge_php_config scrambles values)
- fix bug #37720 (merge_php_config scrambles values)
Update credits
Proper fix for bug #37707 ("clone $x" must call __clone() enven if result value is not used)
Proper fix for bug #37707 ("clone $x" must call __clone() enven if result value is not used)
Wrap "wrong" unreachable code with "#if 0"
Wrap "wrong" unreachable code with "#if 0"
- MFH Add arginfo (hannes)
- Add arginfo (hannes)
Put the TODO back
Remove useless RINIT/RSHUTDOWN calls
Get rid of useless function calls
Bug fixing news
MFH: fix Unicode LOB problems using callbacks to read LOBs using chunk_size*X buffer should speed up LOB reading a bit
happy birthday commit, yay =) this patch should fix Unicode LOB problems using callbacks to read LOBs the patch also includes an optimization: using chunk_size*X buffer should speed up LOB reading a bit
- MFH iterator_apply()
- MFH zend_fcall_info_*() and parameter parsing option 'f' # Right now i see this as the best option but we might shuffle code around # later if someone comes up with a better solution.
- MFH Add ReflectionClass::getInterfaceNames()
- Regenerated after zend_vm_def.h change
- Regenerated after zend_vm_def.h change
- Add ReflectionClass::getInterfaceNames()
ChangeLog update
- fix SEGV in php_output_handler_started()
yet another dummy clone_obj handler to fix problems created by ze1 compat mode
implement a dummy clone_obj handler for ze1 compat mode (fixes segfault on every XMLReader instantiation)
MFB: only try to fetch stream context options if context is set
- only try to fetch stream context options if context is set
MFB: plug a leak
plug a leak in ext/spl/tests/iterator_047.phpt
this function also exists in 5.2, no need for this news entry in HEAD
revert by Andi's request
revert by Andi's request
MFH: don't leak when decoding failed
don't leak when decoding failed
nuke unused call
restore missing ze1 compat code
fix test
fix test
- fix regression with bug #22690 (ob_start() with create_function() output handler)
MFH: do not allow to implement the same interface twice add tests
do not allow to implement the same interface twice add tests
ChangeLog update
MFH: no need to check if non-existing include_path complies with open_basedir setting
no need to check if non-existing include_path complies with open_basedir setting the only result we can get is segfault
MFB
fix leak appearing on phpinfo() when there are no PDO modules available
Final ze1_compat restoration - it was mostly done by hand, so if anybody spots any (new) problems, let me know.  Test wise, the same tests that failed before are failing now.
ze1 restoration
Restore ZE1 compatibility mode (Zend Engine part - the modules patches will follow later today)
- Make this compatible with 5.0/1 again
add new changelog entries
BFN
improve .dsp build
MFH: fix OCIPasswordChange() parameters (patch by pholdaway at technocom-wireless dot com) prevent username, password and new password from being empty
fix OCIPasswordChange() parameters (patch by pholdaway at technocom-wireless dot com) prevent username. password and new password from being empty
ChangeLog update
fix .dsp build
- Add missing classes
- MFH Use engine call to register interfaces (steph)
- Use engine call to register interfaces (steph)
- Use engine call to register interfaces (steph)
- Use engine call to register interfaces (steph)
- fix output handler seeing buffered data when it gets discarded - add test
ChangeLog update
MFH
MFB
I swear it wasn't me.
- remove obsolete cruft
- Revert - Needs further discussing
- update TS macro usage
- explicit usage of TS macros # this could have been raised a lot earlier
- Printable is supposed to return nativ/unicode depending on ini setting
ChangeLog update
- add simple unicode test
fix tests in unicode mode
fix error messages in Unicode mode
- fix encoding
- new output control code
MFH: add setIdAttribute, setIdAttributeNS and setIdAttributeNode functionality
idness not valid for attribute declarations
SAPI globals are destroied at this point and reporting errors about memory leaks  can cause crash.
SAPI globals are destroied at this point and reporting errors about memory leaks can cause crash.
ChangeLog update
MFB: fixed compiler warning
MFB: #37630 MySQL extensions should link against thread safe client libs if built with ZTS
- fix order
apply correct fix
ignore my previous fix, it was wrong =)
no need to do TSRMLS_FETCH() twice
MFH: suppress_errors is used only on Win32, no need to look for it on other systems
suppress_errors is used only on Win32, no need to look for it on other systems
MFH: nuke unused variable
nuke unused variable
fix tests
fix tests
MFH: no need to fetch trsm_ls when it's already available
no need to fetch trsm_ls when it's already available
add new tests
add new tests
MFH: throw a warning when using invalid offset types with strings
throw a warning when using invalid offset types with strings
ChangeLog update
spelling corrections
Revert accidentally committed internal patch
MFH: add expected warning to the test
add expected warning to the test
- MF52: There was nothing wrong here, bug report #37595 is bogus. - MF52: Added a new test case to demonstrate a longer plain text.
- There was nothing wrong here, bug report #37595 is bogus. - Added a new test case to demonstrate a longer plain text.
fix error message in Unicode mode
add more tests
add more tests
MFB
MFB
add tests for new E_FATALs
add tests for E_STRICT that will become E_FATAL in PHP 6
Keeping consistent arg_stack during arguments freeing (Exception from destructor may use inconsistent arg_stack for backtrace).
Keeping consistent arg_stack during arguments freeing (Exception from destructor may use inconsistent arg_stack for backtrace).
Support for nested exceptions and fatal errors in destructors
Support for nested exceptions and fatal errors in destructors
MFH: fix #37595 (mcrypt_generic calculates data length in wrong way)
fix #37595 (mcrypt_generic calculates data length in wrong way)
ChangeLog update
- Add new tests
- Add new tests
- Switch back to old severities and still keep bugfix for   #37632 (Protected method access problem) # It wasn't really my intention to change the severity. We simply didn't # have tests for that.
MFB: fix tests
more test fixes, this time support Oracle 10
fix tests
fix test
fix test
MFH
fix compilation on some b0rked systems that must have collections support but they don't
- MFH WS
- WS
MFH: Minor fixes (bjori)
Minor fixes (bjori)
MFB: fix bug 37635 (argument to pcntl signal handler is trashed)
- fix bug #37635 (parameter of pcntl signal handler is trashed)
added mb_stristr( ), mb_strrichr( ).
added mb_strstr( ), mb_strrchr( ).
added mb_stripos( ), mb_strripos( ).
added mb_list_encodings_alias_names( ), mb_list_mime_names( ).
added option parameter mb_list_encodings( ).
MFH: Play nice, use 4digit years in DATE_RSS
Lets play nice and use 4digit years with DATE_RSS
MFB: Added memory_get_peak_usage() function for retrieving peak memory usage of a PHP script.
Added memory_get_peak_usage() function for retrieving peak memory usage of a PHP script.
MFH: don't require libociei, this allows us to build ext/oci8 against basiclite OIC package
don't require libociei, this allows us to build ext/oci8 against basiclite OIC package
- Now as text and not HTML.
- Now as text and not HTML.
no need to call zend_is_callable() if callable is known to be invalid free fname on failure and plug possible leak
need to call zend_is_callable() if callable is known to be invalid
ChangeLog update
MFB: Convert E_ERROR to E_RECOVERABLE_ERROR
Convert E_ERROR to E_RECOVERABLE_ERROR
MFH: no need to check it for not-NULL
no need to check it for not-NULL (as was pointed by Nuno)
MFH: there is no ce at this point, revert this line to its previous state
there is no ce at this point, revert this line to its previous state See also: http://news.php.net/php.zend-engine.cvs/4931
fix tests
add test
add test
MFH: return NULL in case of error
return NULL in case of error (and fix leak/non-null-terminated string error)
- BFN
- MFH Bugfix #37632 (Protected method access problem)
- Bugfix #37632 (Protected method access problem)
MFH: improve sed expressions
improve sed expressions
BFN
MFH: fix #37531 (oci8 persistent connection corruption)
fix #37531 (oci8 persistent connection corruption)
add test
add test
initialize srcstream use different variable in local scope
initialize srcstream
MFH: prevent resource leaking when passing invalid stream resource as second argument
prevent resource leaking when passing invalid stream resource as second argument
ChangeLog update
- news entry for apache2handler ap_set_content_type() fix
MFH: call ap_set_content_type() only once, else each time we call it,      configured output filters for that content type will be added
- call ap_set_content_type() only once, else each time we call it,   configured output filters for that content type will be added
ChangeLog update
- update changelog
- #7733, values using E/e returns wrong result
- nitpicking "PHP6" vs. "PHP 6"
- Revert until there is an ok for the full patch
- Take care of refcounting in zend_fcall_info_*() functions - Add docu # I know it is unpopular to add docu here but i think we should add more
- WS
- WS
- WS/CS
ChangeLog update
- There are no abstract static methods in classes, use interfaces
MFH: add C14N() and C14NFile() methods to perform XML canonicalization add test
add C14N() and C14NFile() methods to perform XML canonicalization add test
ChangeLog update
Corrected previous patch
- MFB: fix leaks in openssl context options
- Add function iterator_apply()
- MFH Sync error messages and simplify error message generation code
- fix leaks in openssl context options
- Sync error messages and simplify error message generation code
- Ease writing functions that deal with php function 'pointers'
MFB: Missing definition, patch by Steph Fox
Missing definition, patch by Steph Fox
- Make recursive part and identical part work correct
- Add DualIterator and RecursiveDualIterator to examples including a test
-#7715, fix float validation when using '.23' or '123'  have worked before using my version, bug introduced in later commits.
MFB: fix bug #34180, --with-curlwrappers discards stream context options
- implement standard http stream wrapper options, fixes bug #34180 - skip empty headers in on_header_available()
MFH: remove debug output and fix bug #37589
remove debug output and fix bug #37589
- remove 033.php
- move 033.php to 033_run.php, 033.php cannot be run
- MFB
- Update test
fix tests in unicode mode
MFB: fix error messages when converting objects to other types
- Update update news and sync with NEWS
fix error messages when converting objects to other types add new function MFB will follow soon
- MFH Bugfix 37587
- Bugfix 37587
Big filter test - note that a number of these currently fail
reorder
ChangeLog update
fix test
fix test
BFN
MFB: Initialize windows globals, fixes #37428
Initialize windows globals, fixes #37428
BFN
MFB: fix #37418 (tidy module crashes CLI version of PHP)
fix #37418 (tidy module crashes CLI version of PHP)
MFB: fix #37499 (CLI segmentation faults during cleanup (only with sybase-ct extension enabled))
fix #37499 (CLI segmentation faults during cleanup (only with sybase-ct extension enabled))
- #7625, update doc
ChangeLog update
- MFH Add more tests from Ligaya Turmelle
- Add more tests from Ligaya Turmelle
- Add new test
- MFH Sync with head (namespace prefix handling)
- Done in 5.2
- Readd NULL as allowed classname to skip parameter
- MFH Handle NULL in C argument parsing correct
- Handle NULL in C argument parsing correct
- MFH Bugfix #37565
- Add new test
MFH: Add bison 2.2 to the list of supported versions.
Add bison 2.2 to the list of supported versions.
ChangeLog update
- Provide user func printztype to retrieve the name of a zval type
- Update
MFH: add registerNodeClass() method  - update attribute isID functionality  - add test
MFH: move document property struct from xml_common.h
add test
MFB: E_ERROR > E_RECOVERABLE_ERROR
E_ERROR > E_RECOVERABLE_ERROR
fix typo
fix typo
ChangeLog update
re-enable OCILobRead2() support
re-enable OCILobRead2() support on win32
- MFH improve error messages
- MFH Sync vm generation with head - Regenerate vm
- More exception related issues
Added control character checks for cURL extension's open_basedir/safe_mode checks.
Added control character checks for cURL extension's open_basedir/safe_mode checks.
Added a note about E_RECOVERABLE_ERROR being a part of E_ALL.
- MFH Handle corrupt base64 data in data: url
- Handle corrupt base64 data in data: url
- Drop unneccesary check and change to safe_emalloc
- There is a problem in the string / unicode comparison here which we   do not want to test here, so simply drop the part which is irrelevant   to the actual test
- Remove duplicate error message and add new test
- Improve error messages (missing unicode todo)
- Improve error messages (part 2)
- Improved error messages
- Update
- Update
ChangeLog update
- MFH Improved error message
- MFH Sync with head fixes part of an issue with iterator_(to_array|count)
- Z_LVAL is a long so use %ld
- No need to fetch ce twice
- Split up the test in different problem categories
- Micro optimization
fix the typo before everybody forgets about it
- Update test
- No need to keep object alive, iterator api is taking care of that already
- Better error message in case of an exception from a dtor while an   exception is already pending
MFH: attempt to fix OCILobRead2() related problems
attempt to fix OCILobRead2() related problems
- Provide a generic c-level iterator apply function - Base iterator_to_array() and iterator_count() on it - Add a testcase # Somehow there is an issue with exceptions in __destruct() here
- In printzv show private/protected visibility and class in case of private
- MFH Add new tests
- Add new tests
- Do not use the protection at this place, we would need another object   shutdown state (e.g. destructed == 2). That's probbaly too much.
- Destructors must not be called twice
- MFH Use correct version
- Should be static and be called (comitted wrong version)
- MFH Add new tests
- Add new tests # Now who finds the error in php code?
ChangeLog update
MF52: nuke compiler warnings
- nuke compiler warnings
fix test
Name change: php_get_tmpdir() renamed to sys_get_temp_dir()
MFH: initialize factory
initialize factory
add new tests by Ligaya Turmelle
add new tests by Ligaya Turmelle
Optimized zend_try/zend_catch macroses (eliminated memcpy())
Optimized zend_try/zend_catch macroses (eliminated memcpy())
ChangeLog update
- fix windows builds, error with declarations
- MFH Add new test
- Add new test
- MFH Add new test
- Add new test
- MFH Add new test
- Add new test
Use heap insted of stack for recursion in hope of avoid stack overflow crashes
- You shall not use %v in 5.* # Even though it is there it is only meant for pecl dev to ease their pain
Give exe files 8MB stack (same default as on Linux) instead of Windows default 1MB
- Update
there is no %v in 5.2
MFH: fix #37487 (oci_fetch_array() array-type should always default to OCI_BOTH)
fix #37487 (oci_fetch_array() array-type should always default to OCI_BOTH)
ChangeLog update
fix tests
BFN
add tests
add test
change argument name, it should be "object" not "property"
change argument name, it should be "object" not "property"
Bug fixing news
fix skip reason
fix skip reason
ChangeLog update
- MFH Proto fix/add
- Proto fix/add
- MFH '_' is valid in test blocks
- '_' is valid in test blocks
fix test
MFB: Make filters without a resource throw E_RECOVERABLE_ERROR rather then E_ERROR
Make filters without a resource throw E_RECOVERABLE_ERROR rather then E_ERROR
new mkdir tests
new mkdir tests
MFB: fix #37395 (recursive mkdir() fails to create nonexistent directories in root dir)
fix #37395 (recursive mkdir() fails to create nonexistent directories in root dir)
ChangeLog update
MFB: Disable realpath cache when open_basedir or safe_mode are enabled on a per-request basis.
Disable realpath cache when open_basedir or safe_mode are enabled on a per-request basis.
Added test
Added test
My bad.
Fugbix NEWS entries.
Fugbix typo.
*** empty log message ***
Optimized require_once/include_once (eliminated fopen() on second usage)
Optimized require_once/include_once (eliminated fopen() on second usage)
Optimized request shutdown sequence to iterate only over modified ini directives
Optimized shutdown sequence to iterate only over modified ini directives
- Removed source compatibility with libfcgi - Optimized access to FastCGI environment using HashTable instead of linear sear ch - Allowed PHP_FCGI_MAX_REQUESTS=0 to disable PHP die - Allowed PHP_FCGI_CHILDREN=0 to disable PHP spawn workers
- Removed source compatibility with libfcgi - Optimized access to FastCGI environment using HashTable instead of linear search - Allowed PHP_FCGI_MAX_REQUESTS=0 to disable PHP die - Allowed PHP_FCGI_CHILDREN=0 to disable PHP spawn workers
MFH: disable OCILobRead2() support on Win32
disable OCILobRead2() support on Win32
ChangeLog update
- Update
- Add some update notes
- We have it now fully RFC compliant
- MFH No need to have this controlled by allow_url_fopen
- No need to have this controlled by allow_url_fopen
- Readd that E_RECOVERABLE_ERROR, dropping it is a bad idea
- Do not include E_RECOVERABLE_ERROR to the default mode E_ALL
- MFH Add strict compliant RFC2397 support (no //)
- Add strict compliant RFC2397 support (no //)
- add tests to the package
- NULL is returned when a variable is not false, FALSE when the validation   failed - add tests for input_get_args
- add test for INT
- trim spaces before parsing floats or integers
ChangeLog update
- Update
- changelog
- Update
- add var_name##_len to FETCH_STRING_OPTION - add tests for float (031) - fix name for IPv6 test
- MFH RFC2397 decoding
- RFC2397 add decoding # done (need to decide whether all examples shouldl work or specs are # followed)
- MFH RFC 2397 meta data handling
- Enforce stream mode correct
- Change to use dedicated stream ops
- RFC 2397 meta data handling
- initial commit   Please fill it :)
Switch to a signed int for now.  Will look at moving to a long throughout the code here.
We might want to consider moving this to a long throughout the sapi code, but for now switch to a signed int.
- MFH Initial support for RFC2397
- Initial RFC2397 support # decoding is missing right now
- use php/pcre in email - return code can be 0
- MFH add support for --EXPECTHEADERS--
- Add support for --EXPECTHEADERS-- - MFB cgi specific stuff
- MFH code layout for __toString() use in parameter parsing api
- Support __tostring() in argument parsing
ChangeLog update
- entry for ipv6
- add IPv6 basic support   unicast, multicast or other local loop will come after 0.10.0   test 014 fails:   "Notice: Object of class stdClass to string conversion" is now   "Catchable fatal error: Object of class stdClass could not be converted   to IS_STRING", to verify ...
- add SCALAR/ARRAY doc
MFH: add doXInclude property to allow processor to perform XIncludes
add doXInclude property to allow processor to perform XIncludes
Download pear phar file when making a distribution package
Download pear phar file when making a distribution package
- MFH: Tests for BC breaking changes.
- Added tests for BC breaking changes.
MFH: fix #37416 (iterator_to_array() hides exceptions thrown in rewind() method)
fix #37416 (iterator_to_array() hides exceptions thrown in rewind() method)
Bump version.
ChangeLog update
- Missing __toString() pieces
- Update
no need to destroy the zval here
fix test
- MFH: add new test
MFB: Remove pecl includes (Steph), except pdo_odbc which will remain broke
Remove pecl includes (Steph), except pdo_odbc which will remain broke
- Drop a few superflous if conditions (now the generated file)
- Drop a few superflous if conditions
- MFH missing bits and pieces of the partial sync with head # This time i added: # ZEND_FE_RESET_VARIABLE # ZEND_FE_RESET_REFERENCE # and dapted parser,compiler,executor,interfaces to handle these flags # their purpose is to be able to pass whetehr foreach is done by ref to # the current() handler so that it can error out in case it is not capable # to comply to the requested return signature/protocol/semantics (weyp).
- Drop second superflous zval_ptr_dtor in string arg parsing
Adjust API for scanning INI files as UTF-8.
fix test
fix segfault when passing objects where strings are expected
fixed all mbstring setting information doesn't return in mb_get_info( ).
fixed all mbstring setting information doesn't return in mb_get_info( ).
add new test
- MFH Add missing ZEND_API declarations
- Use of E_RECOVERABLE_ERROR
ChangeLog update
MFB
This spelling mistake finally annoyed me enough to fix it.
- JIT entry - next release will be 0.10.0
WS fix
auto_globals_jit support for ext/filter
change it to be consistent with the others
- Update tests after MFH
- No more ze1
- Hardcoded error mode was changed to 8191
MFB input filter hook for getenv()
MFB filter defines
- MFH tests
Add input_filter hook call in getenv()
- Missing __ToString() sync
- Enforece rule of disallowing throw in __toString()
- Enforece rule of disallowing throw in __toString()
Now that ext/filter is bundled, we should be defining these in one place
- s/RegExIterator/RegexIterator/
- MFB missing initialization
- CS
- MFH add E_RECOVERABLE as default
- ze1 cleanup (bjori) /thx
Synch with HEAD
- Missing __tostring() conversion snippets
fix compiler warnings
- Missed my name
MFB
Rename RegExIterator -> RegexIterator.
- Update after api changes
fix tests
add missing parts of E_RECOVERABLE merge
add missing ZEND_API to the implementation
nuke extra semi-colon
MFB
Synch with HEAD   add readInnerXML, readOuterXML, readString, and setSchema functionality   allow parser options to be passed when loading reader   optimization: use xmlTextReader const functions for string properties   add test
- revert back to using internal buffer   origional string may be modified during parse causing possible crash
Don't allocate 2 chunks of memory when one can fit. Reduces memory fragmentation. There is one more place that fragments memory but it will complicate the ongoing Unicode upgrade of mysqli so leaving it away for now.
MFH: fix #37392 (Unnecessary call to OCITransRollback() at the end of request)
fix #37392 (Unnecessary call to OCITransRollback() at the end of request)
- MFH news
ChangeLog update
*** empty log message ***
- MFH Constructors in interfaces
i- ZE1_compat tests are no longer necessary
- MFH: SplFileObject improvements   . FILE_OBJECT_READ_AHEAD: allow to read ahead   . FILE_OBJECT_SKIP_EMPTY: allow to skip empty lines (includes read ahead)   . FILE_OBJECT_READ_CSV:   allow to read as csv
- Update after api changes - MFH   . ArrayIterator/ArrayObject: function lookup caches and array functions   . Added RegExIterator, RecursiveRegExIterator   . Added (full) caching support for CachingIterator
- Update after api changes
- Tweak version check
- MFH pcre_get_compiled_regex_cache() support
- MFH as discussed   . zend_exception_get_default() -> zend_exception_get_default(TSRMLS_D)   . zend_get_error_exception()   -> zend_get_error_exception(TSRMLS_D)   . added E_RECOVERABLE_ERROR   . added ZEND_TOSTRING_FUNC_NAME   . added __tostring function cache to zend_class_entry   . added ZEND_NAMED_ME   . modified ZEND_ME_MAPPING to support method flags   . added ZEND_MN   . method entries now use prefix "zim_" instead of "zif_"   . drop EG(ze1_compatibility_mode)   . changed cast handler, now without (int should_free):     typedef int (*zend_object_cast_t)(zval *readobj, zval *retval, int type TSRMLS_DC);   . changed get_iterator, now receives whether value is by ref:     zend_object_iterator *(*get_iterator)(zend_class_entry *ce, zval *object, int by_ref TSRMLS_DC);   . added zend_objects_store_add_ref_by_handle   . added zend_objects_store_del_ref_by_handle   . convert_to_explicit_type(pzv, type)
- WS
- Methods have flags
- zend_spprintf() is actually used elsewhere in the engine
- MFB WS/CS, zend_spprintf() must not be exported
- MFB Missing check
- MFB: WS
*** empty log message ***
MFH
Add pcre_last_error() and backtrack/recursion limit settings.
Add char_enum_types().
merge from 5.2
removed unused macro parameter
- #7586 (pecl), filter is not reseted between element
- one line inline doc
ChangeLog update
- fix logic, scalar is the default
- remove unused arg and use the right one
Add char_enum_names().
Been a long day..
And going, and going...
A few more property functinos.
- this one too must be changed   NB: add a define for the default string name as well
Added  constants.c to the windows build
- update/add inline docs - CS
Update news
- #6567, wrong php dependency
- sync them
- fix tsrm build
- #6136, ini_set should not be able to change the filter.default
moved zend_class_entry variables to mysqli.c
- set unsafe_raw as default, will be set back to string for php6. 5.   will use unsafe_raw. Discusses optimizations are coming.
MFH: Add implementation of curl_multi_info_read
tweaks and optimizations #tested on 32b and 64b
- add input_get_args (input_get is kept untouched for now) - add FILTER_FLAG_SCALAR and FILTER_FLAG_ARRAY - update ReST doc and add an example
- more CS
- MFH: #37360, bad gif size
- #37360, bad gif size
- CS (spaces > tabs)
- CS (spaces > tabs)
ChangeLog update
fix test, sorry.
convert a few more functions to unicode and adapt the tests as well
- MFB: #37346, invalid colormap format
INSTALL_HEADERS takes absolute filenames there in the second arg. This makes pecl/mailparse build again
- #37346, invalid colormap format
- MFH %v for s[np]printf
ChangeLog update
MFH: Added pg_field_table() as per req: #36750
MFB: Enable parallel build against Apache 2.2 libs and headers
Enable parallel build against Apache 2.2 libs and headers
MFB: Enable separate build dir for SAPIs, the same way it is possible for EXTENSIONs
Enable separate build dir for SAPIs, the same way it is possible for EXTENSIONs
Creation of the 5.2 branch
fix thread safe build
fix tests in Unicode mode
use the new zend_unicode_to_ascii() function. this should also fix windows builds
Added php_get_tmpdir() function that returns the default directory for temporary files (as requested in bug #35380)
ChangeLog update
Adding property.c to windows build
Register slightly under half a metric ton of constants.
This commit was manufactured by cvs2svn to create branch 'PHP_5_2'.
- treat interfaces and classes gracefully in print_inh
- add print_inh (prints a very simple class tree, ie. extensible) - add print_pi (prints property_info) - add ____print_str (print strings binary safely, for hash keys etc)
ChangeLog update
plug a leak
plug a leak
Don't use fixed size buffer in zend_uchar_from_uname();
Oops again.
Oops.
Implement char_from_name().
Add a global ASCII connverter, macros to return single codepoints (UCHAR32), and zend_unicode_to_ascii() function.
MFH: several minor fixes: nuke compile warnings etc.
several minor fixes: nuke compile warnings etc.
Some more work on property/names stuff.
fix build
ChangeLog update
Note addition of new class constants
Change prefix to char_ and rename some functions.
Back to dev
go with 5.1.4
News entry for exporting PDO::PARAM_EVT_* constants
Some more property functions.
mfh(r-1.129) Expose PARAM_EVT_* constants
Expose PARAM_EVT_* constants
- remove debug part   nota bene, there is still work in this area, but this is a start
- add test for multipart POST - also first example of the POST_RAW section
- add support for POST_RAW, allow to pass raw POST data - add support for TEST_PHP_CGI_EXECUTABLE env variable, it is now possible   to set both TEST_PHP_EXECUTABLE and CGI
- Add implementation of curl_multi_info_read (Brian)
MFH: plug leak
plug leak
more POST+arrays tests
more POST+array tests
Prepare news file for release
Revert previous optimization if preparation for 5.1.4
- update constants names
- Added my doc so that other people can work on it. #- Please keep it RST compatible.
- document the --with-pdo-sqlite[=dir]
BFN re-order news
add test
*** empty log message ***
MFH
ChangeLog update
Some additional binary property functions.
FALSE on empty string.
Implement C/POSIX migration functions.
Add skeleton for character property file. Also remove some HAVE_UNICODE tests since it's non optional.
Unicode Updates: file() now unicode ready get_meta_tags() updated for FS encoding, but content is still non-unicode
typo
Attempt to increase smart_str performance through the use of larger default buffers. Biased micro benchmarks show it makes sense :P
prepare to 1.2.1 release
ChangeLog update
set min pdo dep to 1.0.3, which will be the new pecl release
prep for pecl release
tweak for better compatibility when building as SCE. (library order is important)
- update changelog - make a fake date so package.xml can be used from cvs :)
- fix possible leak, when orig_array_ptr is null
- Make SplTempFileObject work in 5.1
- WS
ChangeLog update
add note about ssl context options.
merge from branch: peer certificate capture context options.
Add two new context options for ssl:
- After 5.1.3 follows 5.1.4, 5.2 requires a new branch, preferable from   this point of development (ilia will do so)
ChangeLog update
fix PECL #6544
Remove hiding of authorization headers completely because safe mode canceled
fix build
Add missing ZSTR()
More ZSTR() fixes
fix build. ZSTR() must be applied to the buf argument of php_stream macros
Revert patch for pdb files. No need to have it twice!
Revert patch for pdb files. No need to have it twice!
rename test to follow the convention and expand it a little
new test that reveals problems in other places. more details on the ML
Add new configure option --enable-pdb-files This will generate .pdb files for debugging
Add new configure option --enable-pdb-files This will generate .pdb files for debugging
ChangeLog update
Remove ZSTR() from stream macros. Calling function must apply this macro
ChangeLog update
pcntl_signal is safe too
Safe-fy some functions.
Proper fix for bug #37205
Proper fix for bug #37205
ChangeLog update
- Remove fprintf() used for debugging
- MFH: fix bug #37176 (iconv_strpos() fails to find a string)
Revert wrong fix
Revert wrong fix
Restore dev
Remove soap cache news
BFN
Go with 5.1.3
Prepare the news file for release
MFB: Correctly import external data (#33292)
Correctly import external data (#33292)
ChangeLog update
fix tests
fix tests
fix a bunch of tests in unicode mode by fixing the config array transverser also fix the compiler warnings # Andrey: is it possible to have a zend_convert_unicode_to_ascii() function please? it would make this code much simpler
remove nonexistent tag
remove nonexistent tag
MF51: fix possible substr_compare() crash add new tests
fix possible substr_compare() crash add new tests
mark a couple of functions as unicode-safe. no changes to code required
- release 1.3
-improve last entry
fix #37191 (chmod takes off sticky bit when safe_mode is On)
ChangeLog update
ChangeLog update
MFB
Typo.
upgrade tidy_get_release() to unicode. #say now if anything is wrong before I start upgrading the rest of the functions
ChangeLog update
no "native strings" in Unicode mode anymore
merge fix for #37158 into HEAD add test
bah.. no UEXPECT in this branch..
add test for #37158
BFN
MFB: don't segfault if an exception has been thrown from the fetch handler
don't segfault if an exception has been thrown from the fetch handler
fix for #37158
avoid unterminated loop when closing the statement.
ChangeLog update
Add collator_set_default().
Hmm, ZEND_FENTRY() is the only one that allows flags to be added..
Rename i18_loc_* to locale_*.
Implement collator_get_default() and simplify/fix the underlying code.
Happy, Pierre?
Add:  * zend_objects_store_add_ref_by_handle()  * zend_objects_store_del_ref_by_handle()  * zend_objects_store_get_object_by_handle()
ChangeLog update
Back to dev
there is no %v in 5_1
Move to refcounted implementation of collators.
Prepare for RC3
Test added
ChangeLog update
fix build on Win32
MFB: fix build with newer libtidy versions on windows
fix build with newer libtidy versions on windows # first commit on php-src. whatch out :)
Cleaned up Andrei's patch for caching WSDL in process memory, added TTL and LIMIT for memory cache. Memory cache is disblead by fefault because it is experemental and isn't tested enough. It can be enabled whit configuartion directive "soap.wsdl_cache = WSDL_CACHE_MEMORY" or "soap.wsdl_cache = WSDL_CACHE_BOTH" or derectly in SoapClent/Soa pServer constructor: $ws = new SoapClient($wsdl, array("cache_wsdl"=>WSDL_CACHE_BOTH)) Disk and memory caches use the same TTL value - "soap.wsdl_cache_ttl". Configuration directive "soap.wsdl_cache_limit" restricts the number of cached w sdl files in memory. Adding new files into full memory cache will delete oldest files from it. Note that, each PHP process or thread uses it's own memory cache.
Cleaned up Andrei's patch for caching WSDL in process memory, added TTL and LIMIT for memory cache. Memory cache is disblead by fefault because it is experemental and isn't tested enough. It can be enabled whit configuartion directive "soap.wsdl_cache = WSDL_CACHE_MEMORY" or "soap.wsdl_cache = WSDL_CACHE_BOTH" or derectly in SoapClent/SoapServer constructor: $ws = new SoapClient($wsdl, array("cache_wsdl"=>WSDL_CACHE_BOTH)) Disk and memory caches use the same TTL value - "soap.wsdl_cache_ttl". Configuration directive "soap.wsdl_cache_limit" restricts the number of cached wsdl files in memory. Adding new files into full memory cache will delete oldest files from it. Note that, each PHP process or thread uses it's own memory cache.
MFH: fix typo
fix typo (see #35900)
ChangeLog update
Restore dev so win32 snaps can build
Update protos.
Silence compiler warnings
binary strings exist only in unicode mode
typofix
ChangeLog update
I'm not sure what the heck people were thinking here, but it should be fixed finally. Please test.
Commit the actual fix
BFN
MFB
Some encodings were assumed to be default and, thus, were not made persistent.
ChangeLog update
MFB51: fixed typo
ChangeLog update
fix compile failure
MF51: fix #37062 (compile failure on ARM architecture)
fix #37062 (compile failure on ARM architecture) if ARM is big endian - don't define IEEE_LITTLE_ENDIAN
ChangeLog update
make it consistent with the other ones
make it consistent with the other ones =)
make this test to work on all systems
ok, let's make this test to work on all systems currently it fails at least on Linux PPC and Solaris, probably because of different strncmp/strncasecmp implementations.
MFB (r-1.409.2.6)  copy() should not disrespect open_basedir on source file
- Do not provide ns info in first sxe creation
- Prefix summaries with either U or N
- If node no longer exists then there won't be any data
MF51: fix #37077 (stream_socket_server() leaks when the port is not allowed)
fix #37077 (stream_socket_server() leaks when the port is not allowed)
ChangeLog update
fix CS and prevent NULL dereference
MF51: AIX #define's accept as naccept add a workaround
AIX #define's accept as naccept add a workaround
MF51: fix bug #37061 (curl_exec() doesn't zero-terminate binary strings) - we get the data length from cURL, so it's binary safe. fix leak appearing when re-using curl handle
fix bug #37061 (curl_exec() doesn't zero-terminate binary strings) - we get the data length from cURL, so it's binary safe. fix leak appearing when re-using curl handle
ChangeLog update
Preserve full name of filter for use in stream_get_meta_data()
Allow http:// wrapper to automatically apply correct unicode.from.* filter based on content-type header
fix test title
fix test title
MF51: fix #37059 (oci_bind_by_name() doesn't support RAW and LONG RAW fields) add tests
fix #37059 (oci_bind_by_name() doesn't support RAW and LONG RAW fields) add tests
oops.. I didn't want to commit this..
MF51: correct fix for bug #37055
correct fix for bug #37055
add test
add test
MF51: fix #37057 (xmlrpc_decode() may produce arrays with numeric string keys which are unaccessible)
fix #37057 (xmlrpc_decode() may produce arrays with numeric strings which are unaccessible)
MF51: fix #37055 (incorrect reference counting for persistent OCI8 connections)
fix #37055 (incorrect reference counting for persistent OCI8 connections)
MF51: fix #37053 (html_errors with internal classes produces wrong links)
fix #37053 (html_errors with internal classes produces wrong links)
ChangeLog update
MFH
MF51: add default timezone to the tests
add default timezone to the tests
- Use pcre convenience function that also caches. #- Patch by pierre.
- More safe_mode left-overs.
ChangeLog update
MFB51: fixed test
- Coverity issue 59
- Coverity issue 59
- MFH Iterators from overloaded objects are allowed to not have keys...
- Iterators from overloaded objects are allowed to not have keys...
- MFH Coverity fix 49
- Allowing to pass in ce as NULL has its charme, too
- Better order for SEGV prevention
more cleanup (lingering ini settings which do not exist anymore, etc.)
- Cleanup
cleanup
MFH: fix typo
fix typo
MFH: - Determine the shared/link lib suffixes in one macro.
- Determine the shared/link lib suffixes in one macro.
MFH: - Silence some PCRE compile warnings
- Silence some PCRE compile warnings
ZTS fix
ZTS fix
update credits
fix credits
ChangeLog update
MFB
Speed up SoapClient/SoapServer constructors by caching WSDL structures in memory. All WSDL files will be cached, unless turned off via an option to the constructor.
*** empty log message ***
be aware of PDO_ATTR_EMULATE_PREPARES
Add "ATTR_EMULATE_PREPARES" general attribute to replace the custom attributes employed by mysql and postgres drivers. No functional change.
This completes the fix for PECL #5827; we need to gobble up result sets in the stmt dtor too.
fix for PECL Bug #5827. We're responsible for gobbling up supplemental result sets in closeCursor() (which is what PDO does for us if we didn't implement our own closer routine).
ChangeLog update
MFH
Separate suffixes of shared libraries that we link against and the ones we load with dlopen(). This matters on Mac OS X, for example.
ChangeLog update
MF51: fix memory corruptions and leaks when cloning ArrayObjects and ArrayIterators
fix memory corruptions and leaks when cloning ArrayObjects and ArrayIterators
Disallowed numeric named captures.
RC3
- MFB: revert leak fix, something else went wrong
- revert last commit, something else went wrong
Optimization
Optimization
CGI anf FastCGI assume $_SERVER and $_ENV have the same values, so we don't need construct the same arrays twich and may just copy it
CGI anf FastCGI assume $_SERVER and $_ENV have the same values, so we don't need construct the same arrays twich and may just copy it
- MFB: fix leak when an error occured in socket_read, free tmpbuf
- fix leak when an error occured in socket_read, free tmpbuf
Removed unnecessary copying
Removed unnecessary copying
We don't need setup the same time-out two times.
We don't need setup the same time-out two times.
MFH: - Allowed storing NULL pointers in HashTable - Optimized zend_hash_reverse_apply()
ChangeLog update
Adjusted credits file so that it appears properly on phpinfo()
That is not the bug you're looking for.
Even more stuff from Friedl.
I guess we only need this on HEAD.
More stuff from Friedl..
MFB
*** empty log message ***
Plug leak which occurs in unicode mode
Silence false positives on test results
Silence false positives in test failures
Do runtime conversions (with an E_NOTICE) on writing unicode data to a binary stream.  Take the WTF out of the equation
MF51: fix #36981 (SplFileObject->fgets() ignores max_length)
fix #36981 (SplFileObject->fgets() ignores max_length)
Overload 'duplicate' arg as applied to: add_((next_)?index|assoc)_(ascii|rt)_stringl?(_ex)? and (ZVAL|RETVAL|RETURN)_(ASCII|RT|U)_STRINGL?
ChangeLog update
MFH: workaround for problem on Solaris: shell tries to parse "for i in ;" and fails
workaround for problem on Solaris: shell tries to parse "for i in ;" and fails
add new tests
add new tests
BFN
add missing defines to .w32
add missing defines to .w32
fix #36934 (OCILob->read() doesn't move internal pointer when reading 0's) no support for Unicode CLOBs in Oracle < 10, sorry.
fix #36934 (OCILob->read() doesn't move internal pointer when reading 0's)
add test
add test
fixed bigint conversion errors (windows)
fixed bigint conversion on windows platforms
MF51: fix #36944 (strncmp & strncasecmp do not return false on negative string length)
fix #36944 (strncmp & strncasecmp do not return false on negative string length)
ChangeLog update
fixed commnet typo, and duplicate logic.
- No need to have this one twice here... (Thanks Steph)
ChangeLog update
- WS
add test for gmp_nextprime()
add gmp_nextprime() function patch by ants dot aasma at gmail dot com
added mb_stristr( ), mb_strrichr( ).
#ifdef new functions and use their bodies to make PECL extensions compile with PHP < 5.1.3 (as was agreed with Ilia)
fix spelling in error messages: greater/less thEn -> greater/less thAn
fix spelling in error messages: greater/less thEn -> greater/less thAn
Update tests for working with unicode
fixed stmt property container and required status for error properties
ChangeLog update
MFH: Removed extra space in the Content-Type header for logos Simplified stderr error reporting in apache sapi.
Removed extra space in the Content-Type header for logos Simplified stderr error reporting in apache sapi.
Silence false positive test failures
Make some tests pass. compression is just a binary thing. Write unicode and suffer my wrath!
- Behavior fix for #36941
Added additional information for compiled header files.
ChangeLog update
- Bugfix #36941 (ArrayIterator does not clone itself)
MF51: fix segfault when assigning value by ref and add test
fix segfault when assigning value by ref and add test (I consider it's wrong that we can't do it, but we shouldn't segfault anyway)
ChangeLog update
Update filename handling and mark various functions for unicode safety
- move setSchema to the 2.6.20 block, this method is only available from   this version
Add API hooks and unicode.filesystem_encoding for handling unicode conversions of filename entries.
- Add XMLReader::setSchema
MF51: fix compile failure with old GCC (see bug #36931)
fix compile failure with old GCC (see bug #36931)
ChangeLog update
- MFB Make readable
- Make readable
- MFH Add tests
- Add another test
MF51: fix compilation on AIX
fix compilation on AIX
nuke compile warning
MF51: fix tests
fix tests
fix TSRM build
fix build: there is no TSRMLS_CC in this function
Back to dev
Go with RC2
- MFH Return NULL instead of '' if node does not exist
- Return NULL instead of '' if node does not exist
added mb_stripos( ), mb_strripos( ).
typo
MF51: fix #36922 (missing MYSQLI_REPORT_STRICT constant in userspace)
fix #36922 (missing MYSQLI_REPORT_STRICT constant in userspace)
Unicode support
Describe registr_long_arrays, ze1_compatibility_mode, dl(), E_ALL/E_STRICT
ChangeLog update
Make php_stream_copy_to_mem() unicode aware and update userspace function file_get_contents().
Update php_stream_passthru() to handle unicode data. This updates userspace functions fpassthru() and readfile()
fix typo
fix typo
added mb_strrchr( ).
MF51: fix bug #36898 (__set() leaks in classes extending internal ones)
fix bug #36898 (__set() leaks in classes extending internal ones)
Support for zend-myltibyte
ChangeLog update
Bug!
Ooops, missed a file
Another (and hopefully last) major streams commit. This moves unicode conversion to the filter layer (rather than at the lower streams layer) unicode_filter.c has been moved from ext/unicode to main/streams as it's an integral part of the streams unicode conversion process.
restore E_WARNING in correct place
fix skip condition
initialize bucket #0 with nulls
initialize bucket #0 with nulls (normally it shouldn't be used at all, but if it is - we don't want any memory issues, do we?)
prevent possible NULL dereference
MF51: fix #36897 (debug_print_backtrace() doesn't return void but array(0) {})
fix #36897 (debug_print_backtrace() doesn't return void but array(0) {})
add a test case for bug 35671
added mb_strstr( ).
fix tests
MF51: fix #36851 (Documentation and code discrepancies for NULL data)
fix tests
fix #36851 (Documentation and code discrepancies for NULL data)
ChangeLog update
Note
reenable pg_execute E_WARNING
MFB51: Check 2nd parameter of tempnam() against path components.
Check 2nd parameter of tempnam() against path components.
Typo.
MF51: fix #36878 (error messages are printed even though an exception has been thrown)
fix #36878 (error messages are printed even though an exception has been thrown)
Make a UTODO note.
The fix for #35332 caused #35671 (and thus PECL #6504).
Proto updates.
*** empty log message ***
Add UTODO.
Mark with UTODO instead of FIXME.
fix possible NULL dereference
added mb_list_mime_names( ).
Test for strtr() with non-ascii encoding
Unicode support
Unicode support
Unicode support
MF51: fix #36869 (memory leak in output buffering when using chunked output)
fix #36869 (memory leak in output buffering when using chunked output)
Better but incomplete fix for bug #36840
ChangeLog update
MFB
On Mac OSX, our extensions are actually "bundles" and should not have .dylib extension. Read this:
Use (unsigned char) to make sure that only the control chars are replaced with '?';
Rewrite unicode_encode() and unicode_decode() functions. Apply the new conversion error semantics.
Skip BOM for UTF-16/32 converters when setting subst char.
remove pg_execute() E_WARNING error when query plan is not defined
remove pg_execute() E_WARNING error when query plan is not defined
Some functions may want to accept only Unicode or binary strings, without having auto-conversion from the other string type. Add 'U' and 'S' specifiers for this. Also, remove traces of 'native' strings.
*** empty log message ***
Add unicode_get_error_mode() and unicode_get_subst_char().
kill the left unused variable
remove unnecessary memcpy, cast directly
- Implemented basic collation support. For some reason "new Collator" gives segfaults when the object's collation resource is used. - The following example shows what is implemented:
ChangeLog update
Implement to-Unicode conversion error behavior. Note the adjusted APIs.
Expand stream_context_create() to allow specifying params as well as options.  Ignore the internal name change of the first arg. The first arg is still for options, the second arg is for actual params.
Add protos.
- MFH: Make IteratorIterator base of most SPL iterators
fixed compiler warning.
fixed compiler warning.
- Commit intermediate work so that I can hack on it on some plane.
* Remove unicode.from_error_mode and unicode.from_subst_char from INI settings. * Add unicode_set_error_mode() and unicode_set_subst_char() functions to   manipulate these global settings.
*** empty log message ***
MF51: fix #36859 (DOMElement crashes when calling __construct when clone'ing)
fix #36859 (DOMElement crashes when calling __construct when clone'ing)
- Make IteratorIterator base class of most SPL iterators
ChangeLog update
Handle converter instantiation errors properly
Allow bidirectional encoding option via single context param
Update fgetss() for unicode
This is probably not a test..
Use intern->type for break iterator.
Hook into new unicode conversion error handling API
Add php_stream_get_record_unicde() API call. Update stream_get_line() userspace function to handle unicode streams.
Hey! Don't remove vim modeline completely! :)
fix and testcase for bug #36745
add new tests
add new tests
fixed minor problems (thx to tony)
whitespaces -> tabs no other changes done
first check for NULL, then use the pointer
Support warning/exceptions flag for conversion errors.
ChangeLog update
UTODO note
Add some error checking when stream converters are instantiated.
Update conversion error behavior and add some new modes.
Add (binary) cast operator.
Allow conversion between binary/Unicode strings (based on runtime_encoding setting).
- My eyes don't hurt anymore
- My eyes hurt
added mb_list_encodings_alias_names( ).
- MFH   . spl_autoload_register() return bool to denote success/failure   . spl_autoload_unregister() acept any callable
- Make spl_autoload_register() return bool
return FALSE if driver doesn't support quoting and returns 0 also fixes PECL bug #6365
return FALSE if driver doesn't support quoting (this is what docu says) also fixed PECL bug #6365
MFB51: Added myself to PDO and PDO_MySQL credits Added Wez to PDO_MySQL credits Added Tony to Q&A team credits Regenerated the credits file
Added myself to PDO and PDO_MySQL credits Added Wez to PDO_MySQL credits Added Tony to Q&A team credits Regenerated the credits file
add missing skipif sections
add missing skipif sections
fix typos
fix typos
Under threat of being slept with by Marcus, adding new getParent() method for node traversals
- Initialized callable_name if present
- Initialize callable_name if requested
- Make spl_autoload_unregister() accept any callable like spl_autoload_register()
- MFH Add new test
- Add new test
- MFH: Add new test
- Add new test
- MF51 Add missing bug title and synch with other tests
- Add missing bug title and synch with other tests
MTH: Allowed '-b' with UNIX sockets
Cleanup
Allowed '-b' with UNIX sockets:   -b <hostname>:<port_number>   -b <port_number>   -b <unix_socket_path>
implement correct fix for segfault on 64bit platform
ChangeLog update
fix leak, add test
fix leak
add test
MF51: prevent segfault when exception is thrown from Countable::count()
prevent segfault when exception is thrown from Countable::count()
MFH: fix #36825 (Exceptions thrown in ArrayObject::offsetGet cause segfault) fix similar issue in offsetExists() remove redundant semicolons
fix #36825 (Exceptions thrown in ArrayObject::offsetGet cause segfault) fix similar issue in offsetExists() remove redundant semicolons
no magic_quotes anymore
don't segfault on 64bit platforms
MFH: use set_time_limit(), this test takes forever on AIX
use set_time_limit(), this test takes forever on AIX
Simplify and optimize code.
- Moved strtotitle to ext/standard and implemented the fallback case to   non-unicode with ucwords. There is also an implementation for unicode ucwords   but that returns different results then strtotitle as it uppercases the   first character of every word, and doesn't *titlecase* a word. The test case   shows that.
MF51: fix #36820 (Privileged connection with an Oracle password file fails)
fix #36820 (Privileged connection with an Oracle password file fails)
ChangeLog update
- add tests files
- update, wrong file added
- first serie of tests
- typo - bump api version
Allow grow_mode && !bufstart (original assertion logic)
MFH: - Drop --no-prefix as disables --prefix which we do for http://gcov.php.net # If you need/want this edit your makefile or provide a LTP_GENHTML export # of your need when running buildconf
- Drop --no-prefix as disables --prefix which we do for http://gcov.php.net # If you need/want this edit your makefile or provide a LTP_GENHTML export # of your need when running buildconf
- add enchant_broker_list_dicts
- fix proto
- cs
change oci_field_type() to return VARCHAR2 instead of VARCHAR (fixes feature request #36800)
change oci_field_type() to return VARCHAR2 instead of VARCHAR (fixes feature request #36800)
reimplement php_oci_lob_read() and fix PECL bug #5995 now the function dosn't try to read data by blocks, as this is nearly impossible to do with Unicode and regular LOBs in the same time
reimplement php_oci_lob_read() and fix PECL bug #5995 now the function dosn't try to read data by blocks, as this is nearly impossible to do with Unicode and regular LOBs in the same time
- Update windows file too (not tested, but should work).
- Make ext/unicode an extension that is always there and can not be disabled.
fix spelling
- replace the pkg version in phpinfo
- cs
- convert package to 2.0, prepare changelog for 1.0.1
MFH
added mb_check_encoding() to detect possible invalid encoding attack.
ChangeLog update
MFH.
changed a option name based on PHP naming convension.
MF PHP_5_1
*** empty log message ***
@added possible encoding attack detection by mb_get_info('illegalchars').
- add some UTF-8 hindi files, first of a serie of data used   by the tests (will follow)
shutdown syslog module before freeing basic_globals
shutdown syslog module before freeing basic_globals
MF51: fix #36808 (syslog ident becomes garbage between requests)
.. and add missing #ifdef
fix wrong mshutdown func params
fix #36808 (syslog ident becomes garbage between requests)
- Drop PDO::setDefaultFetchMode()
- WS
MFH: fix #36741 (userstreams testcase have off-by-one error on fseek())
fix #36741 (userstreams testcase have off-by-one error on fseek())
- Added PDO_ATTR_DEFAULT_FETCH_MODE which controls the default fetch mode
don't leak memory even though the code is not stable yet
Removed unreachable code
Removed unreachable code
MFH: fix buffer overrun
fix buffer overrun
MFH: initialize retval
initialize retval
ChangeLog update
- fix compilation warning
this check should be present in HEAD as well, no only in 5_1
MFB: first check stream for NULL, then dereference
first check stream for NULL, then dereference
make the code a bit cleaner - no need for two different checks that are doing effectively the same
MFH: make the code cleaner
- Make all compile without errors/warnings
- Little reordering now and disable a bit of tony's code to make it compile again
- Handle attributes in dbh ctor (jean pütz aka tony)
- CS
- Explicitly make the default default FETCH_BOTH
- Prevent default fetch mode (0) from passing down to actual fetching and   make it behave like FETCH_BOTH which is the intended overall default
- Must use > 0 here (decrement after check)
- Simplify, default mode transfer also in prepare
- Missing skipif
MFB51: Properly calculate the size of the result array.
Properly calculate the size of the result array.
- add comitters name
MFB: fix php_apache_sapi_header_handler() modifying sapi_header
- fix php_apache_sapi_header_handler() modifying sapi_header # already taken care of in apcache1 sapi
- typos
ChangeLog update
MFB: fix several leaks in date_sun*() functions
fix several leaks in date_sun*() functions
- Need to change Pierre's patch abit
- Add test
- Add PDO::setDEfaultFetchMode() (Pierre)
- Simplify
check stream for NULL before writing to it remove unnecessary semicolons
MFH: check stream for NULL before writing to it remove unnecessary semicolons
MFB: Added support for BINARY_DOUBLE and BINARY_FLOAT to PDO_OCI and OCI8 (also fixes bug #36764)
Added support for BINARY_DOUBLE and BINARY_FLOAT to PDO_OCI and OCI8 (also fixes bug #36764)
BFN
ChangeLog update
Make is_string() return TRUE for both Unicode and binary strings.
Calculate the size of the tmp[] buffer directly at compile time.
MFB: fix #36727 (segfault in pdo_pgsql bindValue() when no parameters are defined)
fix #36727 (segfault in pdo_pgsql bindValue() when no parameters are defined)
- Actually make this is_binary() too.
Unicode support for dl() patch.
Eliminated unnecessary getcwd() syscall
Eliminated unnecessary getcwd() syscall
MFB: fix #36743 (In a class extending XMLReader array properties are not writable)
fix #36743 (In a class extending XMLReader array properties are not writable)
Optimized FastCGI SAPI check. Check for ini options only once.
Optimized FastCGI SAPI check. Check for ini options only once.
Allowed 'auto_globals_jit' work together with 'register_argc_argv'
Allowed 'auto_globals_jit' work together with 'register_argc_argv'
FIX: For some reason SIGSEGV handler wasn't set, but was restoring. Now all SIGS EGV related code is commented.
FIX: For some reason SIGSEGV handler wasn't set, but was restoring. Now all SIGSEGV related code is commented.
Optimization of module unloading (temporary modules can be only in the end)
Optimization of module unloading (temporary modules can be only in the end)
ChangeLog update
MFB51: Allow PDO_MYSQL_ATTR_DIRECT_QUERY to be set via constructor Allow getAttribute() to fetch MySQL specific attributes. Eliminate unnecessary auto-commit call on connect.
Allow PDO_MYSQL_ATTR_DIRECT_QUERY to be set via constructor Allow getAttribute() to fetch MySQL specific attributes. Eliminate unnecessary auto-commit call on connect.
Disabled dl(). Now it is enabled only when a SAPI layer registers it explicitly. Only CLI, CGI and EMBED do this.
typo
ws
Return "new" by reference now throws an E_STRICT error
added option parameter mb_list_encodings( ).
Added pg_field_table() as per req: #36750
Added E_STRICT to E_ALL
rephrase
Dropped allow_call_time_pass_reference, the error is maden E_STRICT.
Dropped zend.ze1_compatibility_mode
Dropped register_long_arrays, added E_CORE for all dropped setting
prepare to the 1.2 release
ChangeLog update
Added E_STRICT warning in case of calling non-static method from incompatible context (this feature is staying for BC with php-4)
Added E_STRICT warning in case of calling non-static method from incompatible context (this feature is staying for BC with php-4).
- Reduce space in serialization. The first 128 bytes will now use just the   character and everything above will use \uXXXX. It seems that unserialize   doesn't work at all yet on the U: element so that I added to my to-do list.
Eliminated run-time constant fetching for TRUE, FALSE and NULL
Eliminated run-time constant fetching for TRUE, FALSE and NULL
ChangeLog update
Switch (zstr) casts to use ZSTR() macro.
Mark as stable.
More stream updates. fgets() will work now as will anything which calls one of the _php_stream_get_line() family of functions. The one exception here is when the legacy defines are used on a unicode stream.  At the moment they'll simply return NULL, I'll update these to do sloppy conversion in a bit.
- initial commit, feel free to change/adapt
fixed a 64-bit problem reported by Pierre
MFH: add brackets and clarity
add brackets and clarity
zend_hash_apply() doesn't use ZEND_HASH_APPLY_... macros
zend_hash_apply() doesn't use ZEND_HASH_APPLY_... macros
"jump" -> "goto"
MFB: more verbose phpinfo() output
Be more verbose in phpinfo() output
ChangeLog update
- MFB: #36697, truecolor image lost im->transparent
- bug #36625 fix
- Add missing file extension
- Cleanup
- #36697, Transparency is lost when using imagecreatetruecolor
Make php_stream_write_buffer() return characters written, not bytes
fixed compiler warning.
This makes file_put_contents() work for:
MFB51: Added overflow checks to wordwrap() function.
Added overflow checks to wordwrap() function.
Optimized cleanup loops on request shutdown
Optimized cleanup loops on request shutdown
ChangeLog update
Refactor streams layer for PHP6.
var news
MFB51: As per agreement during PDM, remove the E_STRICT deprecation notice from "var".
As per agreement during PDM, remove the E_STRICT deprecation notice from "var".
- Prefix test names - Add missing skipif
- Prefix test names - Add missing skipif
MFH
fixed a possible null injection caused by missuse of mbstring.substitute_character.
ChangeLog update
- Load list of extensions to test from php that is being tested rather than   from php running the tests - When executing both unicode and native modes then show the type of test   in the reult list (PASS:U, PASS:N, etc)
- Load list of extensions to test from php that is being tested rather than   from php running the tests
fix for MySQL 5.1 (see http://bugs.mysql.com/?id=16144)
ChangeLog update
- Drop supoerflous skipif
- Add test
- Set clone handler even though right now some spl code snippet is missing
- Works better with correct syntax
- Add new test
- Add neccessary skipif
	MFH:         for the primary file only lookup the real file path and         add it to the included_files list if already opened         otherwise it will get opened and added to the included_files list in zend_execute_scripts
	for the primary file only lookup the real file path and         add it to the included_files list if already opened 	otherwise it will get opened and added to the included_files list in zend_execute_scripts
- MFB: #36686, do not be quiet with the extern GD
- #36686, do not be quiet with the extern GD
fixed different value was returned in mb_get_info.
Added RETVAL_EMPTRY_TEXT() and RETURN_EMPTY_TEXT() macroses
fixed different value was returned in mb_get_info.
Implemented "jump label" operator (limited "goto")
ChangeLog update
- Revert left-over
- Add new test
- Add read ahead ability - Add skipping empty lines - Add ability to read lines as csv
- More testing via fgetcsv
MFH: Move temporary local storage of primary file's realpath up one block to ensure it stays on the stack.
Move temporary local storage of primary file's realpath up one block to ensure it stays on the stack.
- Add new test
Back to dev
5.1.3RC1
Make spl_register_std_class() and spl_register_sub_class() available outside of SPL, for instance in SPL_Types.
MFH: Make spl_register_std_class() and spl_register_sub_class() available outside of SPL, for instance in SPL_Types.
ChangeLog update
- MFH
- Automatic tsrm key fetching
- Automatic TSRM/ZTS detection
- MFH Allow pecl/phar and alike too hook into spl_filesystem_object's
- safe_mode is nuked in head - spl_filesystem_object now allows controlling of clone too
- Cloning might need special treatment as well
- Initial refcounting
- Something that uses void* oth might want to deinitialize it in the dtor
safe_mode news
So long safe_mode mode. Also removed the magic_quotes configure option, no longer relevant since the magic is gone :-).
- remove declaration of non existant function php_treat_data
ChangeLog update
- WS/CS
- remove magic_quotes_gpc, magic_quotes_runtime, magic_quotes_sybase  (calling ini_set('magic_....') returns 0|false - get_magic_quotes_gpc, get_magic_quotes_runtime are kept but always return false - set_magic_quotes_runtime raises an E_CORE_ERROR
MFH Improve DOCUMENT_ROOT setting
Improve DOCUMENT_ROOT setting
- WS
- Update tests
- Update
change these in HEAD too
updated for simplexml changes
- Synch with head
Nuke safe_mode from sapi/*
prepare to the next release
Reverted "break label"
*** empty log message ***
- Make this compile again
MFH add workaround for Oracle server crash, use OCIServerVersion() instead of OCIPing() fix #36250 (PHP Causes ORA-07445 Core dump in Oracle server 9.2.x)
add workaround for Oracle server crash, use OCIServerVersion() instead of OCIPing() fix #36250 (PHP Causes ORA-07445 Core dump in Oracle server 9.2.x)
ChangeLog update
Mark some functions as Unicode-safe and adjust UTODO notices for others.
- gd1 and ft1 entry
Remove register_globals regression test for Pierre
- remove register_globals support (aka "Kill the f***ing thing" :)
stray text
stray text
- MFH Missed 'proto'
- Missed 'proto'
- Make test not depend on my filesystem layout
*** empty log message ***
MFH (Import PCRE 6.6)
Import PCRE 6.6 and make adjustments.
fix win build
implement addChild() and addAttribute() methods add test
fix logo (proper spacing between the letters)
- There is no %v in 5.1 (found by Tony)
- MFH Proto fixes
- Proto fixes
- Proto fixes
- MFH Proto fixes
fixed compatibility with ext/hash
- MFH Proto fixes
- Proto fixes
ChangeLog update
- revert Harmut commit, Histogram implementation not correct and no idea   where you got the ok to add that
- And not here either...
- There is no ltouch.
- Added lchown() and lchgrp() to change user/group ownership of symlinks.
- fixed size information for _php_sig_png array - removed extra memcmp step in signature comparison,   this seemed to have been inherited from ext/standard/image.c   but is not needed here as the provided buffer is big enough   from the start
added ImageColorHistogram function
- fix typo, reword slightly
- Update
- mv package2 to package
- remove it, 1.3.x is dead
- xmllint
- update changelog, and start new release tag
add test
add test
- Add missing function for completeness
- Add missing function for completeness
MF51: fix #36611 (assignment to SimpleXML object attribute changes argument type to string)
fix #36611 (assignment to SimpleXML object attribute changes argument type to string)
fix crash passing non-string member to sxe_prop_dim_exists allow offsets to be used when calling isset/unset fix tests add test
MFH: fix #36606 (pg_query_params() changes arguments type to string)
fix #36606 (pg_query_params() changes arguments type to string)
ChangeLog update
- Need to change a few things to exception based error handling - Drop erroneus/useless RecursiveDirectoryIterator::getSubPathInfo()
- Add test
- Add initial array-access support based on Greg's patch
- Add new test
- Rename
- Add new test
- Make the ctor static and not inline
- WS/CS
- One skipif section is enough
- Drop dead code
- Separate ZEND_METHOD from ZEND_FUNCTION
- prepare 1.2 release; use package.xml v2
ChangeLog update
s/archieve/archive
- Unicode...
- Add new test
- Add new test
Clean up after Marcus.
- Make unicode handling portable (noted by andrei) # Actually we should provide much more such unicode strings that we often # use like 'parent', 'self' and so on.
- Test addition
Add note about md5().
- As expected (but told otherwise) unicode strings indeed need to be   terminated by two \0.
- version agnosticism (PECL/HEAD)
remove obsolete check
fix crashes using notations and entity decls add test
update dom iterator get key function for engine iterator changes fix crashes using notations and entity decls add test
- Add new tests
Regenerated
MFB: Sync with source distro, enable hash by default
Sync with source distro, enable hash by default
Added support for "continue" and "break" operators with labels. Each loop or switch statement can be marked by label and then it is possible to write "break <label>" instead of "break <number>".
Remove "called at [(null):0]" from debug backtrace
Remove "called at [(null):0]" from debug backtrace
ZTS fix
- Added the test case for bug #36599
ChangeLog update
- Store min/max timestamp of entries while building manifest and use max   value for a/c/m-time of dirirectory stats.
give credit where it is due.
Should use word break iteration instead of title, as title one has been deprecated since Unicode 3.2>
- Update protos for Unicode-upgraded functions - Also fix ucfirst() to use full case mapping, so that ß (sharp s)   maps to 'SS' for example
Nuke int32_t (everywhere except streams layer) and signed/unsigned warnings
ChangeLog update
- MFH Use object handler get in the same way as the rest of the engine does
- Use object handler get in the same way as the rest of the engine does
MFH add safe_mode num of parameter check
add safe_mode num of parameter check
MFB51: Remove no longer needed check (checked at a higher level now).
Remove no longer needed check (checked at a higher level now).
Unicode support: zstr union
- Must use return as in 5.1 after recursion
- Constants need to be updated too (when updating class constants)
nuke tests for libxml2 version - will always be > 2.6.0
nuke tests for libxml2 version - will always be > 2.6.0
64-bit fixes - ("make test" now works again on these platforms)
ChangeLog update
- Make Derick happy for the moment
- If (SEEK_CUR,0) means an illegal seek we return -1 to denote the error
Parsers for previous patch
- Need to set eof flag when inner stream has eof condition
- Cleanup
ChangeLog update
- This dtor is actually always needed
- Add OO interface to handling phar archieves and entries - Add support for HEAD - Cleanup
- MFH Argument parsing specifier 'C', which is necessary for SPL already
- Extend struct to allow inherited c classes hookk their own info there
This fix was reverted
- MFB
- Cleanup
- MFH: Add .cvsignore
- Add .cvsignore
ChangeLog update
- Update
- Synch with head
MFB51: Revert previous fix to allow for a more comprehensive patch from Derick.
Revert previous fix to allow for a more comprehensive patch from Derick.
- Missing conversion
- Use get_property_ptr_ptr handler to prevent SEGV as in bug #35785 # Issue not completley solved though
- Add another write case
- Add unicode results
- Unicode support
Unicode support: MS Visual C compatibility
- Warning fixes by Steph
Unicode support
ChangeLog update
- Added ability to add elements by index if such elements already exist - Added SimpleXMLElement::getName() to access the node name # This allows to retrieve the name of the root element which is otherwise # only available by converting the sxe object into a dom object.
- Update
MFH - binary safety patch from Moriyoshi
Binary safety patch from Moriyoshi
- Add ReflectionExtension::getDependencies()
- MFH: Function deprecation flag
- deprecated belongs in the flag area, not in the keyword area
- Deprecation severity shall be E_STRICT (as commented by ilia) # Actually this conforms with other messages
ChangeLog update
- We need %v here
- s/FETCH_PROPSLATE/FETCH_PROPS_LATE/ as per IRC discussion
- Add ability to add new nodes via properties
- deprecated not static
- Add deprecation function/function alias macros
- Functions can be deprecated too - Add missing constant
- MF51: fix crash in DOMImplementation::createDocumentType("name:")
 - fix crash with DOMImplementation::createDocumentType("name:")
ChangeLog update
*** empty log message ***
ChangeLog update
MFH: fixed bug #35594 for all systems.  "optind = 0" doesn't work on FreeBSD, but "optind = 1" seems to work on all systems (bug #36091)
fixed bug #35594 for all systems.  "optind = 0" doesn't work on FreeBSD, but "optind = 1" seems to work on all systems (bug #36091)
MFB51: Added test for bug #36434
Added test for bug #36434
Unicode support: fixed serialization of "Serializable"
Unicode support: fixed serealization of "Serializable" and "IncompleteClass"
Unicode support: fixed GLOBALS protection
fixed test file
Unicode support
Unicode support: fixed __toString() in user defined exceptions
Unicode support
Unicode support: fixed check for class type hint
Unicode support: fixed internal constants usage and get_defined_constants()
Unicode support: fixed check for direct call to __clone()
Unicode support: fixed call_user_func(array($this, "self::foo")) Made check for "self/parent" before calling __autoload()
fix ext/wddx build
ChangeLog update
- 2006 now
- Print deprecation info on reflection export
- More bodies
- Ensure non abstract methods have code # This is very usefull once doxygen 1.4.7 comes out with my patch :-)
- MFH: List --rf/--rc/--re only with enabled reflection
- List --rf/--rc/--re only with enabled reflection
Add md2 algo support
Keep history in package.xml file..
Add ReflectionMethod::isDeprecated(). Patch reviewed by Marcus Börger <helly@php.net>.
Portable unicode string API:   - use the same type (int) for zval.value.usr.len and zval.value.str.len   - use union "zstr" as char*/UChar* mixture instead of void*   - Z_UNISTR() and Z_UNILEN() no longer check for Z_TYPE()   - nuke int32_t from ZE (not finisned)
- Its 2006 already
- Update
- Ansi compliance issue found by rob
WS
ChangeLog update
- Simplify by remove redundant checks
- Add ReflectionProperty::getDefaultValue()
- MFH: Rename reflection constants to fix parser conflicts
- Rename reflection constants to fix parser conflicts
- Show dependencies in dump's too
- Add ReflectionExtension::getDependencies() to retrieve all dependencies   of an extension as associative array "ModuleNeme" > "Relation"
- Add some arginfo
- Synch docu
- WS
- Include examples in documentation - Provide a better place for the examples
- Synch zend_call_function() with VM function call helper
- Add deprecation flag and message
Preparation for portable string API (use macroses to access zval).
Incorrect usage of Z_TYPE() macro
ChangeLog update
- changelog
BFN: fixed ext/hash/tiger on big endian platforms
MF51: fix tiger on big endian platforms
- fix tiger on big endian platforms
More safe_mode nuking
Nuke safe_mode
- Add new function
- Interfaces may have static methods to enforce their existance in   implementing classes
- Static functions cannot be abstract
ChangeLog update
- Couple of compile fixes.
- Get rid of using ENFORCE_SAFE_MODE.
- More safe_mode nuking
Nuke php_check_safe_mode_include_dir
- Some more safe_mode nuking
Start nuking safe_mode. Still a lot of work to do...
- There is no %v in sprintf
- Add test
- Add new test
- Initiai fix to Bug #36436 DBA problem with Berkeley DB4
MF51: fix misleading proto (confused in and out charset)
- fix misleading proto (confused out and in charset)
ChangeLog update
Rename getloadavg to sys_getloadavg
MFH.
NULL byte should be escaped to \000 instead of \0 in case it is followed by an octal digit. (found by Jeffrey Friedl)
- Change to offsetof as suggested by Clayton
ChangeLog update
add getloadavg() function that has been running in production on rs1.php.net for a couple of years.
MFH: add checks and fix possible reincarnations of bug #36420
fix #36420 (segfault when access result->num_rows after calling result->close())
MFH: improve usleep(): use new param parsing API, check for negative values (related to #36410)
improve usleep(): use new param parsing API, check for negative values (related to #36410)
ChangeLog update
fix typo
fix typo
Use 5.1 functions
- Little speedup + first test
MFH: fix #36403 (oci_execute() no longer supports OCI_DESCRIBE_ONLY)
fix #36403 (oci_execute() no longer supports OCI_DESCRIBE_ONLY)
MF51: fix memory leak and possible invalid reads
fix memory leak and possible invalid reads
MFH: fix #36400 (Custom 5xx error does not return correct HTTP response error code)
fix #36400 (Custom 5xx error does not return correct HTTP response error code)
ChangeLog update
MF51: fix leak in zend_strtod() on big doubles add new test
fix leak in zend_strtod() on big doubles add new test
add test for bug #36337
add test for bug #36337
ChangeLog update
- Change unicode_enabled() to unicode_semantics() per Andrei's suggestion
pval -> zval (Steph)
Typo (misplaced #endif)
Made server wide switch for unicode on/off (according to PDM).
- Add unicode_enabled() to check whether unicode_semantics is on
ChangeLog update
- Synch
- Reinsert line deleted per accident
- MFH No more old parameter api usage
- No more old parameter api usage
ChangeLog update
fix news
ChangeLog update
MFH
added additional info about mail encoding to mb_get_info(). (made by Jokagi)
Implement character/word/line/sentence iterators and the reverse counterparts.
MFH: fix #36359 (splFileObject::fwrite() doesn't write when no data length specified)
fix #36359 (splFileObject::fwrite() doesn't write when no data length specified)
(Missing patch from the PHP 4 tree that got lost in the shuffle)  See: http://cvs.php.net/viewcvs.cgi/php-src/ext/session/session.c?r1=1.336.2.39&r2=1.336.2.40 - fix logic. if the client already sent us the cookie, we don't   need to send it again.  if the id has been changed, we need to   update the client side.
(Missing patch from the PHP 4 tree that got lost in the shuffle)  See: http://cvs.php.net/viewcvs.cgi/php-src/ext/session/session.c?r1=1.336.2.39&r2=1.336.2.40 - fix logic. if the client already sent us the cookie, we don't   need to send it again.  if the id has been changed, we need to   update the client side.
ChangeLog update
Make ReverseTextIterator a separate class.
We already have default collator available.
- fix order
- fix order
MFB51: Added test for bug #36308
Added test for bug #36308
- protos
- MFB: - revert last fix - ensure that we are in 32bit - do not try to compare the decimal values but hex, php does not have   unsigned integer
- revert last fix - ensure that we are in 32bit - do not try to compare the decimal values but hex, php does not have   unsigned integer
ChangeLog update
- MFH: It's 2006 and PHP 5
- It's 2006 and PHP 6
MFH: move function definition from .h to .c, where it should be
move function definition from .h to .c, where it should be
unicode_semantics cannot be set on per-request basis
ChangeLog update
MFB fix Bug #36001: make install fails when --enable-memory-limit used
Reverse iteration for combining sequences.
Implement reverse iteration for codeunits and codepoints. Combining sequences are next.
MFB.
Move array globals declarations back to the header file.
don't use deprecated call-time by reference
don't use deprecated call-time by reference
Compression level shouldn't be greatr then 9.
Compression level shouldn't be greatr then 9.
modify get_iterator calls for engine change fix mem leak with iterators fix object casting for edge case
fix mem leak with iterators fix object casting for edge case
modify get_iterator call for engine change
ChangeLog update
- forgot the original credits
MFH.
Check for get_properties handler before using it. (Patch from rrichards@ctindustries.net).
- entry for #36306
- MFB: #36306, crc32() result differs on 32-bit and 64-bit platforms
- #36306, crc32() function result differs on 32-bit and 64-bit platforms
Implement combining sequences support in TextIterator.
init variables
init variables (continue making GCC happy)
MFH: fix ReflectionClass::getInterfaces()
- fix ReflectionClass::getInterfaces()
TODO
Some TODO items.
Make TextIterator fast again, now that we don't have to worry about references.
typo
typo
MFH: initialize variables and reduce the number of warnings
initialize variables and reduce the number of warnings
MFH: initialize variable and make gcc happy
initialize variable and make gcc happy
MF51: initialize variables
initialize variables
MF51: initialize to_r remove needless semicolon
initialize to_r remove needless semicolon
ChangeLog update
- Finally enable optimization
- Missed one to be public
- WS - current() doesn't return anything
- Simplify
- The next get_iterator() call is supposed to do the check itself
- Simplify
- MFH Add new tests
- Add new test
- Make all default implementations public
- Need one more thing exported
- Iterator API was changed
- Add missing .cvsignore
- Disallow foreach($v as &$ref) when $v is an object that implements   interface Iterator. The signature of Iterator::current() doesn't allow   that. Maybe ppl also want IteratorByReference or similar. Unfortunatley   this comes with an API change but there is no easier way.
Needs to use .ustr. portion of the union for IS_UNICODE.
MFH: fix #36295 (typo in SplFileObject::flock() parameter name)
fix #36295 (typo in SplFileObject::flock() parameter name)
Simplify test code
- MFH
- Initialize variable
- MFB: ini entry for gd.jpeg_ignore_warning
- ini entry for gd.jpeg_ignore_warning
- jpeg tolerant mode entry
- MFH: add a weak/tolerant mode to the jpeg loader
- test for jpeg support
- BFN
ChangeLog update
- Test commit to see if mail works.
- remove libjpeg direct output and wrap them in php warnings
BFN
ChangeLog update
Implement Traversable instead of Iterator.
Add code unit ops.
Abstract the iterator interface so that we can add new types.
Gah. In order to avoid memory corruption when using references in foreach() this code is necessary. But it makes iterator 6x slower. We should keep thinking about how to optimize it.
Guard against assign-by-ref.
MF51: fix #36010 (Segfault when re-creating and re-executing statements with bound parameters)
fix #36010 (Segfault when re-creating and re-executing statements with bound parameters)
duplicate string when needed
ChangeLog update
Rewrite to use C-level iterators for performance. Also, cache the string in the iterator object for immutability.
MF51: nuke unused variable
nuke unused variable
- add a weak/tolerant mode to the jpeg loader  * new INI option to enable it (off by default)    gd.jpeg_ignore_warning (0|1)  * The default mode is the current behavior  * if the warning mode is enabled, the image may be loaded succesfully    but the jpeg warnings will be raise as notices
MFH: Prevent bindport from being used uninitialized
Prevent bindport from being used uninitialized
MFB51: Only use win32 directory separators on win32 or netware.
Only use win32 directory separators on win32 or netware.
fix tests
fix win32 snapshots
add test for bug #36258
add test for bug #36258
MFH: add missing folding tags nuke unnecessary semicolons
add missing folding tags nuke unnecessary semicolons
MF51: fix #36258 (SplFileObject::getPath() may lead to segfault)
fix #36258 (SplFileObject::getPath() may lead to segfault)
Bug #36226 Inconsistent handling when passing potential arrays
Bug #36226 Inconsistent handling when passing potential arrays
AIX support
AIX support
Reimplement FastCGI interface
ChangeLog update
Remove debug message.
Check for intern->text before destroying it.
Proof-of-concept for TextIterator. Much more work to be done here.
Clarify new entries.
MFH: fix #36242 (Possible memory corruption in stream_select())
fix #36242 (Possible memory corruption in stream_select())
fix build
ChangeLog update
- Implemented PECL req #6641: negative values for hexadecimal and octal numbers   are not supported.
merge from 5.1 forgotten patch
fix test
fix test
MFH: fix #36235 (ocicolumnname delivers empty results before a succesfull ocifetch)
fix #36235 (ocicolumnname delivers empty results before a succesfull ocifetch)
- MFH: Upgraded timezonedb to 2006a.
- Upgraded timezonedb to 2006a.
Add some documentation to the JSON extension.
Add tests for JSON based on tests found on json.org:
- Rewritten for better performance. 3-8x faster encodes, 2-4x faster decodes. - No longer uses json-c, implements it's own JSON parser and encoder. - JSON parser based on Douglas Crockford's JSON_checker.
Remove json_c.
- Moved msession to PECL.
- Moved msession to PECL.
ChangeLog update
fix printf-style formats
MSession now works with the new MCache server
ChangeLog update
nuke ws pollution
- An empty string is still a valid string, so there is no reason to return   NULL here.
fix news
ChangeLog update
MF51: use free()
- not efree but free
ChangeLog update
MFB51 Export symbols that will allow building WDDX as shared object
Export symbols that will allow building WDDX as shared object
MFB51 Add header so WDDX builds as shared
Add header so WDDX builds as shared
- #36185 entry
- MFH: #36185 str_rot13(NULL) crash
- #36185 str_rot13(NULL) crash
MF5_1: include png.h prior php.h
- include png.h prior php.h
MF_5_1
- fix imap_fetchbody(); there is no default mailgets()
- imagepng filter enty
- added imap_savebody()
MFH: add imap_savebody()
- add imap_savebody()
- add PNG filter constants
- MFH: add filter option to imagepng - add constants   PS: If someone can check why #include "png.h" fails, it will be cleaner
ChangeLog update
- add filter mode support for imagepng   imagepng("file", $comp_mode, $filter_mode);   The filters are defined in the libpng docs for png_set_filter   allow to divide the size of png images by more than 2. Constants   will be added later
BFN
MFH: fix bug #36152 problems with curl+ssl and pgsql+ssl in same PHP
- fix bug #36152 problems with curl+ssl and pgsql+ssl in same PHP
BFN
ChangeLog update
- MFH Bug #36141 Add ReflectionClass::newInstanceArgs($args)
- MFH
fix possible crash in textContent
fix possible crash in textContent
MFB51: Properly rewrite queries where a bound parameter appears more then once.
Properly rewrite queries where a bound parameter appears more then once.
ChangeLog update
. Update docu
Use zend_codepoint_to_uchar() macro.
improve CS
ws
- Update docu
eurealloc() should not be used with UBYTES()
- MFH Bug #35978 %n format string specifier wrongly implemented
- Implemented #36141 Add ReflectionClass::newInstanceArgs($args)
cURL extension news.
- Add fast access to HashTable
ChangeLog update
MFH: fix #36113 (Reading records of unsupported type causes segfault)
fix #36113 (Reading records of unsupported type causes segfault)
update copyright year, and add credits for Davey Shafik/info on where Phar came from
- MF51: date is not a server API
- date is not a server API
- Go with 0.9.4.
ChangeLog update
- MFH
- WS
- WS
- WS
- MFH Show the exact version
- MFH Update test
- Update test
- Hmm one more # is needed
Fugbix typo.
fix news
News about further get_headers() changes.
ChangeLog update
- namespace protect constants
ChangeLog update
MFH
added new option of mbstring to php.ini
Change license from LGPL to PHP.
fix typo
fix typo
add new test
add new test
MFH: fix #36096 (oci_result() returns garbage after oci_fetch() failed)
fix #36096 (oci_result() returns garbage after oci_fetch() failed)
ChangeLog update
MFB51: Allow get_headers() to return header information even for non-200 responses.
Allow get_headers() to return header information even for non-200 responses.
fix test
fix tests
ChangeLog update
MFH: couple of pedantic fixes: "static" should be first
couple of pedantic fixes: "static" should be first
fix typo (and possible segfault)
- Enable date_sun_info() function.
MFH: make sure ce_child is properly initialized
make sure ce_child is properly initialized
MFH: fix error message on `make test` when bison is not installed
fix error message on `make test` when bison is not installed
fix news
MFB51: Make get_headers() use the default context.
Make get_headers() use the default context.
MFH: reorganize resource destruction
reorganize resource destruction. - use one helper function for all resource types - destroy all resources when connections are still available
ChangeLog update
improve open_basedir checks in GD
MFH: improve open_basedir checks in GD
MFH: fix #36055 (possible OCI8 crash in multithreaded environment)
fix #36055 (possible OCI8 crash in multithreaded environment)
fix build
Bug fixing news
you fix, add, update or remove..
- remove old return_long
- MFB: imagecolorallocate* returns false on error
- imagecolorallocate* returns false entry
- return false on error
- Returns FALSE on error, it is how it must work
Unicode stuff is changed according to decision maden on PDM. Now IS_BINRAY data type is removed and IS_STRING starts behave as IS_BINARY in unicode mode. IS_STRING is incompatible with IS_UNICODE, so ALL functions should be improved to support unicode mode.
ChangeLog update
MFB51: Only report mkdir() errors if error reporting option is set.
Only report mkdir() errors if error reporting option is set.
MFH: fix #36038 (ext/hash compile failure on Mac OSX)
fix #36038 (ext/hash compile failure on Mac OSX)
fix typo
fix typo
MFH: fix #35999 (recursive mkdir() does not work with relative path like "foo/bar")
fix bug #35999 (recursive mkdir() does not work with relative path like "foo/bar")
ChangeLog update
MFB51: Added a check for special characters in the session name.
Added a check for special characters in the session name.
avoid segfaults
ChangeLog update
add test for bug #36010
add test for bug #36010
- Update
- Update
- BFN
ws fix
- Install header file
be wordy
New field constants for BIT and NEWDECIMAL
2nd attempt: implementation of 36007 1st commit stopped with protocol error - never seen that before :-(
removed false information
Implemented feature request #36007: Support for BIT and NEW_DECIMAL field types
fix news
ChangeLog update
- Make clear what -a mode gets you
WS
- WS
- MFH lower valgrind error count to 0
- lower valgrind error count to zero.
MFH: add missing ifdefs
add missing ifdefs
- Add News (which is news)
ChangeLog update
this is not news
- MFB: add php_mkdir_ex
- add php_mkdir_ex, works like php_mkdir but allows to silent any error   when no options are used
Initial checkin of LiteSpeed SAPI module
- Add bzip2 decompression support
- Add stream filter 'consumed'
- Add stream filter 'consumed' which can restore the stream position when   a stream was read or written through a size changing filter.
typo fix
Back to dev
ChangeLog update
Don't leak a json_object on a decode error.
- Use consumed filter to check number of compressed bytes read # This fixes all tests again
- Change to use streams filters which simplifies decompression a lot and   easily allows to use other compression algos too
- Add new test
- Split fname/phar-data mapping and alias/phar-data mapping - Add test
- WS
- MFH
- Add short size info
MFH: fix CGI SAPI check on Windows
- ws
- fix CGI SAPI check on Windows
int -> long 64bit fixes
5.1.2
ChangeLog update
MFH: fix #35959 (Cannot build with Solid 2.3)
fix #35959 (Cannot build with Solid 2.3)
fix memory corruption (HEAD only)
MFH: destroy regular connections in RSHUTDOWN if ZTS is used this fixes problem with Oracle9 (not Oracle10) and Apache2/worker - connections are not being closed correctly see #35205 and similar issues
silence compile warning in non-ZTS mode
destroy regular connections in RSHUTDOWN if ZTS is used this fixes problem with Oracle9 (not Oracle10) and Apache2/worker - connections are not being closed correctly see #35205 and similar issues
tests need updating, but this works with a valid 0.8.0 phar now.  Additions include alias/apiversion/per-file flags in the manifest
ChangeLog update
Add print_ft to dump function tables (lists the names)
ChangeLog update
PEAR news
ChangeLog update
- MFB Second part of is_callable/call_user_func - Clean a few warnings
- MFB missing E_STRICT
- MFB zend_is_callable() fixes # Now to the missing part in zend_call_function()
need PHP 5.1.2 because of bug in temp memory streams
- Show whether this is the shell or just the starnge mode
ChangeLog update
fix tests
Nuke unused files
credits for Dmitry
fix typo in the code and related tests
typo
- WS
MFH: add missing .cvsignore
add missing .cvsignore
- MFH Update
- Update
- I was missing here
- Prevent overloading aliases - Detect already loaded files and reuse them instead of reloading them - Add a test for the above
MFH: I don't recall the reason for messing with r->allowed here, so let's get rid of it (and see who screams).  This should fix bug #32561
Let's not mess with r->allowed here - this should fix bug #32561
- No ini setting needed
- Correct test name
- Rewind stream when transferring ownership - Add Phar::loadPhar + test
- And another test
- Add new tests
- Typo
MFH
BFN
MFH: fix #35907 (PDO_OCI uses hardcoded lib path $ORACLE_HOME/lib)
fix #35907 (PDO_OCI uses hardcoded lib path $ORACLE_HOME/lib)
ChangeLog update
MFH
- Cleanups:   * unify the address handling to always strip leading whitespace   * ws fixes
- Use temp streams internally instead of memory to reduce memory usage # Internally we try to use only one temp stream if possible by stoing # the temp stream in the manifest entry and transferring ownership upon # usage/close. If a particular file gets opened twice in parallel we open # a second temp stream nonetheless.
Back to dev
MFH: fix typo
fix typo
ncurses goes sibiria^Wpecl
Go with 5.1.2RC2
Revert unrelated parts of the previous patch.
MFH: delete descriptor from the hash and avoid crashes on commit/rollback
delete descriptor from the hash and avoid crashes on commit/rollback
- Made HashTable manifest a direct member rather than a pointer - Need to find a working detection for compressed phars
MFH: Add astro.c.
ChangeLog update
- More -> 2006 changes
- More -> 2006 changes
- If no compression was specified and we detect compression than simply set   compression mode.
- Allow simple .phar too (in that case we guess no compression)
- Cleanup/simplify/let configure determine whetehr we are big/little-endian
- Update to 2006
- One more update
- Update copyright notices to 2006
- Update copyright notices to 2006
bring tests up-to-date with 5_1 branch #few are failing and will stop failing when bugfixes are upmerged from 5_1
cast and fix a warning
- Removed the files which are no longer necessary.
MFH: fix test
fix test
MFH: fix tests
fix tests
fix win build
add Marcus as lead
- Update tests
-Typo
- More clean up (no need to export enything because one may either access   the stream handler tables through the streams api or use the streams   which is prefered anyway).
- MFH Update examples
- Update examples
- Simple unlink is enough
- MFH
- Typo
- MFH
- Add CLEAN section which contains optional cleanup code executed even when   the test fails and which can be prevented by --no-clean switch
- Add myself as author
- Added the lchown() and lchgrp() functions which change permissions and group   permissions on symbolic links. #- We'll also add this to PHP 5.1.3? or PHP 5.2, so I didn't add it to NEWS.
ZTS fixes.
ChangeLog update
- Imlement normal stream handling, use .phar.php anf .phar.gz to detect   where the filename part ends and whether it is compressed or not # This already allows: php ext/spl/examples/directorytree.php phar:///...
- Add test (fails right now (why ever))
- Add new test
MFB51: Added param checks for ap2 fetch respose/request header functions.
Added param checks for ap2 fetch respose/request header functions.
- Provide parameter info - Add missing editor blocks
- Change to new extension layout (drops unneccessary foward decls) - Privide proto's
MFB
- prevent pontential failure with stupid compilers
typofix
ChangeLog update
MFH: fixed apache_setenv(): at least 2 parameters are required
ChangeLog update
- Class was renamed (change test names, too)
- Class was renamed
PHP_Archive -> Phar to match coding standards and pecl traditions
fix 018/019.phpt - we need to compare the whole key, not just all but 1 char, otherwise 1-byte files/dirs are not compared
- Small tweaks/cleanup/left-overs
remove a host of small problems found by testing 016.phpt
test needed tweaking to pass now
update tests to new API (16, 18, 19 still fail)
- Simplify and change to --enable-phar since zlib is optional
on second thought, signing can be done externally without a performance hit, and only needs to be done on initial download, i.e. is best implemented with external tools
- No revert the automatically inserted /*..*/ where wrong
update package.xml
add sorting to opendir() so that it matches PHP_Archive exactly
MFB51: Added safety checks
Added safety checks
- MFB
- Just another place where rewind() might not be set
- key() might be optional
MFH
- Allow any EOLs in CREDITS files
fix build
- dos2unix
NEVER EVER use DOS EOLs in CREDITS!!!!
WS
fetch more than one row at once
MFH: oops
oops
fix typo
- fix typo
bump year and license version
update credits
bump year and license version
Update license to 3.01
bump the year and license version
2005 -> 2006
fix eof, fix segfault in stat, add unique dev/inode to allow caching via opcode caches like APC, comply with API 0.7.1, add todo items to EXPERIMENTAL
ChangeLog update
- MFB
ChangeLog update
BFN
MFH - instantiated is correct
instantiated was correct
- WS
- MFB
- Allow to specify ini to use for test executeable
- If user wnats help, don't complain about missing environment
- MF51
- Need to set precision in ini
MFH
typofixes
- MF51
- ensure that x1<x2 or y1<y2
ChangeLog update
MFH: typofix
fix typo
- add some basic optimisations, usefull when you draw many horizontal or   vertical lines like in charts
MFH:added Turkish language definition (related to bug #29955)
added Turkish language definition (related to bug #29955)
MFB51: Not a fatal error.
Not a fatal error.
fix CGI build (patch by Pierangelo Masarati)
ChangeLog update
MFH(r-1.7) Silence compiler warning: unused variable
Silence compiler warning: unused variable
ChangeLog update
tweak the fix
tweak the fix
add test for #35821
MF51: fix #35821 (array_map() segfaults when exception is throwed from the callback)
fix #35821 (array_map() segfaults when exception is throwed from the callback)
- MFH: Upgraded timezone db to 2005.18.
- Upgraded timezone db to 2005.18.
MFB51: Improve "skip" checks
Improve "skip" checks
ChangeLog update
- remove HAVE_LIBGD20, we support only 2.0+ now   (some were removed by my previous commit)
- silent compile warning introduced by previous commit
MFB: typofix
typofix
- HAVE_GD_DYNAMIC_CTX_EX, always defined
- check for jpeg support
- remove HAVE_LIBGD204, always set
- remove USE_GD_IOCTX, both bundled and extern lib use IOCTX
- basic gif i/o test
MFH: fix test
fix test
- imagetypes test - copyresized title
reorder
fix news
add new test
add new test for recently fixed bug
- BFN
- MFH Support full range of floats
- Support full range of floats
- SWH (WS + memory corruption fix)
- copyresized basic test   more once imagediff is available
Code cleanup (Nuno)
Whitespace
Whitespace fix (don't ask :)
Reverted invalid fix for bug #35785
Reverted invalid fix for bug #35785
Commit missing files - sorry!
ChangeLog update
- xslt/exslt versions constants entry
- MFH: #35805 add LIBXSLT_VERSION, LIBXSLT_DOTTED_VERSION, LIBEXSLT_VERSION               and LIBEXSLT_DOTTED_VERSION
- #35805 add LIBXSLT_VERSION, LIBXSLT_DOTTED_VERSION, LIBEXSLT_VERSION and          LIBEXSLT_DOTTED_VERSION
add missing skipif tag
add missing skipif tag
- add colorclosestalpha tests
- add colorresolvealpha to colorresolve tests - update colormatch
- imagecolormatch fix and changes
- MFH: raise warnings instead of errors in colormatch
- raise warning instread of errors in colormatch
MFB51: Make MySQL driver use ANSI complaint quoting style.
Make MySQL driver use ANSI complaint quoting style.
- MFH: fix segfault/leak in imagecolormatch - MFH: test for imagecolormatch
- fix leak/segfaults in imagecolormatch - add tests for imagecolorexact and imagecolormatch   The later is only about the segv
MFH
- Remove wrong inline usage (and fix bug #35796)
MFH: fixed #35711, added mbstring.strict_detection to detect the encoding striktly.
fixed #35711, added mbstring.strict_detection to detect the encoding striktly.
Reimplement FastCGI interface
ChangeLog update
- add truecolortopallete and istruecolor test - titles for colorclosest/resolve...
- fix titles - function check
- MFB Make this work with VPATH builds too
- Make this work with VPATH builds too
- MFH Require re2c 0.9.11 and use correct version notation
- Require re2c 0.9.11 and use correct version notation
- Update
ChangeLog update
MFH: fixed #35711 ISO-8859 charset not correctly detected.
fixed #35711 ISO-8859 charset not correctly detected.
move the message to where it belongs
fix small memory leak which emerged two days ago
- Add make target make ntest to test in unicode mode - Change make target test to check native and unicode mode
- BFN
- MFH Add new test
- Add new test
RC2 not RC1
MFH:fix mkdir() function properly (patch by nlopess)
fix mkdir() function properly (patch by nlopess)
MFB: format string fixes
Beware of format strings...
BFN
MFH: fixed #29955 mb_strtoupper() / lower() broken with Turkish encoding..
MFB: fix #35781 (stream_filter_append() can cause segfault)
Bug fixing news
Back to dev
fix #35781 (stream_filter_append() can cause segfault)
added turkish language support for libmbfl.
fixed #29955 mb_strtoupper() / lower() broken with Turkish encoding..
fix tests
MFH: fixed #28899 mb_substr() and substr() work differently when mbstring.func_overload is enabled.
fixed #28899 mb_substr() and substr() work differently when mbstring.func_overload is enabled.
- MFH Do not test output escaping here
- Do not test output escaping here
ChangeLog update
- remove HAVE_GDIMAGECOLORRESOLVE here too (w32)
- add tests for:  - imagecolorclosest  - imagecolorresolve  - imagecopy  - imageline  -imagesetstyle and dashed line - remove HAVE_GDIMAGECOLORRESOLVE, always present
MFH: Back out a portion of the previous patch which broke win32 file functions
Back out a portion of the previous patch which broke win32 file functions
\# Damn !
\# Damn !
- MFH Point to README.TESTING
- Point to README.TESTING
BFN #if it is not clear from the previous commit that fixes the bug. the leaks #does not come from the fix bug from some other bug.
fix for bug# 35759 (mysqli_stmt_bind_result() makes huge allocation when column empty) #this shows some leaks now, which has to be investigated but closes the #bug report.
5.1.2RC1
change -o to || to be more portable
- Find lib in default locations, too
- Find lib in default locations, too
ChangeLog update
- WS
MFB: merge two skipif entries
merge two skipif entries
Better be a bit more verbose
No need to mention it here as it is fixed before 6 is out..
- MFH Add --[keep|show]-[all|skip|php] switches
- Add --[keep|show]-[all|skip|php] switches
- MFH Add missing skipif
- Add missing skipif
use more portable || here
- MFB Need to store length (and type) of class name
- We need to store the length of the class name
MFB51: Don't lose track of exec() errors in pdo_sqlite2
Don't lose track of exec() errors in pdo_sqlite2
MFH: prevent compile failure with --disable-all
- skip NG if no SCHEMAS support - skip readInner/OuterXml if not defined
- readInnerXml() and readOuterXml() test
MFB: fix test, add test for 64bit platform
fix test, add test for 64bit platform
MFB: fix test
fix test
MFB: add missing skipif conditions, fix existing ones add one missing test
add missing skipif conditions fix existing ones
MFB: add missing skipif conditions
add skipif conditions
BFN
MFB: fix #35760 (sybase_ct doesn't compile on Solaris)
fix #35760 (sybase_ct doesn't compile on Solaris)
ChangeLog update
- MFH: add tests, ~70% coverage
- add some tests, ~70% now
- MFH: typo in error msg
- typo in error msg
- fix {{{
- update inline docs - fix {{{ }}}
- Apply workaround only when neccessary
- MFH move zend_object_Value definition to zend_types.h
- MFH add Z_OBJVAL*() macros
- Only apply workaround solution for 64 bit machines when necessary # Actually this can already be necessary on 32 bit machine and also not be # necessary on 64 bit machines. It all depends on the compiler settings.
- Move zend_object_value definition to zend_type.h # Types declared there can be used in configure stuff already. zend.h is # being created by configure...
- Add Z_OBJVAL*() macros
- MFB Get rid of warnings
- Get rid of compiler warnings (both postgres an dphp use these defines)
- MF51: This check is unnecessary, as it can only be set through the   date_default_timezone_set() function which checks the value already.
- This check is unnecessary, as it can only be set through the   date_default_timezone_set() function which checks the value already.
fixed php version detection
MFB: fix test decription
fix test description
MFB: fix notice
fix notice
MFB51:  Updated libsqlite in ext/pdo_sqlite to 3.2.8.
 Updated libsqlite in ext/pdo_sqlite to 3.2.8.
MFB51: Updated libsqlite in ext/sqlite to 2.8.17. Use in-memory database for tests.
Updated libsqlite in ext/sqlite to 2.8.17. Use in-memory database for tests.
MFB51: Proper error handling for persistent connections.
Proper error handling for persistent connections.
remove leftover code clear zend_object rather than deal with the guards issue notice if node is of a type that cannot be expanded
MFB: more SPL leak fixes
more SPL leak fixes
MFB: fix leak appearing when __autoload() throws an exception
fix leak appearing when __autoload() throws an exception
MFB: add test for #35740
add test for #35740
MFB: fix #35740 (memory leak when including a directory)
fix #35740 (memory leak when including a directory)
ChangeLog update
cleanup code making it easier to add new functionality and maintain implement xmlwriter_full_end_element and xmlwriter_write_raw
BFN
MFB: fix possible invalid reads
fix possible reads of uninitialized memory (reproducible only on 64bit platforms)
- MF51: Updated timezone database to version 2005.17 (q).
- Upgraded timezone database to 2005.17.
ChangeLog update
- MFH IteratorIterator::__construct() fixes
- Check for result of getIterator() call
MFB: fix leak in SPL iterators
fix leak in SPL iterators
MFB: fix typo
tix fypo
MFH: more spelling fixes
more spelling fixes
MFH: fix spelling
fix spelling
touch with re2c 0.9.11
touch with re2c 0.9.11
- Those should be lower case only.
- Those should be lower case only.
Prototype fix (MFB)
prototype fix
Prototype fixes (MFB)
- MFH End test script when detecting '===DONE===' that way showing memleaks
- WS - End test script when detecting '===DONE===' that way showing memleaks
fixed test for ZTS
Test fixes
- MFH Add missing prefixes
- Add missing prefixes
- MFH Speling
- Speling
MFH: fix possible usage of uninitialized variable
that's not what I was going to commit..
fix possible usage of uninitialized variable
- Increase timeut for -m testing
- MFH Increase timeut for -m testing
ChangeLog update
- keep it sync'ed
it is easier to spot fixes when you know what and where something was fixed
fix news
bug fixing news
Retry on failed prepare resulting from duplicate statement name.
- add leaks fix in imagecreatefromstring
- MFH: - fix leaks and wrong error when invalid/empty string are given to   imagecreatefromstring - add test for imagecreatefromstring - add test for palettecopy
MFB51: Added token for capturing arbitrary whitespace blocks inside text.
Added token for capturing arbitrary whitespace blocks inside text.
MFB51: Extension dependancy improvements during configure
nuke file that should not be here
MFB: int -> long
change int to long and fix valgrind warnings
- BFN
- MFB Add optional dependency to ext/dom
- Add optional dependency to ext/dom
fix test
ChangeLog update
- MFB
- Simplify (+fix memleak)
- Add new const
- MFB
- WS
- MFB
MFH
- Drop superflous param
fix compile warning with Apache2 and Zend VM disabled (someone forgot to do MFH)
- Add SplTempFileObject to output
- Add new tests
- Add/fix tests
- Provide better error message when using illegal function 'pointers'
- Simplify and synch is_callable_ex() with actual execution code   . Allow array($this, 'parent::method') for function 'pointers'   . Spit out E_STRICT in case of erroneous use of function 'pointers'
MF51: fix #35713 (getopt() returns array with numeric strings when passed options like '-1')
fix #35713 (getopt() returns array with numeric strings when passed options like '-1')
- remove HAVE_LIBGD15, always set
- fix leaks and wrong error when invalid/empty string are given to   imagecreatefromstring - add test for imagecreatefromstring - add test for palettecopy
- adieu HAVE_LIBGD13 - add imagecolorat tests (truecolor and palette)
MF51: fix test, add new one
fix test add new one for 64bit only
fix test
fix test this linenumber may vary
fix test
MF51 Ilia's last fix fix the test appropriately
ChangeLog update
MFB51: Cleanup code and prevent usage of uninitialized variable.
Cleanup code and prevent usage of uninitialized variable.
MFH: fix #35692(iconv_mime_decode() segfault, with libiconv only)
fix #35692(iconv_mime_decode() segfault, with libiconv only)
MFH: fix #35690 (pack() tries to allocate huge memory block when packing float values to strings)
fix #35690 (pack() tries to allocate huge memory block when packing float values to strings)
MFH: fix C++ comments in C code
- #35681, non ansi comment
ChangeLog update
Export symbols needed by pecl/http
Export symbols needed by pecl/http
I see no reason no reason to not support chunked encoding requests. Let's ask Apache to decode these requests for us.
- add wbmp read/write tests - remove HAVE_GD_WBMP, always available
- correct title
- remove HAVE_GD_GD2 on windows as well
- remove HAVE_GD_GD2, always valid now (2.0.33 or bundled)
- tests for imagecreatefromgd2 and gd2part
ChangeLog update
Possible fixes for #35552, #35592 and #35620.
streamline, add more phpinfo output switch parameter order for PHP_Archive::mapPhar, will be better in the long run
MFH: fix spelling and #35665
fix spelling and #35665
add package.xml
MFH: use default colors to prevent any problems with existing php.ini
use default colors to prevent any problems with existing php.ini
add new test
new test
add missing .cvsignore files
ChangeLog update
MF51: fix tests and their skip conditions
fix tests and their skip conditions
MFH
- Enforce termination to prevent possible SEGVs
- Always use the builddir!
MFH: - added missing configure help line
- added missing configure help line
MFH
more test output files
MFH: cleanup test outputs
- Cleanup test output files too
MFH:- Include timestamp for the leaks. (to make possible matching leaks with access_log entries)
- Include timestamp for the leaks. (to make possible matching leaks with access_log entries)
ChangeLog update
complete unit tests (woohoo!)
MFH: - Added missing fold tags
- Added missing fold tags
fix news
Bundle update news
MFB: Updated to libxml2 to 2.6.22, thanks to rrichards
Updated to libxml2 to 2.6.22, thanks to rrichards
slightly clearer error message
Use php5 built-in zlib. Unfortunatelly we don't export zError() there so I habe generic "compression error" will suffice.
MFH:  . Change to use sane default flags fro RecursiveDirectoryIterator  . Drop 2nd parameter from DirectoryIterator::__construct()
- Change to use sane default flags fro RecursiveDirectoryIterator - Drop 2nd parameter from DirectoryIterator::__construct()
- MFH
- MFB
- Show an error if no pdo object can be created
- MFH Revert accidential 'drop in' from 1.227
- Revert accidential 'drop in' from 1.227
fix opendir, add test for subdirectory, revert stupid addition to 018.phpt
make sure it doesn't pick up non-entries
add opendir/readdir test for root dir, fix dir stat
Remove config.m4 reference to json_c/config.h. Add package.xml.
test commit
test commit
- MFH Add method support to --rfunction
- Add method support to --rfunction
- MFH --r* switches
- Add docu
switch to php_stream_wrapper_log_error from php_error_docref (should be documented somewhere...), add test for failing stream open
fix minor leak on zlib error, new test for gzipped internal file
fix news
MFH
use right tag here
- Make -U mode play nicely with redirected tests
- Add missing global variable
- Rewrite --r* and add --rfunction
ChangeLog update
add missing tests
crc32 mismatch test
add crc checked flag, for slight speedup on multiple access to the same file
new test, better naming of tests
fix leaks, mem corruption, and add test for successful phar
fix #35617 no need to separate zvals twice
MFH: allow NULL prefix to create default namespace fix tests
allow NULL prefix to create default namespace fix tests
add constraint check for number of manifest entries, and test
MF51: fix wrong macro usage
php_stream_get_line() is a macro and it already has TSRMLS_CC
- MFH: no need to test if jpeg support exists
- no need to test if jpeg support exists
- MFB: test for compression mode in imagepng
- MFH, PNG compression support exposed
- Readd -u and -U # Removed those accidentially, the diff was obviously too big
Bug #34429 (Output buffering cannot be turned off with FastCGI)
Support for 64-bit platforms
MF51: nuke C++ comment
fix C++ comment
- MFH Section FILE does not exist for redirection tests
- Section FILE does not exist for redirection tests
ChangeLog update
update TODO
- dtd added, remove from todo
MFH: enable a few additional functions - add tests
- enable a few additional functions - add tests
- MFH Add missing newline
- Add missing newline
- Revert piece of MFH that shows an inconsistency - actually we should fix   this fread() issue.
- MFH   . Add ability to create temp files in separate dir and keep them.   . Add ability to create links in html results as table.
- MFH (Ilia's changes) - Add ability to create temp files in separate dir and keep them. - Add ability to generate html file with results as table and links to   generated files.
add new tests
new tests
MFH: improve error message
improve error message
MFH: add 1 to the max_length to keep \0 at its place
add 1 to the max_length to keep \0 at its place
MFB51: Include a legend in the gcov report
Include a legend in the gcov report (suggestion by Tony).
MFH: fix segfault in SplFileObject when file doesn't exist or cannot be read
fix segfault in SplFileObject when file doesn't exist or cannot be read
Allow the extension to be compiled as shared object on win32
- MFH Change dba/db4 to use its own locking
MFB51: Added myself to a list of extensions/sapis I try to maintain.
Added myself to a list of extensions/sapis I try to maintain.
MFB51: Final fix for gcov generation.
Final fix for gcov generation.
improve error messages to state overrun when it exists.  Also, catch overrun before we attempt to write beyond the buffer's end
new test for truncated manifest
CS // -> /* */
rework errors slightly.  Add buffer overflow check for manifest, so we don't create a memory monster by accident
add next truncation test, tweak error messages
ChangeLog update
add error if seeking fails on self, add test 1 for truncated phar
add error if __HALT_COMPILER(); is not declared and new test
test for no zlib error message
MFB51: 	fix for bug #35382 	fix for bug #35411
Improve fix for bug #35382
 - release 1.1
- release 1.1
- fix PECL bug #6283 - haval source file entries are missing in package.xml
- fix PECL bug #6283 - haval source file entries are missing in package.xml
- Readd the file in this branch
Undo accidental revert of patch for bug #34729
Unicode support
fix tests
MFH:- Made tests that require CGI skipped if it is not available
- Made tests that require CGI skipped if it is not available
MFH: fixed wrong logic
MFH: fixed error messages
A few cleanups.  I hope you don't mind Omar.
- add latest changes to package.xml
ChangeLog update
add PHP_Archive::canCompress() which determines whether zlib decompression is available clean up code slightly add lots of error notification add .cvsignore for tests/ update 002 to handle new testing behavior
MFH: fix res parameter typos - add test
- fix remaining parameter typo - add test
- copy/paste error in startDtd, we do not need the res here
MFB51: Better critical error handling (fix for previous html encoding patch).
Better critical error handling (fix for previous html encoding patch).
parameter count test
first simple test
apparently no email here
- MFH   . Support for '--' style switches   . Modularize output   . Better valgrind integration (valgrind 3.0.0+ required now) (-m)   . Ability to generate an additional html style output log (--html)   . Ability to test unicode + native tests in one go (-U)   . Show list of leaked files in summary if any   . Use basename correct
- Show list of leaked files in summary if any - Use basename correct
- Do not show leak summary if not tested
add 4 new tests remove ENV tag from the old ones
fix typo
MFH: (r-1.104)
nuke erroneous --ENV-- tag add new tests for oci_bind_array_by_name()
Block potential segfault. Context option type not checked for "user_agent","header", and "content"
MF51: use strlen() to get correct element length
use strlen() to get correct element length
MFB: Prep for PECL release
Prep for release
fix CS
add tests
reimplement php_filter_callback() as exception-safe and without memleaks
accept strings and arrays as callback name
don't try to encode empty strings
fix tests
plug multiple leaks (you need to destroy the zval before changing its type manually)
ChangeLog update
Add json extension to PECL.
MFH: Prevent header injection by limiting each header to a single line.
Prevent header injection by limiting each header to a single line.
MFH: fix docs
MFH: nuke php3 legacy
- Nuke php3 legacy
sync with HEAD
- nuke php3 legacy
fix build
MFH
- function_entry -> zend_function_entry (php3 legacy!)
- Support for '--' style switches - Modularize output - Better valgrind integration (valgrind 3.0.0+ required now) (-m) - Ability to generate an additional html style output log (--html) - Ability to test unicode + native tests in one go (-U)
MFH: nuke php3 legacy
nuke php3 legacy
MFH: nuke php3 legacy
nuke php3 legacy
MFH
MFH: nuke php3 legacy
MFH: nuke php3 legacy
nuke php3 legacy
MFH
nuke php3 legacy
- nuke php3 legacy
nuke php3 legacy (and be consistent)
nuke php3 legacy
MFH
fix build
- nuke php3 legacy
- Nuke php3_compat.h
MFH
- nuke php3 legacy
1.0.2
MFH
- Use the real name instead of the BC name here
MFH: list_entry -> zend_rsrc_list_entry
- list_entry -> zend_rsrc_list_entry
MFH: Nuke php3 legacy
- Nuke php3 legacy
MFH:- Do not use the PHP3 era names
- Do not use the PHP3 era names
MFH: fix typo
fix typo
MFH
- Do not use the PHP3 era names!
MFH
- Nuke php3 legacy
        Wrap the php_session.h include in the same ifdef as the rest of the         session code.
        Wrap the php_session.h include in the same ifdef as the rest of the         session code.
MF5.1: fix reallocation bug
MF51: more typos fixed (thanks to Mike Naberezny for noticing these)
more typos fixed (thanks to Mike Naberezny for noticing these)
fix reallocation bug
MF51: improve error messages
improve error messages
MF51: add NEWDECIMAL, NEWDATE, GEOMETRY, SET and ENUM field types
add NEWDECIMAL, NEWDATE, GEOMETRY, SET and ENUM field types
MF51: fix #35536 (mysql_field_type() doesn't handle NEWDECIMAL) add also SET, ENUM, NEWDATE and GEOMETRY to the switch
fix #35536 (mysql_field_type() doesn't handle NEWDECIMAL) add also SET, ENUM, NEWDATE and GEOMETRY to the switch
fix segfault in opendir/readdir. fix possible duplicate dirs.  is_dir() doesn't yet work, so url_stat is not working fully
ChangeLog update
switch to streams, respect safe_mode, open_basedir
MBF51: load proper header file
MFB51:Avoid gcov conflicts on non-unique filenames
Avoid gcov conflicts on non-unique filenames
kill memory leaks
add ability to detect zlib library when zlib ext is disabled
- Nuke non-working part
php3 is dead
attempt to locate zlib even if --with-zlib is disabled, so we can add library support in phar
fix branches
add license text
update header, use PHP 3.01 license
switch to package2.xml
initial import
begin import of phar extension
- Add missing .cvsignore
MFB51: Added tests for new parse_url() and http_build_query() functionality.
Added tests for new parse_url() and http_build_query() functionality.
MFH: Added 2nd optional parameter to parse_url() that allows retrieval of individual URL components. Added 3rd optional parameter to http_build_query() that allows custom param separator.
load proper header file
MFB51: Regen files so they work properly with gcov.
Regen files so they work properly with gcov.
reorder,reword
BFN
MFH: fix #35539 (typo in error message for ErrorException)
fix #35539 (typo in error message for ErrorException)
MFH: fix #35543 (php crash when calling non existing method of a class that extends PDO)
fix #35543 (php crash when calling non existing method of a class that extends PDO)
ChangeLog update
MFH: fix typos in xmlwriter/config.m4
fix typos in xmlwriter/config.m4
MFH: add declarations more uint -> size_t fixes
add declarations more uint -> size_t fixes
MF51: fix #35538 (new "hash" extensions does not compile on amd64)
fix #35538 (new "hash" extensions does not compile on amd64)
add .cvsignore
MFH: yet another compile warning
yet another compile warning
MFH: fix compile warning
fix compile warning
MF51: add adler32 test
- add adler32 test
MFH: fix ws
- fix ws
- add test to package.xml
- add test to package.xml
MFH: add crc32 test
 - add crc32 test
ChangeLog update
MFH: fix possible compile error
- fix possible compile error
MFH: fix bug #35528
fix compile failure (bug #35528)
MFH: Add MD4
MFH
fix configure --help output
MFH
fix configure --help output
Add MD4 support
MFH
Nuked dos EOLs and fixed typo
- Changed "session.use_only_cookies" to be on by default.
MFB51: Regenerate file to be more gcov friendly
Regenerate file to be more gcov friendly
- MFH Be picky about names
- Be picky about names
MFB51: fix compile warning and paths
- touch with correct re2c version and correct options
MF51: use --enable instead of --with
MFJ: use --enable instead of --with
MFH
ChangeLog update
Enable hash & xmlwriter by default
Added xmlwriter to 5.1
Added hash extension to PHP 5.1
- prepare 2.0.2
- export everything we've got aliases for
- export everything we've got aliases for
- use php_pcre aliases
- use php_pcre aliases
tweak the fix
tweak fix a bit (by request of Wez)
MFH: ext/filter will need those exports # php_compat.h still prevents linking
- ext/filter will need those exports # php_compat.h still prevents linking
BFN
MFH: fix #35508 (PDO fails when unknown fetch mode specified)
fix #35508 (PDO fails when unknown fetch mode specified)
MF51: fix Win32 compile failure
fix Win32 compile failure
two more tests
add 2 new tests now we have one extension absolutely covered by tests, yay! =)
change to PHP 3.01 license
fix news
fix compile failure on Windows - Microsoft hasn't heard of long long :)
MF51: fix #35490 (socket_sendto() unable to handle IPv6 addresses)
fix #35490 (socket_sendto() unable to handle IPv6 addresses)
MFH: fix potential problem in php_oci_bind_post_exec() when OCIDateToText() fails
fix potential problem in php_oci_bind_post_exec() when OCIDateToText() fails
announce the OCI8 upgrade in the news entry
upgrade bundled OCI8 to v.1.1
fix build - zend_reflection_api.c is no more
- Use putenv() correct
mysqli is since many months not experimental add myself as maintainer. discussed with georg.
MFH: - Use correct configure option style. Enabled by default.
- Use correct configure option style. Enabled by default.
ChangeLog update
prep for release
Add hash_hmac() and hash_hmac_file() for single shot HMAC calculations
- New environment TEST_PHP_ARGS to allow appending args to run-tests.php - New mode -q (quiet) - New mode -s <file> (save output to a file)
- White space fixes
- Added win32 build stuff
sync with docs (?)
- More cleanups. # Pierre: Check the convenient list of unnecessary defines in config.m4 # (search for FIXME :)
- Add support for valgrind testing (Nuno)
add new test
add new test improve gcov stats =)
MFH
- Make gcov targets work with debian (http://gcov.php.net)
- Reflection was moved into its own extension
- Moved reflection into its own extension
- MFH Move reflection to its own extension # As discussed with RM
- minor version is 0
BFN
add a test case fix incorrect handling of unsigned bigint. optimize handling of unsigned int
- use gdlib-config - bump to 2.0.33 for now, most stable release and closer from the phpgd   this is only about config.m4, sources cleanup will follow the additions   of various tests.
fix more leaks. handle better unknown type (4.1.x connected to 5.0.x incompatibility)
bfn
BFN
fix a crash and a leak. 4.1.15 (client) -> 5.x (server) because of the incompatibility because of decimal in the protocol binding may fail. Don't close the statement in that case because subsequent ->execute() will crash or any other function that will try to use already freed (and in debug mode thrashed) pointer. #probably more problems exist because of the 4.1.x -> 5.x protocol #incompatibility
MFH: fix possible crash in pdo_mysql_stmt_dtor()
fix possible crash in pdo_mysql_stmt_dtor()
- fix PHP4 build
*** empty log message ***
ChangeLog update
fn
MFH: - Added --enable-gcov configure option to enable C-level code coverage.
MFB51: fixed zts build
MFB: automake dependancy was removed long time ago
- automake is not needed
MFH
- Remove unnecessary libgcov entry (the gcc options handle it)
- Remove unused lines
make use of $SED if possible
MFB51: Update bundled libtool to version 1.5.20
MFB51: Always use $SED instead of sed
Added missing support for 'B' format identifier to date() function.
Added missing support for 'B' format identifier to date() function.
MF51: change "-o" to "||" to support weird systems with broken `test`
remaining part of the fix (-o -> ||)
change "-o" to "||" (fixes potential problems on weird systems where test doesn't support -o)
- Always use the right sed
cleanup + fix link problems with old mysql versions
MFB51: fixed date tests
- Update bundled libtool to 1.5.20
be very clear what you fixed
- Regenerated with working re2c and with proper options
- Regenerated with working re2c and with proper options
ChangeLog update
proto fixups
- BFN
- MFH Add class SplFileInfo as base for DirectoryIterator and SplFileObject # As discussed with ilia before 5.1.0
- BFN (reorder + missed another one)
- BFN (not to forget this one)
- BFN
- Allow test to be used w/o run-tests.php
Added PDO::pgsqlLOBCreate(), PDO::pgsqlLOBOpen() and PDO::pgsqlLOBUnlink().
MFH
fix build with libedit
mysql 4.1.x gives strange result. the result in the test is generated with 5.0.16 (valid for 5.1.3).
fix bug #35381 - ensure library is initialized before use
ChangeLog update
prep for release
API for connection dependent objects to add/del refs to dbh's.
MF51: use || instead of -o to support weird systems with old `test`
use || instead of -o to support weird systems with old `test`
update changelog here too
BFN
MFH: fix #35430 (PDO crashes on incorrect FETCH_FUNC use)
fix #35430 (PDO crashes on incorrect FETCH_FUNC use)
MF51: improve open_basedir check
Improved safe_mode/open_basedir check.
MFH: plug memory leak fix config.m4
fix config.m4
plug memory leak
Back to dev
Back from future
removed no longer relevant portion.
Adjust news
5.1.1
fix news
- BFN
BFN
- MFH Editor blocks
- MFH Synch with what we decided for 5 and what we are practicing since 5
Disabled native date class, to prevent pear::date conflict.
ChangeLog update
tokenizer fixes for bug #35382 Bug fixing news
update the todo list
going stable
going to release 1.0.1
Doh, need to canonicalize parameter names (by prefixing with :) before attempting to remap them to positional args.
Bug fixing news
No longer dev
set to 1.0 stable.
- Output modularization, 1st step
show OIC version in phpinfo(); if possible fix build with older versions: SQLT_BDOUBLE & SQLT_BFLOAT first appeared in Oracle 10
- Really test the issue here
- Bug 35382 was nit fixed but the test system was not capable for this kind   of tests
- ditch warnings
fix test
fix test
- Scew short open tags
- MFH Add new test
- Add new test
- use php_hash_* types # ok with everybody?
- BFN
MF51: add properties hashtable to Timezone class
fix Timezone class too
- Oversight
- Synch with what we decided for 5 and what we are practicing since 5
MFH: fix #35402 (New date class causes crash in get_object_vars())
fix #35402 (New date class causes crash in get_object_vars())
ChangeLog update
Typo
uhm...
- add crc32
- add adler32
5th argument of mb_encode_mimeheader() was not acceptable.
- ditch warnings - add gost and snefru test - CREDITS += mike
fix configure
- add gost algo - declare tables static
Use right define: ZEND_MODULE_API_NO as these are PHP modules, not Zend extensions
Use right define: ZEND_MODULE_API_NO as these are PHP modules, not Zend extensions
- Use right define: ZEND_MODULE_API_NO as these are PHP modules, not Zend extensions
MFH: fix #35391 (pdo_mysql::exec does not return number of affected rows)
fix #35391 (pdo_mysql::exec does not return number of affected rows)
ICC doesn't support __attribute__ for pointers
MFH: ICC doesn't support __attribute__ for pointers
- add a simple benchmark
- add snefru algo - fix empty else in config.m4
change handles destruction order (based on the patch by Chris Jones) and fix typo
Update the TODO list.
ChangeLog update
actually, bytea is not required for LOBs in postgres; good!
Addresses #35338.
PDO support for LOBs in the postgres driver currently assumes bytea columns.
Bug: when stringify fetch mode is on, and the driver returns a string instead of a stream for a LOB parameter, PDO would incorrectly return NULL for that column.
Add pdo_odbc.db2_instance_name ini setting when built against DB2. This is a convenience for setting up the DB2 environment more easily.
fix test - unsigned it is casted to 0 in mysql sql_mode
well, what do you know, it does do something.
1.0.1 release
prep for release
prep for release
CLASSTYPE is an internal flag. Closes PECL #5640.
- Synch test name
- NEWS, NEWS, NEWS
- MFH Reflection class consts (not removing globals consts in 5.1*) (by Johannes)
fix #35322 (oci_connect() after oci_close() gives unknown resource)
- fix tiger algo
- fix segvs # there's still somthing wrong though
- add tiger algo
ChangeLog update
MFH: Add an additional field $frame['object'] to the result array of debug_backtrace() that contains a reference to the respective object when the frame was called from an object.
MFH (r-1.2) Sync tests with new defaults
Sync tests with new defaults
- License for core extensions is PHP License - Add Johannes to credits for his work here
Back to dev
- add whirlpool algo
Rolling 5.1.0
Changed reflection constants to class constants
change zend_read_property() to allocate property zval too
Cleaned CGI code. Now FastCGI can not be disabled. See into sapi/cgi/CHANGES for more details.
- add salsa implementation # its not common and I've no reference output to compare against, # thus it's not enabled; I'm also pretty unsure about the initialization
- no trailing NULs
- No need for extra strlen() call here
fix leaks
MFH: fixed 5307 unexpected header can be injected to mb_send_mail().
fixed 5307 unexpected header can be injected to mb_send_mail().
fix tag
Additional fix for fix #35536
forgotten part of the fix
MF51: fix #35336 (crash on PDO::FETCH_CLASS + __set())
add test for #35336
fix build under 5.0 fix crash when XMLWriter is instantiated but not used
fix #35336 (crash on PDO::FETCH_CLASS + __set())
Bug #33732 (Wrong behavior of constants in class and interface extending)
Bug #33732 (Wrong behavior of constants in class and interface extending)
ChangeLog update
BFN
add test
add registerNodeClass() method  - methods can now natively return user classes registered with document
move document property struct from xml_common.h
implement setIDAttributeXXX functionality
No dynamic output, so no need for regex.
emalloc -> safe_emalloc
3.01 license - we technically don't need to switch the PHP sources to this one, it is more for pear/pecl, but to be consistent we probably should. Anybody want to do the sed magic to fix all the headers?
Added 5.1 upgrading notes.
MFB (r-1.6.2.1)
Widen allowable range of values for 'window' bits. Make -MAX_WBITS default (to match gzinflate() and gzdeflate())
add cvsignore
Removed {} E_STRICT pending furher discussion, may be introduced later on.
- hexlen is 2*digestlen
- install extension headers - make the hash algo registry case insensitive - "export" inline php_hash_bin2hex
Initial implementation of oci_bind_array_by_name()
- avoid segvs
ChangeLog update
- MF51: fix make install
- fix make install
/Gz and /RTC1 is for debug builds
/Gz and /RTC1 is for debug builds
test -e does not work with solaris
- fix a couple of warnings - export php_hash_fetch_ops() and php_hash_register_ops()
ChangeLog update
Add HAVAL algorithm Bit widths: 128, 160, 192, 224, 256 Passes: 3, 4, 5
MFB: Use /RTC1 instead of /GZ for MS VisualStudio 2005.
Use /RTC1 instead of /GZ for MS VisualStudio 2005.
- Do locking in lib rather then on streams
fix news
ChangeLog update
*** empty log message ***
Add hmac-md5 test file to package.xml
PHP-5.1 compatibility
fix PECL bug #5986 (connections use case sensitive hashed details)
Add streams based incremental hashing updaters
Expose registered hashing algos
MFH: fix #35293 (PDO segfaults when using persistent connections)
fix #35293 (PDO segfaults when using persistent connections)
NOTE: Things that are fixed in version released year(s) before this one really don't need any NEWS entries. People kinda expect the stuff being fixed in the future version..:)
- fix PCRE_INCDIR for external libpcre
MFH: fixed #35253 length of the encoded string vilolates a RFC.
ChangeLog update
fixed #35253 length of the encoded string vilolates a RFC.
- Disabled globals code in a way that does not affect purist or old compilers
Typo
One last 64bit change, skip all this long long malarkey when we're on 64bit procs
Macrofy 64bit integers in sha384/sha512 to make Win32 happy
Add HMAC support
Expose sha1() and sha1_file() functions when core funcs not present Not an issue yet, but could be...
Initial Commit
reorder
allow_url_include
Add allow_url_include to let people turn on allow_url_fopen without also enabling remote code execution through url wrappers
php4 -> php5
MFB51: fix build when --with-libedit is used
- Make sure --with-readline is used only when --with-libedit is not used.
- Ready 0.9.3.
back to dev
ChangeLog update
fix configure - reflection is its own extension
- Reflection was moved to its own extension
- Need to define HAVE_REFLECTION
- Reflection was moved into its own extension
- Move Reflection into its own extension
- reflection not reflectino
- Make this an extension
- Not in this branch
MFB: missing }}}
Missing }}}
RC6
fix news
MFB51: Moved date constants into the date class, they all class constants now.
Moved date constants into the date class, they all class constants now.
MFH: Resolve Apache 2 regression with sub-request handling on non-linux systems.
Hopefully resolve all the Apache 2 sub-request problems on non-linux systems.
MFH (r-1.51) #32371 php://input sometimes returns duplicate data
Bugfix #32371 php://input sometimes returns duplicate data
MFH: make GCC happy and suppress the warning
make GCC happy and suppress the warning
MFB51: fixed test
MFH: fix #35079 (stream_set_blocking(true) toggles, not enables blocking) patch by askalski at gmail dot com
fix #35079 (stream_set_blocking(true) toggles, not enables blocking) patch by askalski at gmail dot com
MFH: Renamed config.m4 to config0.m4 # PCRE configure tests must be run before e.g. ext/filter
- Renamed config.m4 to config0.m4 # PCRE configure tests must be run before e.g. ext/filter
MFH
fix typo
- Moved the files from resource to one level down. # This makes the gcov thing actually work :)
Removed support for continue and break operators with non-constant operands
ChangeLog update
- Filters may behave differently with empty string so pass it on
- Add simple test for filter_data() basic filters
MFB51: Allow zend_parse_parameters to handle non-well formed integers, but raise E_NOTICE in the process.
Allow zend_parse_parameters to handle non-well formed integers, but raise E_NOTICE in the process.
MFH
{} to [] test fixes
- Missing .cvsignore
back to dev
Updated tests to use [] instead of {}
By popular demand the {} message is now an E_STRICT.
Added depreciation notice for {} string offset access.
5.1.0RC5
ChangeLog update
Closes PECL #5944; binding an invalid parameter can lead to segfaults. Modified patch provided by curt@php.net.
- MFH Add new test
- Add new test
extend the entry a bit :)
bfp
remove old news
Allow "null" default value for arguments with array type hint Unicode support
Allow "null" default value for arguments with array type hint
- Allow "= null" default for parameters with a class type-hint.
- switch to bsd license - prepare 2.0.1
Allow recursive calls to __get/__set for different properties
Allow recursive calls to __get/__set for different properties
Allow recursive calls to __get/__set for different properties
Allow recursive calls to __get/__set for different properties
MFH: call zend_objects_destroy_object() explicitly fix segfault when intern->time is NULL
call zend_objects_destroy_object() explicitly fix segfault when intern->time is NULL
fix warning
Allow recursive calls to __get/__set for different properties
- Prepare for including in PHP core
ChangeLog update
MFB: Change max_procs from 25 to library default. This will make FreeTDS connections work a bit better
Change max_procs from 25 to library default. This will make FreeTDS connections work a bit better
MFH: fix #35197 (Destructor is not called) and similar issues in other extensions
MFH: fix #35197 (Destructor is not called) and similar issues in other extensions
fix #35197 (Destructor is not called) and similar issues in other extensions
ChangeLog update
PEAR news
Slated for PHP 6
ChangeLog update
Grr. Re-re-fix the fix.
ChangeLog update
Re-fix Marcus's fix.
- Use the const instead of hard coding
ChangeLog update
- Added note about --enable-gcov being strictly for developers only!
fix configure help
ChangeLog update
ChangeLog update
Cleanup the code coverage files
- Change paths to be relative # # Derick, don't forget to move the .re file into this same directory! # # This was the 2nd last piece of making the code-coverage thing to work # properly with VPATH builds. Once Derick moves the parse_date.re # in the same directory where the generated file lives, it's done. # # Just copying it by hand in your sources in the meantime and doing # "./configure --enable-gcov && make lcov" will produce data in lcov_html/ #
- Moved gen_php_cov functionality into the Makefile. Doing 'make lcov'   will run the test suite and create the code coverage HTML files. # no need for some hairy checks whether PHP has the support # since the lcov target will not exist if it doesn't :)
nuke #line directives.
MFH
More files to have #line directives stripped for release
FBFN
MFH
- Make sure parse_date.c is free of #line directives in releases
NEWS updated.
test fetching of unsigned int(11)
BFN
fix test - putting signed into unsigned produces 0, if not in strict mode (in strict mode this will fail)
on 32bit platform if the column is UNSIGNED INT(11) and the value is greater than 2^31-1 then convert to string. on 64bit this is of no problem because there long inside zval is big enough to keep unsigned int(11)
- Use the source file as output filename instead of stdout
- use the target file name as output file instead of stdout
ChangeLog update
- Make sure the generated files have relative paths in the #line directives
- MFH heredoc handling in -a mode
- heredoc handling in -a mode
- Add new tests
- Drop unnecessary param
- MFH Bug #32223 weird behaviour of pg_last_notice
ChangeLog update
- Do the LTP thing properly
MFH
- Revert bad patch. This is wrong way to handle leak in "php -m"
- MFB Add tests
- Remve bogus part of test
- MFH: E_STRICT is not part of E_ALL, so the lines were wrong here.
- E_STRICT is not part of E_ALL, so the lines were wrong here.
ChangeLog update
MFB - This isn't a DOM thing anymore, just libxml
And simplexml doesn't need dom anymore to do the import
MFB - We don't need the simplexml requirement here anymore
This SimpleXML requirement is no longer needed and by removing it we remove a circular dep where it was impossible to build simplexml shared and not load it.
ChangeLog update
MFH: fixed garbled multibyte characters.
fixed garbled multibyte characters.
ChangeLog update
- MFH Add missing check flag
- Add missing check flag
- MFH Try fixing #35088
- Tray fixing #35088
- MFH Add missing check
- Add missing check
- MFB44: #34851 (SO_RECVTIMEO and SO_SNDTIMEO socket options expect integer   parameter on Windows)
- MFB44: #34851 (SO_RECVTIMEO and SO_SNDTIMEO socket options expect integer   parameter on Windows)
ChangeLog update
- Add missing test
- Make spl_autoload_register use zend_is_callable_ex()
- Add missing cases and checks
- sapi_header_op(SAPI_HEADER_(REPLACE|ADD), {NULL, 0, 0}) caused HTTP response splitting - sapi_send_headers() already takes care of default_content_type (left over of fix for bug #29983)
- sapi_header_op(SAPI_HEADER_(REPLACE|ADD), {NULL, 0, 0}) caused HTTP response splitting - sapi_send_headers() already takes care of default_content_type (left over of fix for bug #29983)
ChangeLog update
optimize sxe_add_registered_namespaces add only first encountered prefixes to namespace arrays update test
MFB: fixed test
- Update docu
- Update docu
- MFH the iterator base interface is Traversable not IteratorAggregate
- The iterator base interface is Traversable not IteratorAggregate
- Get rid of several wanrings
MFH: - Added missing safe-mode checks # Added by replacing the existing open_basedir checks with a macro # Also, the filename passed might be null, etc. so it's not very good # idea to pass to php_error_docref() (catch by Ilia)
*** empty log message ***
- Allow to recive derived SplFileInfo/SplFileObject instances
- Allow parameter parsing implementation raise an error early where more   information is available. And add ability to prevent double errors by   returning "". - Implement parameter parsing C which checks for a class name, if the value   on input is not NULL then the pointer must be the zend_class_entry of the   required base class. # Do the KISS approach, looking at the code it isn't that easy does it?
MFB51: nuke typo
nuke typo
MFH: Hiding bugs is not purpose of the regression tests.
- Hiding bugs is not the purpose of the regression tests.
Add an additional field $frame['object'] to the result array of debug_backtrace() that contains a reference to the respective object when the frame was called from an object. This revised patch has been reviewed by Dmitry and Zeev.
update ready for release spree today
- Test no namespace case, too
- Handle default namespaces # Another time it shows xml is far from being simple
- WS: Make function detection work in my editor
MFH: Allow bison 2.1.
Allow bison 2.1.
Revert.
ChangeLog update
prep for PECL release
Closes PECL Bug #5633. Build tested with 5.0.x as PECL, 5.1 as PECL and 5.1 static
prep for PECL release
prep for pecl release
prep for PECL release
hrmm, typo fix.
prep for PECL release
Prep for PECL release
MFB51: Additional open_basedir/safe_mode checks.
Additional open_basedir/safe_mode checks.
- Drop unnecessary exports to prevent forward BC problems
- Make SimpleXMLIterator implement Countable
- Implement count interface
check node type before accessing ns - prevent corruption under compact mode
- We don't need those
- Add functions to check for registered/in use namespaces
ChangeLog update
fix misinterpretation of data when overriding types via bindColumn. Very slightly modified patch from Marcus.
Closes PECL Bug #5722; BLOB support was half-baked.
improve test portability. improve infrastructure for LOB support.
bfn
- Bugfix #35028 XML object fails FALSE test
MFB51: Improve iconv skip conditions
Improve iconv skip conditions
- MFH Add docu
- Add docu
Simplify code.
- Add new test
ChangeLog update
ChangeLog update
- Protect against some edge case that is currently imossible, but will be
- Simplify & speedup, once more
- Simplify & speedup
- Use var_dump() and fix test expectations
dos to unix line endings
- Add new example
- Attribues don't have children
- Add new example
- Change var_dump to include all that is reachable, incl. @attributes - Adapt tests and add new one
- It's better to use our own strtol here
- Increase buffer for 64 bit systems
- Add AppendIterator::getIteratorIndex - Add AppendIterator::getArrayIterator
- Add class SplTempFileObject
- Allow to specify ma memory usage for temp stream
- Register temp and memory stream here
ChangeLog update
Closes PECL Bug #5772; FETCH_FUNC broken for mixed case function names
Closes PECL #5809; PDOStatement::execute(array(...)) would modify its args. It should behave like bindValue() not bindParam().
clean up the test2 table that some tests create
Closes PECL Bug #5802
Close PECL Bug #5780
argh! we don't want to NULL the stmt here; freeing the results is not the same as destroying the prepared statement handler, so we're leaking and breaking, as can be seen by running the test suite.
Closes PECL Bug #5645; emits mysql client library version in MINFO output.
Add an additional field $frame['object'] to the result array of debug_backtrace() that contains a reference to the respective object when the frame was called from an object. Patch has been reviewed by Andi, Zeev, and Marcus. I will coordinate with Ilia on merging it to the PHP_5_1 branch after PHP 5.1.0 has been released.
Make sure haystack_len is initialized before it's used
Adding missing function declarations to fix win32 build
Back to dev
MFH: quick fix for #35003 (Warning: PDOStatement::fetch(): column 0 data was too large for buffer and was)
fix #35003 (Warning: PDOStatement::fetch(): column 0 data was too large for buffer and was) this is just a quick fix, the real one will follow after the weekend from Wez
5.1.0RC4
fix TSRM build
Unicode support
NetWare LibC sdk has stdarg.h --Kamesh
$id:$ tatgs are removed from generated files to avoid committing of Zend/zend_vm_opcodes.h without real changes.
$id:$ tatgs are removed from generated files to avoid committing of Zend/zend_vm_opcodes.h without real changes.
ChangeLog update
MFH: fix crash setting attr from foreign doc (throws exception) add test
fix crash setting attr from foreign doc (throws exception) add test
MFH: commit forgotten part
forgot to commit new pdo_attr_ function
MFH: add MySQL options and corresponding constants
add MySQL options and corresponding constants
MFH: free && set to NULL S->stmt
- free S->stmt - return correct value from the cursor_closer - make sure S->stmt is NULL'ed
One check is enough.
- MFB #34980, divisor and offset never passed correctly (s/float/double/)
Tests for calendar extension
- Update package files.
ChangeLog update
fixes PECL Bug #5589
Add test for PDO::ATTR_CASE.
Test PDO::ATTR_CASE attribute.
MFH: make compilers happy
make compilers happy
MFH: fix #34996 (ImageTrueColorToPalette() crashes when ncolors is zero)
fix #34996 (ImageTrueColorToPalette() crashes when ncolors is zero)
Unicode related patchset fixes two problems: - wrong offset counting and .. - OCI_NEED_DATA error when reading unicode CLOBs (fixes PECL bug #5719)
MFB51: Additional tweaks to the patch for bug #34249.
Additional tweaks to the patch for bug #34249.
- Make it compile when inside the PHP source tree.
- Allow settable default flags for the filters.
MFH: fix #34977 (Compile failure on MacOSX due to use of varargs.h)
fix #34977 (Compile failure on MacOSX due to use of varargs.h)
- Update package.xml files.
- Implemented this like the comment says, otherwise it will ofcourse modify   both instances of this variable name...
MFH
Correct non-standard SQL. Standard SQL would define "DEFAULT NULL" -- but that is the default value if the DEFAULT clause is omitted anyways.
- More ZTS fixes.
Correct non-standard SQL. Standard SQL would define "DEFAULT NULL" -- but that is the default value if the DEFAULT clause is omitted anyways.
ChangeLog update
- MFH zend_is_callable_ex() has been changed
- MFH zend_is_callable_ex() returns zend_class_entry* if available
- Make the code a bit clearer
- fix #34980, divisor and offset never passed correctly (s/float/double/)
- api was changed, also we are here in api 3.*, not 2 anymore
- zend_is_callable_ex() was changed
- Make zend_is_callable_ex() return the class netry if available
fix bug #34965 tidy is not binary safe
fix bug #34965 tidy is not binary safe
use correct enum type for the arg
use correct enum type for the arg
- fix the fix
- fix the fix
- add test case too
- MFH: fix bug #34821 zlib encoders fail on widely varying binary data on windows
- fix bug #34821 zlib encoders fail on widely varying binary data on windows
MFH: apply workaround for the leak only when GLIBC is used
apply workaround for the leak only when GLIBC is used
fix the order
- MFH: thread safe SSL crypto locks, fixes bug #33760
- thread safe SSL crypto locks, fixes bug #33760
MFB51: Do not run tests if iconv extension is unavailable.
Do not run tests if iconv extension is unavailable.
MFH: fix problem with garbage appearing in hostnames
fix problem with garbage appearing in hostnames
ChangeLog update
MFH
fix build
MFH: fix #34970 (ldap configuration issues)
fix #34970 (ldap configuration issues)
- strip_tags(), str[c]spn(), strpbrk(), strrchr(), strrpos(), strtok()
- Unicode impl of strrchr()
Unicode support (bug #31341)
Reverted fix for bug #34934. The bug marked as bogus.
Reverted patch for bug #34934. Bug is marked as bogus.
ChangeLog update
- Add new test
MFH: fix #34938 (dns_get_record() doesn't resolve long hostnames and leaks)
fix #34938 (dns_get_record() doesn't resolve long hostnames and leaks)
ChangeLog update
Closes PECL Bug #5750; uri: dsn is not handled correctly. Patch from curt@php.net
keep the order! :)
merge VCWD_ACCESS bugfix to head. Test suite is unusable in HEAD, so I guess it works here too.
- php_u_stristr: Remove leading back-slash ... sheesh
- php_u_stristr: s/codepts/codepoints/ - make Jani happy
- Unicode impl of strpbrk()
- php_u_stristr: Code comments
ChangeLog update
- Do not include because of implementing an interface if parent implements   the interface already
fix ws
fix ws
MFH: fix possible crash in dns_get_record() cleanup code a bit (partly fixes #34938)
fix possible crash in dns_get_record() cleanup code a bit (partly fixes #34938)
ChangeLog update
Proper news
- Unicode impl of stristr()
MFH: use proper constants
use proper constants
MFH: use constants instead of their values
use constants instead of their values
MFH: fix copy/paste typo
copy/paste typo
Removed unnecesary local variable
Removed unnecesary local variable
Added forgotten tests
Added forgotten tests
ChangeLog update
remove unused obsolete files from pear CVS
Implementing C-level Code coverage (--enable-gcov).
- Unicode impl of str[c]spn()
MFH: Change E_ERROR to E_WARNING when more_entropy flag is off on Cygwin.
Change E_ERROR to E_WARNING when more_entropy flag is off on Cygwin.
fix news entry
remove undef HAVE_OCI_STMT_PREPARE2
- MFH: Improved error messages a bit.
- Improve error messages a bit.
ChangeLog update
MFH: initialize SG(request_info).auth_digest
initialize SG(request_info).auth_digest to NULL and prevent segfaults
MFH: Do not set authorizer unless safe_mode or open_basedir are being used.
Do not set authorizer unless safe_mode or open_basedir are being used.
unused var
nuke unused var and silence warnings
MFH: use php_error_docref() instead of php_error() everywhere
use php_error_docref() instead of php_error() everywhere
typo
- Allow mime_content_type() to work with even a slightly broken mime magic   file.
MFH: fix mime_magic problems with ZTS
fix mime_magic problems with ZTS
MFH: fix bug #34902 (mysqli::character_set_name() - undefined method)
fix bug #34902 (mysqli::character_set_name() - undefined method)
ChangeLog update
Apply patch for #34900, sight unseen.
Apply patch for #34900, sight unseen.
ZTS fixes
ZTS test fix
Back to dev
5.1.0RC3
MFH: only need context set once
- Unicode impl of stripos()
only need context set once
- Unicode impl of strrpos()
MFH: Properly fixed bug #34456 (original patch completely reverted).
Properly fixed bug #34456 (original patch completely reverted).
- Make sure that typehints for classes can only accept "= NULL" as default   value.
ChangeLog update
MFH: Further URL validations in safe_mode/open_basedir configs.
Further URL validations in safe_mode/open_basedir configs.
MFH
- Silence unnecessary output
NEWS file is about changes between releases. (RCs are not releases..)
- Add ability to access private properties of base classes - Add ability to specify fully qualified name for properties - ReflectionClass::getInterfaces89 now returns associative array
ChangeLog update
- MF51: Updated timezone database to version 2005.14.
- Updated timezone database to version 2005.14.
- Changed type hints so that they take "= NULL" as default value.
fixed an error in mysqli_fetch_fields (function returns NULL instead of array when row_number > num_fields). Thanks to Marc Deslisle and phpMyAdmin team for the report.
ChangeLog update
MFH: add test for bug #34873
add test for bug #34873
MFB51: ZTS fix
Pear installer fix
ZTS fix
Back to dev
- Use the non-zlib version of the PHAR.
Prepare for 5.1RC2
ChangeLog update
MFH: fix test failures
MFH: move constants to class
move constants to class
MFH: insure stream usage
MFH: bump libxml min version to 2.6.11
insure stream usage
bump libxml min version to 2.6.11
- MFH SPL example was changed, so change PDO test accordingly
- MFH Add ability to bypass key() surrounding and make that default
- SPL example was changed, so change PDO test accordingly
- Add ability to bypass key() surrounding and make that default
MFH
proper quoting, breaking, etc.
- MFB Do not try to autoload the class, use internal only
- Do not try to autoload the class, use internal only
MFH: fix #34856 (configure fails to detect libiconv's type)
correct it one more time (grrr)
correct the fix
fix #34856 (configure fails to detect libiconv's type)
MFH: fix #34855 (ibase_service_attach() segfault on AMD64)
fix #34855 (ibase_service_attach() segfault on AMD64)
reorder
ws fix
ChangeLog update
- Use pcre_cache_entry* rather than pcre* directly for refcounting # This prevents a theoretical crash when using too many regexes
- Drop one cache related function which is not really neccessary
- Add/expose function to compile and access pcre_cache_entry structs
MF51: fix bug #34581 (crash with mod_rewrite)
fix bug #34581 (crash with mod_rewrite)
missing entry
- MFH: Apperently you can't store NULL pointer values into Zend hashes - god   know why not - so we won't store those in the cache anymore.
- Apperently you can't store NULL pointer values into Zend hashes - god know   why not - so we won't store those in the cache anymore.
fix compile warnings again
fix compile warnings (again)
MF51: make GCC happy and improve CS a bit
make GCC happy and improve CS a bit
MFH: nuke unused vars
nuke unused vars
MFH: use spprintf where appropriate
use spprintf where appropriate
MF51: fix TS build
fix TS build
Unicode support
Unicode support
ChangeLog update
BFN
MFH: removed confusing dot.
- Removed confusing dot.
fix test
fix test
MF51: fix #34757 (iconv_substr() gives "Unknown error" when offset > string length)
fix #34757 (iconv_substr() gives "Unknown error" when offset > string length)
ChangeLog update
- Provide const RegExIterator::USE_KEY and actually use it in the test
- Add (Recursive)RegExIterator
- Register new class
- Finalize work on SplFileInfo and derived for now (add missing get*Info()) - Update docu
MF51: use proper macros and vars instead of strlen()
MF51: fix #34818
use proper macros and vars instead of strlen()
fix #34818 (new mysqli_stmt() and several others crash if the first parameter is not a valid mysqli_link)
- MFH: Make sure the tzcache' dtor doesn't cleanup cached misses in the lookup   tables.
- Make sure the tzcache' dtor doesn't cleanup cached misses in the lookup   tables.
remove potentially bogus test
Test seems potentially bogus.
bug fixing news
MF51: fix #34810 (mysqli::init() and others use wrong $this pointer without checks)
BFN
fix #34810 (mysqli::init() and others use wrong $this pointer without checks)
MFH
MFH
update changelog
BFN
MF44: fix #33383 (crash when retrieving empty LOBs)
MFH: copypastetypofix
fix #33383 (crash when retrieving empty BLOBs)
MFH
MFH: fix test
fix test
extra spaces removed
ChangeLog update
MFH: PHP_CONFIG_FILE_PATH needs to use strlen() due to Win build
PHP_CONFIG_FILE_PATH needs to use strlen() due to Win build
MFB
typofix
BFN
MFB
- Add 'overwrites' info to method dump # Right now we have to compute that information because it is not available
add charsetnr and length to the object returned. this is kind of bug because fetch_fields() and fetch_field() return that info and fetch_field_direct() does not
- Apply workaround for test until someone fixes the issue (which is unrelated to pg_*())
- MFH Make test check for PlPgSQL before using it
- Make test check for PlPgSQL before using it
- MFH Add new test
- Add new test
- MFH Bugfix #34704 (Infinite recursion due to corrupt JPEG)
Bugfix #34704 (Infinite recursion due to corrupt JPEG) (Tim Starling)
-fix build as shared or separate from main build (bfrance)
added Bugfix for #34785
ChangeLog update
- Add ReflectionMethod::getPrototype() - Add some usefull information to the method dump   . From where it was inherited   . The prototype
- add compression mode argument to imagepng   (MFH to 5.1?)
- Update docu - Synch class consts with HEAD - Synch example RecursiveTreeIterator (as far as possible)
- Add new example directorytree_size.php - Improve SplFileInfo:   . add function getFilename()   . add function getPath() -Improve RecursiveTreeIterator   . add const BYPASS_CURRENT to bypass current instead of getting its     string representation   . make key() return the parent key() which calls inner iterators key() - Improve RecursiveDirectoryIterator   . add consts CURRENT_AS_FILEINFO, KEY_AS_FILENAME, NEW_CURRENT_AND_KEY   . make current() return getFilename() or getFileInfo() depending on flags   . make key()     return getPathname() or getFilename() depending on flags - Improve DirectoryIterator   . make __construct() accept flags as second parameter - Update docu
- Add new class SplFileInfo   . Make DirectoryIterator inherit it   . Make SplFileObject inherit it
fix for bug 34785:   added support for parent::__construct (mysqli_statement and mysqli_resultset)   fixed failed testcases when sql_mode is in effect
ChangeLog update
- MFH Add new test
- Add new test
- Prevent notices from showing up if inner's current() does not return a string
- MFH: Make the Windows guessing routines actually return the guessed timezone.
- Make the Windows guessing routines actually return the guessed timezone.
- BFN
Test simple derivation via restriction
Test simple derivation from restriction.
- MFH: Change parameter name because NetWare expands "tzname" as a macro to   something else.
- Change parameter name because NetWare expands "tzname" as a macro to   something else.
maintain BC for PECL
Reverted last George patches
Reverted last George patches
- MFH: New timezonemap data.
- Synced timezonemap with latest data.
- MFH  C vs. C++ fix
- C vs. C++ fix # I do too much C++ and too much languages anyway, right now actively: # C, C++, Java, PHP, Peral
maybe this month..
ChangeLog update
Permit correct usage of inherited encoders (from restriction/extension "base" directives) for xml response decoding.
Permit correct usage of inherited encoders (from restriction/extension "base" directives) for xml response decoding.
- MFH ReflectionClass::isInstantiable and abstract classes
MFH: support complex types in restrictions and extensions
support complex types in restrictions and extensions
BFN
MFH: Added missing safe_mode checks.
Added missing safe_mode checks.
- Use run-tests.ph -u rather then defining the ini settings one by one
- Show whether we execute unicode or native tests
- MFB dynamic lookup of PDOException base
- BC: php objects convert to int/double 1 with notice
- Show the test finishes/dos2unix
MFH: use sizeof instead of define
use sizeof instead of define
- Any php object converts to boolean as true
- Add new test
- Add new test
- Add new test
- MFH (faillog, streams, counting, .......)
- WS
Cleanup
ChangeLog update
- MFB use new functions
MFH: fix buffer lengths passed to snprintf
fix buffer lengths passed to snprintf
nuke unused variable
use the right constant name in error messages
- Synch RecursiveIteratorIterator, fixes a few memory corruptions/memleaks
- MFB Missing constants
fix fwrite() and fgets() in unicode mode
these should have remained ints
- speed and memory usage optimizations - implement readInnerXml, readOuterXml and readString: requires libxml 2.6.20 - add encoding and options paramters to open and XML methods    options from libxml extension may be passed    i.e. LIBXML_XINCLUDE to perform xinclude during read
- Update cast_object handlers
- MFH Update examples
- Update example
- Have __toString() be called if available in all places an object is used   as a string. # # Note that "Object #<id>" is no longer afallback for debugging purpose use # var_dump, which was made for debugging. If you used this to grab the id # of an object you can never rely on this. For object storage look at SPL's # ObjectStorage class. # # Note the signature change in the cast handler: # # int (*cast_t)(zval *readobj, zval *writeobj, int type, int should_free TSRMLS_DC); # int (*cast_t)(zval *readobj, zval *retval, int type TSRMLS_DC);
- MF51: Windows Timezone guessing code
fix bugs #34743 & #34118 (fseek/fread unicode related problems in HEAD) patch by Alex
MFH: fix ZTS build
fix ZTS build
MFH: Missing safe_mode/open_basedir checks for file uploads.
Missing safe_mode/open_basedir checks for file uploads.
- Committing some changes that make PDO+SPL not crash anymore. These are done by Marcus. and I'm committing them in order to actually use PHP 5.1 without segfaulting when apache starts. This is not necessary the best solution.
- Update package files.
- strip_tags(): some fixes, still AWiP
- Remove README, everything is implemented now.
- Implement correct Windows timezone guessing.
MFH: fix test
fix test
- Implemented tzcache - Attempt at Windows detection code
ChangeLog update
MFH: fix #34723 (array_count_values() strips leading zeroes)
fix #34723 (array_count_values() strips leading zeroes)
fix #34731, patch by novicky at aarongroup dot cz
- Add a function that returns whether a specific input variable exists or not.
MFB5.1: fix #32179 (xmlrpc_encode() segfaults with recursive references)
fix #32179 (xmlrpc_encode() segfaults with recursive references)
Unicode support
- MFB Add optional deps for SPL
- Add optional dep for SPL under windows too
- Add optional dependency to SPL
ChangeLog update
MFH: nuke warning
nuke warning
MFB5.1: include the header, eliminate warning
include php_version_compare() declaration and eliminate warning
free cls_methods correctly and fix segfault on shutdown (no bug entry and MFB, though..)
MFH
Generated files are included like this..
Add include path to the timelib headers
- In a conditional statement "a ? b ? c", a and b MUST have the same type # We should make this an inline function to prevent unnecessary calls to # get classentry or requir that class_entry must return a valid class_entry # which we do iirc anyway.
- Add easy way to test in unicode mode
- MFH Throw an exception if an illegal string value is being used in   ArrayObject::offsetSet()
- Throw an exception if an illegal string value is being used in ArrayObject::offsetSet()
- Unicode impl of strip_tags()
- MFH Really allow SXE being shared by not using anything from it directly in SPL
- Really allow SXE being shared by not using anything from it directly in SPL
- Synch (to decrease number of diffs)
- MFH change require to require_once
- Add missing test from base - Change require to require_once (found by kevin)
MFH: GLOBALS protection for extract() function.
GLOBALS protection for extract() function.
- MFH Update example
- Add more sorting funcs to ArrayObject/Iterator
- Make prefixing more generic
update changelog
fix PECL bug #5571 (oci_new_connect() not closed by oci_close())
- Add sorting to ArrayObject/Iterator
- MFH Allow uncached global functions
- Allow uncached global functions too
- Add propper casting
fix BLOAT news
- Add --rclass and --rextension arguments to CLI
- MFH: Only use external database when it is newer than the builtin one.
- Only load external database when it is newer.
- MFH: Allow an external Timezone Database to be used.
- Allow an external Timezone Database to be used.
- Update
- Allow to use currnet() and key() in __toString()
- Make reflection class pointers available for others
MFH (Bug #34643 wsdl default value)
MFH (Bug #34643 wsdl default value)
- Rewrite flags as hex values
levenshtein(), similar_text()
- Unicode impl of similar_text()
ChangeLog update
fix type
- MFH add new example
- Add new example
- MFH PDOException base
- Simplify SPL checks for PDOException base
- Add PDO::setAttribute(PDO::ATTR_STATEMENT_CLASS)
- Allow to check for default statment class
- Add ability to change default statement class for PDO::execute()/query()
- remove gdttf
- ft1 support remove, #2, gdttf.*
- drop freetype1 support
- MFH Add new example
- Add new example
- MF51: timelib_config.h should stay too.
- timelib_config.h should stay too.
- MF51: removed parse_date.c from .cvsignore file.
- parse_date.c should not be here, as "make clean" removes it then.
ChangeLog update
*** empty log message ***
use the right macro for these
set error_reporting to E_ALL in Makefile.frag
- MFB spl/simplexml integration (when sxe is shared)
- SPL may extend SimpleXML (if present)
- Allow xpl/simplexml integration with simplexml being built shared
- MF51: Implemented better timezone guessing algorithm.
- Implemented better timezone guessing algorithm.
ChangeLog update
Allow compilation with PHP 5.0.x Closes PECL #5514
fix bfn
- entry for #33125
- MFB: #33125, alpha emulation broken
- #33125, imagecopymergegray produces mosaic rainbow effect   at some point the alpha emulation formula has been broken   restored.
- Try to fetch the necessary file via wget
- substr_replace(): call correct funcn for string conversion
reorder,reword,merge
- Unicode impl of levenshtein()
ChangeLog update
- TSRM fix
Removed unnecessary component that accidentally snuck-in
- Unicode impl of strtok()
- Updated addslashes(): add codepoints directly rather than with zend_codepoint_to_uchar()
ChangeLog update
add dsp file
Update php4 build file, compile against istantclient
- Updated substr_replace() to use:   - zend_get_unified_string_type()/convert_to_explicit_type() for type conversion   - u_countChar32() for counting codepoints
{add,strip}slashes()
- Unicode impl of {add,strip}slashes()
- Implemented input_filters_list() function to return all supported filters.
- Add missing .cvsignore
ChangeLog update
ChangeLog update
strrev() walkthrough
Unicode fixes.
MFH
- Need to rename in expectations, too
- Rename test to be consistent
- Add new tests
- BFN
- BFN
Changed __toString() behavior to call it in all necessary places
ChangeLog update
Allow substr_compare() to take a negative offset to facilitate start of the comparison from the end of string.
ensure that this size is initialized correctly
Touch generated file
MFH: upgraded bundled libsqlite3 to version 3.2.7
Touch generated file
Update bundled libsqlite3 to version 3.2.7
- Implemented callback filter.
- MFH: Reset global pointer to NULL after mem free (required for apache 1.3)
- Reset global pointer to NULL after mem free (required for apache 1.3)
the last 64bit fix
Bug fixing news
- Implement validate_ip filter for IPv4.
Unicode support
- Implemented validate_url filter.
ChangeLog update
2nd part of previous fix
more 64-bit fixes
fix 64bit issues caused by wrong "long" usage
fix arguments-by-ref with 5.x (problem appeared after the last 4.x compat patch) make sure username_len is always initialized
- Make code more readable, fix issue with parameter parsing introduced with   unicode update
- Try to fix bugs #34216 (Segfault with autoload) and #34584 (Segfault with   SPL autoload handler)
Bug fixing news
- Implement RecursiveIteratorIterator::setMaxDepth()/getMaxDepth()
ChangeLog update
reinstate this fix for building against PHP 5.0.x. This works fine against PHP 5.1 too; if you revert this, you'd better have an awesome technical reason, or I'll remove your karma.
refs #34630. Real lob support for oracle will appear after the PHP 5.1 release.
- MFH: Rename here too
- Rename here too
Revert the "fix". It works fine when you use PHP_5_1
fix typo
fix typo
- MFH: Serializeable was renamed to Serializable long ago
- Serializeable was renamed to Serializable long ago
99% certain that this fixes PECL #5366 and PECL #5391.
Refs #34630
a test for bug #34630
Refs #34630
Documentation belongs elsewhere
MFB: Allow php extensions to use php_escape_shell_cmd() and php_escape_shell_arg(), needed for mbstring
Allow php extensions to use php_escape_shell_cmd() and php_escape_shell_arg(), needed for mbstring
MFB: Build PDO and SQLite as shared
Build PDO and SQLite as shared
- MFH #33220, infinite loop while loading invalid GIF (nlopees)
- #33220, fix infinite loop while loading invalid gif, this patch fixes   at least many cases (nlopess)
MFB: sqlite3.h is a generated file
sqlite3.h is a generated file
MFB: Declare functions used by driver as PDO_API in php_pdo_driver.h
Declare functions used by driver as PDO_API in php_pdo_driver.h
ChangeLog update
- Implemented filter_int, filter_float and filter_bool.
- Remove unused variable
- WS
- WS fix
substr() sample case
MFH: fix test
fix test
fix tests to work with HEAD and its new E_* values
NetWare LibC don't have socketpair function. So enabling socket_create_pair functionality only if socketpair is available in the host LibC. --Kamesh
ws fix
MFH
remove double EXPECT tag
add new tests
add new tests
MF5.1: - store current value of error_reporting only if it's not stored yet - reset old_error_reporting to NULL only it points to the tmp_var at current opline
- store current value of error_reporting only if it's not stored yet - reset old_error_reporting to NULL only it points to the tmp_var at current opline
In NetWare two binaries with the same name can not be loaded in kernel address space(This is the default behaviour for NetWare apache webserver and hence PHP extensions also get loaded in kernel address space) simultaneoulsy. As the current autoconf built mysql extension is built as mysql.nlm this forbids the loading of mysql client binary. To work around this NetWare idiosyncrasy prefixing all the extensions with "php" except php5lib(phpts.dll eqivalent of Windows). I could have named this extensions prefixed with "php_" but "_" is eaten from the exported symbol prefix by the GCC cross compiler for NetWare so sticking to "php". This fixes the issue of not needing "PHP_SUBST(EXTENSIONNAME_SHARED_LIBADD)" in all the extensions especially when they need to be built shared.
MFH: Improved the fix for #21306 a bit
- Improved the fix for #21306 a bit
MFH
MFH
ChangeLog update
MFH: fix #32081 (mysqli_real_connect(): mysqli.default_socket in php.ini has no effect) for real
fix #32081 (mysqli_real_connect(): mysqli.default_socket in php.ini has no effect) for real
bump API number
bump API number
BFN
MFH: fix #33771 (error_reporting falls to 0 when @ was used inside try/catch block)
fix #33771 (error_reporting falls to 0 when @ was used inside try/catch block)
.. and the fix
fix Win32 builds for PHP_4_4 (patch by Edin)
- Changed variable handling code so that filter flags work for the unsafe_raw   filter. - Added better support for \0 characters. - Added utility function to HTML encode low/high characters. - Added support for encode low/high flags to the string and special_chars   filter. - Added support for strip and encoding flags to the unsafe_raw filter.
prepare to release 1.1.1
- Removed ALLOW_SIGN filter flag, as this will always be allowed. - Added ALLOW_SCIENTIFIC flag for the FS_NUMBER_FLOAT filter. - Implemented string, encoded, special_chars, unsafe_raw, email, url,   number_int, number_float and magic_quotes filters.
ChangeLog update
- BFN
- MFB
- Add ability to execute .php generated from .phpt on failure without the   need to manually set the environment.
Allow fopen() make HTTPS requests throug HTTP proxies
Allow fopen() make HTTPS requests throug HTTP proxies
MFB: fixed compiler warnings
fixed compiler warnings
- MFH: Moved the FREE_OP to after the execution of the included file, or eval   statement so that it is safe to access this information in the overridden   zend_execute() function, which is what Xdebug does.
- Moved the FREE_OP to after the execution of the included file, or eval   statement so that it is safe to access this information in the overridden   zend_execute() function, which is what Xdebug does.
ChangeLog update
- MFH: Remove HTML fragments from phpcredits() in CLI mode
- Remove HTML fragments from phpcredits() in CLI mode
BFN
MFH: Allow overloading of PDO constructor.
Allow overloading of PDO constructor.
- Provide helper function to avoid TSRM issues with exception base and root
- Moved constants to private .h file - Added comments to filter stubs as per discussion with Ilia - Renamed regexp to validate_regexp filter - Added stubs for validate_url, validate_email and validate_ip filters. - Implemented "string" (stripped) filter
fix crash on restarting static PHP having session modules loaded
fix crash on restarting static PHP having session modules loaded
- Synch utest with test
no irrelevant news here (pdo was never in PHP before, no point)
ZTS fix
ChangeLog update
MFB: remove PDO_ prefix
MFH: use PDO:: class constants
use PDO:: class constants
Remove pointless PDO_ prefix
MFH: Make PDO use class constants
Make PDO use class constants
MF5.0: add new test
MF5.0: add new test
- MFH Add deprecated/compatibility class for BC
- Add deprecated/compatibility class for BC
- More TSRM fixes
MFH (removed unnecesary call to zval_ptr_dtor)
MFH (removed unnecesary call to zval_ptr_dtor)
Unicode support
Unicode support
ChangeLog update
Add blame :)
cleanup, typos, etc
fix build (declare extern HashTable pdo_driver_hash)
- MFH: Synch dosu
- Update docu: new slides are available
- Observer/Subject have been renamed
- MFH: Add missing docu/Synch
- Add missing docu
- Derick changed the test but forgot to make the code use E_RECOVERABLE_ERROR
- Commite manually if not conatined in bunch commit
- Synch naming/move changes with HEAD - Update tests/docu # New functionality in CachingIterator/RecursiveIteratorIterator not MFHed
- Rename 'CachingRecursiveIterator' to 'RecursiveCachingIterator' so that   all of those follow the naming scheme 'Recursive<*>Iterator'
move pdo_drivers -> PDO::getAvailableDrivers as part of namespacing sweep.
- Move RecursiveArrayIterator into .c - Add ability to control iterator class of ArrayObject - Implement option to make CachingIterator cache all read elements - Implement ArrayAccess to CachingIterator to access cached elements - Update docu - Update tests
MFB
Added --add-modules-dir option to buidconf.js: If this option is not specified buildconf.js will search for PECL in the usual places (pecl, ../pecl). Now it is possible to specify in which dirs additional modules reside with say: cscript /nologo win32/build/buildconf.js --add-modules-dir=../pecl_5_1 \   --add-modules-dir=../php-gtk2
ChangeLog update
BFN
MFH: check class_entry of this_ptr in Reflection API
check class_entry of this_ptr in Reflection API, so we won't get an alien this_ptr when called statically in a function that is called statically too (without being declared as static)
Please, only add entries for fixed bugs if they are ONLY fixed in HEAD!
BFN
fix #34505 (possible memory corruption when unmangling properties with empty names) 2nd part
fix #34505 (possible memory corruption when unmangling properties with empty names) 1st part
MFH
- MFB
MFH (overriding of protected static property)
MFH (overriding of protected static property)
correct flag
fix test
ChangeLog update
- Added tests.
- Add E_RECOVERABLE. #- Thought I did this before already actually...
- Rename file class again by popular demmand: calling it SplFileObject now
- Rename file class again by popular demmand: calling it SplFileObject now # Any other idea about the name? Or should i come up with a renaming plan # for the upcoming versions? :-)
MFB
ChangeLog update
- Update docu
- Changed in version 5.1
- MFB
- Update with latest SPLchanges
- No longer needed (moved into c)
- MFH: Add new files
MFH: - Add SplObjectStorage - Add RecursiveFilterIterator - Rename Observer to SplObserver - Rename Subject to SplSubject - Move SPL constants to class constants - Update docu
- Rename Observer to SplObserver - Rename Subject to SplSubject - Move SPL constants to class constants - Update docu
Add FS_STRIPPED alias
- MFH: Improve error message
- Improve error message
*** empty log message ***
MFH
Silence warnings under Solaris
MFH
Silence some crap if bison does not exist
- Rename icu_loc* to i18n_loc* - Added i18n_strtotitle (name is not sure yet) - work in progress.
ChangeLog update
MFH
ext/oracle is no more
*** empty log message ***
*** empty log message ***
Commit work in progress.
MFH: MFH: Make key() and current() take argument by value.
Make key() and current() take argument by value.
Cleanup the configure mess, preparing for making unicode OPTIONAL
bfn
fix #34450 (Segfault when calling mysqli_close() in destructor)
fix #34450 (Segfault when calling mysqli_close() in destructor)
ChangeLog update
MFH(r-1.719) Plug leak of 1/2 bytes when converting from string/unicode
Plug leak of 1/2 bytes when converting from string/unicode
Additinal fix for bug #34277 (array_filter() crashes with references and objects)
Additinal fix for bug #34277 (array_filter() crashes with references and objects)
- Reimplement SORT_LOCALE_STRING with ICU locales.
Better fix for exceptions in __sleep()
ZTS fix
ChangeLog update
When populating bound columns, override the returned type with the type specified by the user in their bind.
prepare for using go-pear.phar
Make use of 5.0+ features
remove traversable interface; apparently it's not enough, and this stuff is too magical to figure out wtf should be added.
update manifest
ChangeLog update
update package.xml files and version numbers, in anticipation of a big bunch of releases.
merge other PDO fixes from 5.1 branch. Allow pdo_sqlite to build against 5.0 and 5.1 too.
set version numbers to 1.0
touch file
MFH: reset the statement when closeCursor() is called.
actually reset the statement when closeCursor() is called.
merge George's fixes back from HEAD
closes #33707: error information was not passed up to PDO::query().
if a php bolean makes it as far as the parameter callback, it must really need to be boolean; express is as native pgsql 't' or 'f'.
and touch the generated file
actually register PDO_PARAM_BOOL as a constant (doh!). When emulating bound parameters, pass booleans via the driver's quoter method, so that is has an opportunity to tweak it. Refs #33876: PDO misquotes/miscasts bool(false)
closes PECL #5027; PDO_FETCH_NAMED not handled via setFetchMode().
Add test for this bug report; can't repeat the problem.
add __sleep and __wakeup functions to prevent serialize/deserialize from being used on PDO objects.  Refs PECL #5217
allow exceptions thrown in __sleep to interrupt the serialization process. refs PECL #5217
Add PDOStatement::bindValue(), which is similar to bindParam(), except that it binds the value of the zval at the time it is called, rather than keeping a reference to the zval and taking the value at execute() time.
ChangeLog update
- str_pad(): Use u_countChar32() for codepoint counting, eumalloc/eurealloc() for Unicode mallocs.
new test
fix problem appearing when binding empty values
- Added Rollands latest upgrades.
Changed "instanceof" and "catch" operators, is_a() and is_subclass_of() functions to not call __autoload().
MFH (is_sublass_of("A","B") should call __autoload() for "A" and "B")
ChangeLog update
MFH: Allow retrieval of query parse errors from SQLite.
Allow retrieval of query parse errors from SQLite.
Avoid unnecessary copying/freeing
- Make ord() work on binary strings too.
use "connections" instead of "links" everywhere to avoid possible confusion
fix phpinfo() output for iconv extension (convert unicode values to string before outputting them)
Unicode support for PHP constants
MFH: add save options parameter
MFH: add additional constants remove un-needed ifdefs
add save options parameter
add additional constants remove un-needed ifdefs
catch operator shouldn't call __autoload () too
That line made no sense
ChangeLog update
- Unicode impl of substr_replace()
install-pear.phar removed -> moved to http://pear.php.net/install-pear.phar
attempt to make new instructions clearer
change makefile to use phar and not source, if present
new test
MFH: Upgraded SQLite 2 library in ext/sqlite to 2.8.16
Upgraded sqlite2 lib to 2.8.16
add Andi & Wez as lead maintainers and make myself lead too
I doubt that all these people are going to develop it in PECL, so remove them and fix those complains about non-existing users.
prepare to PECL release
Support for Windows (Michael Wallner)
don't try to fetch resource when there is 0 args
ChangeLog update
Updated TODO
removed __FUNCTION__ (by popular demand)
fix credits
Sync windows build and link against instant client libs
Remove utf-8 chars
workaround for some b0rked compilers
new tests
Updated OCI8 driver
- Updated the framework, cleaned up some code. #- Basically the only real thing left is the body for the filters.
ChangeLog update
Simplify code by making use 5.1+ functions
test version of install-pear.phar can be removed if there is any issue without changes to Makefile.frag, it is not actually used
Pointer arithmetic with char * rather than void *
touch
touch
BFN
- Unicode impl of str_pad()
ChangeLog update
- Add missing docu tag
- MFH
- Update docu
assign a version number
Allow ext/mysql to build against PHP 4 again; update package.xml ready for release via PECL.
touch
MFB
touch
MFB
Don't crash on invalid parameter #34203 (Wez)
ChangeLog update
reorder
BFN
- Update docu
- MFH Update docu
MFH: Resolved bug #34240.
Resolved bug #34240.
- MFH: Added date_time_set, date_date_set and date_isodate_set() functions, and   setTime, setDate and setISODate() methods.
- Added date_time_set, date_date_set and date_isodate_set() functions, and   setTime, setDate and setISODate() methods.
revert
Revert
MFH
Check the status properly
- MFH: Update timezone database to version "2005m".
- Update timezone database to version "2005m".
- MFH: New layout for tz database file.
- Added comments into the database file, so that we can more easily spot   changes.
- Moved exts to PECL
- Moved pfpro, ovrimos and mcve to PECL # Pierre will create the packages for these
MFB: Always return something, even if it succeeds :)
it is good idea to return something always
ChangeLog update
MFB
MFH. Protect against underflow - refs http://pecl.php.net/bugs/bug.php?id=5193
Resolution to http://pecl.php.net/bugs/bug.php?id=5193 for all drivers.
MFH
- Revert -a to -A change, bad idea: It disables EXISTING lines too!
protect against underflow - refs http://pecl.php.net/bugs/bug.php?id=5193
portability fix (for solaris)
MFH
MFH
If it is added in 5.1, is it still news for PHP 6?
NSF
Support for class constants and static members for internal classes
Support for class constants and static members for internal classes
MFH
Bump up libxml2 version requirement to >= 2.6.8
ChangeLog update
Further work on Unicode support in file uploads.
MFH: make sxe_properties_get respect namespace scope
make sxe_properties_get respect namespace scope
Update credits
Update credits
- Moved ext/oracle to PECL
Moved to PECL
Added test for bug #34310
Added test for bug #34310
- MFH run-tests-config.php was never used and now renamed
- run-tests-config.php was never used and now renamed
ChangeLog update
MFH, fix 34072
Set port even if host is localhost.
Added optional parameter to http_build_query() to allow specification of string separator.
News
this is the number of params, not the top index
this is the number of params, not the top index (otherwise unix_socket doesnt work
- MFH (missing run-tests2.php rename part)
- run-tests2.php was renamed into server-tests.php (missing part)
- Adds module registering a function to struct zend_internal_function.   (Johannes) # This information is by reflection API and error messages.
- BFN
ChangeLog update
Mark pspell as working
MFH: allocate_new_resource() handles the malloc() for us.  Don't leak by mallocing twice.
allocate_new_resource() handles the malloc() for us.  Don't leak by mallocing twice.
MFH
Clean away PECled exts and added date.timezone setting
ChangeLog update
touch
Upgrade sqlite lib to 3.2.5
Upgraded bundled SQLite library for PDO:SQLite to 3.2.5
Upgraded bundled SQLite library for PDO:SQLite to 3.2.5 (step 1)
BFN
ChangeLog update
Nuke misinformation
This is no longer required
MFH
- Unicode impl of substr_count()
ChangeLog update
- MFH
- Check for static libs, too
- Updated strrev() to handle base+combining sequences
ChangeLog update
_ MFH
- Bugfix #34257 lib64 not handled correctly in ming extension
MFB
sizeof(char) != sizeof(UChar)  Don't tell ucnv_toUnicode it has more space than it really does
ZTS fix
ChangeLog update
*** empty log message ***
- Require declare(encoding=...) to come before any opcodes. Read source   comments for more info. - Op arrays now know which script encoding they were compiled from. - Use this information to intelligently convert inline HTML blocks to   the output encoding. Currently it opens and closes a new converter for   each block, but we can optimize it.
- Make it compile in  ZTS mode #- *untested*
MFH: Remainder of the 34191 bug fix.
Remainder of the 34191 bug fix.
PCRE lib is 6.2
ChangeLog update
Implement Unicode support for strncasecmp().
*** empty log message ***
MFH
Test for bug #34214
Damn.
- Rewrite zend_u_binary_strncmp() to work on codepoint level. Calling   u_strCompare() doesn't help because it assumes that the input lengths   specify the number of UChar's. - Change zend_u_binary_strcmp() to use u_strCompare() (and it's fine to   use it here, since we work with whole strings here).
This was so embarassingly silly.
removed unused vars
Unicode support
- Added .cvsignore file.
Unicode support cleanup
Changed is_a() and is_subcalls_of() functions to not call __autoload() (in the same way as "instanceof" operator).
Unicode support for strncasecmp()
ChangeLog update
Unicode support for strcasecmp().
sync with PEAR 1.3.6
add XML_RPC 1.4.0
move Archive_Tar 1.3.2 => 1.3.1 1.3.2 does not exist
MFH: Make dba extension support BerkleyDB 4.3.
Make dba extension support BerkleyDB 4.3.
We should use u_memcpy() whenever possible, to simplify code.
Now fread() returns bool(false) on error instead of empty string
Don't apply "unicode" filters in non-unicode mode
Unicode support
fix crash if throw attempted outside of executable code
zend_is_callable() and zend_make_callable() were changed to return readable function name as zval (instead of string).
ChangeLog update
ChangeLog update
add checks for extensions that must be loaded
ChangeLog update
Unicode support for strcmp()/strncmp().
*** empty log message ***
*** empty log message ***
*** empty log message ***
Unicode support for ord() and chr().
This file should be used to keep track of extension upgrade progress. Please add completed functions to the list.
Use RETVAL_ASCII_STRINGL() here.
Proper NEWS language that everyone should be able to understand..
Unicode support
Unicode support
- Unicode capable impl() of strrev()
Quick fix (API was changed)
Unicode support cleanup
nstanceof operator shouldn't call __autoload()
ZTS fix
ZTS fix
ChangeLog update
Rework range() to be able to work on binary strings and also on Unicode code points. Binary strings are not interpreted as numeric.
Use u_totitle() instead of u_toupper() in ucwords().
- Implement zend_codepoint_to_uchar(). - Rename and fix zend_get_unified_string_type() so that it does not   allow mixing of binary and Unicode types.
- fix bad revert and make the xmlrpc ext detections fallback   forgot that 5.1 still has pear in its branche
mf 5.1
Add ext to the include path.
Suppoer for unicode exception messages
Unicode support for extract()
MFH: fix memleak
fix memleak
MFH: Nuked EOLs from error messages
Nuked EOLs from error messages
Nuked EOL from error message
MFH
Nuke EOLs from error messages
MFH
- Removed EOL from error message
- Removed EOLs from error messages
MFH: nuked eol from error message
- Removed EOL from error message
Unicode support
var_export() should escape \ and ' characters.
Unicode support
*** empty log message ***
Unicode support
We don't need EMPY_STRING here. This function is execuited in non-unicode context only.
- Removed 'proto' from description of internal funcns: ucfirst()/ucwords()
ChangeLog update
*** empty log message ***
add return by ref from PEAR::raiseError
re-enable XML_RPC 1.4.0
Unicode-capable impl of ucwords()
- Please use the maintainer switch # It is very annoying to having to rebuild php completley several time # a day just because a few here are lazy.
*** empty log message ***
Disallow mixing binary and Unicode types when T specifiers are used.
Unicode impl of ucfirst()
- Introduce 'y' specifier for functions expecting binary data. - convert_to_binary() now uses convert_to_string() in non-Unicode mode.
Unicode mode doesn't allow non-unicode properties
MFH
News for PHP 6, nuked old news.
BFN
Bump up Zend version to 3.0.0
*** empty log message ***
Added test for bug #34087
Unicode support for range()
Proper handling of unicode strings with \0 in the middle
Unicode support
Unicode support
Unicode support
trim() should accept objects with __toString() method
php_u_trim_range(): Alloc UChar32 units rather than UChar
Unicode support
MFH
Updated implode() impl as per Andrei's comments [http://news.php.net/php.cvs/33457]
Add SoapClient::__setSoapHeaders()
Introduce SoapClient::__setSoapHeaders()
ChangeLog update
Provide a common handler for "close". Macro the name validation.
md5() and md5_file() should return binary strings when raw_output is set.
And here
And here.
Z_UNI* are the right macros to use.
- Prevent E_STRICT from ending up as exception
- Prevent E_STRICT from ending up as exception
nuke unused vars
Unicode support
Unicode support
Unicode support
Unicode capable impl of implode()
Go back to dev
Rebundle XML_RPC in the correct version for the Windows distro.
Roll RC1
Unicode support
Use free() instead of PQfreemem() to maintain compabitibility with older PostgreSQL client libraries (bug #33813).
Unicode support
Unicode support
Updated calls to php_trim() to provide arg for returned string type
php_trim() takes extra arg to determine string type to be returned
ChangeLog update
MFH: Input validation part 2.
Input validation part 2.
Fail gracefully if icu-config is not found
MFH: Chunk the output
Chunk the output
eliminate compile warning
This is like a virus..spread everywhere :)
DONE
These are not defined anymore
Goodbye PEAR
- if questions, rtfm
Nuke PEAR
- add a little doc to redirect people to go-pear
- remove files
- cvs delete is not recursive...
- some other (#1 out 2)
- these files are outdated, /pear-core is the repository for pear and   respectivelly /pear for other pacakges.   The install procedure has to be changed as well, as planed. (#1 out 2)
- No c comment (+ old non unicode way not needed any longer)
Unicode support
BFN
Unicode support
MFH: input validation.
input validation.
Test engine is improved to support unicode mode
Tests are fixed according to new var_dump()/pront_r() format (to pass in non-unicode mode)
ChangeLog update
- Simplify and make work in all modes
- Need to terminate [v]uspprintf() with two \0
- Where did my backslash vanish?
- Handle different cases of the actual strings correctly
- Initial support of easy way to generate unicode strings: [v]uspprinf() # Same semantics as [v]spprintf, only it prints unicode strings instead of # native strings. Atm it has a little problem since it length doesn't take # the difference between UTF-16 code points vs units into account. But as # long as no 4 byte codes are involved it should already run everything.
- Treat class_name in the exact same manner as prop_name before
- If prop_name is printed as unicode then class_name needs to be treated   in the exact same manner
- Show classname very needed - No 3rd " which doesn't help parsing # Does the class name need to be printed as u"<name>" ?
tidy up implicit_mode handling; spotted by Nuno There's probably a much more efficient way to do this than the current strchr stuff.
ChangeLog update
fix protos
Missed some "de" to "un" changes
- consistency fix, part 1/inf
- ntive is better than standard (Andrei)
a bit of pedantic ws
unicode enable COM parameters (but not method/property names yet)
could have sworn that I did this already
- IS_STRING does not necessarily mean ascii so 'standard' is better # Maybe we call them legacy strings
Add is_unicode(), is_binary() and is_buffer()
ChangeLog update
make the icu library detection more friendly. Also note that we can only probe for libraries after we've set up the implicit php_build path.
vs.net 2005 introduces 64-bit time_t.
- Unicode # We probably might want to move spprintf.c/h into Zend now
- This might already be defined
what they totally screw up on one hand, MS compilers almost compensate with on the other.
sizeof(time_t) !== sizeof(int)
zts fixes
make valgrind and gcc happy
initialize key type when adding next index
allow default_charset & default_mimetype to be changed during runtime
shut up warnings
nuke unused variables
MFH, compiler detection
/GB option is the default; remove it. Add compiler version checks, as vs.net 2005 has dropped support for /YX and /GB options, and deprecated ANSI stdio (in favour of more secure, non-standard versions).
fix fgetc() & compile warnings
fix typo noticed by Nuno
change ["var_name":private"] -> ["var_name:private"]
Update.
fix compile warnings
*** empty log message ***
Add unicode macros for when Zend memory manager is disabled.
fix array_merge() adding one superfluous byte to the key
fix php_u_trim() and compile warnings
Unicode support
Unicode support
ZTS fixes.
MFB
Unicode support
Unicode support
Added --enable-static-icu / --disable-static-icu windows configure options that allow you to pick weather you want to link against static or DLL version of the ICU library.
Unicode support
Patch by Michael Wallner, signed off by Edin Kadribasic.
- Some minor fixes
more tabs
ZTS fixes.
ChangeLog update
- Add unicode INI settings
No more versions here
No tabs in config* files!
- No more zend_multibyte.*
Not used
Nuke unused code
- Unused
Nuked unneeded multibyte stuff
no DOS EOLs!
fix test
MFH
fix skip conditions
Unicode support.
Unicode support
MFH
missing entry
- Regenerated.
BFNS
- And this is version 5.1
MF5.1: fix #34078 (Reflection API problems in methods with boolean or null default values)
BFN
fix #34078 (Reflection API problems in methods with boolean or null default values)
- MFH creadits to Johannes
- Johannes did a great work on the shell # Now he wants to maintain CLI ?-)
- For internal classes we must auto generate the abstract class flags. # Actually providing the flags while registering the class is not possible # since that would require a major API change.
Remove pear/XML_RPC dependency for the pear installer PEAR guys, please doublecheck this.
ChangeLog update
Revert the last patch so we can release PHP 5.1
avoid version changes for future versions
rename dll's to php6
- Support non static class loader methods
Probable fix for #34054.
MFB minor consistency cleanup
Minor consistency cleanup
- Register new classes with spl_classes()
- Implement SplObjectStorage as announced during OSCON # This class starts naming of new classes in Spl by prefix Spl as dicussed. # The class reduces object storage complexity from O(n) to O(1) which is # not possible in user space.
- WS
- Add RecursiveFilterIterator - Derive ParentIterator from RecursiveIterator # Actually brought up by a user. It is of course better to filter first and # do the recursion only for accepted values. Otherwise you would iterate # children and possibly recurse into them just to ignore them later anyway.
fix build
- MFH estrdup/strndup change (as hinted by Andi)
- Support sttaic class loader methods
ChangeLog update
- This didn't end up being included
- MFH: PEAR uses .php not .inc.php (as discussed with Andi)
- PEAR uses .php not .inc.php
- Added option to strstr() and stristr() to get a particular haystack component
Missing patch bit.
Remove old internal.h file.
reword
News and constants for parse_url().
Added option to parse_url() to retrieve a particular URL component.
Added curl_setopt_array(), allowing setting of multiple cURL options. Added CURLINFO_HEADER_OUT to facilitate request retrieval.
MFB: Sync with config.m4.
- Changing the API numbers, which might be a bit premature, but it allows   to differentiate between different branches. - Bumbed the version number to 6.0.0-dev. I know we didn't discuss this yet,   but I feel it should be 6.0. See mail to the mailinglist.
UN
Sync with config.m4.
- No release today. Found a critical bug...
ChangeLog update
- RC1
This commit was manufactured by cvs2svn to create branch 'PHP_5_1'.
Upgrade to PCRE version 6.2.
Make sure this works for multiple results as well
Remove debug code and optimize a bit
makedev is a macro on several systems.
BFNSF
finally!
put the -d extension loading options in the right place, get rid of basename
Adjust date("") handling.
- Made it possible to do "make test" for phpized extensions
- Show the dependancy name we could not find (req_mod is null here when it is not found :)
Automatic encoding/decoding of hexbin data type (base64 support is improved)
fix extension loading from command line, resources didn't work (still related to Bug #33899)
ChangeLog update
BFN
Missing entry
 	configure.in scripts/Makefile.frag scripts/phpize.in
Update todo.
typo fix
This test failed because libxml versions differ..
ChangeLog update
- add package2.xml
- prepare release
Mention new library bundle on windows
- fix examples
BFN
Only link zlib if we dont compile it in (#3406)
Add missing export
fix tests
add a comment
add error checking
fix problem on 64 bit - when asking for "l" supply long not int because on 64 bit they differ and zend_parse_parameters makes a *(long*) cast which means that if the variable is int 4 bytes of the variable(s) declared before it (on the stack) will be overwritten. In this case this is the length of the query -> made 0 and mysqli_query() returns FALSE.
ChangeLog update
Cleanup to match the current cvs version of ming0.3beta
No HTML output if html_errors is off (bug #34006)
- This ini option is only effective when set in php.ini or httpd.conf   or .htacces, etc. as GPC variables are set before any ini_set() is called
NetWare specific stat structure issues. --Kamesh
Skip test on solaris
- Changed -a to -A to prevent enabling PHP in httpd.conf automatically. # Most distributions use separate file in a conf.d/ directory to enable # PHP, using -a would add unnecessary line in the main httpd.conf and # causes a warning during startup.
ChangeLog update
test -e doesn't work on solaris
- Update TODO
add test for the last Dmitry's fix
ChangeLog update
- Bumber up year
update credits
Bump up the year
Nuked DOS EOLs
Bump up year
- 2004 -> 2005
ChangeLog update
make skipif test use ini options specified by -d command line options
fix test when include_path does NOT have . in it
Removed warnings
BFN
ChangeLog update
- Need to expose this one too
- Update version info
Allow building gd on windows systems without t1lib (M. Sisolak) #33620
Allow building against the latest cclient
Allow SOAP work when allow_url_fopen is turned off.
ChangeLog update
Added test for bug #27908
fix test
SystemID and publicID params reversed in declaration handlers
Update TODO.
Update todo
ChangeLog update
Added test for bug #25359
ChangeLog update
switch to ansi declaration so that vs.net 2005 groks it.
Backport of libsqlite fix in relation to AS keyword.
- Add ENV support (mike)
fix VPATH builds
In NetWare few of the programs like apache2 and ldap use winsock inclusinf sys/socket.h is not desirable. --Kamesh
ChangeLog update
update generated file
news file tinkering
- Tiny fixlet
- Before we later run into BC trouble we split flags into two params mode   and flags now before branching for 5.1.
- Allow static loader functions (but only for 5.1.1 as discussed with Andi)
- Add convenience function zend_is_callable_ex() and base zend_is_callable   and zend_make_callable on it. This functions allows to check if a php   variable is a callable function and returns its function pointer as well   as object if possible. # Commit this now so we can use it in 5.1.* series as discussed with Andi.
NetWare cleanup --Kamesh
defined EX_OK and EX_TEMPFAIL in ext/standard/mail.c for NETWARE rather than including a sysexits.h. -Kamesh
Cleaned up the NetWare code. --Kamesh
ChangeLog update
news entry for bug #33882 fix
ws
ws fix
edge case: do not remove trailing slash for root directory (Bug #33882)
php.ini search logic needs to use the absolute path of the running binary when looking for php.ini in the directory the php binary is installed in
add sanity checks
fixup the build in HEAD again... moved the maintainer only stuff out of the config.m4 and into a separate script to make it cleaner
configure.in moved the PHP_OS and PHP_UNAME definitions near the place other oses define them currently it is ggeting redined to build machine values when ./configure script is generated using autoconf version 2.13 but works fine with autoconf 2.51. Defining the default EXTENSION_DIR for NetWare
ChangeLog update
typo
Yes, I can't count the months, and no, I'm not related to Ilia.
Add support for instant client 10.1.0.4. Theoretically also add support for 10.2 libraries. Prep for PECL release.
prep for pecl release
Add package.xml
prep for PECL release
prep for PECL release
Prep for PECL release
Only set authorizer if we intend to use it (safe_mode or open_basedir).
bug #33865
NetWare can make use of autoconf based build --Kamesh
ChangeLog update
Updated URL leading to latest aspell.
MFB fix for bug #33690
I could have sworn I committed this a while ago.  Just a tiny NULL safety check here.
- Add new test
- Be flexible about spellbook - we want to test the ext not the spell corrections available
- Bugfix #33733
ext/standard/fsock.h Removing redundant inclusion of headers for NetWare
ChangeLog update
Added test for bug #33841.
ChangeLog update
Removed done stuff
- fix #33794 imagerotate rotates only CCW   introduced by transparent color patch
ChangeLog update
revert fix that did not fix anything
fix build with older postgresql
- Add missing part to make colon in parameter binding optional
- Test the colon is optional in binding
$context is not longer passed by reference, so its modification has no effect
ChangeLog update
this looks like a much better fix for refcounting/shutdown in lazy objects.
fix leak (ugh, this nuance gets me every time)
Added test for PDO_FETCH_LAZY.
- Changed the year parameter so that 0..69 maps to 2000..2069 and 70..100 maps   to 1970..2000, which was in the original code, but not in the documentation.
Recursion protection
ChangeLog update
there is not much point in putting entries of bugs fixed when bug only existed in CVS and not in any release..
Missing bit of the previous commits
"_local_cert" and "_passphrase" properties moved into "_stream_context". As a result now it is possible to use certificates during access WSDL files.
- Use correct/complete skipif condition
ChangeLog update
use pdo core test suite. Now passes all but one test.  Volunteers that want to track down the cause for test pdo_018.phpt not passing are welcome.
some drivers want you to say that its ok to use NULL for these columns.
Proper handling for databases that need to pre-calculate length of large columns, which is not normally done for performance reasons.
Add PDO_PGSQL_ATTR_DISABLE_NATIVE_PREPARED_STATEMENT attribute, which, when set to true, forces the driver to use PDO's own emulated prepared statement support.
Only set attribute if result set contains some columns.
clean up
this hack can and does segv; let's remove it.
*** empty log message ***
Skip tests in 64bit systems
fixed skipif to really skip
- Add test to verify all ArrayAccess methods can throw
- Add test to verify all iterator methods can throw
Remove stale #ifdefs (this is PHP 5 only code). Add a stream_context option to the SoapClient constructor; this allows generic stream context options to be set without having to add code to the SoapClient every time a context option is added.
- Dont't warn in case an exception is pending - in this case it'd superflous
revert my last change; chasing ghosts. # the lesson is, ensure that php4 and php5 aren't loaded at the same time
Don't crash when no treat_data method has been set in the sapi module # how come no one ran into this before?
try to make the test a bit more portable
this should always be a string here, but just in case, convert it.
if we didn't detect an error, don't return -1 rows, as that means that we found an error
Closes #33533 by implementing proper dynamic fetching of long text columns.
ChangeLog update
Limit the size of columns to 64K, so we don't try to allocate 2GB for each text column coming out of informix.
\#if BRAD_0'd latest changes as requested until 5.1.0 release
sync missing functions from libmonetra-5
Revert cookie patch for BC reasons.
Valgrind is unhappy that this is not initialized
fix macro
touch with working re2c
make a start on a debugging function.
touch generated file
avoid :: when looking for named parameters. Refs Bug #33736.
this needs to be the column count, otherwise a db->query() that returns 0 rows will fail rather than returning a statement with no rows.
compile before commit (gah!)
Cleanup buffers on handle re-use.
Apparently our pipe detection code just above this isn't foolproof. Catch it here.
Removed some compilation warnings.
ChangeLog update
typo
Make sure we build with SWFPrebuilt.
- Show end of relay testing block
- Provide distinction and distinct tests
- Compatibility with ming 0.2a and 0.3a
- Write temp file in test dir
- Add new test
Added missing init.
- If you ask me both (expat and libxml) are not really accurate about byte   positions and columns...however the line number information is now   correct for both so for the moment we live with the situation that they   return different byte and column information.
ChangeLog update
Added 2 missing cURL options available in all versions.
NetWare can make use of the Autoconf based build system
libpq-fs.h this file is of no use
main/fopen_wrappers.c NetWare file names are case insensitive main/main.c NetWare has no sendmail binary. It uses the smart host mailing code avaiolable in php distro. Could not find a better place to put this than main/main.c. -- Kamesh
Netware pthreads support is good enough. So removing all these fixes of old times. -- Kamesh
ChangeLog update
Darwin seems to like this much better.
Darwin seems to like this arrangement much better.
Pass context parameter through to xport_create
ext/standard/file.h NetWare LibC has fnmatch and realpath implemented. ext/standard/syslog.c Except LOG_SYSLOG other syslog macros are supported by NetWare LibC. ext/standard/string.c NetWare fix for dirname -- Kamesh
ChangeLog update
Properly recognize redirect code 303. When encountering redirect on POST request follow browsers and cURL and perform GET on the specified location field.
- Back to -dev
- Beta 3
ChangeLog update
Add test case
gah!
Thanks 'james' (a visitor to my blog) for reporting this bug.
keep this as a placeholder for debugging weird regressions
Add utility for driver-specific tests
it is not an error for a statement to return 0 rows.
typofix
- Added check whether re_magic exists in struct regex_t # per Andrei's request
fix typo
fixed typos
ChangeLog update
- Update Beta 3 date
add forgotten ifdefs, fix #33667 (mysqli doesn't compile)
- Update News
- Back to -dev
- Beta 3
ok, call pdo_mysql_error() before returning -1
strictly  check the result of mysql_affected_rows()
Added support for LOCK_EX flag for file_put_contents().
changed version dependency for charset functions
compile before commit...
Enable unix build for dblib/sybase/freetds. The extension is named pdo_dblib and the driver dblib on unix.
fix tests that started to fail after the last change in ZE (noticed by Nuno)
Avoid estrdup(NULL), modified patch from Zhao ming sen.
removed charset structure. libmysql now provides a function mysqli_get_character_set_info (Vers. 5.0.10)
Touch with working re2c
ChangeLog update
touch generated file
remember ? -> :pdox mapping so that binds by position can be mapped to names if required.
fix bug when query was rewritten from ? to :name
improve handling of bound input parameters when no maximal length value is set; default to 4000 as the maximal length, which is the biggest size possible without using a LONG type (if you specify anything larger than this, you'll end up with ORA-1461).
expand oracle null handling compatability by offering the ability to convert NULLs into empty strings as well as the other way around.  It still doesn't help a great deal in the long run, but at least the option is there.
should always bind columns after execute. There're probably more of these to fix.
Make references misuse emit E_NOTICE rather E_STRICT to be compatible with PHP 4.4.0
A bit of further tuning.
fix a segfault with the following script: <?php $dbh = new PDO('mysql:dbname=test;host=localhost', "root", "secret"); $what = 1; $stmt = $dbh->prepare('select a, b, c from t123 where a=:what'); $stmt->bindParam(1, $what, PDO_PARAM_INT, 12); var_dump($stmt->execute()); var_dump($stmt->fetchObject()); ?>
- mysql_affected_rows() already returns an unsigned long - optimize a bit the real_escape - handle the situation when libmysql bails out because of lack of memory
Removing the automake-related output.  The build no longer uses automake.
ChangeLog update
Compiler warning fix.
- Moved ext/dbx and ext/ircg to PECL.
touch
- use three digit octal character definition
ChangeLog update
stmt->column_count is set only if the result has been already bound, don't rely on that and use the real count which is kept in st_mysql_stmt #of course using internal values is bad idea but the comment already says #that this should be fixed
ok, calculate max_length only in case of a blob (normal, medium, long). in case of a varchar lets allocate 255 bytes and be quick without asking libmysql to update max_length
if the result set is buffered ask libmysql to compute the lengths, so later allocate buffer as big as the largest value of the column in the result set (max_legth positive).
Get precise lengths from the server, as suggested by Andrey.
Related to #33624.  Crashes for me on shutdown, but seems ok for the rest of the world.
ChangeLog update
Added safety checks.
Make cursor closer work with emulation as well.
don't free the cols until we know we have another rowset
Added missing header check.
cursor_closer for SQLite.
Implement cursor_closer for MySQL driver.
for the transactions test case, detect working transactions before attempting to run the tests. Additional ugliness required because mysql does stupid stuff like this:
Added:
Safer way of allowing 'blank' user/pass.
show ugly full path for failed redirected tests
- No need to use convert_to_string_ex() when dealing with strings
Sanitazione
fix leak
- Regenerate using re2c 0.9.8
- std not needed -> avoid warning
fix tsrm build
rewrite original names to our preferred format
generated file
For named-parameter-to-named-parameter rewrites, we need to map the original names to the new names.
Some of us don't have PostgreSQL 8.0 :)
Missing bit of the previous patch.
Add early support for native prepared statements in pgsql. Note that some tests now fail; if we can't resolve this in time for the beta, the prepare code should be disabled (I'll add a flag for this later today).
And the generated version of the parser
add a bit of a hack to cater for pgsql prepared statements.
and as a result, need to update the expected data
we declare the column as NOT NULL, so inserting NULL is not a good idea.
make use of T token
fix #33597 (setcookie() "expires" date format doesn't comply with RFC)
rename php_format_date() to date_format() add wrapper for date_format() to use it in other extensions
fix #33614 (memory leak in new strftime())
Make sure we get a WARNING and not an ERROR here :)
fix test when session.save_handler is "user"
fix test when session.save_handler is "user"
ChangeLog update
Add a PDO_ATTR_STRINGIFY_FETCHES attribute, which is used to convert integer or floating point values into strings during fetch.  This is a compatibility hack for drivers that return native types rather than string representations.
Added pg_fetch_all_columns() function to fetch all values of a column from a result cursor.
do not set error_code to HY000 when there was NO error reset both handle & statement error codes to 0
free parameter when requested to do so
1st set of fixes to make tests work with MySQL
Make prepared statements obey buffering flag in MySQL.
populate the new dbh->driver field. Implement PDO_ATTR_DRIVER_NAME.
add an attribute for returning the driver name
zend_stream_getc uses fread internally. NetWare LibC fread reads 4(Which I believe EOT) for EOF(^D) character. This happens when fread is asked to read one and only character as is the case with cl interactive mode. -- Kamesh
remove old test files
using new tests
use new tests
Stop on the 1st skip.
adopt new tests
fix #33605 (substr_compare() crashes with negative offset & length)
skip if we can't connect (include reason in skip output)
Return an empty array rather then FALSE in fetchAll() on no results.
adopt new tests
DB2 wants us to use the proper ODBC 3 function for closing a cursor.
Need to state NOT NULL here, as DB2 won't allow the UNIQUE constraint without it.
make column names lower case
adopt common tests
sort redirected tests
more paranoia about the attribute param here too
extra paranoia about the attribute param
Hmm, these ldflags went AWOL.
Use PQexecParams() when available, use original case in all other instances.
If asked to populate a set of cflags for a header check, only populate the flags and don't fill in an entry into config.w32.h, UNLESS explicitly told what to do.
adopt generic PDO test suite
pedantic WS
It's not portable to expect any consistency between drivers in the return value of an exec() when running DDL; revise test.
Allow NULL namespaceURI for getAttributeNodeNS
reorder. Also: Documentation belongs elsewhere :)
Reverting the DEFAULT_SLASH to / as it breaks the FreeBSD derived function of NetWare LibC like glob. -- Kamesh
gwtcwd of NetWare LibC gives a cwd with a volume information. So using getcwdpath which gives with volume information. getcwdpath gives with directory seperator as \ which is against our DEFAULT_SLASH of /. So finding and replacing \ with /
COPY_WHEN_ABSOLUTE is not needed for NetWare. -- Kamesh
ChangeLog update
Missing closing folding marker
Leave it up to the user to decide if to escape the sequence name or not.
Faster sequence id retrieval.
Export missing symbol
rename pdo_test.php to pdo_test.inc, add it, and update tests.
juggling to track down a problem with odbc
last minute debug stuff sneaked in
replace pdo_odbc tests with new redirection thingy
remove the old tests for pdo_sqlite
Add a redirect test to run the common pdo core tests against the sqlite driver
Add tests that can be redirected to with new test harness feature.
Add a new kind of test to the test harness.  REDIRECTTEST sections allow an extension to piggy-back on the tests defined under another dir and run those.
ChangeLog update
- Added testcase for bug #33578.
- Change memory management so that tzinfo structures can live outside time   structures too.
Properly detect when the copy command fails
ChangeLog update
- Renamed date_timezone_set/get() to date_default_timezone_set/get(). - Added missing proto's and folding marks.
If the PHP_AUTOCONF and PHP_AUTOMAKE environmental variables are set, use them when describing the build environment.
Make sure the timezone is NULL, if change operation fails. Ex. memory_limit
- PHPAPI + static don't mix, obviously.
Make sure files-save handler is used always
- Added testcase for bug #33563 which is already fixed.
UTC is better
fix test
- Do not crash when the abbreviation doesn't exist.
ChangeLog update
- Always create the file with correct paths (gdb likes it better like this)
- Always use #ifdef when dealing with HAVE_* defines from AC_CHECK_FUNCS() - Added check for strftime() also in the timelib configure
- Reimplemented time(), getdate() and localtime() functions with new datetime   library.
Avoid strlen() if we know the length.
function style
- Added fallback to system's timezone setting, but marked with an E_STRICT   error. - Adjusted tests to use the date_timezone_set() function.
- Move mktime/gmmktime related tests from ext/standard to ext/date.
- Tweak tests a bit
ChangeLog update
Add PDO_FETCH_NAMED; closes PECL #4641 by providing a way to access columns by name, even when multiple columns have the same name:
probable fix for PECL bug #4546
Enable native mysql 4.1.x prepared statement support # the hardest part was installing 4.1.x on a gentoo box over a 56k modem
BFN
Don't crash on exit by destroying the same hash twice
- Overhauled selecting the correct timezone. The timezone set with   "date_timezone_set" override the TZ environment variable, which on its turn   overrides the date.timezone setting. If none of the three is set, we fallback   to UTC. - Added "date_timezone_set" function to set the timezone that the date   functions will use.
Experimental support for queries returning multiple rowsets under mysql 5.0. Patch from Guy Harrison (guy dot a dot harrison (at) gmail dot com)
ChangeLog update
XML_RPC -> 1.3.1 (tar, not tgz)
XML_RPC -> 1.3.1
Inconsistency noticed by Nicholas Telford
Add sqlstates defined in PostgreSQL documentation. Source: http://www.postgresql.org/docs/8.0/static/errcodes-appendix.html
Only check for InvalidOid when not looking up a sequence
Fold PQresultErrorField() into a macro
Added class 55 sqlstates
Added support for fetching current value of a sequence when the optional sequence name has been passed to PDO::lastInsertId()
 bump xml_rpc to 1.3.1, php4 win32 builds uses this list to (4.4)
NetWare LibC has reentrant time functions no need to have this. -- Kamesh from hyanantha's account
- parse_date.c is a generated file, updated parse_date.re and regenerated   parse_date.c.
As fork implementation of NetWare LibC still in experimental stages making the procve based solution ahead of HAVE_FORK. Later When fork becomes stable will revert this fix. --Kamesh from hyanantha's account
ChangeLog update
Release news
SQLite lib upgrade news.
touch generated file.
Upgraded bundled sqlite lib to 3.2.2
Add optional parameter to openssl_pkcs7_verify() which specifies the name of a file that will be filled with the verified data, but with the signature information stripped.
consistent naming: prefix always with MYSQL_
Netware also uses autoconf based config now
Restored old behavior of zend_statup_module()
typo
- Unify (+ spl can't be build shared so COMPILE_DL_SPL
- Added check for makedev systemcall, which Netware doesn't support.
- Make the Netware guys happy by removing the config.nw.h define.
ChangeLog update
Silence warnings.
- Reorganize headers, and update TODO.
- Added support for negative timestamps with the @<number> format. (Patch by   Nuno Lopes)
- Make sure the already set "TZ" environment doesn't mess up the tests.
Final (i hope) set of magic.h detection fixes.
More reliable library detection.
This file is not needed anymore
this file is not used at all so removing it.
Netware LibC has mktemp implementation
NetWare LibC has getpwnam, getlogin, getpwuid, getpid, this file is not needed anymore
fix test
NetWare LibC has readlink implementation. This is not needed anymore.
This file does nothing so removing this file.
NetWare LibC has grp.h
NetWare LibC has param.h
NetWare LibC itself has popen/pclose functionality so removing this
NetWare LibC has pipe/popen support
fix conditions for freeing
add comment
mktemp functionality is part of Regular LibC
removing pwd.h as NetWare LibC itself supplies pwd.h
ChangeLog update
fix tests when error_reporting is E_ALL
- Regenerated with re2c 0.9.8
fix leak: when dup was <success>ful zend_std_object_get_class_name() returns SUCCESS aka 0
- Added testcases for bug #14561 and #26090 and updated NEWS with those   fixed bug nr's.
re2c 0.98 is the current working version
- Implemented binary search for timezone abbreviations and timezone identifier   lookups. (Based on a patch by Nuno Lopes)
BFN
	Added a SG(server_context) NULL check to php_apache_getenv.
Make exec() return FALSE on error as do other drivers.
fix previous patch
update
fixes for non-php objects
one might not have simplexml enabled
fix handling of non-PHP classes (John Coggeshall)
ChangeLog update
fixed oid retrieval.
add test case
- Cache the xml2-config path
fix various "Class entry requested for an object without PHP class" messages when working with non-PHP objects. # Using Z_OBJCE(object)->name is usually bad idea unless you know it's # a pure PHP object
BFN
fix #33491 (crash after extending MySQLi internal class)
fix couple of leaks in MySQLi
Remove "custom" PDDRV sqlstate.
set_charset() is only available in mysql versions > 4.1.12
do not pollute other directories and cleanup after test
ChangeLog update
- bump xml_rpc version
fix for #33474
ChangeLog update
fix build for libxml > 2.6.17
Missing part of the previous patch.
Added PDO_MYSQL_ATTR_USE_BUFFERED_QUERY parameter for pdo_mysql, to toggle usage of buffered queries.
Skip the test, it fails due to missing transaction support.
reverted Ilias changes - added get_warnings methods (forgot to commit the file in my last commit)
Export zend_do_fcall() helper from executor
- fix win32 builds, vc likes to have declarations first
Partial fix for bug #26584 (Class member - array key overflow) It doesn't fix integer overflow problem, but allows null, boolean and double keys in array constants in the same way as in runtime.
ChangeLog update
Likely fix for bug #33140
- OO example
- initial tests
- Add OO interface - some {{{ fixes
Don't really need the ZE2 check since this is in HEAD
fix test
test for derived method name clashes
ChangeLog update
- Back to -dev
- Beta 2
temporary fix to let mysqli extension build, so we can make a release.
- Add +ifdefs to still allow PHP 5.0 builds of PDO # PDO is a PECL extension and at the moment is still meant to compile on # both PHP 5.0 and PHP 5.1.
BFN
Debug backtrace was fixed
Slightly more reliable current path detection.
Skip MySQLi tests if connection could not be established and not using embeded db.
"64M should be enough for everyone." -- Jani, 2005 :)
export zend_vm_set_opcode_handler
- allow to use "yes" and "true" with ini_set() and in commandline (through -d flag) - fix #15854 that was caused by wrong consideration that zend_ini_boolean_displayer_cb() always recieves converted to "0"/"1" values.
added testcase for mysqli_warning class
added testcase for cursors (nested selects)
changed/fixed mysqli_warning class added prefetch support for cursors
build related adjustments. These need to be included in beta 2
BFN
- Never ever add /usr/lib as libpath, even if --with-libdir is used
ChangeLog update
fix tests
- Back to -dev. Guys (n' Girls), give at least 1 hour before you start - complaining about not going back to -dev. I like checking the tarball - before I change it back.
- Take #3 :)
- Partial revert: It does not matter if awk works or not but helps if it does :)
fix test
Remove unnecessary ZEND_FETCH_CLASS together with ZEND_DECLARE_INHERITED_CLASS in case of early binding
- Add new test
ext/soap should use type defined in SoapVar(), if wsdl defines another type
ChangeLog update
fix memleak when connection fails (and we still keep trying)
- Back to -dev
- Beta 2
reorder and prevent memleak: bailout after free()
- Added session.hash_bits_per_character support. (3rd param)   (Changes by: waltzer at autumnweave dot com)
fix #29683 (headers_list() returns empty array)
typo
- Update TODO.
- Make this work on big endian systems too. - Added an additional malloc() check.
Some netware related build issues fixed (patch by: Kamesh Jayachandran <kameshj at fastmail dot fm>
- Added AC_TIMELIB_C_BIGENDIAN # No need to add it to config.m4, it's run in PHP configure.in already. # Only added here so that the  standalone configure.in (to be added later) # can use it.
- Update news with implemented FRs and added test for those FRs.
- Implemented FR #29585 (Support week numbers in strtotime())
- Update README, we require 0.9.8 now.
reorder
fix typo
- No extra spaces before #ifndef
ChangeLog update
- BFN
- BFN
- Output shows false lowercased
- Show true/flase
- Plain path passed to PHP_INSTALL_HEADERS needs to have trailing /
fix PHP_INSTALL_HEADERS() macro when 2 params are used
This is not mysqli, where 5th parameter is port.
Install headers too
- Add new test # In this version we do not need to make the subscripted array a reference. # Thus this implementation is in most cases the ideal implementation.
- Added backward compability wrapper "php_parse_date()". - Changed WDDX extension to use new date parsing code. - Removed all remnants to the old parser. #- I hope that I didn't break the .dsp's...
- Add new test # This does the same as 009 but achieves its goal completely different. It # is easier but makes the array a reference which is not always practical.
- Drop doubled $
- Add new test
- Update tests to reflect current situation # I don't feel like discussing this issue anymore - maybe we need to find # a way of returning proxies to get the requested behavior back - i'll give # it a try for PHP 5.2. So long we'll have to stay with the original # decision that we don't support references at all with ArrayAccess.
revert - now it works again?!
make substr_count() 30% when counting instances of 1 byte long strings.
- Ignore VIM swapfiles.
- Add #20382 to the list, and expand testcase again.
ChangeLog update
ZTS fix.
fix test
reorder + typofix :)
- Allow default timezone to be set with the .ini setting "date.timezone".
- Update NEWS with bugfix happyness. - Update TODO file for ext/date. No known bugs currently.
- Added testcase for bug #28024.
- Expand test cases for bug #32086 and #32555.
BFN
- Updated bundled shtool to version 2.0.2
Added offset & length parameters to substr_count() function.
some more things to do
- E_STRICT shouldn't be on by default on production servers.
- Add another test for bug #20382.
Add note how to build DBA as shared
no trailing dots
- If the ts is smaller than the first transition time, use the last one   in the list. #- This seems consistent with how "zdump" works, although I'm not 100% sure if #  it's correct.
- Added missing .cvsignore file.
ChangeLog update
Make sure $_ENV is populated
- This is no bug.
BFN
test for bug #33389
Added offset parameter to the stream_copy_to_stream() function.
missing entry
Use the new dependency system
No short-tags!
fix for bug #33263 (mysqli_real_escape doesn't work in __construct)
*** empty log message ***
fix test - short_tags not allowed here!
Removed EX(fbc_constructor) (it is no longer needed)
- The incoming TS is GMT... but the hole filler wants local time so we   have to convert it. - Change e-mail address
- Add a couple of test files, which all still fail.
- Simplify code a little.
nuke unused variable
- Rename tl_config.h to timelib_config.h
Use new dependency system
Use the new dependency system
Use the new dependency system
improve error messages when error raised from an internal class (do not hide class name)
add news entry and test for bug #33382
fix bug #33382 (array_reverse() fails after *sort()) no need to MFH - the bug existed only in HEAD
Improved PHP extension loading mechanism with support for module dependencies and conflicts
Improved PHP extension loading mechanism with support for module dependencies and conflicts.
ChangeLog update
Attempt to fix win32 build by creating the missing hader file
- Improve portability. # TODO: The standalone lib needs it's own build stuff, pretty much same as #       Zend has for standalone builds.
- Internal functions/methods can now return by reference
	ifdef'ed the code but not the includes
nuke unused entries
fix typos
this is not an extension dir
- No more memory_limit for running tests
- Added include dir.
- Move strtotime() related testcases to ext/date/tests.
- Rename "datetime.c" and "datetime.h" to "timelib.c" and "timelib.h" to   prevent duplicate header names.
silence notices
typofix
Don't emit the E_STRICT dl-is-deprecated notice on SAPI's where dl() is widely (and safely) used. This allows our test-suite to run in E_STRICT mode.
typo
Allowed return by refrence from internal functions
Don't crash here if there are errors (such as failing to load extensions via php.ini) during startup.
rename to zend_
Compilation warnings
ZEND_UNSET_DIM_OBJ is splitted to ZEND_UNSET_DIM and ZEND_UNSET_OBJ.
export zval getters
- Update maintainers and credits.
USER_OPCODE API is improvet. Implemented ability to dispatch from user handler to internal handler of another opcode.
ChangeLog update
Avoid double-free.
Added test for bug #33056.
WS fix
- This does not have to be egrep here
- Make it compile cleanly with MS VC++ too, which is completely anal in some   cases.
typofix
Show borked tests in the summary
- Commit re-generated parser.
Date will never be compiled as shared so this is not needed
Nuke PHP_ prefix from timelib
Made date obligatory and static
- Hide the "Unexpected character..." message for now.
- Commit fixed .c file with fixed re2c.
- Whitespace and regenerate the .c file with my re2c.
- Rename macro to TIMELIB_TIME_FREE #- Please do not use PHP_ prefixes as this library will also be packaged #  outside of PHP.
ChangeLog update
Export symbols
Touch + manual fix for re2c bug where it forgets {} in static int scan()
Bring PDO_ODBC tests in sync with PDO base tests.
Make it compile on windows
more accurate timing function.
fix VPATH builds + nuked unnecessary lines
Added win32 build file
This test did not fit to the new interactive shell thing
BFN
- Add my new timelib and ext/date. For now only strtotime() makes use of this.
unify .cvsignore files
If the macro exists, use it, otherwise use the Makefile.frag
bzero > memset
Removed old executor
reordered + added msg to configure output for PHP_ZEND_VM
typofix
fix standalone build
ChangeLog update
ZTS fix.
Added bindto socket context option.
Make this usable for header files too
Partial revert: AC_DEFINE / PHP_HAVE_DEF need to be called once only per macro
use PHP_CHECK_PDO_INCLUDES
Allow different things to be done when found / not-found
- Added PHP_CHECK_PDO_INCLUDES macro (caches the result)
ws
added news item for GLOB_ERR fix
MFB: MSVC++ 6.0 doesn't support long long type
Specializer optimization
destroy session after destroying error handle SQLT_CHR is allowed too
ChangeLog update
Removed unused var.
Support for GLOB_ERR so that glob() reports permission problems (Bug #28355)
ChangeLog update
thinko fix (E_COMMIT_AFTER_MIDNIGHT)
Removed bogus fix for bug #28355 (it was dead code anyway)
revert
Another netware fix
regenerated with re2c 0.9.7
- Back to -dev
- b2 (will post it to internals@)
hunting for a bug.  Looks like it might be yet-another-mysterious-shutdown problem.
PDO_ODBC returns strings for all data types. Bring expected output in line.
become a better config.m4 citizen
and the lesson is, test everything before you commit at 2am
ChangeLog update
couple of conceptual errors here
- Back to -dev
- Go with 5.1.0b1
Add some entries that was forgotten
Added test for bug #30162 (it is already fixed but test file was forgotten)
Added test file for bug #31177 (not fixed yet)
typos
Patch from zhao ming sen.
implement the 'request shutdown' hook; this allows us to register UDFs on persistent handles safely. (it is dangerous to keep them registered between requests, as there are 0 guarantees that functions with the same name are even present on the next hit, let alone that the zvals we cache point to the right place.
ChangeLog update
add sqliteCreateAggregate()
finish implementation of sqliteCreateFunction().
initialize type of function
work in progress on UDF. Something is hokey in HEAD, checking it in to try it on another box.
#29689
MF50:  fix #29689 and more private property problems
add test for this TBF bug
disallow abstrace private methods
add --enable-memory-manager switch for win32 too
hmm, backing out this change, as it seems to cause problems with user-space streams and filters (the ZE needs to close them before it blows away the user-space code.
ChangeLog update
USE_ZEND_ALLOC should be defined here too.
Hopefully fixes win32 builds
Added test for bug #32322 (Return values by reference broken( using self::),example singleton instance)
ChangeLog update
ChangeLog update
- It is nice to close the script with ?>..
-Moved --disable-zend-memory-manager where it belongs
- Show "none" when nothing is found
- Added the --disable-zend-memory-manager switch to disable the Zend memory   manager. #- I discussed this with Dmitry today - we found it useful.
- Not sure why this wasn't committed...
- Allow doing --with-mysql --with-mysqli (no mysql libs are bundled atm) - Make sure MYSQL_DIR is empty.
fixed memory leak in bug #28972 ([] operator overflow treatment is incorrect), not the bug itself.
- MF44: Problems with user defined error handler and references
Enabled test for <any>
ChangeLog update
fix build on Solaris
silence warning
test commit
libmonetra-5.0 sync. added m_validateidentifier, which is enabled by default to keep invalid pointer addresses from causing PHP to crash kept compatability with older versions of libmonetra.
Better storage size for output length. # Thanks to Stefan for noticing the problem.
- Regenerate VM files and add warning about regeneration
- MH44: Problems with user defined error handler and wrong usage of references
Added test for bug #32596 (Segfault/Memory Leak by getClass (etc) in __destruct)
- Expose -a as special mode and show whether it is a shell or not
Don't crash when compiled with the zend memory manager disabled.
Avoid double-freeing streams. This can happen because all streams are registered as resources; the engine also tracks them in the open_files global.
ChangeLog update
fixes for #33251
don't screw up the default fd set size when --disable-all is used
- Proper fix for phpize when dealing with PECL
make "nmake install" more verbose.
Add option for placing the big binaries outside of the source tree. I find that having Debug_TS sitting in the source tree makes cvs seem much slower.
tweaks for a recent addition to cygwin
ChangeLog update
__halt_compiler() patch interface
Thought I committed it ages ago...  Anyway, without further delays, the final __halt_compiler() patch
ChangeLog update
nuke crap, end scripts always with ?>
cs + ws
Add skipif, test requires iconv.
nuke duplicate code
Added test for 5.0 specific bug #30394 (Assignment operators yield wrong result with __get/__set)
added new function mysqli_get_charset
[Move from branch] On architectures that support va_copy (specifically x86_64 linux distros), if you use va_list args more than once, you can corrupt memory - you need to use va_copy instead.  man va_copy for details.
ChangeLog update
- Revert previous change in build/libtool.m4 and make sure   the PATH_SEPARATOR check is only done under autoconf 2.13. # fixes also the php-gtk buildconf probs
fix bug #33222 (segfault when CURL handle is closed in a callback). fix segfaults when CURL callback functions throw exception.
We only need LEMON for bundled stuff
fix bug #33214 (odbc_next_result does not signal SQL errors with 2-statement SQL batches). Path by rich at kastle dot com.
- That should have been removed, not commented out.
touch
ChangeLog update
fix typo (see details here: http://news.php.net/php.internals/16350)
Disabled search of recored separator outside of buffer
kill unused var.
ChangeLog update
Reverted wrong fix for bug #30572. Seems the bug was already fixed in other way. But reverted patch produced a lot of valgrind errors, because IS_TMP_VAR operands don't initialize refcount.
Touch
- Only allow changing return ref agnostic when a script method overrides an   internal method (found by dmitry)
ChangeLog update
- Update
typo fix
gracefully handle changes of the parse.y lemon file, process it with lemon if available, else just keep the .c file from CVS not doing so leads to make using its implicit .y->.c rule here and bison doesn't really understand lemon syntax
- Use libtool also for completely static builds
- Changed the PATH_SEPARATOR check to a macro - Made sure we're generating aclocal.m4 in same way with both buildconf   and phpize. # Bug #33177
Removed the empty $bin_src_SCRIPTS (no longer needed), bug #33166
ChangeLog update
- Unify the "configure --help" texts
simplify flex version test
forgot to re-add 1.875 as a valid bison version after testing
bison may be installed under a different executable name, e.g.
avoid code duplication in bison version test
added .cxx extension for C++ for completeness reasons
Added an optional remove old session parameter to session_regenerate_id().
m4 comments start with 'dnl', *not* with '#'
ChangeLog update
- Make zend_do_inheritance ZEND_API
Sync with config.m4 (missing MATCH_LIMIT broke the Win32 build).
ChangeLog update
No need to include ucp.c and ucptypetable.c here.
Upgrade library to version 5.0.
- Make sure EGREP and SED get set early enough.
- Use $SED and $EGREP where possible
ChangeLog update
Do a cache flush if we detect possible cache corruption (same as for PCRE).
- Need to make PDO::__construct() final to prevent SEGV it isn't called 1st
Added array type hinting. (This patch requires full re-make)
- Add new tests
- Make SQLiteDatabase derivable by dropping final tag from class and   making the ctor final to ensure it is being called, which is the problem.
Added scheme validation for parse_url().
ChangeLog update
fix is_object() on non-php objects
Return error on an invalid input to mime_content_type() function.
ChangeLog update
Flush regexp cache if we detect corruption.
- Small fix (found by joerg)
nuked unused header file
nuked file
- Remove unused file
- Add test for deriving PDO
- Add new tests for PDO_FETCH_INTO
make it compile on Win32 (thanks to Sebastian for noticing)
- Moved ingres_ii to PECL
ChangeLog update
revert by Wez's request
- Allows the Ingres extenstion to be built on Linux/UNIX as well as Windows.
fix bug #32810 (fread after tmpfile() reads only 8192 bytes)
fix test
CS fix
Handling responses with Content-Lenght: 0
ChangeLog update
Adjust highlight test.
fix compile warning
fix leak
ChangeLog update
Avoid syntax errors on some operating systems
- fetchSingle() was renamed to fetchColumn()
enabled set_charset for MySQL Versions >= 5.0.6 added testcase for bug #33090
fix for bug #33090 (mysql_prepare doesn't return error)
ChangeLog update
- correct fix for bug #33059 - fix issue in other methods
fix bug #33076 (str_ireplace() incorrectly counts result string length and may cause segfault) add test
Update bundled shtool to 2.0.1 (see also bug #33023)
fix bug #32944 (Disabling session.use_cookies doesn't prevent reading session cookies)
ChangeLog update
Correct handling of the UNSAFE_RAW filter
- Add ability to reference the object itself - Add ability to exchange the refrenced object - Add ArrayObject::getFlags/setFlags and 2nd param to __construct to   control operation modes
- Update tests after correcting internal order of actions
Strict warnings
ChangeLog update
Various compiler warning fixes.
fix for #29890 - part 2
test
fix #29890 - crash when function call fails
revert - seems to be fixed elsewhere
fix #30451  	static properties don't work properly
tests
ChangeLog update
Make unix domain sockets work.
Removed define checks that break the build.
gdImageGifCtx() is always available in bundled lib
As per PDO meeting on PHP|Tropics fetchSingle is being renamed to fetchColumn and now supports specification of the column to retrieve.
ChangeLog update
Unterminated paren group in BETHREADS definition of tsrm_tls_set() macro
Sync with config.m4
fix bugs #32742 (segmentation fault when the stream with a wrapper is not closed), #32171 (Userspace stream wrapper crashes PHP)
ChangeLog update
Allow it build with PHP 5.0.x and up again.
- Add command completion to CLI's -a mode
- Execute both RecursiveIteratorIterator::beginChildren() and endChildren()   on the same level (while the actual child is available).
ChangeLog update
fix bug #29975 (memory leaks when set_error_handler() is used inside error handler)
Added new function: posix_mknod().
patch by Christopher Kings-Lynne, slightly modified
charsets_dir is no longer needed
mysql_set_charset now works version undependent for MySQL 4.1.13 and above
- fixed compile error under windows. Functionality for changing the character set was moved to libmysql (4.1 bk tree - will be merged into 5.0 within the next days). - renamed mysql_set_character_set to mysqli_set_charset
fix NEWS
move math_standard_deviation and math_variance to the stats PECL extension
ChangeLog update
- Make ReflectionObject::hasProperty() recognize dynamically added props
- Add ability to fail silently
fix #33019 (socket errors cause memory leaks in php_strerror()) patch by jwozniak23 at poczta dot onet dot pl
ChangeLog update
fix both win and gcc compile errors
fix gcc-2.95 problems (reported by Adam Maccabee Trachtenberg)
Mark pointers in entity tables as const.
...
add function array_product()
fix inverted logic and thus Bug #27508
add test for bug 27508
ChangeLog update
use & and check for the right value of result_type
fix #32904 (pg_get_notify() ignores result_type parameter)
fix the test too
fix NEWS
rename math_std_dev to math_standard_deviation (the API wasn't published yet)
ws
"<?xml ..." header is not required by SOAP specification
ChangeLog update
after throwing an warning bail out
mysqli won't compile with Zend2 API before 2001 - in these days there was no Zend2
MFB
- We skip tests when the extension is not loaded..in the php.ini
revert pointless patch
also test shared builds
- getlogin() / getgroups() are not necessarily available everywhere
ChangeLog update
this check was not needed
no tabs
Added new function mysqli_set_character_set_name
ChangeLog update
this one needs to be upper..
ws + cs + proto fixes
typofix
- Update
revert this one till we have a better way to inform the user where the truncation has occured
update protos
- Update: class File was renamed to FileObject
- Improved interactive mode of CLI (php -a)
return MYSQLI_DATA_TRUNCATED if data happens to be truncated #the manual has to be updated
return directly
bail out when detecting incorrect number of parameters to be bound.
- Install GD header files
ChangeLog update
Only test stuff if PDO is enabled
cleanup
Check ftp user name for control characters.
fix off-by-one in _php_image_output() and prevent such errors in php_do_open_temporary_file()
initialize values because the call to zend_parse_parameters may not do it
Added max_redirects context option that specifies how many HTTP redirects to follow.
Missing bit from previous patch.
ChangeLog update
<? should die..
reorder
- No need to add NEWS entries for bugs that do NOT exist in any released version of PHP
typofix :)
verbose,order,etc.
fix proto
fixed memleak in mysqli_close fixed bug #32956 (mysqli_bind_result doesn't support MYSQL_TYPE_NULL)
fix for bug #32947 (Incorrect option for mysqli default password)
ChangeLog update
- Update docu
add test
#32924
fix bug #32924:	prepend does not add file to included files
NetWare LibC dlsym works perfectly only thing that each of the extension need to export a symbol with FULL capital prefix.
ChangeLog update
Prevent double free.
- Add another note
- Make line counting work with FileObject::fgetc() - Add a test for FileObject::fgetc() - Update docs
- Change FileObject's line counting to be zero based - Make FileObject implement SeekableIterator - Add tests
- acconfig.h should not be installed. (it is only a template file..)
ChangeLog update
- now stable thanks to Pierre - prep for release
- remove Experimental - add Pierre to Credits - update TODO
- Extend API to support real existance test without the need to add any new   functions or change any behavior
-  Part 2 of #30126: Enhancement for error message for abstract classes
- Part 1 of #30126: Enhancement for error message for abstract classes
fixed div by zero #div by zero is bad...div by zero is bad...bad
add possibility to calculate the standard deviation and the variance on a sample - the formulae are slightly different.
add also math_variance() which uses the same calculation as math_std_dev()
fix division by zero. throw an warning if the array is empty.
FRN
add math_std_dev()
ChangeLog update
- MFB: #32891, init old y positions to non possible values. -1 being used   if the center start a (x,0)
ChangeLog update
prep for release
- Added man pages for "phpize" and "php-config" scripts. (Jakub Vrana)
Silence the warnings about weird characters in this man page
Moved phpextdist to dev/
- No need to iterate through the options twice
ChangeLog update
re2c 0.96 is the one that works (tm)
We do allow 2.0 now too.
Attempt to eliminate seek() prior to every write.
compile fix
multi_query is no more global #thanks Sebastian!
Make sure E_STRICT is set always
typofix
Add auto_globals_jit entry to php.ini-* (bug #29514)
- Make sure E_STRICT is set when expecting Strict errors..
- Unify error_reporting setting + make sure E_STRICT is set when wanted
Added test for bug #30578
ChangeLog update
BFN
e* allocation cannot fail.
add test for bug #32828
int != long
fix #32828 (Throwing exception in output_callback function with ob_start and ob_end_clean leads to segfault)
handle unsupported datatype (OCIBindByName segfaults somewhere in OCI lib when unknown type is provided)
- Added fastcgi.logging php.ini option to be able to disable   logging through the fastcgi connection
consolidate the various tls get/set calls for the different platforms into a single macro, at Andi's request.
ChangeLog update
Allocation checks around persistent allocs that can fail.
Better use zval_ptr_dtor() instead (thanks Andi)
Add three new TSRM api functions:
rename
fix bug #32013(MySQLi bind_result causes fatal error: memory limit reached) #this is a partial fix but it cannot be better. the user has to call #$stmt->store_result() and for a BLOB/MEDIUTEXT (and larger) space will be #allocated as big as the biggest column value.
check should be on host_alias rather than on target_alias, but somehow works on configure generated using autoconf 2.57.
- Made the libxml related stuff to error out if someone does --disable-all   or --disable-libxml. Better than silently just leave the ext out..
MFB (fixing bug 31668)
nuking that file was not very good idea :)
removed debug code.
ChangeLog update
fix
Netware stuff
ChangeLog update
Reorder
Revert. (Nokia is not that important :)
Update
Adding new function tidy_get_opt_doc() to return option documentation at runtime. Thanks to nlopess for the patch
Reverting. Let's not introduce major BC breakage like this without a good reason.
- Added test: For some reason this fails with ZTS mode and "outside-src-tree-build"
When an entry goes to the PHP_5_0 branch, no entry here
oops
fix
-  do not use md5, png signature can change between libpng version    some floating points issue can end to different colors (+/- 1/255)    tests should work again now.
Added T1LIB support on Windows (#32809)
ws
Correct grammar.
ChangeLog update
MFB: zval** not zval*
- Need to copy doc comments correct for properties
ChangeLog update
ws, pval -> zval
- Add new tests
- Change bison check to positive logic and allow bison 2.0
ChangeLog update
fix C++ comments
fix bug #32795
ChangeLog update
php_error() -> php_error_docref().
- Allow using --enable-versioning with any SAPI module # It's only used if the php.sym file exists! # Have fun Sara :)
Expose EXEEXT and use for cli/cgi binaries
Added test for bug #32647
bug => Bug
- Possible fix for bug #32778
add *.php to cvsignore
ChangeLog update
Added support for .cc files in extensions.
another fix for last commit (committed from wrong tree) :(
fixed typo in last commit :(
added support for data truncation (bind_result) for MySQL 5.0.5
space -> tab
Support for element's form and schema's elementFormDefault attributes (qualified/unqualified)
Some tests were fixed
ChangeLog update
- Add ReflectionProperty::getDocComment()
- Never use Z_TYPE* macros on non-zvals.
Removed unused var.
removed unused var.
add INT_MAX and INT_SIZE constants. #64bit machines are getting wider usage and these are needed
MFB
add a test case for Bug #32405 (the previous commit incorporated a fix for it).
- nail down another 64bit problem. this will fix about 14 failing tests   on amd64 (probably other 64 bit arch). - use ulong for this boolean variable, as it was before - throw an warning if offset passed to mysqli_stmt_data_seek is negative
- fixing all "long" into "int" fetching problems (cause memory corruption   on 64 bit) - nail down a problem because of the new MYSQL_TYPE_NEWDECIMAL introduced   in MySQL 5.0+ - Add more info to the autocommit test
No c++ comments in C code
- This is not C++ code
merge from branch: fixes for #32758 and #32759
ChangeLog update
don't null it - let the engine do its magic ;)
merge bug fixes from branch
PHP_OS and PHP_UNAME need to be hardcoded for cross builds
Missing files were added
cursor support for 5.0.4 (STMT_ATTR_CURSOR_TYPE changed to enum)
removed unused vars.
Checks not needed, done by ext/libxml already.
ChangeLog update
- Add more tests
Added missing safe_mode & open_basedir checks.
- Removed unnecessary NEWS entry # There is no need to have this kind of entries in NEWS file # when the problem only exists in CVS for day or two..
- Remove relic
ChangeLog update
method_exists() regression test
retype
- Typo
- Entry for imageconvolution addition
- export imageconvolution to userland, making people happy to do not   use the predefined ones :)
I think this is a cleaner emboss filter.  Less fringing.
ChangeLog update
The emboss and edge detection matrices are swapped
Don't do PDO here if PDO is disabled
Add some more cases
Added test for strval() function
- Use correct type (bug #32720)
Remove include_path support from md5_file/sha1_file again
use streams api for md5_file and sha1_file. Added parameter use_include_path similar to other PHP file functions. Documentation update outstanding
fix various solaris problems by replacing stdio with posix io where possible
ChangeLog update
- Regenerated with re2c 0.9.6 (fixes severe bugs)
- Add support for latest Birdstep
- Rename class File to FileObject # by popular demand
- don't use short tag - detect CLI binary and don't print &lt ;br &lt; in this case
missing header (re2c 0.9.4 built .c file)
Added missing header.
ChangeLog update
Removed unused vars.
disable pg_cmdtuples() too, if there is no pg_affected_rows()
add testcase for bug #30833
ChangeLog update
fix #30833 (array_count_values modifying input array)
fix memory corruption if one on the on_modify handlers errors out
ChangeLog update
Don't truncate the .options file when a database is started without the optional options parameter.
revert the patch, the problem seems to be somewhere else
Converting the usage of the integer based internal commands into MACROS to ease future extensions.
Adding support for a getbulk oriented walk. The getbulk can only be used for SNMPv2c and SNMPv3.
Support for encoding/decoding of private and protected members
ChangeLog update
news
fix memory corruption on 64bit in imagefttext(), domdocument::load() and domdocument::loadxml()
fix proto. return true instead of null
simplify code (no need of local variable - return directly)
- Say in the help too this is the handler module..
Might not be obvious for everyone :)
- This was supposed to be escaped with \
Add more detailed failure msg. (bug #32649)
- Make VC6 happy
Added time_sleep_until() function, which is a high precision mechanism of making a script sleep until specified timestamp.
ChangeLog update
Fold validation into an inlined function per Andi's suggestion
ChangeLog update
- Nuked some PECLed extensions
Removed non-existing sapi/activescript dsp
Missing part of the patch for bug #32589
- Ensure we see all errors. No need for () in return
remove duplicate entry
- Add new test
- Add property_exits()
- No E_ERROR when we just check (where did my 0->1 change go on first commit?)
fix test
- No E_ERROR when we just check, here visibility simply means there is none
- Simplify getting property info and make it an api function
ChangeLog update
Spell "overridden" correctly.
- Cleanup a bit. And make use of shtool mkdir
- Reword the send-report-part a bit. (bug #32624)
- Nuke the code duplication
Bug #32614 - prevent from crahsing with segfault on solaris if fdopen() fails - this fixes NOT the stdio-problem on solaris!
- Added the $PHP_AUTOCONF/$PHP_AUTOHEADER usage to phpize
ChangeLog update
- Not every OS has ldd..
Regenerated with re2c 0.9.4
Keep removed stuff in top..
- Make class_parentS() and class_implements() accepts class names as well
Removed php_check_syntax() function, it never worked properly. For now use shell_exec("php -l script_name") or similar.
- Added optional first parameter to XsltProcessor::registerPHPFunctions to only   allow certain functions to be called from XSLT.
do not try to read after EOF
fix for bug #32282 (segfault in mysqli_fetch_array on 64-bit)
ChangeLog update
remove proto, it's internal func
Added another search patch for magic file (fixes bug #3232).
- Register class File - Remove superflous ; - Stop spl_autoloading on pending exception
- Use correct var name
- Add new test
- Just return FAILURE & allow NULL without emmidiate error
ChangeLog update
Update credits
remove empty lines
Added testcase for bug #30362
MF50: fix backtraces - non-Zend classes have names too
added a server variable PHP_AUTH_DIGEST to support HTTP Digest Authentication.
Bug #32491 (File upload error - unable to create a temporary file) - Changing file upload from stdio to posix
fix #32560 (configure looks for incorrect library - libdb2.so instead of libdb2.a, which is used actually)
- If this is supposed to be the configuration we recommend,   we've been recommending to not use short-open-tag for a long time.   E_STRICT too for 5.1 since it promotes the right ways (tm) to do things. # # This is for 5.1, 5.1, 5.1, 5.1... #
Adding the ability to override the autotools executables used by the buildconf script via the PHP_AUTOCONF and PHP_AUTOHEADER environmental variables.
ChangeLog update
MBFN2B
Add sapi.get_request_time() to NSAPI
actually commit the SOAP interop tests this time.
fix typo
fix output_reset_rewrite_vars() returning false everytime
fix description
ChangeLog update
Partial fix test: It is still possible to use expat libs with ext/xml..
update to support local install, remove -n switch
Make sure php_mbstring.dll is first to getting loaded..(bug #32552)
fix tests
ChangeLog update
add missing file
Use PHP_LIBDIR.
ChangeLog update
- Add RecursiveDirectoryIterator::getSubPathname()
- Add RecursiveDirectoryIterator::getSubPath()
- Make iterator_to_array() accept Traversable
These tests require register_long_arrays=1
fix some skip conditions..
- Bugfix #32521 (apache2handler accidental crashes caused by SPL)
C++ fix
ChangeLog update
Mark more private functions as static.
Updated install instructions from the documentation project (Philip Olson)
Mark private functions as static.
ChangeLog update
fix segfault & buffer overrun when there is no PDO drivers plugged in (patch by su1d@phpclub.net)
ChangeLog update
Proper fix for the memory leak.
update to current bundle ideal
merge in PEAR 1.3.5
- remove "debug" code
- MFB, imagerectangle draws 2x each corners (alpha channel uglyness)
Adding comments to .ini files at philip@php.net's request.
ChangeLog update
Reshufle includes to make it compile on windows
- allow to keep or ignore the transparent color in imagerotate (thx   Ken Coar to report this "bug") - be sure to restore alphablending in imagefill - use zend_parse_parameter in imagerotate
revert copy patch.
ChangeLog update
Use PEAR bundle from the build template
Script that creates PEAR bundle dir for distribution
- Made it possible to build ext/xmlrpc with libxml2
BFN
ChangeLog update
These entries do not belong in NEWS file (internal issues)
- Increment year in copyright notice
(PHP pg_unescape_bytea) Use libpq version of PQunescapeBytea if it exists.
ChangeLog update
Slightly safer code.
- Second part of removing temp solution
- Remove potential bad solution for now # This seemed to be necessary since there were cases where exceptions were # ignored by exit() with the result of a silent exit without showing the # pending exception. Since atm we cannot reproduce it anymore we drop it.
Remove: Has not existed for ages..
- Add new test
ChangeLog update
fix leak when register_long_arrays is off
- Add test case for iconv_mime_encode().
- Add sanity check in iconv_mime_encode(). Leaving the third parameter   unspecified would yield bus error.
Consolidate: call _get_zval_ptr_var() for IS_VAR case in _get_zval_ptr().
windows compatibility fix
- Use a replacement for PQunescapeBytea so that linking against a pre-7.3   libpq is possible.  This is exactly what ext/pgsql currently does.
Allow define connection timeout throught "connection_timeout" option in SoapClient constructor.
- Notices shouldn't be treatedas errors and thus not being conidered to be   converted to exceptions.
- Ensure that ext/pgsql tests work when linked against 7.2 or lower libpq
ChangeLog update
Missing line
- Missing file
clean
- Add Armenian encoding / NLS (patch by Hayk Chamyan)
Added SKIPIF
Addded test for locale aware sort
fix #28803 (enabled debug causes bailout errors with CLI on AIX because of fflush() called on already closed filedescriptor)
- Add function pdo_drivers()
- the driver's key name is not zero terminated, hence we need to either   estrNcpy() it or use the driver struct. - table headers do not support single column mode so change to two cols - there should be only one table header
- Changed to reflect "current practise"
Tweak some #if's to be more orthogonal.
Simplify argument checking code for array_combine().
ChangeLog update
Support for <soap:body> "parts" attribute
Define PHP_ABSTRACT_ME
internal_function->fn_flags is not initialized at this point
Added three new properties to the node: line, column and if it is propreitary or not
ChangeLog update
fix my silly typo
- Add new tests
- Added missing description (thanks jani)
- Add new test
Detect shtool properly when build-dir != php source dir.
- Update
Two of the diagnostic definitions were added in 8.0.  Add appropriate #ifdefs.
ChangeLog update
- More fixes to gracefully act on exception thrown in overload methods
- Update test
- Add new test
less wordy
- We don't need to block those here (works as it works with normal error   overloading)
- Check another incarnation of bug #30266
fix #32373 (segfault in bzopen('/wrong/path'))
- Add missing skipif part
fix build when the pecl module is part of the php source tree
- Interface name was changed
- ext/pgsql was updated
Another oversight - make sure constants related to pg_result_error_field are #if'd as well as the function itself
Add regression tests for pg_transaction_status and pg_result_error_field
Minor oversight in #if for an internal function
oniguruma updated to 3.7.1 and changed UChar to OnigUChar.
Added several new functions to support the PostgreSQL v3 protocol introduced in PostgreSQL 7.4.
ChangeLog update
Added config.w32 (modified version, original by: Grant.Croker at ca dot com)
- Readd revised version of Jani's fix:   'errors with -d having a check for invalid ini entries' - Add -v for verbose mode
Revert bad idea. (no more error for invalid -d options)
revert
doc should not be freed here, as it is used later in the code path.
update to Archive_Tar 1.3.1
ChangeLog update
fix typo in error message
Silence a warning here on systems where off_t is a long long.
- Made CLI option -d output error and exit if an non-existing (or unmodifyable) entry is passed
export php_dl to fix windows cli build
Removed unused DEFS subst
Revert bad fix
- ZTS fixes #- Andrei, it would be nice if you could test ZTS builds too before you #  commit...
ChangeLog update
Build fixes
Adding SNMPv2 community based (i.e. protocol version) functions.
- Remove these relics from era when TSRM was optional.
don't call rshutdown twice for dl()'d modules. Spotted by Andrei.
ChangeLog update
fix shutdown so that dl()'d modules are unloaded after all the dtors have been called.
Make it possible to load shared extensions from command line via -dextension= mechanism.
remove debuging code
I'm a PECL citizen; even though I am HEAD of pecl/sqlite, don't assume that I am being built against HEAD of php-src.
ChangeLog update
this needs updating
Clarify logic
- Back to stone-age
ws
ChangeLog update
*sigh*
- Turn off incorrect case folding to let test over.
- Move stuff that belongs in Makefile into Makefile.frag
- Update tests
Do not convert ZEND_HANDLE_FP to ZEND_HANDLE_STREAM but allow using reader/closer on it
- More exact signatures (even though complete correct not possible atm)
credits to Ilia
- Actually this is a much better error decription
- Bugfix #32290
ChangeLog update
- Update docu
- Allow to hook into RecursiveIteratorIterator's child handling - Better=faster function caching for RecursiveIteratorIterator - Check for exceptions and fix check for illegal return values - Add UnexpectedValueException - Add docu
- If an exception is pending we don't bail out but show the unhandled exception
A more performance friendly version of Andrey's patch.
FRN
added an optional third parameter to str_word_count(), which is used as a list of characters which are considerd "is_alpha()". Thus V14GR4 can be extracted as one word if the user supplies "14" as charlist. FR #31560 # Nuno, are you wishing to document this one too? :)
it's 2005 already # and we're all too lazy to go through and update all the copyright years :)
- type is either 1 or 2 if second parameter is set. if not set then type is 0. - use the lvalue for the second rvalue
add a test file
add test #forgot to add this one
FR 32275 - fifth parameter to preg_replace() to count number of replaces made. #it would be nice if someone of the doc team documents it. thanks!
ChangeLog update
show list of PDO drivers in phpinfo. Highlight a possible problem area; iterator leaks when used in foreach(), at least with sqlite2 driver.
build pdo statically on win32, so sqlite2 driver will build. Alternatively, we could build sqlite as a shared ext, but that has more of an impact to people upgrading.
build sqlite2 pdo driver on win32
- Add tests
- Errcode might be empty
Implement a PDO driver for sqlite 2
- Add new test
- Do not touch return_valu's refcount or is_ref
- Do not touch return_valu's refcount or is_ref
ChangeLog update
- Irrelevant
- Don't touch refcount/is_ref
- Times have changed - php 5 relevant version now
- Do not touch return_valu's refcount or is_ref
- Allow to work under php 5
- Cosmetics
- Do not touch return_valu's refcount or is_ref
Final set of fixes for bug #27633.
require libxml 2.6.0 or higher
add workaround for libxml bug when using next() method remove some no longer needed windows specific code
- Update tests
Oops, revert.
- Rename test script
- Make this work under 5
- Bugfix #28442
Add tests for firebird.
Add NOT NULL to create so the tests work with Firebird too.
- #31562 2nd part
ChangeLog update
- Wrong order of action - touch
fix compile warnings
More tests.
re-enable deps for HEAD
prep for pecl release
update extension version
prep for release
fix build
update in readiness for release
"thou shalt not throw exceptions except in really exceptional circumstances."
Add one more test.
prep package file for release. fix my favourite typo. fix compile warnings
Add test 020 and 021 for PDO_SQLite.
Since in_array is case sensitive we need to convert the names to lowercase otherwise it won't run tests for extensions where the case of the name differ from the extension name.
Add more tests.
Remove old test.
More line count fixes
Add documentation
No double line counting
probably fix for ? placeholders not working with oci
ChangeLog update
Add description for interface Serializeable
Add test for PDOStatement::getColumnMeta(). Note that PDO_ODBC test fails as it is currently unimplemented.
Add more tests.
This makes more sense. (Someone might actually use php_error_docref0() :)
- This was not needed (said Marcus)
Improve the performance of htmlspecialchars_decode() by 20-30%.
Add simple tests for insert through PDO::prepare/PDOStatement::execute. Tests both question mark placeholders and named parameters.
Add a test for PDOStatement::columnCount().
update
reorder
ChangeLog update
- Add/Correct parameter info and protos
- Add new tests
- Add new tests
- Update signature
- Add some more news
- Add test
- New Interface Serializeable - Change signature of unserialize() callback to ease inheritance and   support code reuse of handlers
- Add more methods - Avoid exceptions in iterator access - Do not read in rewind8) or next() instead read in iteration if neccessary - Correctly count line numer on reading
- Length needs to be positive
- Make maic qutes runtime work if length is specified too
- Delay memory allocation, speeds up faiure case
Added htmlspecialchars_decode() function for fast conversion from htmlspecialchars() generated entities back to characters.
- Add updated description
Revert // </script> patch
Add test 017.
- Add new test
- Add new tests
ChangeLog update
- In File::fgetcsv() use max length from object
- Add File object
- Allow length 0 as default (e.g. skip param)
- Use new objects
- Add intefaces from zend_interface.h as macros
- Actuall the comments were correct
- Bugfix #28840 __destruct of a class that extends mysqli not called
Make html_entity_decode() 15-20% faster by avoiding pointless string duplication.
- Moved ext/fam and ext/mnogosearch to PECL
ChangeLog update
Usually a good idea to have .cvsignore around.
Test PDO::beginTransaction and PDO::rollBack.
Opps.
Missed this one...
- Negative seeking is not supported
ChangeLog update
Starting tests....
Check that object can actually return a class entry. I need this for a class-entry-less helper objects that should not be present in the class table.
use php streams for uri I/O under PHP 4
Do not set apache stuff if not building apache
This did not work for some reason, better revert it
Add missing subst
ChangeLog update
One more PDO_ODBC test (tested with DB2 V8.2).
Next three tests for PDO_ODBC (tested with DB2 V8.2).
Next batch of tests for PDO_ODBC (tested against DB2 V8.2).
Begin porting standard PDO tests to PDO_ODBC, testing against DB2.
- Rename test 14 to 16 (which is a new one) and MFB 14 again
New egg
ChangeLog update
- Finish work on spl_autoload*()
- Let spl_autoload_extensions() always return what's registered
- Add testcases for bug #32001
BFN
ChangeLog update
- Update .cvsignore
- Add new functions
- Update docu
- Support statuc methods/functions
Add Oracle tests for PDO.
NetWare allows directory seperator as \ and /
Handle last or broken JP2 boxes correctly.
fix SIGFPE in gmp_powm(), gmp_sqrt() & gmp_sqrtrem() when using negative values do not allow negative value to be passed to gmp_fact()
- MFB
- Need to store class entry
update
ws
touch
ChangeLog update
- Change comment: Syntax highlighter uses <span> instead of <font>
- Reserve some bits for flags
Added notes about ignore_user_abort to php.ini*
- Need to drop ce until engine gets fixed
- Add support for methods dynamically added through object handlers
- Changing handler table definitively results in SEGVs
reorder
This way around for correct error messages
Drop invalid arrays
If pdo is disabled, skip all the pdo extensions.
- WS
- create LIBXML_VERSION and LIBXML_DOTTED_VERSION constants
build bundled sqlite on win32
juggle around a bit; commit generated file
ChangeLog update
fix for PECL Bug #3452
- Add tests
- Disable direct serializing for PHP 5.0
- Allow default fetch mode to contain fetch flags
- Add new test
- Add some fetch column related capailities - Add direct (classtype based) unserializing capabilities
- Add new test
- If silence if wanted we do not error out
- These must be initailized
fully distinguish between database and statement level errors
Add a comment to remind me to have a look at this at some point.
- Update method_exists to new handlers and allow first parameter as string
cs fix (really annoying :)
use fetch_fields only once and remember the result
- Cache the version check results # ..and prepare for --enable-developer-mode
changed the error checks on result set retrieval UPDATEs not modifying anything are not actually bugs
no need to check for execution status, always free a result set if there is one
just to be sure ...
cols
CS / whitespace
use auto generated error -> state mappings
line endings
error code mapping (generated from mysql 5 sql_state.h file using the get_error_codes.php script)
fix typo
initial checkin
Enum filters in phpinfo()
upgrade bundled sqlite to sqlite 3.1.3
ChangeLog update
fix comma
Alan: moved your fields away, but reserved you a pointer.
*cough*
and the generated file
fix for PECL #3545
fix line endings
fix broken line endings
let the test-suite run from an alternate build dir
- Make detection work for macros
- Simplify
ChangeLog update
use 1.3.5
Allow arbitrary files to be added to distro with ADD_DIST_FILE(filename)
- Prepare for db1.85 emulation with db3
Added .reg files to the disto (were added manually)
- Add support for db1 through emulation # Most probably db4 requires a slightly different detection since functions # are macros which most probably doesn't work with current configure check.
FreeTDS does not have support for DBTEXTLIMIT
Kill warnings. There should be no need for this flag as it's already defined in libxml headers.
- Align
fix bug preventing from building oci8 as shared module (patch by stanislav dot voroniy at portavita dot nl)
fix for bug #31939
changing the windows style path seperator in netinet\in.h to netinet/in.h
time.h is available in NetWare LibC. path sperator has been changed from \ to / while including netware\sendmail_nw.h
ChangeLog update
- Change to enable (synch with unix build system)
Added --enable-debug-pack which will create a zip file with *.pdb debug symbol files. Could be used to allow windows users to use free Microsoft debugging tools to generate useful backtraces.
Offical zip files have -Win32 suffix
- Little speed up
- This must be == 1
- Make one line comments work the same with <script ...> </script> as with - other tags. This will break scripts that have whitespace at the end - of the closing tag </script    > but this is barely used as it is - and I doubt ppl used whitespace. (patch by Jani)
- cross-compile fix
- This part of the patch was right
- Restructured and added a few comments here and there. - Made macros of couple of tests previously littering configure.in   (e.g. PHP_PROG_AWK, PHP_PROG_LEX, PHP_PROG_BISON..) - Moved all PHP_SUBST() calls into their respective macros.   (no point adding empty entries in Makefile if macro is not used)
- Generated with re2c 0.9.4
- we do not use any global
- we do not need this function anymore
- revert previous commit, use libxml version to enable or not a function   (safer) - add xmlwriter_flush, flush the buffer, works with both file and mem   buffer, BC kept - use ifdef for the function implementation (Rob, Pierre)
fix typo
- Need zend_Compile.h for struct _zend_arg_info  definiton (thanks to Joe Orton)
ChangeLog update
- Missed during last committs somehow
- Prevent superflous memory allocation
- Drop driver name from generic tests and reserve those names for driver   specific tests. # Well a little design correction
Additional safety checks. # More to follow
- Delay ctor call so that it can overwrite everything and the data can   already be accessed from the ctor.
- Checks for older versions of libxml2
- Slightly redesign # More to follow, explanation follows at more public place
Filter skeleton code.  No actual filters yet.
Increase maximum mmapable file size to 2mb from 1mb.
Correcting bounds check before someone uses this code
Added search for libfbclient
- Synch with the latest checkouts.  (include fix by Joe Orton. Thanks.)
fix libxml versions for comments
Custom object serializer infrastructure - PHP implementation # The detailed announce on the list will follow
Custom object serializer infrastructure # The detailed announce on the list will follow
Ignore generated files.
NetWare can make use of Autoconf generated header file
NetWare LibC has mkstemp implementation
NetWare can make use autoconf generated header file
NetWare LibC has pwd.h
Hack the planet
ChangeLog update
- Update docu
- Use PHP not C semantics
- Add new tests
- Allow to convert Traversable into Aggregate
- Allow to convert traversable into Iterator
- Add new tests
- Reorganize ctor_args handling (fixes some bugs)
- Show that PDOStatement implements Traversable
- Make ctor args optional
- Need to also revert operator
- Put this back in (forgot to revert)
- Revert signature of PDO:prepare()   old: proto object PDO::prepare(string statment [, array driver_options [, string classname ]])   now: proto object PDO::prepare(string statment [, array options])   param 'classname' and and 'ctor_args' are now set through options   using index PDO_ATTR_STATEMENT_CLASS - Change all deriver_options parameters to 'options' to reflect the fact   that they may contain statement as well as driver specific flags
- Allow to derive PDOStatement - Verify fetch modes - Add last fetch mode PDO_FETCH_FUNC (only valid inside fetchAll()) that   allows to completley customize the way data is treated on the fly
- We cannot provide this fallback becuase it requires zend_object ptr's. # Found that out after discussing with Stas. As a consequence still every # extension that provides specialised class types is responsible for # calling its __destruct. This is currently not done for several exts.
- Force calling of dtors unless otherwise specified (fixes several __destruct bugs)
- Call dtor
- Update libmbfl (fixes bug #32063).
NetWare can include autoconf generated config headers
- ifdef all (protos and functions) and using the correct version - fix protos ending - ws
NetWare can make use of the configure script generated header file.
NetWare can use Autoconf based build system.
- Silly typo.
ChangeLog update
Nuke unused variables when PCRE is not compiled in
Remove the useless TSRM_FETCH calls
- Add new test
- Show warnings
"SET SESSION" is not supported by MySQL 3.23, as session is the default scope for SET anyway we can drop the SESSION specifier (PECL Bug #3470)
- examples usage, initial commit
- BFN
- WS fix.
- Add missing entry.
- add xmlTextWriterStartComment and xmlTextWriterEndComment support
NetWare LibC has lstat implementation
NetWare can make use of autogenerated config header file
NetWare has pthreads implementation
NetWare can use the tsrm_config.h
NetWare LibC has a lstat implementation
In NetWare LibC WTERMSIG is avaliable as WIFTERMSIG
NetWare LibC has pwd.h. Removed unwanted extern basic_globals_id declaration for Netware.
NetWare has pwd.h and removed unwanted check on NEW_LIBC while including param.h
NetWare LibC has pwd.h
In NetWare statfs f_bavail member is known as f_bfree
- Add testcases for bug #28220 and #30549.
ChangeLog update
fix for PECL bug #3529
fix for PECL bug 3530
- zend_bool for boolean arg
- Forgot to add this one.
- Update libmbfl (fixes bug #30549 and #31911). - Update oniguruma to 3.7.0
use new error handling when not throwing exceptions
add function to allow extensions to use new error handling if set by user
- Shutup notices
- Add tests
- Change tests to use ' instead of " for string values becuase that is   working for more SQL dialects.
- Forgot to change extension name
- int is not zend_bool, fixed indented output
Simplify Code.
- Add tests
- Missed that file in last commit
- Attempt at an unified test suite
- Add test
- Add fetch flag PDO_FETCH_CLASSTYPE
- Update tests
- Only call the ctor once
- Bump API
- Call ctor after initializing the props like regular db exts do
- Update test
- Need to specify class_entry in PDO_FETCH_CLASS mode
ChangeLog update
- Add test
- Add test
- Add fetch mode PDO_FETCH_UNIQUE
- Simplify
- Add PDO_FETCH_GROUP test
- Add PDO_FETCH_GROUP to fetchAll()
- Update/Add tests
- Add full PDO_FETCH_CLASS capabilities to fetchAll()
- Default to stdClass in PDO_FETCH_CLASS mode if no classname is given
- Add first tests
fixed #31987 zend-multibyte in ZTS.
- Regroup and add a test
ChangeLog update
add this note.
prep for release
Fragment must have associated document to append xml otherwise it is read-only
Update for pending PEAR release.
ChangeLog update
Improved search paths.
- A little optimization to prevent problems when trying to reimplement an   interface inherited from an interfaces that was just implemented......
- No C++ ruleZ here
- Actually we must do this in two steps: 1st resize the table and set all   interfaces, 2nd implement the interfaces
- Incrementation is done elsewhere
Declare error_mapping array as static and more const.
NetWare LibC has pwd.h
NetWare libc has pwd.h
George too
ran ./scripts/dev/credits to update credits to reflect recent removals and additions.
- Compile fix for systems without int32_t typedef
ChangeLog update
- Add version information
- For now we need the simple way
PHP_WIN32 is defined or not defined.
use a number here, fixes PECL #3493
ChangeLog update
- SQLite depends on SPL if it is present - Add SQLiteResult::count() - SQLiteResult implements Countable if present
Really disable zend multibyte by default. mbstring is using #ifdef all over the place so defining to '0' doesn't help much
- Applied some patches to fix issues with e.g. ia_64 and s390
No tabs here
ChangeLog update
Missing .libs entry
Prune uploaded file names to \ on all OSes, read comments for explanation.
- More sock->error resets
ws fix
Added pg_field_type_oid() function
Added missing defines (#31751)
- Removed duplicate error + reset error in new sockets
- Disallow illegal class names (.c part)
- Disallow illegal class names
experimental hooks for alan. Off limits to everyone else... pretend they are not there :)
add markers for nice vim foldings
free errmsg & prevent leaks
fix indentation and add check for PDO includes
NetWare Libc has php.h so no need of having netware specific block here
Nuke non-existing ini option
Nuke unused code
ChangeLog update
Simplify
Allow pdo to be statically compiled in, while modules remain dynamic
fix pdo_mssql.dll build
- Be more gracious in reflection API
fix snaps
- Little code reordering
- Drop unneccessary rinit/rshutown,mshutdown - Add protos
- Expand tests to have it work inside PHP 5.0
- Missing $Id$ tags
Set auto-commit after establishing the connection, otherwise we have a crash.
- In fetch mode PDO_FETCH_CLASS handle constructor args - Add PDOStatement::fetchObject
- Use runtimeException as base if present (synch with other dbs)
no need to check for all functions of a group, added check for prepared statement functions
- Rename
- Add new test
added --enable-zend-multibute for win32
MFB_4_3: cvs diff -r1.84.2.5 -r1.84.2.6 php_session.h
fix aclocal "underquoted argument" warnings
fix aclocal warning (newer versions are more strict about this)
add function existance check
tidy up error case
prep for release
zts
autocommit flag gets set always by PDO before invoking this method; we should unconditionally inspect it here.
commit generated version of the .re
implement mapping of :name to ? parameters for drivers that only support ? placeholders. The current restriction is that you may not use the same named parameter more than one in a given query, as there is a danger of scary things happen with the zval if it gets bound multiple times.
typo-fix error message
Correct the pdo header search order
it's only an error in emulation mode; rewrite happens in prepare, which happens before bindParam
Do not shout :)
same fix here
correct backwards logic
Probably fix pecl vs bundled-shared build
try to handle OSX issues more gracefully
ChangeLog update
possible fix for snaps box
Unix line endings
set username && password only if they were specified
autocommit setting done right
added MySQL transaction support
DOS -> Unix line endings
Simplify code and fix compiler warning.
Updated version without compiler warnings.
- Add new test
Missed one place..
This was not good idea.
Remove unused set_h_errno
- Bugfix #30682 (autoconversion from false/true to 0/1 missing in case of   static property default value)
prep for release
ChangeLog update
- Cleanup foreach handling
typo
Revert previous patch
ChangeLog update
update in anticipation of a release later tonight
fix segfault when retval_ptr is empty - such as when exception thrown
test case for Bug #30266
hm.. fix #28324 _properly_
fix bug #28324 (HTTP_SESSION_VARS appear when register_long_arrays is Off)
initial cut of new error handling
- fix #30745 and #31853 (php-bugs at demark dot org, pierre)
Removed unused vars.
prep for release
prep for release
only do this magic on non-win32 platforms
ChangeLog update
rename ancient method
change return value from false to true, when a statement was executed with warnings
Check for warnings and return the warning texts
Touch file.
kill unused var
remove unused vars.
cosmetic changes
proper fix for PECL Bug #3412
update with changes
keep a log here for now
Expose the quoter method of the driver as PDO::quote(). Closes PECL Bug #3393
typo fix
hope it works!
disable dep
disable dep for pecl release
prep for release
prep for possible release
update ready for release. Disable dependency macro for compatibility with existing PHP 5.0.x releases.
be realistic...
update ready for release # includes big hack to help guide people into running "make install" so # that the headers get installed; works around a pear bug.
ChangeLog update
- Complement for Jani's fix. Likely fix the iconv issue.
fix typo
- Initial Observer implementation
- Update to 2005
- Actually these are private
Removed pointless operations/declarations.
Added optional maxlen parameter to file_get_contents().
move ext/cpdf to PECL
Don't need MSHUTDOWN either here
ChangeLog update
Get rid of more useless RINIT/RSHUTDOWN calls
No reason to call empty RINIT, RSHUTDOWN and MSHUTDOWN functions here
- Add missing '?>'
foreash($a as $key => $val) optimization Removed temorary array creation on each iteration.
- Remove part of the cleanup which causes a problem with unnormal code   like tests/lang/040.phpt # However there is a memleak introduced somewhen after august 04 for such # code now, 5.0 and 4.3 are fine though.
- Add new test
fix leaks on shutdown fix leaks appearing when trying to open several "databases"
a working implementation of LOB input parameters for ODBC. however: when sending in a string from the script, we get a 1 byte overflow of the pdo parameter structure... Need to install valgrind on the test box
This might allow piecewise sending of LOB data for input parameters.
ChangeLog update
update
update for input/output parameters change
Implement input/output parameters
add input/output parameter type flag
and the generated file
handle input LOBs (which are passed as streams) in bound parameter emulation. Update error handling.
fix pointer indirection (and thus leak)
centralize this define
hmmm
Correct fix for #28804
even less noise
update for api changes
Avoid bug where stream_copy_to_stream() call for precisely 2000000 bytes would result in entire resource being copied. The mmap brake is already present inside mmap_range() and is set to 1MB.
support sucking data from streams in file_put_contents()
less noise
Adjust for the new get_col api
update for api changes
make configure smarter. Update for new get_col() signature
add a caller_frees parameter to get_col() to allow drivers that need to allocate data on demand to do so without worrying about cleaning it up.
add an open mode for the memory streams that allows the stream to take ownership of the passed-in buffer
better handling of pdo-level errors
touch again
update todo
support getting some more attributes
this one too
handle some generic attributes here
This will probably fix PECL Bug #3273
touch file
- Made error handler not output anything if error was not in error_reporting() mask
- Initial release # Used for being able to run .phpt-files in a webserver environment # Incomplete and pretty basic but serves its purpose ATM
- Prefixed all temporary names with "phpt_"
- Initial release # Works perfectly with php-cli
- "Unified" test name
ChangeLog update
Finalized pgsql LOB support using native pgsql bytea type. If paramater is bound with type PDO_PARAM_LOB the quoter function gets a hint that specific LOB type quoting should be used:
Don't segault when we have placeholders but no bound params
Decode pgsql LOB objects (bytea type) on fetch
Return lobs as strings for now
update separately
pass param type to quoter functions
Removed unused variebles. Return OID as int.
- Cleanup foreach statement
fix for bug #29329
ChangeLog update
fix test
added some missing zend_[declare|update]_property_...() convenience functions for bool, double and binary safe string data
Get OID of the last inserted row
ChangeLog update
Proper fix for bug #31796 .
Use the created connection string.
cleanup
ws fix
ChangeLog update
Removing this file has been long due... API's and functionality are stable.
pecl movement
- Moved ext/w32api to PECL.
PECL
- Moved ext/yp to PECL.
NEWS
- Moved ext/dio to PECL.
fix memory leak if function call fails
test for Bug #31720
ChangeLog update
test for eval debug_backtrace bug
NetWare has a compliant pthread implementation
Final version of filename upload handling.
ChangeLog update
- Add ReclectionClass:hasProperty(), ReflectionClass::hasConstant()   to complete api (johannes@php.net)
fix segfault when failed to open magic file
Empty "detail" was removed from SoapFault object.
ChangeLog update
ChangeLog update
fixed a bug in mysql_affected_rows and mysql_stmt_affected_rows in case affected_rows function returns (my_ulonglong) -1 for errors. (Thanks to Antony Dovgal for reporting this bug)
improve CS & error messages
MFB: explain why ftok() failed
Memory leak was fixed
MFB: fix #31732
change return type from NULL to FALSE when parameter parsing failed (as was requested by Ilia)
ChangeLog update
MFB: fix posix_getsid() & posix_getpgid()
Hack to fix crash caused by FBCAccess not returning errors when creating an index that exists in the database.
MFB: fix leak in mysqli_fetch_array()
fix for bug #31710 (return value for mysql_rollback is reverted) fixed also same behaviour for mysql_commit and mysql_autocommit
ChangeLog update
MFB: fix segfault when invalid field offset is passed to mysqli_fetch_field_direct()
- Move tests to proper location now that the tested classes are hardcoded
- Unify
- Add new test
- Know whether ew refer to an external array (is_ref) or not
- There is no --with-apache2, only apxs2
ChangeLog update
Don't depend on empty_string.
- Proto fix
check body for NULL before using and prevent segfaults
New versions of glibc support a RTLD_DEEPBIND flag to dlopen.  The effect of this flag when loading a "foo.so" with undefined symbols is that the search that symbol starts at foo.so and its dependencies *before* the loading process' global symbol table.
- Return of the automake requirement. # Unfortunately we can't control what macros are used by the 3rd party # extensions so..
- Bugfix #26229 (getIterator() segfaults when it returns arrays or scalars)
- Use correct freeing (thx Dmitry)
ChangeLog update
massage
Use multibyte specific code for handling files and generic basename based code in all other instances.
- Unify
- Bugfix #31346
- Update
- Add new test
- bugfix 31348
- Second and last part of #30725 fix
- Allow getIterator() to fail
- Add new test
- mysqli/sqlite changes
- Synch with MYSQLi extension and use RuntimeException as base for   SQLiteException if SPL is present.
- Revert irrelevant part.
add test
fix msg_recieve() returning TRUE instead of FALSE when unserialize failed (patch by Andrey Hristov)
ChangeLog update
make this the right size...
- A bug in mnogosearch module in ispell loading code was fixed
Add support for fetching meta data
Store pgsql_type, intval and boolav per column
ChangeLog update
Remove debug stuff
Support for native nulls, bools and ints
- Remove also autom4te.cache dir with phpize --clean
- Compile fix for systems without uint32_t typedef
- Update after fixing it
 _ Add test for bug 31651
Generate files needed for php5ts.dll build
- Two new API calls for Derick (retreive CV name and value) by Dmitry
ChangeLog update
- Typofix + removed unnecessary unsets caused by it
MFB (bugfix for 24851)
Correctly initialize ZVAL
destruct return_value
picky picky. Lets make those OUTPUT rather than INPUT-OUTPUT. We need some flag from the user if they want that.
Allow static build (better detection of PDO headers). Copy error code into driver code, so PDO can handle it correctly. Less leaks
fix leak
hrmm.  Really really really really touch the timestamp in CVS to avoid crappy makefile annoyance.
make use of the query rewriter (even though it doesn't do anything yet)
update
fix encoding nastiness that snuck in from the copy-n-paste of error code descriptions from a web page.
and check in the generated c file later, to avoid remaking it in fresh checkouts.
Revise query parser so that it can rewrite from one bind syntax to another. Expose it as PDO_API.  No drivers utilize this feature yet.
ChangeLog update
Eliminate unused parameter
fix backslash
fix bug #31623 (OCILogin does not support password grace period)
fix error message
fix segfault in imap_sort() - it segfaults when options is less than 0. it looks like c-client bug, but we still need a workaround. also, convert_to_string search criteria.
Support for HTTP error codes
Add support for the 'official' build machine layout
fix segfault in imap_headerinfo() when fromlength or subjectlength are less than 0 + fix protos
fix typos in error messages
fix typos in error messages & resource name
Support for HTTPS with digital certificates.
Juggle/enhance mssql library detection
Generate pdo_oci.dll for modern SDKs and pdo_oci8.dll for ye-olde oci805 libs.
generate dblib and mssql variants in the same build
A couple more adjustments for building multiple output variants of the same extension source.
- Revert the weird change of ZEND_STRS() macro and use the correct   ZEND_STRL() macro. # ZEND_STRS was changed to be same as ZEND_STRL..someone on crack? :)
ChangeLog update
- Add --with-libdir to phpized builds too
- Removed obsolete AC_PROG_RANLIB (AC_PROG_LIBTOOL does it) - configure --help output cleanup for --with-libdir
Added --debug option to buildconf
Revert the multiple autoconf versions patch
Stricter cc header check.
- Add the patched libtool.m4 from snaps so that Jani can play with it.
Take a stab at implementing out parameters for odbc
don't propogate an unspecified length to the driver. Drivers will used a 0 length as a hint that the parameter is an in-out or out parameter.
add dep
allow static linkage. Avoid segv when no username is passed
leak/segv less
ChangeLog update
*compile before commit * *compile before commit * *compile before commit *
implement nextRowset for ODBC # this might even work first time
proto bool PDOStatement::nextRowset()
let it compile again
- ldap_start_tls() requires ldapv3 protocol -> force it
Set the MSSQL_VERSION to FreeTDS when that lib is used
Rename php_freetds.dll to php_dblib.dll (still using the freetds libs). Allow the build of both versions in the same process
Allow the build system to generate multiple extensions from the same extension directory
add checks for libs & headers required by IBM DB2
- Make sure FD_CLOEXEC is always defined.
fix bug #30430 (odbc_next_result() doesn't bind values and that results in segfault) fix protos
- Sanitize output
Add test for bug #31402
Touch the generated file.
Add test case for bug #30726.
Make this compile with the generic ntwdblib from Microsoft
use the static dblib.lib to avoid the need for extra dll's
add --with-freetds option to win32 build. TODO make it work when both mssql and freetds is included or bail out with an error
make the mssql extension work with freetds on win32
make the mssql extension work with freetds on win32
Allow drivers to select bind emulation on a per statement basis
doh
nice and fluffy error handling
ChangeLog update
remove error and hook up rowCount
Tidy up driver specific method handling
fix weird DB2 issue: DB2's SQLDataSources() returns _max available_ length of result string instead of _real_ length and that results in strings a-la "\0                  "
- Added some sanity checks by changing to the parameter parsing API
fix protos (by Mehdi Achour )
fix leak appearing when odbc_errormsg() got invalid resource
don't raise errors for the no-error case
tidy up a few things
ChangeLog update
Missing 1
Add a PDO driver for Sybase style DB-lib (including MS SQL). Only the basics are here right now.
Added standard emacs and vim modelines
ChangeLog update
and use it...
finally use what we calculated
Restore unserialize() speed
CS fix
ws fix
ChangeLog update
- Unload on MAC OS X (shouldn't be a reason not to)
Restore behavior of $str["str"]. (Now $str["str"] is equivalent to $str[0] again)
ChangeLog update
fix compile. Someone with firebird needs to sit down and give this extension some love
Additional fix for fix of bug #29883
Add configure support for Oracle InstantClient SDK
Add support for ODBCRouter
Take a blind stab at implementing scrollable cursors for pgsql. We allocate a unique cursor name for each statement, so that we don't interfere with other open statement handles on the same dbh.
ChangeLog update
detect funky kerberos deps that chain on from openssl deps on RH distros
stub out scrollable cursors here too
stub out scrollable cursors
stub out scrollable cursor change
be aware of scrollable cursors; sqlite doesn't support them
touch generated file to avoid implicit yacc rule from eating it
Remove bogus scroll attribute. Expose cursor constants to the script
make scrollable cursors consistent with odbc; removing bogus attribute
Support scrollable cursors
Add support for scrollable cursors. Enable PDO_ATTR_PREFETCH and default it to 100Kb of prefetch buffer.
API support for scrollable cursors
add theoretical support for returning ints as ints and bools as bools. individual drivers need to support returning data in these formats.
Add configure support for ODBCRouter and generic ODBC libs.
ChangeLog update
- Test renaming
- BFN
revert fix for bug #28817 - fix is bad
- Added check for IMAP 2005 version
update for recent adjustments
ChangeLog update
fix Konstantin's last name Chugeuv -> Chuguev
update test to include negative floats as strings too
Missing $Id$ tag
- Update credits
- Compressed 2004 Changelog
- Added missing header sections.
Don't scribble over the stack; icc compiler warning fix from dcb314@hotmail.com via Red Hat bugzilla #143795.
- Bugfix #31342: SQLite OO interface with Exceptions (hugo dot pl at gmail dot com)
- Implement iterator interface in sqlite
ChangeLog update
- Added AC_ZEND_C_BIGENDIAN macro (as requested by Andi)
- The pic/no-pic patch by Joe Orton.
add skipif section
add test for bug #31454
efree(name)
fix bug #31454 (session_set_save_handler crashes PHP when supplied non-existent object ref)
MFB: - Rationalize code a bit
ChangeLog update
Remove done stuff
fixed compile bug under Windows (libmysql.def currently doesn't export mysql_server_init/end). Thanks to Sebastian Bergmann for reporting
Unnecesary check was removed
- Add new test
- Unify
- Remove double destroy (which is definitively wrong and prevents php from   normal execution).
NN
ChangeLog update
remove duplicated include
Argh.. Committed old patch. Add safe_mode check and fix error code.
fix PHP_CHECK_64BIT macro (finally got 64bit machine to test it)
forgot to remove some comments in last commit:(
ZTS fix.
Sync with config.m4.
Added new function: posix_access() Feature requests: #29615, #14924
new mysqli stuff
Added new classes: 	mysqli_driver 	mysqli_warning 	mysqli_exception 	mysqli_sql_exception
- Make sure $host_alias is never empty
update by steph
jumbo commit; implement sqlstate error codes. Bundle sqlite3
lame implementation of SQLSTATE error codes
remove error map; odbc speaks SQLSTATE natively
half-hearted adjustment for sqlstate error codes; will do a better job when I'm sitting down with a working oci env
tidy up some parts of the build (could do with more work) Partially implement SQLSTATE error codes
half-update for sqlstate error codes
implement SQLSTATE style error codes. Allow drivers to add methods to dbh and stmt objects (note that we can't use a class, because the use only sees the PDO class). Clarify the api slightly:   PDO::exec() is used for one-shot queries that don't return rows   PDO::query() is a convenience function for returning a rowset without   having to go through the steps of preparing and executing.
ChangeLog update
ChangeLog update
ChangeLog update
Allow gmp to compile under Win32
ChangeLog update
merge patch from http://www.sqlite.org/cvstrac/chngview?cn=1953 bug led to PHP exiting on queries with unknown columns
ChangeLog update
allow parser flags to be passed to xinclude()
add NONET flag to disable network access when loading xml
- Add testcases for bug #29493 and #31213.
ChangeLog update
ChangeLog update
add proper dep
ChangeLog update
Safer libtoolize version check
tidy_repair_string() should not try to load config file if there was no config parameter
MFB_4_3: Quote macro names in AC_DEFUN()
missing .cvsignore file
MFH: A leak is better(?) then a crash.
MFB: fixed test case
ChangeLog update
cleanup..
MFB: don't perform pointless operations.
Don't forget to unload t1lib.
more typos
MFB: fix typos
added property 'id' to retrieve statement id (required by PEAR DB, to support mysqli prepared statements)
ChangeLog update
- MFB: Add dom/xml_common.h header as installed header in order to be able to build pecl/xml_reader
- Revert expose_php change
Turn off sending of PHP identifying header. This is complete useless for any practical application and is a total wasting bandwidth/cpu.
ChangeLog update
more get_method signature changes
MFB
MFB - description fix
fixed testcase 047 fixed windows compile error
- Need to unmangle the class name here
"Undefined variable:  %s" noticies were fixed to use one space
- More proto/error message fixes
- Small fixlet (by Tony)
ChangeLog update
hmmmmm.  Bound params *were* working this way before, but now it seems that I have to bind them as text.
added constructors for mysqli_stmt and mysqli_resultset classes
added constructors for mysqli_stmt and mysqli_result classes
don't blow up under HEAD
bump PHP API number.
fix for bug 31141
- Add ReflectionClass::hasMethod() (thanks to Johannes S.)
fix build issues
When a socket is non-blocking, don't block ssl enabled sockets. Allow for non-blocking negotiation when calling stream_socket_enable_crypto(). That function will return the foolowing values:
ChangeLog update
return empty string when got empty parameter
New sarbage collector's bug was fixed (the behavior should be the same as in PHP_5_0)
"Undefined variable:  %s" noticies were fixed to be compatible with PHP_5_0
ChangeLog update
really don't blow up
destroy return_value and fix leak in array_fill()
add Oracle Instant Client support (initial patch by cjbj at hotmail dot com)
don't crash...
ChangeLog update
ChangeLog update
MFB: Avoid autoheader warning
ChangeLog update
- Use correct header files (in c99 compliant way). uint32_t is preferred.
Errr... fix leak
Better fix for endian compile problems.
Add the new request_time sapi struct entry to all the sapis.  Some of these may have ways of getting the request time without the extra syscall, but for now let's just make sure we don't crash and people will eventually fill these in where applicable.
prevent type conversion during mysql_stmt_execute for NULL variables
ChangeLog update
ChangeLog update
Missing cvs id tag
ChangeLog update
ChangeLog update
- MF43: Make it compile on HPUX on Itanium 2
fix leak (init array only if we got valid start key)
ChangeLog update
Adding missing zend_list_addref() and make SWFShape::drawArc() work
missing files
ChangeLog update
MFB: test fix.
ChangeLog update
Make it really build...
More PHP_LIBDIR fixes for lib64 platforms.
- Added "G" modifier to ini setting number format.
ChangeLog update
Add missing constants for socketpair(). I thought I had included these... Good catch Nuno :)
- Apply the same fix to apache2filter too.
Add stream_socket_pair(), a streams based version of socketpair(). Modified patch from Vincent [six at t0x dot net]
ChangeLog update
- Generate all iconv headers by default
ChangeLog update
fix buffer overrun & segfault in get_meta_tags() when there is no tag value
ChangeLog update
Avoid causing a crash.
CS changes (as suggested by Ilia)
fix 1-byte leak
fix segfault in session_module_name() when session.save_handler is empty
fix buffer overrun and remove debug printf() call
ChangeLog update
Newer versions of libmonetra broke compatability with one function. Make workaround that detects version, and works with both.
ChangeLog update
fix leak
- Tidy up NEWS a bit
ChangeLog update
Added -d option which allows ini options to be specified via command line. Patch by: Sean Coates
- MF43: Install the iconv extension headers to <installpath>/ext/iconv so that   external extensions can use them.
MFB: revert
fix startup - if startup did not succeed, do not continue with execution
do not zero out peak - MM shutdown would do that
add test
port fix for #30998: Crash when user error handler returns false on amd64
fixed windows compile errors (Thx to Sebastian Bergmann)
ChangeLog update
add optional parameter to pass libxml document load options
define options that can be used when loading documents
Replaced static server variables by function call and configurable list at the Pi3Web server side.
ChangeLog update
add test
added skipif section
Add apache_reset_timeout() function for Apache1.  This is needed because Apache1 only resets the write timer, which defaults to 300 seconds, on a successful write.  That is, if the client has gone away and Apache attempts a write which fails it will set the conn->aborted flag but not reset the timeout.  Assuming the PHP script is running in ignore_user_abort mode we ignore the aborted flag, but we'll still get blown out of the water 300 seconds after the failed write unless we periodically reset the timer. With set_time_limit(0), ignore_user_abort(true) and periodic apache_reset_timeout() calls we can theoretically run forever which is why I disabled this call in safe mode.
ChangeLog update
fix array_walk_recursive() so it doesn't reuse cached fci between calls and add test for it
Handle already existing elements correctly
ChangeLog update
revert my previous patch as it breaks more than fixes
fix tests
ChangeLog update
Partly reverted because of problems with some realpath() implementations
Beware of negative indices
Do not silently truncate
MFB: Removed extra space that causes problems for some compilers.
Port 443 is default for https, so we shouldn't put it into Host:
- MF43: Update install instructions
remove old test files
ChangeLog update
ChangeLog update
This test is conditional on the libTidy library. On some configurations tidy crashes due to a bug in the lib.
- Added testcase for bug #30695
- MFH: Revert Joe's work around a bug in GCC patch as it breaks too many things.
ChangeLog update
Save test result file inside the build directory.
- MnoGoSearch extension updated to fix compilation issues with   mnogosearch-3.2.25+
fix #29954 (array_reduce segfaults when initial value is array)
fix #30314
ChangeLog update
Improve offset check inside shmop_write().
BFN
ChangeLog update
'l' is long - int won't work on 64-bit
ChangeLog update
CS
ChangeLog update
- Add new test
ChangeLog update
Test was fixed.
- We need to install the headers too.
Only dllexport during the compilation of iconv.c
- Export "php_iconv_string()".
- Added test for bug #28599
ChangeLog update
Adding fbsql_set_characterset. Change PHP_INI_USER to PHP_INI_ALL on fbsql.batchsize
- Don't reuse Oracle connections in multi-threaded environments until - we decide to either not support ZTS connection pooling (kind of - pointless as PHP isn't stable in ZTS mode) or fix the 100% reproducable - crash bug on oci_connect() under Windows most probably due to this - problem.
- Added test case for bug #30862.
Test was fixed.
Skip condition was fixed.
Tests were fixed.
ChangeLog update
emalloc -> safe_emalloc.
internal entities get expanded if no default handler but cdata handler exists
fix yet another typo
fix typo (bug #30857)
*** empty log message ***
ChangeLog update
- Attempt to fix #28598, bug introduced in GD (around php 4.3.4)   The way they fix MS Symbol are wrong, multiple faces support hould added   later, safer.
fix crash when calling com methods  - due to change in Zend
ChangeLog update
fix bug #30587 (array_multisort doesn't separate zvals before changing them)
ChangeLog update
prototype fixes (Jakub Vrána)
fix SAX2 handling to work with libxml 2.6.16
fix typo so it compiles
run-test2 should be able to emulate POST & GET in the same time
ChangeLog update
Gracefully handle allocation failure.
- Really fix imagefill, part of my previous (old) fix was not applied   (blame me), bak the alphablending and restore it on exit
- MFB: fix #30739, imagefill did not set back alphablending mode
fix crash
namespace was renamed
ChangeLog update
indentation fixed.
Class mapping was implemented (Bug #29385 Soapserver always uses std class).
- Make this compile for the Mac again
ChangeLog update
MFB: fixed build.
iconv is built-in in php5
Adding most of the changes suggested in #30280. Mostly fix's for possible leaks.
Avoid renaming of sprintf to php_sprintf
# Unix EOLs fixed
# Copyright header & version info changed to PHP 5 standard notice
Adding php_sprintf.c to Win32 build
fix CLI leaks when using malformed option string
- MFH4.3: Cleaned up some of the locale mess:   * all internal use of sprintf, snprintf and the like will always     use the . as thousands seperator (if php.h is included only!).   * echo, printf() and sprintf() always render locale-aware   * added the %F modifier for non-locale aware rendering for floats
ChangeLog update
Added support for better control over FTP encryption protocols.
# Unix EOLs fixed
- More mnogosearch-3.2.23+ compatibility
- Bugix #30783: Apache crash when using ReflectionFunction::getStaticVariables()
fix #30780 (tidy segfaults on 'new tidyNode;')
ChangeLog update
ChangeLog update
fix ZTS builds
Simplify and cleanup code.
ChangeLog update
- Correct exception throwing
- Use exceptions now they work
- Use appropriate exception class where possible
- Drop debug message
add support for file://localhost/ support file:/// under windows again
Support for lists in non-WSDL mode was implemented Support for "xsi:type" was improved
fix #30751 (phpinfo() shows the same ini path after reconfigure with --with-config-file-path)
ChangeLog update
No need to ude /Fo twice. Unbreak the build be readding the compile only flag
Make sure files are stored in the right directory
- Add new tests
ChangeLog update
Revert inadvertent commit.
.dylib extension are Mach-O shared libraries that meant for linking against. Loadable modules (aka bundles) can have any extension, so we should probably stick with .so
Make the "rounding fuzz" check work again with gcc 3.3 and later, fixing the bug24142 test.
ChangeLog update
- Simplify construction of RecursiveIteratorIterator
ChangeLog update
ChangeLog update
Simplify and cleanup code.
- Add new test
Bug #30627
MySQL is releasing client libraries that compile out of the box with mysqli extension, so there is no need for a specially compiled client library anymore.
Added zend_strtod.c to the new build
Added zend_strtod.* to the build
Make zend_strtod compile on windows
ChangeLog update
- Add entry for zend_strtod.c in belief that this is still active.
- Don't show grep outputs
- Checks for Darwin'ish systems that uses Mach-O, which apparently doesn't   support weak symbol aliasing at this time.
emalloc() failures are handled by zend engine.
- Trying to invoke function not methot here
Update extensions to use /path/to/$PHP_LIBDIR rather than /path/to/lib to support multi-ABI platforms.
Core changes to support multi-ABI platforms with libraries in /usr/lib64 rather than /usr/lib.
Remove unused variable.
fix build
ChangeLog update
oops missed a couple! Add termination block to function table. This will allow the engine to stop registreting functions at the end. This fixes the - duplicate name - warning
Add termination block to function table. This will allow the engine to stop registreting functions at the end. This fixes the - duplicate name - warning
make sleep() return it's return value when possible #on some *nix systems sleep() is implemented with SIGALRM. When SIGALRM #interrupts sleep() it returns the number of seconds that has to be slept #till the number of seconds wanted by the script. Sleep() on Windows is # void.
Patch by Joe Orton <jorton@redhat.com>.
ChangeLog update
- Don't call beginChildren/endChildren if they don't do anything
- Cache function lookup
- Add RecursiveIteratorIterator::beginChildren(), endChildren()
- Update examples
- Remove doubled definition
- Add some comment
- Allow direct access to spl class entries (SPL cannot be build shared)
- Update docu
- Update docu
- Two new exceptions - Make use of new exception classes
- Update docu
- Update docu
- Implement basic exception classes
- Use new way for global variables - Cache class lookup
- Add interface Countable (PECL #30113)
added multi resultset support in mysql_connect
ChangeLog update
- Do not autoload if require does the trick
- Update
- Minor fixes - Implement AppendIterator in C
- Implement EmptyIterator in C
- Update docu
- Implement InfiniteIterator in C
- Update docu
- Aggregate inner iterator for RecursiveIteratorIterator
- Implement classes IteratorIterator and NoRewindIterator in C
- Update
- Add ReflectionFunction::invokeArgs(array) - Add ReflectionMethod::invokeArgs(obj, array)
Invokation -> Invocation
ChangeLog update
Bump version (as discussed with Andi)
- Be consistent and use names as keys (found by johannes)
- Bump API version
- Update to new API
- Change zend_object_handlers->get_method() to allow aggregation for internal classes
WS (ups)
strip trailing (back)slash from path
- New architecture needs one more dependency
ChangeLog update
- Update docu
- Implement OuterIterator in C
- Abstract no longer valid here
ChangeLog update
- [PATCH] Bug fix for #29770, but for PHP 4.3.9 (Vladimir Zidar)
Simplify code.
--without-lines changed to --with-lines
fix Win32 & Netware build
ChangeLog update
Simplify and cleanup code.
- Oops missed this one
- Tiny fixes
- Improve comments, docs, code...
fix bug #30388 (rename across filesystems loses ownership and permission info)
Synopsis:
ChangeLog update
- Patch from Andrey Hristov: I have cooked a small patch which allows is_subclass_of() the accept not only an object as first parameter but a string as well. When string is passed the function checks whether the class specified is subclass of the second parameter class a{} class b{} extends a{} is_subclass_of("a", "a") //false is_subclass_of("b", "a") //true currently only objects are allowed as first parameter
*cough* de-bogusify driver registration. (what was I smoking??)
ChangeLog update
ChangeLog update
Make request start time be available via $_SERVER['REQUEST_TIME'].
ChangeLog update
Make ldap_parse_reference() available on Windows (Bug #29492)
- always convert apr_time_t to time_t using apr_time_sec() to be future-proof. - print apr_time_t values using APR_TIME_T and apr_snprintf. - remove redundant add_property_long calls.
commit fixes by <mikael dot suvi at trigger dot ee> (segfaults under heavy load)
- Add missing file
ChangeLog update
- Nuke another two files
- Commit new VM - Old one is tagged as PRE_NEW_VM_GEN_PATCH - Still doing work so more commits to come. Don't complain (yet) :)
fix windows build
Revert Linux LFS patch
ChangeLog update
MFB: Linux LFS support, fixes 27792
Allow gettimeofday() return a float if optional argument is specified.
ChangeLog update
Slight optimization in str_split() when split length is the same or greater then the string length.
- One more test fix
- If object handles are equal then save the comparison of properties in - the == operator.
MF4: fix double bailout in HEAD when output is attempted from shutdown
ChangeLog update
Simplify code.
As NetWare LibC don't have the implementation of chown and chgrp there is no point in exposing this function to PHP
Minor fix for mysqli_connect: checking socket_len for NULL Values (Thx to Paul DuBois)
ChangeLog update
fix bug #30442 ( segmentation fault when parsing ?getvariable[][ )
including zend_compile.h for NetWare as NetWare uses MetroWerks Code warrior compiler which does not allow declarations of following kind before defining the types. extern struct _zend_arg_info first_arg_force_ref[2];
removing inclusion of platform specific config files as they are already included from php_scandir.h
- Revert patch until it is discussed
ChangeLog update
ChangeLog update
- One more test (WS)
- WS fix to test commit
ChangeLog update
Added sqlite_fetch_column_types() 3rd argument for arrays.
- Allow to omit object/classname in get_parent_class() which makes it   compatible with the signature and behavior of get_class()
ChangeLog update
Added optional offset parameter to file_get_contents().
- Don't allow access modifiers in interfaces. Explicitly stating public - should also be disallowed but we don't have a way to detect it today.
ChangeLog update
MFH: Added optional offset parameter to stream_get_contents().
Bug #30381 Strange results with get_class_vars()
ChangeLog update
check the correct flag for async connect
ChangeLog update
Add *.gcda and *.gcno (from gcc -fprofile-{use|generate}) to .cvsignore.
fix possible segfault
prevent deadlocks when re-using previously established persistent connection
ChangeLog update
Improve .Net support; this should reduce "failed to init .net" errors. Improve error reporting while we're at it too.
ChangeLog update
Revert for now
- Revert automatic pass arg_info # We need to find a better solutions to prevent havy extension writer probs
- Make RecursiveFilterIterator work by using reflection - Add docu - Add new example
Add new example
Use OuterIterator to simplify conversion to C code
speling
this NEWS entry should have gone into PHP_5_0 branch. sorry
- Sync with the latest codebase (fixes bug #28220).
- Avoid doubly symbol definition. Codes in the removed file has never been   used anywhere.
As NetWare LibC has optind and optarg macros defined in unistd.h our local variables were getting mistakenly preprocessed so undeffing optind and optarg
removed redundant CLIB_STAT_PATCH checks. defined the IS_ABSOLUTE_PATH macros to suit the NetWare filesystem convention
removed redundant NEW_LIBC checks and added the code to recognize the file naming convention in NetWare(supports Windows based drive names like sys: data: and unix like / (sys: being root)
explicitly including sys/select.h as NetWare LibC sys/types.h does not include sys/select.h implicitly as other LibC
ChangeLog update
- Added iterator_to_array() and iterator_count()
removed unwanted NEW_LIBC checks for NETWARE and removing custom mktemp.h as LibC itself supports mkstemp functionality
add DOMDocument xmlEncoding, xmlStandalone, xmlVersion (spec name changes) add DOMText isElementContentWhitespace (spec name change)  - old props/method kept for BC.  - spec names changed when Level 3 went from Draft to Recommendation nuke some unused code
fix segfault in appendXML due to libxml bug
ChangeLog update
Style...
removed unwanted NEW_LIBC checks
ChangeLog update
- If we're going to mention the low level stuff then also give credit - to Thies and Sterling
Add more improvements done so far
Update
- Use ZEND_ARG_SEND_AUTOMATIC for several array functions
- Add arginfo ZEND_ARG_SEND_AUTOMATIC which lets the compiler automatically   determine whether pass by ref is possible or pass by value is needed. # This is usefull when functions take array or string parameters as # expressions. In such a case force by ref is not applicable and the # executor would copy the variable unnecessarily as soon as it is at least # once referenced.
Test files are fixed.
Test files are fixed.
Added test cases for CV optimization patch
- Apply realpath() cache patch. We don't use it if we're in safe_mode and - friends (which are quite slow anyway). - If it proves to be stable I'll remove the #ifdef's in a few weeks.
ChangeLog update
- Rename delete_global_variable() to zend_delete_global_variable()
- Commit the variable fetch optimization. - Extensions which delete global variables need to use new special function - delete_global_variable() (I'm about to rename it) to remove them. - Will post to internals@ or via commit messages if there's anything else.
- Add new test
- Add new test
- Bugfix #27798
- Add new test
modified to 3rd argument of fcntl to FD_CLOEXEC
ChangeLog update
add evaluate() method to support all xpath expressions
ChangeLog update
- Add new test
- Add new test
ChangeLog update
- Add makefile fragment which simplifies working on the executer
Slightly different fix for HEAD for the ming output method BC breaking change.
Fugbix typo.
ChangeLog update
- Small improvement to DVAL_TO_ZVAL macro
enabling few functionalities as the LibC starts supporting them
Including config.nw.h file for NetWare
NetWare specific stat structure access incorporated
handled NetWare F_SETFD and stat differences
fix error message
fix segfault when using unknown/unsupported save_handler and/or serialize_handler (bug #30282)
- CS: Use PHP_* instead of ZEND_* macros
-  Add missing macro
ChangeLog update
- MFB (synch correctly not only for one problem)
- Speling
- Refix the fix # This somehow got lost and was then readded by Andi in 1.258 at the wrong # position. Obviously we need to separate the argument first and convert it # afterwards as done in 5.0.*.
- Add missing --SKIPIF--
- Update test
- Move bench.php to Zend/
NetWare LibC don't have search.h
removed unwanted NEW_LIBC checks
NetWare don't have uid for a file so modified the php_checkuid to return 1 for NetWAre
removed unneccessary inclusion of headers for NetWare
NETWARE has a proper stat structure Now no need of CLIB_STAT_PATCH checks
removed redundant NEW_LIBC checks for NETWARE
Included select.h for NetWare
removed unwanted comments, NEW_LIBC checks and NetWare specific stat structure population
removed redundant NEW_LIBC and CLIB_STAT_PATCH checks for NETWARE
- Add new tests
Add new test
implemented proc_open for NETWARE
Add strptime function.
ChangeLog update
Simplify/Optmize magic method calls (__get/__set/__call/__clone/__destruct)
- Return the warning until we check if we can change the type of str.len
- publish reflection_class_factory() as zend_reflection_class_factory()
fix bug #29652 (number of FD to ocius.msb is growing) many thanks to Sergei V. Rozinov <S dot Rozinov at sibron dot ru> for testing
update ignore files
ChangeLog update
- Make internally used properties read-only and fix default properties
- Add new test
MFB: bugfix #30133
give credits to David
- Declare properties
- Add new test
- Document zend_vm_use_old_executor() for Derick.
Make test more generic.
removed redundant NEW_LIBC checks
removed redundant NEW_LIBC and CLIB_STAT_PATCH checks
removed redundant NEW_LIBC checks
removed unwanted NEW_LIBC checks
removed redundant NEW_LIBC check
removed unwanted NEW_LIBC checks and comments
- Use zval_ctor_func() for wrapper and update the prototype to void
- Make zval_copy_ctor() return void like dtor(). No one ever checks the - return value which is SUCCESS always.
ChangeLog update
fix build
- Add fputcsv() (David Sklar)
- Add missing .cvsignore
- Earlier detection of failure (.c now)
- Earlier detection of failure
Add new examples
add ignore file
Removing clucking debug and tweak the reset call
rough cut at mysql meta data
Add rough cut at fetching meta data.
- Apply Thies and Sterling's patch which doesn't call ctor/dtor functions - for types which don't require it (BOOL/NULL/LONG/DOUBLE) - Breaks serialization!!!
Return FALSE when file cannot be found. Specify full paths to the files used for the test.
fixed test output.
- Add more tests
- Add new test (related to #30234)
compile fix from Timm
Finalize fix for #30057
ChangeLog update
Probable fix for Bug #30147
removing the unwanted inclusion of headers
removing unwanted comment
removing unwanted inclusion of socket header file
removed NEW_LIBC checks in NETWARE
removed redundant NEW_LIBC checks
removed redundance LIBC checks for NETWARE
removed unwanted NEW_LIBC checks as they are no more needed for NETAWRE
removing unwanted header files getting included
removed unwanted NEW_LIBC checks
Now NetWare LibC supports proper stat structure no need of CLIB_STAT_PATCH and all such checks
removed the redundant NEW_LIBC checks
removed the redundant NEW_LIBC checks
cleaned up confusing NetWare specific check. disabled chown and chgrp for NetWare
ChangeLog update
More sensible error codes in the exceptions we throw for broken transactions
removed redundant CLIB_STAT_PATCH checks for NETWARE
selectively avoiding module cleanup code for apache 1 build and removing a duplicate code
ChangeLog update
- Commit new VM architecture. This one allows people (aka Derick) to - ask the engine to use function handler mode. Will update the README - about that.
Make handle error messages handle persistent situations better.
Make error messages handle persistent environments properly.
more method table adjustments. mysql driver needs work with the error message stuff. Other drivers need a bit more auditing...
placeholder for someone to implement a ping for persistent connections
add entry for liveness check
Implement persistent connections $dbh->exec --> $dbh->query
Add test description
Add new test
Bugfix # 30209
- Commit synthetic benchmark
removed unwanted NetWare specific changes
removed redundant checks for NETWARE
TSRMLS_FETCH should be called prior to accessing any of the SG members
NetWare now has a POSIX compliant stat structure so no need of CLIB_STAT_PATCH and all such macros
CLIB_STAT_PATCH check is redundant. So removing it
Reverted the NetWare Specific Stack limit related patches as asked by Andi
ChangeLog update
fix for pecl modules; runs "make install" and correctly adds the files to the transaction and package.
NetWare specific stack limit checks
Aligned the ifdef NETWARE blocks to first column.
Stack limit will be checked while executing the script
To avoid redefinition (of free, alloca etc.) compilation errors in Zend.
When Apache is unloaded, it calls dlclose on all the PHP extensions that are loaded in memory. In the case of Apache 1.3, this call is blocking indefinitely. As a work around, this call is bypassed for Apache 1.3 build on NetWare only. This means that none of the loaded PHP extensions are unloaded. They will have to be manually unloaded before re-loading the Apache 1.3 again.
defined ZEND_PATHS_SEPERATOR to semicolon for NetWare
enabled macros to call the proper LibC functions
Specializer was updated with executor's fixes.
ChangeLog update
ChangeLog update
Enable hypot for all
Add additional include search path
changed order of processing of ini entries
ChangeLog update
Use the correct free() here...
Add package.xml (not quite ready for release)
Add support for:
Use NO_PERM code here
un-bogusify uri: stuff...
Add "no permission" error code.
make it build on win32
Add transaction support. Add authorizer/safe_mode support
Bugfix #30146 (ReflectionProperty->getValue() requires instance for static property)
Add new test
Add new test
Bugfix #30148 (ReflectionMethod->isConstructor() fails for inherited classes)
First cut at a PDO driver for SQLite 3.x
ChangeLog update
Make new poll stuff work on win32 (and still be safe on unix)
standardize the callback support to allow array($obj, 'method') callbacks. Add a couple of utility functions.
fix crash when dtor is fialing on shutdown
ChangeLog update
- Add test for bug #27669
ZTS fix.
- Only 5.0.x news which we'll copy over before 5.1.0 release
- News
ChangeLog update
Test for bug #30069
- Windows support strcoll too.
- Added new boolean (fourth) parameter to array_slice() that turns on the   preservation of keys in the returned array.
ChangeLog update
Added stream_filter_remove() to cancel a stream filter.
ChangeLog update
Allocating hash tables should be done via macro, not directly
Add missing stream unregister for sslv2 and 3.
only allow valid arrays at this point
Change soap's ctors to __construct(), rename SoapClient->__call() to SoapClinet->__soapCall().
Antony Dovgal's error message improvement - #27290
ChangeLog update
- Moe changed from .re to .c
- Readd check for nested data (but correct this time)
- Check for legal key types
- Remove wrong test
New Rule: Never try to repair potential malicious user input
64-bit related changes ./configure will now behave differently if $ORACLE_HOME/lib32 exists (this mostly happens at Solaris AFAIK)
add PHP_CHECK_64BIT macro to be able to detect 64-bit platform in ./configure
ChangeLog update
- MFB: Added the sorting flag SORT_LOCALE_STRING to the sort() functions which   makes them sort based on the current locale. (Derick)
ChangeLog update
- Resolve undefined behavior (joe at redhat)
A little extra code to allow overriding plainfiles wrapper as well
Add stream_wrapper_unregister() Disables a wrapper (user-defined or built-in) for the life of the request.
fix wrong check from return value, binary content should not be \0'd, non-binary content should be \0'd.
add testcase for bug #29446
SoapClient->__call() is renamed to SoapClient->__soap_call().
Using php_libxml_xmlCheckUTF8() from ext/libxml.
- This one fixes rather strange problem - ZE allows multiple declarations of the same class constant. - It could be a minor BC break, but I'm sure it's a bug. (Antony Dovgal aka tony2001)
ChangeLog update
avoid ANSI stdio when calling tempnam() to avoid limitations of AT&T libc.
- Defaulted ini variable "sybct.deadlock_retry_count" to 0 # For details on why this was changed, see # http://zend.com/lists/php-dev/200409/msg00108.html
- Revert API bump
- Commit VM explanation.
- Recommit
- Recommit:   - Check signature of magic methods   - Register __get/__set/__call for internal classes
- Recommit:   - Bump the API number to work around this major breakage.
- Roll back VM commit
Stop at the index on an unmatched [
- Drop namespace relict
- Check signature of magic methods - Register __get/__set/__call for internal classes
Proper #ifdef'ing
add new test
- Bump the API number to work around this major breakage.
We will use CALL dispatch method for compilers other then GCC. It is more safe.
ChangeLog update
*** empty log message ***
- Some architectural changes:  a) We specialize opcodes according to op_type fields. Each opcode has to     be marked with which op_type's it uses.  b) We support different execution methods. Function handlers, switch()     and goto dispatching. goto seems to be the fastest but it really     depends on the compiler and how well it optimizes. I suggest playing     around with optimization flags.
Handle maxlen when stream can't be mmaped
fix issue with multiple xsl objects using registerPHPfunctions  - also fixes threading issue
implement php_libxml_xmlCheckUTF8  - workaround for pre libxml2-2.6.13 function
ChangeLog update
Chunk Length may optionally be followed by whitespace
Make it possible to return VideoStream and PrebuiltClip
Protocol version context option and chunked transfer encoding
Make ext/soap work around libxml2 bug in xmlCheckUTF8 (2.6.7-2.6.13)
ChangeLog update
ChangeLog update
Touch
- Bugfix #29985
- Add some checks to unserialize() to prevent bufferoverflows
- Add some checks when unserializing data to prevent buffer overflows
remove "." at the end of messages
make autogenerated docs happy (Friedhelm Betz)
ChangeLog update
- Don't destroy object when calling overloaded cast method in - zend_parse_parameters()
forgot to remove comment in last commit
ChangeLog update
- Add link to chm version - Change wording
Update docu
Adjusted input check.
ChangeLog update
Adding swfvideostreamp and swfprebuiltclipp, available in ming 0.3
Fugbix typo.
MF4: fix crash if shutdown uses file stats
- Added test for bug #29944.
fixed bug #29283
ChangeLog update
Add new test for seeking
Use user_agent ini setting if it's available.
Move global symbols defined by bundled copy of libgd into private php_gd_* namespace, to avoid symbol conflicts with, for instance, another Apache module which loads a different copy of libgd.
fix bug #29723 (file_get_contents() fails with the file:// wrapper under Win32)
Do not rely on behaviour of integers which might be greater than LONG_MAX on 32-bit architectures.
this file shouldn't be in the repository at all
ChangeLog update
Added missing input validation to dio_write().
Fif for #28047. Set correct debug options for debug_ts build
Add some information about array overloading
remove cloning under ze1_compatibility_mode  - minor BC break but doesnt work right under compat mode anyways
remove cloning under ze1_compatibility_mode  - minor BC break but doesnt work right under compat mode anyways
remove clone functionality
add testcase for bug #29893
fix crash #29893
ChangeLog update
String offset starts with 0, fix isset($str[$len])
A little cleanup on the language refinements.
Bugfix #29882 isset crashes on arrays
- language refinements
- A fix for building of shared mnogosearch module
Add more docu
fix leak
ChangeLog update
Removed examples which don't actually work anymore for PHP 4, and updated those that do for PHP 5.
ChangeLog update
ChangeLog update
Enforce semantics: Classes cannot extend Interfaces
Add new test
Drop doubled check
- Bugfix #29828 Interfaces no longer work
Add new test
no longer experimental update package info
not experimental
Memory leaks were fixed
ChangeLog update
MFB.
test for local_infile_handler
changed local_infile_handler:   mysql client lib now uses php_local_infile functions by default, which allows   to use php_fopen_wrapper: e.g. LOAD DATA LOCAL INFILE 'http://foo.com/bar.csv' ...
if $doc->recover = true; set error_reporting to (old | E_WARNING) This way, you can't silence XML parse errors with the @ character
No short tags
- Those two are already in the NEWS for 5.0.2.
- Improve wording
- MFB
- Add interface_exists() and differentiate between classes and interfaces   (Andrey Hristov)
ChangeLog update
new incompatibilities. maybe someone from the doc group will update the migrating guide. also Derick may add new slides to his talk :)
MFB: TSRM fix
Add new test
MFB.
- Add missing brackets
fix segfault when object cloned
Add support for the readline callback interface, allowing you to interleave IO and user input.  Sample script:
- No tabs here please
use dependent libs while probing for functions
This extension is no more experimental
ChangeLog update
- Drop unused variable
- Boost up __autoload() calls by caching the lookup
- Improve wording
- NEWS
- Improve performance of switch()
- Little changes.
ChangeLog update
Using int when long should be used.
ChangeLog update
fix for bug 26737 : private & protected member variables not serialized when user defined __sleep() is declared. Additionally E_NOTICE is being thrown if __sleep() returns a non-existing member variable name
ChangeLog update
Bugfix#29777 Some compilers don't like // style comments
Adjust magic path ordering.
MFB: Removed unneeded bits.
Added /usr/share/misc/file/magic to the possible magic paths (used by Debian)
- Order and removed a bugfix which was already in 5.0.2/
Added more missing cURL options.
ChangeLog update
- Cleanup
- Second wave of garbage removal.
If you send a post with a content-type header and then the next post without the content-type header, raw_post_data will not be set.  This is because SG(request_info).post_entry is set to the first requests function pointer which makes it follow the wrong code path.
- Stop using garbage. Please let me know if you find any bugs resulting - of this patch (very likely). (Dmitry, Andi)
Janify [tm]
BFN
fix #29737 in the right way with performance in mind
fix #29737 (ip2long should return -1 if IP is 255.255.255.255 and FALSE on error)
fix for bug #29657 xml_* functions throw non descriptive error, compared to php4 fix for bug #29711 libxml and non iso-8859-1. If no encoding specified, it defaults to UTF-8 now
BFN + reorder
- Implement #29728: Reflection API Feature: Default parameter value.   . ReflectionParameter::isDefaultValueAvailable()   . ReflectionParameter::getDefaultValue()
- Nedd to work on copy
ChangeLog update
- Show default value of optional parameters of user defined functions.
Forgot to turn off debugging.
Re-add my patch for .ini variable access.
MFB: typo in config.m4 (potential configuration problem with Stronghold)
ChangeLog update
fix typo
ChangeLog update
ChangeLog update
Make clear this is PDO support
Remove unnecessary check
- Synch names with other extensions
fixed default for mysqli_fetch_array
ChangeLog update
Add missing check
ChangeLog update
Checking in a patch by Dave Lawson (dlawson@masterytech.com) to correct some of the behavior found in the odbc_fetch_*() functions.  This patch NEEDS to be tested on MS Access before a release is done with it.  This submission is to get it into the daily builds for testing.
fixed bug #29656 (segfault on result and statement properties)
fix yet another annoying compile warning
fix compile warning
Forgot to add DomDocumentFragment->appendXML(), when I commited it back then
Added DomDocument->recover property for parsing not well-formed XML Documents.
- Added the PHP_EOL constant (Patch by Paul Hudson)
ChangeLog update
minor fix in mysqli_prepare: copying stmt errormessag to mysql structure
More spaces -> tabs.
Properly fix the msgno check inside imap_fetchbody().
fix.
- Use FREE_HASHTABLE()
- Don't use magic numbers
- Significantly improve performance of foreach($arr as $data). (Marcus)
Change to use md5_file()
ChangeLog update
Add missing module deps
TSRM fix
It's stable now.
Prepare for 1.0 release of enchant.
More meaningfull error message
- Added a notice to getimagesize in case zlib is not available and a compressed   SWF movie has been passed to the function.
fix test
Reset global request_time in sapi_activate.  Reset it in sapi_deactivate too, although I can't see why that would be necessary, but most of the other sapi globals are reset there as well.
- Added missing defines. #- I did say the patch was for 4.3 ;-)
Minor format specifier fixes
Don't require the user to specify  as a reference
ChangeLog update
Add SAPI hook to get the request time if provided by the web server, otherwise call time(0) on the first call and store it so subsequent calls will get the same time.  Hook support for Apache1/2 included.
Changed bugs order.
Test is fixed. (__call() requires two parameters).
- Bugfix #29493 (extract(array, EXTR_REFS) misbehaves with elements referred   twice or more times). (Patch inspired by Michael Manley. Thanks.)
- MFB
ChangeLog update
fixed bug #29577 (MYSQLI_CLIENT_FOUND_ROWS undefined)
ChangeLog update
When skip condition is met, stop.
MFB: removed \r characters.
ChangeLog update
Binary safety fix for inet_pton()
New Functions inet_pton() and inet_ntop()
- Commit Derick's patch for allowing Zend to use regular libc memory - allocation functions. Mainly useful in conjunction with tools such as - valgrind which enables us to find bugs we might not find with the - current memory managers boundary protection.
ChangeLog update
Add A6 support, fix IPv6 address parsing, and improve define compatability
Avoid possible segfault when using stream_socket_client with bogus flags.
ChangeLog update
php_error() -> php_error_docref()
update documentation credits, mentioning that more contributors are listed in the manual
remove all references to @ thing, as it's not recommended. always add it to NEWS yourself please (c) Derick =)
news entry
change xsl_xsltprocessor_set_parameter() to support parameter->value arrays add test for it @Change xsl_xsltprocessor_set_parameter() to support parameter->value arrays (Tony)
Generate a .reg file for the syslog stuff NB: still need a solution for zts and non-zts on the same machine.
Eliminate unneeded variable.
ChangeLog update
Move iconv exports to the iconv extension and make libxml depend on iconv
Move iconv exports to the iconv extension
Update prototypes
nuke unused variable
forgot to remove debug variable :(  (Thx to Derick)
fixed bug #29522
fixed properties when connect wasn't called
fixed bug #29522
ChangeLog update
New libxml2 version for windows build. Version 2.6.11. http://ctindustries.net/dom/libxml/
Update
MFHed
Add new test
BFN
Even more verbosity...
Even more verbosity in case of error
fix typo in mail.c: mail_force_extra_parameters -> mail.force_extra_parameters
fix typo in php.ini: paramAters -> paramEters
commit for win32 - binary so line endings are always preserved - this time on HEAD, where it belongs
sys/stat.h is includes in php_streams.h no need to do that again.
Catch exceptions from broken config.w32 files
Explicitly check PATH before cygwin for mc.exe, as we want MS message compiler, not GNU Midnight Commander.
Revert the search path tweak; it broke the snap build for ming
Avoid possible exception
ChangeLog update
A better fix for the VC 2k max literal string limit (also affects vc7)
- Expand to test number of parameters
- Add methods to check parameter count
Correct test name
Add test
Allow sqlite_fetch_column_types() to properly handle table names with spaces in them.
- Change to use memcmp instead of strcmp
VC6 hack to avoid CONFIGURE_COMMAND string length over 2048 when building many extensions
Better error reporting
Search in PATH before explicit_path. This resolves conflict between Microsoft and cygwin tools with the same name.
- Remove all for now # - the optimization part can be done in apc or compareable products # - NULL can be reintroduced later when needed
MFB Enforce protocol of magic methods/classes
MFB: Enforce protocol on magic methods/functions
fix empty_string issue
don't read empty files
A gentler (performance wise) allocation of buffer for temp variables.
ChangeLog update
More hoops for VC6
snap this rule in half for vc6
Juggle deps
ChangeLog update
Enable usleep under win32
Go with new go-pear infrastructure
Un-bork
Allow COM to build under non-zts. Thanks Frank.
zts fix...
Misc sendto/recvfrom tweaks that have been pending here for a while...
Make sure this is initialized...
Implement an fstat cache for plain files.
ChangeLog update
- Add globals.c
Adding missing PHPAPI for non ZTS builds
- More ptr_stack optimizations and cleanups
- Improve performance by inlining zend_ptr_stack_n_push(). var_args can   usually not be inlined by compilers.
Nuke references to InstallShield
Update for php5
s/php.exe/php-cgi.exe
ChangeLog update
No PECL should be enabled by default
- Increase performance of *sort() and some internal sort operations. # This patch increases the performance of small arrays/hashes by up to ~15% # The performance increase during the performance talk :-)
Revert goto opcode
&tmp and label are the same thing, don't free it till we're done with it.
Plug some memory leaks and promote unknown label to E_ERROR. If someone tries to jump to a non-existant label execution really shouldn't try to carry on.
Add goto operator by popular request.
Missing ifdef; thanks Tony
Remove News entry, which is already in 5.0
Use the correct lengths when building the name -> dispid mapping
Missing return statement
Misc. win32 thread safety fixes.
ChangeLog update
Proper parameter separators for PostgreSQL connection initialization.
Better address availability check.
Ensure that port numbers get set in the peer/socket name functions. (duh!)
- Update examples
Move activescript sapi to PECL
- Rename ProgID from ActivePHP (tm) to PHPScript (bah) - Convert line-endings for error messages to CRLF - Misc other tweaks
- Trim error messages
ChangeLog update
equivalent segv/shutdown fix for failed connect
looks like this approach will give us our exceptions back
- Add missing include
fix possible segv on failed connect
Tidy up a few loose ends. Override normal php.ini behaviour so that only the launching applications folder is searched; this avoids picking up a default php.ini with an execution time limit set.
that's not my copy of the exception ctor, do don't fiddle its flags.
"better" "fix" for #29392. This fixes the crash; the sample script:
prep for stable release
- Be specific about visibility
Added missing comma. Thanks Tony.
Major re-jig. With thanks to Rob Richards for tracking down a couple of big bugs caused by teeny bits of code.
protect caller from a potential bailout
Revert last fix, because it breaks dynamic methods
ChangeLog update
quick fix for #29382
allow pdo to be functionally inherited from.
fixed bug #29335
proto fix (thanks to dave%php.net for spotting)
fixed bug in mysql->client_version added mysql->client_info property
ChangeLog update
- Do not autoload classes in skip code
- Add new test
- Add test
- Show visibility errors (try to fix #29354)
- Add new patch for reordered shutdown sequence
renamed registerNamespace() to registerXPathNamespace()
export php_libxml_error_handler for win32 build
added new method SimpleXMLElement->registerNamespace(string prefix, string uri) "registers a prefix <-> namespaceURI combination for use in a later xpath query. "
use php_error_docref for libxml2 errors
set errorhandler to generic php_libxml_error_handler
- Execute destructors earlier (Florian Schaper, fschaper at intux org)
- Add ReflectionParameter::isOptional() to test whether a parameter is   optional and also show this information in export.
- Add optional parameters $filename and $lineno to ErrorException   constructor to allow overwriting automatically retrieved information. # It may be reasonable to delete the trace in case that feature is used.
ChangeLog update
fix build for VC++ 6 update dsp (Enable IObjectSafety)
Enable IObjectSafety so that we can be used in the M$ scripting control. Thanks to Rob for checking this out.
make behavior a bit field
Oh by the way, only use proxy mode for reading...
Add proxy support to ftp using http wrapper
ChangeLog update
- There's no reason why gettimeofday() shouldn''t return the same time in successive calls; this test fails spuriously on Linux/x86_64 (which has a particularly fast gettimeofday() implementation). - Joe Orton <jorton@redhat>
fixed bug #29311 added support for Cursors (MySQL 5.0.x)
Updated version number
ChangeLog update
add optional name parameter to next()   move to next named sibling skipping subtrees
news...
Added stream_context_get_default() which returns the default context option. You may then set options that affect streams operations for the whole script.
changed warning (bug #29298) for outdated client library
This should fix binary safety for bound results or may coogle strike me down.
ChangeLog update
HEAD is 5.1.0-dev now
add array_: intersect_key() intersect_ukey() diff_key() diff_ukey() The first two by a patch of Cristiano Duarte. The second two were implemented in almost the same way except one small difference.
MDTM added to ftp_url_stat
Add MTDM support to ftp_fopen_wrapper::url_stat()
Oops, copy/paste typo
Persistent mallocs can return NULL (on failure)
ChangeLog update
Abort earlier on invalid format.
- Add safe_pemalloc()
prep for alpha release
- Correct range checks. - Normalize negative values.
- Cleanups.
oops...
- Need to set handle prior to calling zend_register_module_ex()   (Marcus, Kamesh Jayachandran <kameshj at fastmail dot fm>)
- Add more null checks.
- pemalloc() might return NULL.
add optional flush paramter to xmlwriter_output_memory
Add descriptions
add todo
Add bz2 stream filter support
Make persistency safe
ChangeLog update
Allow pgsql driver to accept login & password as separate parameters like other PDO drivers can.
Add missing .cvsignore
Sync. with the API of libMing 0.3b1
Make ReflectionClass::getMethod() and ReflectionClass::getProperty() raise an ReflectionException instead of returning NULL on failure.
Do not use contracted forms.
- Oops, actual PR # is 29119, not 29199...
export INI parser
fix for empty_string changes. Don't forget to allocate bytes for NUL terminators
__set and __get will be called not only when variable doesn't exist but also when it's invisible
- Bump API number due to empty_string change
Possible fix for #29258 (unverified) win32 people, please test (I have no working win32 build env right now)
Implement empty-string-to-null conversion option for oracle compat. This can be enabled using: 	$dbh->setAttribute(PDO_ATTR_ORACLE_NULLS, true);
fix build
- Nuke empty_string. It is a reminanent from the time where RETURN_FALSE()   used to return "" and not bool(false). It's not worth keeping it because   STR_FREE() and zval_dtor() always have to check for it and it slows down   the general case. In addition, it seems that empty_string has been abused   quite a lot, and was used not only for setting zval's but generally in   PHP code instead of "", which wasn't the intention. Last but not least,   nuking empty_string should improve stability as I doubt every place   correctly checked if they are not mistakenly erealloc()'ing it or   calling efree() on it.   NOTE: Some code is probably broken. Each extension maintainer should   check and see that my changes are OK. Also, I haven't had time to touch   PECL yet. Will try and do it tomorrow.
- Rename php_compat.h to php_onig_compat.h to avoid name conflict.   (reported by Joe Orton, thanks.)
ChangeLog update
Update
- DOS 2 UNIX
add appendXML() to DOMFragment (chregu)
Update
not safe for persistent streams
MFB: enable exslt support for win32 builds WS fixes for exslt tests
MFB: add missing optional value param to createElementNS (chregu)
remove this entry
Implement extension load-order deps.
Add support for negative values of limit of explode(). If limit is negative then all components are returned except the last abs(limit) ones.
- A Bug #29147 was fixed. Thanks to Antony Dovgal <tony2001 at phpclub.net>   for his patch.
touch to avoid weird implicit makefile rule
don't allocate 0 bytes here either
No point allocating 0 bytes
ChangeLog update
- request_dtor() should be called if a fatal error occurs during activation   phase.
fixed paraenthesis warning in mysql_stmt_attr_set/get
ChangeLog update
Update windows build files for filter support
Add zlib stream filter support
convert.* filters not consuming buckets_in on PSFS_FLUSH_*
NetWare specific openssl build file
(IMO) Better NEWS entry for true/false/null implementation change.
Correct version
BFN
- Speed up by making null/false/true reserved word which allows to drop   an opcode (FETCH_CONSTANT) for every usage.
Bugfix #28464 catch() does not catch exceptions by interfaces
ChangeLog update
- Improve performance of zend_alloc by stopping the size from being a bit - field.
- Use ErrorException instead of Exception
- Add new class ErrorException to encapsulate errors in exceptions
Apply the fix
Synch comments
Bug 29058 (patch submitted by bug reporter)
Test for bug 26737: Protected and private variables are not saved on serialization when a user defined __sleep is used.
fix #29012 (Potential race during first connection) thanks to cjbj at hotmail dot com
ChangeLog update
Made php -m output sorted case-insensitevly
same bug.
be consistent with write_dimension
fix #28957
Changing the Tidy version to 2.0
ChangeLog update
Bugfix# 28829 bcmath values for 0, 1, and 2 initialized/freed at wrong time for threaded sapis.
Add {{{ proto's
- 5.0.1-dev
Bugfix #29116 Zend constant warning uses memory after free (jdolecek at NetBSD dot org)
- Roll PHP 5.0.0
add missing break
prototype fixes
initial xmlwriter code
Looks like Sara forgot to change this too.
changed mysqli_stmt_reset (returns now bool instead of void)
remove test dependance on postgres ** this still fails however
ensure that test passes on systems without postgres built in.
ChangeLog update
- Initial release
Added missing constant and correct bound column retrieval. When bound columns are specified only return status (TRUE/FALSE) indicator.
Missing patch.
Touch the file so that build system does not try to rebuild it.
- Convert zend_class_entry -> zend_class_entry *
implement the clone code for the XSLTProcessor object and fix #29108 "xslt segfaults when ze1_compatibility_mode is on" (By Rob Richards)
fix #28978 (multiple OCIBindByName on the same placeholder eats memory)
ChangeLog update
reorder + add
fixing bug #28974 : overflow in array_slice() The same kind of overflow appeared in array_splice(), substr() and substr_replace()
Ooups...
fixing bug #28739 array_*diff() and array_*intersect() not clearing the fci cache before work. FCI call cache was introduced in HEAD. All functions that perform sorting of arrays clear the fci cache before work. array_*diff() and\ array_*intersect() were somehow missed to be updated.
fixing the name of the test
fixing bug 29038: EXTR_PREFIX_SAME is prevented from creating a new variable when the key is a empty string. EXTR_PREFIX_ALL is also prevented from doing that, but works for numbers.
- Initial release
- Added simple test for float exceeding the float precision # See bug #29064
- Initial release
- Initial release
ChangeLog update
DragonFly BSD is derived from FreeBSD and requires the same floating point precision fix.
Bump PHP 5 sqlite extension number to 2.0 (put some distance between it and the 4.3 version)
Upgrade bundled library to 2.8.14 + misc fixes (http://www.sqlite.org/cvstrac/chngview?cn=1742)
RIP: greedy ready problems This allows people to use fread($fp, filesize($filename)) for regular files, but packet-based non-greedy reads for everything else.
- Better stability during premature shutdown of request startup
ChangeLog update
- A bugfix in search words hilightling code (mnogosearch extension).
Last dangerous alloca() bits.
ChangeLog update
Added memory-limit to the list of excluded force-on options
added check in config.m4 for deprecated library added support for new 4.1.3-beta functions 	mysqli_stmt_field_count 	mysqli_stmt_attr_set 	mysqli_stmt_attr_get removed support for deprecated/old api functions fixed bug in constructor_get
ChangeLog update
- Some fixes in mnogosearch extension
- Revert storing handle, got lost in 1.92, noticed by Kamesh Jayachandran   <kameshj at fastmail dot fm>
Don't copy ini items to module globals (fixed unregistered bug with mangled default_db setting)
ChangeLog update
Eliminate alloca() calls where they can be affected by the users.
Don't use alloca() where it can reached by the users.
- Bugfix: #29019 Database not closing
- Disable zend_mm for 5.0.0
- revert to proper behaviour
- Add test for bug #28325.
ChangeLog update
Eliminate potentially dangerous alloca().
ChangeLog update
BFN
- Bugfix #28325 (circular reference serialisation).
ChangeLog update
- Should fix mem leak with ZEND_MM. I made this change a while ago and - rolled it back but I don't remember why. Please test!
ChangeLog update
Do not use alloca() where it can be easily abused by the users.
fix bug wrt to CURLOPT_POSTFIELDS where if you passed it code like:
That hashtable should never have been an argument....
ChangeLog update
Another instance where alloca() is not needed.
Do not use alloca() where it can be abused through user input.
ChangeLog update
ChangeLog update
Removed pointless allocation check.
Revert at Derick's request
BFN
ChangeLog update
Removed unneeded if().
Add more tests
Add more tests
ChangeLog update
BFN
*** empty log message ***
replace strncpy with strlcpy
As long we pass values by reference this is needed. Ugly!
strip_tags() news
IE we love you all...
- WS
ChangeLog update
export zend stream functions for zend extensions under windows
ChangeLog update
Ease off on severity of new error (Using Resources as array offsets)
Added missing safe_mode & open_basedir checks.
ChangeLog update
fix for inheritability
added php_mysqli_construct_get to support __construct in extended classes
Changed name to all caps
Return all results as strings until I can convince the other guys that it should be otherwise
Addendum to bug #28878: change ini keys as PHP_INI_SYSTEM Also: Adding "bucket" parameter to non-ini-keys, Elemination of double CONTENT_TYPE/_LENGTH environment variables
Added SOAP configuration directives
ChangeLog update
MFB (better error checking in pcre_fullinfo() calls).
Updated the author's contact information.
BUGFIX: Segfault if server's URL has no path. ("http://192.168.8.1:180")
ChangeLog update
Added missing safe_mode check.
BFN
Support for HTTP redirection.
More output magic on nested exceptions
Be more consistent with CS
Some API changes: - addObserver() params order switched - signal() -> _signal() - public:getCauseMessage() -> private:_getCauseMessage() - some more docs
ChangeLog update
Removed unneeded checks around Zend allocation macros.
First release of the PEAR_Exception class                  (dedicated to otherbird)
BFN
BFN
Bugfix #28851: call_user_func_array has typo in error message
ChangeLog update
- do it right (phpize path issue)
- phpize now can handle directories with spaces in their name (#28847)
Reflection_* -> Reflection*. Patch by Timm Friebe.
ChangeLog update
Another typo in converting array index doubles to long.
tests for the crash in bug 28213
fix for 28213.
* Replaced the nonexistent word "postfix" with "suffix".
String lengths should never be char pointers.
ChangeLog update
String length in parse_parameters should be int
ChangeLog update
Properly handly high ascii values in soundex().
64-bit bugsquash party
* don't register object on destructors list if it does not define its   own emulated destructor
ChangeLog update
BFN
#28789: ReflectionProperty getValue() fails on public static members
Refactored statement allocation Added emulated support for named input parameters
BFN
Un-revert param index fix
Revert (at Wez's request)
ChangeLog update
add tests
fix config.m4 add fold markers
Need {} here
Added support for fetching and binding to blob fields
ChangeLog update
Release isc statement handle when dtor is called Don't separate() bound zvals
Report param binding error
Standardize error reporting.
- Typo (#1627) (cox)
Added double param type
BFN
ChangeLog update
GCC fixes
Revert
Added client/server info attributes
Hope I finally got it right this time
Folding markers
Improved error handling Added some comments
Removed dependency on regular interbase extension Added support for all datatypes except BLOBs
Removed dependency on regular interbase extension
Use snaps. LIB path
Changed LIB path
fix bug #1610: pear package doesn't validate deps
fix bug #1615: installer must create extension dir if it doesn't exist, patch by Tomas
fix bug #1617, exception never returned from PEAR_ErrorStack->push()
New test
Nearly complete implementation No date/time fields yet ...
Added export macros
Added double param type Added param struct initialiser Reversed param parsing order (long <=> string)
Initial revision (incomplete)
ChangeLog update
hypot() is not experimental.
Changed that a bit
- Require a single white-space char after /** to start a doc comment that   way we prevent /*** from becoming a doc comment (as requested Derick).
Add missing declaration
Small code layout change
BFN
Do not require NEWLINE at start of doccomment
BFN
Bugfix #28699: Reflection api bugs
ChangeLog update
Allow compilation on Win32. Need to implement a few Windows specific functions.
BFN
ChangeLog update
Interbase news
partial fix, bug #1163: rpm build doesn't build properly
fix bug #1550: Builder does not set path to match bin_dir
fix bug #1378: user/pass must be urldecoded from parse_url in Remote.php
fix bug #1153: PEAR command doesn't work after upgrading
fix bug #1581: unhelpful error message if "pear blatch" is typed
... back from the dead
fixed crash (changed MYSQL TO MY_MYSQL in mysql_stmt_init)
ChangeLog update
- Go back to -dev (Shouldn't need another RC)
- Roll RC3
forgot to remove Win32 restrictions for mysql methods
- Reorder (again :)
MFB: Missing length limit parameter.
ChangeLog update
- No more Pager
- Update for 5.0RC3
update unit tests for PEAR 1.4.0dev6, using new getDownloadURL() xml-rpc call
add missing $tmp to PEAR::isError()
eliminate the annoyance of upgrading from crapster versions of PEAR once and for all.
removed conditional defines for load_data_infile_handlers on windows (4.1.2 windows build is fixed now on mysql.com)
ZTS fixes.
ChangeLog update
added mysqli changes
Major changes for 4.1.2-alpha/4.1.3-beta: - added container for mysql structure - added load data infile callback functions (currently disabled under win) Bug fixes: - fixed property changes (4.1.1 -> 4.1.2) - fixed memleak in mysqli_connect - fixed bug #28100 - fixed bug #28205 - fixed bug #28430
BFN
Added support for date/time types Added support for compiling/executing PHP code stored in the database Added support for TSRM
ChangeLog update
Added support for scaled integers
Added support for arbitrary input types Added support for NULL input/output values
ChangeLog update
Let DB handle type coercion instead of PHP
Added support for other return types besides VARCHAR
news
- Prepare for RC3RC2
ChangeLog update
Ton of fixes
Initial revision of PHP/Interbase UDF lib # This will allow users running the embedded engine # to call PHP functions from inside their SQL statements
- Don't use ZEND_MM in Windows
fix incdec - make value's refcount non-zero when passing to write_property - otherwise __set caller cleanup could kill it.
ChangeLog update
Don't be too strict if the number of binding arguments provided exceeds the expected number
No need to NULL terminate manually, snprintf() does it for us already.
Removed debugging code
update dependency to PEAR 1.4.0dev5
test files for PEAR are now installable!
file needed for registry test
add needed package.xml files for channel tests
update to include all new unit tests and files
begin work on making the tests installable
prepare for actual installable unit tests
fix unit tests for 1.4.0dev4
- Reorder
- NEWS
- If user error handler returns "false" then we relay to the built in error   handler
Use constant IBASE_CREATE instead of just 0
Woops, missed one
ChangeLog update
Refcount must not be set separatley again.
Add missing initialization
Add missing initialization
#28589: Segfault in Reflection API
MFB: missing ';'
Added missing argument check.
Improved handling of 'CREATE DATABASE ...' by ibase_query() Improved param handling of ibase_query() and ibase_execute()
fix leak when using relaxng interim fix for isolating our streams handling - once libxml supports overriding streams this should be changed   for security reasons
ChangeLog update
Update the mcve module for libmonetra 4.0 A compatability layer has been introduced which should mean all scripts written for v 3.2 of the module should continue working, as well as compilation should still work against libmcve 3.2.x. This module eventually needs to be renamed to 'monetra' to reflect the naming change of the underlying library.
Restrict 'CREATE DATABASE' in sql safe mode
No meaning for unsigned
fix unit tests for 1.4.0dev3
Use default character set in generated test DB
Removed ibase_timefmt() - use ini_set() instead Improved phpinfo() appearance
Update to PHP-style prototypes (a PHP function returning char *?  What were you smoking? :)
manually check for egrep
ChangeLog update
Turn this off then
testing file
modify php_dump.php, .cvsignore ignores *.php move include to the place where it is used
update _installFile() test for channels
update checkDeps/extractDownloadFilename tests for channels
update registry test for channels
use fake pearweb - now anyone can run the download unit tests.
fake pearweb package files, for unit testing downloads without an installed pearweb
config unit tests, ready for channels
new unit tests pearweb mock object is complete
update for conflicting file test
new package.xml needed to test conflicting files error
ChangeLog update
Don't rely on TIOCNOTTY.
Changed default date format to ISO Enable sync flag in connect()
'tidy' should not be final, but 'tidyNode' should be.
Allow user-defined error handlers to indicate whether default error handler should be re-invoked, by returning true or false.
The engine will take care out-of-memory situation for us.
Hopefully resolve proc_open build issues.
fix memleak in php callbacks
- Added date/time parser thingy.
Add more outstanding patches
Remove finished tasks
Remove finished tasks
Add more things
Prevent possible problems with illegal properties
- Make the default mask for user defined error handlers include ALL errors,   including E_STRICT.
ChangeLog update
Better skip condition check for session tests.
5.1 tasks.
- Back to RC3-dev until we roll final
Put similar items next to eachother
- More news
- RC3RC1
namespace/tagname validation fixes (Adam Trachtenberg) added new test
- NEWS
Memory leaks were fixed
BUGFIX: Prevent crash on error in send_http_soap_request()
ChangeLog update
Avoid unnecessary and silly copying of constant name when registering.
Prepare for 0.2 release.
Turn off session.auto_start to prevent test failures.
Prevent test failure when fi_FI locale is not available.
- Remove this test, it still segfaults anyway (less noise in tests :) )   Already removed in PHP_4_3 branch
- Use FREE_HASHTABLE instead of efree()
PQfreemem() is only available in 7.4
Apparently it is better to specify 500 here for unix98 bits and pieces.
Update Reflection API class names. Whitespace fixes.
ChangeLog update
break is better
Allow use of scrollable cursor for ODBC
Use the correct label for the error message
Allow setting the cursor name for ODBC statements, so that:
get/set attributes for statements
Add flag to control the use of the ODBC cursor emulation library. The default (which should be safe) is to use the cursor library if it is needed. If for some reason either the driver or the emulation is broken, you may override this from your script.
Some definitions for cursors. Define a mechanism for driver-specific attributes. Use a refcount for the stmt structure.
Whitespace: editor in the wrong mode ;)
Add transaction support
PHP_SETUP_OPENSSL is NOT SNMP_SHARED_LIBADD, it's MCVE_SHARED_LIBADD requires AC_PROG_EGREP when you phpize
Cleanup.
One more leak down.
More leak fixes.
Use binary safe function for quoting
fix couple of memory leaks
More possible leak fixes (Thanks Tony).
One more memory leak.
More leak fixes.
- Nuke unused decleration
Kill unused var.
*sigh*, obviously, we need this to be able to use sapi_module.name
DEBUG -> PHP_DEBUG
Allow sqlite to build as a shared ext under win32
check if it matches... not if it doesn't...
In debug mode, under CLI don't close stderr. This is so that we can see any error reports.
add "clean-pecl" rule for nuking pecl objects
Tidy this up a little bit for win32.
Throw exception during ctor
- More fixes
- Make fix compile.
ChangeLog update
Moved pdflib extension to PECL
ChangeLog update
- NEWS
adding this
Ansrei reverted this
Finally a fix for #23220: IIS does not cleanly close SSL connections. Also enable the safe and recommended bug work around options in the SSL context.
This is more correct.
in preparation for testing all remote functionality, use a mock object for a functioning pearweb server
ChangeLog update
prep for release
Use dummy status vector in ibase_connect() Added fbird_ aliases for all ibase_ functions # See comment in code for more info # Please let me know if there are any namespace issues involved
Enable ODBC Connection Pooling.
ok MSVC, why didn't you spot *that* one??
ChangeLog update
Add self to credits.
pierre's thingy
/me learns to read
both places
drop the dev
Bump the version number
ok, apprently we _don't_ want to count the nulls.
remove debugging
fix fubar'd emulated bindings
Prep for release
- Initial release
Prepare release
Update package/module
Add some blurb
Ok, so we do need to rinit here after all.
Update to reflect recent changes in dl()
Update package/module
Update package file
Better error message to save looking in the wrong place.
Implement ODBC doer.
Removed strcpy() call from most common case Added test for hash index generation
Update for placeholder flags
store the name length in the same manner as it is stored in zvals
Tidy up placeholder flags
Added test for duplicate field names when returning rows as hashes or objects # This change should be in 5.0.0, as it might break BC
Version 1 of PDO_FETCH_LAZY
Make sure METADATALENGTH is defined (used by IB 7)
fix missing assignment $this->_errors = array_filter($this->_errors);
fix for BC break staticGetErrors adds the parameter $level between $purge and $merge, as it will be as common (or more common) as $purge.
Several issues resolved. fix 1444: PEAR_ErrorStack->push() needs to validate $msg and $code as string/int add error level checking to hasErrors() and getErrors(). BC break!!: staticGetErrors adds the parameter $level between $purge and $merge, as it will be as common (or more common) as $purge.
ChangeLog update
Specify that OCI returns column names in upper case by default
Implement case folding of column names as a portability option.
Kill unused var.
Implement PDO_FETCH_OBJ
for now removing ":public". Waiting for a decision? ":public" will require quite a lot of phpt files changes.
fixing the tests so to work with the new var_dump() (dumping private and protected member variables)
Make username & password parameters optional.
Use native PostgreSQL connect string e.g. $db = new PDO("pgsql:dbname=template1 user=postgres password=secret");
sigh...  need to include the null byte in hash keys
Added MySQL getAttribute() support.
Enable setting the different error modes via PDO::setAttribute()
Added missing user-land constants.
We quote with ' in real databases
Added getAttribute() method.
remove debug
off by one error
set active_query_string to null in case of failure
Make sure that the error string is freed.
Better error message.
Last insert id (oids) support.
Revert; obviously I missed the function at the bottom of the file...
Support ? as a bind in emulated prepares
var_dump() now shows private and protected member variables. Not BC is that since now the public variables are explicitly shown as public Example :
Make doer() work. Make error reporting system work.
Export this, so extensions may throw their own exception objects that they have already instantiated.
keys need to be null-terminated (how did this not get committed before???) bind-by-name includes the leading : in the name
Add methods for error handling
iactually support :\w+ as binds
- Removed unused INI sections.
Allowing user defined SOAP transports with SoapClient::__doRequest()
zts fix ;)
Correctly report errors for statment problems.
Don't dup here either
Don't dup here, PDO will do it as needed
- Allow extra parameters to mail to be forced also from virtual host settings.
Make it compile on windows
PostgreSQL PDO driver.
ChangeLog update
Free vars before calling E_ERROR.
re-jig error handling, and make it co-operate with the PDO error handling system. Implement $dbh->exec() for OCI.
First cut at a "unified" error handling API.  The main thing that is missing currently is a switch in the dbh to indicate what to do with the errors.
- Allow to build with ext/mysqli
- Allow to compile as builtin module
Row count cannot be calculated in MySQL without buffering the query.
Added fetchAll and fetchSingle methods for data retrieval.
Timeout stuff.
Added support for setting timeout value.
Prevent possible crash when working with column containing NULL.
exec() now returns affected row count
exec() now returns row count
builds on stock rh9 now
Set correct Win32 line endings and fix ZTS compilation
Added lastInsertId() method for retrieving last insert id. Made affectedRows() work for MySQL. Populate error value in MySQL on error.
Skip spaces between connection params.
Better include path detection.
Add simple error code values and a place to store them
Let it install correctly when built via phpize
More errno stuff.
Copy the headers
Typo
Revise $dbh->exec(). The driver doer() method should populate dbh->affected_rows if it can determine its value.
Add $dbh->exec() method. Rename $dbh->beginWork() to $dbh->beginTransaction().
Abort if driver cannot be registered.
Cosmetics
Removed unused vars.
update prototype
Update prototype
Update prepare() prototype. Attempt to hunt down the cause of a build warning under win32 by adjust the name of the error function.
Expand the prepare() prototype to accept additional options.
ZTS fix.
- Remove unused blocks
- Remove unused blocks
ChangeLog update
Better header detection.
Allow static builds.
- Need to operate on module pointer in hash table
should be a strcmp, not a strncmp, thanks, wez
- Make start and length parameter to Limititerator::__construct optional
was leaking query_string's
support the read-only property 'queryString'
forgotten off the last commit
Give user a nice message when PDO isn't initialized prior to a driver.
Minor tweaks
typo..
mySQL, not Oracle ;)
Add to win32 build
initial import of mysql 3.x pdo driver
Z_TYPE_P is for zvals
Update generated parser
Add parser to win32 build
Tweaks for win32
for those without re2c
Register according to the type specified by the module. (Helps to fix dl() bug)
license/copyright block
handle binding/quoting of queries for drivers with emulated prepares
Move declarations to the begining of function. This allows it to actually compile on windows.
TSRM fix
No length parameter -> estrdup()
Probe for some functions; allows pdo_oci to build on the snap machine again.
Primitive support for probing headers for functions using a regexp
Skeleton for emulated prepare()
Update to match new prototype
Quoting here leads to problems with databases that really support bound parameters. We should do this conditionally based on the emulate_prepare flag.
only rewrite tmp if quoter returns true
auto-quote values before binding them in at execute time
use new prototype
we need the source string length for binary safe string handling
package.xml
Skeleton package file
ChangeLog update
Bugfix#28404 When type is double we need to access dval, not lval
Let is build under unix. Tested against IBM DB2 and unixODBC. Could work with others.
include guard
Correct output.
Revert the .ini vars patch. Will have to try again next Christmas apparently.
Allow PDO OCI to build under unix. Don't build by default under win32.
Allow PDO to build as a self-contained extension. Install headers so that other self-contained extensions may them.
Some pedantic fixes for gcc.
- Document the smtp_port setting in php.ini
ODBC (v3 ish) driver for PDO. Will not build under unix yet.
OCI driver for PDO, supporting bound input and output parameters. Will not build under unix yet.
Hello PDO.
As discussed with Andi, add this helper API for setting the object pointer from within the constructor.
ChangeLog update
- T_WHITESPACE for the 1st test...
- PHP allows spaces before :: (parent :: foo(); )   Nota bene, requires another change to really check the syntax:   loop back to the first non white space element and valid it (parent,   string or var)
- Initial release
Do not allocate error buffer at the start of every request.
- Add new test
Added missing safe_mode & open_basedir checks.
;
Add config.w32 template to ext_skel
constructors throw DOMException add DOM_PHP_ERR DomException code validate tagnames in constructors use C style comments update TODO
update config.m4 for libmonetra 4.0 compatability. Library no longer has MCVE_ symbols, the header file has #define\'s to convert MCVE_ -> M_ to reflect the Monetra name change from MCVE. More updates to follow.
ChangeLog update
.ini variables patch notice
Adding ability to refer to existing .ini variables from within .ini files. Example:
ChangeLog update
Make isapi more compatible with apache sapis as far as the creation $_COOKIE super-global and various $_SERVER values.
add sqlite_exec()
Skip session tests if session.save_path is not writable.
Add --enable-memory-limit configure option (defaults to off)
- Once ts_free_id() will be used, we cannot call ctors for deleted ids   when creating new threads.
ChangeLog update
- Centralize register and hash operations for startup/register_module   in new zend_register_module_ex().
- Revert to 1.249
- More work on ts_free_id() but still keep it out
ifdef out the ts_free_id until php 5.1 and until it is complete
Dropped support for ancient Interbase versions (< 6) # This has no consequences for Firebird, as its initial release was based on IB 6
Made ibase_timefmt() check its args more thoroughly and nuked a pointless malloc()
Made ibase_gen_id() bail out on incorrect args
- Implement ts_free_id()
- Touch
- Move hash table destruction to proper location
- Added missing UNREGISTER_INI_ENTRIES
ChangeLog update
Make vprintf() and printf() return the length of the string printed. Make fprintf() and vfprints() return the correct length of the string printed.
Reset opt_name to NULL to ensure it's not re-used if numeric keys can be found inside the options array.
- Don't allow passing NULL to type hinted parameter.
ChangeLog update
add chregu as maintainer prep for next release
Adding next() method
- Documentation update - Checkin doxygen config file # A patched version of doxygen is needed, hopefully 1.3.8 will contain it
check for dom support remove comment
- added expand support (see http://www.xmlsoft.org/xmlreader.html#Mixing for the details behind that)  CVS: ----------------------------------------------------------------------
Checking MEMORY_LIMIT before doing emalloc/erealloc solves several ugly problems.
- Decouple NAN and INF
Missing part of the upgrade patch.
ChangeLog update
GD bug fixing news.
Implement com_get_active_object() and a helper object for working with persistent COM objects. (That's the last of the stuff I want to sneak in before 5.0 is released).
Urgh! Use the correct function to free messages from php_win_err(), otherwise we say hello to Mr. S. Fault.
Tell ppl about it.
Renamed tidy_node to tidyNode, removed the tidy_exception class and updated the tests.
Add __EXTENSIONS__ define - otherwise it won't compile on Solaris
ChangeLog update
- Update docu
- Update examples - Update documentation - Move classes/interfaces already implemented in c to new subdir internal
- mnoGoSearch extension was updated to support CachedCopies of   mnogosearch-3.2.16 or later. Udm_Get_Agent_Param and   Udm_Store_Doc_Cgi functions were added. MnoGoSearch-3.2.3 stored API   was removed.
if statement logic would never eval to false.
ChangeLog update
allow ->open() and ->XML() to be called statically
spot the vim user
ChangeLog update
- Update examples
- interfaces 'extends' not 'implements' other interfaces
- Update documentation
fix line endings
Bugfix #28300 Userspace stream/filter names don't need to be lowercased.
Call functions by their new, proper names instead of what are now aliases. Change OCIFetchInto (deprecated) to oci_fetch_array.
Add protos
Count support for ArrayIterator & ArrayObject
ChangeLog update
Support for classes with __call() method on server side.
php_error() -> php_error_docref() (Marcus, Dmitry)
ChangeLog update
news
Update for count_elements handler for overloaded objects.
Add count_elements handler for overloaded objects.
Just in case this header isn't present on the snaps machine.
Improve stability. Give it a new CLSID and change the engine name to ActivePHP5. Globals registered by the scripting host are now auto-globals and don't need to be declared global when accessed from within functions.
ibase_query(): Be careful not to return true on error conditions
* Providing the full URL to the coding standards.
add package.xml
ChangeLog update
Enable writing to SafeArray dimensions.
Security fix: Put '\0' string termination before loop
ChangeLog update
- Look for missing classes in include_path
Update examples
Use caseinsensitive sort
Add a notice on STDIN
ChangeLog update
Don't load modules twice
ChangeLog update
Autoload class as long as needed
- HTML entity to ISO char.
fix to work with only the installed version of PEAR
fix included files and put error messages in PEAR_Downloader where they are needed
Bugfix #28229 (PATCH run-tests tripped up by spaces in names)
remove notices in E_ALL for config test in PHP 4.3.6
hopefully fix this test for all cases
update to begin process for next release (release is not imminent)
fix unit test to work with 1.3.2 (which will be needed)
fix 1186: notice in PEAR_Common undeclared $_packageName
fix unit test with PEAR 1.3.1
ChangeLog update
SPL is meant to be in uppercase letters, do it now it works
An oumlaut doesn't work here, need ASCII only
- ArrayObject::append() must not be called when it refers to an object
C++ comments.
another down...
- Remove unused variable - Respect visibility in count() and add a test for that
ChangeLog update
Add "--disable-all" switch, which will force all arguments to "no" if they are not specified explicitly. (like the snapshot build, but in reverse).
Should have tested this change before committing.
- More examples
Count() was missing
- Add tests for the examples
- DOS 2 UNIX
Added missing skip condition.
ChangeLog update
Don't strip off those []s, it'll only create problems in wrappers and elsewhere.
- More examples
- Optional parameter to class_exists() that can be used to bypass   __autoload() which can be helpfull in __autoload() itself.
Removed C++ style comments.
- Some pretection against out-of-memory situations
- no unneccessary retval initialization - new c-level iterator handler invalidate_current that is optionally   used to clear internal caching like in implementation of Iterator
add relaxNG support set xml base directory so it is consistant add validation examples
fix bug 1242 - notice if multi-dimensional array is passed as a parameter add optional parameter to staticHasErrors() that allows error determination for a single package
ChangeLog update
Complete implementation
Update
Removed pointless check.
hmm. this comma is supposed to be a semicolon.
ChangeLog update
Add new iterator example AppendIterator and use it in findfile.php example. # The initial idea came from a request by Sebastian
With the new inheritance rules we need an explicit append method.
Skip correct amount of stack entries
Capture potential problem by error message
Show number of classes
BFN
- RC3-dev
- This was forgotten
- RC2
Spell it out.
ChangeLog update
ChangeLog update
NEWS
This was already in NEWS for the branch, removing
Cleanup NEWS
move libxml error handler ro rinit/rshutdown to keep it local to php
Another one bites the dust
Support for <![CDATA[ ]]> for string/hexbinary/base64binary data
In-HEAD bugfix# 28115
ChangeLog update
Avoid warning to interfere test result
Empty query checks, bug #28112.
Add test for bug #28112
bugfix #28112
Add test
A working fix for the safearray mapping bug.
The fix for the vc7 libc putenv bug is also needed here to avoid a crash.
Depercating mime_magic in favor of PECL::fileinfo
(probable) fix for Bug #27974: PHP Arrays are not mapped to VARIANTs.
ChangeLog update
More C++ comments.
C++ comments are ungood ;).
News about the ssl server socket bug
libmagic will only consume up to HOWMANY (hardcoded to 65536) bytes from a file, so lets save bandwith and memory by limiting us to this
Support for multiref data
- RC2-dev
- Prepare for RC2RC2 (if everything is OK especially Zeev's interface - patch I'll roll RC2 tomorrow).
yaz moved
Moved ext/yaz to PECL.
Restore fatal error in case a method that's supposed to implement an interface/abstract method, breaks its prototype
- Reorder news
ChangeLog update
mssql related fixes
minor update
No need for exception function, and renamed the 'error_buf' prop to errorBuffer to conform with the rest of the ext.
- More news
- make static methods calls work from within xslt - extended tests
ChangeLog update
Add new tests (by magnus)
add ext/libxml/ to the headers path
initial revision requires PHP 5
show ini entries and classes for extensions.
- Is it really this hard?</jani>
Adding tidy error handling news
and the news
Add pty support to proc_open() for systems with Unix98 ptys. # With permission from Andi
ChangeLog update
Simplify code via the use of macros.
- Whitespace
ChangeLog update
Retval may not be set when zend_execute() is overloaded
ChangeLog update
set Sybase default APPNAME to ("PHP " PHP_VERSION)
Modified error handling:
ChangeLog update
Bugfix #28012, now for snprintf
Bugfix #28012 spprintf() output inconsistent for %p
Handle failure in get_current_data
- Temporary fix for bug #27869 - George, you need to implement clone in order for "clone" and - compatibility mode to work.
typo
be a bit more explanatory ...
Remove duplicate entries
been stable for a long time now
Calls to zend_exception_error() were removed.
reorder..is this so hard..? :)
ChangeLog update
BFN
Bugfix #27997
Declare variables before calling functions. This makes tidy compile on Win32.
- Add comment
According to Wez, this is not needed. It also breaks win32 build.
- RC2-dev
- RC2RC1
- Enable iconv by default
ChangeLog update
Classnames shall start with an uppercase character
Update error messages in tests
New tests (and ordering of tests)
Bugfix #27979
Another setting leak in session code (bug #27963).
Export symbols needed by bz2_filter
This wasn't updated for new parameters for object handlers yet...
BFN
fix bug #27979
- Add hook for exception handler (Derick)
ChangeLog update
- Add fontpath for win98/XP (Patch by Friedhelm Betz)
- modifyable -> modifiable
ChangeLog update
Open basedir & safe_mode exception when copying or attaching to a memory only database.
ChangeLog update
studlyCaps
ChangeLog update
Changed ibase_user_[add|modify|delete]() to use service resources
- NEWS
re-organize as per PEAR-Core discussion
as per PEAR-Core discussion, remove all but absolutely essential packages for the installer, and for PEAR_Frontend_Web
ChangeLog update
oops, PHPUnit2, not PHPUnit
Add new test
BFN
Bugfix #27519 Reflection_Function constructor crashes with non-existant function's name
- Add missing "CEST" timezone
Remove debug output
Include Mail 1.1.3 with PHP 5.
- Added reworded destructor change
- Added test and not the diff ;-)
remove crap
Dan wants tabs -> spaces
forgot phpunit -> phpunit2 for php5
this should update the list
- Test case for bug #20382
Add code to fetch the pear bundle based on pear/go-pear-list.php For the moment, this is turned off, but it should be turned on ready for the next RC. (waiting for feedback from Edin and the PEAR guys)
Add this list here, so that pear-core guys can manipulate the PEAR bundle for the win32 snapshot.
Enable mbregex in win32 build
pfft..
ChangeLog update
- Add missing checks. Maybe fixes PR #27680
Allow compilation with gdlib 1.8
avoid deleting needed files when the .cvsignore file contains empty lines (mysqli)
Export symbols required by zlib_filter extension
BFN
- Hopefully fix the debug_backtrace() code.
cleanup
Revert the patch to "fix" #27664 and added more informal error msg.
Don't define ibase_service struct type unless its member types are defined
ChangeLog update
developer -> lead for cellog
Removed pointless check.
add PEAR_ErrorStack to description of PEAR
change release date
register_namespace changed to registerNamespace for consistency
Allow character set conversion for yaz_record's array method, e.g.  yaz_record($id,$pos,"array;charset=marc8,iso-8859-1")
reorder, reword, typos..
Remove duplicate entry
ChangeLog update
More divide & conquer
ChangeLog update
- Let it work safely
Removed unused variable.
CS
- One more test for a date/time related bug.
Add a comment why it is in
ChangeLog update
Patch by Timm Friebe: It changes set_exception_handler() to accept the pseudo-type "callable" (instead of a string referring to a global function).
- Nuke more old junk
That should do it
fixed #534 for real (remove notice if state=stable doesn't exist, and use "none" for stable version number)
Skip on Windows
Don't rely on OS-based authentication (as it is not supported under Win32)
Increase severity level and use a more precise error message.
- Nuke code which hasn't been in use for ages.
fclose() tempfile so unlink() doesn't choke on Win32
Change definition of ISC_LONG_[MIN|MAX] to please MSVC.
MFB: more elaborate HUGE_VAL test
Initialize to 0 to prevent valgrind warnings
fix Bug #937 throwError() treats every call as static fix Bug #964 PEAR_ERROR_EXCEPTION causes fatal error
fix #534: pear search doesn't list unstable releases
ChangeLog update
not devel any more
Support for domain cookies
Test file was fixed (implicit cloning strict warnings)
SoapClint support for multiple hosts (through WSDL) with cookies.
ChangeLog update
MFB: Revert patch for bug #27782.
CS/WS
Test binding of numeric timestamps
Don't rely on isql anymore, as creating databases is now supported by the API Changed tests to include ibase_query("SET TRANSACTION ...")
StudlyCaps fix.
WS
Some small improvments, support for new style constructors, support for exceptions other then SoapFault
Only wind filters when appending to the read chain.
ChangeLog update
This leaks when a stream opener proxy opens another stream.
- Align help output for configure.
disallow negative timestamps on windows only
use new style constructors fix return for nodelist item
ChangeLog update
Make time tests more robust against differences in implementation # FreeBSD mktime() returns -1 if is_dst==1 and no DST timezone is set
Add more statistics
The test script to search for underscores
TSRM fix
Disabled calling dtors on tsrm_shutdown - calling dtors in tsrm_shutdown makes modules registering TSRM ids to crash, if they have dtors, since the module is unloaded before tsrm_shutdown is called. Can be re-enabled after tsrm_free_id is implemented.
Prevent test from failing on least significant digit
Using studlyCaps names.
- Tiny improvement.
ChangeLog update
NAN==NAN doest work (Ard)
Removed extra spaces that cause the test to fail.
DOM_RET_OBJ for return_value needs to be followed by return
Remove debug code
Windows part of NAN/INF
Found a NAN/INF solution that should be portable everywhere(?) (Ard,Marcus)
Allow mixed case search for extensions
Synchronized bundled GD library with GD 2.0.22.
-clonning+cloning
Implicit clonning strict warning was added for ze1_compatibility_mode
 - be more verbose
Test updated to test for additional libxml2/expat inconsistencies
ChangeLog update
Use lowercasing here
Add ability to pass -n to the executed php
Improve portability (idea by Ard)
Initialize the complete struct
Add agrument type info
check writability on =& too
MFB test case for bug #27719 and improve comments in this tricky DST code
- call set handler if assigning to object having this handler - cleanup: use macros to access object internal vars
preserve ZEND_API in definition
declare as extern
Show progress
Adapt ecpectations to 5.0 reality
centralize object-to-scalar conversion, make it work with get handler
try get handler on printable conversion
some more clear comments
Use macros for object parts access
fix of fix related to __autoload. (ext/standard/tests/network/bug20134.phpt passes again)
ChangeLog update
Add new test
Even though it is uncommented it should be right
added missing files of oniguruma to mbstring.dsp.
Put AC_DEFINE in correct place so caching will work properly
BFN: MFHed #27687
Move defines to proper location
ChangeLog update
Touch after .c
BFN: MFHed
atof("NAN")/atof("INF") do not work there
Portable solution for bug #27646 that works correct on Windows, too
Commit the header, too.
Follow ming_xy naming convention
Change to studlyCaps convention # Hopefully discussed enough this time
Use studlyCaps and new macros (that should be it)
Force destructors to have empty signatures
Correct that name
let inf be generated by INF constant (thanks to Wez)
ChangeLog update
Pending touch
-Make NAN and INF more portable (atof() doesn't work on MSVC.6 for example) -Change test to use constants without prior conversion
Really use studlyCaps here
- Stopped file uploads from throwing E_WARNINGs and E_NOTICEs which can not be   hidden from within scripts (and a result value in the $_FILES global can be   used to see the real failure anyway).
- Remove old and deprecated <?php_track_vars?> scanner token.
Corrected package file.
another package description
- Update NEWS
- If __construct() is defined then it will always take precedence over - old style constructors.
no need to use result for RECV's - as in PHP4
Use get/set handlers for increment.decrement ops on objects
    /* The compiler is not-reentrant. Make sure we __autoload() only during run-time      * (doesn't impact fuctionality of __autoload()      */
Using ALLOC_HASHTABLE/FREE_HASHTABLE instead of emalloc/free.
ChangeLog update
more visa to sibira ;)
added test for property_exists checks.
New autoload protection schema was implemented (Using HashTable instead of boolean flag)
- Revert bogus commit
and set module startup flag on startup
reset module shutdown flag on startup
Object cloning in ze1 compatibility mode (zend.ze1_compatibility_mode) was reimplemented (Dmitry, Andi)
add account names & emails
fixed non-existent elements check ref: http://news.php.net/article.php?group=php.internals&article=8660
ChangeLog update
Revert studlyCaps change for now # until we reach a point where the majority knows what they want
Update .c output after .re
- Allow negative infinity - Register missing constants, they work anyway but cause an E_NOTICE # generation by atof() should be portable enough (afaik)
BFN
Bugfix #27646: Cannot serialize/unserialize non-finite numeric values
make sure that all extensions ignore build system helper files (both autotools and VisualStudio) and common editor backup files (especially usefull in combination with 'cvsclean')
"The Visa to Sibiria" (work in progress)
Consitency rules
Changed sqlite's OO API to studlyCaps.
ChangeLog update
export libtidy symbols
update for read handler api change
Revert patch to imagefillborder.
- Remove whitespace
ChangeLog update
update naming of tests - forgot to rename files before committing, but this is not a big deal, as the name 'Error_Stack' still makes sense
added in wrong directory, move to tests/
small changes Use '' instead of "" allow subclasses to easily change the exception class used just by overriding the _exceptionClass property
new package.xml to be used for installing tests, to make it easy to collect all tests in the same location for all PEAR packages
* fit copyright header on 80 columns
- Improve consistency
ups - changed alias instead of method before
renamed get_metadata method to get_result_metadata. (We have to differentiate between result_metadata and param_metdata.  mysql_stmt_param_metadata will be added in libmysql 4.1.3)
Update for new read_property API
return zval *, to make it useful for read_property
update to new API
API change for read_property: instead of bool silent it now gets fetch type This can be used for creating proxy objects for write contexts
- Nuke unused code
ChangeLog update
ChangeLog update
Cleanup, minor refactor, and CS
Make test work when user has memory limit setting
update to 1.3.1dev
ChangeLog update
phpunit tests for PEAR_ErrorStack
new Error Stack for PEAR, EXPERIMENTAL until proven solid and stable
*** empty log message ***
*** empty log message ***
BUG #27469 was fixed (serialize() objects of incomplete class)
- Back to RC2-dev
- Test for possible data corruption with __set
Add missing bug updates
Prepare to roll RC1
hint to raise stacksize (bug #27231)
Improve error message - on E_STRICT, method is actually called, so the error shouldn't say it cannot be called.
fixed problems in mysql_stmt_init (missing alloc from stmt)
removed if type=string: val is allocated for any type of data
* Converting tabs to spaces
* Typo fixes
- Reorganize
*** empty log message ***
BUG #27457 was fixed (using temporary hash table with string keys only)
- Change redefinition of constructor from E_COMPILE_ERROR to E_STRICT.
- Update Changes
s/emalloc/safe_emalloc/ where appropriate.
ChangeLog update
Readd x86 implementation
Userspace Directory Stream Test
Go with implicit call
Explicit cast needed for now
- Improved patch for support multiplication on 64bit machines
Test was fixed
- Stop make_printable_zval() from calling __toString()
fix typo
- Apply Ard's patch to support multiplication & overflow on both 32bit   and 64bit machines
ChangeLog update
Provide a meaningful error message when registration fails
- Replaced the exec_finished hook by the zend_post_deactive hook for   extensions. The new hook will be run after the symbol table and destructors   are run. (PHP part)
- Replaced the exec_finished hook by the zend_post_deactive hook for   extensions. The new hook will be run after the symbol table and destructors   are run. (Derick)
- Update news with fugbix
fixed stmt->stmt->query which was removed in libmysql 4.1.2 added query buffer in internal stmt structure to copy string after prepare
- Bump API number so that it actually differs from PHP 4. This is needed   because we don't want PHP 4 and PHP 5 extensions to be in the same directory   when doing "make install" for shared, or phpize'd extensions.
Improve the way auto-globals JIT works, and add the ability to turn it off
Add ability to disable JIT for a particular auto global
Update message
TSRM fix
Enable ptr format check for GCC 3.1 and higher
- initial commit   test case for #27504 (http://bugs.php.net/bug.php?id=27504)
fix typos
Do not allow 3.0.4 for __attribute__.
- Spaces to tabs
- NEWS
- If the called method is static then don't define $this
- Error out if get_method() isn't defined. - Use calling scope of internal function callee when calling a method   using static syntax (array("A", "func"));
Make use of zend_make_printable_zval() instead of 'manually' calling __toString().
This workaround is no longer needed
Improve error message
ChangeLog update
Keep BC of pg_fetch_object
Bugfix #27597 pg_fetch_array not returning false .
Missing NEWS entries
- Restore E_NOTICE for longs and doubles.
- Nuke E_NOTICE. This caused a notice when doing if ($obj == NULL)
Use MAKE_STD_ZVAL instead of ALLOC_ZVAL
Fugbix typo.
ChangeLog update
Guard display_startup_errors with checking for default (working) output functions.
typo
BFN
Make object parameter optional
- That change was unintentional, but it would be the right thing to do ;-)
- The extension list is ordered alphabetically, also moved the tidy section   to a more suitable place (new things go at the end, not at the start).
- Reorder
- Typo
- Add all of the fixes from the past week. Almost ready for RC1 now.
 - improve error message
Renaming cvsclean target; IRIX make seems to ignore .PHONY
- Improve compatibility mode and compare objects according to property - comparison (sucky but this is how PHP 4 behaved).
- Support old style of converting objects to long/double/bool. - This is only enabled in compatibility mode, else it calls cast_object() - and if that is not available we return 1 (true) so that the following - code would work: if ($obj) { }
Add new test
- Support Cast operator in convert_to_* so that we support internal - extensions such as SimpleXML. This is for Sterling.
- Initial commit which allows comparing overloaded objects with native - types (only for internal classes and not for user-land classes).
- add a 2nd test for #27582
ChangeLog update
Adding extension=php_tidy.dll
- add tests for the bug #27582 (imagefilltoborder crashes)
- restore too the alphablending if we do not reach the end of the function   Notice: This function still crashes (stack overflow), to reproduce it   see bug27582_2.phpt
Update test with check for [] assignment
Check for ext/spl being available
Add new test
Bugfix #27586 ArrayObject::getIterator crashes with [] assignment
- fix #27582 (http://bugs.php.net/bug.php?id=27582)   The problem was that the colors were changed endlessly, blending over   and over. An endless loop and recursive calls filled the stack=>segfault
fix #1008: safe mode raises warning fix register_argc_argv in pear.bat
ChangeLog update
MFB: Test getaddrinfo() for brokenness. Pretend it doesn't exist if it misbehaves.
zval **, not a zval *
avoid a memory leak when a php_curl handle is allocated, but the initialization of a CURL handle fails.
add the curl_copy_handle() function which will exactly duplicate a cURL handle. Useful when you have multiple "similair" transforms as with a multi handle with only small variances (like the URL)
- revert previous commit:  - Features freeze period  - No agreement on this change  - Even if an agreement exists, this change is not enough to allow the    usage of this new tag
* Adding new state "emeritus", which can be used for former maintainers of   packages.
Simplify check.
Additional checks of return values from user callback functions.
leave length as -1, no need to strdup()
Opps. Shouldn't look at the value, just the type
CURLOPT_INFILE === CURLOPT_READDATA
Invalid response code when force-cgi-redirect safety mechanism is triggered
ChangeLog update
Hack to check for ming version 0.2 and 0.3 to inclue the right libs.
update
- Real fix for bug #27535 (Dmitry)
- Attempt to fix bug #27535
- prepare 0.2.1
ChangeLog update
Readability++
More ZLIB exports needed by the ming extension
- Revert ini setting patch, as I notified in   http://news.php.net/article.php?group=php.internals&article=8451
getopt() doesn't work if variables_order does not include "S" because it only looks in $_SERVER for argv.  So, if we don't find argv in $_SERVER fall back to looking in the global symbol table where register_argc_argv would have put it.
Reexport some zlib symbols so we can avoid linking with zlib.lib in shared extensions (on win32)
Nuke unused vars
Don't use fp arithmetic for int results # FP arithmetic is not accurate enough on 64-bit archs # This patch relies on ZEND_SIGNED_MULTIPLY_LONG(), # so that should be fixed as well.
Typo
added new function mysql_stmt_free_result
ChangeLog update
Update
Drop copydoc and add more classes/methods
Access to inner iterator was missing
Make curl_setopt($ch,CURLOPT_RETURNTRANSFER,0) reset the RETURNTRANSFER to stdout as is implied in the documentation.  Currently it simply does absolutely nothing and there is no way to reset it to stdout.
Update
Rename hasMore() to valid() as discussed. (Part VI)
Update test
Clearify the different method/class flags (as discussed with Andi).
No longer needed
- Nuke unused code.
Make run-tests.php work with xdebug being loaded. # Lots of ppl use that as a built-in extension already.
Show the connect result
Missing buffer->val change
test for bug #27457
fixed memleaks in bind functions added 4.1.2 support (renamed functions)
- Added test for bug #27535 (Objects pointing to each other cause Apache to   crash).
Cleaned up phpinfo() output.
- free sugg
ChangeLog update
Change float operations to safe_emalloc(). Original idea by Sascha (see sess_sqlite.c)
Added enchant_dict_quick_check() function. Made enchant_dict_check() return a boolean.
More wordsize fixes
Cleanup
- Added mb_list_encoding() to return an array with all mbstring supported   encodings.
- sources cleanup:  - merge the tests of broker/dict pointers, I can always set them back if    we like to raise warnings here  - proto fixes  - remove printf() debug
Rename hasMore() to valid() as discussed. (Part V)
Rename hasMore() to valid() as discussed. (Part IV)
- Initial commit
MFB fix #27408
Rename hasMore() to valid() as discussed. (Part III)
Rename hasMore() to valid() as discussed. (Part II)
Rename hasMore() to valid() as discussed. (Part I)
Check count.
ChangeLog update
Add another missing conversion
Search for db-4.2.x
Avoid using floating point arithmetic and rely on safe_emalloc for the multiplication.
add cast for qsort compare function. Kinda ugly, but helps assert that we are doing the right thing as well as kill the warning there.
Corrected string escape calculation.
Less magic please
Simplify / fix
Added missing support for binding timestamps # Returning timestamps was already supported
ChangeLog update
- Forgot to commit this one.
Use correct variable name.
Better extension availability check.
- fix #27238
ChangeLog update
- Finally fix the following: $xml_mem = simplexml_load_string('<bookbody><part><chapter><page>1</page></chapter></part></bookbody>'); /* The following works fine */ foreach ($xml_mem->part as $part) {   foreach($part->chapter->page as $page) {  print $page;   } } /* The following segfaults */ foreach ($xml_mem->part as $part) {   foreach($part->chapter as $chapter) { // Difference here from previous example  print $chapter;   } }
Test files were fixed acording to new constructor redeclaration semantic
Test file was fixed (stack trace is removed)
ChangeLog update
- typo (must have sleep.)
- Prevent cli from printing multiple "Interactive mode enabled" if   the command line option is given more than once (like -aaaaaa).
Don't rely on ANSI tmpfile(), use the streams layer instead, it'll deal with platform issues.
- No maintainer anymore.
- fix a linefeed problem, if there are more than one configureoption
fix the fix
oops, fix cut&paste gone bad
- Added instance_of test (patch by Ard Biesheuvel)
Disallow redefining ctors and cleanup
Handle out of memory/bad size situation gracefully, without getting into loop
ChangeLog update
Attempt at fixing win32 link errors
Add missing source file
Replace mysql with mysqli in paths to allow building both mysql and mysqli
- Add missing include path.
ChangeLog update
- proper DLL linkage specifier.
- Added testcase for bug #27468
- CLONE, not CLOSE
- Added "clone" to the list of tokens. (Patch by Greg Beaver)
- Consistent naming
- initial test for #27439, covers more cases we got during   foreach($this->foo as $bar) bug
- Really fix the build. # Should be fixed now :|
- Revisit config.h for win32 build. # apologies for messing.
- include exception.inc not .php
Temporary fix for win32 build
- Added .cvsignore file
- Improve fix for protecting destructor's from exceptions. - I was killing the current exception completely which was wrong.
ChangeLog update
- excpetion.php => exception.inc (derick)
- initial release, reflection tests suite
use php_libxml_import_node for transform functions
- Typo fix (by Jan)
- Use past tense
- NFN
- Add support for more ISO8601 style formats.  . Timezone specifier (ex. 20040301T00:00:00+1900)  . Week specifier "W"  (ex. 1997W021) - Modified test case to test new features.
Cast the php_stream_dirent to a 'const char *' for estrndup() to avoid a compiler warning.
context parameter for opendir() and dir()
Must addref the resource when we make a new zval reference to it that will be exported to userspace.
ChangeLog update
- Yet another BFN
- Apply fixes by Timm.
- Change prototype isA check not to check the constructor. - Only give an E_STRICT for non-isA compliant code as opposed to   E_COMPILE_ERROR.
add ZEND_API there too for opcode handlers
- Initialize memory to \0 so that we can reliable detect whether a specific   opcode element is in use. #- Stas thinks it's OK ;-)
Move the _prependPath function into PEAR_Downloader from PEAR_Installer, as PEAR_Downloader uses it (and PEAR_Installer inherits PEAR_Downloader).
export opcode table
- BFN
- Bugfix #27287 (wddx segfaults during deserialization)
ChangeLog update
Remove unused variable.
- Reordering.
Memory allocation check.
- BFN & misc.
- Remove redundant files that are irrelevant to the build.
- Forgot to add those.
ChangeLog update
As discussed a while ago.  There is no reason to disallow command-line arguments for the cgi version when run in a cgi context.  Our own test framework is in fact broken because of this unnecessary restriction.
Define buffer size macro and add a comment about the buffer size.
Add some comments
win32 specific fixes
fix: Incorrect error message
The order of error has changed here. So the expectations must change too.
fix #640, error in comment for getStaticProperty
get_class -> is_a
ChangeLog update
Adding function to change user passwords
Add new test (from pierre)
ws & cs fixes
prototype fix for mysqli_ping
added MySQLI ini entries added ini parameter for mysql->reconnect
removed blocking calls to mysql_set_server_option (MYSQLI_DISABLE_MQ) added mysqli_multi_query to function table changed stmt->affected_rows property (http://bugs.mysql.com/?id=2247) for 4.1.2
ChangeLog update
Remove bogus test: see bug #20993
MFB: typofix
Handle situation where feof() occurs before the HTTP header is retrieved.
As Andi found out the dtor may increase the refcount.
ws + cs
Temp fix for ctor signature until inheritance fix is complete
Revert and add the compatibility option.
typofix
Wordsize fixes
style
Test for bug #27395
- More NEWS
This is no longer valid out of the box PHP 5 code. We tried to enable compatibility mode but the test engine doesn't appear to take the --INI-- section into account in compile time, so it didn't work...
- Improve ARG_INFO() macros to support supplying required_num_args - Initial fix for foreach($o->mthd()->arr) crash (now leaks)
HTTP compression (memory leak was fixed)
fix: XMLSchema <choice> support was improved to support elements with minOccurs=0
- Use <span> instead of <font> in highlight_string(). (Patch by mg@iceni.pl)
HTTP compression support (gzip and deflate)
Do not corrupt mysql build with mysqli build stuff. (should fix #27387)
Improve error messages
update
  - Rename compatiblity mode to zend.ze2_compatibility_mode (it doesn't   only affect auto-clone).   - Perform implementation checks even with simple inheritance (off when     compatibility mode is enabled).   - Restore default arguments in interfaces and handle it correctly.   - Move registration of internal classes later in the startup sequence     in order to have INI options available.
- Rename compatiblity mode to zend.ze2_compatibility_mode (it doesn't   only affect auto-clone). - Perform implementation checks even with simple inheritance (off when   compatibility mode is enabled). - Restore default arguments in interfaces and handle it correctly. - Move registration of internal classes later in the startup sequence   in order to have INI options available.
ZTS fix.
- Abstract methods cannot have defaults for arguments - Make function foo($a, $b=null) satisfy both foo($a) and foo($a, $b)   prototypes
Proto fixes.
Checking once for dtor is enough
ChangeLog update
fix for bug 27384
Add missing export.
More wordsize/alignment fixes
Documentation update
Remove empty comment
WSDL support for <soap:headerfault> was implemented
fix win32 compile with libxml 2.6 fix mem leaks
fix: anotaion -> anotation
constants for MIME/DIME encoding were added
XML Schema support was improved: support for <element> default, fixed and nillable
ChangeLog update
test case for statcache corruption of BG
Ooops, these should not be pointers ;)
Make today's changes work w/ str_ireplace() as well.
Short circuit str_replaces when we already know that needle does not occur in haystack.
Bugfix #27276: When using str_replace to expand a string, count occurances of needle in haystack to avoid massive overallocation
- Added testcase for bug #27276
- Improve precendence:
fixed prototypes for mysqli_connect_err* functions (thx to Mehdi Achour)
64-bit fixes
- omit WARNING instead of ERROR for x_p_c_ns - fix SKIPIF code in tests
skip tests, if xml_parser_create_ns is not supported.
test for attributes
- mixed up name and value... fixed
fix attribute handling in combination with sax2
Use ZOOM_resultset_sort for yaz_sort. Require YAZ 2.0.13 or later.
remove compiler warnings
- Decrease precedence of instanceof so that the following is true: php -r 'var_export((object)1 instanceof stdClass);'; Patch by Jan Lehnardt
- make it compile with libxml2 2.5 again - disable xml_parser_create_ns with libxml2 2.5 for the time being - the #if s can be removed, once we insist on libxml2 2.6
fixed report message Disabled reconnect option
- Added PHP_TEST_BUILD macro which can be used to test whether build   works / would work with current LIBS (+ additional extra-libs)
64-bit fix
64-bit fix
ChangeLog update
64-bit fix
- Moved internally used includes/macros/structs/etc. into tidy.c to prevent   any conflicts with any other library/header/extension.
- Added testcase for bug #27354 (Modulus operator crashes PHP).
Add some more obviously needed information
add test for default namespaces and same-prefix/different-namespaceURI
wbmp conversion warning fix.
add optional third parameter to support namespace in constructor
ChangeLog update
Avoid use of memcpy(), reply on struct in_addr to be right sized instead
Set correct default threshold for image2wbmp().
Can't test whether it works (no current >=mysql-4.1.2 available on Windows), but it should.
fixed typo in method alias
ChangeLog update
s_addr is always unsigned 32bit, long is not.
stupid oversight, no 4.2 dep
BUGFIX: bug in HTTP chunked encoding was fixed
- Remove DB 1.6.0RC6
- Update to DB-1.6.0 stable
- MFB
Moved functions for replication support in to file mysqli_repl.c   - these functions are marked as experimental now in documentation     not sure if we will replace or extend them with NDB support in     April
this should really fix compile failure with gcc 2.96
EXTERN_C wrapping for PHPAPI prototypes (Zend and main should now be ok)
wrap all PHPAPI prototypes into BEGIN_EXTERN_C/END_EXTERN_C blocks (else they won't be usable from C++ extensions)
more EXTERN_C wrapping of ZEND_API prototypes
A script that searches for PHPAPI and ZEND_API prototypes not enclosed by BEGIN_EXTERN_C/END_EXTERN_C
ws fix
Only use Z_TYPE* with zvals..
ChangeLog update
Added missing safe_mode & open_basedir checks.
Don't try to use <input> name instead of <opeartion> name for encoding RPC call
Reading HTTP responses without "Content-Length:" but with "Connection: close"
WSDL caching bugs were fixed
fix: prevent possible crash
Passing arguments to "anyType" cause passing type information in literal encoding. Receiver gets sach parameters as SoapVar objects.
Support for SOAP Fault encoding according to WSDL <fault> and <soap:fault>
Improve error messages
ChangeLog update
wrap ZEND_API prototypes into BEGIN_EXTERN_C/END_EXTERN_C for C++ extension support
always return domnodelist unless error
be nice to C++ extensions
correct implementation of prefix write property
register_list_destructors -> zend_register_list_destructors_ex
changed return value of mysql_fetch   - instead of MYSQL_NO_DATA mysql_fetch will now return NULL
Forward-port fixlet from PHP 4 (thanks to Michael Sisolak)
fix: SoapFault constructor fixed to confirm documentation.
BUGFIX: HTTP chunked transfer-encoding support
Show registered transports in phpinfo()
ChangeLog update
Test for bug #27287
add dtor to cleanup iterator related data
Using element namesapces with literal encoding.
support for XMLSchema <element> nillable attribute
Added event handling test CS
implement clone functionality to fix segfault DomNode->clone() creates new doc proxy if document is cloned remove printf from xpath fix remaining invalid object state issues
fix: Using proper namespace for <soap:header> if it is not specified.
Encoding of ommited tail parameters as NULLs
changed output
* apply bold escape codes only if output is going to a terminal/tty
ChangeLog update
- Add "zbacktrace" user-defined command.
shorten the description a bit
nuke copypaste rubbish
test for bug #27278
specal case of array encoding. If object has only one inner element and this element has max_occurs > 1, then array can be passed directly.
BUGFIX: incorrect restoring of negative integers from WSDL cache
- A fix to make UDM_LIMIT_DATE work was applied. Thanx to   d.rousseau at nnx.com
this was MFHd..
fixed some tests added skip section for prepared statements when using SHOW command
Better gmp fix.
 - fix typo
issue warning if object is in invalid state when dealing with properties
- Clearify clone behavior, fixed clone example (Patch by Jan Lehnardt)
Prevent processing SOAP headers with invalid namespace in WSDL mode.
ce is not used, don't get it
fix: prevent of possible crash
- fix test
ChangeLog update
BFN
Bugfix #27227 Mixed case class names causes Fatal Error in Constructor call
For get_data iterator do not force numeric keys, return keys the user requests.
fixed several binding problems
switch to zend_parse_method_parameters for consistancy insure object parameters are correct class types convert zvals to correct type if needed for property writes fix a few segfaults found while testing
Reintroduce param NULL testing (see bug #26777)
Prevent bug reports like #27260
* don't cut lines when wrapping output
allow certain methods to be called statically again:    domdocument (all load methods)    domimplementation (all methods) switch to zend_parse_method_parameters for consistancy insure object parameters are correct class types convert zvals to correct type if needed for property writes fix a few segfaults found while testing
switch to zend_parse_method_parameters for consistancy insure object parameters are correct class types convert zvals to correct type if needed for property writes
Use zval_ptr_dtor() to free variables as soon as they hit refcount of 0.
start of dom update switch to zend_parse_method_parameters for consistancy insure object parameters are correct class types convert zvals to correct type if needed for property writes
- Changed initialization of function arguments to message handler # Hopefully fixes bug #27157 (Compile Failure on Solaris 8), user does # not know how to use patch and therefore couldn't verify this works.
ChangeLog update
 - improve error message
 - silence warning
bfn
dtor's may not be called from free_storage handlers
- We always need to destroy the llist though.
ChangeLog update
Source cleanup
Old in-memory WSDL cache was removed (it was already switched off by #ifdef)
Cleanup
SoapClient::__getTypes and SoapClient::__getFunctions were fixed to return proper information
BUGFIX
ChangeLog update
Added cvsingore
Added package.xml
Initial commit of the fileinfo extension.
Adding mising declaration (needed for Win32 compilation)
* email address update
* update my email address
better write into the correct buffer
name the pecl bundle pecl-foo instead of php-foo-pecl.
WSDL support for unknown extensibility elements and wsdl:required attribute (Interop Round3 GroupF)
fix: possible crash was fixed
- We are RC1-dev now
- Roll Beta 4
- Remove old code
making sure that the provided examples actualy work (or at least do not generate no parse errors) unless they are really expected to fail
reorder
- This was too strict.
- Update to DB-1.6.0RC6 (stable)   notabene: No more RC with stable state will be bundled with stable   php release. It's ok for php5 beta4.
- Remove old DB
- More news
ensure that install exists before copying files.
- Add News entry
extend Exception
Tidy up "nmake clean" for people that don't have a PECL checkout.
- Add comments to read/write property/dimension for extension authors
extend Exception
fix copy-n-past error in constructor. Spotted by Eric Colinet.
Update configure
Caching of temorary WSDL files was disabled.
Added zend_exceptions.c to the build
zend_default_classes.h -> zend_exceptions.h
Using zend_throw_exception_object() instead of EG(exception).
- Add zend_exceptions.c
Centralize exceptions code in zend_exceptions.[ch]. Remove zend_default_classes.h (use zend_exceptions.h instead)
- Use zend_throw_exception_object() in throw_handler to make sure it - does all the checks
Exceptions updates:
- Add API function to throw exception by using an object
"Runtime Configuration" and "Exceptions" were added.
- Go with b4 RC 1 (Sanity package)
ChangeLog update
ws fix
Cleanup
Must be initialized in ZTS mode
Update
Update
There is CODING_STANDARDS..at least NEW code should respect those..
style
Bugfix #27104 CLI/CGI SAPI module variable name conflict
Prevent SimpleXML from silently modifying types of variables that are assigned to its objects.
	- Added checks for invalid characters in a cookie name or cookie data 	  from setrawcookie. (Brian) 	- Added new pspell functions to set the dict-dir and data-dir options. (Brian)
	Added checks for invalid characters in a cookie name or cookie data from setrawcookie
	Added two new functions to set the dict-dir and data-dir options.
'Touch' the file to make sure re2c is not needed.
Look in the right place for lib
support for command line interface was improved
Cache files access rights were changed.
Get rid of some yucky past, and reenable these tests
Turn off bogus warnings with overloaded dimensions and += (and friends)
Proper win32 fix.
Improve the implementation of unset() on array dimensions to be more consistent with that of regular variables and string offsets
Now SoapClient uses excptions as default method for error reporting
Add version info about run-time client library # A number of user crashes appear to be caused # by using incorrect combinations of libraries
CS/WS
- Change to b4
Change FETCH_RESOURCE to return false on error instead of null, for consistency with other error situations
Finally add a notice to hint people that using dl() is a bad idea...
Complete the fix for handling of exceptions happening during the argument passing phase of function calls (fixes bug #26866)
whitespace
removed printfs :) Thx Andi!
changed first param in mysqli_bind_param
changed first parameter in mysqli_bind_param from array to string (as discussed on berlin db meeting)
ChangeLog update
fixed a compilation error.
Ignore the memleak in this test
- Removed pointless call to error_reporting()
Clear that up
Cleanup
Whitespace
 - fix #27197 for Greg (cellog@php.net)
WSDL caching was implemented
Add test case for bug #26866
- Nuke more unused code
- We will go with PHP 4 behavior. With the new object model assigning by   reference has lost a lot of its importance.
- Remove junk
Update NEWS
Implement get callback for SimpleXML (it now supports pre/post increment as well as binary-assign-ops)
- Correcting test. # still segfaults though.
ChangeLog update
ws
Delay creation of exec handle til it's needed
Allowing to report SOAP Fault with "return new SoapFault(...)"
Allowing to pass request to SoapServer::handle direct (not through $HTTP_RAW_POST_DATA).
ChangeLog update
- Initial release
- Changed error_reporting setting to E_ALL so we get the notices
- Made server name and credentials contain something obviously incorrect. - Made charset parameter default to "iso_1" (fixed "Sybase: Unable to   update character set." warnings which were failing all tests when the   official Sybase libraries were used - FreeTDS ignores this).
- Change from PHP5 -> PHP 5
Update to new API
- Check if free_storage exists
ChangeLog update
fixed cast warning
* obsolete
fix PATH_SEPARATOR issues - was defined in PHP 4.3.0, but documentation never showed this.
ChangeLog update
fix
optimization
fine tune
WSDL cache was disabled by default (see WSDL_CACHE macro) WSDL related memory leaks were fixed
Free XML documents after WSDL parsing (they no longer need).
prefer != "no" over = "yes". (it doesn't really matter for ext/soap, but it's still the best practice).
PHP5 and WIN32 support was improved
Possible fix for bug #27165.
Do not initialize & create vars unless they will be used.
ChangeLog update
typo
PHP API was changed (see readme.html for more details).
Committing for Jan.
WSDL parsing speedup. Source cleanup.
fix serialization
fix test - remove warning
fix bug #27149 (offset should start with 1)
Bug fixing news.
Updating tests that got left behind when we changed to studlyCaps and fixed another test
ChangeLog update
Remove double initialization
Parse command line ini directives passed using -d before -i, to ensure correct settings output.
Add new prototype
Add test
The &new is no longer needed, prevent E_STRICT message
- Added recent stuff to NEWS
Update test (reason: can no longer assign to $this)
Update test (reason: early binding changes its behavior)
Update test (reason:  early binding changes its behavior)
Handle additional cases
Unnecesurry namespaces was removed form SOAP fault responces
SoapServer::fault() method was implemented Unnecesurry namespaces was removed form SOAP fault responces
Reinstate early-binding for classes.
Optimize
SOAP Headers was implemented (near complete)
- Improve $this assignment detection and generalize some code in zend_compile.c
-Error out when trying to re-assign $this
kill warning
API updates
The valid bit was necessary after all - restored
- Small fixes
- Improve wording
- Update with new destructor code
Change destructor implementation (details will follow on internals@)
- Update libmbfl to the latest. This fixes several serious issues in the html   entity encoder and the encoding detection facility. There should be no   problem with mailparse() as API change was made so carefully that it   would be as small as possible.
ChangeLog update
re-adding as binary - file is unmodified
remove in order to re-add as binary
Update tests
No longer needed
Update tests
Nuke unused variable
clone/__clone() related changes.
Initial support for client-part SOAP headers (very incomlete)
SoapServer constructor was extended by default SOAP version.
Remove unused variable
touch
Remove more garbage - valid bit was not really necessary
- Clean garbage (delete was nuked a long time ago)
More unneeded code removed.
Abort on parse error in an include file (patch by Ilia)
Remove redundant code
-remove obsolete types -changes in config.m4 to make oci8 to compile with Oracle 10g (thanks to cjbj at hotmail dot com for reporting both problems)
fix bug #27120 and bug #25975 - preserve is_ref when bound objects are serialized
Perform a bitwise copy of the object even when __clone() is defined. __clone() is back to not requiring any arguments, as $that is no longer needed ($this already contains a copy of the original object, by the time we __clone() is executed). Calling the parent clone is done using parent::__clone()
SQLITE_ENCODING should be UTF8 rather than UTF-8
Prevent cvsclean from being removed on interrupts
order
This should allow us to read dictionary locations from the win32 registry when we use a custom config. Not doing so when I added win32 support was an oversight. Now all pspell_new_* functions should be usable on win32.
ChangeLog update
typo fix
TSRM fixes
Tests are executed with E_STRICT
fix: proper handling of SOAP 1.1 href and unresolved attributes references
*** empty log message ***
Server-part support for SOAP Headers was implemented (incomplete)
Interbase news
Use correct flag for repair options
Use php_ prefix for header files Added nearly complete implementation of service API
Use php_ prefix for header files.
Redesign the clone() feature to fix some fundamental flaws in the previous implementation.
add missing alias for ocifreecursor()
CS fix (functions should not be available if they are not available :)
fix yet another possible segfault
ChangeLog update
No explicit inline (fixes Win32 linkage issue)
Whoops line endings
Remove extension internals from php_interbase.h
Test for Interbase version 6 API in 'configure' # Always enable in Win32 for the time being
Added backup/restore functions Split interbase.c into several files # It was becoming too big to handle
ZTS fix.
- Forgot to add test case.
- Binary compatibility stuff, for safety.
ChangeLog update
make pear run-tests work with PEAR core tests, allow it to work for Windows users as well
- POSIX / ISOX compliancy.  This is needed to correctly handle UTF-8 characters.
Throw an exception in case a reflection object cannot be found and do not override the exception from constructors in static method calls.
Corrected binding:   if column has type DECIMAL it will converted to string now.   Thanks to Brian Aker for pointing this out.
ChangeLog update
added nuw_rows property for statement object
Server part support for "document" style encoding was implemented
Some tests from official SOAP 1.2 specification was added
SOAP 1.2 specification conformity was improved
word fix
Support for https:// through proxy was implemented
order
Include Sascha's indendation hint
Newer compilers don't need this so many people don't know. Hence we make it a coding standard.
Apply the same parse error handling to (include|require)_once as the one for their non-once counterparts.
ChangeLog update
*** empty log message ***
Proper configure switch for sqlite.
Rollback: persistent PHP streams (dont work with "kafka")
Apache 2 portion of the fix for bug #25753.
PHP4 support HTTP proxy support for PHP4 Using persistent PHP streams for HTTP connections
fix: "Authors" corrected
Support for HTTP proxies was implemented
- Add our standard header
Support for nonWSDL mode was improved (SoapVal,SoapVar,SOAPAction...)
fix: possible crash was fixed
ChangeLog update
fix corruption when cloneDocument is not defined
Update
This should not have been an INI_ALL directive.
removed experimental status
removed experimental status fixed bug in mysqli_data_seek (thx to Andrey "Effendi" Hristov) various prototype fixes moved some methods to properties which are part of mysql struct added function mysqli_get_server_version
FTP dirstream_read should not leave whitespace/newlines on dirents
Tweak checks to detect some additional cases. Reorder checks to make more sense.
this should not belong to HEAD
MFB - see bug #25753 for details
Error reoprting improved by prefix New 'HTTP' fault code Source cleanup
Bug fix: Images would be broken on big-endian machines because the putc function wrote the first (instead of "the low order") byte. That resulted in unexpected zero bytes.
Source cleanup
Test suite for XML Schema and SOAP encoding/decoding
Source cleanup
Add namespaces to <Envelope> (not ot subnodes)
- Error message fix - Prevent inheritance of the same constant from two interfaces
Prevent classes from implementing interfaces that have the same function
Whitespace
Code relayout
Forward-port fix for timeouts under Windows
two fixes: -oci_lob_load shouldn't reset LOB's length to zero -Oracle feels bad, but reports no error, when trying to erase LOB with offset bigger than LOB
ChangeLog update
message about that mysql_list_tables() is deprecated
fix: HTTP keep-alive
enabling HTTP status code 100 (used by Delphi SOAP)
SOAP Fault uses HTTP status code 500
Support for relative path in WSDL and XML Schema <import>
changed prototype mysql_dataseek from void to bool   add check for specified offset
prototype fixes removed method field_tell (which is already property current_field)
Allow <element>s with same names
fix: error handling
XML Schema support was improved 	support for <attribite> default and fixed values 	support for encoding of list elements
Proper handling of SOAPAction in SOAP 1.1 and SOAP 1.2
Removed unused variable.
ChangeLog update
Must use zval* here
Remove test code
- Export struct zend_user_iterator - Ad 'it' to function prefix to prevent naming clashes - Export zend_user_it_free_current
fixed compiler warning (thx to Marcus Boerger)
<Fault> encoding was changed
fix
Support for SOAP 1.2 Fault/Code/Value and Fault/Reason/Text
fix: memory leaks
SOAP 1.2 Fault support (Code,Reason,Datail instead of faultcode,faultstring,...)
change to use different allocator (Sascha, thanks =) )
fix this annoying notice about limited range
improve debug messages
Support for SOAP 1.2 RPC binding (<rpc:result>)
XML Schema support was improved   support for unsignedLong standard type was fixed   restrictions checking was disabled   support for standard list types (IDREFS, IDS, NOTATIONS)
oops =( forgot these brackets..
fix oci_field_type_raw's proto oci_collection_element_get should return FALSE only if there is no such element and NULL, if it's null
New function yaz_es that creates Z39.50 Extended Service Package to facilitate record update, database create, database drop.
proto fixes removed mysqli_read_query_result (will be removed in libmysql)
Update URL.
Apache namespace was removed
XML Schema support (decoding of xsi:nil with attributes) Source Cleanup
Add README
We are in c not c++
more prototype fixes. fixed a bug in mysqli_send_long_data
test for bug #26900
- Remove gpc_order since it doesn't serve any purpose.
- # 521 entry
ChangeLog update
- Remove useless property
- Suppress a compiler warning by a rather useless typecasting.
- Use is_a
WS
- Update Mail, HTTP and DB. Adding new archives
- Update HTTP, DB and Mail packages
- Initial release
- Added test for case when incorrect argument type is   passed to sybase_set_message_handler()
@- Added ability to define a message handler not only globally, but also @  per connection (Timm) @- Made sybct.login_timeout changeable at runtime (Timm) @- Added ini option sybct.packet_size which lets you control the packet @  size (Timm)
Show supported classes & interfaces in -i and phpinfo()
MySQL is no longer built in by default
CS
entrt about feature request #24258
BFN
Respect proeprty visibility in foreach
Update test
Update examples
Check for both Firebird 1+ and Interbase/FB1
prototype fix for mysqli_fetch
BFN
ChangeLog update
Changed prototypes to allow parsing of string literals and constant strings Minor CS/WS
TSRM fix
Switch from ZEND_ACC_DYNAMIC to ZEND_ACC_ALLOW_STATIC and disallow calling internal non-static methods statically. # As discussed with Zeev: # - For BC standard userspace methods allow this with an E_STRICT message. # - If you want to implement an internal method taht can be called both #   statically and non-statically then use flag ZEND_ACC_ALLOW_STATIC. # - Magic user space methods __*() cannot and __construct, __destruct, # __clone can never be called statically.
- Added test on char type
prototype fixes
Change message as proposed by Jon.
- Initial release
- Initial release
- Initial release
ChangeLog update
This is a definitive 'must'
Added third parameter (optional) to array_keys for strictness. It behaves like the "strict" parameter of in_array(). #Closing feature request #24258
Adding note about declaration first use after that for classes. #I had no time recently to add this but since a user complained on #internals....
Simplify detection of methods that must be called dynamic (with object)
Builtin recursion protection (by disallow to follow links by default).
Disallow calling __clone/__construct/__destruct static Send an E_STRICT when calling a non static method static
Disallow static declaration of clone
fix
disabling import if file was already loaded
XML Schema support was improved 	support for type extension 	support for attribute encoding/decoding 	support for SOAP 1.2 array encoding/decoding
XML Schema support was improved 	suport for type extension
typofix (thanks to Mehdi Achour for noticing this)
Silence some compile warnings
ChangeLog update
update test
Add new test
Update tests
update constructors so they cant be called statically
XML Schema support was improved 	support for content model (<sequence>,<all>,<choice>) 	support for top-level <group> 	support for <group> 'ref' attribute 	support for content model encoding/decoding (incomplete) 	support for attribute encoding/decoding (incomplete) 	support for <attribute> with inline anonymous <simpleType>
- Update examples to studlyCaps syntax
add collections support to win32 build
add missing protos and some minor changes
MFB oci_lob_save() should be removed indeed, but we're already in feature freeze =(
ChangeLog update
test case for bug #26938
Change to correct syntax. # The test will still fail though.
All technical reasons that prevented us from studlyCaps are solved and all current extensions as well as the whole PEAR framework follow this rule. So for consistency i readd it. # Also we had the discussion onece and decided for this. # Lookup the archieves
*change constant name, coz it doesn't comply with others *add constant's alias, coz others do have aliases *change protos (oops =)) *add notices to collection functions *change coll_element_get & coll_assign to inform user, that this type of element is not supported yet.
Source cleanup
XML Schema support was improved 	xml tree cleanup (save memory and parsing time) 	support for <inclide> and <import> 	support for top-level <attribute> 	support for <attribute> 'ref' attribute 	support for top-level <attributeGroup> 	support for <attributeGroup> 'ref' attribute
fix potential segfault in oci_lob_write() change oci_lob_trim() - truncate length should be 0 by default.
MFB
News update on new streams method
Moving the OO syntax to studlyCaps.
stream_lock() method added to userspace streams wrapper
Adding dependencies on sqlite.h for the rest of the source files in the libsqlite distribution.
Last php4 occurances..
Break out the test with first hit.
Typo
extend a bit
test case for bug #26973
typo fix
test for bug #26976
ChangeLog update
Goto targets should not be indented (some compilers choke on this, iirc)
Add cvs tags
Prevent shared builds under windows too
default to compiled in to match unix.
XML Schema support   - support for <element> 'ref' attibute was implemented   - support for inline types   - support for <list> and <union> (incompleate)
update todo part of readme
-
ChangeLog update
BfN
test case for bug #26696
fixes segfault, if file doesn't exist (by Pierre-Alain)
- Make sure srand() / mt_srand() are really called.
really fix this test...
fix test
added missing dots..
Cosmetics and NEWS entry
- Turn off mbstring.func_overload as this test uses plain strlen() for   comparison.
XML Schema support was impoved
@- added XsltProcessor->registerPhpFunctions() (Christian) without that method call, it is not allowed to call php functions from xslt stylesheets for security reasons.
adjust test
* CS
- Hopefully fix bug #26696. - Please let me know if hell-breaks loose
fix typo
Must be buitin
Add spl_sxe to prackage
- Being picky :)
Add spl_sxe.c.
- SPL lives now in ext/
XML Scheam support
Added fgetcsv() tests.
fix -m argument to mkDir().  Conversion to octal was not being made, and a string should never be passed into mkdir().
- Moved php_srand() call into php_rand().
BFN
ChangeLog update
Add zend_get_module_started() to quickly check whether a module is present and its MINIT function has been called.
Improove debug capabilities
Rename header to prevent name clashes with external files
Add .cvsignore
Necessary as long as SPL is shared/dll
Update, id_l is unique
Add spl interaction test.
Update
- This define is not used anymore
Not needed
Add class SimpleXMLIterator
Enable inherited classes inside SPL and respect order of module init.
Use external files only in 001.phpt & tests for bugs
Export access to class_entry by function.
- fix for bug #26947 Crash by using DomDocument::getElementById()
-test for more than one argument (this segfaulted before)
ChangeLog update
update the tests proper-like
update the examples
namespace accesses are now soley URI based as opposed to prefix based.
Make the compilation of vdbeaux.c dependent on the generation of sqlite.h. An incremental 'make -j' build will now complete successfully.
use Rasmus' words
Spell 'element' correctly.
adding info about $argc and $argv in CLI mode
Major bugfix for consistency. # After long discussions we came to a conclusion on how to make this # extension consistent in itself. # Thanks to Rob for all the work
Clarification about phpDoc comments. Spotted by Greag Beaver.
No longer needed # Found by Andrey
HEAD is bundled with ZE2
Drop the external xml files no longer needed
HEAD is now bundled only with ZE2
No external xml files
Don't use external xml files
fix Bug #594 PEAR_Common::analyzeSourceCode fails on string with $var and { also fixes SOAP packaging error
#where has my bracket been gone?
remove the parser errors here, so they accurately reflect what should happen.
Add test for inherited simplexml classes
Make inherited sxe classes work
- Renamed all *php4* files to *php5*, changed all php4/PHP4 to php5/PHP5
(gdImageSetPixel) Tidied 'normal' blending effect # libgd-2.0.12 fixed the problem with alpha-blending on semi-transparent backgrounds so # gdFullAlphaBlend() and friends are no longer needed
typofix
ChangeLog update
Expose zend_std_call_user_call(), needed for implementation of things like __call handlers.
Nuke compile warning by using the LANG_SCNG macro instead
update file for win32 build
update the profile of how namespaces should work after discussions with shane and rob richards.  there were a lot of race conditions with regards to the way namespaces have been handled in XML documents so far, this new method removes the race conditions, and gives me a real reason to add the children() and attributes() methods.
Add a "profile" of simplexml's expected behaviour in the form of tests. This will be expanded as issues arise and will be a formal definition (in code) of simplexml's behaviour.
Kill warning (bug #26937)
Added test case for bug #26640
Update TODO
Added Antony Dovgal as OCI8 maintainer.
Added missing skip condition.
fix
WSDL support was improved  support for message/part element attribute was implemented  support for portType operation input/output name attribute was implemented
BFN
Add myself at last =)
faultcode/faultstring mismatch was fixed
Support for SOAP 1.2 HTTP binding namespase was added
Tests where updated.
SOAP 1.2: enc:id & enc:ref attributes support and fault codes (Sender/Receiver) where implemented
ChangeLog update
SOAP 1.2 support was improved
Nice patch Christian, but it wasn't at all enabled? :)
Changed to mixed-case response header codes. This is in keeping with the changes to >= Continuity mk4 mod1.
Support for SOAP 1.2 array encoding/decoding was implemented
SOAP 1.2 support was improved
Drop userspace iteration correctly. # People if you do such things then please fix the class tree.
SOAP 1.2 support was improved
ChangeLog update
fix get_class() case-sensitive incompatibility in PHP5
This is no longer usefull in any way.
test user define namespace aliases
touch generated parser.
Upgraded bundled libsqlite to 2.8.11 (fixed critical bug of *NIX systems).
WSDL: restrictions support (whiteSpace, minLength, maxLength, length)
array/object encoding
SOAP message must not contain a Document Type Declaration
Remove stale code from flock(); spotted by Hartmut.
Don't allow interfaces to implement anything
WSDL: encoding rpc/document and encoded/literal
touch
fix crash when throwing an exception
- Remove bogus macros
- Remove use of bogus macro
Apparently MSVC is not C99 compatible making variable marco arguments in the TIDY_THROW() marco broken in (at least) Win32. This provides a suitable workaround for non-C99 compatible compilers.
Doh.. snuck by me!
Forgot to add these tests
Add optional php-win.exe variation of the CLI sapi. php-win.exe runs in the windows GUI subsystem, and thus has no console; stdio handles are effectively set to /dev/null and no "dos box" will appear on screen when running scripts using this sapi (php-gtk people will be familiar with this concept).
With the approval of Andi, changing the Tidy API to reduce the possible amount of confusion when setting Tidy configuration options. All configuration must now be done pre-parsing of the document. Removed references to the tidy_attr class, as it is no longer used (since tidy 2.0) and made tidy throw exceptions for all truly non-fatal errors.
ChangeLog update
add support for $foo["a:bar"] fix xsearch to only return values for text,element and attribute nodes fix getChildren and return array remove most methods update test
BFN
FIX: memory leak
WSDL: support for "http://schemas.xmlsoap.org/wsdl/soap12/" binding was added
bugfix
Don't treat strings containing : as potential constant names in the .ini parser. This fixes Bug #26893
reinstate this ifdef for people without .Net SDK
Source ceanup
fix getElementsByTagName and getElementsByTagNameNS - allow *
WSDL: support for multiple services/ports/bindings was implemented
Check for "<?xml" header was removed
WSDL support: using types before declaration was fixed
XML parsing warnings and notices were disabled.
Support for WSDL <operation> without <input> message
HTTP Cookies support (see interop round2 base kafka)
Don't even define this.
Whoops... Ilia forgot a ')'
make usleep actually work properly
ChangeLog update
Support automatic handling of byref parameters
More handsome solution for previous fix
Added sanity check on ibase_[p]connect() dialect argument (fixes obscure unregistered bug)
Avoid duplicate symbols; definition is in bz2.c
fix
fix
Date comparsion was fixed to compare dates with different time zones.
Timezone support
Small error reporting fixes
WSDL support: schema import
WSDL support: support for wsdl import
This was way out of date.
WSDL support: use of type before declaration (see interop round2 base OpenLink echoStructArray)
- Return the PHP 4 behavior of not allowing class declerations within - class declerations. This happened when declaring a class within a - method. class A { 	function foo() { 		class B { 		} 	} }
Synch mysql_fetch_object with mysqli, sqlite and pgsql
Add some tests
ChangeLog update
Proto fix
No longer needed
Add missing macro # by popular demand, more and more exts need this
TSRMLS fix
- Re-allow conditional class declerations. Needless to say that I also - think it's not great coding.. Use polymorphism instead :)
- This should fix the problem of conditional function decleration on the - same line of code not to work. You should re-evaluate your coding style - if you really code this way :)
oops..
BFN
add test case for bug #26869
fixing test
added utf8 support option for sqlite >= 2.8.9.
ChangeLog update
typos
fixing tests after last Derick's commit that changed the behaviour of var_export() :)
Do not run test if session extension is not avaliable.
Update attribute tests. # There is a memory leak with += when accessing the attributes directly # But yet ->elem[$n] is not fails in the engine
- Cleanup class_entry - allow derived classes - fix new SimpleXML_Element()
Remove conflict
Update tests
XPath query returns nodelist object rather than array
Added error mask to set_error_handler() Patch by Christian Schneider <cschneid@cschneid.com>
BUGFIX: server006.phpt
*** empty log message ***
ChangeLog update
include PECL targets in snap build...
support for building asm in the unix buildsys. Also, when ZEND_ACCONFIG_H_NO_C_PROTOS is defined, omit the C prototypes from the configuration header so that it can be included into asm files.
this one is declined
Use pg_config if it can be found.
Source cleanup.
must be extern to avoid problems with some compilers
BUGFIX: WSDL support (complexType/complexContent/restiction/atttibute)
BUGFIX: close string with smart_str_0()
let soap build with php5
export tsrm id for session globals.
let informix build
Tests were improved (https:// support)
fix expect
SOAP Encoding/Decoding were improved.
Support for persistent HTTP connections was implemented (keep-alive)
Bug #25816 - disallow arrays in class constants
add test
let mhash build
add a rule to clean pecl things; split up the command line into 3 to try to avoid possible problems with line-length under VC6
Separate pecl extensions and sapi into their own target, and have mkdist.php create a separate pecl dir and zip when building a win32 snapshot.
fix PHP_SPL problem when you don't have a pecl checkout.
Remove these initializers as they are unused.
sqlite news
ChangeLog update
Add some minimalistic documentation
Cannot use shared SPL
There's no more interaction with SPL
touch generated files
touch to make build work without lemon..
Update copyright
Handling of "position" and "offset" array attributes was implemented
- Happy new year and PHP 5 for rest of the files too.. # Should the LICENSE and Zend/LICENSE dates be updated too?
fix tests for win32
correct header
Happy new year!
add new files to .dsp
Update win32 build for new version of libsqlite
SOAP versioning model was implemented (support for SOAP 1.1 and SOAP 1.2)
Upgrade bundled libsqlite to 2.8.9
Support for "xsd:anyType" was implemented
update copyright year in win32 resource template
fix fastcgi build
HTTP Authentication was implemented
tidy_repair_string/file() don't get called from an existing tidy resource.
-   - A belated happy holidays (by two years)
- A belated happy holidays and PHP 5
- remove non-existing project
ChangeLog update
Added missing constants (bug #26831)
Change ordering of CFLAGS for built sources, so that extension specific include dirs occur before more global include dirs. This avoids problems when building a bundled lib and you have headers from an external version of that lib in your global include dir.
Adding new com_dotnet source files to project
BFN
win32 build: gd should build shared by default don't use php.ini when running mkdist.php
tweak snap build
Make activescript SAPI build under php5. Untested...!
glob-ify lib checks; this simplifies writing of config.w32 files a little.
Let DB handle NULL params, fixes bug #26777
ChangeLog update
Reimplement part of Bug #24608 that was reverted too
Revert patch that allowed to call sttaic methods via $method()
Check if realloc() succeeds or not. (Noticed by Andrey)
no need for double #include of same header file
Added an optional array parameter to tidy_parse_file/string to fix a bug. Apparently some libtidy config options must be set prior to parsing in order to work properly.
WSDL support was improved
https:// support was implemented for PHP5
Revert proto 'fix'.
Prevent a character from being wrongly doubled in the buffer.
Proto fixes.
ChangeLog update
Update
Add new test
PHP5 support, better encoding and WSDL support, interop round 2 base and groupB
BFN
Update test
Bug #24608 - fix interaction between __accessors and get_property_ptr
another example
ChangeLog update
"seq" isn't available for all platforms.
ChangeLog update
 - remove unneeded subroutine call
- Added test results to .cvsignore file
- Show the API numbers again while phpizing.
Added examples for tidy v2.0 (in PHP5) and a few more tests..
ChangeLog update
s/then/than/ Thanks Jani & Andi
Do not show exception message if it's empty.
ws + cs
another ZTS fix
BFN
Bugfix #26762 unserialize() produces lowercase classnames
Add new test
dotdotdot..
fix ZTS build
ChangeLog update
fixed bug(s) in macro call for statement properties
Added Macro for longlong values added property stmt->affected_rows
- Compress 2003 changelog
ChangeLog update
emalloc() -> safe_emalloc()
Make default message look better.
Make sure zlib.lib is found
BFN
proto fix
fixed problems with longlong values in mysqli
fixed memleak and segfault when constructor call failed
ChangeLog update
cleanup
Replace regular malloc with safe_emalloc in several places.
fixed a bug in mysqli_num_rows (added support for longlong values)
fixed a bug in insert_id property
Update
ChangeLog update
Added test case for bug #26696.
Use __tostring() in all printing functions.
No Notices here
Add missing notice
BFN
Align output if one section shows 100% and display percentages when not counting skipped tests.
Removed a useless define.
BFN
Add some __autoload() tests.
ChangeLog update
updated todo list (removed finished tasks)
fixed prototype for mysqli_bind_result
Last bit of CS fixes.
CS fixes.
Add more tests.
Add a test
WS
revert my previous patch because utf-8 support is still in experimental status.
added warning message.
added a option to select character encoding for sqlite.
fixed bug in properties for longlong values
ChangeLog update
Test additional wrapper methods [unlink, rename, mkdir, rmdir, url_stat]
Just laugh at me :)
- Add missing sanity check.
BFN
Correct in order
Bugfix #25329
Not needed
Add new test related to bug #25329.
Bugfix #25038 (call_user_func issues warning if function throws exception)
Add new test
Simplify
fix libxml mem leak
ChangeLog update
workaround for possible ORA-22280 warning if buffers were not flushed
ChangeLog update
- fixes for compatibility. now fgetcsv() treats a null line to be a single   null component.
separate oci_lob_flush() to use it in oci_lob_append() etc. in the future
ChangeLog update
Properly detect bundled libtool when PHP is built in a separate directory. Detect version of system libtool, which is used by phpize.
Make test work with PostgreSQL 7.4
A more general check for dirs under Release or Debug.
Those are not structures :-)
Compiler warning fixes.
add oci_fetch_assoc(), oci_fetch_object(), oci_fetch_array() & oci_fetch_row() change ocifetchinto() to use php_oci_fetch_row()
Proper check for resolv.lib
huge patch change almost all func names to match naming conventions keep ocifetchinto & *buffering for awhile - they will be rewritten soon old names are kept as aliases
implement our own tiny little dependcy tracker and use it to build distros.
enable inifile handler under new win32 build too
Attempt to work around apparent problems with WshShell.CurrentDirectory. # Andi, please try this now
Better implementation of the prefix thing
- Commit fixes to PHP man page
do not delete connection ids, we need them
#fixed bug #26680
Adding install target that follows the prefix
Now that it has matured somewhat, don't discourage questions about it quite so strongly. Add note about snapshot building. # If you are building "official" snapshots, you need Edin's treasure-trove # of libraries/headers and the snapshot template
fix API exports
Implement a glob() function for use by win32 configure.
win32 buildconf now honours extension dependencies and will try its best to ensure that the config.w32 files are amalgamated in such a way that modules are processed before their dependents.
ChangeLog update
Use a variable name so this actually works.
Typos found by Petras Kudaras.
No need for these trick when linking with a correct cclient.lib
Preserve casing
Update
Add more tests
Don't annoy people building snaps/dists using VC6
Allow FrontBase to build against my local version of the headers
Proper header check for yaz.
Preserve class name casing.
BFN
For GD, build the extension as php_gd2.dll instead of php_gd.dll. Thanks again Frank :-)
It seems that making the NewAPIs.h header globally visible causes problems when compiling the com_dotnet extension, so I'm moving it to be visible only to the VCWD code. Thanks Frank :-)
Convert to windows line endings
beautifying :)
fixed bug #26680
rollback to previouos version bug #26690 fixed in libxml.c
only test url_stat in read mode
Define INADDR_NONE for systems that don't have it (apparently solaris).
Missing bit for bug #26625.
Verify that new build system works with Pi3Web 2.0.2
Add dependencies for these extensions
Add --enable-snapshot-build configure option for win32 build. Using it will attempt to switch on any configure options that were left to their default value of "no".
export these symbols for use by SPL as a shared extension
add win32 configure option for CLI to switch on CRT heap debugging
Correcting the description field.
ChangeLog update
Corrected argument parsing.
B3 here we go (away)
Update date
B3 here we come
Compiler warning fixes.
ChangeLog update
- Make the world a better place. - Will roll b3 tomorrow.
MFB fix for #25597
new win32 build tweaks
ChangeLog update
Forgot to add embed config.w32, and tweak version resource when CREDITS file is missing.
Export flock for win32
More things for the new build system. Pi3Web and aolserver build untested (no headers and libs for those here)
Make apache2handler build with new build system. Perhaps also make it build with .dsp system too...
Moved ext/notes to PECL. (win32 only, and doesn't build on snaps.php.net)
add tests to HEAD
Make these build with new win32 build system.
Make xmlrpc build using our expat compat functions. Would be good if someone could verify that it actually works in this configuration.
add config.w32 for ext/yaz Edin: we need to update the yaz stuff in php-win32-dev so that this extension will build.
Export expat compat functions. "Implement" XML_GetCurrentByteCount(); probably not 100% correct, but the only usage of it is by xmlrpc extension when reporting an error; it should be safe.
don't overwrite internal_functions.c if the content did not change; this saves re-linking php*.dll when you add shared extensions to your config.
- Test commit
- Test 3
- test 2
Using INI section.
New tests for memory leaks
make these build with new win32 build system. mcve untested (I don't have those libs/headers)
- Test new commit info file
- Nuke another rule (thanks to Jan for noticing this)
Bug #25547 (error_handler and array index with function call) was fixed tests/lang/bug25547.phpt
 - restructured phpize  - added -v and --version to print out API numbers  - discussed with Jani and Andi
- date==today()
Check correction (Thanks Andi).
- prepare 1.3b5
- Update date
- Prepare for RC2
- Nuke unused code
don't enable by default; causes simplexml build to fail
we only use zlib.lib
detect c-client headers correctly using Edin's php-win32-dev layout
copy-n-paste error
Explicitly depend on oleaut32.lib
"Real" cvsclean, works as the unix version does
Refinements for new build system: - Add major + minor version to .dll and .exe headers during linking - Handle pecl build dir correctly when pecl is a sibling of php-src - try and guess where your cygwin utils are installed (if you have them)   so that we can detect bison, flex etc. - other little refinements
this should be an int
add prototype
ignore .tmp files created by tests
be slightly nicer when defining R_OK
Memory limit overflow was fixed
Error reporting on unset string offset was added (Bug #24773 Zend/tests/bug24773.phpt)
Assign_op operators (+=) were fixed for elements of overloaded objects
Add test for foreach visibility
ChangeLog update
- Nuke C++ comment
- Revert patch 1.566
test case for array_sum
* PHP 4 fix for the E_STRICT check
Added sqlite_fetch_column_types() function.
Add this file too
dded qdbm handler (http://qdbm.sourceforge.net).
Centralize ability to drop APPEND flag. This probably fixes some ini file issues.
Improve dba tests: check in both modes external and database locking.
ws & cs
"a"
fix #449: XML_SVG and VFS fail to install properly using PEAR command fix #455: PEAR_Downloader does not set $ui
remove retarded use of numbers (REALLY bad idea) for error handling, add check for E_STRICT and ignore all of those errors
Update tests to see where they fail now exactly
two new methods were added   $node->count($subnode_name) - returns count of subnodes with specified name   $node->attributes() - returns array of attributes
make it totally safe again
Counteract brain-death in Apache headers (they #define strtoul to something that will break compilation, and it successfully breaks the win32 IPv6 headers)
ZTS build and speling fix
add news about tidy
make sure this is initialized to NULL as we don't check the return value of the FormatMessage function; we could end up using a stale pointer.
Leak for b3 and find a better solution until RC1
Adding the tidy.default_config and tidy.clean_output options to the .ini files
ChangeLog update
MFB compile fix
proto fix
entry for microtime()'s new clothes
Add new test
- Update NEWS for tomorrow morning so that I don't forget when I'm sleepy
Added optional parameter to microtime so now it can return float if it the user wants. This prevents from getting string representation exploding it and then creating a float.
Roll RC1 of B3
no longer need to cleanup temp var
Update test.
This part of the if was necessary after all. Refix bug #22510
Always user Zend memory allocation wrappers.
*** empty log message ***
accessing singular subnode as array
*** empty log message ***
Dynamic function call from object's property was fixed (See "tests/lang/bug24926.phpt" and "tests/lang/bug25652.phpt")
Access to globals/autoglobals from class __destructor was fixed. (see "tests/lang/bug24908.phpt" and "tests/classes/destructor_and_globals.phpt")
free nodes correctly to clear node proxies
ChangeLog update
- Added 'c' modifier to date() which returns the date in ISO 8601 format.
MFB
*** empty log message ***
Add inifile
Not needed here (copy'n'paste)
Add missing .cvsignore
Add a test to check split text content collecting
Better comment
nuke unused code
Add myself
Add error handling for element/attribute creation/changing
Add test for string conversion capabilities when used with echo/print.
Fail loudly, silence bogus bugs.
ZTS fix.
Removed duplicate php_libxml_(init|shutdown) they are already done by ext/libxml.
fix bug #26133 (thanks to Harald) rename constant and add library check to config.m4 add info lines to see if Collection & Temp Lob support enabled or not add OCI_THREADED to use thread safe OCI mode with ZTS (should fix bug #26558)
fix warning, concerned to second _oci_close_server() call
- Remove debug info :)
- Added %e modifier which gets replaced by the current value of   DIRECTORY_SEPARATOR.
Sync: Export externally used functions.
Incorrect test file was fixed. (Use pattern insted of absolute filename)
fix non-zts build errors
export class initialization function
export externally used functions
export function
Improper test file was fixed.
@- fixed #20006, #22674 and #24531 (harald) @- added ZTS connection pooling support to the oci extension @  connections will now be pooled per process and not @  per thread anymore. the number of persistent and active @  connections is now also shown in the phpinfo() output (harald)
add myself
fix include path
added properties 	- insert_id 	- server_status fixed bug in mysqli_execute (report func)
BFN
remove optional dep on xmlrpc, not really useful at this point add required dep on pcre, as it is used without reservation in PEAR_Config, and other places
ChangeLog update
Check validity of seeks. WS/CS
Always set panic call handler, allows us to address critical libtidy errors from inside PHP. When memory_limit is enabled use e* memory allocation macros to control memory usage.
Reenable __tostring() magic for print,echo,concatenation,function naming... but not for other internal things. # As discussed with Andi
add new functions:
ws + cs (no c++ comments in c code)
Bug #24773 was fixed (Zend/tests/bug24773.phpt) Assign_op operators (+=) were fixed for elements of overloaded objects Memory leaks during accessing ptoperies/elements of overloaded objects were fixed
Memory corruptions were fixed in zend_str_tolower_copy()
Scan for : in host:port pair from right instead of left. This will allow handling of http://[fe80::1]:443/foo.html IPv6 Numeric addressing with port number to parse correctly.
Removed unused variable.
Applying some minor fixes / CS changes by ilia
ChangeLog update
lalalaa..
Update test to reflect new functionality.
Change to more complicated 'c' more
Not needed
Reorganization.
Note about Apache2 SAPI change.
Do not mangle column names.
Removed doubled loop from wrongly applied patch
Cleanup
Some cleanup
Modified package.xml to reflect 2.0's beta status
Tons of changes for Tidy 2.0 -- output buffering, multiple documents, dual nature ($a->parse_file() and $a = tidy_parse_file()), etc.
ChangeLog update
Export STREAM_MKDIR_RECURSIVE constant
Add shortcut for 'nmake /I clean'.
minor fixes for embedded
test case for BC bug 26614
Revert: need a PHP4.3 solution. # This solution cannot be backported to PHP 4.3 -- damn!
Add standard file info functions to DirectoryIterator
Show classname
ZTS fixes
add an example for illegal string offset. the example is stolen from Marcus and Markus should be now satisfied :). Currently this code segfaults with PHP_4_3.
removed old profiler stuff for embedded server
ChangeLog update
Route mkdir()/rmdir() via wrapper ops. Move current rmdir()/rmdir() code to plain_wrappers.c Implement mkdir()/rmdir() in ftp:// wrapper
removed profiler stuff
removed profiler added mysqli_report 	- better support for errors 	- support for no_index_used and bad_index_used typos and prototype fixes
Route rename() via wrapper ops. Move current rename() code to main/streams/plain_wrapper.c Implement ftp/rename() Implement userstreams/rename()
added entry about mysqli_fetch functions
remove revision tag from module version entry
use error handling from libxml ext
consolidate error handling
Free is needed in non ZTS too
Actually register the class
Do not use before they are initialized.
Add some comments here
BFN
ChangeLog update
Do not copy extra byte.
update notes
MFB
add missing not relation
MFB
Bugfix: #26591 [NEW]: "__autoload threw an exception" during an uncaught Exception
fix #391, PHP 5 reference fix
add failure test for non-existing file
new unit test for PEAR_Packager
Dir seaparator "\" was removed.
MFB: Use standard header locations
- Refix bug #24773
Handle getter failure and allow to bypass thrown exceptions.
read_dimension() handler might return 0, handle this.
since nobody has taken any action, fix Console_Getopt to be BC, and update the PEAR core to take advantage of the new way.  Use 1.2 to avoid any problems with versioning.
update test cases for new error messages
new test case for directory tree deletion on uninstall
ChangeLog update
fix crashes when you call php:functionString() with a non-string handler (by adam)
- Test before commit - test before commit
oops.
NFN
The changes() method should be that of the database object not that of a result. Added a test case for this bug.
- Added support for MacRoman encoding to htmlentities(). (Marcus Bointon)
Eliminate compiler warnings.
Remove leftover
Do not double copy the string
Make these inline
freeing result and stmt properties in MSHUTDOWN
Expose the macro globally
ChangeLog update
consistency with unix build....
- Brought ext/bcmath to the new millennium # consistency..
remove references to global variables in validatePackageInfo, remove extraneous summary that is never reached in the switch
fix possible mem leak when element has children
buffer error messages until newline is hit
- MFB (fix pecl install)
fix issues when passing in mulitple arguments
Removed unnecessary outputs
Add missing dtor call.
- Initialize for refcounting. - Simplify.
- Update credits.
correct credits
- Update header + added missing Id tags.
Correct header..
Kill unused variables.
ChangeLog update
reduce/reduce conflicts resolved
Adding config file for win32. This allows to build with c-client 2002e
Exporting symbols used in the imap extension
ws
Removed extraneous php4_close() function and Windows compile checks.
fix getElementsByTagname iteration
New SAPI module for Continuity HTTP server (ashpool.com)
- Make it compile again
export libxml2 and iconv symbols extensions no longer link against either of those
typofix
Implement CahingIterator and CachingRecursiveIterator as C-code. #Script examples/directorytree.php has a few memleaks though but besides #that all works fine.
Use better name for the constant
Update examples to new parameter handling
- A bug in Udm_Hash32 function was fixed.
Avoid using non-portable test syntax. This was causing problems on Solaris. (Reported by Uwe Schindler. Thanks!)
NULL pointers can be passed to free_fcn. This is the correct behaviour.
ChangeLog update
entries for get_declared_interfaces/get_declared_classes
Apply Andrey Hristov's patch adding get_declared_interfaces()
Removed unused variable.
ws
BFN
Remove unnecessary #include
bfn reorder
The correct (tm) way.
revert here too
revert, not needed
Revert this part, too
Revert, not needed here
Use a single bit field for the flags here
- Add comment, I put this ina week ago and it already confused me :)
Update examples
fix potential buffer overrun
allow $node['not_yet_existing_attribute'] = $value; to work
fix warning for shared debug fix test bug26384 - WS issue
tweak build so that it mirrors the source filesystem layout under the build dir.  This allows GD extension to build.
First attemt at win32 build with the new build system. #No workie yet, the build sys needs tweaking
Enable shared build
ChangeLog update
Added filepro to the new win32 build. Works both as shared and built-in extension on windows.
Added fdf to the new win32 build. Works both as shared and built-in extension on windows.
fix #279
Added dbx to the new win32 build. Works both as shared and built-in extension on windows.
fix #205, wider column names for pear list
Added dbase to the new win32 build. Works both as shared and built-in extension on windows.
fix #167
MFB
Added dba to the new win32 build. Works both as shared and built-in extension on windows.
CS
(try again) fix 2 bugs
fix 3 bugs
finished unit test for _processDependency failure test
stupid me - this was a circular reference, removing
slightly clearer error messages
fix arg parsing to work with Console_Getopt 2.0
remove unnecessary experimental code
getting ready for both packages to be released
MFB: PHP_PQ_ERROR() change
fix for Console_GetOpt 2.0 (what was 1.1 - re-release being negotiated)
#args, reinsert skipif for extension check
Do not dynamically load the extension in skipif
Implement SeekableIterator and LimitIterator as C code.
Update examples
This test is against interfaces not abstract classes.
Show the exception message again after __toString() magic has been dropped.
com_create_guid() returns...
ups, i forgot this entry
A small start for so called "not-yet-written faq" about small changes that may make someone's life a nightmare for some time. It will be good when a change is made a line in this file to be written and then it will be easier for the doc team to write comprehensive and pretty FAQ for the end users.
There is no maintainer atm.
Add dist target to makefile that will generate the file layout for a win32 binary distro under build_dir/_dist_. This isn't finalized yet, and you need Edin's distro template.
use quotes if the user specifies a path, but don't otherwise (since we don't want the getenv calls quoted).
Add missing iconv_close() call
fix proto
fix ipv6 stuff under vc6
bah
forgot to have it delete the directory it creates
update phpdoc comment
add todo for known issue that isn't yet critical but will be
new test case - test invalid download conditions
improve error message, it was both terrible grammar and unclear.
fix error message - was printing an empty preferred state
simple fix for core bug #362 - raiseError() doesn't return a reference, why should throwError()?
ChangeLog update
make it build under win32
Detect and enable IPv6 support under win32. The ws2tcpip.h header links to IPv6 functions dynamically and the generated binary will run on win98 and later.
2003, not 2002.
openssl support for the new build
MFB
Tweak xml related build. Still some warnings for ext/xsl, but I'll leave that to someone else for now.
Probable fix for #26534
Use Rob's static libxml+libiconv library; new build no longer requires libxml2.dll or iconv.dll at runtime. Since we have iconv built in, enable iconv extension by default too.
Move the echo off statement to the top of the file. This removes commens from the final def file
libxml2 and iconv export file
A trivial implement for dos-like platforms
Add regression test for iconv stream filters
dos line endings
convert to DOS line endings to solve win98 issues
rewrite
- Remove two unneeded convert_to_string() (found by Marcus) - Change illegal use of string offset to E_ERROR
fix test
fix unix build....
Add optional array argument to proc_open() to specify additional options for the child process. The first option is "suppress_errors" which will disable any dialog boxes that arise from missing DLL's and suppress the GPF dialog. Use this new feature in the test suite, so that crashing tests don't block the test run; useful for un-attended execution.
Make these tests work under win32
fix uninitialized variable
xmlCtxtSetOptions() isn't available in the versions up to 2.6.x # Thanks Rob
Add a missing marker
Update test
Include exif in the new win32 build system
Support for new Win32 build bliss.
fix zts build
check for .net headers
use /Ox flag for release build (all optimizations on). If no php_build dir is specified, then look for either of the two "standard" things in reasonable locations. Allow CHECK_LIB to search for the "same" library using a ; separated list of alternatives. Tweak nsapi config and remove redundant or unused flags. Add ZTS checks for both isapi and nsapi configs.
Made test work on windows
ChangeLog update
Get rid of PHPAPI usage. Enable shared build in the new php5 build system Check for the correct header.
First version... Wez: can you check this...
Type-punning is evil.
NFN
Add iconv stream filter.
This part is accidentially left on the previous commit.
It'd be a bad idea to make subpackages dependent on the php build system.
Work around a bug in putenv() in the VS.Net C run time library (MSVCRT71) where it will double free a string.
Update __toString() issues
__toString() must be called explicitly now
Update
Add package file
No longer true
Update documentation
Update
Revert crap.
No longer needed
Avoid killing files that we didn't generate when making clean.
fix remaining ext/
- Only add 'install-modules' into install targets when there are such   modules to install.
Make this build using new build system
- remove non-existing files
- remove non-existing files
- Update after moving extensions to PECL
- remove non-existing modules
Raise error in case dereference is performed on a scalar value.
test for dom extension
correct test
Add xsl config for new win build
return status of have so extra libs return correct status
- Moved ext/crack and ext/mcal to PECL.
MFB
stylepolizei
allow these extensions to build with new system
put PHPDLL objects into BUILD_DIR/php so that it is a little easier to see the main outputs (sapi and extensions)
fix a couple of buglets and set version number on DLLs to whatever the PHP major version is.
merge downloader code into HEAD - it works fix bug found in uninstall
unit test for new code - proves it works
add helper methods needed - now it is 100% unit tested
be safe...
default install path is c:/php5 for PHP 5
Search for pecl extensions under php-src/pecl as a convenience for pecl developers. Add automatic version info resource generation for SAPI and extension modules, based on PHP version numbers and info found in the CREDITS file. As a nice side effect, this lets us add a logo icon to .exe files.
fixed minor bug
finished unit test
ChangeLog update
fix bugs found in unit-testing, one BC issue also
fix notice
another segment working
add error message when libs and headers are missing
copy and paste error
another test case, small fix for XML_RPC caching borking working tests
another tgz for test case comparison
add part of a test case
Test case for bug #24773.
remove unnecessary notice generator in certain cases
This should solve a few problems with static vs. shared builds for extensions (such as mssql) that require certain CFLAGS to be defined, but not pull in other flags that would affect DLL linkage. Also fix the iconv file; MSVC doesn't seem to like the #include SYMBOL syntax.
new unit test for downloader - incomplete.
Remove unnecessary casts.
duhhh...
fix test to the changes made regarding __toString()
- Add news about include_once fix for Windows
This kind of error should be caught. (suggested by Andi, thanks)
fix notations - forgot to create iterator
Possible fix for bug #26391 (parse_url() destroys strings that contain a character in range of \x80-\xff))
Add a win32 build script. Not tested, but should work :)
VC stores lib path in LIB not LIBS. Add --with-extra-includes and --with-extra-libs to be able to specify general additions to those paths from the environment.
avoid breaking paths with spaces when we generate the makefile, and ensure that libs found in the default path are added to the link line
add rule for parsedate
- Remove newline from error message
fix typo
Propogate LDFLAGS from extensions to PHPDLL when building them statically. Move ZendEngine2 to Zend while running buildconf
Build adjustments.
Explicitly include this header for SHFILEINFO. # no need to MFH
- I am sure I reverted this before
Adding missing defines and lib/include paths
look for FrontBase files in the default location
Add http proxy support via context option.
Removing the DB extension warning message.  The DB extension is no longer included in the PHP distribution.
some tweaks for Frank
ChangeLog update
Optimize strrpos/strripos for single char strings and fix offset to report correctly
Restore ability to use strrpos/strripos with an ordinal needle
avoid vs.net specific option for now
Avoid death when wrapping null/undefined values
make help more useful
add win32 build readme
Adding shmop config file for the new build system
Adding FrontBase config file for the new build system
oops. this should be with and not enable
Adding mssql config file for the new build system
Clarify a little.
Add new (optional!) win32 build infrastructure. Will follow up to internals@ shortly.
Export this so that shared session modules can use it under win32.
Export these so that ftp extension can be build as shared ext.
Remove automatic call to __toString() since it is supposed to cause too much trouble. See discussion on the mailing list.
- Uncomment my code which improves Windows behavior of TSRM file paths. - This will now not work on Windows 95 anymore.
- Revert the revert of these patches. This overloading can only be used - by C extensions such as SimpleXML and *NOT* PHP code. Reasons given - on the mailing list and problem with reentrancy inside the opcodes.
Register url_stat flag constants in userspace
Populate userstream objects with context property
Update userspace/url_stat proto
set freed pointer to null to avoid reuse
Improving the wording of the "don't use the DB extension" warning.
this can't be persistent
check node type for ->attributes and ->childNodes
- Updated credits
removed some non-existing extensions/sapis
Moved qtdom to PECL
- Don't include E_STRICT in E_ALL.
Revert undiscussed / undecided patch
all '_' (underscores) should be replaced by '\x20' (whitespaces) in encoding. # should I bump API version?
Remove debug code
Add classes from examples: FilterIterator, ParentIterator
Move object struct to header.
Free the zval container only if it should be freed and was not copied.
ChangeLog update
CS
Add regression test for iconv_mime_decode_headers()
Allow iconv_mime_decode_headers() to handle multiple occurence of a header.
Optimize substr_replace (this makes it 3-8 times faster depending on the string length).
Update test.
Forgot about this one
Add iconv_mime_decode_headers() to parse multiple MIME headers. A few trivial fixes.
Remove debug code.
More RFC2047 conformance. Add ability to forcefully continue processing on error.
The least intrusive way to 'import' PECL extensions into the main tree. For the moment this deals with tidy, further extensions can be added at a later point.
Move safemode/basedir checks for url_stat to plain_wrapper.
WS fix
- Made --program-prefix and --program-suffix work. (See bug #23030)
missing config.h include
- Change to E_STRICT so as not to break existing scripts. - Thanks Edin
- Nuke property_exists(). We need to fix isset() and this is already - supported in reflection API. In any case, it's best not to add new - functions in the general namespace except for keeping engine consistency (which would have been true in this case)
- Revert auto-conversion in parameter API
- Don't automatically call __toString() in convert_to_string_ex(). - use __toString() in your code. - Keep the auto-case in make_printable_zval.
- Moved ext/db to PECL.
new test case and supporting files - incomplete, but works as it is
potential major booboo in unit test, probably won't affect this one
ChangeLog update
2 bugs found here, added deprecation warning for those who have written their own PEAR application
2 bugs found here
2 bugs found
fclose() might be needed
new unit test
fix bug found by unit testing in package ordering
fix unit test
minor booboo
new unit test - test works, but there is a serious bug in sortPkgDeps to be fixed, as unearthed by this test
finish unit test with non-working download test with callback
add in skip condition for internet offline, and callback test
first unsuccessful test works
first successful download test works :)
beginning framework for PEAR_Common::downloadHttp test - binary test file
beginning framework for PEAR_Common::downloadHttp test
tweak tests
remove old holdover code that has no purpose
...and with these changes, 100% BC is maintained.
- And fix the README too.
Removed unused variables.
Update
Require inner iterator to be RecursiveIterator
Remove old files
Check return value of exception::__tostring()
remove call to xmlMemoryDump
fixed typos
output of uncaught exception changed
prototype fix for mysqli_ssl_set
New funcs
experimental code shuffling, moved download() into a new class, PEAR_Downloader.
ChangeLog update
got it - the pattern ONLY needs addslashes for windows paths
fix one part - can't get the ereg() to match on windows, will fix when I figure out why
fix up unit tests - registry was ridiculously out of date.  Guess nobody ever runs these...
implement usleep for win32
Add stream_socket_sendto and stream_socket_recvfrom which work very much like sendto() and recvfrom() syscalls.
Add dom_iterators.c to project.
new test case
guess this file should be added too :)
fix ZTS build
implement namednodemap and nodelist fix xsl/dom integration under windows update tests and examples
finish unit test
Add in missing stat element and fix win32 build
add in environment variable for easy non-skipping
fix some bugs found in the unit test
start on a new unit test
Caanot use REPLACE_ZVAL_VALUE here.
This takes the address of a zval ptr
Add macros to return values of other zvals. This is needed because one cannot use REPLACE_ZVAL_VALUE with return_value.
add dependency on xml extension - we need it for every installation/package function
Remove test code
Restore original patch for bug #26281.
Finish off ftp://'s url_stat support
Revert accidential commit until decision
The removed NEWS entry is already in 4.X news file.
a dot too many
Some news from ext/xsl
testcase for bug26384
fix Bug #324 pear -G gives Fatal Error (PHP-GTK not installed, but error is at engine level)
typofix
- Update NEWS and README for input_filters
follow coding standards.
it's now possible to return a DomNode from userland functions back to the xsl-processor
missing .cvsignore
fixed wrong check
move some definitions to xml_common.h
Research reveals that the error text depends on the tools and their versions used to create the language parser.
test for bug #24908
oops..
test for bug #25652
- remove non-existing servlet entry
Update php.ini-* with E_STRICT error reporting level.  -dist excludes E_STRICT, -recommended includes it.
news for xslt
test for bug #24926
Handle dirty script exit.
ChangeLog update
Route php_stat() via streams/url_stat API (php_stream_stat_path). This enables fopen-wrappers support on stat() and related family calls.
(sort of) MFB, feof fix for sockets.
@- Added possibility to call php functions as XSLT-functions (chregu) - Added possibility to call php functions as XSLT-functions   eg: <xsl:value-of select="php:function('date','r')"/>   Namespace is http://php.net/functions
changing dom_object_get_data to php_dom_object_get_data and PHP_DOM_EXPORT it (by Rob Richards)
More memory leak fixes for stream contexts.
Bug fixing news.
fix #26001; serialize crashes when accessing an overloaded object that has no properties (NULL hashtable).
fix memleak
Add removed lcname, it is still needed.
ChangeLog update
Added image_type_to_extension() function.
Convert objects to string if string is required by newer parameter parsing since we do this for older parameter parsing does so too.
The macro REPLACE_ZVAL_VALUE cannot be used since we only have zval * writeobj. to allow it the api needs to be changed to zval **writeobj.
re-implement the win32 select code. The old code implicitly set any sockets into non-blocking mode, and since there is no way to probe a socket to determine its blocking status using the win32 API, this was a real pain in the ass.
fix win32 build - thanks Sebastian.
Port liveness and SSL CA validation from 4.3 branch. Make stream_select() work on ssl-enabled sockets again.
port "liveness" checks and a couple of other things from the 4.3 branch. Liveness checks are used to validate persistent socket connects when they are re-used.
initialize this one to be safe
Add a support function to check for property existance which is different from checking a property from being empty/set. Update test #26182.
Remove problematic configure option
- set precision to 0 unless the field is of type N or I
- fixed indenting
ChangeLog update
Removed dead code.
Cleanup
fix Bug #293 [Patch] PEAR_Error not calling static method callbacks for error-handler
- Prevent registration of the variable when a zero-length is returned   from the sapi_input_filter.
In PHP5 this will create an implicit public property
Errro message has changed
Remove interfaces implemented in engine now
ChangeLog update
style fix
test case for bug #26182
ChangeLog update
Add new interface ArrayAccess to use objects as Arrays
fixed -> fixed section, added -> added section..etc.
No longer needed.
Make sure zend stuff is built first.
- Now we're getting closer to an RC we should start giving more detail - about engine changes in NEWS.
added/fixed write property
Partial fix for bug #25803 (xml_get_current_byte_index() always returns 0)
ChangeLog update
Added php_strip_whitespace() and php_check_syntax() functions.
Add  new test
Several  improvements to the simplexml_element object: - Allow to use it as an instance of Iterator - Prepareto use it as a normal object, including spcialization
- Allocation optimizations by Timm Friebe
fixed mem leak in constructor
ChangeLog update
- Added multiquery support: 	mysqli_multi_query 	mysqli_more_results 	mysqli_next_results
On error do not leave content_type_dup unitialised.
Add missing files
Update examples
- rename getLevel() to getDepth() - make parameter to getSubIterator() optinal - refcount fix
- current() returns self - add __toString() casting
Disable interfaces ArrayRead and ArrayAccess
ChangeLog update
added test for exslt support
- Added $proc->hasExsltSupport()
Cleaner patch for bug #26281.
ChangeLog update
debug mode no longer needed
Removed entries which no longer have no function
ChangeLog update
New function: headers_list().   Ennumerate headers sent to SAPI engine
proto fix
XSchema stuff finally done right ... (at least i hope so ...)
typo fix
regression test for bug # 26320 "strtotime() does not understand ISO6801 datetime format as used in XMLSchema"
Testcase done right ...
regression test for http://bugs.php.net/bug.php?id=26317 "military timezones and strtotime()"
added exslt support
- Commit patch by standards
ws fix
ChangeLog update
Possible fix for bug #26281 & test case.
Dont't stop if directory can't  be openedbecause of user rights etc
Must use hasNext() here
update directory examples
- Rename DirectoryTreeIterator to RecursiveDirectoryiterator (what it   effectively is). - Add DirectoryIterator::__toString ->getFilename - Add RecursiveDirecetoryIterator::__toString ->getPathname - Add RecursiveIteratorIterator::getSubIterator.
Add method alias macro
- Add E_STRICT, to be used to warn purists (like Jani :)
change names to php5_xxx in NSAPI
Add new iterator test inspired by bug #26527
Backpatch the correct opcode for list(), property overloading needs more opcodes (Bugfix #26257).
the military time zone offsets where pointing in the wrong direction
make strtotime() understand the datetime format used with XML Schema
ChangeLog update
Use correct order
fix the docs
Use correct macro/function
SAPI/Servlet has been moved to PECL.
necessary refinement
fix bug #248, --force does not work as expected
fix bug #249
Rename ArrayClass to ArrayObject
Silence warning.
* "chmod +x" when extracting archived executable files
ChangeLog update
WS
Make it an interface with an code example as comment
Correct destruction
Added myself to credits.
ChangeLog update
ChangeLog update
Adding missing class init's for new ming 0.3a functions
Rename nanosleep() to time_nanosleep().
ctime (#10) may differ on several filesystems. # I confirmed it on Darwin
Adjust to latest conversion cast changes
Missing "confdefs.h" in the cleanup-files-list
ChangeLog update
proto fix
BFN
Bugfix #26156 (REPLACE_ZVAL_VALUE works on uninit stack-based zvals)
Proto fixes (Friedhelm Betz <holliwell|gmx.net>)
Releasing 1.0....
Windows compile fix (patch by sfox@php.net).
Bugfix #25794: Cannot open existing hash db3 file with write
IteratorAggregate::getIterator() cannot return anythingy else than objects
Pass eof
- Make sure internal clasess are malloced
ChangeLog update
Added configure check for nanosleep() availability.
Bugfix #26216: ("getimagesize(): stream does not support seeking" when using remote files)
Added nanosleep(), in addition to allowing setting of very short states. This function is signal safe.
Plugged a small memleak when errstr isn't efree()'d.
Update
Add helper function that splits inifile keys into an array which again can be used in dba_fetch calls.
Added new ibase array handling (was already present in b2)
Compiler fixes for older ming versions
- A bug in WORDINFO calculation in mnogosearch extension was fixed.
ChangeLog update
Compiler warning fix (patch by Joe Orton).
Add shortcut interface SeekableIterator to LimitIterator
Compiler warning fix  (patch by Joe Orton)
ChangeLog update
Implement different recursion modes as statemachine and have an optional parameter to choose the mode in the constructor.
Don't use zend_class_entry indirection
Bugfix #26010 (Bug on get_object_vars() function)
Correct default handlers
Split into element=property and attribute=dimension overloading.
Update test expectations
Need to update iterators handler table too.
Split isset/isempty for object property and object dimension hooking.
Little iterator improvement: ability to store index in iterator
ChangeLog update
Synch exposed functions with c-level iterator functions
Major update: - Remove all overloading hooks -> array_read/array_access must be rewritten - Remove all basic iterators - Remove all 'spl_' prefixing exposed to user level - Add RecursiveIterator, RecursiveIteratorIterator - Add DirectoryIterator, DirectoryTreeIterator - Add some examples
ChangeLog update
Add method reflection_class::implementsInterface() Allow string & reflection_class in isSubclassOf()
- Mnogosearch Extension was updated to include mnogosearch-3.2.16 features
Handle exceptions in casting more gracefully. This fixes bug #26166
Remove NEWS entry since the fix went to the branch as well.
ChangeLog update
Bug fixing news.
10-18% optimization of fetch_array(), when both number & string indexes are created.
Make __autoload() faster
Update Iterators: Call next at the correct point in time.
Add missing initialization.
Make these class entries available for inheriting classes
Move typedef to where it is needed now.
Make php_stat() available for extensions.
ChangeLog update
Added mandatory safe_mode & open_basedir checks.
Getting rid of c++ style comments
WS
MFB: Adding new features from ming 0.3a.
ChangeLog update
Kill unused variables.
added buffer reallocation for filename.
remove unix crap
ChangeLog update
Prevent some SEGV's when Exceptions are thorown inside iterators.
Removedouble efree call
__tostring() handler should be binary-safe
Add XML_SAX_IMPL constant to determine which implementation (libxml / expat) is selected for SAX interface.
BFN
add zend_iterators.c zend_interfaces.c to make
ignore some files
- added more files
SunONE servers
- Moved all the mime_magic.c specific stuff into their own header file   to prevent possible compile failures.
ChangeLog update
Missing file
Add regression test for XPath support
Should've added a few more cases to that bugfix switch.
- Always store the URI path in the streams structure, and expose it with   stream_get_meta_data().
make this macro safe
remove attributes from this check
- Stop a crash in xpath - Remove the ability to access attributes via the -> operator, attributes are accessed via the array indicators
Make life for the doc-team easier, without causing harm ;-)
It is usually a good idea to write only into allocated bufferspace.
ChangeLog update
Proto fix
ChangeLog update
checkExtension() was a complete disaster, can't believe it didn't cause any problems before.
new unit test
new unit test
fix bug found by unit test
ChangeLog update
add optional dependencies to test
better error messages, fix potential problems in the future
fix warning
fix test
add fancy SKIPIF code, fix test
add fancy SKIPIF code
fix test 1, add in nifty SKIPIF code
deleted code says it all
add in skip to match other tests
new test  case
fix header handler
major bug - "not" dependency check would completely fail.  Guess nobody ever tried it before :)
Add test case for bug #26010
was checking the wrong parameter for a v. - should be checking version
phpdoc fix
SKIP tests if compress.zlib wrapper is not available.
cosmetics
Send correct default content type from php.ini not static text/html (important for other charsets than iso-8859-1)
Make this work again
finished unit test
bump to 1.3b4, add note about fix for #171
fix #171, --alldeps with a rel="eq" should install the required version, if possible
ChangeLog update
MFB
add some error control to analyzeSourceCode() for really rare cases - invalid PHP
start on unit test for PEAR_Common
Next is beta3..
Ensure that INI entries are unregistered on shutdown
changed return value from long to boolean for mysql_execute
make CATCH opcode use "class" T like other opcodes do - via IS_CONST
- Typo
- Beta 2
make test work with libxml2 2.6.x and lower (I used lowercase html again in the EXPECT part, as this is now the default behaviour for newer libxml2 releases)
- Beta 2
- Move uuencode to the right place (ext/standard)
- Don't fix include_once() case sensitivity problem for beta 2. - I suggest discussing to stop supporting win95 and NT 4 in our binary - distributions and change the code to #ifdef.
- Go with beta 2
ChangeLog update
fixes are fixes..
Remove bogus entry
Added substr_compare().
Some clean-ups
Add BFN entry to HEAD, as this bug is not likely to be fixed in 4.3.x.
This check's always necessary.
- This should work.
Added in NEWS entries for the Panther updates
- Allow for case-insensitivity of include_once()/require_once() on - Windows
added functions for embedded server
added support for embedded MySQL Server some prototype fixes
Add test case for bug #26003
MFB(r-1.109.2.12): A possible fix for bug #26026
Oops.
Update test for an additional check to ensure the variable used for an index would not be modified during deference.
Do not use convert_to_*_ex() for ordinary zval pointers.
Use pretty macro instead.
Add simplexml array handlers that allow to explicitly work with attributes.
On win32 extensions starts with php_
ChangeLog update
Allow userspace filters to use wildcards
Allow userfilter instantiation to programmatically fail by returning false. Equivalent of Cspace filter "failure" by returning NULL.
- Head up! I'm reverting the patch which allows for expressions in constant - declerations. Allowing the access of other constants in this code is - flawed. We are reverting back to PHP 4's static scalars. - Don't worry if you get the following msg when compiling: - "zend_language_parser.y contains 3 useless nonterminals and 22 useless rules" - I didn't nuke the code in case we have some brilliant ideas after beta 2
Stop looking once we've found a matching filter.
Extend Filter matching to check wildcards at multiple levels. Ex:  foo.bar.baz.bomb Searches:      foo.bar.baz.bomb itself,      foo.bar.baz.*,      foo.bar.*, and      foo.*
note pcntl_wait()
Give some freedon to c iterators but not in userspace.
Added pcntl_wait, a wraspper around wait()/wait3()
config.h is static here
fix crash in do_implement_interface when compiling pear/PHPUnit/Framework/TestCase.php line 63 while only interface_gets_implemented is the issue in this instance, both these vars were unitialized, causing potential other issues
fix win32 build
By popular demand renaming uu(encode/decode) to convert_uu(encode/decode).
ChangeLog update
Add missing reinitialization call
use php_error_docref
extending of domDocument class test
added html test
- Add uuencode.c to the project
xinclude test
xinclude support readded to ext/dom
streams test
- streams test
hrm
exception/try/catch test
forgot one file
fix for test Nr 3 bug (not freeing all params)
added interop test
added SKIPIF extension is not loaded checks
interop test
totally wrong expected output...
some tests (test #3 is currently broken due to memleak, fix is on the way)
Add another test
Rename test
* array_merge is more ticklish in php5
Added uuencode() & uudecode() functions.
ChangeLog update
cannot import nodes without document
remove unneeded variables
- Make distinction in error-reporting between Warnings and Errors from libxml2 - Use internal error_handlers during html-parsing as well
fix test (validation returns a warning, if xml is not valid)
- added interop between DOM and SimpleXML example - added xpath example
fix example for saving to file
add interop with dom - simplexml_import_dom change write behavior on elements to change actual contents change clone method to clone node and not document fix a few libxml mem leaks
use common structures from php_libxml.h
add interop with simplexml - dom_import_simplexml fix cloneNode with elements
common functions for interoperability
Add attribute test
Add foreach test
Add iterator to make foreach work
And get the last thing working
Add test
Patch by Steph to sanitize ssize_t typedef on Windows.
ChangeLog update
Allow static methods being called from sqlite sql. Notice by Stphane Mariel
Add zend_make_callable() which allows to make zval's callable zval's. At the moment this function only converts strings of the form class::method to an array(class,method).
Show if Schemas are supported
More testing
Add some testing
This forces a better error message for non working clone calls.
And use things to throw an exception here
You shall not clone Exception instances
You shall not clone reflection_xx instances
Update
Update
encoding detection shouldn't be performed if mbstring.http_input is set to auto or any valid encoding.
Fugbix typo.
s/Throwable/Printable: Exception has become an internal class since I initially documented interfaces.
ChangeLog update
For YAZ, RSHUTDOWN closes persistent connections that have been idle more than yaz.keepalive seconds. Default value for config yaz.keepalive is 120 seconds. The shutdown prevents many sockets in CLOSE_WAIT state.
Revert accidential commit
Revert accidental commit
Zend/ZEND_CHANGES
Workaround for bug #25955 Generalized a Darwin check in dns.c to a check for inet_pton() (kalowsky)
add #25174 note
fixed #25174 Wrong handling of readlink() in OS/Guess.php
ChangeLog update
The web server user name starts with IUSR_ and not ISUR_, and some clarifications from Phil Driscoll
Update tests
Update
Add zend_interfaces.{c|h}.
ChangeLog update
Don't forget to compile zend_interfaces.c
Impement userspace iterator interfaces and tests. See tests for details on the names.
Expand Interface C API. In short: zend_class_entry->interface_gets_implemented()  allows to modify the class entry of a class when an interface gets implemented.
The string conversion method should be named __toString()
name/value in multipart/form-date will be converted into internal encoding when mbstring.encoding_translation is On.
ChangeLog update
We don't have this yet
Bugfix #25930 Can't compile snprintf.c
Make this clear
Add a test case for getElementsByTagName() / getElementsByTagNameNS()
Missing '&' in the result of get_html_translation_table()
ChangeLog update
- Add comment from Timm
implement namespace nodes fix getElementsByTagName fixes to attribute namespaces remove safemode stuff as its handled in streams
go with 1.3b3 (will shipped with PHP4.3.4RC2)
Update
Update
Missing .cvsignore
fix the stat check in stream open addref to the stream context
ChangeLog update
add generic default error handling rather than the default stderr
unescape filepath which libxml excapes
add global init/shutdown functions for libxml.  this is required as shutdown is not safe to call multiple times, and to make streams work correctly some init stuff has to happen in a specific order
Add libxml extension for common code that is needed to be shared between various xml extensions.  currently the only implemented support is the addition of the streams support for libxml.  One new function, libxml_set_streams_context, which allows a streams context to bet set prior to loading or writing documents.  This works transparently with any extension that uses libxml.  All ini settings that effect streams will also now effect the loading and writing of xml documents.
finish file uri support, this stuff was unecessary.
A simpler patch to add file uri support
revert file: support in preparation for simpler patch
make file uri's work with streams
make parse_url work correctly for file uri's on windows, such as file:///c:/somepath/somefile.txt
fix wrong string length for registry values
Enable setting php.ini path via the registry
fix compilation
Add function for getting php.ini path from registry
- Nuke const in function parameters. I just can't remember why this exists - and it seems no one else remembers either. It has no semantic meaning.
ChangeLog update
Fallback to old behavior until we have a default iterator that respects visibility we do the array trick.
bah. does it really make any difference where rewind lives in the struct!?
Change order: Optional rewind() to end of structure
ChangeLog update
new SunONE server
fix cruft from previous incarnation of the iterators
add com iterator support
WS
Show if a class/object is iterateable
- Make use of engine iterators
Added c-api for iterators # After 4 Month work and endless discussions...
The sqlite classes need to be final
pre/hasprev have nothing to do with iteration
ChangeLog update
Do not strip trailing spaces.
ChangeLog update
Add oo support function zend_class_implements()
ChangeLog update
fix for dereferncing null pointer (mfladischer@gmx.net)
- Argh, the suffering copy&paste can cause
The freed one is a hashtable - may matter if Hashtables are allocated differently
- Support merging free block which was created by reallocing to smaller - size. This should fix some performance issues. This code is still not - thoroughly tested.
Embed date of last modification
- limit writing of field data to field len + 1   This fixed many memory overrun errors which appeared 	in several scripts when writing a record.
ChangeLog update
unintialized variable. Patch by Joe Orton
- Email address change
Remove sendmail patch check.
ChangeLog update
rolling back fix for 23463. The "fix" broke more than it fixed (see bug 25558)
ChangeLog update
Partial rewrite of dowload() method: - Full error checking and reporting - Avoid downloads as possible - Made the "force" option work correctly
avoid chdir() calls remove duplicated validation checks (fix bug #66 contributed by Roman)
ChangeLog update
Allow foo::$bar()
typo
cleanup
New array functions for doing intersection of arrays that are complementary to array_*diff* family of functions. Namely array_uintersect(), array_uintersect_assoc(), array_intersect_uassoc() and array_uintersect_uassoc(). Test case is also included. #docs and news entry later.
new functions NEWS entry
add the valid xml test
add a DTD example
ChangeLog update
And this EOF flag...
BFN
Set the EOF indicator after each read attempt. This prevents it getting stuck in the on position.
Implement stream_get_contents, which is somewhat akin to file_get_contents, except that it works on an already opened stream.
Oops..
Better fix for bug #25758
BFN
ChangeLog update
MFB bison configure test fix
A much better fix for moniker based COM object creation. We now support binding monikers to remote machines. However, MSDN docs indicate that this isn't yet implemented as of Win2000.
Bugfix #25770 Segfault with PHP and bison 1.875
Cleaned up previous patch.
ChangeLog update
some namespace fixes fix compiler warning
better version checks (contributed by Roman)
potential fix for #25759, although it will need further review.
BFN
Forgot about this one
ChangeLog update
fix crash building nodeName
fix crash accessing tagName without namespace
Add schema and relaxNG validation support domdocument->schemaValidate(string filename) domdocument->schemaValidateSource(string xml) domdocument->relaxNGValidate(string filename) domdocument->relaxNGValidateSource(string xml)
use realpath instead of chdir (Roman Neuhauser <neuhauser@bellavista.cz>)
remove a debug printf
Don't reapply the error_message_prefix if an error object is passed to raiseError()
fix segfault if xpath expression string is invalid
implement isDefaultNameSpace and baseURI nodeName and tagName return qualified names fix removeAttributeNode - takes domAttr as parameter better uri and file handling for document load method fix possible segfault when document is freed set get_property_ptr_ptr handler to NULL
Remove unused callback
Sync with new API
Remove redundant callback, simplify API
this little piggy broke lots of things...eg. _function_check_flag in reflection api.
ChangeLog update
NFN
Change fgetcsv() so that the second parameter is also optional.
Better fix #61
notes++ Bug #25413 Add local installed packages to list-all   (thanks to Christian DickMann)
Bug #25413 Add local installed packages to list-all (thanks to Christian DickMann)
- Updated README for mnogosearch extension
fix warning in rare case (file doesn't exist in package.xml)
New feature news.
ws
ChangeLog update
BFN
Bug #25738 (alloca() related problems on the Darwin platform)
More ZTS stuff.
Add regression test for bug #25745
Ensure lval to have a *boolean* value.
Bug #25745 (ctype functions don't deal with non-ascii characters properly)
- Added test for bug #24766 # This bug is caused by the HANDLE_NUMERIC() change in ZE2 vs ZE1
Aligned configure help texts.
Really fixed bug #25719. (basically reverted to the original style of openssl checks found in 4.3.3)
Alignment fix
ChangeLog update
Add a test case for bug #25708
A temporary voodoo hack to avoid memory leaks. # Stuff of this kind must be removed if any neater way is out there.
Add support for hexadecimal-style numeric entities (&#x..;)
Drop multibyte character support in html_entity_decode(). # This has never worked as expected.
FrontBase uses ws2_win32 lib now
This check is no longer needed (Andrei)
fix skipif for these tests
starting b3 (hope this could be 1.3 final)
Go with 1.3b2
Remove leftovers
Alignment fix
Should fix bug #25719
ChangeLog update
Made the $argc and $argv always available as globals in CLI, and not as $_SERVER vars which depended on variables_order anyway. No more silliness.
- Always look into /usr/local before /usr - Added breaks to make sure the preferred value is used.
ChangeLog update
Always prefer user specified paths over the default /usr /usr/local. This may fix compilation problems with on systems with multiple copies of the same library.
Give more info about release states in list-upgrades
Move the test to new file.
fix
smash a segmentation fault
Memory leak fixed (no need of MFH since this is code specific to PHP5)
MF4: allow realpath() for win32 non-ZTS
MF4: Have realpath now
MF4: add realpath function for win32
better fix for #45. Now, it will install the newest version that is preferred_state or stabler. to request a specific state, append -state like pear install Net_NNTP-beta
Add regression test for bug #25666
ChangeLog update
Remove redundant '\n'
More NaN & INF handling fixes.
preparing 1.3b2
" => &quot;, take 2
noted fixed #45, also " => &quot;
Bug #45 preferred_state works incorrectly
Ready for 1.3b1 Removed Changelog
add property_get_ptr handler fix possible segfault in xpath add wide character support for characterdata
fix for bug #25666 (XML namespaces broken in PHP5)
Simplification.
ChangeLog update
fixed #39 commands that need LOCK_SH fail as non-root
ChangeLog update
Bundled GD has this function
Test for Bug 25671
ChangeLog update
Add test cases for the regex probles
Repatch fixes for the problem that was reported at php-dev@php.gr.jp (#884)
Forgot to commit this one.
Explicitly specify mbstring.language.
Specify full path to cat for mb_send_mail() tests
Let client library pick its own transaction param defaults
stupid typo fix
typo
Test case for bug #25665
signed/unsigned compiler warning fixes
silenced a compiler warning
error message was missing an argument
compiler warning fixes, one of them a potential crash bug
ChangeLog update
fixed compiler warning removed dead code
changed ulong to long to avoid compiler warnings (comparison between signed and unsigned)
This is only needed for Windows.
mysqli_prepare_result -> mysqli_get_metadata
mysql_prepare_result -> mysqli_get_metadata This function was renamed in libmysql (changeset 1.607 by monty)
ChangeLog update
ws
remove dependency on PHP 5 - it works just fine in PHP 4.3
fix preserveWhiteSpace on document load
Specify full path for cat utility used by the test.
ChangeLog update
Always return long from ibase_gen_id() on IB < 6
ws fix
Added ibase_gen_id()
Added ibase_gen_id() # Lightweight shortcut to SELECT GEN_ID() ... function
Remove useless mutex code due to the switch to oniguruma.
New test cases for the new 4 functions : - array_udiff() - array_udiff_assoc() - array_diff_uassoc() - array_udiff_uassoc()
4 new functions : array_udiff() array_udiff_assoc() array_diff_uassoc() array_udiff_uassoc() They work like array_diff() or array_diff_assoc() but callback function(s) can be used to perform the comparisons. For example array_udiff_uassoc() expects 2 callbacks are last 2 parameters one is used to compare the values of the entries in the arrays the second to compare the keys. Class methods are also valid callbacks. Even when the data that should be used in the comparison is private or protected then a static method of a class should be used (this behaviour can be seen in the regression test - 007.phpt).
MFB 25614 "fix"
Removed unnecessary ssl.h include
Oops
Remove unused variable
add as binary..
remove corrupt file
Added simple test for gettext
fixed wrong string length in mbregex.
revert a patch.
fixed win32-build and update e-mail address in mbstring.
ChangeLog update
String format stuff.
improve the fix for #25494. If more then one bad parameter is passed an warning for all will be emitted.
set consistent pathing for libxml set document url when loaded from memory to set base href
set base href for copied, imported doc set environment for imported stylesheet add optional clone parameter for data to transform
move hash.h for libxml 2.6 compatibility
Forgot package.xml
Updated test cases and examples and cleaned up the new OO code so it will be easier to maintain.
Completely re-wrote the ZE2 OO stuff to do it the proper way. It is not considerably more stable, cleaner, and looks as if it works well :) This probably is going to break any scripts which used it before, but oh well.
proto thiko fix
Added missing format.
String formatting stuff.
ChangeLog update
Complete refactoring of the OO support in tidy. Although currently incomplete, it is a good start.
Added a note & fix for a memory leak in libtidy.
- return correct hash constants - check for 'memory' in sqlite_factory() too (noticed by John Coggeshal)
- fixed typo in error message
Alias session_commit to session_write_close, a more intuitive name for the functionality.
ChangeLog update
Tidy Hijacked! Read all about it ;)
MFB Avoid zero-length keys which result in a spinning process
Add public array Reflection_Class::getDefaultProperties()
Explicit cwqasting is now necessary
Nuke compile warnings
Revert patch r1.40, bug is in glob() not IS_ABSOLUTE_PATH()
ChangeLog update
RFC about PECL binary creation and distribution
MFB: Add myself to credits
Is the version 5 now? :)
MFB
ChangeLog update
Manageability
Added ftp_alloc()
Add ftp_alloc() for servers which require client to predeclare filesize to be sent.
Nuke vars no longer needed
Go with studlyCaps
Go with studlyCaps
Go with studlyCaps
Change tostring() into __toString() to match method name used in casting.
Fallback to default behaviour for unsupported object type conversions
- Allow partial type conversion support for objects. - Add support for object to string conversion from userspace by method   __toString() and add a test.
Add missing check
add rollback for installed_as
add rollback test for installed_as
finished transaction tests
unit testing finds another bug :) another case that would cause an endless loop in installed_as file transaction
ChangeLog update
When track_errors was enabled, we tried to assign value already freed char.
Show name of missing function as typed
Use studlyCaps in exception class
Go with studlyCaps in error messages/backtrace/reflection output
regex_t is used by both Apache & mbregex. This little check prevent compile failure, while php is compiled as dso module & mbstring is enabled.
MFB
add rmdir test, add comment to remind me to finish installed_as test before moving on to next one
modify chmod test to be truly permissions-filesystem-based-specific
more file transaction tests
oops - params are reversed, my bad
bug in chmod file transaction operation error message bug in chmod file transaction test - was testing the perms to see if they were a writable file
phpdoc error
Link to fbclient.dll if available Add client lib name to dll version info
ChangeLog update
cut-and-paste error
correct typo "committed" add error checking to commitFileTransaction()
some beginning tests for commitFileTransaction()
adding transaction test file (unfinished)
Document addFileOperation() Add basic test for invalid input, since it is a public method
Use isc_get_version() for client lib info if available
proto fix
Check for Firebird libfbclient.so first
more debug code removed *sigh*
removed debug code
tweak Tomas's patch for $ pear install Package-v.tgz
fix regexps for package detection and download - should be case-insensitive
fix invalid replacements - add tests for bad pear-config/package-info replacements
add tests for invalid replacements
file transactions used - but startFileTransaction() was never used inline docs for install() were out of date
ChangeLog update
Revert - need to look for a better solution
- Added new notes and split them - Upgraded me as <lead>
Test for bug #25547
Bugfix #25547
pear install net_socket will work now - before it would only work with pear install Net_socket
validate encoding against valid handlers
proto descriptions
Simplify / fix
FREETYPE_PATCH is not always defined. # will likely fix Sebastian's build :)
Now empty directories are removed on uninstall, so uninstallation is complete and correct
mistaken include_once 'Remote.php' - not sure why it worked at all
move registration of installed location to post-commit
add testing for baseinstalldir attribute
add testing for install-as attribute
ChangeLog update
add testing for md5sum
found bug in _installFile() thanks to unit testing. - if a bad md5sum was found, and --force wasn't specified, the temporary file was never deleted
adding test for non-existing file
adding test for invalid role
Bugfix #25335
adding replacements section for _installFile()
Commit 64-bit fixes to the standard operators by Ard Biesheuvel (abies@php.net)
Remove this (part from another patch)
Add length modifier L
- Add length modifiers(ll, j, t, h, hh) # Still missing formats (%a, %A) # Still missing modifier (l) in (%lc, %ls) # Still missing modifier (L) in (%La, %LA, %Le, %LE, %Lf, %LF, %Lg, %LG) # C99 requires any conversion to be able to produce at least 4095 # characters. Implementation only allows less then 512. # # Only inside ext/mbstring etc. we could use %lc and %ls. And none of the # rest should affect us until we stay with double and avoid long double.
new test for _installFile() - not yet complete, but what's there works
simplify test, split into two
Bugfix #25528 (by Ard Biesheuvel)
Moved things around and added some #ifdefs so that the extension can be used in PHP 4 (without the ZE2 tree parsing).
ChangeLog update
Show the whole message when in debug mode
WS
Pointer size fix
Make use of dedicated macro
ChangeLog update
Pointer size fix
ChangeLog update
Revert f**kup CR/LF endings
Add client library info to phpinfo() function Small inter-op fix for IB6
add test
ws
Use scope from method, not from object
verified unit test pear2.phpt works with changes, removing old code
"pear -v install" is now more usefull
Be more nice when downloading files
missed one segment to comment out
use is_callable() - what a great function!
Use type instead of constant
Changed unsigned ISC_LONG to ISC_LONG # Build fix for FB 1.5
Cleanup r1.76 patch
check for FDFErcNoValue was in the wrong execution path, should always be treated as 'no error' (should finally fix #22803)
ChangeLog update
phpdoc correction (kind of serious error :)
Cleanup previous patch.
ChangeLog update
test for checkDeps
first step in unit testing the installer - tests the download PREG function
Nuke warning
fix typo
Show the runtime version of Apache instead of compile time.
Add an phpinfo entry showing which version of freetype is linked to gd.
ChangeLog update
MFB(r-1.74.2.13) Bug #25314 ASCII mode transfers behaving like binary when initiated from windows.
Revert the JIS addition, it did not fix anything
Re-enable sendmail binary check, now with parameter detection.
move some document properties internally add xpath namespace support (by Shane)
MFB: - Added JISX0208=1 and USE_GD_JISX0208 defines
- Should fix bug #25295
configure.in
- Should fix some CLI build problems on some systems.
Don't include unnecessary headers in other configuration too
Don't include unnecessary headers
ChangeLog update
Allow to search for section FILE with 2nd parameter (found by Derick)
Zero-terminate strings Add fileflags for DEBUG build
Add version info to Windows DLL
check for mach-o/dyld.h - needed for non-PHP ZE build
ZTS fix
ChangeLog update
typo + proto fix
test for helly's mysqli_fetch_object changes
Modify mysqli_fetch_object() to be able to instantiate a selected class and pass parameters to the constructor.
Modify pg_fetch_object() to be able to instantiate a selected class and pass parameters to the constructor. Update tests and add a test for these features.
Bugfix #25404
Add missing proto
http.h php_http,h rename
Disallow to changing the backtrace
Add missing newline if no static methods are available
renamed http.h -> php_http.h
- Typos, CS, etc. # Sara, add the missing description to the proto..
renamed http.h -> php_http.h
Use %s where it makes more sense
Add ext/standard/http.{c|h}.
Standard Footer
Prevent Recursion
make error code helpful if no releases of a package exist at all
make error code helpful if no releases of a package in preferred-state exist
Introducing php_url_encode_hash_ex() internal function and http_build_query() userspace function.
ChangeLog update
Omitting is also possible here
WS
Add missing CVS Ids
Simplify reflection_property::__constructor() and fix property factory
- Simple test for ming
Be more relaxed about dimensions of array arguments
grouped DBX stuff
Test array handling
Make the test fail if anything goes wrong :-) Some CS
Added updates to dbx module to NEWS by hand as @ doesn't work according to Jani (since when is this?).
Provide string casting for exceptions by calling toString()
Added DBX_RESULT_UNBUFFERED flag for dbx_query. Added dbx_fetch_row() function. Added/updated tests for both. @Added DBX_RESULT_UNBUFFERED flag for dbx_query. (Marc) @Added dbx_fetch_row() function. (Marc)
ChangeLog update
Added support for binding arrays
remove debug code
fix bug in --force - $options was never passed to _installFile. add PHPDoc
fix bug in --force on windows
Don't rely on sizeof(int) == 4
Tests show updating consts must happen once at runtime (revert optimization). Add tests for static properties.
Add reflection_class::getstaticproerties()
Go with the mess
Go with stdlyCaps
Don't rely on sizeof(int) == 4
Remove unwanted space
Update necessary test INIs
Register the TYPEMODEL constant from c-client's mail.h.
No scaling for double type Added missing array types Precompute scale factors
ChangeLog update
Cleanup after ourselves.
Partly revert and reintroduce hash table entries for the ctor. # Obviously not the brightest idea i had today.
Nuke unused variable, too
- Inheritance applies to __clone() too. - No need to add additional functions for the constructor.   The handler uses the pointer as intended and doesn't look the the name.
Cannot turn a static property into a non static one and vice versa
ZTS fix.
WS
test for bug #25378
Add missing error messages when violating static property inheritance rules.
sync
Test correct binding of 16-bit NUMERIC parameters
Allow redeclareing a protected property as public. # # The only known thing left at this moment is that the protected static members # of a base class is different then the redeclared public property. I tried # to remove both new and old static properties in the derived class and copy # the base property with the new name. But for reasons i have to check later # that didn't result in the expected behavior. Anyway we would need a warning # if someone tries to change the value of a static property in a derived class. #
changes to php_dom.h for last commit replaced removed closing tags - doh
add document HTML load/save methods add document standalone validate method cleanup some prototype declarations domexception inherits from default exception
Revert bogus patch One must *never* use E_CORE_* error levels!
Update documentation, -b ip:port works
fix heuristic: if someone passed "-b IP:port", this check would falsely recognize the parameter as defining only a port.
centralize cflags
Clearly distinguish between Const, Static and Other members. # Const and static props have more in common then static and dynamic/implicit.
ChangeLog update
Nuke far pointers # Unfortunately, this does break compatibility with Windows 3.x :-)
CS fixes # Boy, these guys are worse than -ansi -pedantic
Add a shortcut
Allow redeclaring of protected properties as public (for internal classes). # See http://news.php.net/article.php?group=php.zend-engine.cvs&article=1737 # for the part not fixed (e.g. property redeclaration of userland classes)
enable re2c check for self-contained extensions
provide RE2C to external extensions
Make ibase_{param|field}_info() return typenames that actually mean something
Use appropriate function for property name unmangling. # Make Andrey happy
Make these static as noticed by Andrey
Synch/Unify error messages related to function/method calls
Currently we cannot support static ctor/dtor
Can't ignore variadic DEBUG macro for compilers that don't support them. Revert.
These are implicit properties as denoted by the flag. Dynamic properties only exist in one single object and currently reflection api is not capable of showing those.
Changed some formatting/macro/debugging/variadic stuff
Error message clean up part IV: spprintf/estrndup don't return on 'out of mem' Error message clean up part V: Show PHP Startup/Shutdown
if a package.xml is passed to InfoFrom*(), and the package version is invalid, current CVS causes a whole bunch of xml parser warnings and craps out without telling the user why.  Now it exits gracefully.
fixes rather obvious problem.  Try this with CVS before:
Error message clean up part II: Don't show params where none apply.
Error message clean up part I: always show 'Unknown' instead of empty names.
MFB: Plug leak when invalid domain name provided.
Don't loose information if no parameters were shown. # Noticed by Sebatian Bergmann
Show {main} and prevent showing empty stack traces
Clearify this
Add missing '}'
WS/CS # Let's see if i can overcome those annoying "^M"s
Revert what I think is an accidental commit by Marcus that slipped in at revision 1.23. Declaring getMessage() as final is a PITA, so I hope it will not come to that.
"fixed" bug #25344 (regular domain "localhost.com" used in php.ini)
Add static reflector::export() and its implementations. # # This makes the main reflection use a lot easier. #
Set the params in the struct
Invalidate exception in this case too
WS
The sendmail_path executable check breaks setups that use parameters for sendmail - including the default setup - so I'm disabling it for now.
Add xsl.
libxml 2.5.10 or greater required from now on
ChangeLog update
Make sure that ftp->data is nulled after it's freed. This may fix bug #25294 & bug #25296.
typo
Tomas say:
Don't repeat first const count(consts) time
Beautify output
Add reflection_parameters, patch by Timm Friebe
No dots at the end of error messages
Excluded chars < 32 when displaying string parameters that would obliterate output.
Attempt at fixing the linkage problem in Win32
Synch error message with other one to fix tests
Check whether we may access tat union
Revert commit by accident, sorry
- Single header files installation.
Revisited: Replace the non portable code by spprintf
Using zend_spprintf should be faster here
Make vspprintf available as zend utility function. Use it in exception output.
- a new UDM_PARAM_SEARCH_RESULTS mnogosearch API command added to limit   maximum number of search results
This patch should fix all unintended upgrading/installation of packages less stable than preferred state
fix #25322
install sqlite headers with the rest of php. We only really need sqlite.h, but our build system doesn't provide for installation of a single header file (at least not that I can see)
ChangeLog update
Actually fetch the parameter
- Calling abstract methods should be a error for consistency reason. - So in reflection_api we use the reflection_exception again.
No need to enable by default. Derick got confused. :)
libmbfl is required always
ws
- PLEASE stop commiting ^M's
Even though it is ignored this should be correct
Add frame numer and finally display stack trace in the message. # # And voila - nice useable and helpfull exceptions in PHP. # Now we need to tell ppl 'anyway don't use them if possible'. #
Add exception::traceAsString() and exception::toString()
CS fix
fci.function_table & fci.function_name are not needed since we use zend_fcall_info_cache
Be precise
Actually using fcc would be a good idea
- The compiler can't detect all abstract function calls so we need to check. # In this case throwing a dedicated exception is better than the error we # show when the compiler can detect the abstract call because its run-time.
Make those final (see comment)
Add note about version requirement
Added version checking and --with-openssl-dir option
stupid windows
Never overwrite .c files when re2c does not exist.
ChangeLog update
- Add zend_merge_properties() which is designed to serve *_fetch_object(). - Explain drawbacks of object_and_properties_init and zend_merge_properties. # # I guess we can live with the purity problem of potentially calling __set() # of an object which wasn't already ctored. #
- Use zend_fcall_info_cache in invoke() to improve speed. # This also fixes the problem with calling static methods.
Throw exception if user wants to pass arguments to an non existing constructor
Throw exception if user wants to pass arguments to an non existing constructor
One more fix for spaces in paths
Allow to pass arguments to the constructor
fix optional dependencies in Dependency.php, remove ugly hack in Installer, add note about Cox's cool addition to pear install, remove noise of who did what from package.xml, fix #25008
This patch allows:
snapshot < devel (betterStates())
- A mnogosearch extension is updated to work with mnogosearch-3.2.15+
- skip with CLI
- Skip with CLI
improve format string
improve a number of zend_debug format strings
add note about fix for spaces in paths for an installation into a directory with spaces
fix spaces in paths for an installation into a directory with spaces
MFB
ChangeLog update
Add define to reset error handling more easily
Need to tell zend_fetch_debug_backtrace() whether to skip top function or not. # And i wondered why the trace wasn't rally accurate.
Add public read access to protected
Need to check if we got any value before destroying it
Match expected class and instantiated class
Add sqlite_fetch_object()
Error messages show the class now
format string fix and number of arguments
Add zend_throw_exception_ex() which allows to format exception messages. # # Since we don't have any portable way of printing into a dynamic buffer i # used a stack buffer of 1K (just like the error printing) and used a dynamic # buffer in case the necessary function is available. #
Classe tables work this way
Prototype fixes Return number of affected rows by ibase_query() and ibase_execute() if > 0 # Second change was actually introduced in 1.149, but never # mentioned in the CVS log
this is the right parameter
format string fixes
misplaced quote
\n at the end of the message is not needed
- Split debug_backtrace() into lowlevel c function and php function wrapper - Add trace property to default method based on new zend_fetch_debug_backtrace # Unforunatley the handler for uncaught exception can't show this backtrace # simply because there is currently no way to do it. If i can think of a # solution i'll add it. Until them i am open to any ideas/help.
format string fix
older gccs don't understand attribute((format)) on function pointers
- added mcve to the modules workspace
kill warnings
ZEND_GCC_VERSION should always be defined to a number so we can use simple comparisons all the time.
fix format strings
add format attribute where appropiate
Add format attribute to a number of functions
Revert the patch per Dan\´s request
kill warnings
MFB
Remove NEWS entry because fix was committed to 4.3 branch.
fix format string (long port)
MFB
Use ZEND_GCC_VERSION and ZEND_ATTRIBUTE_MALLOC
cleanup & centralize ZEND_GCC_VERSION and ZEND_ATTRIBUTE_MALLOC so that they can be used by downstream applications
proto fix
Enable attribute((malloc)) for GCC 2.96
MF4: -m fix for premature extension unloading
typofix
GCC 2 does not know about malloc yet.
Add further check for "#include MACRO" style syntax
provide attribute((malloc)) where appropiate
Let GCC check format arguments
* added --alldeps --onlyreqdeps options for pear install/upgrade. * added automatic dependency sorting, so the order of packages on command-line is unimportant for both install/uninstall * added one more spaces in paths fix that was missed in PEAR_Common
ChangeLog update
Test multiple execution of a prepared EXEC PROCEDURE statement
Test for BLOB ID survival of close()/connect()
Removed TSRMLS_FETCH from _php_ibase_module_error()
Prevent abrupt script execution when sendmail_path contains invalid executable. Add more detail to the warnings regarding execution of sendmail binary.
Nuke unused variable # I should have taken Timm's patch
adding betterStates() for usage in automatic dependency resolution
Committing a patch for IBM DB2 BLOB support submitted by Clara Liu (clara@zealworks.com). # I haven't had time to completely test this patch, a few users have stated # that it works well for them and a few others want to test with windows # builds, hence the submission.
- Use the shtool in $builddir/build instead
Use INSTALL to install build files
Prevent a crash when expand_filepath() fails.
Squelch warning "Variable may be used uninitialized." This would never occur anyway because of the logic of the function, but gcc isn't quite smart enough to realize this.
ChangeLog update
- Prevent crash if non-existing save/serializer handler is tried to be used - Added the registered serializers information to MINFO.
ChangeLog update
Use $(INSTALL_DATA) instead of cp
Bugfix#25239 Closing control stream while data stream is open violates RFC959 section 2.3
Update
Update exception code
Exceptions work now
- Simplify php_error_cb() - Make errors show the class where possible
fix debug build. use libxml dynamic linking until it can re-export symbols
adding me as helper, adding dependency on XML_RPC 1.0.4 and optional dependency on xmlrpc extension - this will change to dependency on XML_RPC 1.0.5 if all of Marshall's ideas are implemented
my fault - forgot to fix this
Some minor fixes so that this works with autoconf 2.13 too
Sync with original
ChangeLog update
Allow usage of external libmbfl
Add missing check
Integrate allocator code into mbstring.c
Sync with the original
- Provide appropriate way to destroy internal zval's. - Allow internal zval's of type string and disallow complex types. - Define the default string for extensions at class level instead of ctor.
Don't identify alias'ed functions
Use ""'s if you want empty strings.  We want to crash on errors.
Use pemalloc()
Allow NULL, too
Get rid of more ^M's - Marcus, please check your CVS client!
Get rid of more ^M's
line endings fix
Never, ever, overwrite the refcount element of a connected zval!
Add dedicated reflection_exception
Allow to throw instances of classes derived from exception
- Provide a unified way to display uncaught exceptions, which shows   file/line/message info if possible. - Add zend_eval_string_ex() to be able to handle exceptions in eval'd code. - Use above function to fix memleaks in CLI.
Make invoke() work
zend_parse_parameters 'O' works the way we need here
Not needed
Make use method macros
One of PPP is needed, too
- Add fn_flag ZEND_ACC_ALIAS - Unify way of function_entry generation by new macro ZEND_FENTRY
implement stricterrorcheck fix clonenode cleanup error routines forgot these files
implement stricterrorcheck fix clonenode cleanup error routines
remove document pointer references as doc is now copied
Add property read code and use that in default exception class
ChangeLog update
Allow zend_throw_exception() to also set the exception code
Exception has 4 protected default properties (message,code,file,line). They are all initialized at c-level constructor correctly.
Internal classes can now have default properties.
Show ctor/dtor information and those don't return anything
- Flag ctor/dtor methods - Use this to prevent memleaks when an exception gets thrown in ctors. # I added the dtor flags for consistency, atm a compareable check in # isn't necessary for destruction. But anyway i'll use this for the # Relection API too.
Make exception code more robust
revert previous patch.
changed for ZTS mode.
revert my patch.
strcasecmp macro moved to mbfl_compat.h.
remove unnessesary files.
removed mbstring/*/config.h.
added .cvsignore and README.
@mbfilter is changed to bundled version of libmbfl to prevent LGPL licence problem. mbregex is changed to oniguruma.
ChangeLog update
ignore this generated file
provide general hook for exporting symbols from php4ts.dll
Replace *magic number* with a much nicer define.
	Updated PHP_API_VERSION to 20030820 for the php_setcookie api change
allow building without libxml2 under win32
Set module id 0 (internal) for constants registered by php_cli in C.
ChangeLog update
english is funny
Add function 'zend_throw_exception(char *message, int duplicate TSRMLS_DC);' to provide an easy way to throw exceptions for extension developers.
ftp:// wrapper context option: resume_pos
If ce not given than any object would do
Paramspec 'O' / zend_parse_method_params(): only if given check the class type
Under FreeBSD, statfs(2) requires both <sys/mount.h> _and_ <sys/param.h>. The autoconf check for <sys/mount.h> was failing because <sys/param.h> wasn't being universally included.
- Proper place, correct formatting. # Why is this called 'setrawcookie()'? It's not following our naming style..
ChangeLog update
Extensions that do opcode hooking must provide the removed functions/macros themselves now.
- Added new setrawcookie function (bfrance)
adhere to silence
No need for those code blocks anymore...
Add resume_pos (resume position) context option for restarting file downloads.
Added a parameter to php_setcookie to toggle URL encoding of the cookie data Added the function setrawcookie that turns off URL encoding of the cookie data Changed setcookie to turn on the URL encoding of the cookie data
Reuse result data structure and resource id for consecutive executions of a prepared query # As previous resources are invalidated anyway because their statement # handle is reused, we don't have to allocate a new result for every # execution of a prepared query
allow destructor to clean up connection data
fix infinite loop in normalize
doc must be copied when importing stylesheet libxslt uses the _private for processing
Moved transaction defaults to header file
Cleaned up _php_ibase_var_zval()
Moved some local vars to stack
Nuke link handle from BLOB id # Now BLOB ids can survive disconnect/reconnect Added link argument to ibase_blob_{open|info|echo}()
Explicitly declare the dependencies on the generated sqlite.h file.  This allows the libsqlite source tree (and php-src, as a whole) to be built using 'make -j' once again.
ChangeLog update
Add test for #25145
More accurate fix for bug #25140
Lets put this here when we really know its gonna be only in PHP 5
- Back out Ilia's not-yet-ready patch.
dummy commit
fix build
dummy commit
dummy commit
dummy commit
fix build
ChangeLog update
Update credits # re-ordering of some of the lines is due to case-insensitive # win32 filesystem
5 sir
linkage for C++
Get rid of PZVAL_UNLOCK() - fix untested
Prevent access to internal engine functionality
Improve tracking
Improve tracking
Improve tracking
ws
fix #25131, OS_Guess warnings
emalloc -> safe_emalloc
ChangeLog update
Nuke bogus BLOB ids # User-space BLOB id no longer contains transaction handle, so BLOB ids # now remain valid throughout multiple transactions. # Oh, and they look better too :-)
fixing invalid version number for Pierre :)
reverting accidental commit of my fix for #25008 - we'll let Tomas review the patch I submitted (oops).  The other stuff was good.
fixed #25117, updated package-PEAR.xml to the current release level
No more vectors
Simplify previous fix
Test immediate BLOB inserts
kill some warnings
Test fetching BLOBs >64k
Use explicit rule to create parsedate.c
Use %p to display a pointer value
The first element of the array seems to store the members count
The integer timeout is cast to a void *, passed to this function, and cast back.
One bit fields need to be unsigned, otherwise there is no storage for the sign bit
explicitly cast size_t to zend_uint to avoid warnings on 64 bit platforms.
Remove unnecessary if
Apply fix for ibase_blob_get() to ibase_fetch_*() Apply fix for ibase_blob_add() to ibase_query()/ibase_execute()
Put the code where it belongs - fixes a warning and confusion
Implement a TBD: JMP to the end of foreach
WS
Once is enough
- This parser contains 17 reduce conflicts
#typo
- Show class names in error messages when dealing with methods - Mark class as abstract if it gets an abstract method
ChangeLog update
Simplify abstract method declaration
spl_call_method returns the zval* if used
WS
Always fill entire buffer in ibase_blob_get()
Add some debug help
Some general cleaning up Some preliminary changes for extensions to array functions
Test for bug #24224
Simplify
Remove all vector based functions for the following reasons: - This solves alot of platform compatibility problems - The possible security issue of allocating an incredibly large vector pool is prevented - They are of little to no benefit in a high level language - 99% of all things done with these functions can be done using sendto/recvfrom
Removed ibase_num_rows() Converted some MACRO-isms
Removed ibase_num_rows() (requested by Ard)
Added comment about ibase_num_rows()
ChangeLog update
Restrict scope of inline functions to compile unit
It is maintained now by Ard
MFB
group those ibase entries a bit + added ibase_free_event_handler() too
Added ibase_free_event_handler()
new functions in ext/interbase
2 proto fixes (Mehdi Achour)
Updating TODO
ChangeLog update
Moved TRMLS_FETCH to correct scope
Added ibase_set_event_handler()
Upds
Add 'graphical' tree mode
update for com_dotnet
add credits
add news about COM
fix .net build
Might help to have the COM stuff actually build...
Don't test other functionality than wddx here.
fix this stuff
Add new COM (and .Net) extension for php5. Not yet complete, but should work for most people.
Added ibase_wait_event()
Added missing skip condition
ChangeLog update
MFB
ChangeLog update
ChangeLog update
ChangeLog update
ChangeLog update
MFB: standard location for the include files
It's boolean, not long. # fixes a warning under vc7
fixed include, verified that it indeed works, and PEAR.php passes the test :)
fix uninstall for optional dependencies, bug #25080
fix optional dependencies in reading, validating,  and writing of package.xml
this comment makes no sense after the previous commit
updating for release
fix for Bug #21845 $this in static calls
tests for pear error handling
changes to accomodate win32 build # I am not sure whether reading from registry, like I do now is a good # idea, but nobody on php-dev has offered any opinion for or against that
win32 build is now possible Credit is due to Jan Gehring <gehring@egotec.de> for figuring that out
Slight improvement. Hope this will make some difference.
fix test
Disable the debugging to prevent the tests from failing.
more informix stuff
Remove special-case from test for SQLite persistent connections.
Add missing entry
- Show classes in case of methods - Using sprintf here was a bad idea
Allow the use of EXECUTE PROCEDURE statements
Don't forget to flush() buffers for -w -s
revert that, it did not fix anything
Prevent carryover when max-min > signed int max
ChangeLog update
# Wez, your whish is my command
Bugfix #25056
.... and again
Re-commit of failed patch
Revert previous patch.
Allow prepared execution of any non-query statement except CREATE DB (fixes bug #7014)
proto fixes(Mehdi Achour)
Added comment in code :-)
Revert ugly workaround for erroneous results of ibase_num_rows() (see comment in code)
Tiny fix
Changed to reflect corrected ibase_trans() behaviour
Remove bogus patch - the number of elements is unrelated
fix build
fix test
emalloc -> safe_emalloc
ChangeLog update
emalloc -> safe_emalloc
Bugfix 21918
Ensure CGI binary works like CLI. # This kind of mess should be removed if other better way is found.
(format fix) replace a tab with a single space
Bugfix #25044
Add Ard as interbase maintainer
proto fix (thanks to Mehdi Achour for notifying)
- added script encoding support to Zend Engine 2.   this enables ZE2 to gracefully parse scripts written in UTF-8 (with BOM),   UTF-16, UTF-32, Shift_JIS, ISO-2022-JP etc... (when configured with   '--enable-zend-multibyte' and '--enable-mbstring')
Simplify a bit
Nuke unused variable
Collection of tests for stream_socket_(client|server)().  TCP/UDP (AF_INET & AF_INET6) and UNIX/UDG
Added the interbase NEWS entries
Moved the RINIT(crypt) stuff into crypt() itself.
Added myself
ChangeLog update
Add destructor inheritance test (bug #24637)
Bugfix #24637 __destruct not called
Initialize this variable to 0 as suggested by sara
Added ibase_num_params() and ibase_param_info() @- Added function ibase_num_params() (Ard) @- Added function ibase_param_info() (Ard)
Nuke unused vars
Nuke unused vars
Win32 fixes
This is a void funtion
Changed ibase_query() to free transaction resource if SQL is COMMIT or ROLLBACK
Add foreach/continue test
Simplify
CS fix
ChangeLog update
Timeout fix.
Use getenv() rather then $_ENV, the latter is not always avaliable.
<? -> <?php
Add testcase for complicated reference scenarios with objects.
Better diffing
Cosmetic note
Correct test to work with later versions of GNU Aspell (more common).
Complain about borked tests instead of spitting out errors
Added/improved tests for bugs 24142, 24063, 24951, 24980
Do not assume array contains numeric values.
Added missing ?> so this test can be run without run-tests
Prefix all engine 2 tests
Reenable, works as expected
Precise destructor errors
MFB
Don't show matching regex as different
Bugfix #24142, part 2
Avoid a round() bug that occurs due to over optimization of C code by gcc. This bug was confirmed across multiple systems with gcc 2.95.3 & 3.X+
Clearify
Bugfix #24063 (marcus/ilia)
Changes ibase_query() to support SET TRANSACTION statements @- Added support for SET TRANSACTION statements in ibase_query() (Ard)
It builds much better when linked to the right lib
Windows build file (doesn't build yet)
Changed the names of some struct members for readability Added function ibase_errcode() @- Added function ibase_errcode() (Ard)
Add test case for the bug
Eliminate redundant assignment
Real fix for the problem addressed in the last commit message.
Plug leak in ftp_url_stat
Changed _php_ibase_trans_end() to allow committing of default transaction of a non-default link
ChangeLog update
Once ago this was used
- Reduce number of c-functions/macros involved in function invocation - Unify names of remaining c-function/macro names
Switch to use zend_call_function() what shortens spl code
fix bug #24957 (var_dump of object segfaults)
Move shutdown code to better place
Add missing right parensis
fix segfault when importing multiple documents
Whitespace fixes.
Tru64 requires TZ values be POSIX styled. # See http://h30097.www3.hp.com/docs/base_doc/DOCUMENTATION/V50_HTML/MAN/MAN3/0247____.HTM for detail.
Remove 'proto' from internal functions
fix another broken prototype
dlfcn.h was not found on Solaris when using forte cc
Clarify use of original_function_state_ptr
ChangeLog update
K&R cosmetics
MFB(1.142.2.22): add missing NLS entry for German.
Keeping up with ZE changes to the function struct, fixed tests
PEAR packaging details
Added three new user functions
ibase_query() now returns a link resource if a CREATE DB was issued
MFB: added include config.h so shared extensions builds work correctly
php_xslt.dll -> php_xsl.dll, removed non-existing php_domxml.dll (bug #24960)
Minor Win32 fixes/cleanups
- restore Mail 1.1.0
- Mail 1.1.1 has bugs, back to 1.1
clarify :)
ChangeLog update
ZTS fixes.
Changed ibase_trans() to allow multi-DB transactions with distinct trans_args for each connection.
- Add it again
- seems to failed
- Update Mail (to 1.1.1), HTTP archive (to 1.2.1)
go with 1.2b5
Adding -lcrypt here is not necessary
Avoid notice in bundle
Other fix to ws in path names fix
Pass raw data to frontend (Christian Dickmann)
Better install report for C extensions
Better error handling on invalid .tgz packages
Significant changes to layout of internal data structures in order to accomodate and carry out the following changes: * Removal of arbitrary 'transactions-per-link' limit, * Transactions over multiple databases.
putenv() should be put here as well.
The last 4 args are by ref..
$host_* vars are used in extension config.m4s too.
Replace fast_call_user_function() with zend_call_function()
Try to put an end to the endless number of call_user_function variants. zend_call_function() now takes a structure that should contain all of the necessary information.  If further information is necessary in the future, then we'll be able to add it without having to introduce a new function.
syncronize
Don't try to __sleep incomplete classes
don't try to wakeup incomplete classes
pass trsm via parameters
fix incomplete class for ZE2
Disable prolebmatic test
Shorten output to prevent messup
Remove non-standard vim6 option
Display the currently running test
fix syntax
remove stack clean - it makes trouble
go with 1.2b4
ChangeLog update
You shall not Copy'n'Paste after midnight without checking 3 times
Ups
Update documentation in source, reflection and docu itself, part II
Update documentation in source, reflection and docu itself
- Unset support for spl_array_access by method set($index) - Parameter names for array interface methods
Unset support for spl_array
Nuke unused variables
Add function/method parameter reflection
MFB don't overwrite
Show the correct configure error line number (Greg)
More space in path name fixes (Greg)
Give user the chance to support nsapi_virtual() in newer servers by adding parameter server_lib to php5_init (windows only)
oops. forgot function
fix crash #24842
fix leaks: bug #24831
Another $fp test fix (thanks Jan)
<license> is valid inside <changelog>, support it
use get_obj_zval_ptr
- Typo in cache file creation - Do not create the cache dir in getCache()
add test
Add missing library path
Add a test
Simplify code using XOR
Add logical XOR, proves to be quite useful lately
This check shouldn't be necessary
ChangeLog update
Latest zend updates
Ensure functions have a valid access level
Default to public
Not needed, will be copied from ptr->flags later
let's go with b3x
+* Made package dependency checking back to work +* Added support for spaces in path names (Greg)
Added support for spaces in path names (thanks Greg!)
TSRM issue in windows compiling
Add missing arg info
Don't let the shell escape quotes
Style & WS fixes
Reallow build
Use new infrastructure.
Remove unnecessary macro
ntroduce infrastructure for supplying information about arguments, including:
Disable the test temporarily because "-d" flags in the command line doesn't take effect under CGI mode. (See the relevant portion of cgi_main.c that begins at line 996)
Made package dep checking to work again (Seems that this line got lost at some point)
No need for this initialization - this function initializes all of the elements of zend_internal_function
Clean up.  extended_value can only contain either ZEND_UNSET_DIM or ZEND_UNSET_OBJ.
Generalize fetch_class
ChangeLog update
Initialize all struct members: Necessary for reflection
fix invalid $fp check (by nicox@php.net)
upgrade-all back to work
trailing ws
Show interfaces
Use correct macro
fix usage of instanceof here too
ChangeLog update
better fix...
Preserve exit status for non-php execution modes.
Removed the unnecessary check of array_init() return value.
Add missing .cvsignore files.
Segfault fix.
ChangeLog update
Adding the tidy extension to PECL
Only register server variables when needed.
- Removed the unnecessary check of array_init() return value.
Use instanceof_function()
Finish the array overloading patch
Cleanup
ChangeLog update
Revert the fix for now
Get rid of an opcode
Support overloading of $foo["bar"] += "baz"
Improve array overloading - support unset($foo["bar"])
Remove garbage
Call exec_finished()
Add exec_finished() callback for modules - this is the last place where the modules may touch the symbol table reliably
ChangeLog update
Finalize the closing process of persistent streams. The current behavior/API is as follows:
Test case for bug #22836.
increment refcount for arrays passed to xml_set_handler
Remove the obfuscation caused by the double "#ifdef ZTS"
Make pclose() respect references.
ws fix
ChangeLog update
remove xml debug code
reworking xml namespace support add node lookupNamespaceURI and lookupPrefix add attr isId
#damn
In protocol version < 3 we cannot test transaction status and do unconditional ROLLBACK;
Added new function pg_parameter_status()
Needed function detection
New smart connect/shutdown for persistent connections. Behavior for old libs/servers is "BEGIN;ROLLBACK;" in request shutdown. For new libs a "RESET ALL;" is done in connect and "ROLLBACK;" is only done where appropriate.
fix compare
use zend_binary_strncasecmp
change shutdown order so that dtors would coexist with object error handlers
clean the right one
make shutdown more granular so in case some dtor goes ape we still can shut down cleanly
make clone and throw coexist peacefully
add test
fix #24635: clean hash before putting into cache
fix crash #24550
add test
fix leaks with class constants (bug #24699)
make __clone call case insensitive, just as other calls are
doctype and namespace fix memory leak fix
Made avaible the "download-all" command
Partial MDB
Removed unused variable.
ChangeLog update
Bug 24760 fix, in which the port number when non-default is not handled correctly and ends up as the default port. This seems to be caused by some buffer overflow where the port number is assign zero, even though it it is not assigned to the port variable. FIx was reported and a fix proposed by "chuck+php at 2003 dot snew dot com"
Update due to Zeev's latest engine changes
put $ID:...$ in readme
When encountering a test that users GET/POST make run-tests.php use CGI sapi if it is avaliable. If CLI sapi is not avaliable print a clear error when make test is executed.
Possibility to use php5_execute to display server error pages or directory listing pages
cleanup (CS+ws)
Add foreach() test with references
add xpath.c to DOM source files
initial xpath implementation make dom_object generic
Add test for binary safety of each()
Remove useless code
Support references in foreach() Syntax:   foreach ($arr as &$val)   foreach ($arr as $key => &$val)
fix the test
test for bug 24783 (foreach() key not binary safe)
test for bug #14580 (key() not binary safe)
Make print_r() binary safe with keys
Missing entries (Thies&Marcus), some style fixes
ChangeLog update
gztell() is not necessary, the return value of gzseek() represents the new position. With zlib 1.1.4 gztell() alse returns 0 when working on non-zlib files (test ext/zlib/tests/gzreadgzwriteplain.phpt).
Removed unused variables.
Remove namespace leftovers
Go back to ZE1-like code
ChangeLog update
- Remove imagepng, not used in test
- imagefill tests
Added pg_version() which returns an associative array of client/protocol/server version. @Added pg_version() function. (Marcus)
Add reson
The value might be a null pointer
Postgres decision on this
Improve infrastructure of numeric handling of elements in symbol tables.
Add test
API update
MFB
@ - Added optional Parameter to OCIWriteTemporaryLob which allows to @   specify the type of LOB you want to be written (OCI_TEMP_CLOB, OCI_TEMP_BLOB) @   (Patch by Novicky Marek <novicky@aarongroup.cz>) (Thies)
Make php_check_safe_mode_include_dir check independent of unrelated open_basedir directive and make it properly handle undefined/empty safe_mode_include_dir directive when safe_mode is enabled.
MFB proper fix for #24592
ChangeLog update
Reset vars when reusing a persistent connection as requested from postgres developers
Go without #24499 hint sneaked in by accident
Remove old code
some code cleanups
Add a couple of tests
Missing .cvsignore
some style fixes
Revert fix for #24729, and refix
Go with a better fix for #24729
reverted at Andi's request.  replaced with more generic wrapper.
ChangeLog update
Unify
BFN
BFN
Bugfix #24729  = new ; causes crash when  is not set
Add test for bug #24499
should nt here
Add support for instances in Reflection_Class. # Thanks to Timm for the fast patch contained reply to my help request :-)))
removed references to smart_str, replaced with private string management function.  When snprintf is integrated into the engine, string_printf should be altered to use that.
Remove this then, too
SQLite objects are not cloneable. Maybe we allow this later for sqlite_db.
More informative errors here and these are real core errors
Use only one line per error message and don't terminate with a dot as everywhere else.
more of Timm's implementation.
Update docu
Make it a macro
Missing headers
ChangeLog update
Add test for class spl_array
Add class spl_array which is an array wrapper
This is meant to be used in for(;has_more;next) # Probably the name of such functions should be eol (End-Of-List).
proto fixes
Id tag added. Proto fixes
Revert stuid patch
Id tag added
Id tags added
fix for Bug #24715 segfault in dom_document_create_element removed xmlmemorydump debug code
Add missing function to ease implementations
OS_UNIX/OS_WIN are set in the bundled libsqlite sources.
Cleanup, as suggested by Andi.
Move filter functionality to dedicated function
Add clone support
Shuffle code to ease writing clone handlers
- Don't use alloca on HP-UX (Moriyoshi Koizumi <moriyoshi@at.wakwak.com>)
fix invalid node pointers
Added test case for bug #24573
Add short notice regarding unbundled client lib
- UDM_PARAM_SORT_ORDER has been added in Udm_Set_Agent_Param while   using with mnogosearch-3.2.14+ to set order of search results.
- Coredump in Udm_Find was fixed.
added new functions:   mysqli_connect_error   mysqli_connect_errno
Add test for bug #24640
Added test case for bug #24658
PEAR binaries go where the php bin goes
ChangeLog update
Remove bogus comment (noticed by Zak)
Update examples
More examples
Update examples
Add tree example
Add directory iterator class
Created shorter/sensible key names for dbase_get_header_info  * 'decimal places' becomes 'precision'  * 'printf format' becomes 'format'  * 'record offset' becomes 'offset'
Make array write stuff work again correct and fix tests
Update and remove parts no longer possible
heat wave
- Added snmp_read_mib() which reads a MIB file into the active MIB tree.
More cleanup for assign-op handling of objects
Bugfix #22690
Add /libpath directives for zlib.
- Use the correct paths to apu-config / apr-config
Remove extra proto. (copy/paste error?)
Added test case for bug #22690
safe mode fix
Added function dbase_get_header_info  * Passed a handle for an open dbase database, it returns an array of    associative arrays. Each associative array contains information on a    single column, including name, column type, length, precision, ...
Make virtual() an alias for nsapi_virtual() -- better for docs/naming in future
whitespace
#1 $_ENV is not always set, use getenv() instead #2 bail out after 1000 loop iterations to avoid hanging tests
added new function mysqli_stmt_data_seek
test for bind + sql_mode=PIPES_AS_CONCAT
added support for rebind
additional test for multi-bind
Make this test work regardless of safe_mode setting (bug #24654)
MFB: fix for #24249
MFH
fix setting new encoding
Updating the SNMP credits in ext/standard/credits_ext.h
Applying the correct format of the CREDITS.
Updating the CREDITS with those who are indicated as authors in the code.
Adding an SNMP GETNEXT. This is a basic SNMP operation that retrieves the next value as the one provided to the command. NOTE: snmpgetnext does not follow the official naming convetions of functions, but now it is equal to it version 1 equivalents snmpget and snmpset. I also would like to reserve the snmp_getnext for a function to which a session can be given instead of the multiple values to create the session internally. (Work in progress).
(RE applying) Cleaning up some very old definitions of version 3.3.1 until 3.5.3. Those versions are that old that people better upgrade the SNMP libraries.
(RE-)Applying the contributed patch of Johan Hanne to the main tree. The patch enables control on the way the values are returned into the PHP script, instaed of always strings. Also the type of the value is now returned when configured to do so. This enables better management scripts to do more automatic processing and value calculations. (By default the values are returned as strings, as was before)
CS & WS fixes
WS fix
ZTS fix.
Added comment
Move the macosx fix to proper place.
Allow setting of the serial number.
Add sqlite_has_prev, and sqlite_prev. Patch by Jan Lehnardt <jan@php.net>
MFB better popen fix
added strict encoding detection mode to fix #24309
Added regression test for proc_open()
ChangeLog update
implement read only exceptions implement notation nodes changes for spec conformance
fix loading off of interface
* Update the DTD path
- WS
+* Added proxy support for remote commands using the xmlrcp C ext (Adam Ashley)
Added proxy support for remote commands using the xmlrcp C ext (contribution by Adam Ashley <aashley@optimiser.com>)
Add folding markers
Oops, this is not needed though.
ChangeLog update
Remove un-used code.
fix compile issue - TSRMLS_FETCH is only temporary until errors handled
Patch for bug #24183
- Add support for Z in zend_parse_parameters(). It will allow the extension - to retreive the zval **, thus allowing it to use the convert_to_*_ex() - family of functions to do type conversions without effecting the value in - the engine itself. (Josh Fuhs <fuhs@purdue.edu>)
update credits.
Allow the use of both ming 0.2a and 0.3a (API\s changed)
Use the proper way to get the max requests per child.
Expose PHP errors on error callback function
remove global error handling - use of libxml globals is a bad thing add domDocument properties for parsing options: validateOnParse, resolveExternals, preserveWhiteSpace, substituteEntities implement custom parsing to avoid use of globals implement local errors while parsing errors displayed until error objects implemented
WS
Add -2003 to copyright line (Marc).
Adding missing compression paramters to output functions
Revert bad fix.
Made the install of the config honors $INSTALL_ROOT
- wrong patch applied for #23792, fixed
oops. fix spelling
Adding missing MSSQL Server ini settings
Don't use class_implements() for the moment
Use --EXPECTF-- for errors
Add oo version of test
Add SQLite support to DBX (Marc). @Add SQLite support to DBX (Marc).
Update the info and collect XML extensions
fix typecasting errors, especially for new constants. Don't assume long and int are the same size, as on 64bit architectures, they are normally not
boom bam bing
Convert C++ comments to C (violates C99, and breaks several compilers)
ChangeLog update
Currently we're presented all properties with foreach()
Add some comments
fix this stupid error
Add test for sqlite_seek()
fix getElementsByTagName
fix typo (most likely fixes #24533 too)
apache2filter does not require 2.0.44
- Output of UDM_PARAM_WORDINFO_ALL was fixed
- Udm_Find function is fixed to be compatible with mnogosearch-3.2.13
initial refactoring for assign-op handling of objects
Go with b3
Detect enable_dl off or safe_mode on PEAR::loadExtension()
Check dependencies on uninstall
Added checkPackageUninstall()
MFB extensions info
grep -E -> egrep
gethostbyname2() not thread safe.  Use getaddrinfo() or nothing at all.
Make php_set_inet6_addr happy with any environment.  Use getaddrinfo() if available, gethostbyname2() if not, and simply fail if neither is present.
sync functionality with libmcve 3.2
ChangeLog update
Little update
changed to studlyCaps naming convention
implement node proxies: next phase of interop
Rework zend_do_declare_property and related code into one code base
Experimental dependencies database handling functions (not yet in production)
Moved dependecy db code to its own file
- Commiting conversion to zend_parse_parameters (leftovers from debugging).
Add missing elements
ws + missing fold tag
Added missing .cvsignore file
Add get_dim callback
- Help Zeev fixing ghosts :)
whitespace
fixlet
Initial support for overloading of array syntax for objects (very initial)
ChangeLog update
Updated test so it won't fail if the extension has been built with libiconv.
Modified the test so it reflects the change to iconv_mime_decode()
Improved iconv_mime_encode() interface
oops
Avoid miscellaneous conflicts between glibc's iconv and libiconv.
COMPILE_DL_MYSQL_MYSQL -> COMPILE_DL_MYSQL
add convenience functions or adding class properties.  Ok'd for commit by Andi.
Added missing includes
Simplified config scripts
use common doc with ref counting rather than copy
MFB: binary mode by default under win32.
not a temp var unless its a singular var
ChangeLog update
"real" fix
fix memory cverrun when accessing an empty xml element. guess how many lines it took me to write a basic WSDL parser + API?  20 using curl + simplexml
On Windows, handle YAZ versions that don't export yaz_version.
avoid external conflicts in apache
- Add heap to memory manager. This should improve performance. - Enabling it by default so that it gets tested. We should decide before beta 2 if we want to revert back to malloc or not. - Thanks to Sebastian for benchmarking it
skip test if glob() is not available at all
regression test for #24482 GLOB_ONLYDIR is not working (on BSD)
make sure operator precedence is not playing tricks on us (it worked before on gcc3.2/Linux and with VC++ 6, but not  with gcc3.1/MacOSX)
2 * TSRMLS_FETCH() -> 1 * TSRMLS_DC
ws fix
ChangeLog update
MFB quoting of )
More __clone testing
Change fetch functions and protos so they make more sense. fetch_row or fetch_assoc should  not take the optional parameter
Allow final private methods # # Declaring a method private and final would only be an error for an abstract # class. But at the moment the method is defined and it's modifiers are checked # we do not know whether or not we have an abstract class. It could already be # abstract but it also become abstract later. # # Since i made the mistake in first place i remove the check now. # # Providing the correct test would slow down the compiler becuase we'd have to # iterate through all methods on all abstract classes and check for this. I # guess we can live without. Or does anybody wants this to be implemented ?
Added missing protos
VCWD awareness and (hopefully) windows compile fix
PHP glob() will now emulate GLOB_ONLYDIR on non-GNU systems
win build fixes  (Rob Richards)
Accessing globals from a destructor causes memory corruption
can't forget Andrei
enable Classname() constructor to be called via parent::__constructor()
Check private redeclare behavior
add test for Bug #19859
fix the get_parent_class fix
fix these tests
Store verbose=1 in config file
Atm php5 doesn't support this: function foo(&$a) { 	return new Bar; }
Write the PEAR system config file while installing
Added tha ability to store custom data in a layer Added method getConfFile() Better layer removing in removeLayer()
more of Timm's patches, and mod authors line to give credit where credit is due.
typo, need the complete file name not the basenamed one
Update documentation for PHP 5.
Cut the long line a bit for readability..
Compiler warning fix.
ChangeLog update
Temporairy solution to overcome shutdown propbelms with objects that have hidden destructors. # # If we set the error level to E_ERROR what we must to to be correct and an # object needs to be automatically destructed in shutdown process then the # exit would cause memory corruption and a SEGV.
Reorganize this a bit to ensure the object memory is destructed before showing the error.
rename functions to php5_*
Introduce connection pooling API. I'll use these in http/ftp fopen wrappers soon.
Bug #24399: is_subclass_of(): fix memleak, too
funny fixes
ZTS fix
more size_t -> socklen_t. Noticed by tychay@php.net
Not really the best way to solve this.  But it doesn't give a segfault on self-referential structures, which is always a bonus
Another test case
- use <?php in testcases
Add test case
Changed line break characters from CRLF to LF.
s/cvs/csv/
- Nuke CG(in_clone_method)
Now this should make sense.
s/cvs/csv/ :)
Adjust test. # This was also fixed by the Zeev's patch for bug #22367.
Adjust expectations :)
optimize the case where the object is really a class name, as we don't need to set EX(object) here.
Timm Friebe points out that object detection should be done regardless of the function pointer
prevent user from making nested PHP requests using virtual()
- tabs
- MFH
Finally fix property cloning and fix the tests accordingly.
fix this test when using a save_handler other than files...
add a test for get_parent_class() bug
further improve the performance and clean up
MFB PHP_CHECK_LIBRARY fix
*** empty log message ***
socklen_t needs this. We might need some more magic to ensure that socklen_t gets defined in the correct places; lets see if any more problems arise...
not necessary, already assumed binary safe (it has to be under the current session architecture), and anything else is fair play
This file has moved for your years ago into TSRM.  Delete it.
ws fix
set synching to off cleanup some silly code
ChangeLog update
no c++ style comments
Sync PHP_CHECK_LIBRARY change
make this actually work.
Add more clone testing
Check handling of private class members
ups (2nd)
Use both destructor and shutdown
small bugfix
Rename  test to correct  extension
__clone might not be defined
ups
Add more clone testing
Add tests for __clone visibility
size_t -> socklen_t fixes warnings under macosx
fix load() and loadxml() when used with uninstantiated object
- Added test for bug #24436
Add tests for static members
Timm Friebe's patches for code celanup and additional functions.
Add tests for static members
- Separate CGI build from regular SAPI build # Creating the libphp5.a lib is not necessary for CGI build. # # btw. It would be quite easy to build CGI, CLI and for example Apache SAPI # the same time.. :)
Missing .cvsignore, broken test, renamed zend2.php -> zend2.php.txt
Added --help to phpize
Add .cvsignore here too.
ws fix
- MFB: 1.69.2.18
silence warning under win32 (maybe!)
Add sqlite session handler to win32 build
WS
Add sqlite session handler. Modified (quite a bit!) patch from John Coggeshall. It compiles, but it otherwise untested. session.save_path == path to actual database file for the session.
- MFB: 1.69.2.17
Some more files to ignore
Add missing sqlite references
properly restart syscalls
ZTS fixes.
more incremental changes.  add anything that needs a class factory.
Prevent lines following the version output from confusing the version test
all the easy parts of Reflection_Class
ChangeLog update
- Changed 'grep -E' back to 'egrep'. # # whatever some posix standard says, there's no use to change this in # two places and possibly break stuff, like said in bug #22604. # # Grep for 'egrep' in autoconf 2.13 generated configure to find # several hundred 'egrep's.. #
Make --disable-spl work
MySQL is back as a shared extension.
this fixes including this header in a c++ file (vs6)
fix a crash I run into on occasion
nuke "main" as a reserved keyword
- ZE coding style requires if ( instead of if(
ZTS fixes. Remove unused local variables.
add support for end_reflection_api.c
added support for Reflection_Function, the first part of the reflection api
set precision properly.. test passes here
move the check down a little so it catches all cases
this is the correct result
test for bug #24399, segfault in is_subclass_of()
- Rename test and update title
its not a bug - its a feature.  No longer allowed in ze2.
add a test for shane's bug #24392
Do not test postgres settings
Added test case for bug #24396
- Cleanup, simplifying, etc.
- Memory leaks in UdmCatPath and UdmCatList functions have been fixed.
- Moved the PEAR check after the extensions.   . added checks for the dependancies PEAR has. - Moved PHP_REGEX checks to ext/standard/config.m4
Semantically it's a refcount increase, not a lock...
no need to tell news twice
*** empty log message ***
Added local version installed in "list-upgrades" (http://bugs.php.net/bug.php?id=24298)
Conform to the sqlite.dsp updates
Remove Release_TSinline (it's not necessary) Add Release_TSDbg Change directories to be consistent with our other modules...
Remove unnecessary elements, internationalize
Added "\nRunning on: ".php_uname(); to pear -V
fix by Elfyn, use = not ==
and my first user doesn't even like goto's.  sniffle
satisfy my very first user :)
revert back the optimization for now.
ChangeLog update
update
cleanup
typo
Use the --with-pear=DIR, --prefix && --layout # Will continue with the TODO in next time
renable -b option (removed when longopts were added) dissable -b on windows due to fastcgi lib bug close stdin on linux when using socket server (bug 23664)
fix bug http://bugs.php.net/bug.php?id=24009 also do not use APPL_PHYSICAL_PATH as DOCUMENT_ROOT under IIS, it's different depending on IIS configuration.  Code works fine without it, that was just an attempt at a shortcut.
add <![CDATA[ ]]> fixes
update to beta
- Update DB to 1.5RC1 (final will be in 4.3.3)
fix libxml2 when dealing with character data
- Workarround to the PEAR_INSTALL_DIR empty constant - Remove the layer in $reg->layers too
ok, re-adding this mostly un-maintained awk/sed/sh nightmare for now ...
- Remove register_globals warning, and "built-in MySQL lib" warning
ext_skel is no more, and ext_skel_ng is moving to PEAR::PECL_Gen
Remove namespace references.
Add zlib directory.
Very simple, but very effective optimization.  Provides a signifigant speed improvement to matches done via '=='.  This checks that the lengths of two strings are equal before performing a memcmp() on them.
MFB
what's a php5?
fix building mysql as a loadable extension
fix mem leak in sxe_property_read fix compiler warning
changed tests (ysqli_bind_param and mysql_bind_result changes)
added BYREF_FORCE for bind parameters in msqli_bind_param and mysqli_bind_result changed function parameters in mysqli_bind_param   from (object statement, mixed var1, long type1, ...)   to   (object statement, array tyoes, mixed var1, mixed var2, ...)
Added array handling to file_put_contents() More verbose error reporting mechanism. Test case for file_put_contents().
* Silence warning
MFB snprintf test
- Removed duplicate constants
- Return number of bytes written instead of just TRUE. (Path by Paul Hudson,   hudzilla@php.net)
for now we let xml support build with versions older than 2.5.7, as we want users to actually test this...
ilia points out this is ok
Remove aggregation tests as well.
Buckle your seatbelt, Dorothy, 'cause Aggregation is going bye-bye.
there is no domxml :)
bump up to 2.5.7
define this here too
Move along, nothing to see.
beta 1
fix the libxml linking warnings
Serialize headers for systems with low IOV_MAX (e.g. Solaris)
MFB: libpcre 4.X needs POSIX_MALLOC_THRESHOLD to be defined.
- HAVE_OPENSSL_EXT is not defined always.
Upgrading PCRE library to version 4.3.
MFB Plug leak in context notifiers, implement notifier->dtor
Missing part of SQLite enabling on windows.
Enabled sqlite by default on Windows.
Prepare for enabling by default on Windows.
- Sync, HEAD is now uptodate
- Sync
test commit
undefine macros before defining them
Try to link the getaddrinfo test, so that one can disable it using -Dgetaddrinfo=NO_getaddrinfo.
MFB PHP_4_3 main/streams.c r-1.125.2.70
Don't add -L/usr/lib
Eliminate need for automake/aclocal
MFB: Function was renamed (don't test an alias)
errmsg must be ref
Rename sqlite_fetch_string() to sqlite_fetch_single() + alias
Committing engine select project
ext/xsl requires ext/dom
MFB
New logo (not final yet...)
Leftovers.
libxml work use static libxml library
Remove MySQL leftovers.
Sync.
Sync.
- Add libxml directory - Add zlib to configurations where it was missing - Remove libmysql linkage
fix linking as dom symbols are now built in
fix import/export for win32 when enabled by default
some friendly names...
touch the file
fix by ilia to fix crashes in the session extension when /tmp/sess_* files previously existed.  make test now passes fully with the session extension.
according to the notes in the bugs database, this is the correct result. this result is also the same one given in 4.3.2 and 5.0
Make sqlite good ext/ citizen.
ZTS typo
re-enable dom by default
This should not be enabled by default, ext/xml is..
fine
Experimental extensions are never enabled by default..
Add ext/dom and ext/simplexml to the Win32 default build. #Apart from a linker error when HAVE_SIMPLEXML=1 is set this already works. More research, after a good night's sleep, is required ;-)
these should be enabled by default.  At least this much was agreed upon when the decision to debundle libxml2 was made.
autodetect zlib if dom is enabled
Don't pass resource as an argument when its not being parsed.
Added sqlite_single_query() and it's OO equivalent single_query().
allow the root element to be accessed as a text node
dom5 = dom
First shot at making ze1/ze2 coexist
some awk installations need this escpaed ... BUG #24314 fixed
Restore HEAD of TSRM to what it was two days ago.
Disable MySQL extension by default.
Remove ext/rpc references from Windows build.
add zend engine 2 changes.
clean up a bit.
fix entry
add some NEWS stuff.  Add your stuff now!
moved to pecl by sascha.  remove them from head. discussed with harald, will remain in pecl till he has some more time to work on it.
enable sqlite by default
can now be --with-dom, as the old domxml is now in pecl
remove totally useless, incomplete, badly named, etc. script.
added missing .cvsignore file
- Unified PHP_SETUP_OPENSSL with other PHP_SETUP_* macros.
Empty HEAD of domxml, hyperwave, xslt
1.1, not 2.0...
update package.xml for 5.0
ChangeLog update
Put some brief technically description here
Add profiling results
port sqlite_array_query() fix from PHP_4_3
FIx leak
add test for #24281
Remove references to bundled libmysql.
bring head into sync with the php4 branch
remove the bundled libmysql, and update the config.m4 file as necessary. this works locally, but everyone, *please* test
ChangeLog update
Remove sqlite::close()
Add oo API
Somehow i feel like that
Adding an array example
proto fixes.
Simplify
added new function mysqli_stmt_num_rows
fixed prototypes
ChangeLog update
Add test case for final classes
WS
Add final classes
TODO revisited
ini stuff was a bit broken
thoughts about a new proto parser ...
test script tags are found but not used yet double quotes in extensions summary line are now escaped in code generation
typo fixes and test script tags added
start to track them bugs
Add test case for abstract classes
Don't copy the filename when it is not needed
Store the absolute path of the database file and use that in the external library
When persistent then we may use threads
More prep for 1.0 release.
new functions (4.1.1): mysql_sqlstate, mysql_stmt_sqlstate
Prepare for 1.0 release
Add a pair of functions to handle the binary coding used by PHP from within UDF callbacks.
- New releases Net_SMTP, Mail, DB will follow asap
- Sync release
ChangeLog update
- Errors, warnings and notices start with a capital letter. - Show sorcode info when debugging exif.
When skipping blank searchvals we should advance the corresponding replace hash as well
cleanup common code
fix mem leak remove unused code
- package.xml genartion fixed, <configureoptions> and <license> added - shutdown code for globals added
typo fix
ChangeLog update
Ignore some more win32 build files
Win32 build fixes
Quiet down decode_context_param when stream (not context) is passed. Switch stream_socket_*() to use macro for retrieving context from zval.
Added missing safe_mode checks. Added support for additional libcurl options. Set CURLOPT_NOSIGNAL by default for ZTS, for signal free operation.
Reverting previous patch (not necessary, thanks Pollita ;) )
Some tweaks ready for the upcoming 1.0 release.
More name fixes (more thanks to george)
Forget to remove these namespace crap (thanks to george to remind me)
Allow the extension to reside elsewhere
add xsl_xsltprocessor_transform_to_uri functionality fix a few unhandled error conditions fix compiler warnings
to be precise
- Correct stray commit
- Sync with pear/Archive_Tar/package.xml 1.12
enable sockets by default.
ChangeLog update
Typo (sorry Pierre ;)
- Syncho with pear/Archive_Tar/Archive/Tar.php 1.14
recognize CURLOPT_PORT
Should build with PHP5 now...
Be more clever for discovering the default ext_dir
Update to 1.2 for PHP 4.3.3
Use a smaller default size to accomodate the engine
Make the default mysql connection timeout 60 seconds rather then unlimited.
ChangeLog update
- Remove namespace leftovers - Convert some static inline functions to macros - Faster was of function call parameter stack building
No need to allocate a hashtable when return_value is just going to be overwriten
Handle numeric keys passed via GPC
One more typo ;)
Added a test case for bug #24220
rename SOCKET to PHP_SOCKET to avoid conflicts with Mono
remove the wierdness that prevented the compileness
ChangeLog update
Bug #24210 : assume misspelled (and thereby not found during configure)
Nothing to see here, move along.
Add context property to userspace streams object.
Simplify/fix logging
Added test case for bug #24208
optionvalue is being copied via zval_copy_ctor, there's no need to addref the original
- Added test for bug #24142
s/verbose/debug/
Expose phpize output Increase verbosity for building process by default (no need for -v)
proto fixes #my head hurts now. no more fixes today ;)
flush after banner print
no need to init zval - assignment will init
1. proto fixes. 2, comments on possible leak : buffer calloc()-ed but not free()-d on error (author will be contacted)
updating license to 3.0
$Id tag added
load of proto fixes
$Id tag added. License added tp php_mhash.h
added $Id tag
proto fixes
proto fix
proto fix
Add test for the bug - will fail for now!
proto fixes ibase_rollback and ibase_commit
support for self:: and parent:: constants
fix lambda function static vars (related to #17115)
fix test so it does not depend on variable order
add tests for fixed bugs
default_classes belongs to ZE2 part
Better file relocation and invert post/postun logic
Do not create the registry obj at Installer object creation (it's problematic when pear install -R <DIR> is used)
ChangeLog update
Fit the error handler into the naming scheme and get rid of trailing new lines
Add an error handler (thx to timm for the idea)
Win32 build fixes for openssl
This needs to be exported for dynamic extensions
remove leftover parser->mem_hdlrs - compiles now
Removed xmlMemSetup() code as it doesn't help at all.
add Marcus, enough work done
Add ImageXBM
remove code no longer needed fix format Output property
Better use '_' instead of '.'
Better configure output
should be multithreaded and correct lib naming
Added TODO and IDEAS to makerpm
proto fixes
proto fixes
proto fixes
be nice if i named the dll correctly and put it somewhere
fix xsl release build link libxml2 and libxslt dynamically for consistancy
link libxml2 dynamically for consistancy
No need to duplicate code - zend_get_constant() knows to handle class constants now
set ending \0 for string
No need for this in the HEAD branch
Switch to dynamic linking of php_domxml.dll due to the libxml2 dependency already being present for the core php4ts.dll.
NEWS update
ChangeLog update
No more namespaces
- Update license - Don't buffer in non buffered mode
use xmlInitParser instead of xmlInitThreads reentrant safe as well no need for xml_parser_inited
use xmlInitParser instead of xmlInitThreads reentrant safe as well
Correct license again
Update before moving to PECL
Added test for IBASE_REC_VERSION/IBASE_REC_NO_VERSION trans constants
Added IBASE_REC_VERSION/IBASE_REC_NO_VERSION transaction constants required from bugs #8797 #23887 (added IBASE_WRITE, IBASE_WAIT, IBASE_CONCURRENCY just for clarity)
interoperability support fix some memleak scenarios
interoperability support
fix xml_parser_inited on win32 add common structs for better interoprability
fix common libxml init and deinit routines
Improve/fix preventing both enabled
ecalloc doesn't return NULL
Don't allow both and mark the old one as deprecated
export xml_parser_inited under win32
Bugfix #24182: va_arg macro error in Zend/zend.c
make alan happy
delete + no C++ comments
fix some more leaks
This shouldn't be refcount = 0, causes a memory overrun
Updating email address
ChangeLog update
User Filters don't need to register a resource list for streams. That functionality is already exported by the streams API.
Plug leak (context options not freed) Make contexts auto-registered, ensures userland contexts and C API contexts are both dealt with on request shutdown. Also brings contexts in keeping with streams which are already auto-registered.
fix compile when ZTS enabled fix bunch of memory leaks
Loosen restrictions on method used with http_fopen_wrapper, still default to GET though.
Busted by the CS police.
proto fixes
Added missing function proto
Missing entry
Added missing NEWS entry
MFB
ChangeLog update
Add .def file to export the sqlite functions from our win32 dll
add node->isSupported() add domimplementation->hasFeature() add formatOutput property (extends DOM) call xmlFreeDoc when doc is no longer referenced rather than custom code save and savexml now format based on formatOutput property
Bugfix #2397: dba_open locking error with db3
License update
fix some calls to libxml
silly bug
proto fixes #hope not to be scared again by andrei ;)
proto fixes
proto fix
proto fixes
proto fixes
proto fixes
proto fixes
proto fixes
- MFB: HTTP Request Methods are case sensitive #- This was surrounded by an #ifdef, but I thought I fixed it too.
Added missing safe_mode/open_basedir checks.
ChangeLog update
WS and removing unecessary things
forgot this: set doc for new text node as current may not be in tree
add isWhitespaceInElementContent() fix splitText for nodes not in tree correct links to specs
update messages to require libxsl >= 1.0.18
add substringData, insertData, deleteData, replaceData fix reference links to specs
fixed proto
ChangeLog update
- Missing $Id$ tag
updating license information in the headers.
new TODO item: VisualStudio.net project files
proto fixes
Print NOTICE upon session_start being called while another session is active
ChangeLog update
Add a test for sqlite_array_query()
This is a 'fetch all' test using fetch_all()
Update
Add sqlite_array_query().
- Add sqlite_array_query(). - Make all read functions destructive when in unbuffered read mode.
Do not perform safe_mode & open_basedir checks for memory-only databases.
changes for /ext/dom document ref count changes for /ext/dom internal object handling
implmentation of document ref counting for persistance re-work of internal object handling
No more namespaces
Add some 'structure' and make it faster
remove NS leftover
Support 'self' and 'parent' in call_user_func()
ok, this is a zend bug.
simon says leaking is better than crashing
get rid of a memleak make namespaces work properly
MFB
ChangeLog update
- Moved scan_makefile_in.awk to better suitable place for it.   (other build related scripts are under build/ too..)
ws
MFB
- Added ldap_sasl_bind(). (Jani, peter_c60@hotmail.com)
ws & cs
Nicer handling of protected/private members in print_r()
XMLless build fix
Make $_FILES auto global (bug #23680)
ChangeLog update
Martin's run-test error msg improvements :-)
woops, make that "bundle," not ".bundle"
simple script that will look at bundle (when which is populated when we move the extensions to pecl) and bundle the contents of that file
Added better error message to run-tests
fixed mysql bug #564 (http://bugs.mysql.com/bug.php?id=564)
Actually sqlite.c isn't located in libsqlite
i ain't know domdom
leftover. its wholeText not whole_text
add the wholeText property
Added new test
fix more memory overruns initial definition for document ref counting fixed property access to support all objects clear property handler from invalid objects until ref count implemented
WS
Add the pear bundle command from Thomas Cox.
Goodbye namespaces
ChangeLog update
Touch lemon generated file
Update bundled library to 2.8.3 + patches from sqlite author to enable authorization checks for the ATTACH database command.
add splitText() never has such a complex process been endured for such a simple function libxml makes me queasy right now :)
fix double free issue fix property access within invalid objects and failed reads
fixed bug #24060
Update
Namespaces are gone, and so is this test.
New fetch_all() an fetch optimization reworked (original idea by ilia)
Update win32 build with new version
Update for 2.8.2
* The argument of displayError() is a PEAR_Error instance.
* Use raiseError(), like it's done in the rest of class also.
mfb #24025 fix
Test for bug #24054
fixed return value
WS
missing header
Missing header
Some missing files..
Missing entries in .cvsignore and some cutpaste bugs in config.m4
ChangeLog update
Added test files
Update
Update
add CREDITS file
Avoid unnecessary zval separation
fix a bunch of memory overruns, and uninitialized variable uses fixes crash on sample script rob sent me
Avoid unnecesary zval separation
version length too
initialize the encoding length
WS fix
add tests/ files as examples that you can run and play around with
add .cvsignore file
prevent double destroy and double init badness
fig segv on make install (double destroy badness)
Inital cut of new xsl extension interoperates with new dom extension PHP5 only
Inital cut of new dom extension PHP5 only
... as suggested by Wez
fix array_key_exists() from HANDLE_NUMERIC() changes
WS
* Advancing myself
* Add optional dependency to the DTD
* Commit support for optional dependencies
* Add support for <provides />
ChangeLog update
Revert accidental commit from marcus.
Goodbye  namespaces
No need to dupe macro
mime_content_type() now also accepts open streams as argument streas have to bee seekable, the stream position is reset to its original value using ftell and fseek after operation
fix non-ZTS build
rm namespace leftovers
No C++ comments and extra tabs.
MFB: fix build
Don't corrupt data during request body handling
Don't return CRLF from broken clients
ChangeLog update
GD 2.0.15 sync
cleanup macros
Syncronize bunbled GD with gd 2.0.14
Last set of integer overflow checks.
Integer overflow checks.
god bless valgrind. fix double free where object is prematurely dtor'd. I should probably convert the simplexml nodes over to this system too.  Actually the new dom extension and everywhere else should use the same type of methods.. :)
MFB
handle return value for "no matches" on systems that don't return GLOB_NOMATCH consistent to those that do (return array(), not FALSE)
MFB - fix a couple of missing closing folding tags
ChangeLog update
Add "seekable" flag to stream_get_meta_data() # Caveat Emptor: some streams don't know if they are seekable until # sometime tries to seek first (user streams).
Leftover.
Leftover.
MEGA-patch: namespaces are R.I.P.
No C++ comments in C code
- No c++ comments in c code..
- Add test case for bug #23951
ChangeLog update
Messages for newer servers.
Update of README for newer servers; apache-similar functions nsapi_request_headers and nsapi_response_headers with apache_* aliases; hide authorization-header in save mode.
Removed increment of read_post_bytes because this is done within SAPI (SAPI.c).
earn my keep and allow one to register a namespace name to access a namespace value.
No nested classes
Add some ZE2 bug tests
Allow optional directories
Bugfix #23670: implements and extends cause Apache 2 crash
Simplify by using __METHOD__
Do it correct always
Per request by Derick and Marcus.
Defining it once is enough
don't do this on startup, lazy initialize it.  This takes up > 17% of load time in CGI mode
ChangeLog update
- fix one warning - fix some commit by accident? # did someone here mix c and php code ?
revert the function call caching patch until a new solution is decided upon.
c->name_len already contains the '\0'
zend_alter_ini_entry now with PHP_INI_USER
Classes are neither interfaces nor necessarily abstract
MFB: This is needed though
Update
MFB: Showing info/warning once is enough
additional check for unsecure connect options
Missing entry
MFB: fix proto
MFB: Always send a new session cookie upon regenerating id
MFB
ChangeLog update
Disable virtual() if zlib.output_compression is turned on. Better detection of ns-httpdXX.dll
done.
CGI SAPI should honour this setting
Beginning of restructuring NEWS to make it more readable.
Add the note to php.ini-* about the mail.force_extra_paramaters
Follow the "standard" naming.
- Removed all PHP 4 entries. They're easier to be added all when PHP 5   is actually released.. # If not at all.
Removed parts committed by mistake
Better fix for default connection handling. # Problems noticed by Jay with the help of Sascha's nice little script.
Relying on longer matches seems to work better than matching the whole string with ^...$.
Use safe_estrdup() instead. # Thanks Sascha i didn't knew about that thing.
Update
Refined the bz2 section as per Sascha's suggestion
- MFB: Version output beautification
Added test case for bug #23894
virtual() now works under windows, too
Add php_uname() to output
fix crash on exceptions when return value of the inside function is used
Prevent yaz from logging unless yaz.log_file is set
NEWS update
ChangeLog update
MFB
Optimize
Make use of ze2 code
Optimize interface checks
fix of incomplete windows fix
fix for crashbug with user level wrapper implementations of stream_stat
Changes for compilation under windows
Execute --SKIPIF-- like --FILE--
Faster interface inheritance & faster inheritance checks
MFH-Update
Simply print errors
Update
MFH to 4.3.3
CS
MFB
MFB (these parts were missing)
Added php.ini value: nsapi.read_timeout; Included the apache-like virtual() function to make sub-request on server (thanks to Chris Elving from Sun)
Sync with PHP 4.3.2 NEWS
NEWS update
ChangeLog update
no reason to do this at runtime
Cache function call lookups with loops (store in a temporary variable on the result opline). Assuming lazy concensus on message that GeorgeS sent to the list last week
MFB
@fdf crash with ZTS builds fixed (see Bug #14877)
FDF test cases
- Sync with pear/Archive_Tar/Archive/Tar.php CVS 1.11 - Support for bz2 compression - Add new methods AddString() and extractInString()
ChangeLog update
fix __clone() add schema support
Assume lazy consensus regarding the cast_object() patch.  *Only* implemented from a internals perspective.  This callback has been very useful for both ext/mono and ext/simplexml
plane hacking
MFB: php_error_docref -> zend_error (MINIT)
MFB: LC_MESSAGES support
ChangeLog update
For now that works.
MFB: nuked php_header() call from the sapi_cgi_log_message()
Changed the test so it would not fail on some old platforms.
Add pseudo constant __METHOD__ to easily report namespace::class::method.
- MFB
add support for querying nodes with xpath expressions.
Added regression test for bug #23788
add namespace support
one more define to make it load into php
get rid of crudy stuff
now builds on windows
add a new function simplexml_load_string()
several changes improvements, including the new simplexml_save_document_string() function which saves a XML document to a string variable
sascha points out this is more purdy-like
http://bugs.php.net/bug.php?id=14409 move from PHP_4_3
ChangeLog update
this is right but it shouldn't be
add a note, and implement this properly later
use proper types
remove compiler warnings
add/fix assignments for both nodes and attributes add a working get_property_ptr construct
Add a testcase to foreach/break
Make foreach on spl'ed objects work with break, too
Speling
Hopefully get correct display of version information.
Leftover.
Optimizations
ChangeLog update
exploit the not yet committed, not yet shown cast_object() object callback.
Optimizing by caching class entries, too.
Update after fix
Add new test
fix error resulting from strlen() -> sizeof() change in engine macros
Get rid of references to expat in MSVC project files. For now this expects libxml2 (library and includes) in one of the MSVC default include/library directories. Right now it doesn't link, dunno why -- working on it.
ChangeLog update
Added test case for bug #17115
Jani will learn me about NEWS entries yet.
this fix will be in 4.3.2..
Executing tests once is enough
Allow writing a list of failed tests.
BFN 23765
MFB(r-1.122.2.10) Bug#23765 File upload handler should not care about case sensitivity of header values.
Make this a warning
Add warning level for tests.
Revert to sizeof()
move HANDLE_NUMERIC() from the hash table implementation upstream to the places that actually need to use it.
- Update codinf standards with the posted RFC (results from PEAR Meeting)
ChangeLog update
added another test case (due to the problems we saw with 4.3.2RC4)
No need to copy here unless implicit_clone is active (noticed by rob)
rename namespace to use_namespace to avoid a c++ keyword conflict fix whitespace surrounding the enums, use tabs please :)
use zval_ptr_dtor() instead of the more verbose and less correct version
take advantage of the fast_call_user_function() api call for all of the callbacks.
--force here too for release packages
ChangeLog update
move all the other callbacks
switch over to using fast_call_user_function() with the callbacks
Make use optimized string lowering
MFB
Use same parameter order as strcpy()
style polizei
Setup FG(default_context) in RINIT/RSHUTDOWN instead of fg_ctor/fg_dtor. Frees context at right time without double freeing.
simplexml property modification works now
foodle
optimize loops.  The check only exists for integers because that's the more common optimization, and you actually lose performance if you check for a double too (wierd but true).
add some logic to detect zend_mm, which is really only useful when thread safety support is enabled.
seems there is only the stupid way to be stupid (implode copying array elements) at least we check for IS_STRING, which should clear this up 90% of the time
be stupid, but at least be smart about being stupid.
Added missing open_basedir & safe_mode checks
Remove bogus commit here too
make brian happy
ob_gzhandler and zlib.output_compression should send a Content-Length header if the length of the complete compressed  output is known # MFH follows in a few minutes, please wait with the release :)
ilia's request is my command
NEWS update
ChangeLog update
add an example of modifying the XML tree
MFB context refcounting and text-mode fopen fixes
leave this off until its more ready/stable php5 actually beats php4.3.* in my benchmarks now
use zend_str_tolower_copy()
Bottom drawer optimization to avoid this comparison, but this OP is executed quite often (all of the fetch_* ops)
MYSQL_NEED_DATA isn't defined anymore in mysql.h
This depends on libc and CPU used
Implement default contexts. For the moment this is useless but it will be used soon for connection pooling.
Added missing safe_mode checks and corrected a typo in stdout check.
bah humbug, use the pointer based version, which turns out to be an instruction faster
use pointer arithmetic for the normal zend_str_tolower()
No need to copy the zval unless __clone() is called
make this faster and sexier
use the new zend_str_tolower_copy() function
doesn't need to be register
optimize the lookups by avoiding a copy and then another pass
initialize these to NULL
Put some guards in place.
Make get_browser() try harder to find better matches.
Adding imap_getacl, patch provided by Holger Burbach (holger.burbach@gonicus.de) @  Adding imap_getacl functionality.  Function provided by Holger Burbach
convert array functions to use fast_call_user_function(), gives a nice performance win.
add fast_call_user_function()
NIL, NULL, same thing, but changing for consistency sake
doing the trick like in extension_parser.php
Properly map mcve_text_code to MCVE_TEXT_Code instead of MCVE_TEXT_AVS. Properly cast MCVE_TTID. Correct DVAL arguments to MCVE_Gut and MCVE_Gl.
- experimental streams support - more file types: conf and doc - requirements/install/configure documentation in configure.xml - auto-generated PEAR/PECL package.xml files - auto-generated CREDITS file - auto-generated EXPERIMENTAL file if release state != stable - beginning support for test file generation
example for "stream" as parameter and return type
no RCS keyword expansion in template, 2nd try
protect revision entry in template from CVS keyword expansion
- new method to generate test cases for functions - beginning support for "pass by reference" parameters
just a method name change
additional tags for experimental streams support
create CREDITS, package.xml and maybe EXPERIMENTAL files create tests
updated TODOs
zend_is_callable() already checks this ...
proto and typo fixes
C++ extensions build fix
C++ compile fixes
always return timestamps as 'atime', 'mtime' and 'ctime' no matter what names the underlying platform uses for them
- Commit broken support for sxe_properties_get
Set exspected threads to tsrm_startup() to number of threads NSAPI returns for server
- Implement two dummy handlers so that var_dump() doesn't crash on it.
- Add Revision to MINFO (I was chasing ghosts ;)
- Make it build with the unbundled libxml again
- Update cvsignore
data corruption is for sissy boys
Added missing safe_mode & open_basedir checks.
- Go back to using --disable-xml and --enable-xml   . Require use of --with-libxml-dir and --with-libexpat-dir for ext/xml.     Allows other extensions to use --with-expat-dir for now. # still defaults to libxml if --with-libxml-dir and --with-libexpat-dir # are not used.
Reorganized tests
Make this build with libxml too.
Align the configure --help texts
MFB fix for persistent streams recycling.
last remains..
use libxml2 memory management throughout the file, which in turn uses the PHP memory management.
send some more data to the default handler libxml2 is braindead when it comes to handling entities
Allow build with expat too.
Remove unnecessary test.
NSAPI SAPI sends now 404 if script not found and 500 if execution failed. Includes forgotten php4_close() function registration. Complete rewrite of php4_execute()
Left-overs from testing.
Add missing ini setting (use default and change expected result accordingly)
The bucket rewrite was done some time ago...
- Add .cvsignore file
- Move examples to their own directory
Leftovers.
fix __clone
First try at getting the Windows build working again after libxml2 got unbundled.
use the appropriate accessor
- Rename stream_register_filter() to stream_filter_register(),   stream_register_wrapper() to stream_wrapper_register() and added an alias for   the latter change.
- Unbundle libxml and expat. Now this compiles too..
fix attribute handling on the root node simplify node access by defining/using GET_NODE() macro properly
add the ability to serialize the contents back to a file
basic support for modifying XML documents
add some macros that simplify the loops remove a unnecessary copy
cleanup
MFB buildconf sanity check
continuation on bugfix #13757 make argv/argc *and* query_string work correctly when running cgi in shell
Added skip condition.
bugfix #13757 - passing query string on command line when run from shell
add sample file
MFB move awk detection
MFB $AWK->awk
MFH 4.3; tell the users that the tmpnam stuff is ok.
Really fix this
attribute support
properly detect blank nodes
make arrays of subnodes work (hacky) drop property support for the moment, this will be re-added soonish
Display current version as well as compiled version
add very basic code for the simplexml extension.  The following works ::
* Update PHPDoc
Implement feature request #8879: Added possibility to alter ini entries by php4_execute service line. php4_init now supports path to an alternate php.ini (for example in the webservers config directory)
CS
Enable bundled submodules when enabling module
Bump API version - HEAD is no longer binary compatible to 4.3 branch due to changes in globals, etc.
MFB: info in mail too
Adjusted the expected output to reflect the change in var_dump()
send comments to the default handler like done with expat, add a setcommenthandler function, which exists in expat, but isn't used by the extension.
MFB(r-1.1.2.7): fix test
pecl
move to pecl
add a package.xml file
add bzip2 extension to pecl from php5 cvs
move this extension to pecl
apply fix from bug #23539
TSRM fix
MFB(r-1.74.2.8) Bug #14369.  ftp extension allows circumvention of safe_mode restrictions.  HEAD version of this patch uses the simpler open_wrapper approach to applying safe mode restrictions.  Also allows writting to/from wrappers this way.
MFB(r-1.333.2.27) Bugfix 23654.  If subject is an array and it contains other arrays, we want to pass those subarrays through unchanged rather than attempt to convert them to string.
Allow libxml to detect the document encoding if encoding parameter passed to XML_ParserCreate_MM is null.
If there is a content body, enable lingering and disable keep alive.
Stronger validation of ob_start() parameters.
copy'n'paste failure
Added test case for bug #23650
MFB
* More PHPDoc fixes
* Adding PHPDoc
Properly timeout post requests
Don't emit Content-Length in a 304 reply Don't falsely claim HEAD method Add PHP to HTTP server string
TODO: Stated protocol connection pool
Added unlink() method to wrapper operations, routed userland unlink through wrappers, and implemented plainfiles and ftp unlink methods.
Implement userspace wrapper support for unlink method
Add friendly notice when build is really completed.
MFB. @- Updated wddx_deserialize() to take an open stream as an argument. (Andrei)
Revert the last patch. # sorry for the annoyance
Implement unlink() method in ftp wrapper ops and do some general cleanup of other code
- Removed remains of ext/fribidi (it's in PECL)
Fold 'options' parameter into wops->unlink method
MFB
missing .cvsignore
Prep for next release
MFB segfault fix
better fix bug #20641. Overflow numeric/decimal datatype on NT
Enable db<n> builds configured with --with-uniquename
Setup unlink() method in wrapper_ops structure, implement unlink in plainfiles wrapper, explicitly set method NULL in other wrappers (for now), and rewrite unlink userland function to call into wrapper_ops
Added test case for bug #23584
Added sqlite_fetch_string(), for speedy fetching of data from database cursor containing only a single column.
MFB: removing the crashbug on windows
Oops
Ensure that open(".", 0); works, otherwise bail out
fixes possible segfault in domxml_xslt_result_dump_mem
WS fix
Update TODO a little
MFB don't close random fds
emalloc -> safe_emalloc
One function  call is enough
oops
Applied the right fix for bug #23016
improve keep alive handling
add premium thttpd support
Those pieces were not intended. Partly reverted. # sorry for messing
new feature news.
Added an encoding detection option for expat XML parser.
Added a test case for bug #23581
Added test case for bug #22463
Bundle support
MFB(r-1.40.2.4): fixed bug #23016
Grr..  Who changed this file from tabs to spaces?
MFB
@- A new functions Udm_Alloc_Agent_Array and Udm_Hash32 have been added to @  mnogosearch extesion for use with mnogosearch-3.2.11 or later. - A new functions Udm_Alloc_Agent_Array and Udm_Hash32 have been added to   mnogosearch extesion for use with mnogosearch-3.2.11 or later.
'stream' parameter support in proto parser and code generation
- Add inheritance information to package inspection on 'pear package'.
new proto data type: stream
Reverting last patch (merge from sapi/apache).
Reverting my last patch because user reports it does not help solve the problem. (bug #23504)
no more VC++ compile warnings
Add missing initialization.
Silent a notice
Added missing break
Added initialisation for thread safety
Added "&euro;" support for htmlentities() and html_entity_decode()
I should have tested more carefully..
WS fix
Inheritance fix # here we  go again, sorry for the mess and thanks to edin for reverting it
more todo items
NFN
Improved html_entity_decode() so it can handle multibyte charsets and numeric entities.
MFB
Make serialize precision a configurable option.
Reverting Marcus' incomplete patch which broke the build.
Filled error_mappings[] with placeholders for actual error messages
Revert, this caused more trouble than it fixed.
Added missing object initialisation Added missing sanity checks
Removed redundant TSRMLS_FETCH's
This should be needed.
Added even better allocator codes for both expat & libxml
Possible fix for bug #23455 (patch by rrichards@digarc.com)
Infrastructure to catch warnings and throw tehm as errors autmatically
Inheritance fixes
HINFO RDATA is <label><label> not <nshort><nshort>
Bundle libxml and add compatibility layer
Improved protection against hostname attacks
unfinished work towards towards refactoring of extension_parser.php
add 'extern "C"' where needed for C++ (TODO: shouldn't this be done in the appropriate php headers and Zend macros themselves?)
stupido :(
- make sure we are running on PHP 5 - prevent warnings if no known license given
new TODO iten: specify "pass by reference" in protos
Change of roles
fix typo
improve portability
#i shouldn't do test-fiddling after 3o-clock
Find a better solution for the tests
- removed error message in dtor   (causing segfault when user doesn't free statement) - removed erroneous controls as for bug #23436
s/g/G/
Sanity check that ensures proper handling of 'E' doubles/floats as well as prevents an unlikely buffer overflow.
Added links to HTML entity resources
basename() now binary safe, testcases added
MFB (set the doc property to NULL if no parent is available (by Rob Richards))
proto fix
fixed FMR
Add test case for bug #23489.
introduce download-all command for the PEAR Installer
Allow functions in internal namespaces (for example factories)
Change tests to reflect error message changes
Modify the abstract error message so that it shows up to three methods not implemented. # The solution is generic so that we could change the number of methods shown. But the #problem is that error message here have a maximum length of 1024 chars.
Safer implementation.
Don't inherit twice what is needed only once
Real fix and a test case for bug #22008
Add me
A quick fix for bug #22008
Added missing sanity check # likely a fix for bug #23457
Added a few extra proto descriptions and made some minor corrections and comments
semicolon
proto
add an accessor for the default exception
- Indendation fix - Proto fix - Add efficient single column access function: sqlite_column()
Adjust path to bundled expat sources for Win32 build.
Add iterator interface and test
Interfaces only implement interfaces
Remove this debug line too
Extending substr_replace(). Every parameter can be mixed (string/array) also the return type. #see the test file if you need more info.
remove this, its now in bundle
new file that deals with the bundle
missing file
detect expat-dir
add expat into the bundle, the litmus test for the new system
beginnings of php5/bundle support
some improvements to the debugging macros
Add some info
Add spl extension
Allign.
emalloc -> safe_emalloc
cleanup
tests depend on ini option
Don't return table names
Check returned associative indexes
no need to comment out, it doesn't belong there '.'
UnixODBC also supports the fetch_array() and fetch_object() functions...
emalloc -> safe_emalloc
Really fix the test. # sorry for the mess..
MFB
Allow both parameter orderings
Allow to set result_type default for each query
missing entries
tempnam() creates an empty file..prevent them from going to /
Add some missing quotes. Noticed by Michael Mauch <michael.mauch@gmx.de>
CS fix
Add support for SRV and NAPTR records to dns_get_record() and dns_check_record() Feature Request #23407
emalloc -> safe_emalloc
A few fixes Uwe suggested, plus plugged a memleak and a possible overrun.
Make use of --with-exec-dir for real..
ws fix
For yaz_wait, when event=>TRUE is specified for array options, yaz_wait returns when one event occurs. This allows us to perform async operations on many databases. Use OnUpdateInt for PHP4.
MFB usage fix
- Commit the .c file too...
Reword entry per sniper
- Make them available on Windows too from other files.
improve php_url_encode
Added missing sanity check in fgetcsv()
More clean way of ignoring headers in CLI since we do not need to disable them selectively. This fixes problems for people who want to use session module in CLI.
Remove unnecessary entry
use the new TSRMLS_FETCH_FROM_CTX() macro
add TSRMLS_FETCH_CTX which allows you to map a variable to a ts context.
More tests
Reset option parsing # i swear i had them in before last commit
split parameter parsing once more: do informal queries before others #still a memleak in case of a parameter conflict
fix TSRM
Seems like a better fix..
More safe_emalloc()
WS, plus default: would prevent case SQLITE_DONE: in php_sqlite_fetch().
Enable some more functions with unbuffered queries
Add more tests
ftp wrapper enhancements
- more code moved to the appropriate php_*.php helper classes - support for different licenses using the new license classes - support for platform dependant library dependencies - coding style/whitespace changes
constructor proto change
cmdline parameter parsing improved uses license classes to write LICENSE file config.m4 and *.dsp file are only written if their platform is supported
constructor prototype changed code and documentation header and footer for constants block now generated by static class methods
better 'name' regex
php 5 constructor style and whitespace
support arrays of error messages in addition to single strings use PHP 5 style __constructor
use PHP 5 style constructor plus whitespace/coding style changes
module global variables and ini parameters now have their own generator classes
license comment headers and license files are now created by seperate classes for each license
platform specification now possible for libraries and extension
Take STREAMS_CC/STREAMS_DC declarations out of do_connect/do_pasv where they don't need to be.  Add minimalist url_stat method to ftp:// wrapper which can at least determine filesize.  Other properties set to 0 since the FTP protocol simply doesn't support exploring them.  url_stat won't actually work however until ext/standard/filestat.c is patched to allow stat wrappers.
fix compiler warning (unused variable)
Moved copyright notice to the better place.
Added a bogus copyright notice.
not interested in .libs
Make these tests actually work.
- Made 'register_long_arrays' to be "On" by default.
not a real test
Allow PHP_CHECK_LIBRARY to use same function name in checks if a check fails.
Added test case for bug #21820
Some AIX version failed to compile if this was redefined.
No idea how that character dissapeared.
MFB: safe_emalloc()
Abtract some ftp connection/negotiation steps out and add support for stream_opendir.  This allows things like opendir('ftp://ftp.foo.com/path')
whitespace changes in generated code
<![CDATA[ generates additional linefeeds? -> trim these ...
use PEAR::System instead of system() to remove directories ... plus some whitespace/indent changes :/
todo list update
MFB fix for registration
add safe_emalloc
Revert some ini settings to be hardcoded due to popular demand
config.m4 generation revisited
parse <deps> content
reorganized code generation - source file includes generated header only,   generated header includes anything else 	and is able to prepend include statements 	to files that need to be included *before* 	any php delivered header files - 'private' functions are now moved up in the   generated source file so we do not add extra 	C protos for them before use
make sure .dsp files have DOS line endings when generated on Unix
don't forget to add the function list delimiter entry ... :/
documentation generation improvements
version number and copyright year update
required ext. header files may be specified in <deps>
enable resource lookup by name
Resource handling fixed and improved: - resources may have an additional type specifier in prototypes - the 'alloc' attribute specifies whether to emalloc/efree   the resource payload in generated code or not
start to parse the <deps> tag -> support both C and C++ extensions
Project programming language may be specified in <deps> tag for now only 'c' and 'cpp' for c++ are supported
win32 fixes
MFB: &039; which is a single-quote may also come in as &39; I see no reason not to support both in html_entity_decode()
Add windows .dsp and some kludgy pre-generated headers.
Feature Request #7121. Allow overwritting of files via ftp:// wrapper. Requires context option:  $context['ftp']['overwrite'] != 0
Add vr class
I will use my brain properly next time
allow sqlite_query() to accept the query string and database resource in either order.
Added sqlite.assoc_case ini entry with 0 as the default value.
Prepare for release.
The feature is less revelant to encoding conversion indeed
Reduced leaks in userland filters
Unified all those redundant printf's
Update to latest inteface change for get_class_name
Change get_class() so that it returns qualified names for namespaced classes.
make import * fail if such classes or functions already there
Properly update the global httpd_time_now and remove php_makefile from diff
Tidy up package.xml file.
Eliminate leaks from registering plain or aggregate functions.
Add check for final properties
Check name before '::' so that it would be a namespace in zend_lookup_ns_class
refine the set_error_handler fix
Revise todo
Implement sqlite_create_function(), which allows binding of php functions by name; this is a higher performance alternative to the generic php() SQL function. (saves parsing the additional function call in the SQL and a call to zend_is_callable on each function invocation).
Remove rendundant function
typo
Update
Add test for aggregates
Implement sqlite_create_aggregate() which can be used to create aggregation functions for use in SQL statements.
Kluge, but it seems to work now in both phpize and bundled builds. Only in there until Wez fixes it for real.
Reinstating these two items due to the fact that current config.m4 detection for debug and thread-safe build does not work if sqlite is built as a standalone extension with phpize.
Erm, this works much better :)
Set appropriate flags when compiling bundled lib in thread-safe and debug modes.
Revert change to stream_copy_to_stream()
Access the struct directly here
Add a test for ctor precedence
Do not hardcode php path.
Do not make the test rely on the availability of the cat command.
Extend print_table_row so that one can specify the CSS class directly.  Add "vr" class which aligns the content to the right border.
The env-var TEST_PHP_EXECUTABLE is needed in tests
Added PHP4PI3WEB_EXPORTS in order to control exports/imports on Win32
Update to new macros
Do init CG(in_compilation) here until someone finds a better place
More things todo
Transparently decode binary encoded data. Add a test-case for that process.
Little fix for people building sqlite as a static extension
Add test for different result representations
Corrected patch by Marcus Börger <helly@php.net>.
Made phpinfo() / gd_info() indicate availability of JIS feature
fixed compilation problem in php-4.3.2dev.
MFBed Rui's patch
Let stream_copy_to_stream() accept either stream resource or filename/url string.  If filename, open the file, do the copy, then close it.
Shutdown memleaks
Improve test environment, fix 001.phpt and rename that one, also change from /tmp to dirname(__FILE__)
Add a first simple open/close test
ZTS fixes
First "real" test. If anyone is motivated to write more tests, please do so.
Patch by Marcus Börger to fix some memleaks
- Revert my symbol fix patch, and merge in Stas' fixes to Zend Engine 1.
done: persistent connections
Implement sqlite_popen(), which opens persistent connections to an sqlite database file.  (This saves the cost of sqlite reading/parsing the indices).
Update todo
Implement sqlite_unbuffered_query(), which works similarly to the mysql function with a similar name.
- MacOSX also prepends the _ before symbols in bundles
Added missing safe_mode checks.
Catch up to Moriyoshi's streams megapatch
CS cleanup + NS protection for some functions (used only in sockets.c btw)
Basic IPv4 and IPv6 loopback tests for ext/sockets
Add IPv6 support to ext/sockets
Constants for error codes
Folding markers
Add two new functions:
strtok() already made binary safe by sas nearly 2 years ago.  Ref: ext/standard/string.c(r-1.212)
Add pecl release version to phpinfo output
and one more
Add another todo
Update TODO.
Add safe_mode and open_basedir checks for the COPY SQL statement.
Update for new release
WS
NULL columns are NULL pointers
Implement sqlite_busy_timeout() which sets the retry timeout (in milliseconds) when multiple processes attempt to lock and update the database.
Segfault fixing!
Patch by Marcus Börger <helly@php.net>.
fix newline..
Really fix build
Hopefully fix build...
Add dependency to generate header
Update build files
Remove whitespace added while touching.
Touch generated files
Bundle relevant parts of sqlite 2.8.0. # sqlite has a completely non-restrictive license
Nicer error message when an invalid function name is specified.
Prep for release.
Update TODO and example. Hide phpize crap from CVS
Implement a php function so that the following SQL can be used:
touch
add missing header
touch
Implement sqlite_escape_string() function.
Implement safe_mode and open_basedir checks. Add package.xml
Add readme and todo
This commit was generated by cvs2svn to compensate for changes in r123706, which included commits to RCS files with non-trunk default branches.
Macro: php_stream_get_from_zval(php_stream *stream, zval **zstream, char *mode, int options, char **opened_path, php_stream_context *context)  Z_TYPE_PP(zstream) can be either IS_RESOURCE (An already opened stream) or IS_STRING (a path to a stream to be opened)
compiler warning fix and possible 64bit fix
Don't access what is already freed (noticed by Sascha)
Added missing sanity check
Changed stream filter factory to be capable of accepting a zval as a parameter instead of a string
fix two uninitialized reads
Nuke all sn?printf's and rely on the optimized httpd_ntoa to convert the IP to a string representation.
 - allow libtool to be a symlink. Discussed with Sascha
Merging some Premium thttpd improvements, notably
Simplify use of this header in external apps
Change to use safe_emalloc() and provide macro for now
add missing check
Added missing CVS Id tags
SKIP -> SKIPIF
Cleaner error handling.
style
Modify str_replace/str_ireplace to report how many needles were matched. (FR #8218)
Make it static
don't remove config.nice directly, so that we don't lose it on inferior systems like windows.
Speling
cygwin ships with bison 1.875b, so we need to remove that b here
Reenable dba_popen()
- Udm_Make_Excerpt has been fixed to be compatible with mnogosearch-3.2.10+
Moved a controversial entry to the proper place # maybe it's time to replace output buffering facility with the streams?
NFN
Forgot about this one :)
Made dirname() binary-safe.
strip_tags() is also binary-safe now.
Scratch off done TODOs
Add tests for strrpos/stripos, and minor fix to maintain BC for condition with empty needles/haystacks
Rewrite strrpos and strripos to be binary safe and behave the way their prototype suggests (also like their counterparts strpos and stripos) i.e.: Allow string needles rather than just characters
accept possible leaks for now to make SELECTS with both bound parameters and results again ...
proto fix
parameter count for bind stuff is different in OO interface
Export constants to userland
satisfy andi's switch fetish ;-)
Document 'const' keyword.
allow expressions within constants, so the following is possible
Make Apache 2 define SG(request_info).path_translated like Apache 1 did.
make Apache define SG(request_info).path_translted, like Apache 1 did.
Revert Harald's commit
One line fix so that it will compile
removing the *syntactical sugar* again
MFB: Forgotten _FORM -> _REQUEST change
*** empty log message ***
Added missing bit from gd2.0.12 sync.
Hopefully last fix on error reporting
Switch file_put_contents 'bool use_include_path' to 'int flags' to allow other options such as appending
Add context support to file_put_contents() and readfile(), convert readfile() to zend_parse_parameters usage, fix proto for file_put_contents()
Added context support to file()
domdocument->free() was MFHd to PHP_4_3 branch.
fixes memleaks in element->get_elements_by_tagname & document->get_elements_by_tagname
NEWS entry fixes for domxml (more readable hopefully...)
Switch some functions to use new zend_lookup_ns_class() methods. This means that they will accept both simple and fully qualified class names.
Rename zend_register_internal_class_in_ns() to a better, less filling, but with the same great taste zend_register_internal_ns_class().
make it possible to free DomHtmlDocuments as well
Remove php_memnstr (it's in ZE now).
Add zend_lookup_ns_class() function.
Move memnstr into Zend and make an alias for BC in PHP.
make it compile ....
file_set_contents -> file_put_contents
FriBidi was moved to PECL long time ago
ChangeLog update
Add context support to file_get_contents
Removed entry that is in the PHP_4_3 branch..
reorder
add markers that make this file easy to parse for external sources
Introduce support for context options 'method', 'header', 'content'
ChangeLog update
Support for ZTS
Improved zmemcheck macro so it displays the size of each memory block too.
Improved readability of zmemcheck output
Added zmemcheck macro, which may help you examine the memory blocks being handled by the memory manager.
reorder
NEWS update
ChangeLog update
Collate version handling and bump up version (noticed by Peter Neuman)
@- Added domxml_doc_create_document_fragment() and @    domxml_document_fragment_open_mem(string) method (Christian) Useful for adding and parsing (well-balanced) document fragments. - Bumped up API version number
--enable-all is not useful at all, removed from help
Better ifdef it out here too
Debug watches probably don't belong in CVS.
Syncronized bunbled GD library with gd 2.0.12
Include ldd output
dividend -> divisor
dividend -> divisor
	Added HAVE_CONFIG_H check so the phpize build method works
Add IPv6 support to stream_socket_client/server()
what? maintainer is not a valid role :)
ChangeLog update
Warning fix
User shouldn't have to initialize this pass-by-ref parameter
both these entries are bad, and were never agreed upon. assert() usage is a controversial concept at best. docref() is something quite a few of us strong disagree with.  suspending this until further discussion.
forgot to commit this.
Check that t1lib has T1_StrError
- Checks specific to some extension belong in the extension's config.m4
Introduce ZEND_ME() and ZEND_METHOD() macros. Use these for declaring class methods to avoid name collisions.
Added cmsghdr check. Now sockets extension can be built under cygwin.
Added missing sanity check, which was causing segfault.
Simplify and enhance readability.
Backout Jani's commit to resync branches
Added stream_get_transports()
Prevent php_stream_get_record from grabbing more than maxlen characters
Might as well disallow 0x0 images.
ChangeLog update
- Add some releases notes - Add myself in the maintainer list (stig)
* whip script files where they belong
* look for pearcmd.php in the right directory when run from a cvs checkout
* rename pear_unices to pear.sh and make it a pure shell script
- Better errors for T1lib. - Sanity check into imagepsextendfont(). # Patches by John Coggeshall <john@coggeshall.org>
* pear.in is renamed to pearcmd.php
* paj's last Windows install fixes
* use PHP_PEAR_* environment variables (paj)
* disable table borders in output to save width
* windows bugfix
* support both error codes and messages in the second parameter to   PEAR::isError()
Use php_error_docref.
* remove track_errors ini fiddling, was a PHP bug that should be fixed now
* initialize pkginfo with an empty provides array
MFB
Check for flex version 2.5.4
Patch from Timm Friede for when EG(active_namespace) is NULL initially.
WS & CS fix
Kludgy fix for floating point drift causing problems like range(1.0,1.5,0.1) == array(1.0,1.1,1.2,1.3,1.4);
Add some checks and avoid passing invalid data to call_user_function_ex.
Prevent entering of anything but arrays/strings in register_shutdown_func
Initialize all relevant zend_class_entry fields to avoid accidental crashes.
reorder
new domxml_elem_set_attribute_node() should have gone into NEWS, but I forgot..
- Added domxml_elem_set_attribute_node() method. (Rob Richards)
fixed mysqli_prepare_result
fixed output
- CS
Leftover.
i will not commit before 12:00 i will not commit before 12:00 i will not commit before 12:00 i will not commit before 12:00 i will not commit before 12:00 i will not commit before 12:00 i will not commit before 12:00 i will not commit before 12:00 i will not commit before 12:00 i will not commit before 12:00 i will not commit before 12:00 i will not commit before 12:00 i will not commit before 12:00 i will not commit before 12:00 i will not commit before 12:00 i will not commit before 12:00 i will not commit before 12:00 i will not commit before 12:00 i will not commit before 12:00 i will not commit before 12:00
NEWS update
ChangeLog update
Another CS fix. # Rasmus, at least try keep the style consistent..
CS fix
MFH
MFB: Check for negative precision
fixed expected output
MFB: Get rid of bogus dtors
For now only bison 1.28, 1.35 and 1.75 are working properly
- Add zend_register_internal_namespace() API function. - Add zend_register_internal_class_in_ns() API function.
- Update for new name
Simplify.
add the ability for curl_multi_info to introspect the handles.
Implement a different way to catch documentation comments.
fixes for logo guid functions
oops ... committed the wrong one
Revert portions of the doc comment patch. There should be no parser errors now.
fix logo (outline around letters)
allow class_exists() to work with namespaces too. add CLASS_IS_NAMESPACE macro
fix typo
fix parameterless get_declared_classes call
Patch for Bug #22774 by Rob Richards
Avoid having output_buffering cause this test to improperly fail.
ChangeLog update
New test for userfilters rewrite
MFB
Stas's patch on zend_execute.c (1.448 -> 1.449) resulted in a bug where the namespaced member accesses didn't work. This should hopefully correct it.
Split ZEND_NAMESPACE into user and internal namespaces. Hope this is okay with engine folks.
MFB
Added a test case for bug #22538
oops
Reverted the last patch; the problem is elsewhere..
MFB
crap removal
oops
revert due the last string.c revert
revert last commit for now
*** empty log message ***
fix VPATH builds
improve namespace name hanfling
fix get_declared_classes()
Add __NAMESPACE__ auto-constant.
make get_declared_classes() work with namespaces (based on Tal Peer's patch)
Don't need shtool
Bug #22962
Sorry Sterling, but this broke the ZTS build and I'd rather not 'ZTS fix' an April's Fool joke.
Add the landonize() and landonize_url() functions which provide a secure alternative to the sha1() and sha1_file() functions.
NEWS update
ChangeLog update
oops
Householding..
WS
Multi-purpose patch:  - The fields of zend_namespace were not completely initialized which    led to a variety of problems.  - The occurrence of class/interface/namespace definition is now    captured.  - Functions/classes/interfaces/namespaces can be preceded by doc    comments which are stored for use by extensions.
Rearranged search order for the magic file to avoid further confusions
use the correct macro - noticed by Andrei
# make derik happy
fix for 22904 @ now addslashes() do it also on cybase magic mode(moshe).
# unnecessary condition here.
cleanup
Use strncpy instead of sprintf
TS issue, noticed by Sebastian Bergmann
Ensure that the seed function has been called, even if we are used by another module's request init function.
NEWS update
ChangeLog update
- Typo and some whitespace
- Added optional parameter to openssl_sign() to specify the hashing   algorithm to use. (Patch by Scott <scott@planetscott.ca>) @- Added optional parameter to openssl_sign() to specify the hashing @  algorithm to use. (scott@planetscott.ca, Derick)
Since zend_do_begin_class_member_function_call assumes the previous opcode is FETCH_CONSTANT, swap the calls around.
Added various gdb macros to examine zval, znode, and HashTable
changed constant name
if TEST_PHP_EXECUTABLE=auto then use ./sapi/cli/php
update
more ini defaults for error message handling
cleanup
changed macro
ZTS fix.
Try to report class name of the exception
bugfix #22961 by cynic@php.net
simplify and fix
done
--+_
uncomment removal of temp file update changes from run-tests
clean up url handling with path_info handle sending a 404 if the requested file does not exist
ChangeLog update
_SERVER also should not be quoted by magic_quotes_GPC also remove an empty if statement
Improved var_dump() and debug_zval_dump() so they also show the namespace of the given object.
fix phpinfo() & php -i
use sizeof() as suggested by Andrei
- html errors should default to off (0) in CLI
Add missing initialization
CS & WS fixes
Improved bison check; now configure accepts 1.28, 1.35, and 1.75 only.
Initial support for enforcing prototype of abstract/interface method implementations
remove unused variable
update php module name to php5, not php4. apache, apache2* and cli/cgi work. sapi module maintainers should fix up their sapis, as I don't run any servers with php outside of apache.
ChangeLog update
- Add the exponent to the float modifier
fix these tests
Do the right fix..
On 64bit platforms, pointers are 64bit long..
CS
Changing parsedate to be reentrant using pure_parser (Dave)
Removed redundant aliases & CS fix.
ChangeLog update
Improved php_import_environment_variables: avoid emalloc()ing in most cases
MFB ext/com fix #22899 invoke is called twice
CS
Correcting checking of flex version (dave)
fix fetch_class buglet
handle invalid paths passed to us from iis
Backing out part of TZ change
MFB
CS fix
change to a pool-based bucket instead of a transient one.
remove flush from standard unbuffered write. people requiring a flush can turn implicit flush on. Thanks ilia for benchmarking this!
ChangeLog update
really fix
fix segfault
* Silence warning
Un-nest namespaces - now namespace X { namespace Y {} } is a parse error Also refine namespaced includes
a missing piece of news
Changing TZ to match Unix98 standard to make Tru64 happy
Eliminate TSRMLS_FETCH() calls in destroy_op_array() and zend_get_class_entry().
Eliminate TSRMLS_FETCH() calls in zend_objects_new() and zend_objects_get_address().
Leftover.
Eliminate TSRMLS_FETCH() call in php_find_gd_font().
ChangeLog update
- Temporarily fix problem with inheriting from an internal class. This might - need some rework in the future (thanks to Marcus)
Added missing initialization, which causes AP2 to crash on startup in ZTS.
* Changing to DOS line breaks.
Made "--with-pear" "--disable-all"-aware. Plus some cosmetics fixes.
MFB
Leftover.
MFB: Disable building of apache2filter (obsoleted by handler).
MFB: php_gd.dll is no longer bult and the bundled library is always used.
MFB
Eliminate some TSRMLS_FETCH() calls. Tested with Win32 build of SAPI/CGI and SAPI/CLI on Win32.
many new enhancements to run-tests that allow for testing cgi and other sapi modules via http.  see README.TESTING2 for more details several sapi tests added
use the correct flush on deactivate add some code to make debugging iis 5 cgi easier
ChangeLog update
- This is not supposed to be 'pretty' name. (ref. bug #22853)
reorder
MFB
oops...
Added test cases for new functionality
Added koi8-r, cp866, and cp1251 support for htmlentities
test + remove 4
Added missing header that prevents successful compilation.
MFHZE2
fix bug #22841
This is AUTH_TYPE in every other SAPI.
PHP_WIN32 included
changed method name
ChangeLog update
For fastcgi env vars, don't magic quote them
The environment should *never* be magic quoted.
resore namespace on shutdown - since some functions use EG() and CG() pointers
ZTS fix.
Another fix for implicit public, perhaps it was not such a good idea :I
Add new files to ZendTS.dsp. Sync list of files in Zend.dsp with ZendTS.dsp. ZTS fixes.
DEFAULT_CLASSES_H not DEFAULT_INTERFACES_H
add a standard Exception class.
Added some compiler check
ChangeLog update
export functions needed by cli
fix crash in win32 debug build
#strip rcs tags
ChangeLog update
fix segfault in file_set_contents() when the file could not successfully be opened.
Add missing initialization
updating for new list
* abort install when an extension fails to build (patch by ja at   morrdusk dot net)
This broke the xml extension, and pres2, commented out for now
ChangeLog update
protect string from CVS keyword expansionCVS: ----------------------------------------------------------------------
missing TSRMLS_FETCH
CS
Add stdlib.h too - it is needed fot strto{ld}
fix for bug #22786 ("Crash when trying to call DomAttribute's set_namespace method")
ChangeLog update
WS & CS fixes..
CS fix
WS & CS fixes
WS & CS fixes
WS & CS fixes
Better config.m4..
And this too..
Andrei forgot this..
- Keep track of starting/ending line numbers for user functions. - Store last parsed doc comment in a compiler global for future use.
Lowercase the function name when used as key in the function name. The original case is still preserved in zend_function structure.
- reenable $argc/$argv - add a comment where hardcoded defaults would go # i believe we have none for now though
Correcting example to use proper variable - NO_INTERACTION
Using of quotes around paths is a very good idea..
ChangeLog update
Sanity check for when a stream is requested to be persistent but the wrapper does not respect the flag.
Add the mode string that was used to open the stream to the meta data, as requested by Philip Olson.
Implement persistent plain file streams.
Q}
-turn html_errors on by default again -disbale clickable error messages by docref_root default to ''
get_browser() needs to use zend_is_auto_global() on _SERVER.
make phpinfo() depend on executed sapi
Cleanup.
Avoid using FILE* where possible. Tidy up handling of potential error situations for the php:// wrapper.
use new callback to overwrite ini settings # ok now lets split html_errors and phpinfo() formatting
give sapi modules the possibility to overwrite default ini settings
avoid unsigned issues.
CS fixes
* email address change
ChangeLog update
whitespace..
Win32 build fix.
PR#22672 -   User not logged under Apache2 patch provided by Andrew Bradford.
WS & CS fixes
WS & CS fixes
MFZE1
fixing my proto fix :|
proto fixes
proto fix
proto fix
more proto fixes
Be sure we get the correct version..
added the version info to be send as-is to buildtest-process
Added missing zend_mm.c file and renamed zend_object_API.c -> zend_objects_API.c
ChangeLog update
- disable html_errors per default as suggested by php.ini-<xxx> - new error format that does not point to any documentation (if either   not html_errors or no docref_root given e.g.: production boxes and default) - documentation update in php.ini-<xxx> # hope everyone is happy now # and why on earth was enabling html_errors default?
WS & CS fixes + some TSRM_FETCH() removals + pval -> zval
ChangeLog update
Added test for bug22592
lots of proto stuff
docbook fixes
thinko fix to kill warnings
docbook typo fix
make sure the function name in the proto matches the function
fix Bug #21751 - the parameter was wrong when this code was introduced
64bit fixes
fix proto
NEWS update
ChangeLog update
And this never existed in any release either..
"allow_webdav_methods" does not exist / is not needed anymore
No c++ comments
no c++ comments
No c++ comments!
Whitespace fixes.
reverting to version 1.9
remove makefile and libs.mk from package file
removing files not needed so diff -u works nicely
fix package file - note the package is called ext_soap - I suspect it will conflict with SOAP if downloaded - anyone want to comment on ideas for this...
fixes to enable module building
add support for shared library building - shout stop alan - if any objections..
ChangeLog update
Test for libgds needs libcrypt with Firebird to succeed
this is in the PHP_4_3 branch...
- Whitespace
BFN
Solaris knows nothing of "Europe/Amsterdam". Use "US/Eastern" instead.
Prevent using both --with-sybase and --with-sybase-ct in same build
hrm
Bug #21534.  Silly typo.
advertising ext_skel_ng ;)
Cleanup.
NEWS update
ChangeLog update
Initialize the namespace when registering functions. # Correct me if I'm wrong..
reverting half the patch (it is not that simple)
@ Add the file_set_contents() function, as a complement to the file_get_contents() @ function. (Sterling)
Added the type constants for imagegd2()
prevent warning
ChangeLog update
This was merged into PHP_4_3 branch..
Style fixes.
Added some interface tests
This went to 4_3 branch
fix sizeof(size_t) > sizeof(uint) issue
reverting jani's non-sense commits
NEWS update
ChangeLog update
added new profiler-files
profiler: moved profiler stuff from php_mysql.h to separate include file added port communication added xml support for file and port output
touch
64bit issue fixed
modified test to reflect change in var_dump().
Modified the test to reflect the recent change on var_dump()
Correcting int/long mismatched - 64bit issues.
fixing missed int to long with zend_parse_parameters
Print the object handle (it's useful).
64 bit corrections to parameters to OnUpdateInt Bug #20994 (Dave)
- Always use the shtool mkdir.
this is in the 4_3 branch
Clean redundant code
- Changed --with-apxs2 for apache2handler.
cs & ws fixes
ChangeLog update
fix isinf for win32
Adjustment to user filters reimplementation.  Make a bucket an object containing a resource(the real bucket) and a data element for direct operations.  Simplifies user interface and reduces number of function calls/reallocs needed.
Optimize
Cleanup
- Nuke junk
Add ability to use ::interface_name in implements
Changes for iPlanet Webserver 6
ChangeLog update
various changes for profiler
fix warnings - one left
summary for selective tests if more than one
fix possible XSS in error messages
wrong place.
fixing memory leak
NEWS update
ChangeLog update
These will be already in 4.3.x
Dedicated to Greg Beaver <greg@chiaraquartet.net>.
Added tests for interfaces and class type hinting.
OnUpdateInt -> OnUpdateLong.
Document 'final'.
Create php_version.h in the correct directory
Update 'abstract' section.
Renamed OnUpdateInt -> OnUpdateLong to prevent further misunderstandings. # Intentionally left out any 'alias' for it, this way 3rd party extension # maintainers will really NOTICE the change.
NEWS update
ChangeLog update
WS & CS fixes
WS & CS fixes
WS & CS fixes
Better fix for the memleaks (bug 19943) by Moriyoshi
abstract classes must now be declared abstract
64-bit correction to variables passed to zend_parse_parameters @64-bit correction to variables passed to zend_parse_parameters (Dave)
Require abstract classes to be explicitly declared 'abstract', in order to avoid making developers traverse the entire class/interface hierarchy before they can figure out whether a class is instantiable (ok, so it makes sense :)
Further testing on this feature should have been done...
-german+english+.
D some TBDs
added test for the memleak part from bug #19943
More cleanup of the zend_strip() function. No longer strip __LINE__, since while it may become useless it could break code where __LINE__ is passed as a function parameter.
Change opcode name
Add class type hints
ChangeLog update
Allow shared modules to be built using $(CXX)
Added test case for bug #22544.
Better identification of bundled GD library.
C++ -> C comments
Implement $obj::static_func()
- Reverted emalloc(),efree() changed for persistant connection resources
Update build instructions for Zeus web server
Add support for interfaces
- Changed malloc() and free() to emalloc() and efree()
Added missing phpinfo entry (Russian support)
ChangeLog update
Use stream locking support # needs more testing
Miscellaneous compilation warning, coding standards, build related, memory leak and segfault related fixes.
Added notes about locking functions.
Support all possible configurations and simplify includes
fix dba by fixing key_len retrieval
Added a test case for bug #22510
do not use $GLOBAL[]
typofix
If this doesn't show "3.4" there is another error
64bit long fix
64bit long fix: patch by Dave Hill
Skip test if running under safe-mode.
These are in the branch.
ws & CS
Remove legacy code
remove this from here as it belongs elsewhere
MFB (make it really W3C compatible (unlink node, when in tree...))
Remove redundant code
ChangeLog update
Credits update.
fixed bug in macro-definition
disabled output of errormessages
added profiler support
MFB: Enabled mcrypt_generic_deinit() on windows (#22520)
Compiler warning fix.
More compiler warnings fixed.
Compiler warning fix.
Added some tests for ZE2 features and their functionality.
Adding tests for ctor/dtor handling
Adding tests for abstract static methods
Adding tests for final methods
add missing strtolower
ChangeLog update
adding placeholder for the new disable_classes directive
adding disable_classes ini directive based on the newly introduced zend_disable_class function
commiting zend_disable_class patch for George: disabled classes will be replaced by dummy classes that print a warning upon instanciation
(re)check in non ZendOptimizer version of test
remove entry done already
typofix
Special case for MacosX..
fix problem in current HEAD
typo fix
*** empty log message ***
Improve infrastructure
Build-performance tweaks
- It was called _VARS, not _GLOBALS :-)
Add JIT initialization for _SERVER and _ENV (it's less important for the others, even though it should be fairly easy now too)
Add infrastructure for JIT initialization of auto globals
NEWS update
ChangeLog update
Reverted my previous commit
Ensure that all fields are initialized to NULL.
Don't shutdown() unix sockets. It causes the server end to close down/break.
Folding fixes
Add streams headers to those used for shared extensions.
ChangeLog update
New!
update credits (ilia,myself)
Expose php_stream_copy_to_stream as stream_copy_to_stream(); a high performance alternative to looping reads and writes.
Tidy up stupid signed/unsigned issues with win32 by introducing a php_socket_t typedef.
MFB config-file-scan-dir crash fix
Add this file...
New user-space functions:   . stream_socket_client() - similar to fsockopen(), but more powerful.   . stream_socket_server() - Creates a server socket.   . stream_socket_accept() - Accept a client connection.   . stream_socket_get_name() - Get local or remote name of socket.
callbacks are now supported (although there's still room for improvements)
it is still to early in the morning for coding :(
make sure that GNU extensions exist for fnmatch()
- No need to include the ssl headers elsewhere but in ext/openssl # ext/ftp doesn't use streams yet so it needs to include them.
YAZ 2.0 or later is required now.
- support for "callback" type - proto syntax errors are now passed back to the top level parser
support for passing description file name on command line
ws & CS
"on line #", not "in line #"
added "callback" type (and fixed a stupid typo)
some DTD fixes and <code> as a toplevel element for .c and .h code snippets
Implement memory mapping for win32. Could do with some rigorous testing; simple readfile() tests here appear to work.
ChangeLog update
compiler warning fixed.
fixed compiler warnings.
streams.c -> streamsfuncs.c # argh!
Update win32 build. Since msvc sucks, I had to rename ext/standard/streams.c to ext/standed/streamsfuncs.c
Move streams specific stuff from ext/standard/file.c -> ext/standard/streams.c Move win32 select implementation into win32/. Will update win32 build in a moment.
Add a generic meta data api for streams.
The basic input filtering framework is done and working nicely
Update todo slightly
- Move https:// and ftps:// wrapper registration into the openssl module. - Expose the http:// and ftp:// wrappers as PHPAPI - Remove unused variables
Another big commit (tm).
..if only all lakes were kossu..
changed from strncpy to strlcpy on request
rename macro argument so that it does not partially match the string.
- Changed maxmsglen in ifx_errormsg() back to normal 255 instead of 10
NEWS update
ChangeLog update
MFB: We know ini file scanning will never be interactive, so speed it up a bit.  Need a dynamic check for the language scanner.
add imagesavealpha wrapper (Jukka Holappa <jukkaho@mail.student.oulu.fi>,       2 Pierre-Alain Joye)
add imagesavealpha wrapper (Jukka Holappa <jukkaho@mail.student.oulu.fi>, Pierre-Alain Joye)
MFB: Get rid of a redundant syscall on non-Windows
1) Make the output of system() binary safe 2) Solved a memory leak when the return_value variable passed by reference is    not an integer in system()/exec()/passthru(). 3) Solved a bug in exec(), which would make it append to the 2nd parameter    (passed by reference) if the parameter is an array instead of overwriting it. 4) Changed the code to use the streams code, resulting in a smaller code base. 5) Various cleanups resulting in reduction of overall code base inside the file    by ~ 1/3. 6) Speed improvements of ~2.5 times compared to previous performance (based on    attached PHP script).
allow keys as array(group, name) for handler inifile
ws
make it faster
if skip param of dba_fetch is -1 stop do not restart search after last element
- Added an extra ini setting with which extra commands can be forced to   the sendmail deamon on a per-vhost base. The value in this ini setting   will override all extra commands passed as the 5th parameter to mail()   and will work in Safe Mode. @- Added an extra ini setting (mail_force_extra_paramaters) which forces @  the addition of the specified parameters to be passed as extra @  parameters to the sendmail binary. These parameters will always replace @  the value of the 5th parameter to mail(), even in safe mode. (Derick)
- Whitespace
changed to emalloc just to be safe
forgot to add these two on my last commit :(
Syntactic sugar is sweet.
changes in the past shouldn't have compiled.
ChangeLog update
Made shell_exec() use streams, this simplifies the code and in some cases makes it a little faster too.
MFH (forgot to put this fix into the 5.X tree).
NEWS update
Set fgetss() free from the length parameter
Cleanup
Get the bits right - final/private fix
Tabify
yaz_search supports query type cql
Do not redefine zend_isnan if it is already defined.
typofix
(hope) fix some win32 build errors
- Added Corne' Cornelius to CREDITS/Authors
Another win32 build fix.
(hopefully) fix the build..
- Changed IFX_VERSION to work with Major versions with more then one digit
fix bug #22324, libjdbcoci8.so is not necessarily needed..
* fixed <provides> generation, provides elements are now included for   every non-private class, function and method
* add new ZE2 tokens
Use native flock() whenever possible.
ChangeLog update
Removed unnecessary asserts
Made fgetss() binary safe too
Made strip_tags() binary safe
Initial re-implementation of userfilters after filterchain redesign by wez.  More userspace API to come.
MFB: Bunch of streams related fixes.
Added test case for bug #22367
Forgot to fix this part
Possible fix for #22259 + part 1/2 for fixing one AIX bug..
Style fix
BFN
fix quotes
(possibly) fix Win32 builds of the Apache 2 filter
fix exception handling
"key" has to be zero-delimited
Add 'final'
- code generation: resources and phpinfo logo - duplicate code elimination for prototype parsing - improved phpinfo block (incl. logo) - some input error checking - documentation generation for ini-directives, constants   and resources
Remove obsolete not on redeclaring protected members.
Leftover.
Initial documentation of namespace {}.
no c++ comments
Always use the libtool which is build in the top_builddir.
fix compile warning
ChangeLog update
ws fix
hopefully a fix for 19919
Extra paranoia checks if dn_skipname/dn_expand exist or not
Move abstract inheritance logic to the right spot
* upgrading XML_Parser to 1.0.1
Added missing headers and $Id$ tags.
New test which currently fails
These both are experimental still. (there has been a note in config.m4 all the time but these marker files were missing)
Style
NEWS update
ChangeLog update
Dropped optimization # It is impossible to combine skip=-1 searches with firstkey/nextkey results
INI files are case insensitive
Revent previous patch, adding of file_write_content() was premature.
int/long change.
Remove testcode
@Added dba handler inifiles to support ini files. (Marcus)
additional speedup for array_shift(). No need to rehash if the removed element's key is not scalar and elements with scalar keys are already well numbered (sequentially from 0) for some reason. This is the case if the leading elements have no scalar indexes.
rehash only in case something is changed. #lowers the execution time in half on my machine on array with 1000 elements #with nonscalar keys. Maybe it can be optimized further.
removed some comments
Add xbithack support to apache2handler SAPI.
ChangeLog update
Add comment about thread-safety of gethostbyname on win32. Set the correct path to the win32 config.h file in the .dsp file.
MFB
MFB
ZTS fixes
ChangeLog update
this tiny change adds the location of apache includes and libraries that are installed when you use the Apache Windows Installer (C:\Program Files\Apache Group\Apache\*).  With this patch, a windows developer who has used the Apache Windows Installer should be able to compile the Apache sapi module without any modifications to his/her installed tree.  It should have no effect whatsoever on anyone else.
An input filter might not simply strip stuff, it might also turn things into entities or use some other mechanism which causes the filtered data to be longer than the original data.  Ergo, pass in the address of the buffer instead so the filter is free to reallocate it.
Remove C++-style comment.  (Breaks Sun Forte compiler.)
Reduce unnecessary filter applications when stream is (read|write) only
Allow namespaces to have a number of parts. I.e., now you can do: namespace foo { 	function abc() {} } ... namespace foo { 	functio def() {} }
Clean up apache2handler SAPI.
put constants into C output do not limit int constants to numbers, C #defines are ok as strings foobar(void) needs special treatment in code generation
style
- Also add the optional raw output parameter to md5_file and sha1_file.
This is added in 4.3.2
update
- No need to add the \0 ourselves, the estrndup in STRINGL takes care of   that for us.
update
generally urlencode parameters
VCWD_LSTAT is not available on win32/netware
NEWS update
ChangeLog update
Revert accidental commit.
consistent with the used style
Add folding markers and editor directive blocks.
Input Filter support.  See README.input_filter for details. @- Input Filter support added. See  README.input_filter. (Rasmus)
MFB
prevent xdebug from crashing
code for the special functions MINIT, MSHUTDOWN, RINIT, RSHUTDOWN, MINFO and for private internal C helper functions may now be embedded into the XML specification
typo..
News about the ZE stream thing
test specifications for MINIT and friends
<code> inside <function> was supported but missing from the DTD, added "role" attribute to support "internal" functions like MINIT and stuff, "private" C functions not to be published as PHP functions and "public" implemenations of PHP functions
some improvements
Microsoft Developer Studio project file (.dsp) generation added
next generation ext_skel script - initial checkin
- Revert latest commit
ws/style fixes
scandir -> php_scandir, alphasort -> php_alphasort
ws fixes + missing $Id$ tags, headers added
Updated IFX_VERSION entry to work with new Version output of ESQL/C @- Updated IFX_VERSION entry to work with new Version output of ESQL/C (Corne')
cleanup, documentation belongs elsewhere
NEWS update
ChangeLog update
Added string.strip_tags filter.
Revived convert filter codes
Remove a stray COM reference.
fileno() needs a FILE * here, and at least on FreeBSD with gcc-2.95.3 it is unable to figure out that this is indeed a FILE * and hence it won't compile without this cast.
- wrong use of sizeof(char) - use define for block size - a bit faster
coding style
avoiding problems
BFN
- Added new parameter to sha1() and md5() which return the digest as   binary data. (Original patch by Michael Bretterklieber <mbretter@jawa.at>) - Added test cases for sha1() and md5() based on the testvectors in RFC 1321   and RFC 3174. @- Added new parameter to sha1() and md5() which return the digest as @  binary data. (Michael Bretterklieber <mbretter@jawa.at>, Derick)
Added description for the hand-made finite state machine.
- Add check for proc_open() being available
Refactor new-session-id code
Remember whether to send a cookie, so that we send out the correct session id.  Also improve check for active session
add session_regenerate_id()
Avoid using a C++ reserved word
Commit missing stuff
Implement com_create_guid(). Add a special case for RETVAL_VARIANT when a variant is of type VT_DISPATCH but has a NULL dispatch pointer. This kind of variant is returned by the WindowsInstaller automation interface.
Implement simple stream support in the ZE scanners.
added new function mysqli_stmt_store_result
test for mysqli_stmt_store_result
Implement com_indexed_prop_set() which allows setting of array-like indexed properties on COM objects. It is expected that this function will be transient, waiting for engine-level and then rpc-level support to be implemented so that this can be integrated more completely. I'm committing this now so that others can help develop the msi installer scripts that require this feature.
Introduce //filter target to php: wrapper to allow inline application of filters during fopen() style opperations
style polizei
getpriority() and setpriority() are in libc..
nice() is part of libc, use AC_CHECK_FUNCS instead
New function news.
Added pcntl_setpriority & pcntl_getpriority(). These functions can be used to fetch and alter the priority of a process.
TSRMLS!
ChangeLog update
Add basic test of read filters and read filter chain.
By popular demand nice() is renamed to proc_nice(). A better error message for proc_nice() failure.
Implement new filter API, stage 1. This breaks user-space filters (for the time being), and those weird convert.* filters in ext/standard/filters.c
Added nice() function, which allows changing of priority for the current process.
new test (class which extends mysqli. currently this test fails :( )
removed duplicate code
fixed some leaks when mysql_close will be called before all stmts are freed.
additional tests for non freed objects
MFB: Sanity check.
Update
test for mysql_fetch_row (oo-style)
Whitespace & minor renames
whitespace
Improve handling of static member variables
Win32 build improvements
More Win32 build improvements
Improve Win32 build performance
added close method/alias for result object (for compatibility with statement and link objects)
test for OO-Implementation (bind_result)
you know it's time to get away from the keyboard when you do this.
- Style polizei
- Cleaned this mess a bit:   . Centralized the functions sunrise/sunset to php_sunrise_sunset     to lessen duplicate code.   . Made wrapper function php_do_date_sunrise_sunset() to lessen     duplicate code.   . Coding style fixes.   . renamed sunfuncs.h -> php_sunfuncs.h
- These results were obviously got with TZ=GMT # also prefixed the test results with the tested option # so it's easier to see which one fails..
Assuming the results were created in system with Asia/Jerusalem as TZ
fix it the right way
override precision ini setting
prevent possible crash if used in combo with mod_gzip fix command line
If you pass NULL, you do not get a NULL value, make sure it is.
- Let's be consistent with these..
NEWS update
ChangeLog update
Move some of the streams header into supplementary files
bring up to date with change in run-tests
Some additional sanity.
Add the sunfuncs to the .dsp file for Moshe.
Update win32 project for streams juggling.
Remove unused vars
@ new idate() function. @ new date_sunrise() function. @ new date_sunset() function. #since i have no premission updating the win32 project file, i'm sending patch on the list.
Move streams files around a bit, to ease maintenance. I will update the win32 .dsp in a moment.
fixed output
Make EG(This) and EG(scope) available to internal methods
Revert patches - they weren't ready yet!
fixed compiler warning
Reverted lld -> lld patch and added explanation as to why it should not be done.
tested patch from Zeev (fixes oo-bug in ext/mysqli)
Moved longlong conversion to a macro.
better skip condition.
Remove bogus test. Append mode always causes written data to go to the end of the file, regardless of the current seek position.
Integrate Shanes patch that allows specifying the cwd and environment for the child process created by proc_open().
test for mysqli_prepare_result
add support for ::foo syntax meaning "global one"
remove debug prints
test for mysqli_stmt_affected_rows (delete command)
added new function mysqli_stmt_affected_rows added bigint support for mysqli_affected_rows fixed memleak in mysqli_prepare (stmt->is_null) fixed return type for mysqli_connect
ZTS fixes
namespace patch - static variable access
Namespace patch. Big changes: 1. Nested classes are gone. 2. New syntax for namespaces: namespace foo { 	class X { ... } 	function bar { ... } 	var x = 1; 	const ZZ = 2; } 3. Namespaced symbol access: $x = new foo::X; - etc. For now, namespaces are case insensitive, just like classes. Also, there can be no global class and namespace with the same name (to avoid ambiguities in :: resolution).
A add much more useful select(2) implementation than is provided by windows sockets.  The winsock implementation will only work with sockets; our implementation works with sockets and file descriptors. By association, stream_select() will now operate correctly with files, pipes and sockets.
ChangeLog update
fix error msg typo
- Allow long option names - Update CLI's manpage
New feature news.
Added feature #19645 (ini parser can now handle quoted multi-line values).
Proper lib detection.
If a test does not have any data after 60 seconds of waiting, assume that it died a horrible death and kill it. This is useful on windows when a message box is popped-up during an automated test-run.
Add optional signal parameter to proc_terminate.
Add proc_terminate() function to forcibly kill off a process created with proc_open().
added skipif section (innodb-support)
fix parameter string (-R & -H)
Added test case for bug #22231
Add .cvsignore for tests.
ChangeLog update
Allow mysqli to be built when imap (c-client) is used.
CS fixes.
test for bind_result with show
a little bit slower but somewhat tricky and more flexible and it does not allocate static buffers anymore
CS fixes.
fixed compiler warning
fixed a bug in mysqli_fetch removed c++ comment (thx to Jani :) fixed compiler warning
Missing portion of the previous patch.
bind_result fix
fixed a bug in prepare/bind
MFB
init current_execute_data befor we start executing
ups
add really nice dump_bt function for debugging in gdb
ChangeLog update
- Don't add libcrypt if the crypt() function is provided already.   (by libc, like in HP-UX)
MFB(r-1.68.2.5) Bug 22052
pass tsrmls instead of fetching it always
Bug #22059. ftp_chdir() causes segfault.  efree(ftp->pwd) was being called without knowing for certain that ftp->pwd actually pointed anywhere.
fix non FCGI build
Added test case for bug #22187.
Modified fix for bug #22187 so that it does not affect handling of numbers represented in scientific notation.
Added test for those different crypt() methods. Hopefully I got the results right.
include file for test
There is *absolutely no* definitive way to know if argv0 is the actual php script, or if it is the beginning of a query string. Additionaly, passing parameters on the command line is not part of CGI spec, and is not required by either Apache or IIS.  So I have removed that code altogether, and done some further cleanup.  Also fix pre4.3 behaviour if fix_pathinfo=0. I've tested with IIS and Apache 1.3.27 on w2k and RH 7.3.
Another IS_SLASH fix.
A probable cure for many getcwd/relative include related problems for win32.
PAD() macro didn't increase the buffer size resulting in loss of the padding.
Use my_ulonglong instead of unsigned long long to make msvc++ happy.
change history
MFB PHP_4_3
Adding missing .cvsignore
Simplified the mode validation code & added support for read+write mode to 'x' mode.
Added missing header needed for rpc_error().
Clarify error message.
Initial windows project file
Added 'x' mode for fopen() used on local files. This mode will create a new file only if a file does not already exist (O_CREAT|O_EXCL).
Potential fixes for #21809 and #22099.
Use FILE*-less implementation for php://(stdin|stdout|stderr)
Moving away from ANSI stdio for plain files.
Avoid problems with chunk_size and auto_detect_line_endings.
cli should be allowed to have the chroot() function.
Whitespace-fix these goto labels.
Update installer so that no extensions are enabled by default.
removed warnings (unused vars)
- added more missing strcmp()
Added HAVE_APACHE define.
ws fix
include limits.h for portability
portability work
ChangeLog update
 new tests
added new function int mysql_get_server_version this function is available since libmysql change set 1.1450 (2002-02-13)
changed function entries for statements
    - trims +100 lines of code from spprintf.c     - introduces an overflow detection in STR_TO_DEC     - eliminates dead code (e.g. assert(foo); if (foo) {..})     - removes unused macros from the original code     - simplifies code (e.g. cc was completely dropped)     - improves run-time performance
Removed zend_get_module(), this function is not used by anything and more importantly. it does not work. It tries to find data based on numeric keys in hash table using string keys.
- Let's add the config.m4 file too :-)
added missing entry
added new tests
removed function mysql_num_warnings (libmysql change).
"Generate" the man page so that it gets correct version always.
Man page is added in 4.3.1, moved this entry to branch
- Added the man page installation
news news news..
ChangeLog update
adding a few tests
initial upload
supply mandir to makefile
New function news.
Added strpbrk(), which is essentially a wrapper around C's strpbrk function that allows searching through a string for a character list.
size matters not.
8 + 20 + 1 + 1 = 30
Make that clear
Document -H added by Ilia
speed up
Update time
initial checkin of the apache2 SAPI using a handler instead of filters. TBD: src highlighting      better post handling
Added -H option to CLI binary. This option can be used to hide any arguments including the script name passed to the CLI binary.
Improve parser handling of 'abstract'
- There's no point in allowing using both --with-readline and --with-libedit   the same time. Prefer --with-readline. - Use PHP_ADD_LIBRARY when there is no path available.
moved entry to branch NEWS
move check to proper place
Detect whether BUFFs contain a fd element. IBM is hiding the actual descriptor behind a void *, so we just disable this for IBM servers
ChangeLog update
Bug #20426. Convert SMALLDATETIME correct
* clean up so Jani is not so confused
Add "log to stdout" feature
clean up source and improve hashing for implicitly created objects (aka return values)
improved reverse lookup of ProgID based on an IDispatch pointer
update regarding session.save_path
support setting the filemode using session.save_path
use appropiate prefixes in the ps_module structure so we don't clash with syscalls
fix news entry per for file() parameter..
Blah
krhm..
fix rpc_error call
a bunch of fixes
s/com/skeleton/ is not always a good idea
byref really means that we want the zval...
dot dot dot..
Jani happification
New function # "deprecate me!"
Removed unnecessary code
MFB: disable output buffering
Implement com_describe
- Updated libtool to 1.4.3 which has test for the sed problem..
Centralize class initialization
Correct the spelling of 'supported'.
* update PEAR::isError phpdoc
* PEAR::isError accepts second parameter that will be matched against   the error code.  PEAR::isError($obj, FOO) will return true if $obj   is an error object, and $obj->getCode() returns FOO.
* the "a" in "pear" is "application" now
Error reporting clean up
- Treat $this->foo inside class X as an implicit 'public $foo' if X::$foo   is not explicitly declared - Forbid multiple declaration of the same variable
Newly created objects should use a separate function_table from the global class entry table. For objects instantiated via new, make sure that intern->function_table uses the newly created table when the class is registered. For generic per-object hashing, copy the ce->function_table into intern->function_table.
Error reporting leaks and cleanup
whitespace
Add missing destructors
update static constants too
Restore missing check
Add additional optional parameter to openssl_pkcs7_encrypt to specify the cipher.  The cipher can be one of the constants listed below.
Add ability to reference self:: and parent:: in constant initializers (bug #21849)
Remove redundant code
ChangeLog update
proto fixes
some win32 fixes by Kai
style, ws
Some compilers puke on these..
fix a memleak
ZTS fix
We move, fix, change or add stuff
fix for #17928
Add get_class_name handler so that the current var_dump implementation does not segfault. Add a generic rpc_object_from_data() function for generating rpc objects from C code (as discussed with Harald).
use SUCCESS/FAILURE instead of 0/-1
New features.
Added feature request #9173 (added stream_get_line(), this function will read either the specified number of bytes or until the ending string is found).
order, style..
Added feature request #14097 (option allowing file() command not to include line endings in it's output. As well as another option, which allows blank lines to be excluded from the output).
break: First one not needed, second missing.
news entry for previous commit
Let this compile even if PCRE is compiled as shared in same build.
Kill some warnings # the remainig is not easy to solve: float_var = float_cast(extpression) # This cannot be fixed by simply casting again to float because some # compilers may ignore the double casting.
XBM for win
shane added is_executable() for windows last night
reverting to version 1.5; shane added is_executable() for windows last night
newlines changed
getopt() is currently not available on Windows
there are no symlinks on Windows
is_executable() does not exist on Windows
die() to skip second message
MSVC's mktime() does not examine the existence of a daylight-saving-time zone
Windows doesn't know timezone CET
skip for Windows (does not support dates prior to midnight, January 1, 1970)
Windows does not support dates prior to midnight, January 1, 1970
test for mktime()
- Whitespace fixes
cleanup variable initializations
MFB
Bug #21707 problem with real
Syncronize with branch
is_executable() now available on win32 stats can now get information provided by access()
ChangeLog update
whitespace changes
fixed zend_parse_method_param
adding a note.
making it compilable under ZE2 (PHP5). NOTE : Even it is compilable there is an compilation warning because of that handle_function_call is deprecated in ZE2 (#if 0). Look like there will is a problem with __call().
Style corrections See also: Stig's intro Version info
style & ws fixes
Add gdImageEllipse Replace gdImageFilledEllipse by a new function (backported from the new phpgd) the new gdImageFilledEllipse fix bug bug #22103 (ellipse part)
zend_config.h (and its Win32 version) is already included by zend.h
ChangeLog update
The string.h is already avaliable through zend.h, so the manual inclusion is not necessary.
chunk_size should always be reduced to 1 while scanning response headers to avoid buffering the actual stream prior to any read calls.
Added missing definitions.
Adding some text and some backslashes which are needed sometimes somewhere...
Define STDIN/OUT/ERR for -B -R -F -E (works as expected). Enable exit in same switches.
New function news.
Added str_split() function. This function can be used to break down a string into an array.
Added get_browser() function. This function can be used to fetch the headers sent by the server when a request is made for a given URL.
No more maximum line size for -R and -F
Added a check to ensure that string.h is avaliable before trying to use it.
Added missing header.
Improve PPP handling of properties
Better fix
MFB
ChangeLog update
adding news about moved ext
Moving fribidi to PECL
bc_raise() can return a scale lower than that passed into it.  While most other bcmath calls won't, it's safest to do a quick check that we're only reducing n_scale, not increasing it.
Rewrite/add some stuff
fix the test
Added testcase for bug #22088
NEWS update
ChangeLog update
Add PPP method tests
New function news.
Added array_walk_recursive() function that can apply array_walk recursively to an array.
- read_property cleanup - Implement unset/isset/empty for PPP
Rework static class properties - now supports access restrictions
Add quick_exists()
Add PPP support for arrays
Credits for iconv
Mark activescript sapi as experimental, so that the installer can categorize it appropriately.
Check in the prototype PHP installer for win32.
ChangeLog update
# RTFM .. and then it goes better :-)
First step - abrief version. @Added man page for CLI version of PHP. (marcus) # I was also thinking about an author section with # The PHP Group, Edin Kadribasic, Marcus Boerger, Rasmus Lerdorf, # Stig Bakken and Zeev Suraski beeing mentioned. Group of corse and # the rest is listed in php_cli.c.
* replace @bin_dir@ in pear.bat
- Please follow coding standards (this isn't java :)
fix ZTS build
remove it then....this forces to put work in man page ...
Bug#13551 bcmath functions should not apply scale to arguments, only to result
Missing update
Updates reflecting infrastructure changes
Reimplement PPP properties
- fixed some prototypes and folding
- fixed prototype of pdf_get_buffer()
NEWS ordering..
NEWS update
ChangeLog update
proto-fix
Make putenv() return a proper error rather then NULL when invalid argument is passed.
Trivial test adjustment
zend_get_parameters_* => zend_parse_parameters
Correct description of the problem
Really fixed proto.
Oops! wrong commit. Reverting...
Modified the test so it will be skipped under ZE1. Thanks Kai
Added missing "?>"
Make these configure messages differ from the regular apache configure
Added test case for bug #21961
This cause some warning/error in AIX
- Make VIM highlighting happy
Test that libgds actually exists.
ws
Build fix.
Added test for bug #21998
* 1.1 release notes update * added some <provides> elements
* start using the source tokenizer
NEWS update
ChangeLog update
* substitute @php_dir@ in pear.in
- Added -B, -F, -R, -E for line by line std in processing. - Added some error messages. - Added more -h info. @Added command line parameters -B, -F, -R and -E which allow to process @stdin line by line (See php -h for more). (marcus) #This allows to simply complex command line constructs...
extend the parameter parsing API by two functions for parsing method parameters with automatic detection if the function was called as such or as a class method (with a valid this ptr). if called as a function the first parameter has to be the object it is operating on, if called as a method this is used.
Gave the user the ability to specify encoding of the request. Patch by jens@mermaidconsulting.dk.
whitespace
Core rearrangements - move Zend Objects specific code to their specific implementation file
- new xbm support @Added XBM support for bundled gd library. (marcus)
NEWS update
ChangeLog update
avoid warnings
Bundled version has XBM support as well as external. # Now fix the shit behind it...
Show if XPM support is available & Set availability bit only when available.
@Added XBM support for GetImageSize(). (helly)
Change DBM detection order
- unify configure mechanisms (include file handling) - fix dbm - allow dbm to be based on gdbm
Make it easier to diff results of several runs in one day.
Correct required mcrypt version
* displayLine() is deprecated, so better use displayError() here.
Don't assume that objects have class entries (in the ZE1 sense) when determining the class name. Additionally, don't assume that objects have a properties hash either.
- Added some missing CVS $Id$ tags, headers and footers.
ChangeLog update
Require 2.5.6+ MFB: Be -ltdl aware
Shared dba requires at least db-3.3
Rename script. Add check for CLI version
Unbreak $Id tag
Moved these entries to PHP_4_3 branch NEWS (for 4.3.1)
No c++ comments..
Remove obsolete warning
Add ftp_raw() to send raw command strings to an FTP server.
Use platform specific extension.
Dtandard visual studio project for ext_skel
Wrapper script to use ext_skel on Win32
ChangeLog update
Revert this part, the new one adds more problems than it solves.
Unify str_replace and str_ireplace using INTERNAL_FUNCTION_PARAM_PASSTHRU -- reduce codebase/maintenance complexity
fix bug: #21945 (zts build failed)
Allow to link against chosen modules correctly
Feature Request # 5919 - Addition of str_ireplace() Also removed deprecated BM str replace menthod Also rewrote php_str_to_str to use more processor/memory efficient method (ilia)
fix non-zts build for wez
Removed pointless checks.
ChangeLog update
* Windows fix (thanks to paj)
Added sanity checks.
Added myself to the maintainers list.
Add additional stage to post-session cleanup. We need separate cleanup stage because of the following problem: Suppose we destroy class X, which destroys function table, and in function table we have function foo() that has static $bar. Now if object of class X was assigned to $bar, its destructor will be called and will fail since X's function table is in mid-destruction. So we want first of all to clean up all data and then move to tables destruction. Note that only run-time accessed data need to be cleaned up, pre-defined data can not contain objects and thus are not probelmatic. # Looks like we are having a lots of pain in the various parts of the body # because of the destructors...
Be more consistent with the sapi internal name.
Enable embedded code using sapi/embed to use dl().
Code rearrangements
extra safety
fix memory leak
NEWS police is back.
ChangeLog update
MFPHP_4_3
Added part of strpos commit that never made it in for some reason.
Call correct module startup function (not a hard coded one) allowing startup override.
Get rid of php4ts.dsw - replaced by php5ts.dsw
Expose php_embed_module struct (and make Wez happy).
Allow methods in parent classes to call protected methods in derived classes
fix some typos
fix typo
- fix this: els is optional but may not be empty
- Removed unnecessary makedist.ZendEngine2 - Modified makedist to use php5 CVS module (alias)
Added scandir() function, which allows quick retrieval of all files & directories within the specified path and sort the output in alphabetical or reverse alphabetical order.
NEWS update
ChangeLog update
- Cleaned up and made less error-prone - Changed --enable-mime-magic -> --with-mime-magic[=FILE] to allow   specifying of the file during configure.
2nd part of Sebastian's patch.
Adding new files to the project. # First half of Sebastian's patch, Ilia will commit the second part shortly
- fix "--without-flatfile" - simplify Berkley DB verison check
Moved the scandir code into it's own files so that it can be used by other OSes where libc does not have a native scandir() implementation.
This fixes "warning C4101: 'charsetid' : unreferenced local variable" on VC6
Removed pointless checks.
Replace MAKE_VAR opcode with special 'data' opcode This opcode is not executeable but only holds data for opcodes that need more than two arguments (presently only ASSIGN_OBJ and the ilk but in the future also ASSIGN_DIM)
- fixed several bugs in hw_document_xx() functions. The macro to access   the document was the same as for a link to the sever.
Feature Request #21748.  Added function ftp_chmod().
ChangeLog update
Updated test so it describes the problem more clearly.
* whoops, heritage shows through :)
Replace snprintf() call using zend_error's capabilities
Simplify
normalize CGI variables to the CGI spec PATH_INFO and PATH_TRANSLATED are correct now SCRIPT_FILENAME now contains the full path to the script
ChangeLog update
Feature Request #21784  Added: imagecolorallocatealpha (pollita@php.net,jasper@pointless.net)
fix bug 21261     putenv on some platforms requires we provide the memory     cleanup env parsing logic fix bug 21367     missed optargs in a previous patch
The builtin version was always used even if configured otherwise.
Bug #21751: Part one never let this happen again...
Removed unneeded code.
- mime file parser messages only with mime_magic.debug=On (default: off) - fix docref URL in startup error messages - show status in php info, either "enabled" or "..., disabled"
preparations for making magic file parser silent
suggesting a plain magic file insteat of a mime one is a bad idea
ChangeLog update
* not a real test, just a script for displaying OS_Guess output
* add glibc version detection for Linux
* typo
Remove ugly netware hacks from the code
Removed unnecessary checks.
Patch for bug #21844
zend_error -> php_error_docref.
Resolving problem on OSF1 and probably other 64 bit platforms. Thanks for the feedback of Magnus (novell kiruna se).
Adding cast.
ws fixes
MFB, removed unused GET/POST entries
zend_error() -> php_error_docref().
ChangeLog update
Added test case for bug21849.phpt
TODO for PHP 5.
Really fixed the mb issue of mb_ereg_replace() # my previous patch is somewhat wrong
Changed the test's file name as per the convention
Renamed the test name as per the convension
Test name formatting
Made the test's name more descriptive
Removed pointless checks
Added test case for bug #21732
Let the scope propagate to internal functions
remove this stupid highlight which causes trouble.
MFB
Correct default path
Added test for bug: #21513
ChangeLog update
Removed non-needed code.
typo
adding missing zlib.lib and path to bindlib
some small refinements for get_class_*
ChangeLog update
Oops! wrong patch. Reverted.
Added test case for bug #21800
increasing readability.
getParameters -> zend_get_parameters_ex.
ARG_COUNT(ht) -> ZEND_NUM_ARGS().
* PEAR_Error now supports exceptions when using Zend Engine 2.  Set the   error mode to PEAR_ERROR_EXCEPTION to make PEAR_Error throw itself   as an exception (invoke PEAR errors with raiseError() or throwError()   just like before).
add sapi_get_target_uid/_gid for obtaining information about the non-privileged user the web server is running as.  this is useful for creating shared memory segments which need to be accessed by the child processes/threads.
Added missing warning about experimental nature of sapi/embed.
Remove the (c), in the future, can we add PHP Licence terms for the new functions ?
Add credits to my functions (thx for the advice Wez&Ilia :)
ChangeLog update
fix by phanto to the cloning
quota function fixes. Thanks Wez.
Changed php_error to php_error_docref. Removed pointless memory allocation checks. Memory leak fix inside quota functions.
Restore php_error -> php_error_docref patch.
test commit
- Add credits for Magnus
Add test for png.h
Updated for Msession 1.2. Includes new APIs
ChangeLog update
ZTS fix.
relabel
Restore for now old statics behaviour (so that indirect $$var references would work again). Comprehensive fix will follow later.
Improved the patched part to prevent further potential bugs
fixed typos
- Moved to http://qa.php.net/write-test.php
ini patch to allow 'entry[] = value' entries
ini patch to allow 'entry[] = value' entries
ZTS fixes.
ZTS fixes.
ChangeLog update
Changed php_error to php_error_docref. Make mcal compile with ZE2.
Changed php_error to php_error_docref.
s/4.4/5.0
Changed php_error to php_error_docref.
Removed pointless memory allocation checks.
Removed pointless memory allocation checks.
Removed pointless memory allocation checks.
Changed php_error to php_error_docref.
Removed pointless memory allocation checks. Changed php_error to php_error_docref.
Changed php_error to php_error_docref.
Removed pointless memory allocation checks.
Added test case for bug #21094
Removed pointless memory allocation checks.
Removed pointless memory allocation checks.
WS
Changed php_error to php_error_docref.
correct my fault here and documnet the sense of the test
Added test case for bug #21730
Additional memory allocation fixes by Marcus Börger.
Tons of WS fixes
Removed the no longer needed memory allocation checks.
Renamed get_memory_usage() to memory_get_usage() (per Andi's advice) This doesn't break any BC.
- Skip test if the function to test is not available #- Perhaps we need some infrastructure for this...
ChangeLog update
export zend_objects_destroy_object() static inline was meaningless anyways as the function was only used as a callback handler and was never called directly
Added missing test result.
Bump year.
WS fix
Removed pointless checks of array_init() return value.
make std_object_handlers struct available for shared modules
Moved to C style comments. Last time forgot to convert the header files.
fix jp2 detection and add testfile
Syncronize bundled GD library with latest GD (2.0.11).
Removed pointless checks around array_init().
Significant speed enhancements. I was underestimating the power of recent CPUs :)
Move ZEND_ENGINE_2 check to where it is defined.
NEWS update
ChangeLog update
move the ZE2 check into internal_functions_win32.c
revert previous commit
unbreak the build
Finally fixed a qp encoder bug that line break characters that appear exactly at the end of the chunk lost in the output. # I bet no more problems will occur in quoted-printable encoder. # But I recognised the counterpart is still buggy due to RFC2045-incompliance.
- JPEG 2000 support
- corrected error in file detection for very small files - JPEG 2000 support, mostly Adam Wright <adam@elysium.ltd.uk> @Enhanced jpeg 2000 support for GetImageSize(). (marcus, Adam Wright)
change library name
update skeleton
fix path to config.w32.h
add COM
prevent HEAD + ZE1 builds and add COM
for those who prefer to have com as a shared lib
make layers loadable as self-sustaining php extension which registeres itself in the rpc framework.
typo corrected
Adding in test ability for WIndows to fetch_objects
Add INI setting session.hash_bits_per_character which enables developers to choose how session ids are represented, regardless of the hash algorithm.
ChangeLog update
Added some missing modules. Removed some that are built in or moved to ext/rpc.
scrap STANDARD_SAPI_MODULE_PROPERTIES; it is causing more harm than good
- Revert int -> unsigned int change for str.len
More build fixes.
Revert commit which turned the lengths of strings into zend_uint.
Relieve scripts of the burden of ensuring that all pipes are closed prior to calling proc_close(). Implement proc_get_status(resource $process) which returns an array of information about a process created with proc_open(). The information includes: array( 	"command" => string "name of the command", 	"pid" => long process identifier, 	"running" => bool true if the process is still running 	"exitcode" => long exitcode if the process exited 	"signaled" => bool true if the process was signaled 	"termsig" => long signal number if signaled 	"stopped" => bool true if the process is stopped 	"stopsig" => long signal number if stopped );
Define PHP_CAN_SUPPORT_PROC_OPEN.
Add proc_open.c to project.
- Move proc_open code to a source file of it's own. - Tidy up that netware mess by performing a configure check which will   define the symbol PHP_CAN_SUPPORT_PROC_OPEN if PHP can support proc_open. - Protected the proc_open specific code with #ifdef PHP_CAN_SUPPORT_PROC_OPEN   so that user-space scripts can use function_exists and react accordingly.
Build fixes.
Typo fixes.
Various corrections.
Typo corrections.
whitespace
whitespace
Kill compile warning.
Newer parameter parsing API.
Getting rid of the old API parsing code.
Changed php_error to php_error_docref. Made use of the more recent parameter parsing API, zend_get_parameters*.
Removed pointless checks around array_init() & ZE memory allocation macros. Changed php_error to php_error_docref. Dropped getParam* parameter parsing API in favor of zend_get_parameters*.
ChangeLog update
This patch allows cpdf to be compiled in conjunction with ncurses, which was not possible before due to conflicting defines.
- Change "is" to "instanceof" as it explains better what the operator means. - "is_a" was also appropriate but ugly.
Porting of patch applied to ext/xmlrpc.
Made the code use php_error_docref(). Removed pointless checks around array_init() and emalloc(). Switched to zend_get_parameters_ex() argument parsing API.
Migrated to C style comments.
Changed getParameters() to zend_get_parameters_ex().
One more typo.
Appended my name to the list of authors
Test update for new feature
Switched from old getParse* argument parsing API to a more recent zend_get_parameters*.
added function get_memory_usage(). available only when PHP is compiled with --enable-memory-limit
Changed php_error to php_error_docref. Got rid off the ancient getParameters* parameter parsing API.
Added a new option "force-encode-first" to the quoted-printable encoder as per Wez's request. If enabled, the encoder forcefully does qp tranformation on every first character of lines in incoming stream.
Changed php_error() to php_error_docref(). Made pdfdoc retrieval a macro.
Made php_quot_print_decode() RFC2045-compliant # this function is only used in iconv extension and the corresponding # userland function doesn't use it, so I don't see any BC issue here.
fix memory leaks and key size
MFB: bind_textdomain_codeset() availability on windows
MFZE2
s/gd/gd2
fix warning
Make add_property_ functions work via write_property handler
ws
Reverting previous patch.
Changed php_error to php_error_docref(). Removed pointless checks around array_init().
ChangeLog update
false should be VT_FALSE
added array_combine(). Creates an array by using the elements of the first parameter as keys and the elements of the second as correspoding keys. Error is thrown in case the arrays has different number of elements. Number of elements 0 is not valid for both parameters.
Modifying TS build. Migrating to _ex API for hash traversal.
MFZE2
Adjust paths for the new location of ext/rpc/java
Adjust paths to the new location java.dsp
which is not portable. use our bundled shtool instead.
. Implemented a common filter parameter parsing function. # For example "base64-encode.line-break-chars=--,base64-decode.blah=foobar" # will be parsed and splitted into a zval array as # array(2) { #   ["base64-encode"]=> #   array(1) { #     ["line-break-chars"]=> #     string(2) "--" #   } #   ["base64-decode"]=> #   array(1) { #     ["blah"] => #     string(6) "foobar" #   } # } . Added automatic line-breaking feature for base64 encode filter. This   can be turned on by putting a option entry "base64-encode.line-length"   to the filter parameters.
- Don't check if the handle is bogus. We should crash.
ChangeLog update
Added test case for bug #21600
fix wrong dereferenciation
fix inheritance
ZE2 compatibility
Remove handle_property from here too
RIP handle_* functions. ZE2 will use __ handlers instead. # Yes, I know this will break some things. I will fix those I can find shortly.
ZTS fixes.
Disable ZE2-incompatible parts # This should be rewritten for ZE2 anyway...
Move Z_OBJ_P here.
Remove Z_OBJ - it's internal to Zend objects, no generic function except those in zend_object_handlers.c should use it. Add Z_OBJ_HANDLER macro for easy access to handlers
ZTS fixes.
add get_class_name handler
remove unneeded var
Use generic handlers instead of Z_OBJ
recommending SHA-1 as hash function
#@!$$grml*$%
partially revert previous commit and change zend_modules.h to include a forward declaration to zend_ini_entry
sync entries
add INI setting session.hash_function add support for creating session ids using SHA-1 source more entropy for session ids
handle ERANGE from strtol properly
added zend_ini_entry to zend_modules_entry as discussed with zeev
fix 'use of uninitialized variable' warning
validate handle
. Updated quoted-printable filter by a neater implementation. . Changed emalloc family functions to pemalloc ones for persistent filters. . Changed base64 and quoted-printable filter names to "convert.base64-encode",   "convert.base64-decode", "convert.quoted-printable-encode", and   "convert.quoted-printable-decode" respectively for the consistency that   may be requested later.
- Update NEWS to show 5.0.0
Implemented compatibility mode To enable - zend2.implicit_clone = on in php.ini or using ini_set()
 - fix typo
Patch by Giuseppe Tanzilli <g.tanzilli@gruppocsf.com>.
Patch by Giuseppe Tanzilli <g.tanzilli@gruppocsf.com>.
Release skiped results. This will free memory on the server. Make mssql_execute work for stored procedures with and without returning result sets
ChangeLog update
Do not 'convert' double columns to integers after the 1st row in the result set.
Reverted because correct decision has not been made yet.
This patch is likely to fix win32 build
Reduced warnings in ZE2 build
Reduced compiler warnings in ZE2 build
reverting
Added stripos() & strripos() functions. Added 3rd parameter (offset) to strrpos().
- Ported the zend_execute_internal hook to ZendEngine2.
- Moving java and dotnet extensions to ext/rpc
freed reader twice instead of writer and reader
Add missing ,.
fix build
Leftover.
NEWS update
ChangeLog update
this is now implemented by the engine itself
ext/com is not compatible with ZE2, the ZE2 version is located in ext/rpc/com
HEAD defaults to build with ZE2 now
Avoid warnings when running stored procedures returning multiple results before setting output and return values. Additional results can be skipped by the optional parameter to mssql_execute
MFZE2
Throw error if object is not a XML_DOCUMENT_NODE in domxml_dump_node()
skipping unneeded copy
Automatically register constructor, destructor, and clone function when class methods are registered.
Reduced compiler warnings
Reduced compiler warnings
Added missing cast operators
ChangeLog update
* prepare 1.0.1 release
* obey PHP_PEAR_INSTALL_DIR and PHP_PEAR_PHP_BIN environment variables
* verbosity fix for cvstag and cvsdiff commands
* TODO item
* add "cvsdiff" command
* use getenv() instead of $_ENV[]
CS fixes
Adding extended checks for where FreeTDS is installed
Bug #21531   file_exists() and other filestat functions throw errors when in safe mode and file/directory does not exist. Extended php_checkuid function to add "flags" field via rename to php_checkuid_ex with alias for BC in functions that do want safe mode errors thrown.
Implement fprintf() and vfprintf(). Add a couple of tests.
Found some more occurences of that elusive bug...
Unify and make it easy to add code into the broken-string error handler
* added debug_backtrace() support to PEAR errors
* System::which() now checks .exe .bat .cmd and .com on Windows
* cleanups
Time for an update
Use the correct link when checking for more results on stored procedures
Restire BC for mssql_execute(). This will not break the new feature for handling multiple results from a single stired procedure. Adding mssql_free_statement()
changed from LVAL to RESVAL macro
ChangeLog update
Adjust config.m4 for new build system and improve lib detection a little
Reimplemented base64 filter to use iconv()-like facility for flexibility. # I'm leaving the code dirty & ugly prior to the discussion.
Changed global data type to avoid problems with initialization
Added support for WBMP images.
cvs is dev not alpha.
MFZE2
fixed bug #21498
Removed unused variable.
NEWS update
ChangeLog update
Version is char ;).
fix default umask(); (thx to Mirco MEEBEY Bauer for bringing this behavior to my attention and testing the patch)
Version tag for future move to PECL
Reverting last change as it really doesn't fix longreadlen problems in all cases.
Instances should not be freed in dtor()...
Made error msg format more consistent
Backout changes between 1.6 and 1.7
Add missing call
Added support for Shared Data Mode for OCI8_VERSION >= 8.1, which will provide memory savings by sharing common statement data
#17098 was MFH'ed
Added a check for availability of PCRE extension needed by test-suite.
* Synchronize with /pear/Archive_Tar/Tar.php 1.5 :   - Add support for long filenames (greater than 99 characters)   - Add private methods _readLongHeader() and _writeLongHeader()
ZTS cleanup.
whitespace
call dtors on shutdown
tell user which header files could not be found
Making the mssql extension work when build as a shared object
MFB + CS
Trivial grammer fix
Implemented quoted-printable stream filter
NEWS update
ChangeLog update
Add option to stream_get_filters() user-defined fiters vs. all filters, default to user only
Implemented string.base64 stream filter @- Implemented string.base64 stream filter. (Moriyoshi)
Adding support for anonymous fileuploads (#21450)
Patch for bug #19349
Correction for bug #21279
Moved php_quot_print_decode() to quot_print.c so that it can be used outside the iconv module
Added more RFC2047-compliancy check in iconv_mime_decode()
fixed missing & (Thx to Sebastian Bergmann)
Make it slightly more obvious that the return value is relative to the length of the input data.
Removed #ifdef NetWare and made the necessary changes in the directory structure of NetWare.
Header file for PostgreSQL. Moved from netware directory to netware/libpq directory.
This file moved to netware/libpq directory.
- get_path forgotten in .h file - fix crash in domxml_node_insert_before() (by Lukas Schröder)
Added symbols to build PostgreSQL extension for NetWare.
Changes for NetWare makefile.
Makefile added newly and modified the header file for NetWare.
Added #ifdef HAVE_SYSLOG_H around syslog function in the whole file to avoid link failure.
Modified for Netware.
Added string.toupper and string.tolower filters and generalized non-op filter methods
Nuke warning, on Win32 build
enable imageftbbox() and imagefttext() on WIn32
Expose stream_filters_hash so that it can be searched by stream_get_filters()
Complete gif readonly support addition by adding missing gd_gif_in.c file to the project.
ChangeLog update
fixed bug #21435
Define HAVE_GD_GIF_READ.
Remove unnnecessary initialization
Initialize lineno using the new infrastructure
MFZE1 - lineno fix
Revert config.w32.h.in -> config.w32.h build step per discussion with Zeev.
Make the .dsp use the php4build build directories
MFB: Made xslt_set_encoding() available on windows (bug #20640).
Added stream_get_filters(); to list registered filters
ChangeLog update
- Change Warnings to Notices
CS fixes.
better to check for existance first
Forgot to include these functions in the list
NEWS update for new iconv functions
Added test case for iconv_mime_encode()
* Update copyright year to 2003.
NEWS update
ChangeLog update
Provide alternative for glibc brokenness test when cross compiling
Added test case for iconv_mime_decode()
Added test cases for iconv_strpos() and iconv_strrpos()
- Update todo
- Removed support for libmcrypt 2.2.x to allow cleaner code. Another reason   to upgrade libmcrypt to a 2.5.x series as the older ones have too much bugs   to be safely used with PHP. - Updated macro's, php_errors and parameter parsing. @- Removed support for libmcrypt 2.2.x to allow cleaner code. Another reason @  to upgrade libmcrypt to a 2.5.x series as the older ones have too much bugs @  to be safely used with PHP. (Derick)
Further fixes related to bug #21267.
Modified for NetWare.
Modifications for NetWare.
New file added for NetWare.
Some existing files modified and a couple of files removed for NetWare.
NetWare related changes/modifications.
Modified for NetWare.
Modified for NetWare.
Added offset validity check for iconv_strpos()
New file added for NetWare.
Modified for NetWare.
A new file added and some old files modified for NetWare.
Checking in files for Ananth Kesari <hyanantha@novell.com>
File modified for NetWare.
A few New files added and some old files modified for NetWare.
New files added for NetWare.
New file added for NetWare.
File modified for NetWare.
New file added for NetWare.
- Update this one as well
- Remove double "Win32 COM" functions line
- Whitespace
Modified for NetWare.
Added stream_get_wrappers()
Added test cases for iconv_strlen() and iconv_substr()
Give mo' shift-sequence awareness to iconv_mime_encode
More shift-sequence awareness for iconv_substr()
Added missing casting operators
MFB
MFB: fixed shift-out sequence unawareness issue
ChangeLog update
fixing typo
- Removed entries that are going to 4.3.1 - Grouped the entries a bit.
* allways fall back to PHP_SYSCONFDIR
ChangeLog update
Raise required OpenSSL version to 0.9.6.
rotate changelog
NetWare related changes/modifications.
Allow base64 functions to be called from an extension buils as .so/.dll (iconv)
build fixes
Win32 build fix
Add filter.c, user_filters.c. Group stream related sources.
Tidy up
Move rot13 filter into a new filters.c source file. Tidy up some other filter related code.
use handler for  Z_OBJPROP
Workaround for glibc 2.2.9x and later "a+" bug that does not seek to EOF for files fopen()ed with that mode.
Added various functions that relies on the iconv facility: iconv_strlen(), iconv_substr(), iconv_strpos(), iconv_strrpos(), iconv_mime_encode(), iconv_mime_decode()
Implement user-space filters. See ext/standard/tests/file/userfilters.phpt for an example of their use.
Bump year.
Bump year.
Bump year.
fix level of indirection
NEWS update
Changed ifdef to if.
Bug fixing news.
testing default handler should be a separate test
missing dba entry
Adjust the error message.
update dba NEWS
-disallow using db-<n> with libraries of different major versions -disallow using db-4.1 with patch level < 25 -fix db-4.1 -added undocumented DB_FCNTL_LOCKING flag for version 3 and 4 # wow the sleepycat guys answered *very* fast
Oops, fix it indeed
Better check
Update.
- Whitespace
- euch
ws
Add info function to handlers and return handler info when dba_handlers is called with optional parameter full_info set true.
fix state-machine in cases T_AAAA is not available
2nd part of the patch
-better parameter names for DBA_HND macros -remove unnecessary notice
- Align mssql comment and clarify DBA handler selection
Remove bogus ignores
Update .dsp's
Added support for db3/db4 error handling/information
Add a default handler that makes handler parameter to open functions optional. @Improved dba extension (Marcus) @-Made handler parameter of dba_(p)open() optional. @-Added php.ini option 'dba.default_handler' to specify a default handler.
Typo.
When scanning for cc: headers, make sure the header is JUST cc: and not bcc: or original-cc: or <anything-printable>cc: See Bugs # 21036 and # 20707
Make the version code get the version from the current Apache, rather then the Apache PHP was compiled against.
Added apache_get_version() & apache_get_modules() to Apache 1.X & Apache Hooks sapis. Made the module listing in Apache 2 not show the '.c' portion, to be consistent with Apache 1.X.
Added MINFO() to Apache 2, which displays the Apache version & all of the loaded Apache modules. Added apache_get_version() & apache_get_modules() functions.
Bug fixing news.
* 1.0 release notes
* added "clear-cache" command
* 1.0 release
* 1.0 version
Made DBA tests not dependant on error reporting settings.
Update.
Mention the fact that zlib extension is now built-in in win32 distro.
Resolved apperent cvs commit confict.
NEWS update
ChangeLog update
Bug fixing news.
- MFB
added Wez, Ilia & myself
Remove cruft that opened a stream that was never closed in get_meta_tags(). (probably my fault). Noticed by Philip Olson
if needle is empty free allocated memory
remove memleak
Add missing test for db4 handler
do_inherit_method_check() is supposed to return 0 or 1, not SUCCESS or FAILURE.
ChangeLog update
fixed ws
fix for 21177
- Add test for bug #21182
Make range operate on the copies of the parameters rather then modify the actual parameters.
ChangeLog update
fix compile warning
do correct casting
Removed pointless assignment.
The -1 is no longer needed, since it is done automatically by strlcpy().
Changed strncpy() to strlcpy().
ChangeLog update
Verify if gl_pathv is not NULL, which it is, when GLOB_NOMATCH isn't supported and there are no matches.
fix compile error on IRIX
MFB: Ignore the new name of the binary built. Allows cvsclean to work again in sapi/cgi.
MFB: fpos_t -> off_t
ChangeLog update
Removed "%s" from format strings
php_error => php_error_docref
WS fix
Forgot to include this in my previous commit for #21131 fix.
(char *) vptr += expr; is refused by the IRIX compiler, so we use vptr = (char *) vptr + expr; instead.
'index' is a function name in the C library, do not use it as variable name.
A Simple fix for Bug #12360 (fsockopen timeout doesn't work).
Delete some security related env variables
ChangeLog update
* Windows fix from Edin
* set default xml-rpc cache ttl to 1 hour
Create php.exe in cli directory to avoid conflict with the cgi version
MFB: Updated list of bundled windows extensions compiled by Christoph Grottolo <cg@gordimer.net>
MFB: Reflect recent changes to the build process.
Made auth information inaccessible under safe mode as discussed in the list
MFB: There won't be a warning/fix on this, so remove the test
Moved the bug fix news entry to 4.3.0 section, to indicate that it has been MFHed.
MFB.
Bug fixing news & range() changes.
MFB: Skip the test, until a proper descision is made
WS
Added some notes about the brigade bug detection
ChangeLog update
*** empty log message ***
Alias dba_popen() to dba_open() until persistent STDIO streams are implemented.
test commit
need more space
fixed some warning when using external 4.x libs
Minor clarification in meaning of bitmask constants /* PHP_DNS_xx = 1<<(T_xx-1) */ T_CNAME = 5 ergo PHP_DNS_CNAME should be 0x00000010. T_SOA = 6 ergo PHP_DNS_CNAME should be 0x00000020.
Make sure the debug version is created in the right directory
When low & high are the same return an array containing the low value. Added support for float values and handling of numeric values being passed as strings. Added a test case for range().
@Make uniqid() parameters optional and allow any prefix length. (Marcus)
MFB
At least this problem exposed some leaks..
-disable uniqid() when required lib functions not available -emit an error when uniqid() will fail -make more_entropy parameter default to true for CYGWIN
Recommited the patch
silly error, will MFH
MFB: Make sure cli install dir is created before trying to install in it.
- Add comment in macro and remove some now unneeded code
testing cvs commit..
ChangeLog update
Make IS_ABSOLUTE_PATH use the IS_UNC_PATH macro rather then duplicate the code in the IS_UNC_PATH macro.
MFB: libtool detection
Correct mistake introduced by my last commit on these files; *_from_pipe() is for process-pipes created by fopen, not generic pipes created from proc_open(). Correctly implemented the fifo/pipe check for *_from_file() and it seems to be working correctly now.
MFB: Making windows build system changes according to proposal: http://news.php.net/article.php?group=php.dev&article=92682
MFB: Making build system changes according to proposal: http://news.php.net/article.php?group=php.dev&article=92682
Appended "\n" as suggested by Derick.
NetWare related files added and changes/modifications done for the existing ones.
NetWare related changes/modifications.
Netware related changes/modifications.
MFB: Remove dependancy on libtool library which is no longer needed.
ChangeLog update
MFB: Reverted previous patches as suggested by Andi.
Prevented test failure caused by LF code variety
Added a test case for bug #20539
An intuitive attempt to hunt the bug.
Added entry for the new feature of array_search()
Update
Finally put the changelog back online.
- Also send reports when there are no failed tests
Allow the native MSSQL extension to be compiled with FreeTDS on *nix platforms. This will make the whole MSSAL API available on these platforms. @Allow compilation of mssql extension on *nix.
* fix one missing DIRECTORY_SEPARATOR and a typo
- mnogosearch extension updated to compile with mnogosearch-3.2.8
fix compiler definition tests
fix compiler definition tests
A better, strtok() free implementaion of php_disable_functions().
fix test
Add version check since this will be available since php 4.4.
forgot to remove that dot
CFLAGS_CLEAN was not properly defined
change mbstring detection
- MFB
A better memory leak patch.
ws
MFB: gd uses float instead of double
Close log file on shutdown.
MFZE2
Do not allow AA if not trueColor (imageantialias does nothing)
Bugfix: #21010 (Here it's maker (manufacturer) instead of marker)
cleanup
Add testcase for bug #20993
Add missing entry
MFB: ZTS fix by Ilia
* update release notes, remove warning
* fix version/date
* introduce php_bin config parameter * use PHP_PEAR_<PARAM_NAME> environment variables for defaults   (for example PHP_PEAR_PHP_DIR) * Windows cleanups
* _parseArgs bugfix
MFB
Added a test case for bug #20934
remove extra char in case of binary/money fields
MFB: popen/pclose and proc_open/proc_close fixes.
Attempt to add more entropy for key generation.
MFB streams news
php_error -> php_error_docref conversion fix (noticed by derick)
Bug fixing news.
Jani happification
Patch for #20936 (openssl: public key handling was broken). Thanks to <jeroen@derks.it> for the patch.
Bug fixing news
php_error -> php_error_docref
SIGIOT may not be defined in cygwin
typeconversion is needed here for cygwin
O_ASYNC is not defined in cygwin
MFB: DOM/XSLT support in win32 build (bug #20485).
GD library news.
Added check for availability of jpeg support.
White space fixes.
Syncronize bundled gd sources with that of gd 2.0.9, affected functions are: gdImageBrushApply() & gdImageCopyResized().
Add antialias flag to image structure Add AA support
Add gdImageAAline (antialiased line) Add AA support for gdImagePolygon
Remove double definition of imagesettile Add imageantiallias
Add imageantialias(im, flag) Add AA support for bundled imageline
Add testcase for reported wordwrap bug
- MFB
Added missing &.
Added getopt() test.
Ask the user for their e-mail address so that we can contact them if need be.
Added missing variable to parameter retrieval.
- ws fixes - // -> /* */ (No C++ comments in c code!) - #if / #else / etc. have to start from first column.
- Some more missing .cvsignore files.
missing entry
missing file
fixed lack of variable initialization bug.
fixed string comparison which brought up a gcc warning.
Warnings and Notices when lock modifiers for dba_(p)open are used wrong. This finally closes bug #20828 (and i hope it must not be reopened)
snow..not again..
fixed security bug in libmysql
Security fix (merged from 3.23.54)
decode variable is only used when mbstring is avaliable.
ZTS fix.
On Win32 make PHP treat UNC paths as absolute paths, this should solve bugs such as #20831. Thanks to Wez Furlong for isolating the problem.
add missing comment
LOCK_EX is not allowed in read mode -> try using existing .lck file in read only mode only when in read mode.
No longer experimental
use php_error_docref and tidy up some WS/coding standards.
-remove second attempt to close lock file -default to lock on db file instead on .lck file. -try to use existing .lck file and only create it on failure (allows ro access)
stick to "check <what> <result>" scheme, do not repeat messages and align messages correctly.
fixing cut&paste bug
directory values are optional
remove not wanted skeleton comment and align configure message
Added support for libbcmath's bc_raisemod function as bc_powmod()
MFB
This extension requires cyrus-imap >= 2.0.8
Removed one more unneeded check.
Removed a pointless check. Thanks Stefan.
fixing crashbug
-make those debug messages
-when required haeder was not found --with-cdpf was simply ignored. I  changed this to be an error. -cpdf did not check for --with-jpeg-dir and --with-tiff-dir
"of cause" should have been "of course" but is not needed anyway #noticed by Zeev
Replaced deprecated APR_BRIGADE_FOREACH macro.
fix typos
Make this actually work too.
Centralize fopencookie test
Recheckin as unix # *** sorry ** a new diff tool converted it to dos before last comit *** sorry ***
Added open modifier '-' to skip/ignore locking. See bug #20828, #20858
MFB: zlib stream tests
Emulate fopencookie on *BSD systems. Patch mostly from Melvyn Sopacua <msopacua@idg.nl>
@- Let array_search() accept objects as a needle under ZendEngine2. (Moriyoshi)
Use $(INSTALL) rather than cp to install modules.
- Allow variables to have both 'static' modifier and an access level.   NOTE:  This only works at the syntax level right now (parser).  It          doesn't actually work as of yet - all statics are considered          public for now - Prevent users from putting more restrictions on methods in derived classes   (i.e., you cannot make a public method private in a derived class, etc.)
T_AAAA is not always available.
MFB zlib related fixes (sorry I didn't get around to doing this sooner)
MFB: #20831 fix
- Improvements
PHP_FALIAS for doc_get_elements_by_tagname got lost
- First attempt to improve memory manager during realloc()'s
update todo
initial checkin
Remove comment
Treat the absence of an access type just as if 'public' was supplied
Prevented return_value from being freed() twice
Bug #17174 Added IPv6 (AAAA record) support to dns_check_record() also added support to dns_get_record
Updated error message
Updated error message
Simplify/fix inheritance checks
Support private/protected constructors
Update.
Bug fixing news.
Remove unintentional code
- Dissallow using parent, self and main as class names
Adding a test for abstract class instanciation
sync
sync with branch
Forgot to add this entry...
fixing code style
Removing unused code and making sure headers are send when called from imap_mail()
Added test case for bug #20865.
- Implement public/protected/private methods. - Prevent instantiation of classes with abstract methods. Based in part on Marcus's patch.
cpdf + bundled gd #maybe someone finds a better solution (perhaps in config) and comitts it
added support for multiple character sets.
A bit of an update for the sapi/servlet installation guide.
Deprecate sapi/fastcgi.
Add imageistruecolor
* fix upgrade-all output
php_error -> php_error_docref
more rain
rainy and cold here.
touch again.
touch2.
touch
Remove pointless checks for array_init() return values.
php_error -> php_error_docref
-php_error -> php_error_docref
Bug #20746.  Renamed aggregation_info() to aggregate_info() per naming conventions and created alias for BC.
-php_error -> php_error_docref -removed some cases where emalloc result was tested
correct code that is guarded by "#if 0"
fix ZTS build
php_error -> php_error_docref
-fix a warning that was an error -php_error -> php_error_docref
fix debug only
- Renamed snmpv3_* to snmp3_* - Conversion to php_error_docref - Whitespace fixes
Test data
Add a testcase for this bug
Remove unnecessary code here
ws fix (bug: #20808)
Return FALSE on error as mentioned by John Coggeshall. See Bug #20822
Added GD image conversion tests.
Made imagecreatefromxpm() work once again.
Bug fixing news.
Added a test for bug #12776
Bug fix news
WS fixes.
silence some possible warnings
Changed php_error() to php_error_docref()
Changed php_error() to php_error_docref()
Bug #19370 Allow stored procedures to return multiple results.
Bug #17593 Make sure any pending data is released from the server when freeing the result
damn milter api: "Furthermore, since there is not a one-to-one correspondence between  threads and connections (N connections mapped onto M threads,  M <= N), connection-specific data must be accessed through the handles  provided by the Milter library."
fix typos and make example more useful
- Need these libraries for static build
Iconv extension is no longer experimental
Reverted the changes because the problem was elsewhere.
Reverted wrong part of the commit made in 1.24
apparently this isn't finished
Repositioned CoInitialize and CoUninitialize that apparetly makes it more correct according to MS docs. Patch (+5) by Michael Sisolak <msisolak@yahoo.com>.
Revert patch that should have been reverted a long time ago. There was a memory leak in the error handling system on win32, that this patch circumvented (by preventing the errors (EAGAIN mesages) from being generated). # I must have forgotten to remove this when I fixed the leak
aparently did not add these on head removed ssize_t which was causing problems, and not in libfcgi anyway
fix use of Alias under apache by defaulting script_name to redirect_url dont lstat, stat.
Correct the punctuation of these error messages.
TODO: Cleanup elements that have happened, or most likely won't happen.  There is probably more that should be gone, but its still a move in the right direction.
build support for cgi fixes previously commited
php_error_docref aborts cgi.  This broke using php as cgi under apache/mod_cgi with the cgi-script directive and bang lines in php scripts. removing it allows this to work again.
example
rename callbacks to fit the original name
- Allow enabling of memory cache with zend_mm
initial checkin
if the api functions are called, check if they're valid in that context reopen file per request, so milter doesn't hang. PHPA or APC can be used to speed the milter up added a milter_init callback to init the milter before it is registered added protos to make sniper happy
- MFZE1
- Revert as the patch doesn't compile
- MFZE1
Comment about maximal length now matches code.
fix build..
first working version
check for libmilter path
-fix typo
no message
improve username/password detection for IIS
no message
No more (f)printf for errors and warnings instead use php_error_docref.
it finally compiles now tests will follow tomorrow
add a "force HTTP/1.0 response" facility to the SAPI layer
remove dos line endings
fix build
todo or not todo
added remaining functions, still untested, still having problems with config.m4
Skip overload for ZE2 Bug #20156
Sendmail Milter SAPI initial version
Dont scan headers for cc abd bcc if extra parameters are used for these
Bug #20433
h WHitespace
fixed big bad memory leak in xpath objects.
Sockets is no longer experimental
Prevented the result from being affected by function overloading
Remove all traces of _bc_Free_list - it's not used anymore
- Initialize constants_updated (by Marcus)
removed unused variable
MFB
- MFB
fix for bug #20389  (no trailing slash in configure option)
add missing line
@- Added xpath_register_ns_auto([contextnode]) for automatically registering @  namespace definitions (chregu)
do some kind of automatic namespace registration in xpath_eval(). This works only for namespaces defined in the context node (eg docroot if no second argument is given. If one wants to use namespaces defined elsewhere or with different prefixes, you still have to use xpath_ns_register()
relative xpath queries are already possible (use $ctx->xpath_eval($xpath,$contextnode) )
get_element_by_id does not need LIBXML_XPATH support
Conversion fixes
Conversion fixes
Do not instanciate an abstract class
Portability: avoid <malloc.h> warnings on FreeBSD
Portability: The header contains the declaration; while the source ext/bcmath/libbcmath/src/init.c has the definition (otherwise some compilers complain about 'duplicate symbols')
Portability: Use 0 if the platform does not define EX_OK
- Nuke use of deprecated macro
no more need for this either
don't use stupid constants, be smart, just read the line
free alocated mem. minor changes in the layout
jdtojewish() test
Added an additional (optional) argument to jdtojewish() to keep BC with 4.3 (and let users getdates in Hebrew without further formatting)
-Code completley rewritten
-Add test for exif_read_data and magic_quotes_runtime
-Forgot to correct length
Convert  0D 0D 0A line breaks to 0D 0A
* fix typo
time is a function. Use the name of the variable 'timestamp'
Adding missing header file on Win32
removing unused variables
* lose obsolete tags: libfile, libname, sources, includes, libadd
Adding missing ;
Improved the error reporting portion of array_walk() as suggested by Markus
Prevent too many error reports from being displayed
* ws/folding
* changed "info" shortcut to "in"
Update to use new parameter parsing API. Updates to Jewish/Hebrew calendar code. Patch from Moshe Doron, amended by Tal Peer, reviewed by me. # Maybe Tal and/or Moshe could comment on whether this should # also be commited to the 4_3 branch (it completes some earlier work # started prior to the branch).
Add Berkeley db4 support
-Disallow combining db2 with db3 which are conflicting. -Stop searching for headers and libraries when found. -Check version for Berkeley DB library headers.
Highlight "Thank you"
Avoid , at the end of each string (to, cc and bcc)
fix windows build of cgi/fastcgi
- Made the STANDARD_SAPI_MODULE_PROPERTIES be what it says it is.
configure now supports building the cgi-fcgi module configure --enable-fastcgi
Add sapi_get_fd() and implement it for the Apache/thttpd SAPIs.
Remove a warning
* a little more "windows robust" when looking for package.xml
* forgot to set release date
* added --ignore-errors option, --force no longer ignores errors
* added sig_keyid config param
MFH (test failure if session.serialize_handler is not set to php).
* more accurate description of "makerpm" command
* silence some notices
tmp_line was possible uninitialised, resulting in crap error messages.
Added a check to determine if the file can be retrieved or sent. This check also prevents incorrect error reporting in the event the retrieval or the sending of the file cannot be accomplished.
Bug# 16798. Tests appreciated by someone with Oracle 8.0
@- Enabled mbregex by default when mbstring is also enabled (Moriyoshi)
Forgot to adjust this one
Renamed several internal functions for consistency
simplified korean encoding conversion table.
Removed un-needed zlib check.
email address change
Cleanup state=4 and avoid using sscanf()
- FN_IS_STATIC -> FN_STATIC
MFB
- Header file update for new mnogosearch functions
@- A new functions have been added: udm_set_agent_param_ex and    udm_get_res_field_ex - A new functions have been added: udm_set_agent_param_ex and   udm_get_res_field_ex
Use proper form of NUL Drop superfluous checks for NULL results
Better naming
Add test against redeclaring an overloaded method abstract
Add test against mixing static/non static methods
null after the erealloc()
remove the check, cause i don't really know, if content has to be an array everytime
add some checks to increase cache integrity
add errormessage, but that does not fix the problem
Added missing '\0'
MFB: ; instead of :
Renamed the file because this is actually a test for gdImageStringFt().
Added gdPEstrdup macro.
Sorry, wrong commit.
Dismissed the second part of the test
Adding mb_gpc files to project
- Adjust tests for removed old_function() in Zend Engine 2
Allow db4.0 & db4.1 here. Patch by Ralf Engelschall (rse@engelschall.com)
- My personal cleanups
- Commit Marcus' cleanup of abstract and static inheritance and improve - error messages
Forgot this one. Updated license information
Updated license information headers
Separated GPC related part from mbstring.c
ws fix
- Make it compile on IRIX again #- Tested with Linux/FreeBSD and IRIX
Move up general tests # if MFH is needed should be decided by QA team: because the output # sequence changes
Test for mb_send_mail() under language=Korean
New function dns_get_record(): close resolver socket after use. fix to internal func php_parserr(): correct bug in return state.
Testing default behaviour
fixed some bugs in korean encoding conversion.
Applied imagedeallocate() fix
little fix
Make magic_quotes_runtime work bidirectional for dba
Avoid possible buffer overflow.
Show which algorythm fails and do not fail when we have new algos. #for me TIGER fails anybody else?
MFB: Don't send default http status (200).
- protect the function against a non-xml document - initializing variables reduces the number of seg-faults
- fixed a buffer under run - initializing variables is a good thing   - in case of a invalid response we don't seg-fault here anymore
typo fix.
- Initialize all functions to non-static (patch by Marcus Börger   <marcus.boerger@t-online.de>.
Update error message and say 'method' instead of 'function'
Made bcmath extension thread safe. @Made bcmath extension thread safe. (Sander)
* fix config-show output
Show class name as well. Patch by Marcus Börger.
Added missing header (fixed bug #20555).
Added a test case for bug #20528.
test for bug #20518
Added E_WARNING to OCIPasswordChage() when Safe Mode is in effect
@- Added OCIPasswordChange() which allows the password of an Oracle account to be changed. (Maxim)
comment typo
Disabled OCIPasswordChange() in safe mode. Possible security risks.
Added missing mb_internal_encoding()
Removed unnecessary "\n"
Added a test case for imagettftext()
Revert that unwanted debug thing - thanks to Sander Robol
Hardcode the bcmath.scale ini-entry
mbstring is supporting CJK + some other encodings.
fixed incorrect encoding conversion in korean.
Adding tests for the bcmath extension
Force showing the question
Test: An abstract function can be overwritten but not called
Make it possible to test language features like newly introduced 'abstract' independantly from debug mode.
Show the name of the abstract method in the error.
the apache 1.x sapi read_posts tests for SG(read_post_bytes) being counted up, so lets make it happy although this value is not really needed in these cases ...
grr..
remove number.c from the win32 build..
- CVS nuked number.* so we'll nuke it from the build:)
Adding generated files to ignore list
- Revert previous patch
- Intermediate commit which works on making bcmath thread-safe.
- MFZE1: Disable leak() and crash() when not using debug mode
- Add abstract methods
Adding path to resolv.lib
Changing line endings to CRLF. This allows the extension to build again.
Add an error message to the ini handlers
add protective checks to ini updates
One Apache 1.3 line is enough
* convert to english
* fix doc for config-{set,get}
Added .cvsignore file.
Adding SHA1 tests.
Do not register IMAGETYPE_SWC if zlib, which is needed for parsing of swc files is not available.
brief v1 documentation
Props to Lukas as well
Add George to the credits and add note about it being different than the real Apache SAPI
MFZE1 - error_reporting fix
Function renamings: s/php_mbstr_/php_mb/. # all of which are static so I don't see any problem for now.
Unified the duplicated portions. # No need to merge this patch to the branch
Added a test to check whether mb_parse_str() works properly
Modified the test so it wouldn't be affected by ini settings.
Update Credits
- Add test for bison weirdness as some people experienced (seems fixed   now though)
- MFB: Safemode install problem
Allow error_prepend and error_append being empty as used in run-test.php
- Already moved to PECL, but forgot to remove it from php4
- Committing patch by Philip Olson <philip@cornado.com>.
-rename checkdnsrr to dns_check_record, keep old name as alias -rename getmxrr to dns_get_mx, keep old name as alias -added dns_get_record @Added dns_get_record() which allows to retrieve DNS information about @a host. (Marcus, Pollita)
* allow config-get in the default layer
now this works (thanks Rasmus) Note:  the correct line is --with-apache-hooks
No need to declare functions used internally by DBA as PHPAPI. This fixes windows build.
We have to use binary mode here.
fixed recurrent entrance to add_cgi_vars
use FREE_ZVAL when freeing zvals
Add FAM support for LGPLed libfam.
-Added colordepth for png -Added tests for width/heidth for unsigned/signed problems
Added colordepth for png
add missing backslash
Nuke one more win32 linking warning.
- Remove outdated GPL clause; the file was totally rewritten
Really nuke win32 linking warnings.
Hopefully fix win32 linker warnings.
Initial attempt to get apache_hooks api to compile on windows. Still getting link errors with undefined symbol: 'php_request_startup_for_hook'.
wb -> r+b
Changed memory allocation wrappers to macros, so that it is possible to see where the memory leak is happening.
Updated windows build file.
Added .cvsignore file.
Remove fribidi from the NEWS item about extensions available on windows for now. This is because I'm unable to get fribidi library to compile on windows.
Re-enable the curlwrappers configure option. I still don't recommend it's use unless you are hacking both curl and PHP to make it work.
Amend news about mbstring enabled by default
#defined offsetof, for systems that can't find it
- MFZE1
Added error message if browscap location is not set in php.ini
Removed duplicate php_compat.h include.
initial import of all these files.  This was previously the apache_hooks branch of the apache sapi.  Now it lives on its own.  General functionality seems to be working, though there may be a problem with some output buffering, most likely due to the way that sapi_deactivate needs to be mangled with here.
added support functions for the apache_hooks SAPI
A better gd >=2.0.4 version check for non-bundled gd library.
- MFB
Expat upgrade news.
fix the leak
Unify handling of error_reporting - fix bug #16137
Conversion fix by Michael Mauch
Force float for the float test
Show module used in test
-Do not rely on a side effect of 32bit platforms (patch by Michael Mauch) -remove unused sections
removed unused sections
Make getimagesize more robust against corrupt files
forgot to decrement result_allocated :(
- MFZE1
- MFZE1
no longer in use
When --enable-dba is used then include builtin modules unless --without-xxx is not used.
Removed the md5 checks since the files may be slightly different due to float -> int conversion inconsistencies on various architectures.
WS
Tons of WS fixes all over the file
Revert of previous patch ad requested by Andi.
With ZTS on, we need to resolve the full paths before making symlinks. If a chdir() call occurs before the symlink operation, the symlink is created in the current directory rather then directory we've chdired to because in ZTS we don't actually chdir but store the new path internally.
Use eregi is better (noticed by Jon)
Always use binary mode for magic files
Include php_config.h for HAVE_MBSTRING
Use flatfile if available. # This way we are using the internal library which we know about most.
Divided the overload test into two so as to handle the case mbregex is not enabled
Show which handler was used in the test
-Allow skip in upper letters. -Add 'info' result to --SKIPIF-- -> see following dba commits
Speling (found by Andi)
%s/SKIP/skip/g
Simplify and show skip reason
Update to new syntax suggestion
Show correct result
Bug fixing news
Removed unnecessary ?>
Only show the first results
- MFZE1
Added some skipif conditions to handle the case mbstring is enabled but mbregex is disabled.
- Commit fix for bug #19566 (I think it's by Marcus :)
Show Zend version
Bug fixing news
Showing memleaks for a memleak test is a good idea
db is deprecated now
Move the build-environment stuff down or the test results up, so you don't need to scroll down to see the failed tests.
removed restore_connection_defaults for pconnects (discussed on php-dev@) bug #19529 closed bug #12513 reopened
ws fix
Added a test case for bug #20381
I mean - todo typo :)
todo typo
Use C comments
Oops.
use grep -E instead of egrep. the latter is not defined by POSIX anymore
Added error codes for the PEAR_Dependency class Changed the dependency API to have a reference to an error message string as first arg to all check methods
Added PATH_SEPARATOR constant
* a little bit of internal refactoring
Added a test for zend-multibyte extension
Minor test corrections
Test is affected by mbstring
MFZE1
Added function OCIPasswordChange() that allows renewal of an expired Oracle password. # Tested, but still considered experimental...
Sort the modules for info output as well.
file() is affected by magic_quotes_runtime
Add info: Add magic_quotes_runtime support
Add magic_quotes_runtime support
Add magic_quotes_runtime which affects several tests
typo
Sort the modules and extensions before printing them when -m switch is used.
Test for bug #14383
Only set the overwrites once
Add a note about the mime-type
Moved some mbregex related portions from mbstring.c to php_mbregex.c # No need to merge this change to PHP_4_3 branch
Prevent warnings under safe mode
Disable safe_mode as it interferes with just about every test that needs to access the file system, set enviroment variables or execute commands.
Missed that
Info about gd changes
Add a test case for this "bug" # 20134. I'm not sure that this test is actually useful, so I'm not adding it to the branch.
Info about closed bugs
MFB
Add this test to make sure that fopencookie is detected and working correctly (or that the less efficient tmpfile casting is working). More details in the test itself.
Commit these before Sterling renames the files again :-) When curlstreams are enabled, registers a each supported protocol with PHP. "More Correctly" implement eof for curlstreams. Still not ready for anything like primetime.
@- Added an optional "step" parameter to range(). (Jon)
remove C++ comments
changing..
englishify
- Remove PHP_DISABLE_CLI - Streamline ircg build: thttpd-dependent part moved into separate source   file, so that it can be added to the SAPI-only object list.
upgrade files to libtool 1.4.3 shipped ones # should be safe to upgrade these to the 1.5.x ones
MFB (made mbstring compile on windows again).
curl_multi_info_read is unimplemented...
Moved news entry about imagefilter() to proper location.
add multi support and reorganize things a bit...
Welcome 4.4.0
Really remove mbstring from the build. # mbstring is gone completely as it does not build currently on win32 # as a separate module
Allow mbstring defines to be somewhere else without warnings.
New gd function.
Added tests for imagefilter() function.
Added imagefilter() function by Pierre-Alain Joye (paj@pearfr.org). This function allows negate, grayscale, brightness, contrast, colorize, selective blur, Gaussian blur, edge detect, smooth, sharpen and emboss filters to be applied on an image.
* remove debug output
- Moved cybermut to PECL
Change version to 4.4.0-dev.
moved this entry under correct version
Compile warning fix.
Added a skip condition for when mail() function is not avaliable.
Added a skip condition for when the encoding needed for the test is not available or supported.
must be unsigned # maybe i will change this to size_t for 64bit systems but i do not have the # time now and i have problems building php on a sun.
-use size_t -recheckin header as unix file
semi-fix string offsets crash - now it doesn't crash, but still leaks
Add new tag to package.xml named <warnings>.\nThis warnings are printed when installing/upgrading the package.\nThis patch was created in a cooperation with Tal Peer (Thanks for the idea Tal)
Added GLOB_ONLYDIR and GLOB_BRACE for compatiable systems for the glob() function.
Allow use of Berkeley db version 3.1 as found on many RedHat systems.
 - be more verbose
Added support for bundled flatfile, cdb and cdb_make handlers to win32 build of the dba extension.
Added a test for mb_send_mail() to check if the function properly handles Traditional Chinese characters.
Corrected Traditional Chinese language spec and the preferred MIME name  of which the encoding is used in that locale.
avoid fileno()
Already binary safe.
- Reset globals for each request
Added a test for mb_send_mail() to check if the simplified Chinese support works
Updated the test
Prevented unwanted encoding detections in mb_send_mail() # This patch shouldn't break BC
Update for a recent change on mbstring
Disable mbstring (and sync behaviour with *NIX per Andrei's commit).
Disable mbstring by default.
added missing cvs id tag
* support INSTALL_ROOT
Using // is not very good idea..
Do not use any php.ini files for the installs.
Cosmetics
fix warnings
ftruncate is defined in flock_compat.h on windows
Implemented -n switch to skip parsing ini at startup as suggested by Wez. #The switch 'n' was planned to be used for beautifying....delete n to make #clear these functions do not have a switch yet.
Added test cases for mb_send_mail()
Forgot to change this one.
Added neutral language spec for backwards compatibility
HTTP_RAW_POST_DATA BC fixes # hopefully all done, commiting anyway to continue work on my home box php://input stream fixes (POST data handerl mangles data, CLI crashbug)
Added test for swc files (compressed swf files), this must be done in a separate test, since this test has a dependency on the zlib extension.
Add missing $(INSTALL_ROOT)
ws fixes
reverting accidential commit
*** empty log message ***
Data manipulation (for big endian transformation) should occur after the data has been read from file.
Correct Entry, Add entry
use *e*malloc functions
fix warnings
fix static
-add gd_info() -keep important news at top -speling
Changed max_input_time PHP_INI_SYSTEM|PHP_INI_PERDIR because ini_set() will already be too late, the POST/GET/COOKIE processing occures before the script gets parsed. Changed the default value to -1. If users have previously (older PHPs) adressed the problem by setting timeout to a large value, we can avoid breaking their script by detecting the -1 and using timeout_seconds instead of max_input_time when setting the 'input' timeout.
Forgot the parsers and scanners
Rewrite of the W32api extension @ New version of w32api extension. Old API deprecated (jmoore)
php_error() => php_error_docref()
- Added optional parameter to sybase_fetch_object() (Timm) - Changed php_error and zend_error to php_error_docref (Timm) - Changed sybase_query() to clean up and free unread results (Timm)
fix warnings
fix windows warning: not needed here
-fix includes -fix one missing efree -replace efree/emalloc with erealloc
new function gd_info() returns an associative array of gd support options. # The index names are those from the minfo function. Therefore it is # easy to look into phpinfo() to see which index names are possible.
fix warnings #highest bit cannot be set so this must work
fix warnings
correct the last patch: make flock() a function again when it is missing #function name should be flock and not php_flock of cause
Speed up pg_escape_bytea, from O(n^2) => O(n). My test script speed up from 50 sec to 5 sec. (sscanf is too slow at least under my linux, I might write better function that unescape values later) Use emalloc/erealloc for bundled PQescapeBytea(php_pgsql_escape_bytea)
adding to do list to help clarify exactly what we are (or should be) working on for the XSLT extension. --dviner
Modified php_mysql_do_connect() as suggested by Nick Gaugler - using mysql_ping() as a more efficient alternative to using mysql_stat() to check if the server is alive and then calling mysql_(real_)?connect() to reconnect.
NEWS update
make flock() a function again when it is missing
Adding a more detail print functions, that assist/make it easier for creating SNMP scripts. They are only supported when you have NET-SNMP. Need to be documented still though.
Adding SNMPv3 support. This splits the old php_snmp function into an argument parsing part and a data retrieval part. The data retrieval part is reused for SNMPv3. SNMPv3 has only a different argument parsing.
Use php_flock instead of flock
-make the flock() emulation a separate function named php_flock() -use a define to make php_flock() available as flock() when necessary # The emulated php_flock even works on NFS this will be used elsewhere.
- Update with statics
Fugbix typo.
forgot to add fprintf in list
make flock PHPAPI
Switch to using error_docref # Satisfy all those named Mar[ck]us
MFZE1
- Revert that patch, this was not optional at all.
Added a flex version check. In the event required flex version is not available, an advisory warning (similar to bison one) will be given to the user. This is needed for systems such as Sun OS, where the existing lex parser cannot be used to regenerate Zend/PHP lexical parsers.
added a little bit more information for mysql.trace_mode
Added support for windows code pages.
WS
added mysql.trace_mode
Added new functionality: 	Warnings for table/index scans 	Warnings for SQL-Errors 	Warnings for non free result sets
-fix file open mode when modifier 'd' is used #Add my name to authors
-Precondiftion: no open files -do not show warning from dba_open call for read during write # Interesting is that on some systems read during write is permitted... # I will change the tests as soon as i find a way to have this equal on all # systems
Add missing flush
Report function name when log() triggers a base warning
Add the ability to take the logarithm of any base by adding a base parameter to log() Added regression tests for the new form
add test function for log() # It is difficult to test an approximation of an approximation, but I # believe this test should be close enough to verify the function is working # correctly.
make cache (get/set) binary safe
Removed the test. I should have been more aware of variability of error messages. Thanks Ilia.
give Wez streams credits he deserves.
Emit a warning when open mode modifier t is used wrong.
Add $lock_flag which allows to change lock behaviour for both 'l' and 'd' Remember gdbm has its own locking so 't' does not work here - maybe a warning is needed for that, too.
Use 'l' to open database file with locking on .lck file.
- MFZE1
- Make it rely on cURL version 7.9.8 again, so that we can start with the   Release Process.
- Remove \n from error messages
Changed the default settings so that it shouldn't affect htmlentities()
Added a missing '.', which is needed for proper skip check.
PHP flags specified in .htaccess can now be turned on by using '1' as well as 'On'.
Added missing zend_lineno initilization.
Made it conscious of the line number
These changes seems to have bad effect on htmlentities(). Remove it.
Added a test case for bug #17882
-Centralise open stream for builtin modules that use streams -If locks work on database file then only one stream open call is used
fix statics - make it behave like $this (fetch type "static") Side effect: indirect references to statics won't work.
update dba change list
finish work on locking -all but gdbm do internal locking now since only gdbm has internal locking -you can force locking on database or lck file (with gdbm this makes no  sense so a notice is generated)
Added a test case to check if my recent patch works
Defend against pipelined requests on persistent connections as used by IRCG. These could cause thttpd to start a second request in the same connection context, and thereby causing real damage.
- implement xslt_backend_info - add test for it - fix some prototypes
- Make it possible for people to save results and/or remove unwanted ENV   data. - Use more options for the CC 'version' flag
fixed several proto return types throughout the extension
Bug fixing news.
* implement transactions for uninstall * change "revert" to "rollback"
* implemented file transactions so installs may be safely aborted * preparing 1.0b2 release
ws fixes
* add folds
* honor track_errors ini setting in php_verror()
Added a test for mb_substr_count()
Added mb_substr_count() as per the request #15097
add a whole bunch of constants that make the interface somewhat up-to-date.
add check for curl 7.10.2
* cleaning house
Made open_basedir error more descriptive.
Remove unnecessary comments.
Use proper types
add support for curl 7.10.* constants (at least most of them) add support for persistent connections
Added a test for bug #19566
hide possible warnings #Why should one initialize $php_errormsg to NULL #It would be easier to have it initialised by the system, wouldn't it?
use consistent constants
s/PHP_API/PHP_API_VERSION/
-update to version 1.6.2 -added path command as requested by jani
fix for #20198: "always_populate_raw_post_data = On" breaks HTTP file uploads
Added a test for function overloading behaviour
Very little fixes
Move SWC (compressed swf) check into a separate test because this check requires zlib. This separation allows us to skip the test if zlib is not available and not fail.
Bug fixing news.
Added skip conditions in the event the required charset is not avaliabled. Removed old (commented out) module loading code.
This option is needed if we need to track errors inside the skip condition.
Added a skip condition if the English dictionary needed for the test is not avaliable.
Added a skip condition in the event posix_kill(), which is used by the test is not avaliable.
Removed duplicate assignment.
-lock support moved from dba_flatfile.c to dba.c -flatfile, cdb, cdb_make use locking now #locking is blocking per default use 'rt', 'wt', ct' or 'nt' for non blocking alias #test access to a database file. #locking uses flock() which will be emulated or warned if that is not eally #possible in ext/standard/flock_compat.c
* fix path prepends
not needed anywhere here
expand test: see if another insert fails
-rename anything to flatfile_xxx/FLATFILE_xxx -fix update function -add warnings for update function
	Changed:  EXPAT_SHARED_LIBADD -> XML_SHARED_LIBADD
Really disable curlwrappers configure option.
This makes the output of the tests consistent on 32bit and 64 bit platforms. The old test relied on the 32 bit behaviour, which caused them to always fail on 64 bit platforms.
Added swf info.
Added swf and swc (compressed swf) test cases and added 'bits' portion to the expected bmp test results.
Added additional tests to parse_url() test suit, corrected the output of 2 existing tests, which were affected by a bug fixed in latest update to parse_url() source code.
parse_url can now correctly parse mailto:, zlib: (old zlib wrapper) and simular. Thanks to Wez Furlong for noticing the problem.
WS
Make this static also.
Make this static
add test to see if insert fails when key already exists
remove debug output and use php_error_docref instead
let this source file compile with php 4.2.x
bumb api version because of module_startup change
Add two missing entries
Instead of checking whether realpath exists based on OS. Use the HAVE_REALPATH define, which is set if realpath() is avaliable. This patch also resolves bug #18868.
emalloc never returns 0, so we can simplify the code paths. also replace ecalloc with emalloc+memset, so that the latter can be inlined.
- use TCP_DEFER_ACCEPT - don't timeout connections which are managed by IRCG - don't generate invalid HTTP replies, if the client did not send a   request line yet
Cosmetics
Added a test case to check the behaviour on failure
added missing magic_quotes_runtime=0
Clean up
Stricter SKIPIF conditions
Oops, preg_match() returns integer value, not boolean.
fix zend_assign_to_object_op
Made skip conditions stricter.
-convert from dos to unix file
-convert from dos to unix file -disallow cdb_make
check whether a written databse can be appended and if read during write is permitted #i use ksort for the result here since some dbm libraries sort their result #but that is nothing to test here.
fix locks and reading #i will extend the tests to guard on such failures
Disable --with-curlwrappers. (Pending support from libcurl itself)
There shall never be an external library for this (hopefully).
Use the the name 'flatfile' correctly so the handler support can be built now. #I do not like the lock solution since a crashed php would leave the *lck #file locked now.
move newly introduced flatfile support from dbm to new flatfile handler # do not make the same mistake as with ext/db where it was not clear # which format was used.
correct file open modes
add fprintf replacement: tested, working, used
#add myself
Incorporate rewritten version of dbm from db extension. # currently locks are missing :-(
Make the macro use the function and not the other macro as discussed with Wez.
php_stream replacement for fprintf #Agreed by Wez - I will use this mysel soon.
MFZE1
- Shift around zend_op members
- A couple of updates
correct errors
- Add support for static methods. Basically methods which are defined as - static don't have $this. That's the whole difference.
- $clone -> $that
- Arghh... Change #ifdef to #ifndef
- ATTENTION: Finally nuke old_function and cfunction. I think it is time - to get rid of these BC notations. This is from the days of the move from - PHP/FI 2 -> PHP 3
Revert of previous patch.
- Change the automatically created variable $clone in __clone() to - $that as discussed at the PHP Conference. If there are any objections - alternative names please let me know. The reason for changing it from - $clone is because $clone sounds as if it's the newly cloned object and - not the old one.
Added a test for bug #20261
avoid using 'class' in exported functions - it annoys c++
call php_module_startup after zts has been initialised. This way we could have called zend_ini_deactivate(TSRMLS_C). But it seems unnecessary. #tested with ZTS and non ZTS build and many manual fail points. #now it even compiles without any warning, at least for me
-use of emalloc functions -info was not initialised fulle due to memset parameters  now that the whole structure is initialised we can stop putting 0 in it.
Ignore all temporary target directories created by the windows build.
Added 4th argument to virtual_file_ex() that specifies whether or not realpath() should be used during path resolving. In a number of functions we do not want to use realpath(), since realpath() will resolve symlinks.
Why did open fail?
Added two new targets to the ldap win32 build which enable ldap extension to be linked with ssl version of openldap libs.
style fix
Moving php/embed windows build files to sapi/embed folder.
correcting typos.
added missing compiler define
no memory no members
silence #when i get this code right tmp_line is not initialised, too. #Therefore php_stream_wrapper_log_error() will be called with #undefined value, will it?
Made php -v output look nicer on standard 80 column display.
correct define: silences compiler warning in http_fopen_wrapper.c
Use EXPECT again
Comment out part 3 for now Added Part 4
#- Added myself here
Added separate functions for setting include_path, for environments where ini_set has been disabled.  New functions: get_include_path(), set_include_path(), restore_include_path()
Revert virtual_link() patch.
Work around a daft mistake in the beos headers...
- Clean up mess made by netware guys. There's no reason not to abstract - the macro a tiny bit more allowing the code to look cleaner. The more - #ifdef's code has the more unreadable it becomes.
Not all systems have sys/ipc.h so let's check and only include it if we have it.
collect and append dba changes
incorporate cdb-0.75 as suggested by D. J. Bernstein #dba now supports cdb_make
Silence compiler warning.
Silence compiler warnings.
If ordered is not set a random compiler assigned value of *p2 would be used, this patch fixes the problem by initializing *p2 to NULL.
2nd wow returns different results with ZE1/ZE2
Silence compile warning, ctype.h is needed for tolower() function.
Removed \r, which caused the test to fail.
use ecmalloc/efree functions instead of (c|m)alloc/free
passing around TSRM #going to add CDB_MAKE support
See http://bugs.php.net/20175
move the run-test tests to the top #if one of these fails there is no need for further testing
-testing the tests -moved tests/dirname.phpt to tests/run-test/test007.phpt because many  tests use this to find their additional files. -no more tests in tests directly only in subdirectories
sort them
Add test for both sysvsem and sysvshm
ChangeLog update
Added a new test
better use 'Off' here #thx to Moriyoshi
missing
ws
without these nearly all tests fail if for example php.ini contains output_handler=mb_string mbstring.http_output=UCS-2LE
force showing progress of test
info about added functionality in dba
The cybercash extension no longer exists in ext/.
no c++ comments
cdb now allows multiple key-value pairs with same key
cdb interface is currently readonly
cdb interface is currently readonly
-fixed -use *e*malloc
add tests for functions in image.c (not requiring gd,zlib or exif)
pass params used for info call to skipif also #try php.ini with #output_handler=mb_string #mbstring.http_output=UCS-2LE
style keisatsu
Disabled output_handler in INI section
copy paste error #all these different versions here....
-allow parameters to be directories -"${dir}" -> $dir
Bug #20148 suggested work around for now.
Revert previous dirname() patch.
Skip when Sablotron version is too old
MFZE1
adding id tags
- Use spprintf to avoid two calls to zend_get_executed_filename, suggested   by Marcus Börger
syntax highlighting has been added
Reduced compiler warnings
Added iconv entry
older versions do not have this functions
ws
this would break tests by modifying EXPECT sections #it took a LONG time to realize that tests were ok but failed due to this ini
fix TSRM build
fix a warning
- MFZE1
MFZE1 (20214).
add missing }}} closure
fix obvious copy&paste error
ChangeLog update
test rename
Test for files in 'args' provided handles
ahem
- Added searching for Kerberos libs in default locations if no path is   given for --with-kerberos.
Add testcase for every single handler # db2 fails for me with SIGSEGV
Always show handler used
test.dbm* -> test0.dbm*
php_error -> php_error_docref
-move -d stuff into function and update settings for info call
update test #This test fails for me. I expanded the test output and checked the function. #The only way to fix this behaviour would be to store the last result in a #global value and fetch the time again in case the newer value is less the #the older value.
Simplify handler dispatching mechanism
Add missing return statement.
update
improve host header checking, only affects systems which have virtual hosting enabled
fix for bug #20209 (appending text nodes leads to segfaults sometimes)
Probable fix for #20180.
Reverting previous OpenSSL patch.
Segfault test, currently unsolved
Testcase for new Sablotron option
NEWS update
ChangeLog update
Possible fix for #20014. Suggested by wez@php.net
Modified the experimental new test class to make it easier to port to the web. Pushed all echo statements through a function that can be overwritten, changed the way pass/skip/fail is handled (separate function) that of course can also be overwritten. To begin testing of a web-based test script also created a webHarness class which will output HTML. To use, just $a = new webHarness(); instead of $a = new testHarness(); A few modifications still must be made to remove the CLI reliance completely.
copy/waste error
- Add constant XSLT_SABOPT_FILES_TO_HANDLER overriding the default   behavior of Sablotron to handle files itself, even if a scheme-handler   is registered. - Implement xslt_getopt - Modify behavior of xslt_setopt, so that it returns the previous value.
Add test for xslt_getopt
fix proto for clone_node
Added built date and time to -v output.
Moved the test into the suitable place
- Bah, Jani needs to be clearer next time ;P
- Make Jani happy
jaws
Discuss first!
- Added an aditional parameter to the jdtojewish() function which makes   the function return the symbolic hebrew name. (Patch by Moshe Doron   <mosdoron@netvision.net.il>) @- Added an aditional parameter to the jdtojewish() function which makes @  the function return the symbolic hebrew name. (Moshe Doron, Derick)
Correct a copy-n-paste bug.  Spotted by Michael Sisolak <msisolak@yahoo.com>
Patch for windows DSN less connection #20086 (by john@johnandlouise.com)
ChangeLog update
Prevent unnecessary notices on success
first step towards asynchronous content body processing
Corrected my email address.
initial reorganization of run-tests, commiting so both John and I can work on it.
Bug fix news
fix warnings
that was not good :-( #failure was in my installation
getopt with long options reverted to configure problems (may find the wrong getopt.h so needed structures are not defined :(   )
Coding style. # not my style :-)
added default library path
php_error -> php_error_docref
Added 2 more items
Enough discussion on display_erros it seems
escape_string functions will now return empty string directly.
Added a test case for bug #20169
Remove overzealous bison check
Get infos from php running tests not from php running run-test.php
Clean up.
Removed dl() code
Shortened comments. I also think they were too long.
And some more ncurses functions.
NEWS update
ChangeLog update
constant MC_TRAN_CHNGPWD typo
This patch allows compilation of gd against non-bundled gd library older then 2.0.4.
make microtime and gettimeofday unavailable instead of return false return false in case needed library function is unavailable.
Update bundled gd library with relevant changes from gd-2.0.4 I still need to add a configure check for the gdIOCtx struct changes so building against older external gd libs will work again.
-add reason to --SKIPIF-- -add magic_quotes_runtime to --INI-- --use var_dump()
-do not dl() load -magic_quotes_runtime
rewrite paragraph 9 No instances yet. And it does not work with #if 0_FOO but with #if FOO_0
Corrected un-initialized variable usage.
It's better to know the version is "unknown", rather than ""
Added test cases to check the compatibility with standard ereg functions.
Add locale for BSDi
fix warnings
-php_error => php_error_docref -two warnings
Removed dl() stuff
Don't use autoconf 2.52 macros.
Improved library identification
corrected output
-Use skipif.inc -split into two tests -domxml001.phpt should work -domxml002.phpt contains the part that fails
Add simple parsing test
Allows pear installer to run un-harassed by safe_mode & open_basedir.
Added a skip condition for situations where the TZ variable could not be set (safe_mode).
Allows 'make test' to run without being harassed by open_basedir & safe_mode.
WS fix
I like my C comments, thanks very much.
length of lyrics is not part of the test.
better use array_diff_assoc the old way resulted in erroneus .diff
Added dbx_escape_string function # tested on odbc, oci8 and mysql @Added dbx_escape_string function to dbx module. (Marc)
-WS -Use "//" instead of "/* ... */" comments #this test fails for me. Very weired...
-Only accept one single message which is expected. -Move error related settings to --INI-- section #Now see we can do it correct
Added test for dbx_escape_string
Rewrite: Taken from ZE2 RFC + a little textual modification
no notices here
no C++ comments #args sorry on that & thx jani
fix overrun
add reason
rename and WS fixes
-php_error => php_error_docref
do not dl() load in skipif.inc
update dba changes
- Remove the "which" call and just expect sed to be in PATH
Be a bit more wordy about when this function is available.
windows is smart enough to provide a way to set cwd for new processes.
- Update
ChangeLog update
Added a patch by Pierre-Alain Joye <paj@pearfr.org>, which implements the imagerotate() that allows rotation of images in gd.
- Only test the sed in PATH. (testing others is useless)
if it fits, it fits
- Update & keep most important things on top.
fix bug # 17497 (fix by: ddb@bitxtender.de)
This patch addresses the bogus test failures due to error logging/reporting confusion.
remove last line commited by error revert log_errors
forgot 'error_log=' and 'report_memleaks=1' #commenting on php-dev
forgot 'error_log=' and 'report_memleaks=1' #commenting on php-dev
fix this tests -they did not dl load module in test.... -disable E_NOTICE
update...
Raw records for yaz_record
Added dbx.colnames_case option that controls the case of the returned column names.
Added ini-entry and dbx_query flags to control the returned column names (unchanged, lowercase, uppercase).
Patch by Morus Walter, concerning some dtd/entity expanding stuff.
A better fix for bug #20110.
make one-line read work on win32...
remove $_FILES from $_REQUEST as per php-dev conversation...
- Enable the sed check. (and moved earlier so we can use the $SED everywhere)
windows will not have these, so dont bother, but add an OS to the stuff so that it makes sense why they are N/A
fix getting ini  values that contain the char = fix command line quoting.  windows requires double quotes in order to handle & (in ini values) correctly
ChangeLog update
Bug fixing news.
allow default ini overwrites to be overwritten themselves in --INI-- #see followup on dev list
fix test
This test requires special settings #wait/read next commit on run-test.php
dont memmove a null pointer.  caught by bounds checker.
fix Bug #20126 write returns an int, with < 0 being a failure.
Back to 4.3.0-dev.
We have to require bison version <= 1.30 >= 1.75 since any versions between are broken..
Update to -pre2.
- Add test case for bug 20120, bison bug.
Expose some more ncurses functions.
Add FreeBSD locale
Add FreeBSD locale
Avoid possible clash with mysql, but still make it work for BSD's. Struct verified to be compatible with Linux, FreeBSD, BSDi, AIX 4.3.3 and Solaris 5.7.
Capitalized the title string
ChangeLog update
Only in EXPECTREGEX
s/-//
add phppat/phpspat configuration file support and fix some indention
update and extend
Better fix for bug #20108.
Added a sanity check (hopefuly will fix bug #20109). According to http://developer.netscape.com/docs/manuals/enterprise/40/nsapi/05_nsapi.htm#551539 util_hostname() can return a NULL value.
Define HAVE_LIBDL, if dlopen() was found.
Added expected output.
experimental .phps support
not sure what this async_send is doing in here, so relieve it from its duty.
- fix type
Test for bug in sprintf
Donate "Fast Accept Loop" from Premium thttpd which speeds up processing new connections when the connection table contains lots of entries.
Donate "Periodic Connection Expiring" from Premium thttpd, because it is simple and gives a +40% improvement in terms of requests/s when serving static files.
remove original version
change to use EXPECTREGEX and rename
-introduce EXPECTREGEX -add %c for EXPECTF #i think we must escape the special characters for EXPECTF: ".()" and such
split tests
fine tune
some system headers (irix) define sa_len
Clean-ups
Renamed the test
Added a test case for ob_iconv_handler()
Remove useless check. # Problem was in other place
ChangeLog update
Renamed test cases
Added a test case for bug #20087
This is needed for BSD (FreeBSD, BSDi and possibly others), problem was indentified by Melvyn Sopacua.
Cleanup (make sterling happy).
- Add XSLT_REG_ERRMSG macro to register an error on the handle - Rename constants to a bit more appropreate format - Add XSLT_ERR_UNSUPPORTED_SCHEME to be returned for scheme handlers.
Tests renamed Remove dl() from skipif, for potential problems accross platforms and versions.
test renaming
Additional fix for #20087 # Thanks, Derick!
Added note about error reporting in tests.
The log_errors=1 breaks a number of tests and is useless for our purposes, removing.
Updated the test cases for htmlentities()
fix ZTS build
- Naming style
update
README.TESTING examples
New naming scheme
New naming scheme
README.TESTING examples
remove unnecessary sections #becomes an example
Implemented dba_list() that returns an array rsrcid=>filename and a test.
Added some tests for dba extension
 - alphabetical output for php -h (cli)
 - alphabetcial output for php -h (cgi)  - cosmetics
Added two new rows to MINFO that describes iconv library info.
Adjusted MINFO table style
style
thttpd initializes contentlength to -1, so we need to transfer that to 0 for SAPI/PHP.  Otherwise, SAPI will try to read (unsigned long) -1 bytes from the connection.
Added a mechanism allowing the disabling of the ability to change certain INI options when safe_mode is enabled.
NEWS update
ChangeLog update
Added some cases which test if charset determination with SG(default_charset) works.
Improved determine_charset() to look up SG(default_charset) value
Added new test cases for htmlentities
implemented dba_handlers() @Added dba_handlers() that lists all installed handlers in an array. (marcus)
trying to fix #20063
Added &euro; support to cp1252 table
-specify reason if connection is not specified -remove unnecessary sections
- Add locale string for FreeBSD ATTN: Test nog longer skips, but fails. So whatever has changed since 4.2.3 affects BSD systems.
fix compiler warning?: implement default mentioned by manual
fix compiler warning
- Protect function definitions with #ifdef's too
- If functions are not available on OS, they're not available in PHP.
- Also tune jmpz_ex
one version for php<4.2.3 and one for php>=4.2.3
-improoved number detection -display every error/warning only once
- Improve performance of part of the jmps. More to follow.
Added an ini option to hide the expected memory leak. This is done for compatibility with systems where report_memleak is turned off or running PHP with --disable-debug.
- Allow the report_memleak setting to be set everywhere
add missing {}
Changed the dbx_oci8 behaviour to return lowercase column-names, which is a hack but at least it makes it easier for users to create portable apps. # Perhaps this should be controlled by a (.ini?) directive or define # which determines the change (toupper, tolower, nochange)?
Not happy with the hack to handle the uppercase fieldnames that oracle returns. Changed the dbx_oci8 behaviour to return lowercase instead, which is also a hack but at least it makes it much easier for users to create portable apps (Mc). # also, I prefer lowercase :-)
Reverted because my patch doesn't make sense: it was just my problem.
- whitespace
Improve shutdown-behaviour
*** empty log message ***
centralize #include "build-defs.h" and drop (sometimes inconsistent) other instances
Added failed test summary.
- True and false are not always defined, used numbers now
Make PHP compile out-of-the-box with uClibc
Quote macro names in AC_DEFUN() and prefix the internal macros using a single underscore. Also rename AC_PHP_ONCE as PHP_RUN_ONCE.
improved warning message
 - gcc prints -v information on stderr, make sure that we catch it anyway.  - I hope this does not cause problems with other compilers or shells. IMHO we  - already rely on /bin/sh anyway, right?
 - fix segfault in proc_open #no bugreports found
style is everything
MFH; we would see a nasty problem again if it was not fixed...
Various corrections aimed at making the test's results consistent across all enviroments.
use german characters for a test with german locale
NEWS update
ChangeLog update
additions
better use var_dump and EXPECTF #seems i waited for EXPECTF
Make php_mb_is_mb_leadbyte() obsolete. It only works with double-byte chars. # Sorry Marcus, it seems we were working simultaneously :)
allow php here for the moment #hope someone will remove those php files here
fix warning
fix warning: used in rfc1867.c
fix style and warnings
Added 'skip logic' to the test on platforms where the locale required by this test is not avaliable.
suddenly, there was a newline
Correct spelling.
Correct mispellings and some word misuse.
Capitalize PHP and spell "web server" using two words.
- Apply proper capitalization to PHP and MySQL. - Correct some spelling errors.
Improve the wording in this paragraph.
Formatting nit: "autoconverted" to "auto-converted"
Provide an example cron script, to invite people to test.
- Spell out "cd" as "change directory". - Replace "ie" with "e.g.", which is more appropriate in this context.
no more looking
statis->status clarity on the exit status
Some english fixes Added docs for automated testing. Now telling the current version of the truth about ini settings :) Be more verbose about QA goals intentions and the tester's part in the process.
Implement 'no interaction' for automated tests Implement exit status 1 to make actions for automated testing selectable
- This might improve performance. Commiting it so that I can check it on - Linux
Updated the test case
- Use new setlocal semantics
Modified mb_convert_case() to handle cased characters properly when MB_CASE_TITLE is specified.
- Make Ts access a macro. I need this for my next patch which should - improve performance but not sure yet if it will.
[0.05] - Disable html_errors in info sent
Make it work without .php files
Function renaming.
Added folding markers for happier hacking
Test case regarding randomization of shuffle() and str_shuffle(). The code was provided by Adam Trachtenberg : adam trachtenberg com
Style keisatsu
Forgot this one.
Renaming the functions.
 - use the cc that was detected by ./configure when determining version    information in run-tests.php
Remaned the functions for consistency
MFH
don't assume yp-functions are always in libc, try also libnsl
update and correct
remove *.php file for EXPECTF tests, too.
Shorten # will be used as an example in README.TESTING
Added Oracle (oci8) support @Added Oracle (oci8) support to dbx module (Mc)
Updated tests for Oracle (oci8) support (Mc)
Maintain appropiate line breaks
- Trying to clean up this mess :)
- No reason why implicit_flush should not be settable from a script
 - be more verbose
- Remove this messed up thing AGAIN #- Yasuo: touch it and I'll fly over applying a YART on you.
- No tabs, no echoing, no unnecessary code
Make CLI behave like other moder scripting languages.
make it work with pre-v5 fdftk again
ChangeLog update
Possible fix for cygwin detection.
* make *_dir config parameters available for substitution in the   rpm spec file template
* add transactions member array (for queueing file transactions)
* some minor fixes to the rpm spec file template
* add some signature handling config options
Do the same test as ext/standard/test/strings/strtoupper.phpt does
Improved determine_charset() to use mbstring.internal_encoding when the last param is a null string. (If the param is omitted, it takes iso-8859-1 as the default charset in favour of backwards compatibility.)
test for locale support in strtoupper
- Nuke unused get_incdec_op() - Nuke old comment
- Improve overall engine performance
fix make test for an external build dir setup
ups - the other way round of course
Updated tests
Add lock file
No longer needed. See README.TESTING
Small corrections to the expected output.
One more PEAR test to be skipped.
When doing automatic line end detection, pick the line end that is found first.
Disable PEAR tests. These tests have too many dependcies such as pre-installed PEAR, needing to run as root user, most tests will fail if PEAR install directory is not inside include_path and so on.
- Add optional targets to allow the usage of Makefile.frag for shared   extensions.
Correct case for README.TESTING.
Added support for 'engine Off' directive Added support for 'none' option for *_value options.
- Explicitly return "0" at the end of the script. For some weird reason it   was returning error code 256 for me. This fixes pear install <pecl>.tar.gz   for me. #- Not sure if this is correct though
Test result depends on these ini settings
Update documentation
Missing and updated. Now including *.php
Give back the php file and leave it in case test fails.
Style polizei
NEWS update
ChangeLog update
- Revert the undiscussed change. # # Yasuo, don't you think there was a reason to drop this??? # Please, discuss these things before you go and change something. #
Hmm. -c options was there, but removed. It is _needed_ for php.ini users uses buffer by default.
Nuke tabs.
Removed tabs and combined those multiple AC_CHECK_FUNCS calls to one.
Cleanup. (no tabs here!)
Refine stream_select() to work with streams that have data in their read buffers. When selecting for read, the streams are examined; if any of them have pending read data, no actual select(2) call is performed; instead the streams with buffered data are returned; just like a regular select call. Prevent erroneous warning in stream_select when obtaining the fd.
no need to double fetch
this will be handled elsewhere
@ updated FDF extension to work with current Adodeb fdftk 5.0 (hartmut) reworked some existing stuff added some functions suporting stuff that have been added since fdftk 2.0 emulating read from/save to strings by transparently using temp. files   (activeX version of fdftk has this, but not plain C version :( )
fixed build for getopt_long-less platforms, removed left-over todo comments
Changed --with-gd to behave same way as --with-mysql does.
Renamed the test cases.
removed left-over unused variable
Convert C++ style comments to C style comments.
killed some warnings identified by sebastian
removed bogus paranoid header checking
some changes to how request input data (Content-Lenght >0) is handled - webdav-specific stuff removed (should be handled using httpd.conf   LIMIT or equivalents) - always_populate_raw_post_data now working on any method, not just   POST (and webdav methods with allow_webdav_methods), when 	Content-Length is greater zero - raw input data is also available using php://input stream,   this way one doesn't have to care about memory_limit - input data is now always consumed (although maybe ignored,   this fixes we had withproblems with keep-alive connections @ raw POST data is now available as php://input stream (hartmut)
getopt() now supports long options on platforms that have getopt_long() getopt() now working independant of register_argc_argv settings
workaround for the "autoconf-cache-bug" workaround -> don't remove config.nice
Tweak.
ZTS build fix
fix for #19712 & #19715 -> whitepsace in extension dir name
#19948
More style fixes...
Let them say why they are skipped
\s cannot be used with ereg()
The results of each test should go on a single line
- Stijl polizei
Skip this when strtoupper doesn't behave as expected, because casefolding depends on this.
Adds a 'reason' for skipping a test. # See modifications on ext/xml/tests/007.phpt for example
MFZE1
remove the remains of that comment.
- Moved CGI specific lines from configure.in to sapi/cgi/config9.m4   which is 'executed' last of the SAPI config.m4's. - Added --disable-cgi option. (was possible only with above change) - Made the sed check to not test for the possibly working sed on Solaris   since that would make the test quite useless. (compile would still fail)
- Add one 'level' more (0 first, 9 last) # Sascha, maybe we should use that apache2 config-stubs instead?
- Prevent resetting the PHP_*_DIR variables if already set.
style keisatsu :)
Added a new test case to confirm the inconsistent regex behaviour reported on php-users@php.gr.jp (10830)
Changed the dafault option for consistency
Added mb_strtolower() and mb_strtoupper() @- Added mb_strtolower() and mb_strtoupper(). (Moriyoshi)
MFH
Align with other configure --help texts
ChangeLog update
There is no point doing this test. Some systems think root can always execute so this is always true.
Try keep those most important entries as first..
style fix
looks like this message should go
Changed mb_regex_set_options() more informative
Add the actual ftok check for Derick :-)
- Only include ftok() if it is available
- Remove #ifdefs around ftok function so that it is also available when   none of the IPC extensions are enabled.
Sync zend_html_puts parameter list with Zend Engine 1.
ZTS fixes
fixed highlight related bugs (in case shift_jis input/output filters are enabled)
fixed proto: OCIExecute() returns boolean, not integer
ChangeLog update
- Hopefully fix test file problems
Silence compile warning.
Silence compile warning, when compiling --with-openssl.
a silly comment typo
- fixed proto for OciBindByName to represent the forth parameter optional
--with-zlib-dir has to be defined here to enable phpize build
made fgets() binary safe. php_stream_gets is now a macro which calls php_stream_get_line. The latter has an option argument to return the number of bytes in the line. Functions like fgetcsv(), fgetss() can be made binary safe by calling php_stream_get_line directly.
- Style polizei =)
Probable fix for #19944
Allow ifd start at offset other than 00000007h and provide testcase. #Now we can read images modified by Exifer.
- Improve opcode dispatching
Revert invalid patch. It seems the real problem is in php error function(s). It exits with return code -1 when php_error_docref() is called.
NEWS update
ChangeLog update
Added handling for file:/ schema, which does not contain a host.
ws fixes
- Change opcode dispatch mechanism to use a function per opcode and use - a lookup table using the opcode # to call the correct function. - Still have lots of tuning to do.
- Added %x for HEX chars - Added %d as alias for %i (too much C here :) - Added beginning and end markers to regexp
Revert my last bogus commit. Change the comparison to something that is less likely to inspire me to make the same mistake again...
Improve file(). Patch by Tal Peer <tal@php.net>
This is deprecated too.
Remove deprecated apidoc.txt.
- Cleanup
Changed fribidi_get_charsets() return value to also include the constant itself (as the key).
make jani happy
achtung: keep the style consistent! :)
Added tests for new functions
- word_count() -> str_word_count()
NEWS update
ChangeLog update
Added pg_get_pid() that get backend process PID. Does anyone prefer pg_get_backend_pid() or else?
Added pg_get_pid()
Renamed word_count to str_word_count to comply with naming conventions. Thanks Andi, for catching this oversight.
Improved fribidi_charset_info() slightly
New functions: fribidi_get_charsets() fribidi_charset_info() @- Added function fribidi_get_charsets() (Tal) @- Added function fribidi_charset_info() (Tal)
@ fixes bugs #19156 and #19544 (memleak)
- Removing debugging info
Added support for file:/. Thanks to Thies for noticing the problem.
Add note for short_open_tag # Assuming no objection for adding note in the manual.
@- Added Oracle TIMESTAMP type to oci8 extension. (thies)
Added pg_get_notify() for better performace for applications cache query results. Removed unneeded entry.
Added async message function - pg_get_notify()
Remove mysql_result_seek() alias.
Snow..yuck..
Part 1 of fixing the shared build
--with-zlib-dir was missing. Needed for phpize builds
Added word_count() function that allows counting of words inside a string. The function also allows the user to retrieve all the words from a string.
ws fixes
NEWS update
ChangeLog update
@ changed the VARIANT class to be able to create arrays of all types @ and not only VT_VARIANT
Revert. Again.
modified zend_bool handling code.
*** empty log message ***
fixed a problem when mbstring.encoding_translation is defined per directory basis.
fixed a problem when mbstring.encoding_translation is defined per directory basis.
Newly available extensions on windows.
ChangeLog update
Patch by Urs Gehrig <urs@circle.ch>.
Some more compatibility fixes for net-snmp vs ucd-snmp
Added win32 project file.
- Added PHP_PROG_SED which checks whether the sed in system works with   very long strings.
- Define LINK_SIZE=2 needed for newly updated pcrelib; fixes Win32 build.
Nope, that last one wasn't a leak in main/streams.c, it was file_get_contents misinterpreting the result...
Some buffer paranoia. Also, make feof() detection safer (ala recent changes to zlib extension).
hopefully silence compile warnings on Solaris related to HUGEVAL being undefined.. HUGEVAL is defined (well the manual would indicate so) in stdlib.h, not math.h.
Upgrade to version 3.92.
Bug fixing news.
Added tests for %e & %E
- Staying consistent with other tests
Don't use streams-level buffer on zlib streams.
Try keep those moved/removed exts entry at top.
Bug fixing news entries.
Make this thing to compile with net-snmp-5.0.x
NEWS update
remove ob_end_clean() and instead use ini section #Derick you're right this was no good idea. I just left it over after testing #the test.
ChangeLog update
MFZE1
This test should not print out the error (which is correct).
Respect INSTALL_ROOT var. Thanks to Jani for catching this one.
- Support new classname::$class_name, e.g.: <?
Added float printing tests.
Revert to 1.34.
Change the 'security level' of registry entries to PHP_INI_SYSTEM.  They're in the system hive in the registry, so only people with administrative priveleges can add stuff in there.
- Revert, got tricked by a stale object file
Install lib into $(prefix)/lib. Make $(prefix)/lib before trying to copy the lib into it.
- Added the TEST_PHP_USER environment variable with which you can specify   additional directories with tests to run. This is ideal for having your own   test suite on your system. You can specify more directories by seperating them   with a ",", for example:
Whitespace fixes.
This is not zval..
@- fgets($fp) (with no length parameter) now uses a buffer as long as the @  the next line available from the $fp. Previously, there was a 1KB limit. @  (Wez)
Add a sanity check and more verbose output in the case of an error.
Implement better SSL error handling.
NEWS update
ChangeLog update
Remove some old code.
A much better probable fix for #16114.
Probable fix for #16114
(php_socket_errno) win32 errno compatible macro. (php_socket_strerror) win32 compatible strerror replacement. Add an E_NOTICE when a socket write fails.
Increased the API number. (re: floats patch)
Redo the patch on Linux, the cygwin diff seems to be a bit broken.
PHP + thttpd (+IRCG) build using CYGWIN now
Remove set .x
Use if block rather than an or expression
- Hardcode dependent ini setting
* Add missing PHP_SUBST(awk).
Need to init connstring when there are 2 args.
make fastcgi usage threadsafe, ready for future multithreaded fastcgi implementation get rid of environment overwriting but hooking into php's environment function set $_ENV correctly for mod_fastcgi add -b to specify binding for fastcgi new readme file with information for running under apache2.0 and iis
Introduce connect_type option to pg_connect(). pg_connect(conn_str, conn_type) is allowed. @Added PGSQL_CONNECT_FORCE_NEW option to pg_connect() (Yasuo) # If you have better idea about constant name(s), let me know.
make php_import_environment_variables overwritable so fastcgi can correctly set $_ENV.
fixes for unix, untested remove exit calls fix a couple function definitions
ignore test.dbm
These should be ignored.
fix shutdown issues
fix invalid handle issue that shutdown php fastcgi prematurly fix checking os name for impersonation
Enable pg_escape_bytea().
Make PHP follow 301 correctly. # There may be other cases that need handling properly; I'll have to spend # some time investigating why we even need special cases now; it's got # something to do with Ilia's patch to fix memory leaks.
ChangeLog update
Add note about fhttpd removal.
- Removed sapi/fhttpd (this webserver is dead)
MFZE1 (floats & locale issue)
No more needed here
- woohooo! Automatic build test submits!
* update test
mention vpopmail.
- Hardcode setting which affects the test
- Make the test do what it says
Typo
Add test for single directory creation this test actually fails
added cybercash to the killed exts list..
* 1.0b1 is today
* added "pear makerpm" command for wrapping PEAR packages in RPMs
* rename System::type to System::which
* CLI layout adjustment
I already said that this construct was wrong... most probably fixes bug #19876
Use AC_ARG_WITH instead of PHP_ARG_WITH.
paranoia
Write in blocks of the current chunk_size for a stream. Should resolve problems with network writes.
ws fix
Added .cvsignore and CREDITS.
* look for awk, fix for #19819
changed INI restriction to enable per-directory settings.
Add the proper install lines.
Made the fribidi-config search a bit better.
Add the removed extensions.
Install sapi/embed header file as well.
Default to shared.
* verify md5 checksums during install
* include platform file attribute!
* package updates
NEWS update
ChangeLog update
- Removed the unnecessary extra configure option --enable-shared-embed - Changed --enable-embed to accept parameters shared/static and default   to static build.
Use var_dump instaed of plain echo
Improved the test cases so that they will be skipped rather than failed, if libiconv is not used.
- Document were the first test came from.
*** empty log message ***
Renamed and fixed constant
- Removed ext/icap (ext/mcal is the one to be used)
ws fix
Added test for explode() function.
text and comment nodes do not have children... test was wrong, implementation is right :)
node->attributes returns null, if there are no attributes.
fix typo.
- Change constant name
- Add case for bug 19858
- Skip if an external lib gd is used (which always has this crash-bug)
- Add indetified for bundled GD
Revert Stig's patch. Windows build should work again.
- Style polizei :)
Reformatted. # Still bad?
Added ICONV_IMPL and ICONV_VERSION constants. @- Added ICONV_IMPL and ICONV_VERSION constants to iconv extension to @  indicate which iconv implementation is used. (Moriyoshi)
Added set_time_limit(); We should stop it in some time. See the comment in the script for detail.
Switched from localeconv to localeconv_r, which is apparently thread-safe.
ChangeLog update
SP
* the actual implementation of the installroot option
Sorry, shouldn't use undo on packetloss connections
revert patch
Break it again (after 4.3.0-pre1 :-)
Back to 4.3.0-dev.
Another small test for iconv transliteration, from GNU libiconv testkit
- Argh... test before commit
Fugbix typo.
ws fixes
Bug fix news.
- Update makedist script
Revert to revision 1.13 for 4.3.0-pre1.
Update to 4.3.0-pre1.
Updated the test cases so that they use mb_regex_set_options. Added a test for mb_regex_set_options.
Adding a new item (number 11) that explains why it's important to use emalloc() and friends in place of the standard C library functions.
--disable-mbregex had no effect
It used to be 003
This patch fixes handling of floats on locales where decimal point is not a '.'. Problem is best demonstrated by bug #17079.
When you say string, match at least one char in EXPECTF section Plus a little protection against globbing like ext/foo/tests/* or worse.
add comment
fix memory leaks
Be consistent with other extensions.
* add --installroot / -R option to install/upgrade commands
* $this->destdir is not used
* upgrade XML_RPC to 1.0.4
* fix Archive_Tar dependency
* options displayed in "pear help" did not have option parameters listed
ChangeLog update
Revert previous change, it did not fix anything.
Test for standard transliteration. Original check-translit from GNU libiconv-1.8
* fix a diff/patch screwup
overrule <center>
- Use a more descriptive filename
 - remove ext/cybercash  - http://www.verisign.com/support/cyberCash/dnsChangeNotification.html
Renamed the test case files in order to avoid confusion
 - let's talk about leftovers.....
 - fix alignment
 - note aspell
 - R.I.P. ext/ccvs. @- removed ext/ccvs (jan)
 - R.I.P. ext aspell @- removed ext/aspell (jan) #configure note follows
 - fix build on FreeBSD, verified by thies.
clean these functions up using zend_parse_parameters and nuke the use of HASH_OF() which is inappropriate in these cases...
small cleanups...
no charsets, only basic entity escaping
MFZE1 zend_str_tolower issue.
- Skip when GD is not available
ws fixes.
- Added test case for bug #19266
Removed spurious code. Thanks Derick
Optimizations to various php string functions substr_count(), strrev(), nl2br(), php_addslashes() and php_memnstr().
Minor tweak - using memcpy(), instead of strcpy() for static strings. Gives better performance. Thanks Zeev.
added @ to suppress a notice.
Possible fix for bug #19529 (thanks Rasmus, Arjen and Monty)
Add cache_ttl, cache_dir to expect output Update text for username, password Tests pass now
Test case for str_shuffle().
Returning to the old behavior of str_shuffle() a bit. Now the passed string is left unmodified and the shuffled string is returned.
Emphasize a couple of points
- Update
Set default value for mysql.connect_timeout to -1. This setting matches the setting in php.ini-dist and ensures that the default behavior is to leave connect_timeout alone.
ChangeLog update
Added nl2br() test
Added test for strrev() function.
Tokenizer has been stable for some time now.
revert version here too..
don't define fonts ... use the browser defaults
- hardcode default rewriting tags
Revert to 4.3.0.
ZTS fixes
Removed table generating code. The return values of isalnum() may vary by the locale setting.
Enhanced test to also check charsets CP1255 and ISO-8859-8
Apache 2 news
Sorry Derick, generated the wrong patch and we don't need to recreate an array ;)
- Add the source file too
- Add blowfish compatibility test
Now str_shuffle() has the randomization characteristics of shuffle(). str_shuffle() won't return anymore the randomized string and thus will be consistent with shuffle(). Since this function is new to 4.3.0 no BC problems. #Thanks to Adam Trachtenberg for providing good example to check the #permuations distribution.
- Skip if the function is not available (in case pcre was not compiled in).
- Show easier parseable and greppable output
- Use getenv, as $_ENV is not available when variables_order= in php.ini   does not include "E".
Added test to check if charsets constants are defined
- Please do not use notices for debug information
- Drop dependency on fixed php.ini
- Use error_reporting E_ALL
- Drop requirement for php.ini-dist - Adjust test script to hard code ini settings
- Document correct default
- Do not change those from the default in Zend/zend_highlight.h
Add php.* to be ignored.
ws fixes
add support for adding /usr/lib to the linkline by default
style polizei
* make these variables configurable from environment on Windows:   PEAR_INSTALLDIR           PHP_BINDIR      PHP_CONFIG_FILE_PATH   PHP_CONFIG_FILE_SCAN_DIR  PHP_DATADIR     PHP_EXTENSION_DIR   PHP_INCLUDE_PATH          PHP_LIBDIR      PHP_LOCALSTATEDIR   PHP_PREFIX                PHP_SYSCONFDIR
NEWS update
ChangeLog update
Get rid of redundant loop
FreeBSD ming port sticks ming.h in /usr/local/include/ming/ming.h and we weren't finding it there.
zlib.h being included before ssl.h needs to be handled here too
Make zlib-dir actually mean something during the check
Add xslt milestones
- Require $this-> when calling a methods. This whole automatic lookup - first in the class and then in the global scope is confusing, slow and - not quite BC compatible.
- Allow access to private/protected variables of $clone inside the __clone() - method
Argh!  Revert.  I'm on drugs.  Was linking in a newer libz when I checked this.
Added tests for strstr(), strpos() and substr_count() functions.
Oops, should still define that.  Didn't think I needed it as nothing in ext/zlib checks it, but it is checked elsewhere.
This restriction is no longer true after the streams changes.
- Update
Initial commit of fribidi_log2vis test
Added test cases for mbregex
Lots of clean-up for upcoming mbstring merging event. Added mb_regex_set_options(). The Options parameters of various mbregex functions are now deprecated. @- Added mb_regex_set_options(). The Options parameters of @  various mbregex functions are now deprecated. (Moriyoshi).
Document session.save_path option in php.ini
2. :)
.
adding test of xslt_set_object --dviner
fixed mb_split (the value of third parameter treated wrongly)
readdir() was returning NULL instead of FALSE when used on an invalid directory handle.  If someone forgot to check (as someone here did) that the opendir() succeeded, and then followed the documented usage by checking readdir()!==FALSE things would go awry.  The ZEND_FETCH_RESOURCE macro explicitly does a RETURN_NULL on failure which is not what we want in this case, so work around it.  No need to change it for the OO case since the object is not created if the opendir fails.
MFH
never smash the stack...
fixing possible off by one in error case
Temporary (?) workaround (?) for is_executable() on Windows.
Closing protected variables hole
Whitespace
 - fix typo and improve error message
Call ob_flush to force the buffer contents to go through the rewriter.
Tests will be skipped if a tester does not explicitly specify the test-database setup in dbx_test.p.
stdio buffers data in user land. By calling fflush(3), this data is sent to the kernel using write(2). fsync'ing a file descriptor is not required -- writing to a fd has the same affect as calling fflush after each fwrite.
Print out warning only, if a variable was actually migrated
ChangeLog update
Add --EXPECTF-- section: 'sprintf' for EXPECT sections. See for usage example ext/xslt/tests/009.phpt. # To aid debugging, a little commented section is left in, this can be # stripped in due time, or properly integrated with some --debugging flag. # But it's quite useful, when you make such tests.
(xslt tests) Add test for memory leaks, caused by inapproreate use of              the struct. Memory leak is caused by at least 2 errors on              handle.
Try to ensure that we return the number of bytes requested during fread().
Silence warning.
Skip this test if we're not using ZE2
We're testing stripCslashes() here :)
Some more weird tests on Derick's request :)
Some string tests
- Add new tests for: array_change_key_case, array_chunk and   array_count_values.
Code cleanup. Thanks Andi.
Add php_ini_scanned_files() so "make test" can tell you when you have additional .ini files that are scanned.
You can't detect NULL nicely - false is better and more PHPish.
MFB
Added expected data to parse_url() test
Added a much faster parse_url() implementation. This also fixes a number of bugs in the old parse_url() implementation.
missed this, needed by 007.phpt
added support for aliases of the encodings.
Revert the implicit_flush mess.
Add testcases for implode() and str_repeat()
HAVE_MBSTRING awareness.
HAVE_MBREGEX awareness.
Begin the cleanup - remove ob_flush_all()
WS fix - although the entire libgd directory is horrendously formatted. However, since we are forking existing code, fixing it would make it much harder to merge any Boutell patches (if they ever come out with any).
Oops
Ok, perhaps it's too late at night, but I see absolutely no reason for this chunk of code here.  Why is it writing a palette.map file to disk in the middle of this function?  Looks like leftover debug code, and this particular code seems to be crashing on OSX as per bug #19704.
made messages more consistent
Add note about javax.servlet package.
Warnings for empty regular expressions
As discussed a while ago, decoding GIF images is not considered a Unisys LZW patent violation so we can distribute read-only GIF support with our bundled GD2.  The patent also expires in 2003, which is quickly approaching, so we can roll in write support soon unless things change.
Adding missing include path's to non TS projects
ChangeLog update
Change HEAD version to 4.4.0-dev.
- Add parse_url() tests (expect will follow later)url_t.phpt
*** empty log message ***
(xslt tests) Add test for new backend API (005.phpt), new function              (006.phpt) and a crash test (007.phpt)              006.phpt also tests handling of public entities, which is in              essence new to the extension, since there was no way to turn              it on. # These new functions and backend will be added shortly. # TODO: test for xslt_set_object
sp
(xslt tests) Test for reference to a non-existing scheme handler.
- Whitspace
Add BeOS thread support to TSRM. This should not impact on any other OS's but allows us to build PHP with threading support and therefore we can build as an Apache 2 module.
EOF related fixes.
Revert.  The problem lies elsewhere.
- Remove superfluous E_WARNING if mysql_connect() fails; there's already   an E_WARNING a few lines above.
NEWS update
ChangeLog update
adding the xslt_set_object function (as per discussion on php-dev and the newly created sab-php@gingerall.cz) --dviner
adding segfault detection as proposed by Lenar Lõhmus [lenar@vision.ee] --dviner
some FTP servers return 32bit port numbers.
some broken ftp servers return 32bit port numbers.
A slightly better content-type check.
Added a note on how to enable .phps support.
Return to old counting where every test is counted (even those of skipped extensions). Inform about the number of extensions tested and skipped. This makes the test summary more compareable.
Added .phps support to Apache 2. It can be enabled by adding AddType application/x-httpd-php-source .phps to httpd.conf
have implode use the smart_str_*() functions, this should speed things up quite a bit...
* Nuke warning when $php_errormsg is not set.
Interrupt loop, if the stream op fails.
Nuke warning
Add a few notes
Make that error message more meaningful for systems like my SuSE 7.0 with an apparently broken magic file.
replace dont_block with a flag.
Improve the general behaviour of stream_gets and fix its semantics with regard to sockets. The behaviour should be aligned with PHP 4.2 now. This has been verified to some degree.
Kill a few more warnings
Kill warning
combine those ob_* entries and keep the attention line on top
return FALSE on error
suggest paranthesis around || and &&
- dot :)
fix a memory leak in implode()
@ Make the glue argument to implode() optional, if it is not specified @ default to using "". (Sterling)
that was reverted for now
Improve testkit for xslt.  002.phpt and 003.phpt are regression tests for reported bugs.  004.phpt has been known to cause problems in some Sab/PHP combinations.  No known reports in bug db for that one.  Added skip mechanism @- Added regression test for bugs #17791 and #17931 (Melvyn)
Add PHP_CONFIG_FILE_SCAN_DIR.
As discussed, add --with-config-file-scan-dir compile-time switch defining a directory which will be scanned for *.ini files after the main php.ini file has been parsed.  This makes it much easier to automatically deploy a modular PHP since adding extensions which have their own ini switches can now be done by simply dropping a foo.ini file in the right directory and restarting.  A list of parsed ini files is maintained and shown on the phpinfo page.
Add missing ?>
peek at freebsd's libc and fix _php_math_basetozval
overflow check for _php_math_basetozval
Add VCWD_ACCESS
NEWS update
ChangeLog update
remove trans_sid=1
20: rewriter uses arg_seperator.output for modifying URLs 21: rewriter handles <form> and <fieldset> correctly
19: serializing references test case using globals 18: rewriter correctly handles attribute names which contain dashes
sigh..is this so hard?
Revert the patch for now. We'll be branching on Saturday the way it's implemented is a bit half-baked. We can always merge it into the branch at a later point.
$val not in first param to sprintf
ws fixes. #again :)
code from ancient bug #5271
invalid session.save_path should not cause a segfault
use_trans_sid should not affect SID
editing
fix position handling
A script should not be able to modify session.use_trans_sid
There should not be any warning with regard to redefining SID
Registering _SESSION should not segfault.
Mini test cases for fixed segfaults
session_decode should not segfault
Remove ob_start()
Add test for unset($_SESSION["x"]); behaviour
make tests work with CLI
Don't emit warning, if there is nothing to send
Optimized str_repeat() function, it is now 10x faster on 1 byte multipliers and 5-6x faster on multi-byte multipliers.
colon written instead of semi-colon.
swapped conditions to correct the logic
few ws fixes.
Keep comments and code in sync.
Tell everyone that I am the ext/ftp maintainer...
Added news entry about ftp_ssl_connect()
Added ftp_ssl_connect() for FTP over SSL.
Guys, please keep K&R.
- Add highlight_string buffering test
typing
- Add tests
ws fixes.
- Revert changed to implicit_flush behavior. The new behavior was not   intended in the first place.
Added some info about new functions and changed functionality in old ones.
Shouldn't enable implicit_flush like this. Most problems are fixed. If you find internal function that does not follow my comment, please fix it or let me know.
renamed ftp_async_* into ftp_nb_*
 - Added wddx_serialize_type(). Allows users to cast values to WDDX types @- Added wddx_serialize_type(). Allows users to cast values to WDDX types (jan)
Prevent unwanted fluhsing.
Added comment for php_output_set_status(). Please use this function if you would like to prevent unwanted flush by implicit_flush=On or ob_implicit_flush().
Purge ini_set calls and replace through INI sections.
Update test
Added ob_flush_all() that flushes bufferred contents until it actually sent/printed. @ Added ob_flush_all() that flushes all buffers. (Yasuo)
move gc_maxlifetime one up
Add recommened entries, including disabling the session bug/feature
Add new session options
Make the interpretation of gc_probability configurable by adding session.gc_dividend. The probability of running gc on each request is then gc_probability/gc_dividend.
Reenable E_WARNING and test session.bug_compat_warn in addition.
session_destroy resets the sid, so we need to set it again here
Verify PHP 4.2 compatibility: global is used albeit register_globals=0
Use ZEND_SET_SYMBOL_WITH_LENGTH correctly (hopefully)
(track_init) Use is_ref/refcount parameters of SET_SYMBOL macros
Verify PHP 4.2 compatibility: unset($c) with enabled register_globals
Forgot 1 byte for \0
Save memory
Align behaviour with 4.2 with regard to register_globals=1
Added missing proto and foldings.
Move wrong output buffer usage check to ob_gzhandler init. Export some output buffer functions.
Nuke PS(vars), we keep the state of registered session variables now completely in PS(http_session_vars). This avoids bugs which are caused by a lack of synchronization between the two hashes. We also don't need to worry about prioritizing one of them.
Made some functions inline. Added static for unexported functions.
Rename pg_data_seek() to pg_result_seek(). Give a correct credit for Marcus and Wez.
Rename pg_data_seek() to pg_result_seek(). Added mysql_result_seek() which is alias of mysql_data_seek().
Added ob_get_clean() and  ob_get_flush(). Someone requested this feature before. @ Added ob_get_clean() and og_get_flush(). (Yasuo)
Added missing TSRMLS_DC to php_apache_lookup_uri()
ChangeLog update
Add more BeOS support...
Add some more BeOS support.
syntax to avoid error while reading data from file in ibase_blob_import
stylissimo
unify these files to conform with the new files created by run-tests.php
Notes about additions to Apache 2 sapi.
* we're releasing 1.0 along with PHP 4.3, so this is 1.0RC1
* add support for http proxy authorization (thanks Arnaud)
Added apache_response_headers(), apache_note(), apache_getenv() and apache_setenv() functions. The getallheaders() is renamed to apache_request_headers() and an getallheaders() is aliased to it. Added a better error reporting mechanism to apache_lookup_uri() and virtual().
Making strrchr() binary safe. Test case added.
Making strstr() binary safe.
Ws fix. Forgot to add this in the previous commit.
ws fixes.
- Added CURLOPT_FTP_USE_EPSV option. (Patch by Alex Howansky   <alex@wankwood.com>)
Better...
Modified get_status(): Display chunk_size allways and size which is in most cases initial_size as well as block_size only when used.
Revisted Wez patch: chunk_size 0 means cahce the whole output. So we must apply the default before calling php_enable_output_compression(). I have left the default setting in the rinit function even though i do think it is not necessary.
Another missing variable init #Wez shouldn't "stream->filterhead->fops->flush()" affect return value also?
Missing variable init
fixes bugs #19156 and #19544
Check for C99 conformance of snprintf. #This way we force using internal version if a broken library is used. #E.g. length parameter is broken, return value or default precision wrong.
Another Linux x86 system returns ELIMIT so we need to check errno as well before assuming that pread/pwrite work.
Reflect actual stance wrt cli/cgi
Clean up a little.
The pread/pwrite macros check for a bug in the Linux glibc now. The bug causes the kernel not to return -1/EAGAIN. The new test case has been borrowed from the Linux Test Project.
Improve test to show output bufferring bypass bug clearly.
Add some example functions for mysql users.
pg_data_seek()
Added pg_data_seek(). pg_result_seek() woudl be better name, but there is mysql_data_seek()...
Added pg_ping()
Rename pg_metadata() to pg_meta_data() to confirm naming standard
- Run ext/* tests only for those modules that are actually compiled   into the php binary. (faster) - Skip search of .phpt files if they are passed as parameters
ChangeLog update
repairing the chaos
Disable pread/pwrite for now until we can clarify why it should be impossible to write a check for a broken OS feature.
The session extension ensures now that get_session_var can rely on the state of $_SESSION/$HTTP_SESSION_VARS. It does not look up symbols in the global symbol table anymore.
WS and added missing output. It seems this bug is fixed in latest version at least.
Bug fix
Implicit flush fix
- Revert the removal of dlopen check here. # Left HAVE_LIBDL undefined for some reason
- Removed unnecessary dlopen checks. (this is done in Zend.m4 already)
some typos fixed..
NEWS update
ChangeLog update
Users can shoot themselves by their own output handler always. Therefore, this check is overkill and it should be documented limitation, IMO.
Use the built in autoconf test for fnmatch. Simply using the AC_CHECK_FUNCS seems to give false positives on beos and reading the comments on other systems as well.
- No tabs :)
Add header file required for pread/pwrite (on my system at least).
Those can be safely ignored.
- make_objrec_from_array() gets a second parameter to handle key/pairs of   the form key=value and key:value. - Proper treatment of the attribute SQLStmt
Remove space
Even better.
Slight grammar fix.
Consolidate some entries.
Added pg_fetch_assoc()
Use PGSQL_CONV_FORCE_NULL as it is supposed. PGSQL_CONV_FORCE_NULL inserts NULL to field instead of NULL string for string type tuples.
Use of PGSQL_CONV_INGORE_NOT_NULL as it is supposed. Change comment a little.
fix gdImageCopyResampled() for non-constant alpha layer
- Rewording
sync
Apparently, Solaris 2.6's find is overwhelmed with more than 2 -names per invocation (add some parantheses and it segfaults).  And thus, we split the clean target up.
Remove unused def. Add TODO.
@ - Added getopt() for parsing command line options and arguments. (Jon)
ChangeLog update
remove unused lines
Prevent possible problems with two resource ids referencing the same panel.
Possible fix for #19290
- Update
Removed the ceil(-0.5); test. The return value is depedant on system's libc and even when proper value '-0' is returned, var_dump() converts it to 0 anyway.
ws fix
ws fix
Corrected ceil(-0.5) output value, it is 0 not -0.
Make it compile with the latest _release_ too..
Follow Yasuo's suggestion and build sapi program's under the sapi-specific directory.
Bug fixing news.
Added php/embed toolkit for embedding PHP engine into C/C++ applications. See my post to php-dev on the subject.
ChangeLog update
Bug fixing news
Added ncurses_getyx().
WS
More streams related news.
Rename streams functions to fit with naming conventions, adding aliases for old functions where required. Make use of recent changes to chunk size and timeout setting code.
remove chunk size setting code (it's now in streams.c). Move timeout setting code.
Differentiate between write buffer and streams read buffer sizes. Add options for timeout and chunk size; previously these were only set-able for socket streams.
* added --libs option
- Site mirror detection and popularity rank has been added to mnogosearch   extension
Probable fix for bug #19292
- Eliminated LFs
Make ext/fribidi compile against latest fribidi CVS
Synch with README.TESTING
Allow user streams/wrappers to implement fstat(), opendir() and stat().
Add missing folding marker.
- Consistency
It must be GLOB_NOCHECK instead of GLOB_NOMATCH. GLOB_NOMATCH does not make sense at all.
- Don't forget whom to blame ... ;)
NEWS update
ChangeLog update
Implement stream_select() which works just like socket_select, but only on streams. @ - Added stream_select() which works like socket_select but only works on @   streams returned by fopen(), fsockopen() and pfsockopen(). (Wez)
More ncurses functions and constants.
Implement some more window routines, add pad functions. Add panel functions when libpanel is also detected. Register STDSCR constant during ncurses_init().
fix formating by breaking on to separate lines
ws
/tmp/cvsmLUuXQ
Update credits. # Updated by scripts/credits. For some reason it put "Java" and "Win32 COM" # twice. I removed the duplicates manually.
Those two have enough credits already :)
style polizei
No need to define GLOB_NOMATCH.
 - be more conservative ;)
And a couple more.
Add some bug #'s to make Markus happier :-)
Typo
- Update.
They seem to be working...
ChangeLog update
document changes
- Added Sambar install notes (patch by Steffen <com@sambarserver.info>)
update credits page with proper HTML, fix HTML escaping, and a few tweaks
MFZE1
fix phpinfo() output for better browser BC
style,consistency..
- Cleaning up
 - GLOB_NOMATCH and GLOB_NOESCAPE are only defined in win32/glob.h  - fixes build on FreeBSD 4.6
- Reverted back to old param parsing api (and eliminated a segfault by doing that) - Added the CapRTL charset -- should be used for testing on machines without Hebrew/Arabic/Persian  fonts - Changed the note about deprecated behaviour from E_WARNING to E_NOTICE
Remove an unused variable and a now-unused function.
Rename file_get_wrapper_data -> file_get_meta_data. It now always returns useful information for all streams. Unified that data with socket_get_status and made socket_get_status an alias for file_get_meta_data.
Remove dup
temporarily giving some orphands a new home
maintainers for the famous mysql extension
- Add missing bug fixes.
fix windows build
Sync MSVC project files.
- Initial commit
Note that the GD functions now also work with remote files.
(PHP mb_convert_case) Add function that will convert the case of a string                       Respecting it's encoding (or the internal encoding).
ChangeLog update
glob should now be ZTS/open_basedir/safe_mode aware (finally)
symbolic constants for fnmatch flags added
on -> On
Test case for strspn()/strcspn().
Added common handler for strspn() and strcspn(). Almost of the code is identical. Modified to accept up to 4 params. Last 2 optional start & len. They are analogic to start & len of substr(). So the behavior when start & len are used is like strspn(substr($s,$start,$len),$good_chars) and strcspn(substr($s,$start,$len), $bad_chars)
add note about url_rewriter.tags
str_shuffle() function added. Like shuffle() for arrays - however the algorithm for creating the permutation is quite simple. More like the implementation of shuffle() for 4.2.1 .
*** empty log message ***
add two extensions - and orphan them.
Propmote API NO year, so that it will never be the same as ZE1 API NO
We are about to enter 2003, sending two-digit years does not make too much sense anymore.  According to an article from '98, only Netscape 3.x was affected anyway.
style police
Make these all work with persistent streams too.
Implement persistent streams. (for pfsockopen). Juggle some includes/definitions. Tidy up streams use in ext/standard/file.c
if this makes people happier about me not working on these anymore, so be it :)
- Update proto
Improve error messages
prevent segv on Windows with negative localtime values.
Sync
Allow - as part of an attribute
Sync with .re
Allow malformed HTML such as
ChangeLog update
- Megapatch to try and support inheritance from sub-classes. Things might - be *very* buggy now so don't get too upset if that happens. - I still need to improve some stuff but it's a good step (hopefully).
Replace underscores with dashes in --enable-mime-magic
NEWS update
ChangeLog update
yadda yadda..
Correct a buglet in the newly introduced buffer code. # Andi: this might have been the cause of that problem you mentioned.
include(URL).
Ensure that the seekable stream returned for include("http://") under win32 is based on a temporary file rather than a memory stream.
Enable include("http://....") under win32 by downloading to a temporary stream so that flex will get on nicely with the content. # untested; theoretically it should work just fine.
Reflect recent streams changes.
Remove allow_url_fopen checks from the user streams code. Rationale: user streams might not be implementing network access, and the administrator can disable the file_register_wrapper function and other network access functions if s/he does not want to allow this functionality.
WS
Implement a default_socket_timeout and auto_detect_line_endings ini options. Also move user_agent from BG to FG.
Allow this to build on beos with it's bizarre linking.
basic_functions.c
- MFZE1.
Force /nocache/ entities to be delivered completely, even if a broken proxy ignores our anti-cache headers and sends an IMS request.
Hopefully fix the other warnings that my last warning-fixing commit caused.
(PHP touch) Remove an extraneous time() call.
fix some warnings.
(php_get_session_var) Always return FAILURE if no data source was found.
Revise buffer/seek code a little. Tidy up user streams even more. Make test case quite aggressive.
Compat fix
We leak quite a few things intentionally, if you want to debug it - enable explicitly please..
Implement contstants on win32 @Implement platform independant socket error constants, which benefits error handling
Implement read buffering in streams. Eliminate similar code from network.c. Implement fgets equivalent at the streams level, which can detect the mac, dos and unix line endings and handle them appropriately. The default behaviour is unix (and dos) line endings. An ini option to control this behaviour will follow. # Don't forget to make clean! # I've done some testing but would appreciate feedback from # people with scripts/extensions that seek around a lot.
Use generic getnameinfo for address-to-name translation, if available.
ChangeLog update
- update project file (no precompiled headers)
- Unbreak build
typo
NEWS update
ChangeLog update
news about various strip_tags() fixes.
Added a test script for strip_tags() function.
Immediately unmap /nocache/ entries, so that the mmc cache does not get polluted too much.
ws fixes. #hope not to be flamed :)  what a wonderful day.
Add '+' modifier.
- Forgot to add an extra space.
Test case for array_intersect() and array_intersect_assoc()
New function added - array_intersect_assoc() similar to array_intersect() but the keys are also used in the comparison. So the result is a subset of the result of array_intersect(). Test will be committed too.
- Someone screwed this up.
Because track vars are always initialized, get_session_var failed to work in the register_globals=1 case.
ChangeLog update
Changing the magic_quotes_gpc setting has no effect at USER level # this partially fixes the #19526 shit
fix typo
Since the cyrus extension prints only one line, and no subsequent info, it should have a similar appearance as the other one-liners. Use php_info_print_table_row() instead of php_info_print_table_header(), as in the other extensions.
Sync MSVC project files.
Added check for yaz version into configure.
Added missing convert_to_* funcs. (should fix some crashes)
ChangeLog update
- Make Colin happy
Change phpinfo() to use CSS styling instead of HTML code.
change my email address
- Align configure --help messages
- Add fribidi extension
MFZE1 - connection_status() fix
adding ODBC todo's
Remove compatibility for old YAZ versions (use ZOOM API only)
New option for yaz_connect: charset
Remove obsolete directory.
Add support for cdb-0.75
white space fix
ChangeLog update
Remove dead code
another startup initialization fix - only ISAPI and CGI SAPI's tested, minor compile buglets might occur in other SAPIs, but should be trivial to fix...
white background please
Added additional handlers for compressed swf files, which require entire file to be downloaded for successful decompression.
Add useful debugging function
Patch for Bug #19402 provided by Kevin Way (kevin.way@overtone.org)
Tidy up some user stream code. Add a small test case (not yet complete).
setlocale() will now accept multiple locale arguments, first match wins
ChangeLog update
# err.. fix comment
* The second argument of fribidi_log2vis now accepts a constant. The old way (using strings) is still available but deprecated.
Add tracking for hashtable allocation
it should not only work for the failure case but also not fail (segfault) on the working case
stupid lino-typo .... :(
ZE2 fix
whitespace
MFZE1 - threading fix
headers_sent() may now return information about where output started using the optional $file and $line reference parameters
Call zend_post_startup() - use local copies of the function, class and constant tables in the startup thread
ChangeLog update
oops.
Added myself
tuning
- Require Fribidi 0.10.4 -> no more glib needed. - Cleaned up a bit.
Should fix #19425
Updatation of symbols exported for NetWare
MFZE1
ChangeLog update
Make zend actually strip comments. Bug #18151
Make zend return a proper exit error code when it encounters a parse error.
fix line endings
* More work on returning errors properly and freeing resources
For a change, Sebastian makes Andi happy. :-)
- Hopefully fix problem with __autoload not working well with inherited classes. - There might still be some weird situations I haven't thought of.
- WS fix - "while (" instead of "while("
- WS - Always use "if (" and not "if("
- WS
Line up the 'configure --help' output.
ChangeLog update
PCRE news
Update bundled pcrelib to 3.9. # Tested under Linux only
 - fix typo in comment
- Don't think we need the do { } while (0) here
ChangeLog update
Let's take Console_Getopt to stable release.
Do not create the destination file, if opening of the source file failed during copy().
NEWS update
ChangeLog update
made new ssl activate function the default.
ws fix
Meaningful Custom Build Step information.
Update info and synch example test.
@- OCIResult() could return garbage if called on empty result-sets. (thies) # fix #19364
Removed magic numbers about the behavior of php_array_diff - proposed by Andi and Jon Parise. #It is strange that I commited ZTS code but after that Edin fixed ZTS build #when I updated - it wasn't ZTS. hmmm. anyway fixing ZTS build.
NEWS update
ChangeLog update
My compiler likes it like this.
virtual filepath fix, don't know why i bother, the module isn't threadsafe and never will be, but still...
max this use the virtual_filepath() function and feel all threadsafe and wholesome inside
- Un-deprecating mysql_escape_string #- This will remove the annoying notices, while this function is used in #  a lot of scripts. There is not reason why we should discontinue it's use #  as it works perfect for about 99% of the time.
Unlink output files even if test is skipped.
- Little whitespace changes
Regression test for array_diff() and array_diff_assoc(). The latter is newly introduced.
New function added : array_diff_assoc() . Like array_diff() but does additional checks on key values. Test script will be added too. #My first patch . it feels strange :)
For now, check only when not using bundled GD lib.
Added build test. Bug: #19345
Patch for Bug #19341 submitted by list@firehawksystems.com
tok tok..
@- Added ability to use Perl-style ${n} subpattern references in the @  replacement string for preg_replace(). Takes care of bug #18442. (Andrei)
ws fix
fix proto
ws fix
Removed unnecessary code that was added for NetWare
Changed the licence to the one used by PHP Group
NetWare related changes/modifications
NEWS update
ChangeLog update
*** empty log message ***
moved vpopmail to pecl.
Patch for BSD-ish systems from Melvyn Sopacua <msopacua@idg.nl>, slightly modified.
MFZE1
MFZE1
MFZE1
php_url_parse() replaces controlchars with '_' now. This stops fopen wrapper CR/LF injection issues.
NEWS update
ChangeLog update
consistent..
* upgrade DB and Mail packages
* 0.91 changelog
* no longer needed
* more consistent output
* remove debug output
* how did those DOS newlines get here?
missed one section for #15630
chregu: Can you please use the new php_error_docref in new code?
@- Added ability to extract() variables as references via OR'able EXTR_REFS @  flag. (Andrei)
put that back...
Revert Dericks accidental commit :-) Add an Id tag so we can see at a glance who is to blame.
Updated for OCI8 patch
Patch for Bug #18640 (submitted by michael.mauch@gmx.de)
Version check for Sablotron.
- renamed rollback function to _restore_connection_default - in _restore_connection_default:   - unset the selected database (thx to Paul DuBois)   - set session variable autocommit to default (=1)
Added the 4.2.3 entries.
NetWare related changes/modifications
NetWare related changes/modifications
NetWare related changes/modifications
NetWare related changes/modifications
NetWare related changes/modifications
NetWare related changes/modifications
NetWare related changes/modifications
- Consistent use of macros
remove comment
- spaces instead of tabs
- Use PHP_ instead of ZEND_
ChangeLog update
Reword item 10 for greater clarity.
It seems we're better to mention about missing functions. PHP_FUNCTION -> ZEND_FUNCTION
Added possibility to reuse an old SSL session id.
s/send/sent/
nice..nice..
Capitalization
someone missed code requiring ssl
ftp(s) fopen() wrapper does no longer ignore the ip returned by PASV.
Added ftps:// fopen() wrapper to NEWS.
Control connection gets closed in ssl mode now, too.
Added EXPERIMENTAL ftps fopen wrapper.
- Simplify makedist
- Prepare for alpha 3
Added missing charset.
NEWS update
ChangeLog update
Mention php://output wrapper.
 - cosmetics
This should fix var handling problems finally.
Added a check to ensure user_agent header is not sent if user_agent value if blank.
MFB
fix warning
This was not a good idea.
Implement php://output wrapper, which can be used to write to the output buffer via PHPWRITE.
Tag user streams as being URLs, so that safe mode restrictions will come into play.
WebDAV MKCOL can have post data body, see rfc2518 8.3.1
commit the correct/up-to-date version
@ Made the User-Agent that php's fopen wrappers send, configurable via @ php.ini or via a stream context. (Sterling)
add the user_agent ini option.
- New mnogosearch extension features has been added to group results   by site. - Mnogosearch module fixes and cleanups.
ChangeLog update
fixed typo
remove uneeded def
Reenable pwrite/pread support
NetWare related changes/modifications
- argh... this is getting annoying
NetWare related changes/modifications
Main functions declarations for NetWare
Main functions for NetWare
- Please do not use spaces for indentation! - Removed redundend ifdefs
NetWare related additions/modifications
NetWare related additions/modifications
ChangeLog update
#Added positions files
silence a windows build warning
Remove unnecessarily commented code.
Remove unnecessary commented code.
Using --with-zlib-dir should work now with phpized builds too.
- Unbreak build
quick-n-dirty inheritance support for __handlers
- Tabs for indentation
- Please use tabs for indentation
NetWare related additions/modifications
Added UTF-8 support to pcre on windows as suggested by Wez Furlong.
NetWare related additions/modifications
NetWare related additions/modifications
NetWare related additions/modifications
NetWare related additions/modifications
File used by extensions like LDAP, MySQL etc.
- php_error -> php_error_docref - corrected proto of implode() (to match the docs)
NetWare makefile for LDAP Extension
NetWare related additions/modifications
in stristr: this check was in the wrong place, the real version was some lines below, this one assumed the type was 'string' in any case now it looks like strstr
NetWare related additions/modifications into FTP files
Batch file to set build type (Release/Debug) and Apache version to be built
NEWS update
ChangeLog update
This _should_ fix those builds where gd.h might be in many places in the system. Not guaranteed, but now the path for the found gd.h is always first in the includes.
php_error -> php_error_docref
This 2 lines should have been removed when the header() code was rewritten.
@- Added --disable-all configure option. (Jani)
ws fix
Whitespace fixes.
remove dead code
The sasl.h file is in .../include/sasl/ (at least in cyrus-sasl-2.1.6)
This is way too verbose...  Please enable it in your local .dsp settings if you like it :)
Don't build ext/overload with Zend Engine 2.
sniper claims its safe to take these out as well.
taking out the PWRITE calls too
This fixes Bug #19022 and #15983
TBD: __call(), __get(), __set().
Makefile to build for NetWare: extensions, main, netware & regex files
Batch file to build extensions and files under main, netware and regex folders
To include the NetWare config file
Support for __get, __set and __call in classes. This should work as follows: if class hasn't member with given name, __get/__set is called. If class has no method with given name, __call is called. __get/__set are not recursive, __call can be.
Workaround for superfluous comma in var_export() result.
Let debug_backtrace() example print out the class name, if applicable, and the function/method arguments.
No C++ comments, again!
No C++ Comments
NEWS update
ChangeLog update
Use zend_ini_string instead of the 'alias'.
Check for uppercase function names in .def files - patch from David Viner
nuke warning
nuke unneeded stuff
This does not belong here as it was MFHd..
- Update
MFZE1
MFZE1
- Revert #- Sorry... was too busy with it to notice discussion on php.dev
- MFH for: Apply rest of html errors fix (Patch by Jan Lehnardt <jan@php.net>)
Add html_errors to zend_utility_values. Patch by Jan Lehnardt <jan@php.net>.
removed #ifdef for mbstring.encoding_translation.
Added mbstring.encoding_translation to php.ini-dist|recommended
*** empty log message ***
--enable-mbstr-enc-trans is abolished to prevent some problems about POST/GET/Cookie variables. the same functionality is controllable in php.ini option mbstring.encoding_translation (default:Off).
ChangeLog update
 - prepare non-html phpinfo output for zend extensions
- Enable strcoll() for win32 build # Maybe I'm missing something. PHP has strcoll() since 4.0.5 but HAVE_STRCOLL # was always only available under Unix, no one activated it for Win32 since # then? # # Test to show it works: # <? $a=array("a", "z", "ä"); setlocale(LC_ALL, "German"); usort($a, "strcoll"); var_dump($a); ?> # # Output: # array(3) { #   [0]=> #   string(1) "a" #   [1]=> #   string(1) "ä" #   [2]=> #   string(1) "z" # } # # Thanks to a comment found on the usort() page and to a dlcp post about a # similar issue. # # Worth for a MFH for 4.2.3, anyone ?
refine last patch. if the argument-stack is not consistent don't try to show arguments. no call to zend_error is made as we might end up in an infinite recursion if called from an error_handler. so: if the arguments to functions aren't shown in debug_backtrace this is 'cause the arument stack was not consistent when debug_backtrace was called.
debug_backtrace() now checks the complete argument-stack for consistency.
MFZE1
ChangeLog update
- Udm_Cat_Path, Udm_Cat_List, Udm_Get_Doc_Count functions have been fixed   to work with mnogosearch-3.2.6 and later. - Removed search words highlighting while getting document URL in   mnogosearch extention
Per discussion on #php.bugs (+1 from at least Derick and Jani), revert double_buffering.
MFZE1
ChangeLog update
 - cosmetics
ChangeLog update
Bug fix: dont cache connection if proxy setting have changed
xpm.h is sometimes in /usr/include/X11 (or /usr/X11R6/include/X11)
 - seperate registered streams. #read: make sebastian happy ;)
Remove unnecessary whitespace
 - reenable "no value" output. thanks to sebastian for pointing that out.
Hope to finnally got it, fixes notice (Thx to Sebastian)
 - fix ZTS build. thanks to edin.
One zero to much
- EXIF is about meta data from images, not for digital cameras
I would have thought this was clear to everyone already..
revert that undiscussed change until it is really agreed upon.
NEWS update
ChangeLog update
 - add phpinfo() support for CLI. @phpinfo() support for CLI (jan)
Description didn't match the function here
Enable EXIF by default as discussed with Rasmus @Made EXIF (digital camera) extension enabled by default. (Marcus)
debug_backtrace() - make args passed to functions called vy call_user_function available again.
correct entry about XsltObject->result_dump_*()
debug_backtrace(): - make args work if called from the error_handler - fix refcount for args
clear current_execute_data on bailout as it would point into some freed area on the stack.
- Let's make this a little bit more professional :)
- MFZE1
- Whitespace
@socket_recvfrom is now binary safe (Jason) Zero the structure so that when the tcp layer of the OS decides to ignore it, we do not think we are getting a value
silence build warning, added default case
This extension is not forced to be compiled as shared.
Added the header and removed some commented out stuff (wrong place anyway)
ws fixes
Adding a left-out command
Some requirements engineering: today necessary defines exists where needed.
php_error_docref
php_error_docref
Remove this nonsense - this makes the module unpredicable since we do not have default values in ini and more encodings will follow.
fix some to long property strings
argh, domxml_doc_free is not yet ready for CVS :)
stupid typo
fix memleak in php_domxslt_string_to_xpathexpr
- "Use" is not a name :)
-php_error_docref -nuke unused variable
header for last commit
cleanup
NEWS update
-fix memory leak on failure -only use one function for nearly identical things -fix stripslashes not working on input directly
ChangeLog update
-reimplemented old style output (.exp, .out) -implemented diff format output -delete error logs on success @Changed regression tests produce selectable error reports. The tests now @recognize environment variable TEST_PHP_LOG_FORMAT which can @contain O and E for old style .out and .exp files, L for new .log format and @D for an internal diff format that does not require systems diff. (Marcus) #diff output makes it easier to detect the failure on huge or combined tests. #It was discussed that the php function's diff output has the advantage that #it is available on every system. Everyone insisting on systems diff may #use diff on .exp and .out files.
fix fwrite to no longer apply stripslashes on input string when magic_quotes_runtime is set On.
fix proto and tweak error message
debug_backtrace(): show name of included file for include and require calls plus some small fixes suggested by andi. # now it's perfect;-)
Implement com_invoke_ex, which allows the user to specify the invoke kind flags, so that custom invocations can be made. Tidy up code for com_propget and com_propset, so that it can work with objects as well as resources. # This code is from a couple of months ago, and has been hanging around # on my windows dev box; I'm not entirely sure where I needed com_invoke_ex, # but the additions to propget and propset are useful.
- Whitespace
@- Use escape_shell_cmd() to allow multiple extra parameters to the @  invocation of the mailer as used in the fifth parameter to mail(). (Derick) - Use escape_shell_cmd() to allow multiple extra parameters to the invocation   of the mailer as used in the fifth parameter to mail().
that propably wasn't a good idea and thus already removed
Set 'defaultuser' if 'USER' env not found
Replace horrendous code :)
NEWS update
Rule 1: Never quickly fix a thing in cvs Rule 2: follow rule 1 Thx rasmus :)
Implement socket errno values for UNIX based platforms. They are all prefixed with SOCKET_ to preserve name space Win32 will follow...
WS
Slight optimization of php_strtoupper & php_strtoupper functions.
MFB
use php_error_docref()
Remove $_ENV usages, getenv() is used instead 'MAKE' and 'USER' are used, if 'USER' not found I set user to 'defaultuser'
improoved error messages
Remove $_ENV usages Remove $env arg in all functions and uses getenv instead Note only 'USER' env var is used
Remove $_ENV usages, this causes problems with recommanded php.ini files Replace by getenv()
Removed __output_handler as everybody seems against such implicit behaviour. Instead supply error message.
@- PHP's cURL extention now requires cURL version 7.9.8 (Derick) - Bump up required version number of cURL to 7.9.8
Use zend_is_callable() instead of php_check_object_method_array() and drop the latter. THX to Markus Fischer - i did not recognize this function.
Prevent possible problems with include_path.
Reenable array(object,method) in ob_start()
Hopefully really fix #18022 this time.
Potential fix for Bug#18022: Streams that are pipes on systems that HAVE_FLUSHIO should not be seeked as is required for plain files on those systems.
Unify error messages.
Add a "closing" parameter for filters to determine if a flush is the last flush before the stream is closed.  This allows filters to finish a chunk and write footers etc.
Remove php_stream_error as discussed with Rasmus. Unify error messages for ext/ftp. (which was using php_stream_error).
NEWS update
ChangeLog update
Changed pg_connection_info()/pg_connection_reset()/pg_connection_busy()/pg_result_status()/pg_result_error() silently return FALSE when resource is not passed to them. @ Changed pg_connection_info()/pg_connection_reset()/pg_connection_busy()/pg_result_status()/pg_result_error() silently return FALSE when resource is not passed to them. (Yasuo)
Rename mysql_character_set_name() to mysql_client_encoding(). pg_client_encoding() is available from PHP4.0.3 and this function is available from PHP 4.3.0
- Whitespace
- Whitespace and better variable name
Convert to unix, related to bug 18588
Undeprecate mysql_db_query()
Make this entry a little bit easier for eyes to catch.
Overwrite control chars in parameters with whitespace instead of truncating.
changed zend_error -> php_error_docref()
- Also make bz2 archives
convert encoding to cp1251,cp866 was not working, fixed
changed error messages according to CODING_STANDARDS
MySQL changes
fix warning
Make pg_result_status() a little more useufl by ignoring invalid parameter and return FALSE. (i.e. pg_query() may return FALSE instead of result resource)
php_error_docref #New conversion available at: http://docref.txt.marcus-boerger.de
Remove relic from PHP3 days which is not useful anymore.
ChangeLog update
Made this extension to use the resource stuff
- Add \n to configure fprintf
- dlerror -> DL_ERROR
ws fix
stream closing bug here too
Respect safe mode setting when opening scripts and things for the ZE.
fixed bug #18643
renamed xslt_dump_* to xslt_result_dump_* to avoid confusion # will adjust NEWS file later
fix memleak in xslt->dump_mem()
debug_backtrace: show include/require/eval as normal functions on the stack # the hard bit is to find out the args for those
- No spaces :)
- debug_backtrace now also returns an array containing the arguments of the   called function.
fixed bug #19016 SSL is only available for MYSQL_VERSION_ID >= 40000
- debug_backtrace: 	added "type" ('->' or '::') for object calls. 	made calls done thru call_user_func show-up correct in backtraces.
those are set by RETURN_FROM_EXECUTE
fixed bug #16965
Update/cleanup. # Everyone, check the entries under 4.3.0 which have been MFH'd into # the PHP_4_2_0 branch.
NEWS update
Add a configure check to see if the seeker function in an fopencookie uses off_t or the newer, more portable "fpos_t *". The check could perhaps be more refined, as the test program will segfault on older systems (like mine) that use off_t.
more php_error_docref
php_error_docref...
*cough*
fiw warnings
- moved xslt_dump_ to better place - removed unused variables
@- Added XsltObject->dump_file($result,$filename[,$compression]) for dumping @  xslt-result directly into a file. (chregu)
@- Added XsltObject->dump_mem($result) for returning xslt-result directly @  into a string (morus.walter@web.de, chregu)
return version number of linked libxml2, not of the one, which it was compiled against
fix examples #did i write those? shame on me for not knowing my own functions
fix zts build
Removed C++ comments
magic.mime seems to be more common name for the file.
@- Made mime_magic extension available on win32 platform. (Edin) Mime_magic extensions builds on windows now.
Instead of hardcoding the path of magic.mime file, try to find the file inside common paths for the file.
fix warning
fix php_error_docref parameters
@ - Added xslt_backend_version() and xslt_backend_name() for getting @   information about the processor backend. (chregu)
add allow_webdav_methods as option
do not check for POST twice
@ - Added php.ini option "allow_webdav_methods" to allow handling of @   WebDAV http requests within PHP scripts. (chregu) # More methods (for DeltaV) will follow.
(PHP imagecolormatch) makes a palette image match the colours in the                       true-color version. (PHP imagelayereffect) extended alpha-channel mixing effects for the                        bundled GD library @Added ImageColorMatch() and ImageLayerEffect() functions @which work with the bundled GD library (ttoohey)
@Made major improvents to the pcntl extension(Jason): @ - Greatly improved performance, by switching the signal callback mechanism @   to use ticks @ - Implemented object signal callback ability by using array($obj, $method) @ - Added a restart parameter to pcntl_signal, which allows you to disable @   the default of system call restarting Changed callback hash table to be initialized and destroyed per reqeust (allows the ability to use request life zvals as handles) Nuked warnings Modified test script to adjust to new ticks backend Some slight WS fixes
kill some compile warnings
style fix
comment out unused variable
kill compiler warning (unused variable)
These functions are not used elsewhere.
ChangeLog update
These require exif and mbstring
Test argument passing for CLI
This does not work for CLI
Added ARGS section to allow passing arguments to CLI tests
zend_execute: make sure that current_execute_data points to the right thing after coming back from recursion.
Added a check for monetary.h needed for strfmon inside string.c
Reflect recent changes to exif.c
Patch from Melvyn Sopacua <msopacua@idg.nl> finally fixes it (bug 19006).
- Proper format for CREDITS files
- gave overdue credits to christian
This final change enables the ext/java to compile on OSX. # now to do testing and ensure that it works as stated... weeee...
add ini setting precision - this does not fix the real problem here
more ini settings
full decopling of size parameters of ob_start() and internal buffer handlers #intended behaviour is now fully implemented,
One more patch up towards OSX compatibility... # it compiles now with the ObjC files (Finlay Doobie rocks the casbah)
Add var_dump float format test
Add combined base64 and md5 test
fix array tests someone must have changed precision in php.ini-dist from 14 to 12
make snprintf and f,g,G converions of snprintf/spprintf C99 complient
Ignore double_buffering for ob_start().
NEWS update
ChangeLog update
speling - thanks (Masaki Fujimoto), acually this wasn't my best piece of doc
Revert ob_start() defaults to 40K/10K until i find a better solution.
Correcting english in config
Implement filter API for streams.
fix vim modeline
speling - thanks derick
change to php_error_docref() #documentation about output relevant ini settings will be in ref.outcontrol
note about double_buffering
Changed handling of output buffer sizes.
Changed handling of output buffer sizes. #.c to follow
Changed handling of output buffer sizes.
Changed handling of output buffer sizes. @Added php.ini option "double_buffering" that forces an additional first @output buffer and improved handling of buffer sizes. (Marcus)
remove tabs
NO C++ comments
Windows build supports returning the sql statement which failed.
ChangeLog update
Remove php_stream_sock_set_blocking and replace with php_stream_set_option which can be used in a similar way as ioctl() to set options for streams.
Convert the value of tz_minuteswest inside struct timezone on Windows to minutes from seconds.
Make options piggyback and timeout work with ZOOM
MFZE1
Sync with var_unserializer.re
Made unserialize handle floats with an E notation - bug #18654 Patch by Christophe Sollet <csollet@coleebris.com>. (I'll commit a new var_unserializer.c in a second)
Don't know what this line was supposed to DO!?!?
-use of php_error_docref -some more information in ob_get_status()
-allow changing html_errors any time changing display_errors is already -use sizeof for strftime call -removed unused #define -mention CODING_STANDARDS as documentation
w3c adjustments :) - has_attributes returns empty string if attribute is not there - parent_node returns null, if no parent
Debug functions should only work in debug mode.
ZE2 compatibility fix ## In ZE2 the hash contains zend_class_entry *!
ChangeLog update
Some minor changes related to Pi3Web 2.0.1.
make POST requests work again
ZE2 compatibility fix ## In ZE2 the hash contains zend_class_entry *!
Removed unused local variable header_line.
Corrected if() syntax in previous patch.
include PDFLIB_SHARED_LIBADD in the pdflib test, or it fails with unresolved symbols on OpenBSD
reverting to 1.73 for steph (sfox@php.net)
ChangeLog update
Use mtime instead of atime, as we always update the session file anyway.
MFZE1
AFAIK, 4.3.0 will not contain ZE2..
MFZE1
MFZE1
Default is enable, so better --disable-ipv6 I guess
Added --enable-ipv6 and only look up AAAA in DNS when enabled
IE does not use quotes but now we are safe...
More W3C conformance stuff (they returned all false before..) - DomNode->attributes() returns NULL, if not found. - DomNode->first_child() returns NULL, if not found - DomNode->last_child() returns NULL, if not found. - DomNode->namespace_uri() returns NULL, if not found.
fixed the user supplied patch for bug #18792
Add warning about atime requirement for session gc
NEWS update
ChangeLog update
ws fixes
Silence a compiler warning, and returns the SUCCESS value on PHP_MINIT
Nuke warnings on strict compilers
Added a handler for php -r '' for SAFE_MODE
* append emacs footer
* remove builtin exception class
clean this up a bit
Enhance Ilia's recent patch to query the wrapper subsystem to determine if a filename is a URL and thus if safe-mode checks should be skipped.
More on the way to W3C coformance: @- Changed DomNode->next_sibling and DomNode->previous_sibling to return NULL @  instead of false (W3C specs). (chregu) @- Changed DomNode->insert_before() and DomNode->append_child() to conform to @  W3C specs (moving not copying nodes, accepting NULL as 2nd param). (chregu)
Make https:// be exempt from safe_mode checks, just like http:// & ftp:// are.
@- Added set_exception_handler() function for registering a global, @  catch-all exception handling function (Stig) - Added set_exception_handler() function for registering a global,   catch-all exception handling function (Stig)
* allow using the TESTS make variable again to determine which tests are run
NEWS update
ChangeLog update
Make unset($_SESSION['foo']) actually remove the variable from the session, if register_globals is off.
Update email address
Correcting some english in the comment...
marking the fix for Bug #18401 in NEWS
include libxml/xinclude.h to make some compilers happy
A fix suggested by chregu (who doesn't have karma) to re-enable older java JDKs to work.
proto fixes
@ - Added DomNode->set_namespace(uri[,prefix]) (chregu) - Added third optional parameter (prefix) to DomDocument->create_element_ns() - generate prefix from random number, if not provided.
be more verbose
changed default stop bits to a valid value
changed default stop bits
adding dio_tcsetattr and ASYNC support
news for disabling trans-sid by default. but no entry for depreciation of --enable-trans-sid :( (from 4.2.0)
silencing some windows build warnings
coming to think of it, it shouldn't be necessary at all (thanks Jani :)
hot, damn hot.
MFZE1
NEWS update
ChangeLog update
do not include "php_have_iconv.h"
Forgot to update source default.
Comming a fix for a compile error found in Bug #15630 # NOTE this is NOT the supplied patch in said bug for fixing imap_utf7_decode
Silencing a compilier warning on windows
Updating the error message to state a difference between libraries and include.  Also restoring old for search to keep BC on configure
- let DomNode->replace_child always behave correctly (acc. to W3C specs) if the newchild had the same parent as the old child, nothing happened, which seemed strange behaviout to me...
Giving Ilia his props
Adding a check for the binaries rather than just the directories.
DomNode->replace_node moves instead of copies node.
JavaC doesn't take flags like this, Java jar does, pay attention kalowsky
cleaning up the displayed path (removing the ./ in the middle)
correcting these to be only docref's not docref1's
Adding in MSG_RESULT check and \n for configure output viewing
- fix for bug #17771 (insert_before misbeaviour (DOM L2 spec.)) @ - DomNode->insert_before behaves now according to W3C spec @   ie. new_child is moved, not copied. (chregu)
Correcting mis-versioned comment
JAVA_INCLUDE, not JAVE_INCLUDE
A little more clean up on the error messages, with a sample JDK 1.3 path to libjava.so
correcting the AC_MSG_RESULT line
adding in PATH check for JavaJar as well...
@ - Added some namespace support with DomNode->add_namespace(uri, prefix) @   and DomDocument->create_element_ns(uri, nodename) (chregu)
bump up api version number
fix for bug #18196 @ - DomElement->node_name() takes optional boolean argument for retrieving @ -  full qualified name (ie namespace prefix) (chregu)
fix for bug #18395 (DOMXML crash on removing previously created attributes)
@ - DomNode->child_nodes() returns empty array instead of false, if no @ - child nodes are found (chregu)
-remove corrupt entry until change has been completed -minor fixes -honor Derick for his idea error messages to point to the manual
Added trans_sid security risk examples.
Revert from patch added mb_guess_encoding to previous version
Add warning... It seems posting message to php-dev/php-cvs does not work!
Added new function mb_guess_encoding, based on symbols rating
some more doc/lit stuff some more wsdl stuff
MFZE1 (use token instead of global for opcode counting)
Adding in updates for the fixes to ODBC, and markers for the pack/unpack memory leaks
NEWS update
ChangeLog update
As per the suggestion on php-dev, now please #ifdef 0_<username here>
Updating to reflect ODBC additons and default timeout
fixing my misunderstanding of the php_error_docref
Removing the PHP_31 tag... # I'm not sure if the rest of this define can go or not...
-better use external example -say NULL is intended -correct example #hope this is a bit easier to understand and clears it a bit
docref_root and docref_ext for php_error_docref() @Added clickable error messages that direct to a page describing the @error or function causing the error in detail. (Yasuo, Wez, Marcus)
MFZE1
Correcting as per discussion with Iliaa and Edin on efnet://#php.bugs
comments & php_error_docref
some work on the messages
allow target anchor only for docref parameter
cleaning up include files created by PHP_DEFINE when 'make distclean'ed
Missing proto
Single-line comments please
spelling error
Added more folding markers....
bool not boolean
bool not boolean
Use int, not integer.
dir() returns an instantiated object, not a class.
Don't use long as a type
Don't use long as a type
Let to php_error_docref revolution begin
NEWS update
ChangeLog update
use of php_error_docref
fix for extension = "" make php_verror available
-wrong fabsf define for MSVC.6 -MIN and MAX only if undefined #should be last commit to fix all warnings (-:
Point corrected by Markus
Umm forgot to clean up the error messages, and add a stop for looping.
cleaned up to work with OpenLink iODBC better
Implement curl based wrappers. Currently read-only, and http is the only thing tested. Because of this, using them can be controlled by configure:
ups wrong include committed #if anybody objects we would need config stuuf in ligd otherwise but #this way we can use other php functions...for example we could use #php_error_docref....
increase allocation chunks
check for fabsf and floorf in config.m4 msvc.6 needs a define, msvc.net needs special treatment
@ - Added $DomDocument->xinclude() for substitution of XIncludes in     a DomDocument (chregu)
more conversion fixes
Export spprintf() so that extension can link properly on win32.
Minor cleanups to path building and php*.ini search logic. Made path_seperator string static (which solves the lookup problems Sebastian saw).
NEWS update
ChangeLog update
okay confirmation they don't exist in another driver... they're gone
-quick hack to allow compilation under windows again -correct solution to follow tomorrow
Added the php_odbc_includes.h file
The start of adding odbc_data_source() functionality
missed to commit this fix: correct since this is only a flag
try even more to fix those warnings..... #repeat: this code must come from hell
Missing word...
The start of adding in MacOSX compatibility.  No objections on the php-dev list from the sent patch for a week.  Test and fix.
removing the TODOs done already.
Properly implement TSRM parameters to the new log_error function... (Thanks Marcus!) Add a convenience macro for importing a stream from a zval.
try to get this work ...
try to fix those warnings..... #this code must come from hell: will we change code to our coding-scheme?
More verbosity when activating SSL on a socket fails.
Introduce an error stack for wrappers, to help prevent multiple errors and warnings (some of which are bogus) when there are problems opening streams. Implement sanity check on the mode used to open ftp and http connections. This fixes Bug 12004.
Minor fix for html_errors=on in php_error_docref.
Changed my mind. Let users decided whether users want larger chunk size or not. @ Changed zlib.output_compression behavior. If larger chunk is preferred,   enable output_buffering also. (Marcus, Yasuo)
Generally speaking, sending packets less than 1KB is not efficient. We're better to take some benchmarks see if removing extra buffer is actually a good idea or not.
ChangeLog update
change order of initialisation to allow making filename available through $_SERVER variables (Bug #18657)
remove obsolete TSRMLS_FETCH
correct proto
ZE2 fix on calls to mkdir() (thanks Brad Bulger <tater@potatoe.com>)
corrected handling of internal output buffers minor fixs
no need to start additional first buffer when output compression is first buffer
should fix all windows warnings
NEWS update
ChangeLog update
Improved handling of output buffers (see news)\n#No trim for the string parameter...
docref shall either be NULL or a reference to a manual page without an extension or an external reference starting with 'http://'.
forgot to remove another LOCAL_INFILE opion call
Centralize some blocking socket related code. # It's been a while since I wrote this!
syntax highlighting for vim
possible memoryleak
fixed bug #18815
Move unserialize_callback_func description a little
Add unserialize_callback_func to php.ini-recommended.
Added note for output_handler usage. (with Marcus and Adam's fix)
@Copy() fixed to return 1 on 0 byte files. Patch by Ilia A <ilia@prohost.org>.
ChangeLog update
Remove duplicated checks.
No missleading
thunder seems to have stopped
reverting ' to \" to stop stupid discussions although i still do not believe the arguments are reasonable ...
Say FIXME to non function calls and non TSRM builds. Both will currentls not show a default reference.
rename php_error_func<n> to php_error_docref and support Wez idea that solves ToDo requirement to point to PHP Manual in error messages.
those are allways defined -> fixes warning in basic_functions.c
Add ZEND_API to functions
- Make new 'is' operator work with classes only and return false when - the object isn't of the said class or the value isn't an object.
- Bad Harald! :)
Reverting patch. after more investigation this doesn't help in all that many cases, and with Wez's better patch, sometimes degrade's quality.
the order to do things is save-compile-commit no variations and make sure editor and shell are in the same dir :(
fix for #18782 (setting background color without making sure the text crtmut in /new/php/php4untouched on hartmut php4untouched > cvs update ext/standard/info. cvs [update aborted]: received interrupt signal
A full hard disk is no reason to leak memory...
- Add note how php_error() messages SHOULD (rfc2119) look like.
MFZE1
Ups, forgot to remove load_infile tests. Thx to Brad Bulgar
fix for bug #18794,  not checking for actual files
Add some assertion
ChangeLog update
added zend_error messages for deprecated functions inserted zak and me in author list/credits
removed unsued constants (MYSQL_USE_RESULT and MYSQL_STORE_RESULT)
-new functions php_error_func<0> to support unified error messages #read followup
dump memory leaks on shutdown
#Stupid.  Sorry.
#Don't use C++ Comments bug #18783
left on debug infos #overlooked that in diff
Ignore additional thumbnails #anybody interested in expansion to support multiple thumbnails?
make win32 debug output more verbose
more syncing with libmcve-3.0
Sync with Sourceforge CVS
ChangeLog update
A folding we will go, a folding we will go, adding the fold and vim lines to make this easier to follow
Updated proto to match the function (fix compile bustage on osx)
The link lines don't need any of $DEFS, $INCLUDES, $EXTRA_INCLUDES or $CPPFLAGS, right? Removed them. Added frameworks to $COMMON_FLAGS.
sync to libmcve-3.0
Changed Windows 9x detection code (reported by Alex Merz)
Support compiling and linking against Darwin / Mac OS X frameworks
Keeping function prototype variables the same
datatype inconsistency found by Dan Kalowsky
NEWS update
ChangeLog update
Touch file
removed a possible NULL pointer referencing inside an error handler
found a memleak
Removing the imap_popen command... because as Jani puts it "it never worked and it never will work" until IMAP servers support this feature.
Made ldap_connect/bind/unbind() use zend_parse_parameters()
Correct carset if iconv is active #Same solution would work for mbstring - but that must wait
Added php_ob_handler_used to check if a specific output handler is used in c.
ws fix
-keep mimetype until sapi deactivation -move NULL check for sapi_apply_default_charset to proper position.
-fix one warning -send Content-Type Header with charset
revert change - this was due to an bug in php HEAD a few days ago
Add html_entities.c
consistency
:-)
-New function ob_list_handlers @- Added ob_list_handlers() which returns an array of all active output @  handlers. (marcus)
NEWS update
ChangeLog update
need to export var_replace and var_destroy for win32
move html_entities.c to proper place #nice to have snaps.php.net
-Send charset US-ASCII or ini setting default_charset. #After some discussion with Ilia Alshanetsky #But perhaps we should have a look for a mbstring solution...
Add PHP_MINFO_*
-Correct mime_name for HTML-ENTITIES encoding is of cause US-ASCII -Full list of ASCII aliases
Nuke notice (thanks to Arnaud Limbourg)
ups.. :)
- a small fix to mnogosearch extension (affecting UDM_BROWSER_CHARSET)
added meta tag (w3c compliance) Thx to Ilia Alshanetsky (ilia@prohost.org)
-Add new file to windows build
-New encoding/decoding HTML-ENTITIES. #This allows to enforce named and numeric entities in output. #Example:CMS that reads UTF8 or ISO-8859-1 but exports HTML in ASCII. #Using mbstring.http_output=HTML-ENTITIES users receive entities which #can displayed correctly independant of any brwoser side encoding. @New mbstring encoding/decoding HTML-ENTITIES. (marcus)
-Allow double quotes for encoding lists (if used in ini for example) -New parameter 'L' for mb_http_input() to retieve input encoding as  comma separated string. @New parameter 'L' for mb_http_input() to retrieve input encoding as  comma separated string. (marcus)
ChangeLog update
Close pipes to avoid deadlock. Submitted By: Melvyn Sopacua <msopacua@idg.nl>
Cleaning up the imap_get_quotaroot return array to remove useless data
Yup, sizeof() includes the space for the \0
-additional section INI that allows to set special ini settings on call  by adding '-c foo=bar' strings to php call. Each line must have format  foo=bar. This of cause only works for cli version. -made sections SKIPIF,INI,GET,POST optional
# mnogosearch example fix
- UDM_PARAM_STORED mnogosearch parameter has been added to set   stored address.
- Small fix
MFZE1
- An Udm_Make_Excerpt function has been added to mnogosearch extension   to support excerpts while using with mnogosearch-3.2.5 or later.
one last fix for array_shift
ChangeLog update
-use const to clarify code -fix tsrmls build (therefore rfc1867.c)
added money_format() function this is similar to C-libs strfmon(), using the same format string semantics but a different function prototype, so i decided to give it a more speaking name similar to number_format()
- UDM_PARAM_WORD_MATCH icorrect behavior has been fixed in   mnogosearch extension
made sapi_register_treat_data() to support multibyte input encoding translation without MBSTR_ENC_TRANS and changed php_treat_data to php_default_treat_data.
ChangeLog update
array_pop wasnt setting next index
That was not correct..
Reset index when doing array_pop()
Add test for the index resetting.
MFZE1
Ugh
Adding in some BC for users to imap_get_quota() function
Added tests for array_shift/array_pop.
Nuke compile warning.
- Removed the DOS line endings - Changed the '//' comment (this is C, not C++) to /* */ # Brad, use some editor which works..
Use the constant instead of string for locale type.
- free mimetype and statusline early if no longer needed or in deactivation #not setting them to NULL caused the segfault
Need room for the \0 here to avoid an overflow
made array_shift re-index like it did before previous fix
ChangeLog update
perhaps this tiem i will get it right
add support for the curl dns cache
-fix warnings in windows build
-problem with CLI/mbstring/output buffering
WS
Just adding in an error check that seems to work here well.
Reverted the patch..it breaks the original behaviour of at least array_shift.
removing the useless +1's on sizeof() and adding the mail_parameter for the getquot inside the imap_get_quotaroot function.  thank Jani.
NEWS update
ChangeLog update
fixes a typo in the word "limit", adds the null character to the strlen, and seems to make imap_get_quotaroot return the correct values despite cclients claim of "getquotaroot list improper".
fixed bugs 16063 and 16068 increased preformance of array_pop and array_shift
MFZE1 global declare
ftp_close returns now TRUE on success and FALSE on failure.
Commiting Steph@php.net's patch to re-enable touch on Win32 machines
Add --skel=dir option to ext_skel (patch from David Viner)
WTF?  What sort of bogus commit was that?  Fine, here you go.
.
.
@- Adding 'is' operator that can be used to check the type of a variable, @  or its class. (Andrei)
hot, damn hot.
ChangeLog update
add sablotron version, patch by Christian Stocker...
Make PHP part of Z39.50 implementation name
Use type ext rather than raw for ZOOM record fetch
updating the NEWS file # why this wasn't done automagically I don't know...
- nodename is not always set, check if it really is. - make force_ref for aliases as well
First try to open php-SAPI.ini and if it fails fall back to regular php.ini file. For example cli version of PHP will first try to open php-cli.ini in the usual ini file search path and only if it fails will it try to open php.ini using the same path.
style police
NEWS update
ChangeLog update
Allow xmlrpc-epi header files stored under include/xmlrpc-epi
- Copy and paste error -> unify error messages
Added sha1, sha1_file functions.
-add & document ini settings for exif
-decode several MarkerNotes -correct offset information in debug mode @exif_read_data() can decode MarkerNote of several Cameras. (Marcus)
(re)added /ext/ftp news
Commit patch as discussed on LinuxTag and posted to php-dev in June. Disables zlib.output_compression for scripts with image/ content-type header (fixes bug #16109) and makes it possible to switch zlib.output_compression during script execution before the headers are sent. @- zlib.output_compression is disabled for "image/" content-type @  headers and can be changed during script execution. (Stefan)
- Removed the 2 last entries. # Dan, sesser, re-add them again yourself.
No exceptions.
update the handlers struct
Unify error messages
forgot to move imeageellipse out of #ifdef HAVE_LIBGD20
pear -V now shows pear version, php version and ZE version.
* feature/fixed bug
* added "upgrade-all" command
* don't abort install if errors are found in the package, display   a warning instead
ChangeLog update
- Make sure classes are first looked for in the current scope. - Make sure that during inheritance the global scope is searched if the - current one doesn't work.
fixed: output encoding translation by mb_output_handler() in ext/mbstring was not usable when Content-Type is set by header().
Do not leak data connection.
NEWS update
ChangeLog update
Fizing ZTS build
[EXPERIMENTAL] Added functions for asynchronous FTP transfers
Missing Photoshop tags
forgot to make the same change to imap_get_quota...
Minor memory fix suggested by Zeev
fixed cut & paste typo
Adding initial support for PHP imap_get_quotaroot # apparently c-client does not like Cyrus's GETQUOTAROOT return list this # is still be worked out, but all functionality should be there # Return array is still not very organized
(PHP imap_get_quota) updated to properly reflect the RFC 2087 as per  bug #14673 @- imap_get_quota now allows multiple resource values to be returned, as    per RFC 2087, closes bug #14673 (kalowsky, Sander Steffann)
In theory this will fix a problem in Window trying to delete a not closed file
reapply patch for imageellipse beeing wrappet to imagearc if missing # derick: the rest of the patch wasn't removed
@- FTP extension does support (auto)resuming now. Added (Auto)Resuming functionality to ftp_(f)get/(f)put via optional 5th parameter.
use -d output_buffer=0 to workarround the PHP flush() problem
download package if force is set
revert my change from PHP_BINDIR to bin_dir
Use install-as attrib for pear.bat too, so it gets installed in @bin_dir@
Use script arg separator '--' Clean up unused stuff
Use DIRECTORY_SEPARATOR instead of hardcoded '/'
Workarround to the empty $_ENV
use $GLOBALS['HTTP_SERVER_VARS'] instead
Silence NOTICE
all functions based on php_stat are now safe mode aware...
When Britney learns to sing, I will quit this..
NEWS update
ChangeLog update
Allow setting post_max_size and upload_max_filesize in .htaccess files too
- Added parameter to print_r which returns the variable representation   instead of echoing it. @- Added parameter to print_r which returns the variable representation @  instead of echoing it. (Derick)
do not dtor empty elements
-handling of thumbnails in sub IFDs (the Photoshopway for TIFF) -Some Photoshop specific tags #after the last patches this finally fixes all warnings and errors in bug #18405
ChangeLog update
move testing for the alignment values into configure.
break out if there is no data to work on.
is_object() returns FALSE if object is a "incomplete object". Raise E_NOTICE, instead of E_ERROR, for setting/getting properties to/from a "incomplete object".
- removed unused variable
ws fixes.
ChangeLog update
-naming convention -better notices -(D)WORD are unsigned datatypes -started to split tygs into different arrays that would allow to handle vendor specific tags after detection of their markers #BUT simply i do not have any vendor specific image tags...
restore shane to list of members of php group (got lost somewhere along the way)
Removed some outdated lines from init_request_info().
Add autom4te.cache
Remove \r
MFB (patch by Troels Arvin <troels@arvin.dk>). Added pcre include path to global list of includes in order to allow use of external pcre libs.
This should fix those solaris+gcc bugs when --enable-libgcc is not used
ChangeLog update
<insert funny comment here>
Added news item about bug 13866 in response to bug 14752
Switch streams socket abstraction to use a timeval structure instead of an integer to allow subsecond timeouts.
added some more tags from WinXP changed conersion for TAG_FMT_SBYTE & BYTE #second change fixes unnecessary conversion timeout #found by Johan Hultgren <johan@6thgear.se>
By the moment trust that the dependencies are good # Will change the installer when finish the dependecy stuff
added EXIF Version 2.2 Tags
Bundle Net_socket, needed for Net_SMTP
new mysql-functions for PHP 4.3.0
Copy empty_string, fixed crash. # I thought efree() won't free empty_string...
NEWS update
ChangeLog update
unify error messages & notices # this fixes exif again since it was broken by message unify
removed changes for mysql_select_db (optional parameter)
fixed bug in mysql_real_escape_string: allocated 1 more byte for '\0' terminating character
* yeah yeah
* split #3 into two paragraphs again, like the Apache license we once   borrowed it from
Made PHP_ADD_LIBPATH use the $ld_runpath_switch and changed the Darwin link lines in sapi/cli and sapi/cgi to use $NATIVE_RPATHS. This is a tentative fix for #18450.
Move autoconf-2.13 check into buildcheck.sh where we already have version parsing code and (more importantly) proper error checking for missing autoconf.
One should not ignore
* bundle these releases
* moved to /pear cvs
Added pg_fetch_all() that fetch all rows in result. Useful and faster when there is enough memory. @Added pg_fetch_all() that fetch all rows in result. (Yasuo)
* already moved to /pear
* support "zend" dependency type
* moved to /pear cvs
* added missing license element * added "zend" dependency type
* always enable track_errors * added throwError method (simpler version of raiseError)
* license out of "alpha"
* fixed some errors in package.xml
ChangeLog update
proper patch to cvsclean for bad autoconf.
I love rock'n'roll...laalalaa (britney sucks)
reverse bad patch
Hmm. My PostgreSQL returns "bool" for boolean now.
more work for buildconf. forces a cvsclean if using a bad am. more ZE/zE2 tests.
Improve/fix handling of --disable-rpath
NEWS update
ChangeLog update
ws fix
- added a skeleton for new layers - a bit cleanup
This option should be left enabled by default by mistake. --enable-trans-sid option is removed and this option should be disabled by default in php.ini.
Unify error messages
Unify error messages
Unify error messages
ChangeLog update
ext/rpc/com should work now, but there's still lots of work left.
- MFZE1 - MacOSX fixes by Marko Karppinen
Move down open_basedir description.
NEWS update
ChangeLog update
removing tclink extension so it can be moved to pear/pecl
new credit card processing module for TrustCommerce http://trustcommerce.com/tclink.html
We have a macro for checking -R, etc. switches. (exactly same code)
- Remove code which wasn't supposed to go into the patch.
- Rejuggle some code.
Remove evil quotes
even more items on the TODO list
nodename is not always set, check if it really is.
Zend Engine behaviour is affected by setlocale() due to use of locale aware functions like strtod(), atof(), tolower(), toupper() :(
- set_time_limit() now returns whether it succeeded in changing the time   limit.
unbreak the shared build..again
Accoding to safe_mode.h, php_checkuid() has six modes.
Added safe_mode & open_basedir checks for pg_lo_export() @Added safe_mode & open_basedir checks for pg_lo_export() (Yasuo)
Added open_basedir check. @ Added open_basedir check for pg_lo_import() (Yasuo)
This was mentioned already above (with an example too :)
NEWS update
ChangeLog update
Changed configure option order to make it clear option dependecy to users.
Disable input encoding tranlation by default.
Added note for open_basedir
This is the real world..
fix protos
- Before I forget to list it, this was also added.
- Syntactic sugar - Add "public" as a synonym for "var". - Now we have the three P's. You can do:
refine
added mysql changes: - php.ini option mysql.connect_timeout - optional parameter client_flags (mysql_connect, mysql_pconnect) - automatic rollback for non commited transactions
Added support for php.ini parameter "mysql.connect_timeout"
Added php.ini option "mysql_connection.timeout"
ChangeLog update
- MFH of the crap removal
- Commit patch to support protected member variables (by Timm Friebe w/ - some fixes by me). - You can't access protected variables from outside the object. If you want - to see a protected member from your ancestors you need to declare the - member as protected in the class you want to use it in. You can't - redeclare a protected variable as private nor the other way around.
use Zend API to access llist count
mysql_create_db and mysql_drop_db disabled for NetWare
Clean up code a little (Remove a use of magic number) Change/add appropriate comments.
- Really implement bool increment/decrement as flip-flop.
header sounds like http header. header -> header file
NEWS update
ChangeLog update
make this work with wsdl also
a few fixes fix __isfault fix decimal encoding fix a couple crashers in release builds by initializing variables set http to 1.0 since 1.1 features are not really supported
A start towards porting interop tests to php-soap
- Nuke delete(). It was a big mistake to introduce it and I finally - understand why Java didn't do so. - If you still want to control destruction of your object then either make - sure you kill all references or create a destruction method which you - call yourself.
it is not really cold though
- Nuke some unused code
the sun was shining a few days ago
integrate the public keep-alive patch
thttpd blocks in rare circumstances where it cannot write out a small HTTP response (happened at customer sites).  The response is now written out using the standard state machine.
make the sapi module hand off a buffer to thttpd for final data delivery, instead of blocking the whole process
MFZE1
- MFZE1
- MFZE1
Move comment. Remove a skip condition does not required.
IF --disable-mbstr-enc-trans is used OR mbstring is compiled as shared extension, these functions are not available.
ChangeLog update
These options are all enabled by default. (why?)
These options are all enabled by default. (why?)
Kill compiler warning
nuke unused variable warning
Nuke unused variable
Kill compile warning
Really fix it this time..
Needed this to be able to test safe-mode stuff on cmd-line
- Made the trim functions use same base function. (less code :) - Renamed php_trim2 -> php_trim (not used anyplace else, yet) - Made php_trim abit more usable for external use. (not necessary to use   zvals with it anymore)
ChangeLog update
Partially reverted the netware related commit.
Beauify a bit..
Some ws fixes. And removed the problems causing typedef for ushort.
Bail out the given path does not have the libraries in it.
File needed to build extensions for NetWare
Added NetWare changes
Make configure stop if something is wrong with libraries/linking.
Remove unused variables.
missing entry for config.h.in
.libs/ directories are created when building shared extensions.
minor typo fixbug.
- Added predefined constants for the upload errors. - Removed the debugging error (not useful for end-users)
NEWS update
ChangeLog update
ws fix
added mbstring.language option in ext/mbstring.
typo
Prepare package.xml for Net_SMTP
Break up the INSTALL_IT line into comprehensible pieces and fix a bug related to [..] quotes.
the variable interpolation was already subject to IFS treatment, which resulted in the execution of the foremost directory.
yaz.max_links, yaz_log_file setting. User-defined Other Info
Include YAZ support libs (if any)
Use a simple IFS; set step to interprete the httpd -v output
- added missing file
adding patch from http://www.coupin.net/gd-freetype/ which makes images anti aliased (and therefore more readable).
Added traslit test files. Moriyoshi Koizumi <readjust@deneb.freemail.ne.jp>
news-entry-robot(tm)
NEWS update
ChangeLog update
merging parts of the old com extension to the new rpc extension
1) New constants: MYSQL_CLIENT_SSL for ssl connections MYSQL_CLIENT_COMPRESS for compressed protocol MYSQL_CLIENT_IGNORE_SPACES for spaces after function names MYSQL_CLIENT_INTERACTIVE for closing connections after timeout_interactive seconds
* signed these packages
ChangeLog update
- Initialize var properly
Hopefully fixes build with IBM's LDAP library
add file again that andrei deleted by accident (i don't want to blame anyone here)
* add HTTP package (signed)
* tolerate $args being empty
* tiniest optimization
* typo
ChangeLog update
eek
commit petr's sax handler patch
- Add TSRMLS_DC to prototype.
news update
Unify error messages
Unify error messages
- Add warning to is_*() functions if more than one argument was passed
Silence warning
Unify error messages
These two can not be set in script. (so that they would have any effect)
a little more whitespace fix
fix the line ending problems in the files
NEWS update
ChangeLog update
import php-soap library from sourceforge
fix win32 build
* added "pear sign" command
* use System::mktemp * check if an install is about to overwrite existing files belonging   to other packages, bail out if not in "force" mode
* don't set include path if running 'pear.in' without substitutions   made by the installer * sort command names in help output
* made rebuildFileMap method public, added caching and checkFileMap method
Let 'pear build' work on windows for building pecl extensions.
* use System::mktemp rather than PEAR_Common::mkTempDir
* silence warning
- Path which should improve previous fix.
- First try at solving problem with different objects being allocated the - same id.
@ - Added domxml_node_namespace_uri() (Rui Lopes).
 - fix #16290
cleanup
name length should be strlen+1
Allow for 'class Namespace::Bar extends Foo' syntax. Patch by Timm Friebe <thekid@thekid.de>.
ws fix
PHP_EVAL_LIBLINE must not reverse the order of libraries.
ChangeLog update
Added missing .libs entry
spelling fix
add local XMLRPC cache
- Consistent error messages
ChangeLog update
nuke another instance of newline suppression
fixed shift_jis character corruption including 0x5c as second byte following a slash on uploaded filename.
some seds want to see a newline, so we give them a newline
Remove remainings of bsd_makefile
merged in updates from SF project.  bring php repository up to date with xmlrpc-epi version 0.51
* folding fixes
* define PEAR_ZE2 when running with Zend Engine 2
* fix segfault in case of odd version numbers
(PHP version_compare) added "alpha" and "beta", make tests pass
NEWS update
ChangeLog update
1. PHP_CHECK_FUNC(func, lib1, lib2, ..., libn) searches for    func and __func using LIBS, and if unsuccessful, searches    each specified lib.  Defines HAVE_FUNC, if found.  If func/__func is    found in library foo, HAVE_LIBFOO is defined.
* Remove http:// from the proxy server string.
@- Added optional 3rd parameter 'recursive' to ftp_rawlist() which will @  do 'LIST -R' instead of 'LIST'. (Jani) # tested too..and it even works. :) # (removed that Z_TYPE_P() pollution also..)
Moved the cgi link line to sapi/cgi/config.m4 and stopped using libtool on Darwin on it
Upgrade to the version shipped with automake-1.6.2
Generate content-type header, if the user did not specify one of its own.
ChangeLog update
- Let's be tad more verbose what's happening during 'make install'
Removed unneeded check for MBSTR_ENC_TRANS
Added MBSTR_ENC_TRANS to allow compilation and linking under win32
Please note that you need to use 'int' as a length type when fetching strings.
Adding _RU files to project
Adding missing prototype
fixed shift_jis character corruption including 0x5c as second byte on uploaded filename.
formatting fixes
fix bug #17963
Add CRLF after complete HTTP reply header
Use "Status: %d" instead of "HTTP/1.0 %d X" in the CGI SAPI module as per the CGI RFC.
fix typo
Add sapi_header_op interface which supersedes the sapi_add_header and _ex calls.
- fixed bug in hwnew_new_document_from_file
ws fix
NEWS update
ChangeLog update
Add default arguments to new internal mail function.
Make sure To addresses are parsed correct with RFC822.
Oops. Last commit reverted some of sebastians changes.
-fix datatypes for some vriables -fix comment for function exif_process_CME -force return parameters to be passed by reference #this should kill warnings on win systems as found by Edin
Switch from imap_sendmail.* to sendmail.c under Win32
use access instead of manually determining file permissions..
Switch from imap_sendmail.* to sendmail.c under Win32
These files are no longer needed as the imap module will use the standard sendmail function under Win32
- Be nice to users and allow them to check if the mail was send
- Disable 5th parameter to mail in safemode @- Disabled the fifth parameter to the mail function in safemode. (Derick)
make 'remote-info' use package.info. add deps to 'list-all'
Avoid error messages, if the variable is empty.
ChangeLog update
- You don't need libtool to build sapi/cli on Darwin. - We don't need libtool to build sapi/cli on Darwin. - You want the sapi/cli build line to be in sapi/cli, not Makefile.global. - We want the sapi/cli build line to be in sapi/cli, not Makefile.global. - He can go about his business. - You can go about your business. - Move along. - Move along. Move along.
- No C++ comments
In Darwin we have this thing called two-level namespace
outcomment everything related to domxml_elem_set_attribute_node(). This function is not implemented and shouldn't show up at all for the time being
- Export zend_object_get_address()
"-" is not acceptable in a #define (i have since discovered). converting all - to _ is the right thing to do.
ChangeLog update
- Remember to document autoload when I have time.
Main script should not be parsed when (include|require)_once()'ed, #17720 # Derick, MFH?
- MFZE1
- More error messages cleanup
This does not work with AIX find..
ChangeLog update
- Upgrade bundled libtool to 1.4.2. Following stuff mentioned at:   http://www.gnu.org/software/libtool/news.html
- Get ready for alpha2
Unify error messages part 1
- Invalid -> Undefined
- Add missing semi-colon.
- Improve some error messages.
- Revert previous fix.
fix leak
Search example (which demonstrates using of mnogosearch API) is updated.
- Change E_ERROR -> E_COMPILE_ERROR where needed.
fixes extensions with "-"
make this build too.
removed these files from build.
really fix it.
This is not done anymore. (should fix win32 snapshot build too)
fixes bug #17453
Missing TSRMLS_* stuff
Better fix it here too..
ChangeLog update
Oops, extra pipe snuck in
remember the value of ext_shared passed into the --with-pdflib, since it gets overwritten by future PHP_ARG_WITH checks in the same m4 fragment
- WS fix
Mention Apache 2.0.40.
- More gotchas...
Require 2.0.40
- YAAC: I hope this is the last one!
t1lib.h needs to be included here now.
Moved all gd.h related stuff to gd.c
Remove unnecessary #include's
Remove unused files.
Unify error messages
Unify error messages
ChangeLog update
Consistency fix.
Update configure line in phpinfo() after re-running configure without running make clean first, bug #18012.
Unify error messages
Unify error messages
- Remove \n
- Cleaning up the mess..these are NOT zvals.
ChangeLog update
use LIBNAME consistently.  Useful on systems like OpenBSD where the curses library is called 'curses' and not 'ncurses'
the ncurses_getch() is in the wrong place and never gets run
Better not pollute the EXTRA_LIBS with libpaths.
-xbuf_resize does not need to have return value
- Implement Andrei's request for disabling memory leak reporting in debug   builds. #- Andrei: I can show you the logs :)
- And the SAPI too
- Update credits
- Update TODO
- Nuke some TSRMLS_FETCHes
silence the warning when glibtool is not found..
- Let make clean follow symlinks (tested on Linux, IRIX, Solaris, FreeBSD   and Tru64)
- Autoloading support based on patch from Ivan Ristic. - Again I hope this feature ends up working well because if it doesn't we - might need to nuke it. This only works for global scoped classes and it - will never work for sub-classes so don't even ask!!!!! - Just define an __autoload() function in the global scope and it will be - called with the class name as the parameter if it doesn't manage to find - the class.
- Centralize global class fetch
- Unify error messages #- This is the last one for today... can't really stand another #  get_active_function_name(TSRMLS_C)  :)
Unify error messages
Unify error messages
Prefer glibtool over libtool for Mac OS X compatibility
Unify error messages
Unify error messages
Unify error messages
Unify error messages
- No idea why this wasn't crashing before.
Unify error messages
- Unify error messages
ChangeLog update
map imageellipse to imagearc if missing fix warnings
bits/channels for gif
change the include_path setting to be in the php space instead of doing in the interpreter line (seems to break FreeBSD)
should compile on windows again
include libxml/parserInternals.h
imageellipse is removed in 2.01 #maybe someone reintroduces this one in bundled lib?
- Update NEWS
NEWS update
ChangeLog update
Minor cleanup.
modified test3 (old one had a warning)
missing return value
cleanup
- MFZE1 (Turn off fast cache until we make sure it performs well.)
register IMAGETYPE_<xxx> constants in image.c as they are needed there.
- Make functions not exist when they are not available. This means you can   now safely do function_exists() on all gd functions.
Revert to php_4_2_1 to get sablotron working again. # Sterling, please fix the DOM stuff asap so we can enjoy # the new functionality!
@GetImageSize now allways set fields unknown to 0 and new Imagetype @iff. (Marcus)
- More fixes (warnings, bug fixes etc.)
added some points to the todo list
- Revert patch which checks at run-time if you're allowed to assign - certain values by reference. - We still need to find a solution for cases when this shouldn't be allowed - as it might cause leaks.
IMHO, ZTS should no longer be labeled experimental.
@ Add runtime Apache2 thread check to ensure we don't run a non-threaded @ PHP inside a threaded Apache2 MPM.  (Rasmus)
* Rephrase help text.
@ Turn off ZTS if Apache2 is using the prefork MPM. (Rasmus)
- MFZE1
- Don't use cache if we're using ZEND_MM
- Hardcode alignment to 8. We might need a configure check for this.
- Improve memory manager to allocate small blocks quickly.
No need to have multiple AC_CHECK_FUNCS calls
- Don't keep allocated blocks in a linked list if we're in non-debug mode - as now the memory manager takes care to nuke all leaking blocks.
- MFZE1
iterate through passed arguments
ChangeLog update
Allow dynamically compiled extensions to use gettimeofday() on win32.
standardize a bit (we know its enabled :)
explain difference between sprintf, snprintf and spprintf #before complaining snprintf is often used wrong: #snprintf does not terminate the buffer but most people expect it #that could be a security isuue at somewhere
#some sentences about the functions
-freeing memory for pbuf=NULL #should have been one commit but to many versions during tests
-allow pbuf = NULL in case of NO MEMORY, too
-allways terminate buffer -allow pbuf parameter to be NULL for buffer size calculation
some people would prefer to be able to specify. So, we specify --ZendEngine2 for ZE2 builds, Zend for the rest.
changing this to mv ZendEngine2 Zend instead of shell logic that isn't portable.
- Almost completely implement realloc(). It now resizes in place when - possible.
-unlimited php_printf
-imagetype2mimetype renamed to image_type_to_mime_type
-new test for WinXP tags
-fix test results
-make it run again
-compiler warning (missing data type)
-corrected test result
NEWS update
ChangeLog update
-exif version -missing constant (and notice) -corrected error messages
@exif_read_data returns mime-type now for image and thumbnail And exif_thumbnail now optionally returns imagetype. (Marcus) #So now you can use imagetype2filetype with exif_thumbnail
@GetImageSize now returns additional index 'MimeType' and new function @imagetype2mimetype to convert php imagetypes to mime-types. (Marcus) #the reason why i export php_imagetype2mimetype is that i use that for #exif, too. Followup example will explain why.
ws fix
Better not include ldap_parse_result() and ldap_start_tls() at all in the symbol table when they are not usable. Makes it possible to check on their usability.
Made php_admin_value work outside <location> and <directory> blocks.
- MFZE1
- Revert WS changes
- This shouldn't have snuck in.
- Stop using persist_alloc().
- Nuke persist_alloc().
Added test for ldap_start_tls_s()
small fix in preprocessor directive
NEWS update
ChangeLog update
Made pgsql compile on win32 again. All defines regarding libpq capabilities are kept in ext/pgsql/pgsql.dsp where HAVE_PQESCAPE is already defined.
* typo
removed CONST_EFREE_PERSISTENT so that andi can commit his patch
removed CONST_EFREE_PERSISTENT so that andi can commit his patch
removed CONST_EFREE_PERSISTENT so that andi can commit his patch
- Added a new parameter to the header() function which overrides the HTTP   response code. @- Added a new parameter to the header() function which overrides the HTTP @  response code. (Derick)
* bending over backwards to find sensible defaults
ChangeLog update
Make this extension compile as shared extension too.
ZTS fixes # if this breaks something, please let me know... i've got really no # idea what i'm doing but this fixes the ZTS build :)
oops..
make "make snapshot" work again.. # is this actually used?
fixing to permit builds with ZE2
- take version of libxslt and libxml from runtime variables to make   sure the reported versions correspond to the actually installed 	versions of libxml and libxslt
ChangeLog update
- Force params to version_compare() to be strings, otherwise some   comparations will fail (ex. 0.9 will be equal to 0.90) - Other minor cleanup's
Do NOT allow install packages with errors in its description file
correct handling/generating of php_mbstr_default_identify_list
- This was also supposed to be part of the previous ZEND_MM commit :)
- Oops, this was supposed to be part of the previous #ifdef ZEND_MM change
- Use #ifdef for ZEND_MM
- Make sure MAX is defined
- Make domxml_xslt_process() working again.
Made the API versions appear better on phpinfo();
No need to check for allow_url_fopen here. #This closes two bugs which I cannot find right now courtesy our buggy bug #database.
NEWS update
ChangeLog update
Use correct macro for boolean ini values.
Made array_unique() always keep the first occurrences of duplicates, making the behavior easier to understand, and maybe more useful.
- Nuke use of persist_alloc(). This can't be used with a new memory manager
- MFZE1
fix: appending the default charset to text/ content types never worked fix: removed double free
 - WS-fixes
keep fingers away from already freed memory.
- fixed bug in enclosure handling (was still hardcoded to '"' in one place) - added possibility to pass empty enclosure if you really don't want one
Patch by Michael Sisolak <msisolak@yahoo.com> to make header() honor the replace parameter. Closes #16458.
- oops... read before commit :)
- It doesn't work from within a script... so we disallow it
"Release notes"++
- User proper macros as suggested by Marc.
NEWS update
ChangeLog update
ZTS fix.
Check for +/- infinity in base_convert (bug #14807).
- Improve speed of alignment calculation
- Save space per-allocated block.
# Mnogosearch extension update. Now it should work with # latest mnogosearch-3.2.5.
Dropped case insentive ext search in PEAR::loadExtension()
Typo in the folding mark
* php-4.2.1-installer.exe for Windows is installed in c:\php by   default, but it has PHP_SYSCONFDIR set to c:\php4.  workaround.
Use the new PEAR::loadExtension() in checkExtension() instead of the "hack"
Added PEAR::loadExtension($ext) - OS independant PHP extension load
trailing ws
making printf/sprintf locale-aware without external dependencies
fixed return types for ucwords/ucfirst when passed an empty string
* doh
* add xmlrpc request to debug output (verbosity level 4+)
Added Dependancy check on XML - previously pear installer failed silently
- Made dbase_get_record() and dbase_get_record_with_names use same backend   function as they both do same thing, just the output is different.
ChangeLog update
reverted patch depending on not yet commited work
- Add zend_mm.c
- Remove debug code which doesn't work anymore and add headers.
- Commit an initial version of a home made memory manager. - It's just for seeing if this would be an advantage to PHP in MT - environments. If this is to become production material there is still - a long way to go.
Install the pear command under the bin_dir setting intead of the fixed PHP_BINDIR
make sprinf() locale-aware (Bug# 12647)
Made the tests (and not only run-tests.php) actually use php.ini-dist, and removed unused php.ini file.
- List new session.use_only_cookies option.
* set include_path when running "pear"
ChangeLog update
- Be more verbose which index causes the warning.
- Don't forget to close the stream.
workaround for a win32 memleak # this definitely has to be revisited ! # maybe we should use winsock2 and overlapped IO
workaround for a win32 memleak # this definitely has to be revisited ! # maybe we should use winsock2 and overlapped IO
Add new target directories.
NEWS update
ChangeLog update
- Update Win32/mail changes, mention bundled gd library.
* if verbosity config is > 3, display xmlrpc response * another bugfix
Add gd_bundled to php_modules.dsw.
remote list and remote listall, can now list non-stable packages if you set prefered_state to something else
Use some more sane paths for win32 version.
- Remove freetype.lib and HAVE_LIBTTF; we're always linking against freetype2   anyway.
- renamed domxml_parser_reference to domxml_parser_entitiy_reference - renamed domxml_cdata_block to domxml_parser_cdata_section   (more consistent with the domxml_create_XXX methods) - added domxml_parser_processing_instruction(target,data) - added domxml_parser_namespace_decl(href,prefix)
- oops, that didn't even compile - added domxml_parser_reference(reference)
@ - Added preliminary SAX-Input support. It's now possible to build a DomDocument @   with SAX-Events (added domxml_parser_start_document(), domxml_parser_end_document(), @   domxml_parser_start_element(tagname[,attributes]), domxml_parser_end_element(tagname), @   domxml_parser_characters(characters), domxml_parser_cdata_block(cdata), @   domxml_parser_comment(comment), domxml_parser_get_document(). (chregu) # More Sax Events to be implemented. Sax Output (from file or DOM-Tree) is #  not that easy to implement, but possible...
Remove unused local variables.
NEWS update
ChangeLog update
- Initial MSVC makefile to create a php_gd2.dll based on the bundled libgd,   works out of the box here with the right image libs and headers. # Edin, I think it's your turn now. Feel free to tweak it for your needs. # Could only compile Release_TS so far (no debug .lib files)
- We don't need the check here because the regex makes sure we never have \r\n   at the end of the header.
Typo: == instead of =
- should fix bug#17753
Change a little the dep db structure Comment the code and some clean up's
More work on the dependencies DB (still not tested/used)
- Added DOMXML_LOAD_DONT_KEEP_BLANKS as possible mode, if one wants really nicely   formatted XML-Documents (but this can have sideeffects, if you depend on whitespaces..) - bumped up domxml-api-version number.
@ - Added better error-messages (3rd parameter) and validating of DTDs (2nd parameter) to @   domxml_open_mem(string xml[, int mode[, array errors]]) and domxml_open_file(string filename[, int mode[, array errors]]). @ - Added domxml_doc_validate([array errors]) for validating existing DomDocuments with a DTD.
ChangeLog update
* comment typos
* set working version to 0.91-dev
* minor cleanup
* this should have been done last year :)
This patch adds ability to capture string offsets in the preg_match_*() results.
typofix
cleanup
set_error_handler() should take methods as callbacks. Also fixed it to report invalid callbacks.
Properly return the result of __call() handler.
Attempt to make pear.bat work better under Windows
fix for bug #10616 -> mktime() with negative date offsets not working on MacOSX
This option enables administrators to make their users invulnerable to attacks which involve passing session ids in URLs.
NEWS update
ChangeLog update
- Those have been implemented already.
- Add some recent observations with bz2.
- Add missing Id tag.
- Always \0 terminate data returned from _php_stream_copy_to_mem().
- Don't show debug_backtrace() in the trace itself. - This patch is a bit ugly because the whole code itself is pretty complex - and hard to re-order.
Forgot one
Sockets currently works great with all compilers on Solaris Update TODO
now it works on streams (plus some debug code removed)
macro definition fixed, guess it was the usual kind of cut&past bug?
Disable installing pear when --disable-cli is used since pear installer needs cli to function.
- These things have been done already.
Add __delegate().
@Impelemented timeout functionality, and fixed error handling of fsockopen() on win32 Also fixed error handling on unix (micropatch)
ChangeLog update
- Reverted last bogus commit and fixed the credits in NEWS.
- Typo.
@Add --with-mysql-sock option (James Cox)
- Revert zlib.lib patch. # Only add it after ext/mysql takes really advantag of it on win32, needs # also modification in mysql/libmysql/config-win.h
pooling and singleton finally work
new testcases
added TS_HASH macro
Adding ini setting for max_procs
Adding ini setting for max_procs
mysql need zlib.lib now
# Mnogosearch new function calls fixes
 - whitespace fix
#Undeprecated attribute access methods
mysql need zlib.lib now
fix the build
- MnoGoSearch extension compile fix with mnogosearch-3.2.4 and 3.2.5
- WS fix, damn win32.
fix the build
# mnogosearch update. Does not compile at this moment, but # there are not so many things left to fix...
ChangeLog update
Commented out old unused stuff
Moved to pear/Archive_Tar/scripts
if (!dl(php_gtk)) die("Unable to load the php_gtk extension\n");
Beautify config-show output, some wrap changes and fix small issue with _tableRow() with line counting
cleanup
displayLine() -> outputData()
- outputData($data, $command) + outputData($data, $command = '_default')
reflect the new abstraction changes in the demo layer
- using stas' abstraction now - layer can add individual ini settings now - classentries for the loaded rpc object are created dynamically now   class hirarchy looks like: rpc<-[layer]<-[object]  (e.g. rpc<-com<-adodb),   thus the whole class tree is reflected into php - added user-functions to mark an object as a singleton and as poolable
pg_escape_* functions were not available on win32 due to a missing define
only check for an available class entry instead of the std_object_handlers on some places
Don't use headers if the module contains only one phpinfo() entry, just stick to ordinary rows.
Made phpinfo() show if we're using the bundled version of GD
dont test for the socket -- enables installs over NFS etc. # my previous commit was the revision before the fixed one (ie, i had the fix) so apologies for that.
Make RAND_RANGE() an API macro.
De-messify
Cleaned up the mess. Now it actually works too. # TEST BEFORE COMMIT!!
NEWS update
ChangeLog update
add modes to list-all. fix a mergerbug
too many flushes are bad
Hopefully fixed a couple of problems with destination paths: - Bug #17529 - In Windows getting <pear>\/\<file> - Documentation under <doc_dir>/Package/Package/
*** empty log message ***
- This should improve performance on Windows
- Add a loop unrolled version of the hash function and a bit of an - explanation about our hash function (Ralf S. Engelschall)
@ added support for --with-mysql-sock so people can specify it (eg, NFS compiles, etc)   changed the default mysql.sock location to use the one from the RPM. Added /usr/local   locations to the search list. (imajes)
- Since streams are always enabled, instead of just printing 'enabled' we tell   what streams are currently registered.
NEWS update
ChangeLog update
Experimental dependencies database handling functions (not yet in production)
Unbreak build by setting PHP_PREFIX to c:\php4 for now.
Fugbix typo.
Updating embedded libmysql to version 3.23.48
Beautify remote-info
Added aliases to make attr_node access functions more consistent. Old access functions are now deprecated. CVS: ---------------------------------------------------------------------- CVS: Enter Log.  Lines beginning with `CVS:' are removed automatically CVS: CVS: Committing in . CVS: CVS: Modified Files: CVS: 	php_domxml.c CVS: ----------------------------------------------------------------------
- Reapplied the "treat umask as octal in "config-set"   command" Stig's patch - Ported the config-help command to new UI API
more wrapping cases
* fix SHLIB_SUFFIX_NAME define for Windows
@New constants: PHP_PREFIX and PHP_SHLIB_SUFFIX (Stig)
Remove debug code
More info output retouchs
* get rid of pearize
Make "info" full human friendly (in deps list and lastmodified)
Make $_deps_rel_trans and $_deps_type_trans globally avaible: moved from Command/Package.php -> Command/Common.php
Be nicer with the help
ws
 - Stay always in buffer
Put back the "info" command in its full state: "Displays information about a package. The package argument may be a local package file, an URL to a package file, or the name of an installed package." Command "package-info" depreciated (again)
ChangeLog update
Add RFC on delegation.
Add control on IB version. ibase_add_user(), ibase_modify_user() and ibase_delete_user() are available with IB6 or later
Add control on the IB version. ibase_add_user(),ibase_modify_user() and ibase_delete_user()  are available with IB6 or later
- Update
- Remove C++ comments.
- Revert Ws thingy. # Lazy bastard :-)
Changed the configure option to be --enable/disable
* prepare 0.90
* add "nobuild" option to installer (-B or --nobuild option to CLI frontend)
* remove debug output
* when building, look for "package-version" subdirectory, needed for   building stuff straight from tarballs
* add PEAR_COMMON_PACKAGE_NAME_PREG constant
* make displayFatalError work again
Forgot that one
Wrap table contents # Sorry could't wait for that commit :-)
Implemented "pear info <Installed Package>" command
Split the doPackageInfo() in doPackageInfo() and _infoForDisplaying() (this last one can be statically called and is used also from the "info" command)
package.xml file for the PEAR Mail package
That will really avoid PHP warnings
# More mnogosearch updates
ChangeLog update
ws and indent fixes
Remove unused local variable.
- Allow overloaded objects to receive the method name in its original - case.
- Headers are now rewritten to always have \r\n line endings for SMTP.   Also automatically removes superflous line breaks at   the start and end of the header. # http://cr.yp.to/docs/smtplf.html is a good read about this topic.
# mnogosearch work continued
fixed multiline header detection (':' is valid within following lines) fixed fill_buffer to fill the buffer always completely
more mnogosearch compilation fixes
fixing some crashbugs that can be triggered with bogus uploads.
MnoGoSearch extension fixes to compile under latest mnogosearch 3.2.4 and 3.2.5. Still does not compile with them, but the work still in progress...
NEWS update
ChangeLog update
Sync with openbsd glob.c 1.19
Removed some leftover debugging code.
Added function pcntl_alarm(). @- Added pctnl_alarm() function. (Edin)
* sort package names in "pear list"
#Whitespace fix: Sorry
Bug fix to #17560 submitted by Rob Richards
Added persistent connections, and automattic reconnect on lost connections. Requires Phoenix 1.0
fine tuning
NEWS update
ChangeLog update
- Move macro code into distinct function for easier debugging as suggested by   Andi.
Make sure len is defined here
- Add note about IIS/CGI and cgi.force_redirect gotcha
NEWS update
ChangeLog update
* fix bug that was re-introduced during merge
- Only add the To: field with the $to parameter if we don't have it in the   custom header. This was the behaviour < 4.2.x (but it was broken, this one   isn't). # last commit for today, promised.
- Revert fix for #14407. The From: header field IS different from the   sendmail_from field which is in fact the retturn path.
- Try to fix most of the buffer overflows and dynamically allocate memory where   applicable.
Use ZOOM API for newer YAZ versions.
report error when YAZ cannot be found
Added "Vary: Accept-Encoding" header to zlib.output_compression compressed output as with obgzhandler(). @ If zlib.output_compression is enabled and a page is compressed @ a "Vary: Accept-Encoding" header is added. (Stefan) # obgzhandler() sends this header, I think it is recommened by # RFC 2616. If there are problems (e.g. with some browsers) # it should be reverted.
make 'pear remote-info' work with CLI
make 'pear search' work with CLI. fix a typo
- Finish implementation of custom smtp port (introduces "smtp_port" ini config).
- Rephrase comment
- Classig problem: right idea, wrong pointer ...
silence unlink() and rmdir(). fix a bug where  wasn't set due to wrong ini setting
* merge NEW_UI_API branch
ChangeLog update
WS change to make very old compilers/preprocessors (e.g. HP/UX 9) happy (thanks to Andreas Ley for recognizing this).
- Reapply netware patch
Put Netware header and comment back in.  My CVS revision id got messed up somehow.
Update cracklib path and comment it out (thanks to Urs Gehrig for the hint)
Makring function declarations match implementations (ZTS compilation)
NEWS update
ChangeLog update
Oops
@ Renamed getallheaders() to apache_request_headers() and kept @ getallheaders() as an alias to it.  Also added apache_response_headers() @ which returns the current response headers from Apache. Renamed getallheaders() to apache_request_headers() and kept getallheaders() as an alias to it.  Also added apache_response_headers() which returns the current response headers from Apache.
fread already detects EOF
Be able to handle strings as well as arrays in _multipleToStruct()
- Make mkTemp() automatically removed temporary created files   or dirs at script shutdown time - Remove unnecesarry PEAR inheritance - Some PHPDoc fixes
- Add zend_objects_API.* to dsp
Add zend_objects_API.c to project.
Changed PHP_EXPORTS to DOMXML_EXPORTS as Edin Kadribasic suggested
Generalize object storage and reference bookkeeping
added wez to the com extension
added wez and ordered names alphabetically
Removed ugly code done as part of NetWare change, upon Andi's advice. Now, the typecasting is done for all platforms.
- Don't issue a notice when no file was uploaded
initalize variable in domxml_doc_document_element()
defined PHP_EXPORTS for exporting php_domobject_new()
added the ability to use new keywork with domxmls objects "new DomDocument()"   instead of xmldoc. This also allows you to create nodes without having   a whole document "new DomElement("foo")".
NetWare related changes
NetWare related additions / changes to build mod_php
NEWS update
ChangeLog update
#forgot something
@ Added missing AddRef() calls in the COM extension. This should @ fix weird behaviour (in particular with ADODB). (Harald)
Add missing .cvsignore
- Tell the user why his session doesn't work if he uses custom session_id()s.
- Typo # Zorflix!
- Give some useful updates to Win32/Apache/PHP4 installation. Also mention   strace for advanced users. # Probably a lot of spelling/grammar errors, feel free to correct, thx.
 - add testcase for PEAR::delExpect()
NetWare changes
NetWare changes for ZE2
That macro is and always was hopelessly broken, which is why it's now deprecated.
NEWS update
ChangeLog update
 - minor improvement of readability, #thanks richy ;)
 - added delExpect() API method. It allows to unset one or more expected  - error codes.  - requires _checkDelExpect() (private) which I added as well.  - inspired by chregu (PHP-Deluxe, page 75)
Added GB2312 alias for CN-GB
Changes to build TSRM on NetWare
Change to build on NetWare: TSRM_CONFIG.H not required
Changes to build Zend on NetWare
ChangeLog update
SDK directory path change
Basic NetWare changes
Makefiles and batch file required to build Zend and TSRM
*** empty log message ***
* 0.11 release coming up
* drop package-info command (deprecated by "info")
* update test
* update 0.11 release notes * move build logic into PEAR_Builder
* disable *&$^*#@ runtime ^@#*&$@ magical ^*!@@!! quoting
* sync up
* disable magic_quotes_runtime (what a broken concept!!) while   reading config files
ChangeLog update
* fix some errors/warnings * install data and test files now
* added data_dir and test_dir
* moved the --without-pear compat defines to the right place
* change root for documentation files to <peardir>/docs
* treat umask as octal in "config-set" command
* use new Archive_Tar gzip autodetection
* prepare 0.9 release
* fixed a bug in PEAR_Config::set() that broke validation of "set" parameters
* better gzip detection (magic cookie)
- Hope this is the last commit in the series. Make sure that the .h file - also goes into ext/standard. I'm not sure how 4.2.1 was built with these - broken files
- One more try.
- Isn't Makefile.frag being called? (Weird)
- Be a bit more verbose
moved to PECL
* fixes for php without zlib
* make Archive_Tar auto-detect whether zlib is needed based on file   extension (.tar -> no zlib)
- Small update
* update version
* first shot at "pear build" command for building extensions from C code
NEWS update
ChangeLog update
* "info" command
* added config-help command
* drop "any" as a valid preferred_state
* more verbose docs for "verbose" :)
* un-indent description too
* try being smart about de-indenting release notes from the xml
* PEAR_Frontend_Web is coming!
- Small fix
- Update genfiles for new build system
Added "pear -V" (show version information)
* another help fix
- Add empty zend_multibyte.c to allow build with 4.3.0-dev.
Make the error handling work again since the new internal command structure
* Add /me has helper.
* bold column headings
^t
"Help" fixes
* add package.dtd to the distribution
* roll out 0.10
* focus on the present
* add @nodep stuff here too
* be nice to PEAR_Common::detectDepdencencies()
* more work on the dependency detector
* Console_Getopt POSIX fix
* phpdoc fixes (un-break the broken)
Due to the way Zend handles exit() we cannot rely on the return code of php_execute_script.
Made constants persistent and fixed a memory leak.
* POSIX getopt compatibility support (first argv element is the command)
* tidy output a bit
* cleaned up error handling in _installFile
ChangeLog update
* Make rel_trans from doPackageInfo globally available. * Add command "package-dependencies" (shortcut "pd") to list the   dependencies of a package.
* typo caught by PEAR_Common::detectDependencies :)
ChangeLog update
reverted my patch.
reverted patch to support iso2022kr.
Fugbix typo.
- Add a bit of information.
Register STDIN, STDOUT, and STDERR "constants" in cli in cases where script itself is not being loaded from STDIN.
NEWS update
ChangeLog update
TODO++ Check dependencies break on package uninstall (when no force given)
This code adds string offset capturing in preg_split() results. Original patch by David Brown, modified by me.
Add simple test case for proc_open
Added 4th parameter to specify enclosure character. Patch by Dean Richard Benson <dean@vipersoft.co.uk> Spit more meaningful error messages when delim and/or enclosure char is null.
ChangeLog update
Skip POST data if it is empty.
- makedist script for creating Engine 2 distribution. - Hopefully we can get a preview out in the next few days.
Trigger an error if the run-test.php file is not found Make the run-tests pear cmd run with the CGI SAPI
Test first if the package exists before comparing the version (fix the version_compare() segfault)
ChangeLog update
Make pear -vv XXX set the XML_RPC debug flag
Add README and CREDITS...
Add documentation comment for properties in com_print_typeinfo
Enhance com_print_typeinfo. The main expected use is like this, for figuring out what methods are allowed for a COM object:
*** empty log message ***
Correct usage of convert_to_string_ex which is not allowed to zval*
Reformat some comments.
- Make sure that COM and VARIANT resources are returned as resources   rather than longs. - Make the IDispatch implementation a bit more generic (and   fix my mess of pointers). - Add new com_message_pump() function that acts like an interruptible   usleep() that processes COM calls/events. - Add new com_print_typeinfo() function for "decompiling" the typeinfo   for an interface into PHP script.  This is useful for generating a   skeleton for use as an event sink. - Add new com_event_sink() function for sinking events from COM   objects.  Usage is like this:
ZTS issues fixed
not beautifull (yet), but should fix ZTS builds
files that are not installed should be removed from the registered file list (TODO--)
* show installed_as instead of a "calculated" path for installed packages
* add TODO comment
Add HAVE_MBSTR_RU support for Win32.
ZTS fixes.
* disable wrapping for now
Added russian codepages (koi8-r,cp1251,cp866) support.
Some minor error verbosity updates
doListRemote -> doRemoteList
Make the installation of a package fail when _installFile fails and "force" is not set
* list command no longer displays test and data files when listing   installed files
* package-list command no longer needed ("list" does the same thing and   more)
* rename shell-test shortcut to st (was stest)
* added more shortcuts
* implemented shortcuts ("pv" for "package-validate" etc.)   do "pear help shortcuts" to see what shortcuts exist * renamed "list-installed" command to "list" and made it able to   list the contents of installed packages as well as tar/tgz/xml files * added some more/better command docs * fixed up the synopsis part in the help output * display option parameters (--foo=bar, where bar is specified in   'shortarg' as for example 'f:bar') * renamed list-remote-packages to list-remote * renamed remote-package-info to remote-info
* make infoFromAny actually work :)
* better wording
ChangeLog update
* disable debug in XML_RPC fallback
Use the GIT for inter-thread marshalling.
- Add safe_mode/uid and open_basedir check to zip_open() (closes #16927).
- ZTS gotcha
- Add open_basedir check for all functions using php_stat() (filesize, stat,   etc), closes #11563.
this way it even compiles #blame me if i did something wrong, i didn't test it ;)
integrating wez's patch
* new command setup
* upgrade bundled XML_RPC package to 1.0.3
* new installer rule that does not depend on bash
* _infoFromAny goes public!
* some verbosity changes: 0 - only errors, 1 - status report when the   install is done, 2 - show each operation, 3 - show file operations
* no output in verbosity level 0
* added PEAR_Config::removeLayer()
* remove getCommands() from here * added options to "pear cvstag": -q -Q -d -F
* support multiple -v and -q options
* forgot to update the release date
* fix fix
* merge 0.4 files from /pear/Archive_Tar
* prepare 0.10
* remove run() from this class
MFZE1 (Expose more C++ APIs)
This somehow got undone when I committed the rest...
Add activescript sapi to the workspace
Implement ActiveScript interfaces. This allows use of PHP in:   Client-side script in Internet Explorer   Windows Scripting Host   ASP and ASP.NET pages It's mostly working... give it a go. You will need to regsvr32 the php4activescript.dll manually.
Protect C code with extern "C"
Added generic COM wrapper for PHP objects.
Added missing key 'doc' for -Z help
ChangeLog update
* no need for getCommands() here
* new command setup
* typo fixes, wrapping
* install pear.bat on Windows only
Make this actually work somewhat better..
Give due credit to Markus.
* compat fix
- Mention the availability of glob().
Put "pear help options" working again
Put "pear help command" working again
get_cfg_var("get_file_path") didn't work correctly when an alternative php.ini _file_ was specified using -c
Added glob() support for windows.
It's get_cfg_var() not cfg_get_var()
Cleaned up run-tests.php, and fixed it on linux/unix # and probably broke it on windows :)
* new command setup
* support platform-specific files
* take uname as optional constructor parameter
ChangeLog update
Typo fixes
DO NOT use C++ comments!
- delete attributes as well in php_free_xml_node - more consistent naming in phpinfo()
added "domxml API version" in phpinfo() output.
mem leak fix for domxml_dump_node
fixes memleak in html_dump_mem
rename the object name for comment nodes to domcoment
WS fixes
This should fix a big bad memory leak in freeing the nodes at script end.
ChangeLog update
Improve readability of the header send function
- Stuff all Win32 mail() changes together.
Credit where credit is due.
Re-add "tests" project - this is the only change to file.  For some reason MSVC chose to put "" around all the project file names.  (Why?  Ask Microsoft :).  Perhaps different patch levels on MSVC6?).  These files are not hand-edited.
proto tweak
Reverted the last commit which moved all the projects around.
Allow the version checks for --with-apxs= and --with-apxs2= to work with development version of Apache, whose version strings end in "-dev", eg "Apache/2.0.37-dev".
Only the last cookie was getting set.  (You can have more than one Set-Cookie: header, as indicated by http://wp.netscape.com/newsref/std/cookie_spec.html.)
apache 2.0's apache_lookup_uri() was returning an array rather than an object, which contradicted both the documentation and the behavior of the same function under apache 1.3.
* restore the php_flag and php_admin_flag Apache directives which for   some mysterious reason never made their way from sapi/apache to   sapi/apache2filter when it was first written  PR: 16629 * change the allowed locations of php_admin_value (and php_admin_flag to   match) to ACCESS_CONF instead of OR_NONE to match sapi/apache.  No   idea why it was ever OR_NONE.  PR: 16489
Default INI file used with run-tests.php
NEWS update
ChangeLog update
- replaced domxml_doc_document_element implementation do use libxml2 method - renamed domxml_add_root to domxml_doc_add_root (and added alias for BC) - aliased $doc->get_root to domxml_document_element @ - added domxml_doc_set_root to change the root node (Lukas Schroeder)
More detailed/explanatory output.
Make failed case tell you what was different.
Make test valid for either "register globals" setting.
Restrict ctype tests to POSIX portable characters (0..127) and add numeric character tests.
Remove leading "./" from include filenames as in PHP this defeats include_path.
Add "tests" project to invoke run-tests.php (unit tests).
Updated to run cleanly on Win32, and perform a more controlled test.
Add TEST_PHP_DETAILED usage for verbose test runs.
Adjust dirname() on Win32 to match CWD per drive semantics.
dirname() checks that work for both Unix and Win32.
Grr.. I keep leaving my debug in...
Range check arguments to mb_strcut(). Test ext/mbstring/013.phpt causes a hard failure w/o this.
Proper declaration to suppress compiler warning.
- Made all is_*() functions to return only boolean values. - Killed the "file not found" error for is_link(). (finally..)
ChangeLog update
Win32 project and makefile used to invoke run-tests.php
this should finally fix bug #14353
- Accommodate API changes to Ack().
libxml2 >= 2.4.14 is needed (since quite some time ...)
Cleanup
Added Chinese, Korean support in mbstring.
added ISO-2022-KR support in mbstring.
make downloadHttp() detect HTTP errors
MFB
Nuke .1
Added ctype to this list too.
- Add support for Bcc in w32/sendmail code.
- It's bundled, thus not experimental anymore
NEWS update
ChangeLog update
fixed a initialization bug in euc-tw.
some versions of autoconf pad CONFIG_FILES with a single space.
- Adjust for improved error messages from win32/sendmail.c
- Improve code so errors returned from the server are reported back to the user. # Testers, testers, testers!
Try to create the dir where the conf file resides before trying to write to it
Add "\n" after the error in usage()
- constructor_called is supposed to be destructor_called
- Do not include the Cc: for the first Cc'd recipient (spotted by Richard).
- Convert unix to dos line endings. # This is *really* annoying ... can only be an advantage for windows users imho.
- Try to find From: field in header, fallback to sendmail_from php.ini setting   (Original patch by Michael Sisolak <msisolak@yahoo.com>, enhanced a bit). @- Win32 mail() supports parsing 'From:' field from header (msisolak@yahoo.com, Markus).
* convert to new command setup
* typo
 - fix typo, thanks to georg for spotting it.
* fall back to XML_RPC if xmlrpc-epi is not loaded # still buggy
* add command definitions, split run() into one method for each command
* no need for getHelp() here anymore
* moved get{Help,Commands,Options} here
* moved the {config xxx} help message substitution to   PEAR_Command_Common::getHelp
ChangeLog update
Patch by Justin Erenkrantz <jerenkrantz@apache.org> for enabling --with-apxs2 build on Darwin. Omitting the change to start linking with libtool for now, though.
fix copyresampled bug in bundled gd lib
More verbose but more generic error message when we spot multiple PHPINIDir directives
Make sure newtime is never NULL
 - added reference to http://cvsbook.red-bean.com/
Changing email address.
Added confdefs.h which seems to be generated by configure
MFZE1
- Centralize html_puts() again - Revolutionize phpinfo()'s speed
- MFZE1
Instead of calling mail_fetchheader_full() to retrieve the complete header information just to extract the message envelope, call mail_fetchenvelope(), which returns just what we need.
NEWS update
ChangeLog update
* fix option parsing
Remove redundant code (thanks to Jani for pointing that out)
* refactored the command/options code:   - now each command class should define a "commands" property with     documentation, option specs etc.   - both long and short options are now supported   - after recent changes to Console_Getopt, you may now have options     to commands even though the same option is also valid for the pear     command itself   - less CLI-centric, better suited to Gtk and Web frontends
sync with branch
Made several entries comprehensible.
@Improve IMAP performance when dealing with large mailboxes.
As far as I can tell, the AC_CHECK_MEMBER could not succeed, because it does not include <sys/socket.h> which is necessary for the definition of struct msghdr.  This include file is not part of ac_includes_default.
The command name is now the first arg not the second
Add "r" in cmd help
The first entry in argv is the command name, so Getopt will stop parsing more args # Stig be carefull, your change to Getopt breaks BC
Change safe-mode rule for rmdir() to match unlink() - allow is target is opened by caller or in a directory owned by caller @ Minor fix to rmdir() under safe-mode (Rasmus)
MFZE1
Simplify even more
Simplify white space handling in php_html_puts.
Nuke unused local variables.
Add an option to calculate easter dates based on the Gregorian calendar during the years 1582-1752. Earlier this was only possible from 1753 onwards. Use the optional parameter CAL_EASTER_ROMAN with easter_days() to enable this. This is a fix for bug #12766. # As you can see, my Sundays are *so* busy...
* fix up package dependency check
Use string_len information
reenable php_html_puts
Make <dep type="pkg" rel="has"> avaible
* fix description
added chinese HZ encoding support.  fixed ascii area character conversion was not work in euc-cn and euc-kr.
fix bug #17040 ibase_close again..... User can't close a connection if there are blobs opened. He must close them before to not loose data....
Vincent is not involved in this class :-)
Rephrase.
Beautify.
Start documenting the debug backtracing.
Whitespace fixes.
* Try again: fixed Console_Getopt::getopt so it does not steal options   after the first non-option argument.  Added test.
* updated config key names
* exclude _lastmodified registry attrib from tests
fixed to support --with-mbsting=LANG.
ChangeLog update
- Update about CLI default settings and it's weirdness.
MTH - thought the code was slightly different in HEAD because of the streams stuff, but it is exactly the same bug. @ Safe-mode fix related to the safe_mode_include_dir feature (Rasmus)
Another safe-mode fix.  parse_ini_file() did not check @ safe-mode fix for parse_ini_file()  (Rasmus)
show_source() safe-mode fix @ show_source() was evading safe-mode - fixed (Rasmus)
remove stale 1
* use PEAR::raiseError
allocate globals, making this work in zts mode (not that it really matters, since libswf isn't thread safe...)
- Update
Added copyright notice to php -v output.
Use portable #define
Centralize html_puts() logic - php_html_puts() remains as an API wrapper
MFZE1
Removing HTMLization of ' ' wasn't ok, it didn't deal with series of spaces properly.  Turn series of spaces into &nbsp;'s.
0 byte file uploads are valid, avoid choking on them
Patch by Justin Erenkrantz <jerenkrantz@apache.org>. This should be MFHed.
Revert to the old php_ini.c, and reimplement the binary-path searching. Should now also work under UNIX (CLI/CGI)
whitespace
- Fail gracefully and not just bail out with an error message from dirname   because no argument was given.
Reduce number of realloc calls.
Add missing element
Made ZIP extension available on Windows. @- Made ZIP extension available on Windows. (Edin)
* install Archive_Tar and Console_Getopt too
* add package descriptions for Archive_Tar and Console_Getopt
* add dependencies
NEWS update
ChangeLog update
- Prefix the first version line with 'PHP' so it's easier to use shell tools to   parse the version number (both CLI and CGI).
- This affects both CGI and CLI sapi:   Remove Zend version output from -m switch and move it over to the output of   the -v switch (-v is supposed to list version numbers, not -m).
@- added fifth optional parameter to domxml_xslt_process. If set,    it will output profiling information to the file stated (chregu) - introduced version numbering for this extension
- Nuke C++ comment
- Make debug_backtrace() return an array. Still not finished because I might want to differentiate between method calls and static methods.
* package-pear.xml has been renamed to package-PEAR.xml.
Added MD5 support for crypt() on Windows.
Ignoring *.aps files.
ChangeLog update
Backed out preceding change.
ws fix
Compute directory for temporary files once and use same directory for all subsequent calls.
corrected parameter
fix test 5 to pass
Detect when running under IIS and default force_redirect to zero.  This This means an explicit php.ini setting is no longer required.
* remove package-db.xml * rename package-pear.xml to package-PEAR.xml (generic format is   package-PKGNAME.xml)
Detect when running under IIS and default force_redirect to zero.  This This means an explicit php.ini setting is no longer required.
Allow the MSSQL extension to use NT authentication
this is dangerous....
Adding ini setting that allows the MSSQL extension to use NT authentication
Add check for php.ini in same directory as php.exe (or equivalent executable that loaded php4ts.dll).  Check is done before looking in the Windows directory.  This allows distinct php.ini files when different applications using PHP are installed on the same system.  Should be backwards compatible.
Revert the last patches.
Revert Preston's patch
ws fix
Add check for php.ini in same directory as php.exe (or equivalent executable that loaded php4ts.dll).  Check is done before looks in the Windows directory. This allows distinct php.ini files when different applications using PHP are installed on the same system.  Should be backwards compatible.
Change default directory for session data from /tmp (non-portable) to none. Default directory for session data (if not specified) is same (platform-specific) directory used for temporary files. This is backwards compatible and removes the need for explicitly specifying the session.save_path on Win32.
Compute directory for temporary files once and use same directory for all subsequent calls.
Detect when running under IIS and not require explicit setting of force_redirect. This means an explicit php.ini setting is no longer required.
No need to link libxm2 in order to build php_crack.lib
* Better handling of Windows paths (\php\any_thing or c:\php\any_thing) * Remember that inside the archive path are all the time in unix format /php/any_thing * When necessary, '\' are replaced by '/' and 'c:' are removed * Synchro with cvs:pear/Archive_Tar/Tar.php version 1.20
* add some packages to bundle with PHP
* add "pear run-tests" command
* use PEAR installer to install stuff (won't overwrite if newer versions   of packages already are installed)
* permanently moving DB to /pear
- Dump API NOs
- Add PHP_API_VERSION too
- Show both API nos
Added the current SAPI to the output of php -v
* show "update ok" after updates
* try the installed cli binary if everything else fails (I'm starting   to agree that looking too hard for a php binary is wrong)
* install the old-fashioned way for just a bit longer
* add -G option to "pear" for php-gtk frontend * added Gtk stub (only creates window right now) * added command descriptions
ChangeLog update
- Hopefully fix problems with debug_backtrace()
- MFZE1
Added conversion support from script character encoding to internal character encoding. This feature is very useful for japanese who uses Shift_JIS encoding because some of characters in Shift_JIS are including '0x5c' and it causes some troubles on Zend parser. This patch is made by Masaki Fujimoto.
Added conversion support from script character encoding to internal character encoding. This feature is very useful for japanese who uses Shift_JIS encoding because some of characters in Shift_JIS are including '0x5c' and it causes some troubles on Zend parser. This patch is made by Masaki Fujimoto.
This is a more appropriate address for me.
Minor improvement to error message for mysql_data_seek
- Add a warning if running with safe_mode enabled.
- Forgot one
- Added Aaron Bannert as maintainer
Kill a compiler warning on Win32
ChangeLog update
Due to the thread-safety changes and lots of other stuff, the current tree is not backwards compatible anymore.  Bump API no.
- More debug backtrace work. It still doesn't work very well...
use thread-safe functions unconditionally
Add thread-safety to some conversion functions and sync a bit with APR.
ChangeLog update
- WS fix as pointed out by fabwash@hotmail.com
fix problem with mkdir() on freebsd
Update README with register_argc_argv settings override.
ChangeLog update
Add support for remaining entities in HTML 4 for the UTF-8 encoding in htmlentities/htmlspecial chars. This is a fix for for #17008. # I would *really* appreciate it if someone with a good eye could verify # that all the entities are there and are correctly numbered; I've checked # it three times, but it's best to be sure.
Clenup before I forgot.
Return right exit status
Force register_argc_argv=On for CLI
touch
re-add accidentily nuked session_adapt_url()
bug fixed in unicode -> cp1252 table.
Well that didn't last long! (Reverting previous.)
Prelim. patch to enable apache2filter to link on Darwin. Submitted by: Justin Erenkrantz <jerenkrantz@apache.org> Reviewed by: markonen # A stopgap measure while we try to find a "real" # solution, if one exists.
added missing areas on Unicode->CP936 conversion table. added an alias CP932 on sjis-win.
sync
the output buffer is flushed during request shutdown before it reaches our rshutdown, so it is safe to delete the contents of the url rewriter variables here.
NEWS update
ChangeLog update
We shouldn't force Content-length:, but much worse, it's wrong in many cases (basically, unless you use output buffering to buffer all of your content, it won't work;  output buffering is used for lots of different things as a functional interface, and such buffers have no relation to Content-type at all).
Free string before overwriting it
update
simplify handling of variables by maintaining two strings which are simply appended instead of traversing the hash table on each URL/form.
ret set but unused
these are case sensitive
c set but unused
inheader set but unused
touch.
add $id:$ line
block_ended/opposite_target were set but never used
don't emit code for version
free_index is set but never used
call_result is set but never used
ap_php_optopt is set but never used
entry_length was set but never used
update
rval_temp was declared but never used
redirected is set but never used
include url.h
include url.h to pull in declaration of php_url_encode
Make this code work on compilers which don't consider the address of a variable on the stack available at compile time.
unused var
p is set, but never used.
Turn misplaced PHP_ARG_WITH into _ENABLE and fix --enable-mbstring=shared
fixed a problem that ereg_replace() couldn't match with line stand/end marker.
Forgot to dup strings.
NEWS update
ChangeLog update
Domxml changes go into the 4.2.x branch.
Adding missing .cvsignore
removed the function for domxml_node_add_child and made an alias to domxml_node_append_child for BC
* switched from static to instance model * added matching method with glob support, some examples:     $os->matchSignature('linux');     $os->matchSignature('linux-2.4*);     $os->matchSignature('linux-*-i?86');
WS fixes
one parameter too much
added encoding support for domxml_dump_mem()
forgot
@ - Added output_add_rewrite_var() and output_remove_rewrite_var() to inject @   and remove variables from the URL-Rewriter. (thies) i have also modified the session module to use this - so it doesn't need to fiddle with the output-system any more
* fixed autoconf vs. pear installer replacement issue in scripts/pear.in   (pear installer now substitutes "@prefix@/bin" to bin_dir ;-) * added skeleton for OS_Guess class
* unintentional news entry :-)
NEWS update
ChangeLog update
* apply umask when installing files
* add umask config value
Changed & to &&.
Adding missing files to the project
Initial support for built-in backtracing. There are still a few problems such as includes and calling other functions from internal functions which aren't seen (will have to think if and how to fix this). Also the main scripts filename isn't available. Need to think about that.
socket_write() should just use the standard socket error macro so that errors will be consistent if the macro ever changes
updated cgi warning notice.
Update comment
Change nest level to send Content-Length again. It seems this is the best setting for now.
remove temporary resources immediately return value fix
Readd warning
in6addr_any is defined as extern in IRIX header files, but is not actually contained in any library (sigh).
- Add Zend API No. to phpinofo() output
Stop the search when the libs are found.
Install pear.bat # Please Windows hackers test the pear installer support!
I could swear it worked the other way before I committed.
untabify
englishify.
Add config.w32.h.
Oops.
Fugbix typos.
The Windows build can now be configures more comfortably, for instance in regard to built-in extensions.
Remove bogus warning.
Sync with PHP_4_2_0 branch.
Revert the previous commit (revision 1.40).
Check buffer status
Make Content-Type output always correct. # Flushing buffer is needed to be fixed properly anyway...
Modify NEWS entry for Content-Length header change
Move Content-Length: header handling from zlib.c to output.c When output buffer is enabled and header can be sent, Content-Length: header is added always from now on.
NEWS update
ChangeLog update
- Update protos for socket_read() and socket_write(). - Set last_error in socket_write().
- Update protos for getpeer/getsock-name.
Add a big disclaimer regarding register_globals.  It just bit me again but now on a live customer site :-/
- Rename setopt and getopt to set_option and get_option, provide alias.
- Add SOMAXCONN constant.
Probable fix for #16940.
- WS fixes
ChangeLog update
ZE2 compatibility fixes
- Forgot to update proto
- Allow resetting the module global last_error too.
More unused variables.
Add missing #define's.
# fooblah
Add new ext/mbstring/mbfilter_*.c files.
Touch file
reverting the cursor change as it seems to break many ODBC drivers.
fixed compile warning with Visual C++.
added simplified chinese, traditional chinese, korean support to mbstring. Note that this feature is experimental.
ZE2 compatibility fix
ZE2 compatibility fixes
revert last bogus change. There is bug in is_file()
Make OBJCE return zend_class_entry*, also some cleanups
- added function domxml_parser_set_keep_blanks()
Adding missing files to project
Use ftok for message queue key.
ChangeLog update
Make use of new flag so that we can buffer http headers when we know that the stream is not intended to be used in require/include.
Implement user-space funtions to operate on stream contexts.
Remove debug code that should not have been committed. # I must apologize for the quality of my commits tonight...
Remove this; it should not have been commited
revert...
Implement context option setting API. Add/amend debugging code for sockets. Add a flag that will help the http wrapper optimize itself when it is not being used for include/require.
Never add libraries without checking that they exist and can be linked.
RETURN_NULL() is defined with braces while RETURN_TRUE and RETURN_FALSE are defined without. seems not very consistent ?
Add comments for the fix
functions returned FALSE in case of error and the oo api returned NULL. make them both behave equal (return NULL, as FALSE can be a valid value).
Yet another serialization fix - for incomplete class
Make it possible to use recode 3.5 too. (happy now Wez? :)
Sync with PHP_4_2_0 branch.
- Store last errno in the module global 'last_error' implicitely - Set the global 'last_error' explicitely for functions which can't return an   error withing a single socket context (socket_create and socket_select) - Modified socket_last_error() to return global modules last   error if no socket resource is given - Added a couple of more E_WARNING messages in case something   goes foobar so the user isn't left alone in the dark.
Slightly alter the signature of msg_send and msg_receive so that error codes and serialized "false" messages can be distinguished.
MFB
* version will be 0.10
* slight cleanup
* call the right parent constructor
* PEAR_Installer constructor now expects only the UI object
* PEAR_Common::downloadHttp no longer wants a config object
* always set $this->config (use PEAR_Config::singleton) * rename setFrontend to setFrontendObject * add validPackageName method * added downloadHttp callback types setup, connfailed and writefailed * no more passing config objects around
* use the downloadHttp method w/callback
shlib suffix was not defind and rint() was not found without -lm.
NEWS update
ChangeLog update
Touch generated file # is it really so hard to remember this?
Enable bundled build of ext/ctype and ext/mbstring on Win32.
timestamp
revert session_set_userdata - diffent patch will come shortly
* forgot script element in release contents
* package.dtd: version 1.0b7   - added <provides> element   - added <script> element
* implemented "list-remote-packages" command
* implemented stub for XML_RPC fallback if xmlrpc-epi is not installed
@- Added optional 3rd parameter to mysql_select_db() which makes it return @  the previously selected database name. (Jani)
Revert.
kill a compile warning
touch file. Please commit first the .re file and afterwards the .c source. Otherwise, timestamps will be broken.
Missing dependancies..
- Cleaned out the CVS commit conflicts..
ws fix
NEWS update
ChangeLog update
Add test case for file_exist/is_file
s/len/xln/ was necessary here
Use a single macro to set cl header
@ - If possible set Content-Length header in zlib.output_compression mode. (thies)
updated TODO list
MFZE1: If the size-operands of memset are constants, the compiler can turn them into fast inline code. So, instead of using ecalloc, we use emalloc + memset in macro form now. emalloc will not return NULL, so the chosen macro form is safe. This is not true for malloc(3). An inline function accomodates our needs here. Suggested by: http://www.mail-archive.com/dev%40httpd.apache.org/msg02492.html (Sascha)
part 2 of last commit
@ - added session_set_userdata() which enables you to specify one variable @   that will be kept in the browser in addition to the session-id. This @   only works when using trans-sid sessions (no cookie). (thies)
# Since Jani seems to have us all on /ignore, I'm reverting
don't set CLSCTX_REMOTE_SERVER if NULL is passed as servername
ChangeLog update
- News entry about the change in php.ini-*
Default setting for short_open_tag is better be Off.
three less strlen invocations
be a bit more verbose about what is wrong
this patch should fix a bug where intermediate comvals were not released before they were freed. this caused outproc com server to belive that they still referenced even when the php process already terminated.
bug fix for bug #15758, a double free'ing of an ODBC connection
reuse known values
Improve use of module_globals macros
ChangeLog update
Add sysv IPC support (wrappers for msgsnd and friends).
update generated file
Do not add redundant id attribute. It doesn't make the output any more standards compliant.
Some systems have mysql socket in /var/run/mysql
MFB
fixed directory access problem when direcory name is encoded in japanese Shift_JIS encoding.
* fix warning
Touch generated file to increase timestamp
already defined in zend_config.win32.h
unbreak the win32 build
Added test for pg_fetch_*() functions
Revert last 2 commits. # Most PostgreSQL users should enable multibyte support ;)
fine-tuning
Only support the new libexpat.
pg_client_encoding/pg_set_client_encoding should be compiled always. Recent libpq has PQclientEncoding/PQsetClientEncoding regarless of multibyte support enabled or not.
ChangeLog update
Remove result_type from pg_fetch_object() proto. It still accepts 3rd argument, but passing 3rd argument does not make sense for pg_fetch_object().
It does not make any sense to have a PGSQL_BOTH as a default for pg_fetch_object() Noticed by c@cornelia-boenigk.de
clearing up some code to remove any possible confusion in variable counts
Init output_start_* to avoid "output started at ZZZZZ" messages (which may result when output started while zend is neither compiling nor executing - e.g., when file upload fails).
MFZE1 saschas 'Avoid exceeding buffer limits' patch
*** empty log message ***
- Do the ssl_onceonlyinit() as last. This is how c-client creates   the linkage.c (used by Pine).
- Missing .libs line.. # whoever removed all the .libs lines from these files, # please put them back.
One big mess is a bit less mess now.
- Put news item about changes of domxml in
Added the 4.2.1 entries here too.
fixed the comment..
Apache does a full load, unload, load cycle for each DSO module. This patch makes sure that any startup actions that are performed for PHP don't happen until the second load (the second call to the post_config hook), and it also prevents subsequent calls to the initialization routines.
* add "_lastmodified" timestamp to registry files (don't trust filemtime)
NEWS update
ChangeLog update
0.9.1 release notes ++
* make validator work again
* roll out 1.2 release
Wrong variable used here..
ws fix
Add #ifdef.. around F_SETFD.
some type cleanup work
- replace_child() will not add a child twice - domxml_open_mem() drops old optional parameter to switch between reading   from a string or a file. - new optional parameter for domxml_open_mem() which set the mode how the   document shall be parsed
apache_child_terminate() returns status as bool proto fixes
Remove unneeded 'return'.
* use PEAR_Common::downloadHttp()
* downloadHttp: pass the total number of bytes downloaded as parameter   to the 'done' callback
* moved these "class variables" to global variables and added static methods for getting   them: maintainer_roles, release_states, dependency_types, dependency_relations,   file_roles, replacement_types * added downloadHttp method with status callback support (can be used by installers   to show download progress)
- added new function DomDocument->ids (subject to change)
- get_element_by_id() doesn't use xpath anymore but searches in   xmlDoc->ids as provided by libxml. - New function DomDocument->ids() returns a list of ids (subject to change) - replace_node() doesn't make a copy of the new node if it has no parents
No need for an ifelse here (which was lacking a char anyway :-)
Make pg_convert/pg_insert/pg_select/pg_update/pg_delete a bit more flexible. pg_convert() may ignore, NOT NULL and/or DEFAULT. pg_insert/pg_update/pg_select/pg_update may return query string.
This was not supposed to be uncommented..yet.
Part 2 of static apache build fixes: - Added 2 variables to be used in libphp4.module   o Apparently autoconf 2.53 screws abs_srcdir - Made INCLUDES and EXTRA_INCLUDES available to be used with AC_OUTPUT()   o Not related to the static apache build issues
Part 1 of commits to fix some issues with static apache (1.3.x) compile: - Made the OPENSSL_INCDIR available to be added in the PHP_CFLAGS   in libphp4.module - Make it possible to set SAPI specific include dirs
Missing date for 4.2.0
ChangeLog update
Changed the error for 'no upload' to E_NOTICE so that it doesn't pollute the logs too much.
fixed access problem when japanese Shift_JIS character is used as directory name. Some characters in Shift_JIS are including 0x5c (slash) as second byte.
remove unnecessary casts # if you mind the bogus warnings, you can either switch the compiler # or decrease the warning level
Set the close-on-exec flag for fds.  Child processes should not inherit the fd.
Typo in error string
set up a proxy object when requesting a reference to a variable
fixes a warning when compiling under win32
Refine the OS X support a bit
Prettify the NEWS entries # So that Jani doesn't have to do it every time!
Let's pretend this is up-to-date now
changes related to the latest commit of the zend engine
added get_class_entry callback handler to the object handlers structure
Reverting my previous patch.
MFZE1: Change default value of inline-opt to yes (Sascha).
fixed linkage warning under win32
* Due to the recent changes in the installer stuff, the webinstaller   is not supported at the moment.
hash keys lengths include the NUL-byte, so we need to copy one byte less.
ChangeLog update
missing .cvsignore
fixed problem when multibyte character is included in file path on Windows. If _MBCS is defined, _tcstok is defined as _mbstrtok which is multibyte enabled strtok. If _MBCS is not defined, _tcstok is defined as strtok.
small performance improvement when pass is selected as input encoding.
Added ..\..\..\php_build\lib\apache2 to libpath and ..\..\..\php_build\include\apache2 to includepath
Apply that patch I wrote ages ago that fixes some problems with true-color vs palette based handling. Also implements the gdImageStringFTEx function.
* more uniform "level 2 debug messages" * don't add dirname(file) to install path if install-as attribute is set
refactoring in pgsql_do_connect and some "leaner" code in pgsql_add_quotes
Avoid allocating resources, if we know that the input array is empty.
speling fix and s/FAILURE/HASH_KEY_NON_EXISTANT/
The default has been changed to assume failure, because there were 5-10 cases of failure and one success.
Add PGSQL_RETURN_OID which encapsulates the LONG_MAX check etc.
Also support --disable-shared installations of pgsql
* set version to 0.9.1-dev
* PHP_PREFIX constant is not defined, use bin_dir pear config instead
My patch as posted to php-dev + warnings/errors fixed as seen in Yasuo's reply.
* Remove package directory if empty during uninstall process * Don't baseinstalldir for documentation.
Tiny typo..
Bail on no HTTP.php present in the system Let "pear download" act ala wget
typo
simplify and improve speed of smart_str_print_long.
expletives deleted.
some more fixes towards making it work again
NEWS update
ChangeLog update
MFZE1
allocate space for NUL
- initialize globals properly
include the checks for various support libraries to --with-gd=php section. the libgd stuff needs some additional checks to handle the presence/absence of things like libpng, but this helps when most things are included.
s/.o/.c/
realloc buffer down
If I don't want mbstring, I also don't want this transparent encoding thingee which caused an undefined reference in main.o.
Make pg_lo_import()/pg_lo_unlink()/pg_lo_open()/pg_lo_export() work with oid larger than 2^31. @Added large OID value (2^31 to 2^32) support for pg_lo_import()/pg_lo_unlink()/pg_lo_open()/pg_lo_export(). (Yasuo)
- Add missing .cvsignore
Another .cvsignore update
Removed makefiles from most .cvsignores and some minor cleanups.
Added missing .cvsignore
Added missing 'd'.
Some cleanup. More OID range related fixes. # Need a little more work for OID
Added API version for C programs
We call them "extension"..and again, missing period. :-p
NEWS update
ChangeLog update
throw a warning if encoding support not available...
update todo a bit
make it work with dom processing, this allows DOM tree caching to avoid re-parsing the same data.  Currently very beta -- DO NOT USE.  Will be cleaning this up over the next few days...  Need this in here for version history, and to show other people
Indentation;)
fix warning
Revert bogus patch.
MFZE1: make sure the resource-list is always consistent during shutdown (Thies).
* add http_proxy config setting
* make "pear install package.xml" possible, so you can install a package   without building a tarball first
* reintroduce (un)install -r option for Registeration only
* fix phpdoc
Update tests
Added "NOT NULL" check and do not add converted variable when field is NULL and HAS DEFAULT. (php_pgsql_convert)
Make scheme part decoding rfc2396 compliant. Change zlib:// and bzip2:// to compress.zlib:// and compress.bzip2:// Tidy up old socket/network code/comments.
Remove compiler warnings
Remove warning.
Leave "" (null string) when converting.
Remove warnings
Added mbstring.func_overload directive
Remove gargabe
Enable mbstring by default. @ mbstring module is enabled by default (Yasuo)
Added description to mbstring ini entries
Avoid defining/using S_ISDIR macro.
ChangeLog update
- Gaurd for problems in fault servers (fixes problem with Sambar 5.2)
Document the new PHPINIDir directive in the apache2filter/README.
This patch implements a new Apache2 directive called PHPINIDir that allows the specification of the php.ini directory from within the Apache configuration. If left unset, the default is to defer to the hard-coded php paths. When set, the supplied path is made relative to Apache's internal ServerRoot setting.
* Add API documentation.
Allow for PCRE to be disabled.
Make use of HAVE_MYSQL. Reviewed by: Sterling.
Conditionally include mbstring.h.
Add HAVE_CALENDAR, HAVE_COM, HAVE_SESSION and HAVE_TOKENIZER to enable/disable these extensions, respectively. It is now possible to build PHP on Win32 with just ext/standard and ext/pcre. The latter is needed by the former, because at least the aggregation functions use PCRE.
Removed redefinition of MIN()
Removing unused variable
- MFH: Make DBA compile as a shared module again
Some cleanup for the Win32 build configuration.
whitespace fixes
Missing break; causes fallthrough which actually causes heap corruption in the debugging version despite being just plain wrong. Also placed a default "Unavailable" message when the object does not populate the EXCEPINFO structure. Also removed a minor memory leak.
When V_BSTR() is NULL, we pass a NULL pointer into php_OLECHAR_to_char() which reports an exception. Better to map a NULL string pointer to ZVAL_NULL.
ChangeLog update
Whitespace fixes.
Only include php_bcmath.h when WITH_BCMATH=true.
Give HAVE_MYSQL meaning on Win32.
Give HAVE_UODBC meaning on Win32.
Give HAVE_LIBEXPAT and HAVE_WDDX meaning on Win32.
Give HAVE_FTP meaning on Win32.
Remove bogus includes.
Patch by Marcus Börger.
* doooh!
- fixed memory leak
SPACEs->TAB.
Beautify.
Forgot adding phpext_tokenizer_ptr.
Enable ext/tokenizer by default on Win32, too. Since there is no HAVE_TOKENIZER flag, it cannot be turned off in config.w32.h.
ChangeLog update
Always initialize wrappers, regardless of PG(allow_url_fopen). Add is_url field to wrapper structure; the stream wrapper openers will disallow opening is is_url && !PG(allow_url_fopen). Add infrastructure for stat($url) and opendir($url). Tidy up/centralize code that locates and instantiates wrappers for the various operations. Implement opendir for plain files. Make the PHP opendir and dir functions use the streams implementations. Add modelines for syntax highlighting the pear scripts in vim
* added DB::isConnection * phpdoc fixes
fix cli/cgi -c <path>|<file> #hope this fixes it really (works for me)
It makes more sense to do the null-pointer check *before* trying to use it. (Also fix a typo that Cliff pointed out: "safe" --> "save".)
move xslt_error and xslt_errno down to functions, in order to make logical room for the xslt_dom_* functions
remove old code
Added missing function to function_entry
* started working on analyzeSourceCode and detectDependencies methods
removed ws pollution
Added 2 new tokens: T_CLASS_C and T_FUNC_C
- MFB: Remove version number
update these docs, phpdoc will lag a bit :)
Prefix current functions with "sax" in order to make way for dom interface backwards compatibility is maintained via function aliases xslt_sax_set_sax_handlers is a bit wierd, i guess...
clean up the error code a tidbit
* build tokenizer by default
* chdir back to original dir in PEAR_Packager::package * only display "cvstag" hint if CVS/Root exists
ChangeLog update
Added standar header
Added standar header
Vim tags added plus some other minor text about license and author
Be more clear when no packages are installed
Give the right error when wrong params given to package-info and fix/add help some help messages
Adding PHPAPI needed for exif on Win32
Chages for beta3
should not be there
Some minor tweaks and debugging for sockets.
- DomNode->replace_node() now returns the node that was replace and   not the new node - fixes Bug #15949
- added DomNode->replace_child()
ChangeLog update
support for WinXP tags (thanks to Rui Carmo)
fix crash bug introduced by last commit
- Do not try to draw a table if there are not elements.
ws fixes
fixed error output handler when 'pass' is choosed as output encoding.
Make it possible to actually disable the CLI..
/usr/lib is the default install dir on Mandrake
- Use the correct javac/jar binaries.
NEWS update
ChangeLog update
ocibind: avoid warning in debug mode if an outbound variable is NULL
@- Mixing OCIPlogon and OCINLogon no longer leak Oracle-Sessions. (thies)
@- old $node->append_child() is now $node->append_sibling(), since @  new append_child() now behaves like excepted (= W3C standard) (chregu, uwe)
s/==/=/
- Also raise a different error message if we don't specify any package at all.
- Prevent users from trying to make a static build with Apache2 using   --with-apache
- Return a different error message if no package file was given at all.
oops
- Properly format error message.
Initial commit of the built-in libgd based on GD-2.0.1 This initial checkin has no changes to any of the libgd code so it can be used as a basis for diffs.  It also will not build currently because of this.  The PHP gd checks need to be incorporated along with a bit of other config magic.  It also shouldn't break the build and will only take effect if you use --with-gd=php right now.
Do NOT use c++ comments in c code!!!!!
NEWS update
ChangeLog update
* cvstag command: tag slide option is -f, not -F
* missing file role message could be mistaken for missing maintainer role
* add cookie authentication to PEAR_Remote (temporarily in addition to http auth)
- Added checks to prevent building the DSO with wrong configure option.
Do NOT use C++ comments in C code.
remove this, since it doesn't describe the current process, and is under a silly license.
fix build with ZE2
fix segfault
Gone they are.. files related to the old build-system
 - MFB (4_2_0)
Ini settings for internal encoding and decoding of Unicode and JIS formatted user comments. @- Ini settings for encoding/decoding Unicode/JIS user comments (Marcus)
Removing a unused local variable. Setting the size before returning the value in readgzfile
-new function php_mb_check_encoding_list -mark module globals as const (thread safety)
This test should be skipped if(!cgi)
-fix mb_detect_order -php_mbstring_parse_encoding_list/array return 0 on any illegal input
- added method DomNode->remove_child()
- fixed stupid compile error
- insert_before(): copy node before doing the insert - append_child(): actually do an append child and not and add sibling - what is called xmlDtd in libxml is actually the class DocumentType   in DOM. The domxml extension used a class DomDtd which is not defined 	in the DOM standard. Instead of using DomDtd DomDocumentType is now 	used. DomDtd has been renamed to Dtd but has not meaning anymore. - added more functions
Sync with php4dllts.
Be nice to php.ini-recommended users. php.ini-recommended uses output buffer resulting delayed output during "make test". User php.ini file is used anyway, since run-tests.php invoke php for each test from there.
This exif test was failing because the \0's in the expected output had disappeared.  It may be CVS doing this.  I have put the nulls back, but we may have to mark this as a binary file in th cvswrappers, or rewrite the test to not output nulls.
Update Sablotron version supported.
NEWS update
ChangeLog update
CGI/CLI take file and dir for -c option by this. @ Both 'file' and 'path to php.ini' is allowed for "-c" cli/cgi option. (Yasuo)
interpret empty to_encoding as encoding not set what results in current_internal_encoding
fixed a bug which causes crash when charset is not set.
fixed type
PHP filters and Apache 2 aren't quite a perfect match yet, so we have to do some trickery with the server_context to make sure it is always valid within the current thread.
Don't depend on the context provided by the filter (f->ctx) anymore. In Apache 2 the input and output filter contexts are kept unique. We now only depend on SG(server_context) for each request, and assume that the same thread will process the entire request. At some point it would be wise to separate the input and output contexts.
Return the number of bytes consumed, not the number of bytes left.
 - add quotes. Cought by: Roman Neuhauser <neuhauser@mail.cz>
Update README.
Added versioning to dll and exe files created under windows.
sync with PHP_MAJOR_VERSION changes to configure.in
Apply patch for MAJOR_VERSION etc. by Joseph Tate
use DIRECTORY_SEPERATOR
thread safe
fix build (hopefully for BSD, too)
fix warning
fix testproblem
Patch by Aaron Bannert <aaron@clove.org> and Cliff Woolley <jwoolley@virginia.edu>.
properly reset ac_extra in PHP_NEW_EXTENSION
TSRMG => TSRMLS
NEWS update
ChangeLog update
fix warning
Implement stream context and status notification system. Bump the BC for zlib notice to a warning # See my RFC to php-dev a few days ago
MFZE1
MFZE1
- Added __FUNCTION__ and __CLASS__ constants.
* add download command to description
Implemented "pear download <pakage>"
Do not show the "tag it!" message when verbose=0 # Forgot to commit that before
Added single display()
- extension to access a Hyperwave Server based on the official   Hypwerwave SDK. The function of this module is similar to the 	existing hyperwave extension but the api is very different.
fix a warnig and an error (found by Sebastioan)
changed mbstring to make thread safe.
Help for command "shell-test"
Added "pear package -n" (only output the created package file name)
ws changes
Replace all memsets with variable initializations
too quick. full speed back.
Please test patches which are merged into the release branch.
Let people know this stuff is experimental.
new ini setting log_errors_max_len @-New ini setting log_errors_max_len controls maximum length for error @ messages. Set it to 0 for infinite. Default is 1024 (old behaviour) (Marcus)
fix exif using vspprintf
make (v)spprintf available
introducing spprintf and vspprintf #mail follows
-preface for new vpprintf #reordered and renamed some functions and removed some static
ChangeLog update
* ignore dirs and libfiles in older releases (changelog)
* ignore files in older releases (changelog)
* drop the ondemand connect stuff for now
* add preferred_state
* drop file replace= attribute
* remove extra end-fold
eekk -- and ssb thought my macro's were icky :)
* package-validate uses package.xml as default param
* ext/xml/expat no longer has xmltok and xmlparse subdirs
Make the dependencies check look for the correct registry file
Win95/98/Me doesn't support locking, please check patch on other systems
it's been changed back to php.exe
updated, requires PHP4.2 php-cgi
* show full cvstag command
* get rid of CommandResponse stufff
* drop file replace= attribute
* remove PEAR/Uploader.php
* unused files
* implemented role="script" and <replace> substitution during install
fix compile warnings
NEWS update
ChangeLog update
* package definition for the base PEAR system
HEADS UP, package.xml format change: <file>foo.php</file> is now <file name="foo.php/> Added tags for configure-like substitutions. # the packager will handle both for a while
Added new features for msession beta 2
ws fix
CPP directives must start on the beginning of line
* Added getStaticProperty() for static methods.
- Revert that change. Added a warning about this.
Make pgsql header available for PECL module(s)
upload_max_filesize can only be set in php.ini
and the news entry..
There's really no point in allowing using the system regex library.
Using system regex lib seems not to work quite well when compiled with Apache.
Remove unneeded conversions from pg_convert.
Continue the list of features for PEAR DB Release version is 2.0 (apiVersion) # Multiline entries inside the tags looks better in the web or in # "pear package-info" if they aren't formatted to look better # in the xml
Make it compile with ZTS. # Forgot to test with ZTS
Update README
Added pg_metadate(), pg_convert(), pg_insert(), pg_select(), pg_update() and pg_delete(). @ Added pg_metadate(), pg_convert(), pg_insert(), pg_select(), pg_update() @ and pg_delete(). (Yasuo)
Return proper result.
Some ws fixes and general cleanup.
Added 2nd parameter for pg_result_status(). PGSQL_STATUS_LONG is for LONG result status. PGSQL_STATUS_STRING is for SQL command name successfully executed for this result. @ Added 2nd parameter for pg_result_status() to specify return type. (Yasuo)
ChangeLog update
correcting some more whitespace #hope that's it
* append "?uncompress=yes" to the package download url if zlib extension   is not loaded
* package xml file for DB
Added PEAR_Common::getUserRoles() and a suggestion
fix and regression test for Bug #16473
* added "cvstag" command
-fix warnings -fix layout
-fix warnings
Removed relics from PHP3.
make compatible with current PHP
* give PEAR_Packager::package an option to disable compression and make   plain .tar files
* remove empty fold
* use the UI's displayFatalError method
* added displayError and displayFatalError methods
* initialize _PEAR_Command_uiobject
apply jan's configure check for apache2 and freebsd (relating to the use of tsrm-pth).
* leave error reporting to the validator
sync
* more clear cvs tag hint
Just some help cleanup
* typo
* rename package-verify command to package-validate
fix for #16469
* support for .tar files in PEAR_Installer * new command: package-verify * "package" command now sanity-checks the package information before   making the tarball * -Z option to the install/update commands for downloading non-compressed   packages
Added pgsql.ignore_notice and pgsql.log_notice ini entry.
Nuke waring with ZTS build
NEWS update
ChangeLog update
new feature ignoring repeated error messages (defaults to old behaviour) @You can now disable logging of repeated error messages with two new ini settings ignore_repeated_errors, ignore_repeated_source. @(Marcus)
Added BC support for old style zlib: wrapper. Added notice when a requested wrapper is not found. # This BC thing was giving me nightmares. # It took me 10 minutes to realize I hadn't compiled in zlib support also.
* Added registerShutdownFunc() method
Improve the life of external extension maintainers by not plaguing them with "./" in absolute paths.
minor fix..
Chages for new pg_last_notice()
Make pg_last_notice() work as it is designed. It returns last notice message for connection resource specified. Added "pgsql.ignore_notice" ini entry. Added "pgsql.log_notice" ini entry. @ Make pg_last_notice() work as it is designed. It returns notice message PostgreSQL connection resource specified. @ Added "pgsql.ignore_notice" ini entry. @ Added "pgsql.log_notice" ini entry.
NEWS update
ChangeLog update
Use get_active_function_name() for error messages.
* forgot htmlspecialchars in release notes
Added test suite for domxml extension. #eventually I'll separate all the tests into separate files, but until #then, I'll commit it so that everyone can use it.
Added unlink_node alias for consistency
-testing unicode user-comment
-correct length for ASCII -global encoding variables #will become ini settings explanation on what to set follows then
include comma separated encoding lists in test
no space for comma separated encoding lists
aligning # #mentioned by derick
oops. that was an error not detected in shared library mode ...
added domxml_parser(), domxml_parser_add_chunk() and  domxml_parser_end(). It provides access to the PushParser interface of libxml2.
@Add zlib.output_compression_level option (Stig)
Add error message from _notice_handler() # Currently, it always logs whennever notice message is # recieved. I'll change error log optional later.
Add notice message test # Need to figure out why estrduped string is not null terminated
Update message
Add bytea field to test table. Use table name variable.
Add real pg_escape_bytea() test.
Unicode is now based on php_mb_convert_encoding if available #currently only ISO-8859-15 is supported as result #maybe this will become an ini setting
new function php_mb_convert_encoding
NEWS update
ChangeLog update
add mbstring headers to those for pear/pecl extensions
removed calls to wctomb, wcstombs #leave UNICODE to user
i of course am the brilliant author of these files
replace with non-gpl implementation
non gpl implementation
replace grp.h with a new implementation (non-GPL)
mailparse moved to pear/PECL.
Revert the bogus patch.
Added pg_escape_*() test
Clean up pg_escape_*()
- fixed a lot of memory leaks (by Lukas Schroeder) - get_attribute() returns False instead of empty string, if attribute not found
Add deferred libs to DLIBS instead of LIBS.
ChangeLog update
minor fixes
Added news on the Mac OS X changes and removed a duplicate line
- OS X support for dynamically loaded extensions. (patch by Marko) # NEWS entry coming up..
fix bug #15150, thanks to daniel at haxx.se for the fix
Added ini_set()/ini_get()/ini_restore() test
fix TS build
Tidy up win32 implementation of proc_open. Respect safe_mode_exec_dir. Implement proc_close and return process return code under win32.
add test for mailparse_extract_part_file
ChangeLog update
main/streams.c
fix quoting
* Added "-s" (soft update) option to install/upgrade.  Will make installs   fail silently.
* add Frontend support to PEAR_Common::log()
* Implemented "shell-test" command for writing shell scripts that check   whether a package is installed.  Example of use:
* just renaming some comments
* add type property telling what type of frontend this class implements
* remove "exit" at the end, it causes a "false" exit code always
* comment out the php files that are not necessary for the installer # the rest will show up as packages in /pear shortly
- Whitespace
just did...
updated the alert sent to the browser. removed the verbosity, and linked to more info.
NEWS update
ChangeLog update
Be a bit more verbose about what was not found.
Prevent crashing with some bogus POSTs.
typo
Added layer checks and reorganize a little the code
- Define the PEAR constants when they are not set (be nice   with the "--wihout-pear" people who finally regrets) - Added method getLayers()
- Make "config-set" actually store the values - Help and error messages enhance
- Added "nodeps" option to install/upgrade/uninstall   (pear install -n package.tgz) - Finish to document the install commands
- Set some php.ini values needed by the installer - Removed unused present_array() and heading() functions
People reported problems with flock(LOCK_SH) and fopen('w')
added help
Adaptation for the new help system
Go with the help system
* typo
- Nuke *FETCH macros.
#cleanup source
PHP_SESSION_API not always defined.
ChangeLog update
E_ALL fix
if (!function_exists('md5_file')) { ...
missing .cvsignore
* E_ALL fix
* avoid object copying
* oops, config object was copied * call parameters were not passed on to xmlrpc_encode_request()
Print multibyte and SSL support is compiled in libpq or not.
ChangeLog update
Print PostgreSQL version number in phpinfo()
* install PEAR/Command/Remote.php
* added sys/utsname.h test
Looks like mawk can't handle create_stubs - if someone is keen it would be nice to fix that, but for now just make a note that gawk may be needed.
- Proper use of underscores (s/createsid/create_sid/) - Bump the API date and remove extra cpp macro - Pass TSRMLS appropiately to the create_sid function
-compiler warnings
Enable --with-apxs build on Mac OS X. We build an MH_BUNDLE instead of an MH_DYLIB. As all PPC code is relocatable, we don't use the libtool based shared build but go a static route. Goodbye libtool! # I'm committing this to enable widespear testing. # Anyone have any ideas on how to easily backport this to 4.2.0?
ChangeLog update
Mac's Find By Content indexing sprinkles these annoying files around
Prepare for MH_BUNDLE build on Mac OS X / Darwin
Updating tests: remove alternative syntax in tests, added a special alternative-syntax testfile.
Added crack extension to php.ini-*
Added field to ps_module structure to hold function pointer for the creation of the session ID string. Default PS_MOD() macro sets this to be the default creation routine. PS_MOD_SID() macro sets this to a handlers session ID creation routine.
adjust to recent apr bucket api changes
- Added missing entry for mysql_info() and fixed some entries
WS fix
 - add mysql_info function
- revert patch
(PHP php_uname) display runtime uname rather than compile-time uname, added                 an optional parameter to get single fields (like uname(1)) # Windows version is not tested, and I didn't know how to get # `uname -n` on Windows, so it's hardcoded to "localhost" for now. # Windows gurus feel free to fix. :-)
Trying to be more clear.
* implemented "pear list-upgrades", which will show you what releases   are available on the server (shows newer releases with the same state)
* always require PEAR/Common.php
* allow "any" as a preferred_state value
* pass on xmlrpc faults as pear errors
Added class method registration test. It does not test for multiple method definitions due to test script limitation. # Current CVS source w/o my patch should fail, though.
Change title to reasonable one. # Shall we consider this as a bug or documentation problem?
#and when the test does not result like you expect -> change test data -fix test image
-fix possible problem on low memory -fix problem on failure
NEWS update
ChangeLog update
* fix tempfile cleanup
* per-command fold marks
* regenerate package.xml with file checksums
* default dep rel attribute to 'has'
* accept optional tmpdir arg in mkTempDir * handle changelog releases without filelist
Cleanup.
-Crack extension now available for Win32 platforms.  You will need to  acquire the cracklib libraries from  http://www.jtatesoftware.com/cracklib/. @A project has been added to the crack extension to allow it to be compiled @under Win32.  Cracklib libraries for Win32 are available from @http://www.jtatesoftware.com/cracklib/.
* added preferred_state config keyword
* added phpdoc * now ready to support multiple versions of the package format * don't parse dependencies in changelog * fix libfile parsing * default maintainer roles to 'lead' * added infoFromString() method * added xmlFromInfo() method to regenerate package.xml files
* added "platform" and "md5sum" attributes to <file>
- Back out broken patch
- MFB for fix build for BSD: BSD_MAKEFILE and resolver functions. (Patch by   Melvyn Sopacua <msopacua@idg.nl>)
- MFB
ChangeLog update
add test for file_get_contents
Add subject hash to parsed x509 data. Make the test use file_get_contents().
Phase 3 of OO wrapper cleanup # What was phase 2?
make quoted-printable encoding safe for use with digital signatures. Added some tests
WS fix
recorrect las checkin
fix for Bug #16314
autoconf 2.53 uses this directory for some temporary stuff
Moved these example scripts out of tests.
add test case for multiple To: lines
allow headers hash to handle multiple To: lines
not enabled by default
moved 'static' prototypes to prevent warnings
preparing for Content-Encoding detection
Factorize a few library/libpath-related functions
Defer linking against libmcal until we have built the extension, so that extension-supplied symbols are available.
Remove generated file
ChangeLog update
Ignore generated files.
build conflicts fixed
E_ALL fixes
_lock() now returns PEAR Error or true for consistency
allow other modes to work with -- correct #original idea was to allow this *only* for PHP_MODE_STANDARD
fix behaviour on -- #now php -- -i for scriptfile -i works
outcomment default linking against pam due to no feedback regarding its purpose
If an argument (<tag val=argument..) was not quoted, leave it that way.
Remove warnings
Changed error messages to be consistent with other error messages
- MFB
ChangeLog update
- Use correct header file.
MFB. (I must have been sleep-walking..)
Why was this here??
Whitespace fixes
- MFZE1
fixed prototype for mysql_ping
NEWS update
ChangeLog update
more zend_parse_parameters fixup
pproto fix
clean up mysql_real_escape_string() a bit
initial checkin
Added mysql_table_name() alias for mysql_tablename() Improved logic of parameter parsing code for mysql_ping  - made test for no arguments more explicit  - combined to if blocks into one if/else if block
 - added basic output buffering tests
1st implementation of magic-file based mime_content_type(string filename)
Backslashes caused the build to fail with autoconf 2.52
fix freebsd compile
Phase 1 of wrapper OO cleanup. # Collecting underpants
changed prototype for mysql_real_escape_string
Added support for session manager ID creation, works with patch submitted earlier
Added mysql_ping() function.
a) ws fixed b) changed mysql_list_processes, mysql_stat (zend_parse_parameters) c) New functions: 	1) mysql_real_escape_string	this function is similar to mysql_escape_string (deprecated). 					it needs a mysql-connection to escape a string according to the 					current character set
Override max_execution_time, setting it to unlimited.
News updates. # This might have saved some discussions on php-dev if I had done it # sooner :-)
 - initial checkin of basic testcases for pspell
(PHP mysql_list_processes) Returns a pointer to a result set containing                            information on the processes running in the                            MySQL server. (PHP mysql_stat) Returns a string containing information on the status                  of the MySQL server. @- Added two new functions: mysql_list_processes and mysql_stat (Georg) @- mysql_list_processes() fetches information on the processes running on @  the MySQL server. @- mysql_stat() returns status information for a MySQL server. #  Committed for Georg by Zak
* move logic to _assertStateDir
ChangeLog update
revert out accidental code
Documented -r and added TODO
remove experimental status
the point can be made both ways :)
make key identifiers case sensitive
 - fix "xml_parse_into_struct/umlauts in tags" testcase. It never really  - worked
- Remove read_uploaded_file
.cvsignore in tests dirs cleanup
remove inappropriate article
rewrite history a bit. there is no is_enum(), it was com_isenum().
The System class was modified to always return true or false instead of PEAR Errors. Changed then assertStateDir() to check for false.
Show maintainers name in package-info and show more human friendly column table names
-defined php_stream_temp_new() for standard temp streams
Yet another break; forgotten
Oops, forgot the break;
- Show the real dir where files would be installed (using role & config) - Introduce column wrapping
-removed -x -no german in NEWS
-removed -x -error handling for illegal switch combinations -corrected ws for one case block
- Use getenv('TERM') instead of $_ENV (empty for me in 4.1.1) - Added 'linux' as bold capable list of term types - Pass the col by reference for making the wrap take effect in tableRow
fix parse error
dl is now aware of modules compiled for php <4.1.0 which have a slightly different module_entry structure
- Added read_uploaded_file (patch by Andrew Sitnikov <sitnikov@infonet.ee>)
Nuke unused variables.
* added package-list and package-info commands (for .tgz files)
* use switch/case for what it's worth :-)
* _lock() calls _assertStateDir()
* support having a toplevel package.xml in tgz files
* wordwrapping and multiline table cell support
fixed some errors in regression tests.
changed license from GPL2 to PHP License.
fixed compile warnings.
"reverting" to 1.39 as per Tomas Cox's wishes.
proto fix
Added while(list() = each()) test # We may want tests/bugs ?
NEWS update
ChangeLog update
@Added new switch -x to CLI that enables execution of files without @scripting tags. (Marcus) -Add -x #Read follow up mail
fix the fix
* don't start table cells with a space in borderless tables
* typo fix
* use PEAR_Frontend tables in config-show command
- oops :)
* now using PEAR_Frontend tables
* ncurses note
* table support working * added bold support for xterm/vt220/vt100 terminals
* setUIType -> setFrontendType
manual is fixed to have static anchors generated from ids for the faq part
* rename class/methods
* temporarily added: nuke old files/dirs
de-overquotation
A cli-specific extension should be named once only, not twice.
* one last CommandUI -> Frontend change
* rename PEAR_CommandUI* to PEAR_Frontend* * rename PEAR/Command/Login.php to PEAR/Command/Auth.php * replace PEAR/Command/Info.php with PEAR/Command/Registry.php (will contain   more commands related to the local registry) * started working on Frontend table output
- Add test for sprintf()'s zero'th argument
- Add note about changed fopen wrappers
* No point in creating the lock file directory if it does not exist (so many   other things would fail anyway).  Throw an error instead.
ChangeLog update
getting rid of the warn_not_available alias
*** empty log message ***
- Make the rellocation of packages work as expected if the target   dir doesn't exist - The "install -f" now replaces the info in the registry
- Use proper macros for php_stream_cast() return values (fixes #16211).
The changes to build system and the streams stuff alone are big enough reason to make next release 4.3.0
- Implement command level options - Removed call pass by reference - Readd $options to command::run() params
-missing efree in close
This file is generated and not supposed to be in CVS
missing file
-removed old streams test code
This file was missing.
-fixed memory handling
added fnmatch() and glob() functions could someone please check if i got the virtual dir stuff right?
fix a problem handling nested directories
Support systems without NIS functions, but with non-working libnsl
Require that wrappers use <protocol>://<path> to avoid ambiguities when filenames have ':' characters. This slightly breaks BC with the old style zlib: wrapper.
proto fixes
Minor detail fixed.
Added tests for pow()'ing with broken exponents and some additional test for count()'ing arrays.
NEWS updates
fixed POST/GET input processing.
#ws
#uups commit on wrong file
-fix missing efree
readd the "list" command
Adapt this commands to the new config store mechanism and command params
Pass config to command factory and pass the correct command params
- The config object is stored by the factory method - Make install/unistall/package work again (didn't work for me)
Clean up unused stuff
ext/overload is a 'built-in' extension on Win32.
Implement bz2 streams and bz2: wrapper. You can now do this: copy("zlib:src.gz", "bz2:dest.bz2"); As with zlib, most of the functions with counterparts in file.c are now aliases to those functions.
really nuke it...
ChangeLog update
Convert the gzfile related functions into aliases for their equivalents in ext/standard/file.c, so a gzopen()ed file pointer can be used in fread, fseek etc. Improved behaviour of zlib stream. Moved passthru code into streams.c # I'm not happy about BG(mmap_file) Nuked gzgetss_state as no longer needed.
Show function name in error message.
added thread safe hashtable which allows concurrent reads but only exclusive writes
ws fix
fix version checking - now handle 1.2.3 and 1.2 as well
fixed signed/unsigned comparison warnings
Some PHP-info layout fixes (\n will automatically be converted into <br />) and a comment-related fix.
fix a missing [
- Should work better now..
Make state parameter of php_strip_tags passed by reference. Move state tracking to stream structure.
Streams are all tracked as resources now. Add some logic that will help track down leaks when debug is enabled.
Add parameter here too...
Expand the variables in PHP_EXPAND_BUILD_VARS.
add forgotten parameter
Avoid duplicate tests and make third parameter truly optional.
Don't quote too much.  Now autoconf-2.13 is happy again.
Remove autoconf-2.5x specific m4_default macro.
There should not be any trailing data on an #endif line
add info about build system macros
This completely fixes the iconv library detection under FreeBSD (the previous fix was incomplete).  We also set HAVE_ICONV and HAVE_LIBICONV based on the library that was detected.
- This is not needed here
- Make it possible to build ext/openssl as shared extension
ChangeLog update
Improve behaviour of the stream casting operation. Improve interaction with fopencookie.
pass function signature in zend_parse_parameters style lookup cache works now per signature (not only method name) reviewed resource management # have to learn now ..
Minor change to allocated lengths for dates
missing entry
- Support vpopmail 5.2 (fixes #16120).
Oops.. This should make I64 work on WIn32 as well
Changing the LongInteger to return 64 bit integers as string values with all 64 bit
* install PEAR_Command_Package
* re-add "package" command
* "pear login" finally works
* fix http auth bug
* add optional default parameter to userDialog method
Possibly fix a crash - Marcus, please take a look at it...
- Finish covering all parsed methods to check for validity in parser. - Change zval's refcount to zend_uint (If it doesn't slow down the Engine - too much it should probably stay this way). If anyone has time to test - the difference in speed between zend_ushort & zend_uint in zend.h of - the struct _zval_struct (one line change) I'd be glad to get some - figures.
fixed memleaks added method lookup caching pass function signature to hash function callback
Adding support for TinyInteger and LongInteger database types
fix for bug #16168
make buffer length warnings more verbose
fixed floating number incorrectly rendered (as mentioned by giancarlo@niccolai.ws in BUG #14755)
register some constants for user streams
- the fdf include file shipped with the FDF toolkit is spelled   in lower case (at least in version 5.0)
correct copy/paste typo
avoid possible buffer overruns when write returns a value larger than the buffer
Make file_get_wrapper_data return the underlying PHP object for user-space streams.
s/fgetwrapperdata/file_get_wrapper_data/
Remove trailing ;
some typo fixing, and following The Little Book, omitting needless words
Somewhere along the build changes, -export-dynamic was lost.
touch file. Please commit first the .re file and afterwards the .c source. Otherwise, timestamps will be broken.
fix #12793 - serialize will now spit a notice if the return value of __sleep is bogus.
added missing .libs entry
- Not needed anymore.
Added README.SUBMITTING_PATCH file. Please fix/add/change. Added more description for use of assert().
Add streams.c/user_streams.c to MSVC projects.
Implement user-space streams. There's probably room for improvement, docs will following some time this week.
add sys/poll.h header detection
make feof more useful on network streams
added lookup caching and now make use of the new thread safe hashtables (not in cvs right now)
WS fix
ChangeLog update
Give one last reference to pear-get.
* pear-get gone
Fugbix typo.
Adding note about permission to distribute this code under the PHP license
Adding HAVE_SHUTDOWN on win32. Needed for the sockets extension to compile
- Let OCIError() also return the sql statement which failed and the exact   position into the statement where it failed (if applicable).   Patch by Daniel Ceregatti <vi@sh.nu>.
fix error message which appeared even if no ssl mode was selected
- More fixes to check for member/function call legality.
fix non-TS build...
Shouldn't have made it into my last commit.
TSRMLS related work on streams, as discussed with Zeev. # Should be the last "broad" commit for a while # Don't forget to make clean ; make
* get rid of this hack
proto fixes
* Refactoring of "pear" command internals.  Highlights:  - user interface abstraction, making a Gtk installer should only be    a matter of implementing PEAR_CommandUI_Gtk plus a "pear-gtk" executable  - separated code into command classes, able to specify one or more    commands  - no more "pear-get" :-) * fixed use of PEAR_Config::singleton to avoid object copying
-r is in the release branch.
unused makefile.in
empty files, let them go
fix warning
fix TSRM build
tidyup use of STREAMS_DC macros
having streams is now the default
Move stream files into the right folders
Update .dsp
Make Sebastian happy
Rename HAVE_PHP_STREAM to PHP_HAVE_STREAMS, because
touch file
-c option is for path.
Use common.inc instead of common.php for ease of use (rm -f *.php for failed test files)
-streams are no longer an option
-temp streams are now clean (Thanks to Wez)
add new ini item for fastcgi
add security impersonation feature for running under IIS security
Add impersonation feature for running under IIS
make test: '-c' flag doesn't work like this expects (it takes a directory, not a file), and this isn't necessary.
correct grammar
ChangeLog update
Add some rules for stream implementors.
-use php_stream_make_seekable
-added temporary streams -added stream debug code #should be used from php_stream_make_seekable
Streams now make more use of the memory manager, so tracking down leaking streams should be easier. # I hate these big commits
- Made one test/setup macro for iconv and fixed it to check   for libc first.
SAFE_MODE restriction error message fixed if the file doesn't exist
move_uploaded_files checks open_basedir now
Remove already included file
- Start putting error handling where method calls are being used in a - context where only writable variables should be used.
removed anoying warnings
reduced warninglevel to remove the annoying warnings from the re2c generated code
NEWS is my friend...
s/-/ ./
no, really update it
- This is not used anymore.
updated NEWS
tidy up the headers (streams related)
fix problems with cgi/cli sapi when running tests
#removed code to track down error in streams
-fix bug with wrappers
- Let configure also detect installation in standard unix paths. - Properly format error message.
fix closing pipes fix buffer overrun
fix win32 warning and ming leak
NEWS update
ChangeLog update
* added optional layer parameter to get() method * added isDefinedLayer() method
- WS and code style fix.
- Some more TSRMLS fixes.
fixed TSRM build
-quick hack to bug in streams....but where?
-disabling debug #Wez: i have an error when closing the original file after stream copy...
-formatting
-fix bug for not correct terminated comments -switch to streams @exif functions now support streams using memory streams where @necessary (marcus)
-added memory streams @added memory streams (marcus)
-copy_stream_to_stream returns size if maxlen ==  PHP_STREAM_COPY_ALL #had to commit myself to do the rest...
fix ftell/fseek in stdio streams
fix build problem for interbase
- Indentation fix. Never do: if (expr) { } else
add HAVE_PHP_STREAM macro for extensions to test which fileio functions to use
s/get_file_contents/file_get_contents/
blah
Ooops.
Implement get_file_contents() as discussed (briefly!) by myself, Derick and Sterling on php-dev some months ago. It returns the file contents as a string, and uses mmap if possible.
- WS fix.
- Don't forget to close the handle.
correct some problems with ming
Hopefully fix resource usage so that we have no leaks and don't segfault.
fix typo
work around apache segfault for the moment
Tweak the API to be more consistent. Update docs.
- Raise warning when trying to execute non-executeable shell   for mail delivery binary.
TSRM fix
fsock.c did it this way, so it must be OK...
bring back ptrdiff_t
Hopefully fix probs with apache.
update NEWS
fixed possible bufferoverflow in get_next_char malformed input to htmlentities/htmlspecialchars with utf-8 encoding crashed the server
- Add streams.c and php_streams.h to project.
fixed some errors of mbstring in regression tests.
- Do not use @ when you're merging the fixes to the release branch.   Instead, edit the NEWS file manually.
some minor docu-in-header changes
Quick fix build error when ptrdiff_t is not defined in types.h or sys/types.h
ZTS build fix
ZTS build fix
Allow php_stream_copy_to_stream to do nothing when used with code that calculates a max length of zero. (Thanks again Marcus).
-use of corrected stream seek #thanks to Wez! #image.c no works again
some tweaks for seek/read used in image.c (thanks Marcus)
This should help with some build problems/warnings under win32. Someone still needs to add the streams.c file to the MSVC project/workspace though (there are so many that I don't really know what I am doing :-).
-new streams
more *'s
change * formatting
* formatting, plus remove some old fopen wrappers
change * formatting
NEWS update
ChangeLog update
the 'setup' script was removed more than two years ago. these can be safely removed from the 4.2 branch, too.
- More whitespace. I really can't do the other files though...
- Change one strncpy() to strlcpy(). - Big indentation patch. I don't have strength to do all of the changed - files but here's a good example. Please try and keep to the coding - standards even if you think they suck :) - Things to keep in mind: - void *foo and not void * foo; - if() { and not if()<TAB>{ - } else { and not {\nelse - - The streams stuff looks very cool though! :)
ongoing development ...
This entry belongs under 4.2.0.
New PHP streams...
@ fixed a bug that caused php to crash in php_COM_get_ids_of_names() (Harald, Paul)
- Corrected these entries. (catched by Derick)
- proto fixes
don't redefine NDEBUG if it is already defined. yeesh.
- Pass TSRMLS to callbacks.
- Scope fix. When calling an imported function the scope will change - correctly to the scope of the functions class. <?php
added new ibase_fetch_assoc() php function
* "new and improved" iconv test
fixed HashTable allocation
* fix for db3 from ports on freebsd
- Revert assert fix until it becomes clear what was wrong with my previous - fix. I don't see any warnings when building with VC++ English.
* yet another iconv config fix, should be able to handle most or all   configurations now (giconv/iconv, static libs only, iconv in libc etc.)
Avoid warnings under VC. # If you know how assert() should be used under VC, please fix it.
Added some fix. Clean up a bit.
it's late; no more commits from me tonight...
should have diffed first...
fix for ZE2 compile
ChangeLog update
rpc apstraction module does only work with ZendEngine2
Change case for consistency
more cleanup
Update howto
fixed a typo within checkuid
fix for delete $this and unset $this
- Define HAVE_ASSERT_H under Windows. There was a macro redefinition before - this.
Good suggestion, but I'm not sure we want to start receiving bug reports with that version
fix buglet
update version
Childish, are we?
Make it clearer what this entry means
- Whitespace part 1
fixed: last commit had debug code in it
fixed whitespace fixed lots of possible bufferoverflows fixed memoryleak
Add note on which version of Apache 2 this SAPI module is compatible with.
Translate to English. # I still don't know what a 'tag search' is...
Include/enable assert.h/assert() when it is available
NEWS update
ChangeLog update
Ignore extensions/sapis named skeleton
> might not sufficiently update a timestamp.
Really remove muscat directory.
Update Credits #Forgot about sapi
Update Credits
Because of the feature "don't try to send a cookie, if the sid was contained in get/post variables" (which I still am not convinced of completely), we need a separate variable which determines whether to define SID in the event that a cookie was not sent.
Some simplifications in PHP_ADD_SOURCES*
a bit of refactoring and making always_shared a nop in every day life
* another libconv->libiconv typo
Provide context-specific functions which yield the directories of extensions (PHP 4 configure vs. self-contained module)
Return attribute name  in node_name(), if it's a XML_ATTRIBUTE_NODE
Return #document in node_name(), if it's a XML_DOCUMENT_NODE
Sync with Apache2 Filter API change.
* muscat extension moved to PECL (it is GPL'ed and it has never been   appropriate to distribute it with PHP)
fix all comments in protos
I've altered my diagnosis of segfault/leak problem
No more lines on this test
phpdoc update
NEWS update
ChangeLog update
-handling
-remove filetime from test # that's magic - now the test should work on all installations
- Compile fixes for Engine 2
- Allow duality between Engine 1 & 2 using ZEND_STANDARD_CLASS_DEF_PTR
- Forgot to close comment.
- Macro for duality between Engine 1 and 2
- Another couple of indirection fixes. - Make class_entry->refcount be part of the structure and not allocated.
Changed to PHP_CONFIG_FILE_PATH use the environment variable SystemRoot
missed zlib.c
nuke old makefiles
forgot to add _NEW_
php_new_extension
old makefiles
remove old makefiles
Remove old Makefile templates
add makefile fragment manually
extension converted automatically to PHP_NEW_EXTENSION. Manually confirmed
-usability -tests
php_new_extension
unused file
* fix compile problem on platforms without iconv in libc
-return size of thumbnail even if it not read
(PHP gzencode) Reimplementation of gzencode(). Now works as documented                (gzencode(string data [, int level [, int encoding_mode]])),                should fix #15930. @- The second parameter of gzencode() now is the compression level like @  in the documentation. The encoding mode is a third (optional) parameter. # Rework of gzencode(), output should be closer to real gzip output. # I think in the old version there could be some problems with # this function and output compression, should be fixed, too.
-reflect changes -find image from run-tests.php
forgot SEPARATE_ZVAL, produced segfaults.  segfaulted only in 4_2_0 (not in HEAD and 4_0_7, strange...)
- make class tables contain class_entry *, not class_entry - fix isset($this)
Removed sqlrte from SAP DB liblist as it is not needed.
Catch up with recent test scripts changes
- Remove *FETCH() statements. - Clean up WS and parenthesis indentation.
nicer (optional) formated output in dump_mem and dump_mem_file
Change php_addslashes() a little. Since most users do not use magic_quote_sybase, be nicer to users not using magic_quote_sybase.
Make use of TSRMLS_C/D
-reflect new state of ext/exif
-support for array tags -better memory handling -support for thumbnails in TIFF format -new functions exif_imagetype @-new function exif_imagetype @-exif_thumbnail fupports thumbnails in TIFF format and can return size @ of thumbnail
-fixed bug 15174 -support for some broken jpegs: bug 13213 -better memory handling -initial jpeg2000 support (only jpc not jp2,jb2,jpx)
Add missing skipif.inc
Do not search php binary in search path, since we are not testing older builds. Print SAPI used.
Use CGI binary when CGI SAPI is there. Make "php run-tests.php" work with cli SAPI. # Anyone mind if I change spaces to tabs? # Currently, it is using spaces and it's should use # tabs just like C source.
NEWS update
ChangeLog update
- fix bug #16008
@ implemented domxml_elem_get_elements_by_tagname @ new function domxml_doc_get_elements_by_tagname @ new function domxml_doc_get_element_by_id (chregu)
fix on more build config
Maintain headers
-passing arguments to CLI, see: php -h
* make "make test TESTS=..." work again
* added file locking * added file name to package map
Print function names in error messages
Instructions for using FastCGI-PHP with Apache
Improved documentation for FastCGI SAPI. Documents the environment variable tunings and the new command line usage.
Add command line option to FastCGI SAPI to make it bind & listen to a socket. This makes setting up 'remote' fastcgi much easier.
Add global include path, so that other extensions can access the expat header.
Invoke pear-related targets conditionally and rename install-data-local target to install-pear. Also remove PEAR_DIR, because it is unused.
Use standard PHP shell check syntax
You don't need a C++ compiler to build 100% of PHP (and the largest part of the extensions), so I don't see a reason why PHP should not build on a system without a C++ compiler.
Add a note regarding which version we support
fix include paths for fcgi headers
WS and indent
Add comments for constants. Remove unneeded constants included by mistake.
Small memory leak fix that does not matter much.
ChangeLog update
handle numeric strings. this means we're less picky about the argument types, but the math functions aren't generally that picky.
fix output directory
woohoo, take some credit!
children should be zero by default, enable by setting PHP_FCGI_CHILDREN env var.
Update makefile for compiling with fastcgi under windows
combine fastcgi capability with regular cgi binary include fastcgi library for ease of windows builds NOTE: included fastcgi library is modified for thread safety, but 	fastcgi support in cgi_main.c is only written for single 	threaded serving.  This does not present any issue for using 	fastcgi.
New stuff for objects API: - Better assignment handling - More flexible operations with zval-containing objects
fixed wrong include file.
fixed module name iconv->mbstring.
- Renamed aggregate.lib.php -> aggregate.lib (.php files are always deleted bycvsclean)
ChangeLog update
- Add the original example script to the CVS so that it's always available.
Oops... 1 digit is allowed too! Reverting my fix.
NEWS update
ChangeLog update
whitespace..
- Commented out the space escaping. Works now as it did before.
@ implemented domxml_elem_get_attribute_node(attrname) (chregu)
-support for out of section data
Added linking files to make build compatible with RH 7.2's updated libxslt packages.  Should not break when compiling with older versions.  This may fix bug #15942 as well. Configure was giving a Warning message without these lines when --with-xslt was specified.
reimplementation using macro instead of function pointer ( Bug #15951 )
Add 'import const' example.
-change IsColor from non zero to 1 -new test and example for documentation
@ domxml_elem_remove_attribute(attibutename) is now implemented (chregu)
- Support importing constants. e.g.: <?php
Cleaned up previous commit. #Oops, commited older patch the first time :)
@- Added -r option to the CLI version of PHP which executes a piece of PHP @  code directly from the commmand line. (Edin)
@ added formatting option to domxml_dump_mem() (chregu)
ChangeLog update
-Changes according to exif.c 1.55
-Support for IFD Arrays #necessary for update/write operations
TIFF support for 'non' digicam files # same as in standard/image.c but here it's more complex
TIFF support for 'non' digicam files
Commented out a few lines that were causing a segfault in the unlink code. This fixes bug #14522.  I've tested that it does not cause a segfault under RH 7.2, and retains all functionality.  I recommend that this patch be considered for the PHP_4_2_0 tree as well, as having a function that core dumps every time is a bad thing(TM).
These tests currently depend on register_globals=1
News update
remove -module, it is added by configure.in
Update test target from rules.mk
Readd ZEND_EXTRA_LIBS (as in Makefile.in rev 1.106).
Correct the header file ordering.  From 'man 3 inet' (FreeBSD 4.5):
Revert uppercase directory name to lower case.
ze2 handling
Enabling crypt() on Win32
Build libphp4.la as a module which can be dlopened.
Making mbstring compile under WIn32
some more information
Add NEWS entry for the new build system.
Added type attribute wrappers to the remaining node types that did not have them.  I.e. XML_ATTRIBUTE_NODE and XML_CDATA_SECTION_NODE.  Mentioned in Bug #15918.
Added TODO item to modify new_child so that more than just element nodes can be created.
- Remove CVS things
touch file
From APR CVS.
reverted my patch to fix freetype2 related problem.
Bad extension. Still using AC_ADD_INCLUDE!
Remove .libs from .cvsignores, except /.
phpize is already working, remove from todo
Please welcome the new build system.
Add another 'import' example and merge 'import' section into 'Namespaces' section.
- Update NEWS
Rename common.php to common.inc for easier deletion of garbages. e.g. "rm -f *.php"
NEWS update
ChangeLog update
more proto stuff
Add news entries representing the sockets rework. #I had a hard time with the style due to the number of entries #Feel free to make any changes
proto fixes:   - changed 'double' to 'float'   - changed 'int' to 'resource' where appropriate   - format change: proto has to be on a single line and description     on the very next one, some tools still rely on this
iconv is back
- Bump version numbers on HEAD
- Cleaned this abit (no such long stuff should be here if it can be found   in Manual...and if it's not in manual yet, ADD IT! - Also moved some of the major changes in the beginning where people   might even notice them. We should re-arrange this better btw.
- standard test scripts for exif #hope all problems in exif are resolved now
-comments #just another jhead.c line
fixed my foobarred news entry
-comments
Sockets Rework Patch 3 of 3 Nuked all fd code Rewrote socket_select to use arrays instead of the fd code (This has the side-effect of fixing quite a few bugs)
(PHP opendir) Changed CHECKUID_ALLOW_ONLY_DIR to CHECKUID_ALLOW_ONLY_FILE               so that relative paths (vs absolute) work correctly.
-updated test to reflect third parameter of exif_read_data
-missing efree -incorrect index/length computing: left from jhead #no errors left with test files - controlled manually with hexeditor
- Add function * and class * functionality. Only constants are left. <?php
quelling a warning, and ensuring now undefined behavior
When #if BLAHING a section, ensure to make it's prototype included.  Returns build capability to MacOSX.
- Add 'appname' parameter to sybase_connect. (Patch by Christophe Sollet   <csollet@coleebris.com>)
- Put them back (and do it right)
Do the estrdups after checking for parameter constraints.
Did not revert back enough.
SID shall be defined to name=id, if the client did not supply a cookie.
Always initialize the track-vars
- Remove unused variables
- More ZTS fixes
-updated test
-new working thumbnail code -everything uses new data structures -new function exif_thumbnail #nearly stripped off all jhead code @read_exif_data is now an alias for exif_read_data @  important to differenciate old/new version for tests) @new function exif_tagname returns the names of tags @new function exif_thumbnail extracts embedded thumbnail (Marcus) #switched to internal version 1.2
Weep out all recent commits of Yasuo.
Use static mm file save path. Now we can safely stop web server at start up when there is an error. Older mm uses static mm file path anyway.
Make php start even with wrong save_path.
ChangeLog update
Using session_save_path() after starting session is obvious error. Riase E_NOTICE error instead of E_WARNING. Since it is valid if user uses session_save_path() with session_module_name().
Raise error when session module failed to open or read
More TSRM work
Remove TSRMLS_FETCH() and use TSRMLS_C/TSRMLS_D # Need a little more work for backword compatibility
- Added recent changes done in ext/posix
Make $_SESSION and $HTTP_SESSION_VARS links to each other
* PEAR_Config test complete
-fixes -changed internal data structures #nearly stripped off all jhead code
* update PEAR_Config test
* fix singleton() so it actually works * insert file format version in written files * add getSetValues() method for listing the valid values for a set value
Breaking BC, but making odbc_fetch_into behavior more consistent
- Introduced posix_errno() (get error number from last error message) and   posix_strerror() (convert error number into error string).
* fix PEAR::setErrorHandling() settings so they apply when using raiseError()
- More test fixes
Added README.TESTING
s/php.exe/php-cgi.exe/.
Added a comment for future reference
Style Improvement
NEWS update
ChangeLog update
* fixed a couple of bugs in PEAR_Config revealed by test
Killing compiler warning
Making dbase compule under WIn32
Killing compiler warning on Win32
- also test TIFF support in GetImageSize
- Read IsColor for TIFF
Rename Win32 SAPI/CGI binary to php-cgi.exe.
Silence a warning under Solaris 8 (WorkShop Compilers 5.0 98/12/15 C 5.0).
Add apparently missing include
- Some more speed (and more consistency) #- I had some spare time Sascha :)
Supply php_html_puts which escapes a whole string.. now fully works in ZTS mode, too.
Silence warning.
revert last commit, puts does more through putc.
Use PHPWRITE to output data.  Because this just outputs diagnostic information, a few spaces won't hurt (and multiple ones are rendered as one by browsers anyway).  Micro-benchmarks which use phpinfo() as a mean to generate output will yield more through-put now (35 req/s vs. 83 req/s in tux).
-expose the fact i am working on exif as discussed with Rasmus
- TIFF support for GetImageSize @ TIFF support for GetImageSize (Marcus)
- disabled debug information - added missing width/height from primary ifd for TIFF
typos suck.
Style mismatch: Jon's catch
cygwin fix
Silence warning under Solaris 8 (WorkShop Compilers 5.0 98/12/15 C 5.0).
Silence warning under Solaris 8 (WorkShop Compilers 5.0 98/12/15 C 5.0).
PEAR_Config rewrite:
-addition to last change: php_image.h must be included now
Changing the Velocis extension to now be called Birdstep, due to a product/company change. added aliases for Velocis to the birdstep functions. # testing is both advised and encouraged! @ The Velocis extension is no
Restore use of inline
Remove note, suppress warning
Reduce operations in the ub_write loop.
Free status line, initialize number_vec, correctly account for the number of bytes in the document, avoid strcpy/strlen.
Let getimagesize() and read_exif_data() share the same constants to promote a little bit of code reuse here on two very similar problems.
-Updated test.txt and provided test.php # simply including test.txt @Added test.php/txt to have a possibility to check ext/exif @(Marcus)
-Added TIFF support -Changed parameters after checking bugdatabase and discussion with     Rasmus: 1st=Filename, 2nd=NeededSections # 3rd=Thumbnail, 4th=All #   3rd and 4th parameter are currently diabled because the code #   does not work correctly (will correct this in later versions). #   Changing the parameters will not cause any problems because the #   old parameter functions never found their way in documentation #   and the they did not work... @-Added TIFF support @-Changed parameters after checking bugdatabase and discussion with Rasmus @    1st=Filename, 2nd=NeededSections @    If the 2nd parameter is not present or 0 or '' the function will return @        a result array even if no data was read from file. #        Personally i consider a default behaviour to generate no array if #        no data is present as a bad idea because here we can generate as #        much information as possible.... @    If the 2nd parameter is a string then that string describes which @        sections have to be present in the file to generate a result array. @        If none of the needed section is found the result will be false. @        Section strings are "ANY_TAG","IFD0","COMMENT","EXIF","GPS","INTEROP" @        "FPIX","APP12". Each string has to be separated by a colon. So @        "COMMENT,EXIF" returns an array if either a comment or an Exif @        section is present. "IFD0" is standard datastructure in a TIFF/JPEG @        file that contains image information. "EXIF" is the Exif structure @        of TIFF/JPEG (IFD0 subdirectory). "GPS", "INTEROP", "FPIX", "APP12" @        are additional IFD0 subdirectories. The APP12 support is an @		 experimental Olympus support. #        Do not worry this is no problem, it is safe. @(Marcus)
NEWS update
ChangeLog update
Added message regarding expected error messages for ./buildconf
(php_checkuid) Added case for root directory when mode is                not CHECKUID_ALLOW_ONLY_DIR.
(php_checkuid) Added case for root directory when mode is                CHECKUID_ALLOW_ONLY_DIR.
(PHP opendir) Added safe_mode checks on path. @- Added safe_mode checks for opendir(). (jflemer)
- Tidy up NEWS a little bit
Updated build instructions
NEWS update
ChangeLog update
Consistency.
Add 'import statement' section.
- Initial patch to support importing from class scopes (for Stig). - It isn't complete yet but I want to work on it from another machine. It - shouldn't break anything else so just don't try and use it. - The following is a teaser of something that already works: <?php
- Make the 2nd parameter to pgsql_fetch_* support NULL in case 3 parameters   are supplied, but you do not want to provide a row number yourself. @- Make the 2nd parameter to pgsql_fetch_* support NULL in case 3 @  parameters are supplied, but you do not want to provide a row number @  yourself. (Derick)
php has no 'double', only 'float'
tab/space mixture cleand up, editor config comments added, minor proto fixes
typo fix
enable ctype functions by default
Wrong brackets by rasmus...but sorry the fault was mine because i missed them...
- MFZE1
- MFZE1
- Make GD functions only available if they really exist (Patch by   matslin@orakel.ntnu.no)
Add mbstring tests
Use php.ini-dist as default config file for testing.
Improved iconv usage with libc's iconv. No overrun. More efficient memory allocation. Hopefully, all bugs reported for iconv will be resolved when users are using libc iconv. @Improved iconv with libc's iconv
Add more tests for iconv
* more cli test fixes
* updated tests to work with cli
fix test
* work with sapi/cli
NEWS update
ChangeLog update
Added PHP_SAPI constant which contains the name of running SAPI. @- Added PHP_SAPI constant which contains the name of running SAPI. (Edin)
MFZE1
MFZE1
*** empty log message ***
- Remove use of C++ reserved words namespace/this
- Add support for returning NULL values from Interbase resultsets (Patch by   Daniela Mariaschi <mariaschi@libero.it>)
- We haven't got the branch yet.. - Some typo fixes and correct grammar.
Update doc
Added todo item for Java extention documentation.
* code for install/uninstall/upgrade complete, not yet tested # uses a new, un-committed version of PEAR_Config
Do explicit test againt to FAILURE. # Thanks Rasmus.
* output a reminder to set CVS tags after packaging
* use cli sapi to run tests
add stuff here also.
add comment for IIS users fix some whitespace
+Support for Photographer/Editor Copyright as associative array as this is a new feature the change (optionally being an array) has to be mentioned in documentation. +New function exif_headername can be used to read the internal Tag namelist (was mainly created for debugging purpose but maybe somone writes code to create/update exif headers here). +An internal version number is present. +A testpage is supplied test.txt describes how the test works. +The oldfunction read_exif_data has got an alias exif_read_data
Added ob_get_status() to get array of buffers and it's status. (DO NOT document this function yet)
document force-redirect in php.ini
This is much better.  With FORCE_CGI_REDIRECT turned on by default for compilation, we can now define this in the ini file.  So it can be turned on for apache, turned off for IIS which does not have a redirect issue.  Alternately, a different 'REDIRECT_STATUS' environment var can be defined in case some web server out there needs it.
ChangeLog update
fix force redirect crash under multithreaded compile
turn on force redirect for windows
Change fatal errors to warnings - fix bug #15797
- Make it a boolean
Inserted a note about CGI binary name change.
Updating docs (Mc)
Changed file to match CODING_STANDARDS except function names that match jhead.c project. I think it is acceptable using naming conventions of other projects when borrowing code.
Removed CWD from php_ini_search_path when using CLI SAPI.
Use {NULL, NULL, NULL} to terminate function entry. # It does not fix any bugs, since {0} works also.
Default name of CGI binary changed to php-cgi. # Please note that this only applies when installing php with # make install. The binary is still built as "php" in top build dir.
Added entry that I forgot when comitting the code (Mc)
Maintain headers.
Recommend ZEND_* macro over PHP_* macro as discussed in php-dev.
Added how to put bug ID in commit message.
ChangeLog update
+Added UNICODE support for Comments +Added Description,Artist +Added missing memory deallocation +Corrected error with multiple comments +Corrected handling of ExifVersion, Tag has 4 ASCII characters *WITHOUT* NUL +Corrected handling of Thumbnailsize if current source detects size < 0 +Changed all fields to char* that do not have a maximum length in EXIF standard +Undocumented second Parameter ReadAll frees memory to early -> moved to third position default changed to false -> faster +New second Parameter [true|false] to specify whether or not to to read thumbnails -> reading is timeconsumpting suppose default should be false -> done so
Drop this default to 12 to avoid some of the .000000000000001 questions. I can't imagine much of a BC issue, and we aren't changing existing php.ini files anyway.  If someone can think of a problem with this, please speak up
Initial MCVE extension added (Credit Card Processing)
This has been scaring people off.
- Missed this one..
Implemented yaz_schema. Cleanup. 1.8 YAZ required
- Oops... wishful thinking here :)
- Update version number
correcting grammar so it's readable
Add 4.1.2 NEWS entries to HEAD.
URLEncoder.encode(string) is deprecated in the Java 2 SDK 1.4.
ChangeLog update
- Hopefully fix the shutdown_memory_manager() stuff. Part of my previous - patch seems to have gotten lost
TSRM Cleanup.
- MFZE1
- Pass shutdown_memory_manager the TSRMLS context.
Bug fix 15719 as submited by Joseph Southwell and allows NULL values in ODBC # I haven't been able to fully test this due to MacOSX compliation errors. # if someone in the QA group could that'd be appriciated.
Allow use of dl() when CLI is compiled with ZTS (bug #15717).
ChangeLog update
make it more clear that --with-apache and --with-apxs only work with apache 1.x.
NEWS update
ChangeLog update
- Add slashes around string output
- Update with XP (Thanx to Jan for the patch)
* fix broken dtd # Tomas, there is no way to do what you want in the DTD without switching # from XML to SGML.  Sorry :-)
Make phpinfo() look nicer.
ChangeLog update
DTD corrections (make it require minimal data for installer)
* started implementing new "cross-environment" command API # work in progress, not tested at all yet!
Point readers to pear web
outdated TODO not needed for the moment
fixed configure error with freetype1.
ChangeLog update
fixed a comment and default output encoding changed to pass.
php.h included.
* Packager : Changing the order of the files in the package archive file. The package.xml file is now at the 'root' of the archive, the files tree are under a 'packagename'-'packageversion' folder * Installer : installing the knew archive format AND supporting the existing format
Return true on update success.
ChangeLog update
Maintain ZEND_CHANGES to account for the addition of private member variables.
- Experimental support for private members. <? 	class MyClass { 		private $Hello = "Hello, World!\n";
Added fmod() function # Is there any reason that math.c does not use errno?
Add aggregation to Win32 build.
Adding object aggregation capability along with tests.
ChangeLog update
"o|a|b" is not valid ZE code. changed to "o|ab"
Config variables must be set between "" while using pear.bat windows script
* Correct bug while using windows dir separator. It is now supported
Split CRC32 table out into a header file so other code can use it
- Reformatting
ChangeLog update
- Update to note that I'm the mcrypt extension maintainer
changed comment for dbx module
#updating the EXTENSIONS to show the proper recent maintainer.
ChangeLog update
='typo'
Oops: source copy&paste should be done with care :) (Mc)
Added support for Sybase-CT to dbx module (Mc).
ChangeLog update
* allow <license> in both <package> and <release> * added <changelog> element * added "data" role for files * allow nested <dir> elements
Updated to new TSRM macros
Image/Remote.php and Mail/mime.php have moved to the pear/ repository.
ChangeLog update
fix for bug 15516, patch submitted by torben@php.net
- Make the errorcode 255. (Doing docs right away)
ChangeLog update
- Let php_execute_script return 0 on failure and 1 on sucess, and change   SAPIs accordingly. (Andrei, Derick)
Turned implicit_flush on. Cleaned up help text.
Added README file for CLI SAPI.
- Remove duplicate constant
Pass TSRM to create_object
NEWS update
ChangeLog update
* Synchronize pearwin script with pearcmd-xxx.php commands * Still work to do
* user system/user config rather than default value
@ Allow a series of consecutive catch() statements (Andi, Zend Engine) <?php 	class MyException1 {
- Adding support for remote-list command (with XML-RPC installed) - Start support of show-config (still work to do ...)
Ack.
* "pear-get install Auth" works now
NEWS update
ChangeLog update
* don't use ext/overload yet
* print package name
 - added support for different error messages for the following cases:  -  - if a user with unsufficient permissions trys to select a database  - PEAR::DB previously threw a "no database selected" error  instead  - of a more proper "insufficient permissions". This is fixed now.  -  - if a user selects a nonexistant database PEAR::DB threw a  - "no database selected" error instead of "no such database".  - This is fixed as well.  -  - I added two new constants to DB.php and a simple case construct to  - DB/mysql.php which can be easily extended to achive the above. I  - hope this is ok.  - Thanks to Till Gerken for mentioning this.
Adding automagically updated ChangeLog.
Irix defines AF_INET6, but lacks IPv6 support, including struct sockaddr_in6.
Initialize automatic persistent connection reset flag
Expose pcre_get_compiled_regex as an API function.
ChangeLog update
Added one more tweak for 4.0.x compatibility. Used "#warning" to inform users of a hard dependency. (If #warning is unaccptable, let me know!)
Fugbix typo.
ChangeLog update
NEWS update
'0b' could be the beginning of a hex string (without leading '0x') so if the user specifies base 16, use that instead.
Add a new test for GMP base recognition.
Renamed zval_debug_dump() to debug_zval_dump()
Now System will return false on fail
test suite for the System class
- Now error will be triggered with trigger_error(). When a command   fails the function will return false - In-line documentation update
Export lex_scan(). Both the PHPDoc and tokenizer extension need this. I hope this is okay with Z&A.
only rollback at script end if there is something to rollback.
Added php_sockaddr_size() in network.c (and the header file). This is used in ftp.c to make sure connect() and bind() is called with size argument which is exactly the size of the relevant sockaddr_xx structure
TSRM fixes.
@Added zval_debug_dump which works similar to var_dump yet displays extra internal information such as refcounts, and the true type names (Jason)
ChangeLog update
*** empty log message ***
* ZTS fix # Sebastian, does it build on Windows now?
ChangeLog update
NEWS update
Add MSVC workspace for tokenizer extension. Add php_tokenizer.dll entries to php.ini-*.
- got rid of unneded calls to OCIAttrGet when reexecuting the same query - only invalidate the define list after all rows from a REFCORSOR are read,   "normal" corsors will now remember their column defines. this means that   ocigetcolumn[name|type|..] will from now on work even after the result set   has been read.
@Added Andrei's tokenizer extension (Stig)
Backward compatibility to 4.0.6 does not have "HAVE_PHP_SESSION" define Renamed PHP_4_x_API to PHP_4_x
ChangeLog update
- Remove object debug messages.
move to the ZEND_DECLARE_MODULE_GLOBALS() and ZEND_EXTERN_MODULE_GLOBALS macros
* Better error handling.
Mega-commit: Enter the new object model Note: only standard Zend objects are working now. This is definitely going to break custom objects like COM, Java, etc. - this will be fixed later. Also, this may break other things that access objects' internals directly.
* Partially fix bug #15423.
ChangeLog update
Convert pLists to output character set before parsing the list
Added order by clause in fbsql_list_tables(). Table names will now be sorted.
Adding fbsql_table_name() aliased fbsql_tablename() for compatibility with MySQL
Remove unused line # I forgot to delete this line
added 'System::type()' (show the full path of a command) Copied almost verbatim from Stig's PEAR_Dependency::checkProgram()
Clean up code. Removed PHP_PGSQL_API macro. Define pgsql_globals_id # Need a little more clean up
Make module specified functions to static. Added TSRMLS_D/C, get rid of one TSRMLS_FETCH.
ChangeLog update
NEWS update
- Add TSRMLS_FETCH()'s needed for the new object overloading in ZE2.
Sorry guys, PHP 4.0.6's ZEND_MODULE_API_NO is whacked, it has an extra zero, thus ZEND_MODULE_API_NO >= xxxx, will not work for about 18000 years. Added better checking, and cleaned up some of the #ifdef you seem to love so much.
removed the new-style parameter parser code for bc *and* readability reasons, changed the remaining #ifdefs to check the api version directly instead of using the not really related OLD_ZEND_PARAM macro
@- Removed Satellite. It is now part of PEAR.
pval -> zval Check number of parameters
register_globals=off is defualt for 4.2.0
Let's be consistent and use zval instead of pval
Export php_session_start().
The extensions build as shared were installed into wrong place even as the layout was PHP.
ChangeLog update
- This small patch should also take care of allowing unseting of $this->foo - and static members. The unset() opcode was luckily already suitable for - object overloading.
More 4.0.6 compatibility.
Restored backward compatibility to PHP 4.0.6
add oracle 9 detection for oracle-module
Remove TSRMLS_FETCH() does not need
ChangeLog update
don't include old changelogs in distribution, either
Zend config sets ZEND_EXTRA_LIBS. Bugs 14452, 14602, 14616, 14824
Zend config sets ZEND_EXTRA_LIBS. Bugs 14452, 14602, 14616, 14824
Revert last commit. Last patch has problem for the 1st request. # I also found what's wrong in mod_mm.c  :) # I'll fix it later since don't have much time now.
Added UCS4 test
ChangeLog update
now needs getopt
an update to stresstest
Revert per Andi's request. Sorry :-(
Remove obsolete CG(extended_info) = 0 calls, we already do this in zend_set_default_compile_time_values().
- Please don't use strcmp() and friends in Zend but only the mem* - functions. I didn't check this patch so please check that it works.
Consistency.
- Nice catch by Derick. GINIT is dead.
Revert revision 1.294.
ChangeLog update
NEWS update
* add some missing attributes
MFZE1: is_a()
Converted extract() to use smart_str for variable name manipulation. This sped it up a bit.
Changed php.ini directive 'safe_mode_include_dir' to accept a (semi)colon separated path, rather than a single directory. Also moved checking of said path into a separate path for code readability. @- Changed php.ini directive 'safe_mode_include_dir' to accept a @  (semi)colon separated path (like 'include_path') rather than @  a single directory. (jflemer)
Added is_a() function.
Added support for passing special backend params in DSN. Ex: ibase://user:pass@localhost/db?role=foo&dialect=bar
remove some crap
2 years is ages.... and no way temporary. changed the php4 logo to a versionless one.
ChangeLog update
updating license to 2002 (hasn't been done since 2000)
fix comment
A fix for the bug number 13231 & 11699. Makes the roxen support compile.  Patch by Lars Wilhelmsen <lars@sral.org>
* lowercase tags and attributes
* remove broken rule for rebuilding Makefile
ChangeLog update
Ignore register_globals for $argc and $argv under CLI SAPI.
Enable extensions to specify that they are not supposed to be built with the CLI SAPI. This is done by passing "nocli" as the 3rd parameter to PHP_EXTENSION macro.
Fugbix typo. Update path to /lib/optional.
* don't make command libs executable
* modularize "pear" and "pear-get" commands somewhat.  checking options   etc. is done for both in pearcmd-common.php.
* silence warning
* bring DTD up to date
enable "user-interrupts"
ChangeLog update
Overload is built-in.
ChangeLog update
Commit for mr. torben: Add XSLT to extensions file, mark sablot obsolete
These are now defined in zend_config.w32.h.
testing checkin
ChangeLog update
MFZE1: define a couple of macros under win32. (Patch By: Jon Parise <jon@php.net>)
zend_isinf() is already defined in Zend/zend_config.w32.h for Win32.
add ibase_add_user(), ibase_modify_user(), ibase_delete_use()
Use the zend_* versions of finite(), isinf(), and isnan(), as defined in php_config.h.  Redefine the zend_* versions in the case of Win32.
Add a note that this statement will never be reached.
Add a comment indicating that this return statement will never be reached.
Use socklen_t (instead of int) where appropriate.
Because php_network.h includes <sys/socket.h>, it must be included after _XPG4_2 is defined.
don't throw fatal errors, throw E_WARNING instead.
hopefully fix --with-openssl issues
Enable developers to use PHP_ARG_ENABLE and PHP_ARG_WITH silently to maintain legacy configure options without clutter in the configure help and checking output. # Hopefully this encourages module writers to finally adopt # standard naming conventions for their configure options!
ChangeLog update
- Reorganized stuff in configure.in and added a few comments # This isn't nearly as big a change as the diff would lead one to believe. # I've tested this on all my machines and its working for sniper too. - Added a check for ApplicationServices/ApplicationServices.h (Mac OS X) - Added AC_PROG_CPP, AC_PROG_CXX and AC_PROG_CXXCPP # (the bundled libmysql build was failing without them with ac2.52/OSX) - Improved the IPv6 check to fail on Mac OS X (there's no IPv6 there yet)
* Remove the use of a temp dir * Tar archive is now doing the same work with less overhead
ChangeLog update
NEWS update
Improve detection of resolv.h on versions of Darwin, FreeBSD and Solaris (this requires post-2.13 autoconf, but 2.13 ignores it gracefully)
Relying only on host_alias is wrong
We need mm file for each user. # GCI/CLI SAPI need this. It might be better to disable mm save handler # for CGI/CLI, though.
no longer experimental
- First destructor hell fix. There was a situation where an object's - destructor could be run after its class was already dead. Right now - object destructors is the first thing whic happens during shutdown in - order to prevent this problem. It's very likely that destructors will - cause more grief and we'll have to outline exactly when you should use - them and what kind of logic you're allowed to do inside of them. - This bug was reported by sebastian.
- Added optional parameter to highlight_string and highlight_file which   makes these functions return a highlighted string instead of dumping   to standard output. (Derick) @- Added optional parameter to highlight_string and highlight_file which @  makes these functions return a highlighted string instead of dumping @  to standard output. (Derick)
(extraxt) add EXTR_IF_EXISTS and EXTR_PREFIX_IF_EXISTS flags @- Added EXTR_IF_EXISTS and EXTR_PREFIX_IF_EXISTS flags to extract() @   EXTR_IF_EXISTS only extracts a variable if it already exists @   EXTR_PREFIX_IF_EXISTS only extracts the variable if it exists and @   then it prepends the prefix to it.  ie. if $PATH exists then @   extract($_ENV,EXTR_PREFIX_IF_EXISTS,'e') would result in $e_PATH @  This lets you do $a = $b = $c = true; extract($_REQUEST,EXTR_IF_EXISTS); @  and you only get the global request variables you have defined imported @  into your symbol table.  (Rasmus)
Add sapi postfix for mm save path. cli/cgi would not complain about mm save handler with this. # I'm really annoyed by mm save path problem...
adjust to ap_get_brigade() API change
ChangeLog update
Added "pgsql.auto_reset_persistent" ini entry to catch broken connection always with pg_pconnect(). (Default Off in source and php.ini-*) This option requires a little overhead for pg_pconnect().
Added "auto_reset_presistent" ini entry.
Latest libtools output a multiline version info. Deal with that
Ignore ordinal suffixes on numbers (bug #15210)
Added --disable-cli option.
Made entry more consistent.
fix typo, found by edin
Revert back to using <char> element for newlines.
correct url
Added a case for Darwin / Mac OS X to PHP_SHLIB_SUFFIX_NAME
Corrected a confusing comment (see bug #14972)
Don't build CLI, if an extension requests that.
Change NEWS entry according to pgsql source change.
Revert last 2 commit. Instead, make php_pgsql_do_connect() to catch broken connection always. # I think this is better than check&reset connection when query # functions are called.
* Call the PEAR_Registry constructor with the optional parameter
* Adding the ability to set the PEAR_INSTALL_DIR while creating the Registry object (in the same way as Installer.php)
* Adding support of extraction of remote archive http://www/archive.tgz * Correct bug while using Windows root path c:\xxx\yyy in extract fct
Added pgsql connection reset feature. Add my name to --enable-safe-mode fix.
Add a little more fault tolerance for pg_host, pg_tty and more.
No more httpd restart is required when PostgreSQL is rebooted. # Works for pg_query()/pg_send_query()
updated INSTALL to be more relevant.. more fixes coming (at some point)
ChangeLog update
* Add uninstall command * Add list-installed command
Return false when the directory can not be created in mkDir()
Add workspace to build CLI SAPI Module on Win32.
Give Edin Kadribasic his due credits.
No need to dupe this string in cli sapi (Bug #15181).
Added comment for pgsql module.
claiming maintainance ownership of ext/calendar
added info about FETCH macros (written over a year ago but somehow never commited)
ChangeLog update
Simplified domxml_substitute_entities_default() function
just init CURL_GLOBAL_SSL
Getting rid of some compile warnings (thanks to markus for pointing me in the right direction :) )
ChangeLog update
Added domxml_substitute_entities_default() function
- fixed bug caused by libxml2 in xpath_register_ns() - registered namespaces are now persistent
Adding Archive/Tar.php to php4/pear/.  This is needed in order for the phptar script (php4/pear/scripts/phptar) to be useful, so it makes sense to make Archive/Tar.php a standard component.
removed check macros no longer needed due to CLI work (plus reverting last commit, was in wrong dir :( )
removed check macros no longer needed due to CLI work
this closes off a number of ODBC bugs. # this is a bit hack-ish in it's functionality.  The proper answer (allowing # users to set their cursor type) has bugs with some tests cases at this time. #  But this is being done to just get ODBC back into working order.
ChangeLog update
- Improve performance of functions that use $GLOBALS[] - Please check this and make sure it doesn't break anything.
adjust to ap_get_brigade and input filter api changes
Move Cache to /pear.
Move Payment_Verisign to /pear.
Move Benchmark, Math, Numbers to /pear. Remove Log, it was already in /pear.
cut&paste errors in protos fixed
proto fix
Forgot to remove the return from a void function
These PHP3_* macros aren't defined in the code, so these haven't been doing anything for some time now (at least since 4.0 was released).  So let's go ahead and remove those. # If I missed something obvious, let me know and I will revert the patch.
Removed entry implemented in cli sapi.
Modified the build system to make certain extensions (pcntl, ncurses, pcntl) only with cgi/cli sapi's. This was done by adding 3rd optional parameter to PHP_EXTENSION macro which should be set to "cli" if the extension only makes sense for that class of api's.
Added missing entry to .cvsignore
ChangeLog update
NEWS update
Get rid of needless spaces
Revert my last commit # "automagic" is intened :)
Removed two issues resolved by the introduction of sapi/cli.
Make the decoder less strict to allow for brain-dead mailers that mark messages as 7bit but then include 8bit chars in the body. Thanks to Dan Fitzpatrick for bringing this to my attention.
MFZE1
ChangeLog update
NEWS update
reimplement extension listing
- More WS fixes
shite :) too much WS fixes. leave the licence as it was... # (why uses pear spaces and php tabs anyway... but i don't want to start another CS flame war ...)
- WS fixes (replaced "    " by \t)
- added optional parameters format and level for domxml_dump_node()
- added macro DOMXML_PARAM_ONE @- added function domxml_dump_node($doc,$node). Dumps a node plus all @  children into a string. (chregu)
@- Added function domxml_node_get_content() (chregu)
# sorry for the mixing of different things in this commit - added DOMXML_PARAM_THREE macro - renamed domxml_dumpmem to domxml_dump_mem, added alias for   domxml_dumpmem - domxml_has_attributes was missing in in zend_function_entry @- added function domxml_dump_file($filename,[$compression]). Dumps XML to @  a file and uses compression, if specified (chregu) @- added exslt integration (see http://exslt.org for details). To be @  configured with --with-dom-exslt[=DIR] (and --with-dom-xslt) (chregu, jaroslaw)
ChangeLog update
NEWS update
New function yaz_es_result: Z395.0 Extended Services Result. ----------------------------------------------------------------------
@ - Don't touch any globals in session_unset() if register_globals is set @   to off. (Thies)
@ - Added 3 new optional parameters to OCIFetchStatement(). They control @   the number of rows to skip at the beginning of the cursor, the @   maximun numer of rows that should be fetched and the format of the @   returned array. (Thies) # sorry, no time to write the docs for this right now...
Little cleanup, add information about Sablotron 0.8
Update for Sablotron .8
Use libxml2 header if there are older version. Reported by <jwagoner@wlion.com>
Added XsltStylesheet class with methods: - domxml_xslt_stylesheet(string), - domxml_xslt_stylesheet_doc(DomDocument), - domxml_xslt_stylesheet_file(filename), - process(DomDocument,parameters array) - previously domxml_xslt_process().
ChangeLog update
Export php_session_register_module/serializer
mysql_db_query is deprecated, fixed by using mysql_select_db and mysql_query (Mc).
Export php_session_register_module/serializer.
ChangeLog update
ChangeLog update
- using macro in xpath_register_ns() - fixed protos in xpath functions
fix for bug #14776
Update Exceptions example.
fixed an error in mbstring caused by confliction with regex.
ChangeLog update
NEWS update
- Change exception handling to use the Java-like catch(MyException $exception) - semantics. Example: <?php
New DSN "protcocol(protocol_opts)" format support: phptype://user:pass@protocol(proto_opts)/database ex: pgsql://user@unix()/pear mysql://user@unix(/path/to/socket)/pear pgsql://user:pass@word@tcp(somehost:7777)/pear
- MFZE1
4.1.1 NEWS entry block was missing from the HEAD tree
fixed some link error of gd's configure.
This should fix cli build when running 'make install' directly.
 - Added xpath_register_ns() function. @ - Added xpath_register_ns() function. @   It makes possible to issue XPath queries with namespaces @   like for example: "//namespace:sampletag" (Chris Jarecki)
ChangeLog update
Modified the build system to always build CLI SAPI.
My bad. Left some stray debugging code in previous commit.
See the update to dba_db3.c
This fixes the notorious "mode 'c' fails" bug (see bugs - 10380, 10798, 11732). The bug originates from the fact that mode "c" for db3 sets 'type' to DB_UNKNOWN and mode DB_CREATE when the database already exists. The underlying library raises an error at this logical discrepancy: obviously one cannot create a database of unknown type.
ChangeLog update
NEWS update
Added domxml_node_replace_node() function.
@Added multi-byte enabled regex functions. (Rui)
- mkdir(): made second (mode) parameter optional, default to 0777            switched to zend_parse_parameters(). # Added vim 'noet' setting
- Added HTTP::head($url) which sends a "HEAD" HTTP command to a server   and returns the headers as an associative array - Call-time pass-by-reference fixes
ChangeLog update
submit a test that will fail due to php bug #14744
Adding functions to get BLOB/CLOB size from a lob_handle. Added descriptions on most protos
- Make an E_NOTICE error type show 'Notice' instead of 'Warning'.
- Unified error messages. - Improved argument handling in dio_fcntl().
Improved code for handling PS(save_path)
Ws fix
(PHP touch) Operate on a stack buffer.. no need for allocating newtime on the heap.
Add three-parameter touch() which enables users to set mtime/atime to different values.
Make use of save_path for mm file. Patch by Henning Schmiedehausen <hps@intermeta.de> Closes bug 14808
Make these tests succeed with non-standard settings
ChangeLog update
Year update
shmop got a new maintainer
Rename finite/isinf/isnan to more standard is_*() names.
Move type-handling functions into ext/standard/type.c (which had a few otherwise unused functions in it).
- Correct some protos.
- fixed typo in deprecated functionname
- shmop_open has a new flag for read/write access, 'w' - eliminated a segfault when trying to write to a SHM_RDONLY segment - eliminated a segfault when an invalid flag which starts with 'a' or 'c' is passed - updated creators' email addresses - changed error messages to say shmop_* instead of shm* to correspond with new shmop_* function names Patch by Ilia Alshanetsky (ilia@prohost.org) # Please test :)
Reverted Hartmut's patch as it caused more trouble than it solved. # Broke my build totally. The 'correct' fix is to make the checks better # everywhere. ie. to check for existance of the library/symbol in some lib.
whitespace
ChangeLog update
A Changed names of functions: - htmldoc() to html_doc(), - htmldocfile() to html_doc_file(), - domxml_htmldumpmem() to domxml_html_dump_mem(), - htmldumpmem() to html_dump_mem().
Some whitespace fixes (naugthy me :) and make use of PHP_CHECK_LIBRARY macro instead of AC_CHECK_LIB.
Changed proto via Georg Richter's request.
ChangeLog update
NEWS update
- Added functions: htmldoc(), htmldocfile(), domxml_htmldumpmem(). - Added error handling for the libxml library. - Added preliminary DOM XSLT support: -- uses the libxslt library, -- operates on DOM objects, not strings, -- functions: domxml_xslt_process(), domxml_xslt_version().
browscap url fix, plus removed ^M references. it should look nice on any os.
changed the instructions for php with win32 + apache. Recommending using sapi over cgi binary, since cgi binary and apache don't mix well security wise.
New PostgreSQL functions
@added mb_get_info() to get internal settings of mbstring.
ChangeLog update
NEWS update
ws
Added IPv6 support @- Added IPv6 support in FTP extension. (Stig Venaas)
hostconnect now divides the timeout with no. of addresses. If a connection attempt times out, it goes on to the next. Unless each timeout would be <5s. Added php_any_addr() that fills out the any address for IPv6 and IPv4.
- Output error when there's an uncaught exception (by Timm Friebe)
use the new Console_Getopt::readPHPArgv() function to read args
Added readPHPArgv() function that will safely read the $argv PHP array across different PHP configurations. Will take care on register_globals and register_argc_argv ini directives and the new $_SERVER vars
- Make sure $this is passed on to methods
Happy New Year.
@- Added CLI (command line intrerface) sapi based on a cut-down version @  of the CGI sapi which is more suited for writing shell scripts. Some of @  the differences are: it prints no HTTP headers, displays plain text @  error messages, etc. (Edin) Added CLI (command line intrerface) sapi. # Let's see if a build expert can make this compile along # side some other sapi.
Added argc and argv in request_info needed for the new cli sapi. Modified registering $argc and $argv to support cli sapi.
Added some consts for arguments in network.c declarations. Moved php_sockaddr_storage to php_network.h and added check for struct sockaddr_storage
* archive the 2001 changelog
ChangeLog update
NEWS update
More tweaking of wordwrap() with the cut parameter set. It was being a little too aggressive and cutting words without breaking at spaces first. (A couple of tests were incorrect.)
- Small fix
New memcpy()-based wordwrap() implementation. The simple case (single-character break, no forced break) appears to be about 60% faster, and there's simply no comparison for non-simple cases with non-trivial amounts of text. The old algorithm was O(n^2) (with an unfortunately large constant factor) because of the use of strncat(), the new one is O(n). Added some more tests, too. @ - Made wordwrap() significantly faster. (Jim) # test case: $t = join('',file('ChangeLog')); $w = wordwrap($t,10,"\n",1); # new code completes in less than a second. i'm still waiting for the # old code to finish.
Added check for $argv avaible (thanks Michael Härtl <mhaertl@pressline.de>)
- Significantly improve the performance of method calls and $this->member - lookups.
Apparently multi_convert_to_double_ex() didn't quite do what I thought. Still need to handle numeric strings.
good grief, positive powers of 0 are well-defined. (code fix coming.)
Be more aggressive in making sure that substring matches are valid in ereg_replace before trying to use them. # i could have sworn i fixed this in php3. ereg() has similar logic, i # guess i just missed ereg_replace. fixing this lets # ext/standard/tests/reg/012.phpt pass on my debian/unstable box
Surprising how tests can fail when they don't have any supporting data :) Thanks for the catch Jan and Jim
ChangeLog update
NEWS update
Nuke unused variable warning (end_arr).
Made ldap_modify() an alias for ldap_mod_replace(). The two were identical. #For more info, see my posting on php-dev Dec 25th.
Added the O_NOCTTY option, for terminal i/o.
first PHP_EXTENSION_LIBS casualty :(
Added log_message function to the FastCGI sapi, so you can see error output from scripts
ncurses is useless in webserver modules
more unquoted messages with kommas fixed
always quote messages with [...], *especialy* when using kommas in the text
proto fixes
use predefined function instead of hardcoded test
proto fix
proto fix
small clarification
Remove #line's from var_unserializer.c
check for library existance before adding them
two new check functions for use in config.m4 file
Update .cvsignore.
- Improve performance of indirect-referenced function calls
- Nuke C++ comments
- Separate other kinds of function calls too. - Significantly improve performance of function calls by moving lowercasing - the function name to compile-time when possible.
- Start splitting up different kinds of function calls into different - opcodes.
ChangeLog update
Making error handling thread safe. Thanks to Paco Ortiz <fjortiz@comunet.es>
make configure more robust if extensions add libraries without checking for their existance first
fix for bug #14832: basename with 2nd parm corrupts source string
- Now use ZE's builtin zend_zval_type_name().
- MFZE1 for exit fix, exposing current function name in error messages and   exposing zend_zval_type_name().
- domxml_node_add_child(): Perform deep copy before adding child to prevent   double memory freeing. # I wonder how this could work before.
- FTP_BINARY is more common instead of FTP_IMAGE.
protos fixes by Wolfgang Drews
Please, no punctuation mark at the end of the description.
ChangeLog update
Adding key_exists alias for array_key_exists, at the request of One-Who-Shall-Not-Be-Named-Because-He-Is-On-Vacation
* PEAR.php line number changes again
* registry files renamed from .inf to .reg, update test
* support "pear-get install XML_RPC"
* start splitting "pear" command into "pear" and "pear-get"
* use new overloading API properly
- Corrected proto for ftp_connect() (new optional parameter for initial   custom timeout).
- Added ftp_set_option(), ftp_get_option() and support for setting a   custom timeout. # Adding custom buffer size would be next, no promises though.
jpeg2wbmp,png2wbmp: fix prototypes; _php_image_convert: simplify argument count checking
ChangeLog update
- Corrected proto for ftp_fget().
- Switched to zend_parse_parameters(), unified error/warning messages,   use real resources instead of integers, adjusted prototypes (hope I got   them all).
- Summarize dbase fixes.
Removal of non-essential parameters for non-piggyback search.
ChangeLog update
NEWS update
Match the table style of the other single-row info entries.
Now dbase_pack() actually truncates the resulting .dbf file to the right size (possibly fixing bug #6852 #3). @Make dbase_pack() truncate the file to the right size. (Vlad)
Consistency.
Oops, missed one proto.
- Add example of default argument for argument passed by-ref
ChangeLog update
some prototypes changed
Give defaults for pread and pwrite checks when cross compiling
Typo.
chdir: corrected proto, converted to zend_parse_parameters
Corrected bug in php_mysql_fetch_hash() that prevented columns with NULL values from having both numeric and associative indexes. (Bug 14291)
chroot: corrected prototype, converted to zend_parse_parameters
Converted getenv to use zend_parse_parameters
added libfdftk for link path to make shared module.
Get rid of error message # These lines should be enabled when save handlers can be initialized # before session module initialization.
ChangeLog update
NEWS update
- Removed is_array_multidimensional
- Added test for recursive counting
- Added extra parameter to count() that recursively counts elements in an   array and added is_array_multidimensional(). (patch by Vlad Bosinceanu   <glipy@fx.ro>)
- #define to help #ifdef stuff in PHP sources to make them work w/ ZE1 and - 2
PHP 4.0 -> PHP 4. Patch by Martin Jansen <mail@martin-jansen.de>.
1) fixed bugs in soft label key functions 2) insert new slk-functions 3) defined new key-constants
- A few clarifications
Integrate Andi's examples and some notes by Stig.
Update Exceptions example.
* install PEAR/Dependency.php
fixed bug preventing pspell from building when pspell header files are located in an unusual (e.g. /usr/local/include/pspell) location. @fixed bug that made pspell include pspell.h from a wrong location. (Vlad)
ChangeLog update
- Rewrote infoFromTgzFile() (Stig, no more "pedantic" :-) - Added <description> tag for package.xml - Temporal fix arround php bug #14744 and temp files cleaning
- Wasn't adding the lower case version of the class name to the hash
mouse support for ncurses added:   ncurses_getmouse, ncurses_ungetmouse, ncurses_mouse_trafo, ncurses_wmouse_trafo
* added <description> element in <package>
ChangeLog update
- Use two underscores for __construct(), __clone and friends...
Making PHP compile again on MacOSX 10.1 # 10.1 does not have inet_pton support yet it seems so disabling it.
- Only check refcount of object if the destructor was called.
- Experimental support for destructors. We need to see if destructors - will actually work well in the context of PHP so we should consider this - as experimental. Possible problems might be that when the constructor is - run PHP might not be in a stable state.
- Support parent:: again
- Support unified constructor name _construct()
switch to use the xml end tag function for correct handling of multiline tag contents
Added new functions: ncurses_waddstr, ncurses_wnoutrefresh, ncurses_wclear, ncurses_wcolorset, ncurses_wgetch, ncurses_keypad, ncurses_wmove
ChangeLog update
- Print out object id for easier debugging
- Pretty much finish _clone() support
unbreak parallel search
- Initial support for _clone()
added code to remove overloaded function in RSHUTDOWN.
- Start fixing the parsing rules so that function and method calls - can't be used in a write context.
#remove keyword substitution
Added msession # Since it's there, I added it to module list. It should be mentioned # if module is in php4 source tree. # We need to discuss about PECL. Let's discuss. :)
added default target for installing documentation
reverted the last change for now
- Install files marked as "role=doc" in a central PEAR doc dir   (defaults to PHP_DATADIR/pear/doc/Package_name/) - Store a new property of each installed file ['installed_as'] for   easy uninstall
* use "windir" env.var on Windows too
* added System::tmpdir() method (now uses SystemRoot env.var on Windows)
ChangeLog update
Moved "ifdef HAVE_PHP_SESSION" oops!
activated ncurses_instr New functions: ncurses_longname, ncurses_termname, ncurses_mousemask
- Revert delete syntax patch
Added check for ldap_parse_reference() (needed for broken Solaris 2.8), and report more detailed library version info in the info function.
functions ncurses_erasechar, ncurses_inch, mcurses_killchar: changed return values from bool to string (char)
ChangeLog update
added my name for NEWS.
Avoid a segfault when 0 bytes are returned from a website, and RETURNTRANSFER is enabled.
ChangeLog update
NEWS update
added the <license> tag under <release> for the package.xml file
Major cleanup
A php script which shows how to use msession with PHP sessions
Added php.ini entry info.
Update installation instructions (Marco Kaiser)
changed address
Made ldap_set_option work with NULL as link, added option LDAP_OPT_DEBUG_LEVEL for those that support it, and made sure the rebind code is currently included for OpenLDAP only.
@added function overload in mbstring to add multibyte support for string and mail functions.
Check for ushort
Renamed msession_getdata and msession_setdata to msession_get_data and msession_set_data respectively.
ChangeLog update
Undefine AF_UNIX under RISC OS
Cache results of check for int8
re-added prototype folding hooks
*now* it is backwards compatible ...
- Add initial capability of defining nested classes as class foo::bar
.
Toned down a comment that was written in the heat of the moment.
- Let ceil also return a float in every case
- Add test for floor and ceil
Modified array_walk, arsort, asort, krsort, ksort, rsort, shuffle, sort, uasort, uksort and usort.
* add "pedantic" mode in infoFromTgzFile and skip some checks if not   pedantic
Added msession_call
reverted chages Restored zend_get_parameters_ex Put back ansi brackets Added author note. Added msession_call
ChangeLog update
Install session module haeder
- Typo.
- Added open basedir checks to file functions. (Patch by   Christoph Kassen <chkassen@chkassen.de>)
Use memset() instead.
Initialize variable to avoid bogus data and possible segfault.
Switched some functions to use zend_parse_parameters, cleaned up some unused variables and some whitespace work.
ChangeLog update
Removed Win32 specific projects. These are now located in pear/PECL
Adding cvs ID
Update header.
Add headers and Id lines
Added when experimental functions are added.
ChangeLog update
Updated README. Module will not cancel queued query sent.
Do not cancel queued query automatically.
ChangeLog update
NEWS update
More proper error message. Remove old lines that aren't needed.
Get rid of useless path from seach path
MFZE1
@- Added flags parameter to preg_grep(). The only flag currently is @  PREG_GREP_INVERT that will make the function return entries that @  did not match. (Andrei)
Adding missing define, needed to build with FrontBase 3.4 and later
* Change $Version$ to $Revision$.
* Convert tabs to spaces.
typo fix
that makes more sense
quick fix for the "pear info" command
ChangeLog update
Added dependencies check support for Installer
ensure correct package names and versions in the xml parser
- Added callCheckMethod() for making easy the integration with   the PEAR_installer class - Reverted the logic of the returned value of the check methods.   They will return false on no error or the error string on error - Added signOperator() to output the representation of the operator   with signs instead of letters ('ge' -> '>=') - Other minor changes
proto fix
- Try to be a little bit more sane dealing backwards compability
proto fix
call PEAR::raiseError() instead of $this->raiseError() in factory()
output encoding translation turn off in mb_output_handler() when non-text (binary) data was sent.(Patched by Kanemoto.)
yet another proto fix
proto fixes
proto fix
- included PEAR.php - flush(): consistent cache group defaults
added proto descriptions
Actually drop test table. # name is dropdb since it may be changed to actually destory test db
Use database named test for testing
ChangeLog update
Added test files
fixed: fix for my broken patch.
added an option mbstring.func_overload to overload some function by multibyte enabled version of function in mbstring.
Freeing that TLS is just too complicated.  Since we're shutting down anyway, remove it for now (it did not exist in 4.0.6)
Add entries
whitespace. - now i know how code should look like ...
whitespace.
fixed: WWW-Authenticate -> header_line got only freed when safe_mode was activ fixed: WWW-Authenticate -> content of header_line was changed after it was freed
I'm too trigger-happy.
delete is now function
- Seems like most people prefer delete($obj) over delete $obj.
- Start adding parsed variable checks.
- Framework for knowing what kind of variable we just parsed. - This will be used in compile-time error checking which couldn't be done - at the level of the grammar.
Update for 4.1
added support for <deps> and <dep> tags
README update Raise error for bogus installation path for --with-pgsql Added check for pg_escape_*
use the System class for mkDirHier() and mkTempDir()
fixed: bufferoverflow in sapi_add_header_ex triggerable by header("WWW-Authenticate: Basic foobar");
fixed: php_ap_getword was unaware of quotes 	filenames with ; in it could not get uploaded
Mail should go to php-dev
proto fixes
proto fixes
improved phpdoc of mkTemp()
Added System::mktemp() (Creates temporal files or directories)
ChangeLog update
* Destructors seem to work like a charm. -> No need to keep this line.
- TSRMLS here and there, it's all about the Windows flair
* Add links to the new documentation.
- Added a second parameter to var_export which makes the function return   the variable representation in a string.
proto fix
proto fixes
cleanup
removed a stray proto comment
improved xml generatioimproved xml generation
proto fix
- Added TODO file
ChangeLog update
NEWS update
- Damn Typo.
- Remove redundant code.
be rfc compliant...
derick's message is in the PHP_4_0_7 branch (or will be :) jmoore merged this fix into PHP_4_0_7 before the release...
add todo
* update to new overload api
Add myself as a maintainer
Got some undefined symbol without this patch.. # Also, shouldn't this extension be only available when building a CGI ?
Missing period. :)
ChangeLog update
NEWS update
fix phpdoc
- Rearrange grammar to allow dereferencing of objects returned from - functions. It still crashes though.
- Remove debug stuff
fixed some minor bugs and reordered some code to fix array uploads.
This'll come with 4.1.1
MFB
more proto descriptions and fixes
added mbstring to EXTENSIONS.
added mbstring to maintainers list.
typo
Provide access to ini settings.
- new parameter parsing api used - added proto descriptions (not complete) - swapped x/y arguments - indentation style fix (no seperate WS fix as most of the file changed anyway)
ChangeLog update
editor preferences for XML files updated
Always output config.nice for standalone extensions. (Really helps with PHP-GTK).
- Make classes have scope and function/constant lookups default to the class
More ZTS fixes.
Move PHPDoc extension to PECL.
added the new PHPDoc extension which transform PHP-Code into a XML representation.
Since PHP method names are case-insensitive, we have to fold access to 'FOO' and 'foo' properties into a call to the same accessor.
Ack, apparently in statically linked-in extensions we have to clean the hash of overloaded classes on request shutdown. Also, added some fold markers and rearranged some defines.
return boolean where appropriate
* implemented "upgrade" * report install/uninstall errors
* install PEAR/Autoloader.php
* implemented upgrade
* PEAR_Registry::updatePackage now takes an optional 2nd arg for   replacing package info instead of merging
ChangeLog update
* make do without overload function
fixed bug #14414
ereg functions will now take in account the real number of subexpressions instead of simply assuming a fixed count of 10
- Rename zend_class_entry.constants -> zend_class_entry.constants_table
- Start making scope change correctly when calling namespace functions. - When inside a namespace fallback to global namespace when function - or constant is not found.
Forgot to update the LICENSE.
Update headers.
Update headers.
Adding overload extension.
thttpd/ircg update
Forward-port 4.1.0 changes
Some typo, consistency fixes and removed some stuff that is not needed.
MFZE1 (AIX fixes)
* fixed the sub-command option parsing * added -r option to install/uninstall (registers package without   installing any files, for use by rpm and the like)
* added "register_only" option for install/uninstall
More README update.
- Update NEWS entry about latest domxml changes.
README update
Added README file for pgsql module Added my self to CREDIT
MFZE1 (added zend_strip mode in the highliter)
Show example of property-specific accessors.
This commit implements property-specific accessors.
ChangeLog update
- Yasuo Ohgaki <yohgaki@php.net> is the new maintainer of pgsql module. # ... and I hope he has enough karma to do it.
- More namespaces work. - Nuke memory leak.
Modified __call() handler to accept a byref return value parameter that should be filled in. The __call() handler is now supposed to return true or false, depending on whether it was successful or not.
Enable ext/overload by default on Win32, too.
* now using ext/overload # how to use: # # $remote = new PEAR_Remote; # $remote->package_listAll(); # $remote->user_activate("johndoe"); # # (when using overloading, "_" is replaced with "." before doing #  the xmlrpc call)
* PEAR_Registry::packageInfo now takes a second arg for returning a single   attribute
* added fold marks, moved around some code and silenced some Archive_Tar   notices
* renamed check methods to checkXxx * completed the extension check method * added checks for os, php version, programs and sapi backend
* fix phpdoc comments
* stop parsing arguments when encoutering the first non-option arg
Sent proper encodings for gzip/compress files, otherwise IE won't display them.
Add a nocache feature: If documents are stored under /nocache/, appropiate HTTP headers will be sent which prevent client/proxy caching.
Spaces -> Tabs
- mnogosearch example updated to include searchd support
Added async query functions
* initial commit of PEAR method autoloader
ChangeLog update
Enable it for real.
* enable overload extension by default
This was needed afterall. Without this Apache segfaulted when accessing PHP scripts.
* use macros in error messages
*** empty log message ***
Adjust to account for latest changes.
- Only destroy the current object if it was received from the __get() handler. - Changed the way method arguments are passed to __call() handler. They are   now encapsulated inside of an array, which makes it easier to pass them   to call_user_func_array().
Align comments in xslt.c First try at fixing funny resource free'ing problems with objects, don't perform a zval seperation when we're directly saving a pointer to the SAX or Scheme handlers
ChangeLog update
NEWS update
Undo (per Jani's request)
- Remove debug code
- Added var_export, which shows a representation of a variable, much like   var_dump, but in such a way you can use it as PHP code. @- Added var_export, which shows a representation of a variable, much like @  var_dump, but in such a way you can use it as PHP code. (Derick)
@- Added -w option to the cgi-version. This will remove all comments and @  whitespace from teh script. (Thies)
ChangeLog update
Jani's AIX fixes
Let's not crash when no error str has been set
fix #13801 (imap_rfc822_parse_adrlist changes arg1)
Make sure refcount is 1 on stack zval.
old stuff removed
proto fixes
proto fix
- proto descriptions - changed to new parameter parser api - changed to K&R style - various cleanups
* configure help indent fix
proto fix
protos prepared
All right, let people RTFM.
Add fold markers in strategic places and improve MINIT function a bit.
If the method exists in object's function table, call it directly without using __call() handler.
Support overloaded method calls via __call().
apr_table_elts are now const
rename functions to match those supported in the apache 1.3 module:  apache_sub_request -> virtual  get_all_headers    -> getallheaders
ChangeLog update
NEWS update
added protos (but without description yet)
some cleanup of ext_skel stuff
whitespace/indent
renamed rot13 to str_rot13()
proto fix
need to call ap_destroy_sub_req() before RETURN_TRUE in apache_sub_req() (Jon Parise <jon@php.net>)
ported rot13() from php3
proto fixes
proto fixes
- Support constants. The following works now: <? 	class foo { 		const GC = "foo constant\n"; 	}
proto fixes
- Initial work on changing namespace scope. Only methods & variables - right now. <? 	$hey = "Global hey\n";
- Nuke the namespace work I did. It'll be redone differently.
fixing the proto fixes
proto fix
proto fix (sort of)
proto fixes
Work around a quirk in the MySQL client library to fix unbuffered queries
Remove PS_DEL_VAR macro, always use PS_DEL_VARL()
use PHP_INFO_ALL and PHP_CREDITS_ALL instead of hardcoding them
2 arguments, not 3
- Prototype new parameter which forces the creation of new links.
Ignore .reg files created by pear_registry test.
destroy subrequests returned from ap_sub_req_lookup_uri
ChangeLog update
call to ap_sub_req_lookup_uri() needs to pass ctx->f->next rather than NULL for next_filter argument in order for ap_run_sub_req() output to end up where expected.  ("William A. Rowe, Jr." <wrowe@rowe-clan.net>)
proto fix
proto fixes
proto fix
proto fixes
increase timestamp, because make tries to regenerate this file without any reason
Remove redundant include
Document recent changes.
ChangeLog update
Store the read bytes so that some sapi modules know how much to read.
Make it more clear what session.referer_check is about.
Remove check for "To:" in headers. If "Reply-To:" exists the the To: entry was not created. This is WIn32 only.
proto fix
proto fix
proto fixes
proto fix
proto fixes
Make the length parameter to fgets optional (defaults to 1024)
Enable imap_mail() on win32
modified to enable imap_mail() on win32
Adding files to enable imap_mail() on win32
- Damn Zeev :)
Mark sapi/servlet as what it is: experimental.
Mark ext/java as what it is: experimental.
Add Win32 specific files to .cvsignore.
Add XMLRPC extension.
ChangeLog update
NEWS update
typo fix
- Let's not default to any set of extra libraries. This way any kind of   builds of pdflib work. And this configure stays simple.
Make xmlrpc module compilable on windows.  compiles, but untested.
- Missed one
- Nuke REGISTER_MAIN_*. Extension maintainers please make sure I didn't - change something I wasn't supposed to. It should be fine IMO.
Add a content length field to perhaps eliminate null truncation
Re-add support for HTTP file uploads
MFB
- Added ob_get_level, which returns the nesting level of the output buffering   mechanism. (patch by Yasuo Ohgaki <yasuo_ohgaki@yahoo.com>) @- Added ob_get_level, which returns the nesting level of the output buffering @  mechanism. (Yasuo, Derick)
Make php_reg_replace available from shared extensions
Make php_MD5* functions available from shared extensions
Make _php_math_number_format available from shared extensions
Make php_startpage and php_getlastmod available from shared extensions
Make php_setcookie available from shared extensions
ChangeLog update
added mssql_fetch_assoc() to be more mysql conform changed mssql_fetch_array() back to its default behaviour (MSSQL_BOTH)
- switch to new paramter parser - make sure To: and Subject: do not end with a newline character
Please Egon.
Allow unserializer_callback_func to be turned off.
Rename Dependencie.php to Dependency.php
- Standardize function to accept either $obj->foo or domxml_foo($obj)   where they should. - Use xml*Len functions where available. - Workaround in set_content() to prevent crash. - Cleaned up php_xpathptr_eval(). - Added NO_ARGS check where missing; moved check for $this always   before arg parsing.
fix CFLAGS, how could this have worked before?
remove outdated txts
cleanup workspace
fix php_win_err (wasn't threadsafe)
- Reverted macro moving stupidity (thx to Sterling).
- Added synonym stuff support to mnogosearch module. Slightly changed   stored API. Example updated.
I hope that this is a better explanation as unknown.
- Mnogosearch module stored API slightly changed. Example updated.
ChangeLog update
Oops, FOO_VERSION doesn't exist
Class for checking dependencies
Make ext_skel generate backward compatible module sources (flight from London to Paris is too short for any real work)
- Added stored API to mnoGoSearch module. Now you can check   if URL is places at the stored database ot not. Example updated.
check for version for not building broken packages (thanks Markus)
improve last patch: non existant object variables are now serialized as NULL, this saves us from buffering the serialized data.
serialized data would be incoorect if __sleep() returned a variable-name which is non-existant in the object. submitted by: Bernd Roemer <berndr@bonn.edu>
- mnoGoSearch module usage example (searchlite) updated to support   StoreDoc stuff.
- StoreDOC support has been added to mnogoSearch module.
- Revert one of the changes because it might be before the memory - manager has started.
- Use alloca() when possible.
ChangeLog update
NEWS update
This makes the configure --help output more readable.
Detect FreeTDS to work around different library sets
Added missing cvs ids and unified configure messages.
Unified the configure messages.
- Initial support for class constants. There are still a few semantic - issues which need to be looked into but basically it seems to work. - Example: <?php 	class foo 	{ 		const hey = "hello"; 	}
- Added ob_flush and ob_clean functions, which do not end the buffer like   ob_end_flush and ob_end_clean do. @- Added ob_flush and ob_clean functions, which flush and clean an @  output buffer without destroying the buffer. (Derick)
This is better way to configure. PDFlib 3/4 can be compiled with external libs too..
ChangeLog update
Adding ldap_set_rebind_proc() for APIs with V3 3 arg variant, need more testing.
Making the link resource point to a structure that contains the LDAP link, rather than point to it directly. # This makes it much easier to store and retrieve per-connection PHP state.
Update to the latest apr api (patch by Clif Woolley)
i'm sure i had this compile before;-)
fix a crash in socket_connect (if hostname was not resolvable) initialize max_fd in various fdset function fix error checking in _read and _write
ChangeLog update
- introduced several macros to simply code (done by Markus Fischer)
ChangeLog update
- Support syntax for class constants (doesn't do anything yet but - required some reworking of the grammar).
ChangeLog update
Removing winutil.c from this project. the functions needed are found in php4ts.dll
Show the registered ini entry in phpinfo()
Updated file since .re changed.
- Also patch the file from which var_unserializer.c is generated
- Adding a callback mechanism to the unserializer. (patch by Bernd   Roemer <berndr@bonn.edu>) #- An explainatory e-mail will be send to php-dev
Z_TYPE(filehandle)?? ok.. whatever... ;)
- Support static $var = 0; style initialization of static class - members. For example: -	class foo { -		static $my_static = 5; - -	} - -	print foo::$my_static;
Nuke ext/sablot entries.
ChangeLog update
fixed a link error in configure script.
- Whitespace
- Support static members. The following script works: <? 	class foo 	{ 		class bar 		{ 			function init_values() 			{ 				for ($i=1; $i<10; $i++) { 					foo::bar::$hello[$i] = $i*$i; 				} 			}
ChangeLog update
Added missing ini directive: always_populate_raw_po st_data
Added missing CVS Id tag.
- MFZE1
- Handle more error types when uploading files.
whitespace
whitespace
Honor error_reporting (in general and @ in particular) for IMAP notices
Save entries in $_SESSION even if register_globals is on
ChangeLog update
whitespace
- Reverse slight mistake (patch by Markus Fischer)
restriction is relaxed because output handler couldn't be used even if zlib.output_compression is set to off.
ChangeLog update
NEWS update
- Beautifying
WS fix.
- Added a parameter to mysql_connect to force a new database link to be   created. (patch by Markus Fischer <mfischer@guru.josefine.at>) @- Added a parameter to mysql_connect to force a new database link to be @  created. (Markus, Derick)
ChangeLog update
NEWS update
Allow php_win_err() to be called from extenstions
Added ldap_sort() function @- Added ldap_sort() function. (Stig Venaas)
- add functions clone_node(), is_blank_node(), create_entity_reference() - fixed bug in node_name() - fixed behavior of append_child(), it now adds a child a not a sibling
ChangeLog update
added blabla
Remove sablot from php_modules.dsw, its no longer in repository
ChangeLog update
- Added a bugfix
ChangeLog update
NEWS update
Test before commit..test before commit..
Now this might even work.
AIX compiler doesn't like having a comma at the end of the enum (Ryan Bloom <rbb@apache.org>)
- Added md5_file(), which calculaties the MD5 sum of a file.   (patch by: Alessandro Astarita <aleast@capri.it>) (Derick) @- Added md5_file(), which calculaties the MD5 sum of a file. @  (patch by: Alessandro Astarita <aleast@capri.it>) (Derick)
- MFB
Remove the .cvsignore file
Remove the sablotron extension
WS fix
ChangeLog update
ChangeLog update
s/\t/    /
Add todo item.
Use the macro here and add an E_NOTICE
- Nuked some memleaks - Changed the error to be set always. Otherwise the index for error   wouldn't be correct in case of uploading multiple files within array.   ( <input type="file" name="test[]"> )
ChangeLog update
No use of populating the hash if there is no file saved.
MFZE1
In case of submitting form without any files selected don't set the tmp_name.
Check in ftok() function by Andrew Sitnikov <sitnikov@infonet.ee>
implemented "uninstall" command
ChangeLog update
Prevent fbsql_num_rows from looping
Many other reasons that setvbuf can fail than "wrong arguments", returning false should be enough
adding PEAR/Registry.php
checking if package.xml.gz exists, before checking if it's writeable
ChangeLog update
setup standard CGI variables
Minor changes in ldap_connect(): fixed crash with OpenLDAP 2 libs when called without args and also use ldap_init() rather than ldap_open(); simplified code a little
Removed some old cruft (some commented code and non-used globals), fixed a proto typo, and make sure ldap_base_dn and ldap_filter are initialized in php_ldap_do_search()
Be explicit here and cast it
Different operating systems handle the group x bit differently, so simplify this test to test the user x bit instead
Make these tests work regardless of the register_globals setting.
Improve OpenSSL compatibility
ChangeLog update
* command name changes
* rename files to .reg (not .inf)
* error message cleanup * store registry object as property
Import patch from bug #14023
* shame on me ...
* typo
Provide the full URL to pear.php.net.
Unified error/warning messages.
ChangeLog update
NEWS update
WS
fixed output problem with output buffering handler.
Add warning when set_file_buffer() fails
- Renaming key_exists to array_key_exists @- Renamed key_exists tp array_key_exists. (Derick) #- Not sure if this belongs in NEWS, but it was already in a released #  version. And yes, I know I'm breaking BC here, but as it was not documented #  yet, that doesn't matter.
compile fix
Add missing loop variable $i.
Suppress warning on long-options without an additional argument.
Make the filesize 0 when upload fails. And changed the error messages to be different from each other.
ChangeLog update
NEWS update
Clean up.
Crash fix news.
No need to 'include' a .re file here.
Make the win32 fastcgi compilable with the php4ts projects.
Rewrite of unserializer which should be more maintainable and extensible.
- Correcting Goba's name, and adding me to QA team
* some minor improvements
Make fbsql_list_fields work as documented
ChangeLog update
NEWS update
@ Added support for bind_textdomain_codeset(). (rudib@email.si)
Not all components populate every field in the ExceptInfo structure. Thus we sometimes would try to convert NULL strings and see php_OLECHAR_to_char errors while displaying Exception information. This version is a little smarter about the member derefencing and the resulting error string.
ChangeLog update
- oops :)
- Let it also work with pdflib 3 again
fixed a bug in http input processing patched by Yasuo Ohgaki.
Some protos fixed.
More protos fixed.
Use PHP_ADD_LIBRARY_DEFER and PHP_ADD_LIBPATH instead of PHP_EVAL_LIBLINE to prevent configure error.
There are some rules.
- prototypes #- Thanks to Zak for pointing this out during his talk
- Prototypes
- By default DB_FETCHMODE_OBJECT will do a cast to object from the row   array (twice fast than with DB_Row) - API Doc updates/fixs
Add php_w32api.dll
Add ext/w32api
ChangeLog update
NEWS update
@ - Add generic Win 32 API extension (jmoore)
* store registry data in PEAR_INSTALL_DIR/.registry instead of /var/something
* fix "list" command
typo
ChangeLog update
NEWS update
fix the singleton and factory methods for a). php 4.0.6 (where include_once might return false) b). to use references and not copy so many objects
It doesn't look like we use a fourth pointer.
(PHP mysql_connect) Removed warning message regarding NONEXISTENT character set, when the server's default character set != latin1. @- Removed a warning message about a NONEXISTENT character set from @  mysql_connect(), when the server's default character set != latin1.
Include <sys/socket.h> for 'struct sockaddr'.
@ Add Direct I/O extension for lowlevel access to the POSIX layer. (sterling)
ChangeLog update
NEWS update
E_ALL fixes
E_ALL fixes
@- Added Udm_Check_Charset function (gluke) - Added Udm_Check_Charset function (gluke)
New SAPI module for the WebJames server on RISC OS @- New SAPI module for the WebJames server on RISC OS (Alex Waugh)
ChangeLog update
add newline at end of file to avoid warnings
non-zts compile fix
- Support instantiation of nested class. The following script now should - work: -<?php -	class foo -	{ -		function bar() -		{ -			print "bar() in class bar\n"; -		} - -		class barbara -		{ -			function bar() -			{ -				print "bar() in class foo::barbara\n"; -			} -		} -	} - -	$obj = new foo(); -	$obj->bar(); - -	$obj = new foo::barbara(); -	$obj->bar(); -
Convert PATH_TRANSLATED for RISC OS
Undefine AF_UNIX when compiled for RISC OS
Make sure uint et al are undefined before typedefing them
Included header files needed by RISC OS
* expectError() now accepts "*" as a catch-all * updated tests
# more mnoGoSearch example fixes
- mnoGoSearch extension example updated to support words hilighting (gluke)
ws fix
missing cvsignore
ChangeLog update
NEWS update
@- mnoGoSearch module example updates for 3.2.x compatibility - mnoGoSearch module example updates for 3.2.x compatibility
@- Some mnogosearch-3.2.x compilation bugs fixes. @  Make crosswords and weight sections work with mnogosearch-3.2.x @  UDM_PARAM_HLBEG, UDM_PARAM_HLEND mnoGoSearch Agent parameters @  has been added (gluke) - Some mnogosearch-3.2.x compilation bugs fixes. Make crosswords and weight sections work with mnogosearch-3.2.x UDM_PARAM_HLBEG, UDM_PARAM_HLEND mnoGoSearch Agent parameters has been added (gluke)
- RISC OS patch by Alex Waugh
- RISC OS patches by Alex Waugh
- Add some initializations
- Add constructor to the zend_class_entry instead of looking it up each - time by name. - This will allow the next patch of being able to instantiate nested - classes such as new foo::bar::barbara();
ChangeLog update
NEWS update
added private_no_expire mode on session patched by Yasuo Ohgaki.
WS fix
typo
Missing entry
This was conditionally included if HAVE_MYSQL_REAL_CONNECT was defined.
Make the extension work with MySQL 4.0
This propably fixes couple of problems with compiling with external libs.
ChangeLog update
use feautres property instead of options
Remove prototype warnings under linux.
no message
nuke remaining warnings
make this function static
- convert to use new zend_parse_parameters API - unify errormessages + add socket_last_error() - fix linklibrary under windows - some streamlining
- Added row limit support for fetchInto and fetchRow - Added getRowCounter method for DB_result to get the row number   you are fetching in limited queries
- Applied patch by Yasuo Ohgaki <yasuo_ohgaki@yahoo.com>
ChangeLog update
Synch with persistant -> persistent changes to ext/fbsql.
* pearweb xmlrpc layer now handles PEAR errors
* update tests
* removed error_prepend and error_append properties
renamed "debuginfo" property declaration to "userinfo"
* added "pear info" and "pear show-config" commands * "pear install" now using the package registry
ChangeLog update
NEWS update
Works now with phpize
ws fix
Installing into non-existing dir is not very good idea..
Cocoon/lib -> xml-cocoon2/lib
* disable case-folding in the xml parser (for consistency now that the   DTD is all lowercase)
* improved error reporting in PEAR_Remote::call
* added getKeys method
ws
* moved <filelist> from <package> to <release> * added <state> element
patches to sync with sourceforge project, version 0.50.  primary change: adds support for SOAP v 1.1
ChangeLog update
NEWS update
Reset the error (or message) from the server when calling fetch_row functions. If the user conected and changed the database the message from the change was reported when the user checked the error function after a failed fetch. This cased problems in PEAR/DB. If the fetch fails for other resons than a fetch after the last row, the message from the server will still be reported.
Adding nextResult() function allowing batches of sql statements to be executed with one call to the query function.
A more acurate fix to the fbsql_num_rows function returning x7fffffff when the server is unable to tell the number of rows.
Adding fbsql.php to PEAR install
After discussing with Rasmus, this line should be enough. Speak up if it is not.
- Added myself to authors. - Modified the clause about Apache to say what exactly was borrowed.
- Initial support for nested class definitions
* started working on "pear list" command
* PEAR_Registry: renamed "upgradePackage" to "updatePackage" * added tests for PEAR_Config and PEAR_Registry
* moved System.php out of Experimental/
more ws
* typo
ChangeLog update
Leftover.
Whitespace changes.
* added listPackages * made packageInfo param optional, if not specified returns info for   all packages
* nuked PEAR_Packlist class and added PEAR_Registry instead
Whitespace fixes
Refinements.
More work on the README.
javac 1.3 could not find reflect.class before. Also use -O flag when compiling a Release build.
Add missing footnotes.
More work on the sapi/servlet documentation. This is still a work in progress.
ChangeLog update
NEWS update
Another fix for Tomcat 4.
- fix crash bug
These were supposed to match
Get rid of post_off-hack which was only suitable for POST data which fit into the small thttpd read buffer.  Do a small recv after content-length bytes have been read to accomodate non-conforming user-agents.
Improved handling of posts
Modified the error message a bit. Happy now Andi? :)
MFTGZE1
* actually implement -s/-S options :-)
- Prevent PHP from starting if output_handler is set and   zlib.output_compression is on - Added notes to the bundled php.ini files about this.
@- Added array_chunk() function that splits an array into chunks of specified @  size. (Andrei)
ChangeLog update
Convert to use new parameter parsing API.
removed
Typo in constant naming.
fix visual studio .net warning
Removed unused code
Add Win32 generated files.
Convert to use new parameter parsing API.
ZTS fixes
* implemented "pear list-packages", the first sub-command using xmlrpc
no need to free these it seems
* PEAR_Config class to maintain system and per-user configuration for   PEAR installations * PEAR_Remote class to communicate with the backend server (xmlrpc) * change pear script's option parsing to "-d foo=bar" style * added -c/-C (user/system config file) and -s/-S (store user/system config)   options
ChangeLog update
make it compile again and nuke most warnings
ChangeLog update
Let's suppress this warning if always_populate is enabled
C++ comment pollution removed.
- switched src and dest in memcpy. This caused a segm fault in hw_new_document_from_file()
- freeing memory wasn't always done right
ChangeLog update
NEWS update
Ok, now actually make it work - maybe...
Minor tweaks
@- $HTTP_RAW_POST_DATA was not populated on a missing content-type even when @  always_populate_raw_post_data was on - fixed. (Rasmus) $HTTP_RAW_POST_DATA was not populated on a missing content-type even when always_populate_raw_post_data was on - fixed. (Rasmus)
As suggested on php-dev, array_fill() is probably a better name for this function.
Patch for correct handling of DATETIME values. The patch is implemented with a parameter in php.ini controling if datetime values are converted with the new or the old method. Thanks to Michael Bretterklieber <mbretter@jawa.at>
Check that realpath is available. Bug: #9469 # TSRM still uses it without checking. I can't fix that.
Support also --with-gd (without path). Please test this!
This patch should reduce the amount of 'bogus' bug reports when people have two or more different versions of GD library installed.
MFZE1
Prolong the death of dl() for a little while longer.
ChangeLog update
NEWS update
Use references instead of making a copy each time in array_init().  About twice as fast for a high number of elements.  2.80 seconds for the copy of 1,000,000 elements and 1.39s for the reference version.  Need to chunk it every 62k or so because refcount is a short.
Adding some docs for new parameter parsing API. They really should be more fleshed out.
Remove redundant conversion.
new-style parameter parsing
@- Added session_cache_expire() function. (patch from anuradha@gnu.org)
.cvsignore now everywhere in ext/standard
Make math tests pass, round & co don't work this way, and there was an error in expected output
Yet another missing .cvsignore file
Missing .cvsignore files added.
Use of deprecated stuff and having error_reporting(E_ALL) made the tests fail.
Deprecated style used
Added missing entry.
Missing .cvsignore file
ChangeLog update
NEWS update
Check if PCRE support is compiled in and only use the pcre functions if it is.  Otherwise just set the realm to the safe mode user id if it isn't.
MFB
Oops, leftover crud
Motivated by bug #13607 I wrote up a simple array_init() function that lets you quickly create an array and initialize each element to a certain value. @ Add array_init() function (Rasmus)
missing entry
ChangeLog update
NEWS update
This made no sense before.  Hide Authorization in getallheaders() but display it from phpinfo()?  Ouch! @ Hide Authorization header from phpinfo() output in safe_mode (Rasmus)
# Butt-ugly looking code here, but I need regular expressions to do this. Re-instated safe-mode realm mangling as it was in php 2 and 3 albeit in a somewhat more robust way. @ Re-instated safe-mode realm mangling (Rasmus)
MFHZ1
ChangeLog update
convert to use new parameter parsing API.
Converting to use new parameter parsing API.
Conver to use new parameter parsing API.
Convert to use new parameter parsing API.
Changed strncpy=>strlcpy; strncat=>strlcat
ChangeLog update
Reverting the last fix for ZTS and adding TSRMLS_FETCH() to make it work.
Adding include path for having curl header and libraries in php_build\curl
fix ws issue introduce in my use_trans_sid commit...
fix formatting, this line really was too long ;)
force use of the session.use_trans_sid setting
Add php_overload.dll.
Add ext/overload to modules workspace.
fixed wrong constant definition
fix linkage error
ChangeLog update
NEWS update
Return a warning when fbsql_read_blob or fbsql_read_clob is called with an invalid handle
rename com module entry
rename module entry
fixed unicode bug
win32 project file
ChangeLog update
Adding new functions to retreive LOB data.
fixed proto
ChangeLog update
Adding user-space object overloading extension.
Bump version.
* bump version
fix bug #13479
* set PHP_EXTENSION_DIR to c:\php4 and change the default   PHP_INCLUDE_PATH to c:\php4\pear
* this line is from php-gtk.  hum.
* fix Windows default include path
* updated version numbers, moved extension version change to 4.1.0
ChangeLog update
NEWS update
Made error returning on missing extensions consistent across all backends
ChangeLog update
Either sizeof(struct stat) or sizeof f_stat, but not sizeof stat.
This file is generated.
ws fix.
* updated email adress
* fixed problem with copyright header on some systems.
ChangeLog update
* streamlined the copyright header * changed path names in pear.bat to more typical values # The GUI installer on Win32 installs PHP to c:\php by default, so we # should make that the predefined value in the PEAR batch file.
typo
win version of pear the pear script
revert removal of zend_parse_parameters and properly use zend_parse_parameters (ie zval * instead of zval **).
MFZE1: Introduced extension version numbers (Stig)
fix segv's, zend_parse_parameters seems not to be able to handle resources.
* fix module struct in rest of sapi modules
make it work again
ChangeLog update
NEWS update
* zend_module_entry change: apino, debug and zts are moved first,   see README.EXTENSIONS file for upgrade help. @Introduced extension version numbers (Stig)
* replaced PEAR::phpVersionIs with version_compare
* version_compare() is included from 4.0.7
* remove version_{lt,le,gt,ge,eq} functions, added a third optional   parameter to version_compare doing the same thing
* updated line numbers
* make test pass
Allow msession to build without ext/session
ChangeLog update
NEWS update
Changed return value for BLOB/CLOB values to a string. and returning false if no handle is created.
fix a problem with the propagation of baseinstalldir and role
@- Make UDM_PARAM_ISPELL_PREFIXES work under mnogosearch-3.2.x (gluke) - Make UDM_PARAM_ISPELL_PREFIXES work under mnogosearch-3.2.x (gluke)
* fix default path in configure help text
* added function entries for version_{lt,le,gt,ge,eq}
@Added version_{lt,le,gt,ge,eq} functions (Stig)
Adding support for BLOB and CLOB
ChangeLog update
NEWS update
Added ldap_start_tls() function @- Added ldap_start_tls() function (Stig Venaas, patch by kuenne@rentec.com)
- More <br> to <br /> fixes
Make the information available whether we are using HTTP/1.1
added new configure option --with-pdflib3
- Changed <br> to - in PHP_INFO output.
more clean up/fixes
ChangeLog update
NEWS update
use strdup to alloc memory refeed with free!
Oops. Removed too much code.
handle dbase files with padded field headers. (patch from Landon Bradshaw <landon@bradshaw.org>)
handle 'I' field type, just another name for the 'N' field type (patch from Landon Bradshaw <landon@bradshaw.org>)
some clean up
@- Added support for word match mnogosearch-3.2 command and for stopfile @  command. StopTable will not be supported by mnogosearch-3.2.x - Added support for word match mnogosearch-3.2 command and for stopfile   command. StopTable will not be supported by mnogosearch-3.2.x
fixed PDF_get_value for parameters - capheight - ascender - descender
more work on Windows support
added mkTempDir to create temporal directories
detect and report error
use Tar.php class and clean up some unused properties
ChangeLog update
NEWS update
work on Windows support (use Tar class and System class)
use the new System class for common file opperations
make this entry readable.
@- Added mmapfile(), read a file into a variabele with mmap (Ilia A, Derick) - Added mmapfile(), read a file into a variabele with mmap (Patch by:   Ilia A. <ilia@prohost.org>)
fix sp
@ Have rand() and mt_rand() seed automatically if srand() or mt_srand() has @ not been called. (Sterling)
ChangeLog update
NEWS update
@Added version_compare() function (Stig)
- <br> -> <br />
fix execution order
avoid TSRMLS_FETCH()
@ Don't through a file does not exist warning for the is_dir(), is_writeable(), @ is_readable(), is_executable(), is_link() and is_file() functions. (Sterling)
rand_mt.c, rand_sys.c are gone, remove them from the workspace file.
Made session test pass on systems with short open tags disabled.
Made assert test pass on systems with short open tags disabled. Added .cvsignore
fixed name of global variables in ext/skelton.
ChangeLog update
NEWS update
* prototype of version_compare, doesn't work yet
cvsignore file
Add test for array_search and in_array
Added array_change_key_case() function that returns array with with all string keys lowercased or uppercased @- Added array_change_key_case() function that returns array with @  with all string keys lowercased or uppercased (EdinK)
nuke unnecessary force-by-ref declarations + name the needed in a proper way
added tests for PHP version comparing functions
changed the logic of version comparation
fix declaration
make this work under OSX
E_ALL fixes
get rid of the RC part of php versions
ChangeLog update
fix gd2 preprocessor definitions
undo last changes
fix macro
use maxpathlen instead of path_max
added method phpVersionIs() to find if a PHP version is minor, greater or both (see in-line doc for more info)
no message
MFZE1
update
Search for the '@' symbol in the DSN from the right instead of the left. That will allow the password element to include a '@' symbol without confusing the DSN parser.
ChangeLog update
Add cleanup on an exec failure Remove debug comments
ChangeLog update
typo fix by zoot@zotikos.com
ChangeLog update
NEWS update
@$(mkinstalldirs) $(INSTALL_ROOT)$(bindir)
Removed PHOENIX_INCLUDE, I don't need it to compile and it seems like it causes a conflict with ext/mhash. (Phoenix has a file called mhash.h and that is being found when mhash is being built.)
ChangeLog update
NEWS update
Add QUERY_STRING, HTTP_HOST, HTTP_ACCEPT_LANGUAGE to the script environment.
Ignore generated files.
Allow the location of the Phoenix library to be specified on the configure commandline.
Didn't compile, replaced some TSRMLS_C with TSRMLS_CC
@Added new function pcntl_exec, which behaves similar to execve.
I could have sworn I test compiled this when I committed it a couple of days ago.  Must have been hallucinating.
ChangeLog update
NEWS update
Search frontend example has been updated.
@- initial support of mnogosearch-3.2.x has been added. Not all features @  are implemented currently. - initial support of mnogosearch-3.2.x has been added. Not all features   are implemented currently.
# fixed typo
ming-0.2a needs rint() in libm.
Doh! Return nothing when there is nothing back from a plugin
extract only the package.xml file instead of all files
ChangeLog update
Added msession_set_array and msession_plugin
implemented infoFromTgzFile()
ChangeLog update
NEWS update
tab vs ws
don't want "-" in package names
Typo
Undo Z_ subst for sapi and ext/yaz
Undo Z_ subst
Patch from Sander Steffann <sander@steffann.nl> to prevent crash.
- Bump it up in the right place
include php_compat.h, so that we use php_XML_* if necessary. Better to do it in expat.h, so that other libs, eg xmlrpc, inherit this behavior and we can link
Another leak bites the dust?
ChangeLog update
NEWS update
fixed Z_* conversion errors
Revert macro-subst, because wasn't necessary here, and those who were substitued weren't zvals
More accurate NEWS entry
- nl2br now handles different styles of line endings in one string. (Patch   by Boian Bonev <boian@bonev.com>) @- nl2br now handles all styles of line-endings in one string. (Boian, @  Derick)
- This patch adds proper header file detection on system which   simultaneously isntallied libxml1 and libxml2 (eg. Debian) (patch by   Markus Fischer <mfischer@php.net>)
Force proper alignment of php_sockaddr_storage.  Sparc will throw a SIGBUS, when accessing the family part of a char-aligned structure.
- whitespace fix
leave on first directory
5th and probably/hopefully last run of conv_z_macros
Typo
Parse-fix
4rd run... now also var.Z_*
3rd run in back-substitutin Z_* macro's. The val->Z_ cases are all solved now.
Now fixes virtually everything.
And now correctly... and up until 3 levels
This fixes most var->Z_* problems
ChangeLog update
no message
2nd phase in back-substitution those macro's
Should've used my own script... 3rd try.
Back-substitute for Z_* macro's. If it breaks some extension (the script isn't optimal, it parses for example var->zval.value incorrect) please let me know.
fix release_ts_dbg libpath
nuke VARIANT module
Just in case...
Enhance to also process objects, and be more verbose
Added REQ_RANDSTR to support msession_randstr
Changed config.m4 to a better default, updated README.
Added msession_randstr, creates a random string from a single source.
add a 7.9 version check
ChangeLog update
fix constant
removed VARIANT module and put the VARIANT class into the COM module. also fixed a few bugs.
ChangeLog update
- Commit fix for bug #11998 by Ralf Bolte <r.bolte@gmx.net>
Make chop the alias and rtrim the main function, in order to get automagically generated alias-listings correct.
- Don't return from the function, so that mcrypt get properly initialized   (fix for bug #13399)
- Added mcrypt_generic_deinit and added a warning about mcrypt_generic_end   being deprecated. - Reordened constants, and added MCRYPT_3DES to the 2.4 set of constants
mbstring is no more in experimental status.
ChangeLog update
NEWS update
Moved the check for mcrypt_generic_deinit to the right place.
Check if mcrypt lib has mcrypt_generic_deinit
Keep ZEND_CHANGES up-to-date.
fix compile
MFZE1
new apache_setenv() @- add apache_setenv() function for injecting variables into Apache's @  subprocess_env table.
removed autogenerated file from cvs
Let settype also accept 'int', 'bool', 'float' and 'null' @Let settype also accept 'int', 'bool', 'float' and 'null' (Jeroen)
update to curl 7.9 (when it comes out :) make REGISTER_CURL_CONSTANT() only take one argument couple of speed-up's few style fixes
ChangeLog update
MFZE1
proto fixes "double" -> "float"
local resource fix
renamed doubleval to floatval and made doubleval an alias to floatval made is_float the function entry and is_double the alias
don't use boyer_str_to_str.  It is experimental
Always seed the LCG from the request-init hook, otherwise the seed would be shared among the threads which is quite pointless.  Also use a function of the current time as one factor.
indentation fix
ChangeLog update
- Nuke unused enum
(Removed Makefile, added accidentally.) Eliminated mod_msession in ext/session, and moved that code into msesion.c
Rework some string-to-number and vice-versa functions to work smarter (e.g. without using functions that use slow locales, without allocating  extra memory and with fewer integer/float operations)
ChangeLog update
NEWS update
MFZE1
Not using _free_ldap_result destructor for le_result_entry, leads to crashes due to freeing same memory several times in some cases
Collections core-dump fix.  ocicollgetelem was using OCIInd instead of OCIInd * in call to OCICollGetElem
Added IPv6 support to gethostbyaddr() @- Added IPv6 support to gethostbyaddr() @  (Patch by Matthias Wimmer <matthias@charente.de> and venaas)
argument count fix plus beginning local query support
The extension should not be GPL.
doh\!
Added
quickly fix newly introdued off-by-one
Rewrite _php_match_basetozval to need only one multiplication per iteration and avoid the U?LONG_MAX hassle.
- MFZE1
MFZE1
MFZE1
Kill unnecessary quoting, and set host_alias to host, if only the latter is defined.
add missing dependency
Don't manually register the resource, let php_domobject_new do it for us. This fixes and elusive SIGSEGV. Bug id'd and fixed by Ivo Hulinsky <huld@fido.cz>.
ChangeLog update
argument count fix
another attempt at fixing compile warnings...
hopefully fix win32 compile warnings
ChangeLog update
yet another ncurses 4.x fix
editor hints added
whitespace
some keyboard constants
some more function implementations
Change duration of temporary lobs to avoid leakage of temporary lob space (dbenson).
some proto fixes (not all done yet)
got rid of strtok and added some comments
will now configure out functions not available in ncurses 4.2
adding RFC for loose type requirements for functions
fix macros
fix fcntl
fixed a warning regarding incompatible function pointer types
fix macro + nuke warning
ChangeLog update
NEWS update
Collection fix.  getelem method now handles returning nulls correctly and gives warning when accessing an index that does not exist.
Make rand thread safe when ZTS is defined.
Hopefully fix compile warnings on win32 systems
MFZE1
- Start giving the notes extension an indentation face lift but I got - tried half way through :)
WS-fix and directly use ap_psprintf instead of sprintf/ap_pstrdup
fixed memory_peak resetting
compiles without warnings now
for the daft folks that think 0 is a good seed.
@ Make the seed options to srand() and mt_srand() optional, if the seed is @ not specified, the generate the most random seed possible. (Sterling)
ChangeLog update
NEWS update
fix this in a couple of other places and use estrndup() when we have the string length.
properly grab field and value pairs, plus avoid a segfault when errmsg isn't defined
A bug fixed when trying to return NULL strings. Added a new example of building search frontend based on mnoGoSearch extension. @- A bug fixed when tryint to return NULL strings. @  Added a new example of building search frontend based on mnoGoSearch @  extension.
 Added support for japanese encoding to htmlentites() and htmlspecialchars(). @ Added support for japanese encoding to htmlentites() and htmlspecialchars(). (Rui)
ChangeLog update
ChangeLog update
more data types supported (and warn if unsupported encountered)
fix strtr() when called with two parameters. this has been broken for some time! guys, when "optimizing" functions you _shoudl_ write a testcase for the working function and make _sure_ that it works afterwards!
ChangeLog update
be more flexible in finding a db++ installation
Enable chroot() only if SAPI is CGI.
ChangeLog update
oops.  Used C++ style comments.  Make C style
Handle assign/append of NULL values to collections correctly.  Now works consistently with how the rest of the library operates.  If the value passed in is a null string, the value is set to null
revert last commit.  Guys, discuss such things first, then commit.  Mkay?
Add an API function for setting the session id from a session module...
Always return something from non-void function
Remove some unused variables
Similar to autoconf-2.5x, say who is doing what.
Ignore "AC_PROG_LEX invoked multiple times"
Remove obselete message and drop "divert(6)" which caused problems with autoconf 2.5x.
Revise the xxx_export api so that exporting to files is comfortable.
ChangeLog update
Added some preliminary x509 cert and csr creation/signing functions. Also, some problems with CGI initialization should be eliminated. Renamed some pkey functions to be more consistent. # Added aliases for older names; not sure if we should keep those.
fix build.
fix resource destruction
Use $(LINK) for libraries, but $(LINK_CLEAN) for creating programs.
don't forget TSRMLS_CC when using zend_parse_parameters
let apache2 filter build under win32
A round of "d'ohs" for me, please.
Use proper macro to return string with unknown length
removed ->is_ref check, doesn't make sense and causes bugs
IDispatchs got released if they were passed to another component
.cvsignore
* build fix
Revert, this is max error size, not strlen(error)
RETURN_STRING -> RETURN_STRINGL
ChangeLog update
MFZE1 (nuke cplusplus code)
MFZE1 (support return value in execute_scripts)
Do some justice to the doc team
Better fix for mark problem
- Don't wrap lines... this is annoying while coding.
- Really fix nl2br now... it's actaulyl faster now
remove ARG_COUNT(ht)
export the mt rand functions...
- Removed duplicate FETCH()
add DOMXML news
have this go through php's error warning system
ws fix, MFB
Change DOM-XML's error reporting to E_WARNING which is more appropriate
ChangeLog update
com_*() functions returned an oo-resource instead of an resource id, thus subsequent com_*() calls to com-returnvalues failed.
fix curl build for curl >= 7.8
remove bogus comment :)
RFC document for namespaces
wrapped to 80 columns :)
tense, tense, tense
I'll stop annoying the list if this doesn't shed light :)
ChangeLog update
Doesn't fix the subject problem, but debugging
revert (I'll fix the subject stuff in a second)
testing
API update: use zend_parse_parameters
- Shift around the variable parsing code to make it simpler.
build fixes
fix def.
don't use ifx_free_result here
fix result freeing
MFB
fix zts build
add a news entry
get rid of global mess
register a list destructor
Cleanup.
Almost missed this one..
if test -f /usr/local/lib/libexample.s?; then   <-- no workie if test -f /usr/local/lib/libexample.so; then   <-- workie # # You can all point at me and laugh now..  :( #
ChangeLog update
Damn, went to head instead of the branch - revert
Oops, forgot to add sapi_apache.c to the apache_hooks branch
no need to cast a 'HashTable *' to 'HashTable *'
Introduce the good practise of using [] around output messages.
Always quote the messages.
Hope this reduces the amount of bogus bug reports when people use wrong paths..
Clean-up NEWS.
fix various build errors.  default to no xmlrpc
I should really learn how to spell
avoid lowercasing the string
add missing )
fix ms compile warnings
adding xmlrpc extension, per Stig's request
spaces -> tabs work cont.
ws fix
ChangeLog update
NEWS update
Straight out da bronx, I be using zend_parse_parameters()
stray tabs and spaces
change range macro semantics
remove inline
a bit of api cleanup...  move range stuff into a macro (properly :)
revert bad commit
revert bad commit.
Interbase changes should get a NEWS entry
Prevent incorrect warning message from occuring on an EOF of socket_read.
MFZE1
API Update
Removed unused lines.
ChangeLog update
ChangeLog update
Much better fix for non forte compilers on Solaris. Removed pragma hack. Renamed socket struct to bsd_socket.
Adding function to set transaction locking and isolation.
ok, hand-patched this one in
Interbase extension fixes by Jeremy Bettis (.dsp patch looked funky, but these ones look ok)
Thanks sebastian
update php_trim as well...
fix crash bug
fix proto
tabs -> spaces
Begin cleanup, api wise...
pval -> zval
* hopefully the only changes required for the initials->user rename
* rename "initials" to "user" for clarity
update workspaces
fix zts+win32 build
ChangeLog update
- update to php4 api - expand case statements, ie:
fix compile on sun forte cc
This is a list of char *'s, not zvals (caught by Nick - see bug #13107)
- CLS_CC -> TSRMLS_CC
Add _php_math_zvaltobase and _php_math_basetozval This allows to use bindec, etc. functions to convert numbers longer than fits in long, using floats instead. Note: the functions like decbin still don't use the zval-ed functions, so they work only on longs yet.
Removed outdated comment until I've got a better one
Kill some warnings/errors (reported by Sebastian, more to come, but could take some time. Update of ZTS-builderrors is welcome)
should be this
- Update to the PHP4 API (newer macros) - Improve error reporting from split() - Some minor speed improvements
stray tabs
cleanup sscanf() just a tiny bit, just so it looks like the rest of the code in the string.c file.
First step for chunkifying the HTTP uploads.
Added RAND_REDESIGN change to NEWS (could be more elaborate, but IMHO that should be in the manual?)
Add forgotten files to MAIN
Update credits
ChangeLog update
s/fileList/filelist/
ChangeLog update
Changed element and attribute names to lowercase to match the changes in the package.xml files
.
Update API number
ChangeLog update
NEWS update
WS
spaces->tabs
MFZE1
MFZE1
Restore session_adapt_url()
fixed NEWS entry
Cleanup and clarify
define_sid updates
renumber error lines
fix for DB/tests/db_error2.phpt
fix problem when mixing different error modes under certain circumstances (pear/test/pear_error3.phpt)
make some tests to work. Still left the Notice of the deprecated use of call_user_method, no way to shut it down.
Use _default_error_options as the options for PEAR_ERROR_CALLBACK. Depreciate the use of _default_error_callback
Support multiple chunked output buffering layers
API update
fix userinfo msg in Pear_Error::toString() when callback mode is selected and style
MFZE1
@- Made in_array() and search_array() allow the needle to be an array in @  itself. (Andrei)
ChangeLog update
NEWS update
killed obscure bug in pushErrorHandling
Try to fix TSRM.dsp
@- Added ini_get_all() function which returns all registered ini entries    or the entries for the specified extension. (Jani)
- Make it compile in thread-safe mode.
KISS. And the search order must be reversed always. Last one counts.
HEAD has been 4.0.8-dev for some time now, so name it accordingly.
- Get rid of warning and C++ comments
The "actual" mode must be taken, not the error object mode
- Initial support for exceptions.
MFZE1
ChangeLog update
According to Zeev this code is just for showing how to create overloaded classes.
WS fixes and indenting.
fix build
fix bug# 13017 - patch from tsukada@fminn.nagano.nagano.jp
ChangeLog update
NEWS update
ChangeLog update
@- Added mailparse_uudecode_all() which extracts all uuencoded attachments    (Wez)
Kill a warning
fix uudecode
fix cp1252 -> wchar conversion
added the Mail/mime.php file
* tidy up "make install" output
* Archive_Tar is no longer experimental
* output brief usage when called without params
* Log/Observer.php rename fix
* started work on php file support
MFZE1
* fold case when parsing package.xml
add php version component
not all MPMs support child_init, so move php_apache_server_startup to the post_config phase (happens at server startup)
ChangeLog update
Coding style.
* fixes to make package.xml parsing case insensitive
* typo
* add the directory where php.exe was found to PATH to help Windows   find its DLLs
* Windows fix
shorter protos
- Add sample RFC
add ngettext() support from Walter Franzini <walter@sys-net.it>, and use Z_* macros.
Moved to 4.0.7.
* MTH (merge _to_ head)
Cleanup
More fixes and refinements
ChangeLog update
Add dlsym underscore detection, by Jani Taskinen
- MFZE1
whitespace
removed dbplus_change function moved db++ specific includes to .c files
implementation of missing functionality implementation and build improvements
removed as all functions from the perl interface have now been implemented
added symbolic constatns for error codes removed dbplus_change function some build improvements
added -lm to LIBS, whitespae
whitespace
Test your changes please Jani
Make the session module more independent
ChangeLog update
This option is no longer needed
Get rid of TRANS_SID - it's always possible to use it now.
Move the trans-sid mechanism to use the output buffering mechanism. Advantages: - Would work with the output buffering mechanism in general, and with   output compression in particular - Should yield better performance (untested as of yet)
add struct name
This test needed a newline after an echo. # However, the test still fails on my system
Windows-1252 encoding awareness
TSRMLS fix
Add random number generator-entry to INI-files
ChangeLog update
NEWS update
Ahem.
update news
proto fix
Don't try and search a 0-length string. This allows parse_url() to correctly parse a non-pathed URI, i.e. 'scheme://'
noet
Break the entire PHP build
noet
New extensions should put this in by default
ChangeLog update
noet
some cleanup
whitespace
- Add support for chinese encodings to htmlentities/htmlspecialchars   (patch from Alan Knowles <alan_k@hklc.com>)
Add TODO for DLSYM_NEEDS_UNDRESCORE
ChangeLog update
Reverted the patch to main branch - should have branched whole ext/standard...
Commit forgotten fix in crypt.c, oversight of a BC-problem
killed a compile warning.
Added missing entry..
This is not needed anymore.
More compile warnings nuked.
indent.
Killed a compile warning.
Add some editor modes (in the rest of the source)
Changed php_strip_tags() to check if <? was XML code.
ChangeLog update
* added two missing end folds
Hmmm...not sure what this was trying to do. stat() was acting like filesize().
Some changes to help out previous users of domxml... node::tagname == node::name. Add property "type" to textnode types.
Added two new functions:
API update
MFZE1
Further work on autoconf-2.5x support
Move PHP_SUBSTs to configure.in.
nuke some apparently harmful spaces
nuke whitespace
add MDAC note
Update api and fix some compile warnings
ChangeLog update
Proto fix
automatically add php input/output filters when give the standard 1.x config:      AddType application/x-httpd-php .php with that, no longer need "Set{In,Out}putFilter PHP" configuration for 2.0
Improved fix
MFZE1
test big numbers too
Cleaning. And made the check for SSL support in SNMP to really work.
Keep crypt() working even if SNMP needs OpenSSL.
catch date conversion errors
hum, wasn't $foo->bar 's property type OE_IS_METHOD ?
# just an author's promary email change in headers
non-ts compile work, add fastcgi module.
Windows compilation of fast cgi now working.  See windows.txt for info.
Added flags for SWFDisplayItem_addAction Added Ming RINIT function Added error handler for reporting Ming errors in PHP environment Added size arg to drawGlyph function Added swfdisplayitem_addAction function Added ming_useSWFVersion function for selecting SWF 4 compatibility Added SWFBitmap object Added hacky SWFInput object for loading data from file/network/process
changed version check to look for function Ming_useSWFVersion, indicating Ming 0.2a
added function prototypes:
ChangeLog update
fix for non-TS compile
php_input_filter needs to ignore proxy requests else it swallows POST data that needs to be sent to the downstream server
Pass on proxy requests (fix by Doug MacEachern <dougm@covalent.net>)
* ignore phptar
MFZE1
The "pear package" command will try to open "./package.xml" if no more params are given.
better error hanlding
maintain original file perms
Added some missing information.
ws fix.
Added "phptar" command as proof that the Archive_Tar class works. # Great work, Vincent!
ChangeLog update
ws
null terminate the returned string in here too.
ws fix.
libxml 2.4.2 is required now.
fixed NEWS.
Added a check for libdmalloc whether it works (is found..) or not. # We should always test every library (when possible) before # adding them..
Update NEWS
make this test work.
added support for the following tags in package.xml: - <State> inside <Release> (package development state: 'alpha','beta','stable','snapshot') - <Changelog> stores <Release> entries - <Maintainers> stores multiple <Maintainer> entries - <Role> inside <Maintainer> ('lead','developer','contributor','helper')
K&R format changes
# f*ck @!e333u49/&§&$T§$&("E""! expandtab, that's it, the default in my # vimrc is not noet
fix crash bug (Doug MacEachern, dougm@covalent.net)
ChangeLog update
MFZE1
MFZE1
Update php.ini-recommended
whitespace, braces, coding style (Mc)
- Use the same coding standards for pointers as the rest of PHP. - For example, char ** foo should be char **foo
Added preliminary support framework for Oracle 8. (Mc) Thies C. Arntzen will look into this to actually make it work, as I don't have Oracle installed here. As I said, it is only a framework for Oracle, and it will most likely crash if you actually try to use the oracle functions before Thies (or anyone else that wants to, of course) has had a chance to look at it. # The other databases will continue to work, of course :)
Z_*_P{0,2} macro work.
1) update to the ZEND_NUM_ARGS() and Z_*_P{0,2} macros 2) minor ws improvements, removing unecessary error checking logic, and making the error messages a bit nicer looking
Forgot to add DB.php.
These files do not exist anymore.
Look for iconv library also in $ICONV_DIR.
fixed a buggy cast
Cleanup of var_dump() with correct macro's, k&r indent, and removal of a pair of unnecessary { }
pval -> zval Z_*_P{0,2} macros easier way of doing urldecode(), from rawurldecode() (a tad faster too).
ws fix.
HAVE_LIBICONV was never defined.
Clean up the function for the Zend API (php3, early php4 relics removed). Use PF_INET, instead of AF_INET, if present. remove some code enclosed in #if 0 ... #endif that made no sense
ChangeLog update
NEWS update
Remove redundant files
Send Content-Length if we're sending just one chunk
Missing define
Missing entries.
sync with CODING_STANDARDS
MFZE1
add tail pointer to speed up imap_search (submitted by Rob Siemborski <rjs3@andrew.cmu.edu>).
added me and myself
that too
Add dbx
- Try and nuke get_object_zval_ptr()
- Remove bogus notice
- Sync with ZE1
move php_shutdown_config further down
darn noet
Ryan Bloom's fix of my fix. ;)
Commit a bit of random plane hacking.  - A slight exif fix from the latest version of jhead  - Make ext_skel's confirm_module_compiled function consistent
ChangeLog update
Add the build time too. Bug: #12774
PEAR::raiseError() can be called statically - don't assume $this will be there!
* point people to the manual instead
Remove cbrt also, and mark logm1 and exp1p as expermintal
MF407
accomodate SAPI_API changes
MFZE1
fix SAPI_POST_* exports
no message
mega patch to avoid recursive oci-calls as they might break oracle!
removed CoInitialize() and CoUninitialize()
 Removed select(), fd_set(), etc. (wasn't present in the first place, and  these are implemented in the sockwasn't present in the first place, and  these are implemented in the sockets extension))
ChangeLog update
NEWS update
Revert an old bogus patch
improve typedef definition
* expected error codes are stored on a stack now, PEAR::expectError()   pushes into it, PEAR::popExpect() pops off it * made pear_error test work on other boxes than my own :-)
Uh-oh, didn't mean to eliminate all folds.
Be more safe about freeing zvals.
Add compile-time versioning for default hostname
Update hostname
depreciated, but should build anyway...
- This code looks OK so remove FIXME comment
TSRMLS fixes
TSRMLS fixes
TSRMLS fixes
MFZE1
MFZE1
fixed com_invoke retval
I'm sure you meant 'l' here, Sterling.
* updated test (currently passes only on my laptop, sorry...)
* added expectError() method
- Avoid using malloc() - Improve and fix leaks in the typelib constants registration mechanism
fixed bug in com_load_typelib
Whitespace
more whitespace
Whitespace & API updates
Whitespace and API updates (please keep code in the repository in K&R style like the CODING_STANDARDS ask, guys...)
Add missing break
use an absolute path for symlinking the php library archive
If the header file is not found, bail out.
ypo;-)
Obviously not complete, but somewhere to start.
Kill some duplicate PHP_FALIAS()'s. Many of these were commented out, but I killed them anyways just to be consistent.
Group PHP_FE and PHP_FALIAS with their own kind.
Register le_domxmltextp.
Don't hammer the resource type right off the bat.
Trim ws only lines.
ws fix. Also added some missing protos and fold tags.
Another TSRMLS_FETCH() nuke.
Whenever typelibrary constants were loaded, there was a GP Fault at process exit as shutdown_memory_manager seemed to delete constants that were supposed to have been deleted earlier. It seems as though CONST_PERSISTENT is a bad thing to use. Resetting that bit on the constant creation still seems to work and the GP Fault at exit is gone.
More Z_* macro changes.
hresult is returned if no return type is specified
update todo
make next() return a single value instead of an array with one element
ChangeLog update
NEWS update
Remove unused variable and fix small mental error.
merged from EXPERIMENTAL lots of cleanup work
initial
Use a symlink instead of copying the +6MB library archive during install
Reverted - Didn't yet read Torben's mail - Sorry!
Don't display egrep result
whoops, forgot to apply cgi/poll patch before diff'ing
remove "i"
.
Add check for thttpd-2.21b.  We support nothing else for now, because this version is rock-stable using the combined set of patches.
improved thttpd-2.21b patch.. I got tired of applying my patches for these bugs.
assorted stuff
More WS.
WS only
Add TSRMLS_CC
- More Engine 2 work.
- MFZE1
- ZE2 fixes
- More ZE2 fixes
- Attempt at fixing the Java extension for ZE2
- MFZE1
Faster wrong_param check for functions that take no parameters
Change to Z_* macros.
@Added --version option to php-config (Stig)
Track down a few more functions that don't check for 0 args and use faster mechanism
Oops, a little too much simplification there.. ;)
We don't consistently check for args passed to functions that don't take any args.  In some cases we probably want to skip the check for performance reasons, but in other cases where performance is unlikely to be a factor, not throwing a warning on the wrong number of args passed to a function is at best inconsistent, and at worst it could hide a bug. So, add a few such checks.  There are still lots of cases out there.
ws
Whitespace fixes and moving to zend_parse_parameters()
Reverse patches that slipped in by mistake in a whitespace patch.  They require some more work...
Update .dsp
MFZE1
ChangeLog update
Enable output buffering in the php.ini-recommended
Compile fix for oldie Linux systems (possibly others too)
tags need to be UTF8-decoded as well.
_FUNCTION is used in definition, so use _D
adjusted Satellite for Zend 2
changed IOR values
wrote some tests for satellite
- Make com work with new object model
Save spec_opt for each function.
Oops, missing () there
ChangeLog update
- Update php.ini-dist - Sync php.ini-recommended with php.ini-dist
Make it possible to enable chunked output buffering without providing an output handling function
Let domxml compile with ZendEngine2.
Whitespace
- Make odbc_fetch_object() work with Engine 2
- Make mysql_fetch_object() work w/ Engine 2
- More work on making objects work
Whitespace
Whitespace
removed my debug code :)
don't show is_file() stat errors
Whitespace
Whitespace
update
Start pushing register_globals annihilation
make sybase compile with engine2
beautify
Added $_SESSION to the $_* family.
- Need to do some rewriting in the parser instead of this.
use macros for accessing properties in object.
'delete' is a reserved word in Zend Engine 2
Changed ext_skel to use zend_parse_parameters() for argument parsing in the generated functions. This cuts down on code a lot.
fix a few typos
ZEND macro-rename.
Move the macro wrappers from the compatibility header to php.h
- For Sebastian. Will allow to see you're using the Engine 2 CVS via   phpinfo()
ChangeLog update
Adding SQL statement to the warning
Made use of the resource macros here too. And some beutifying.
Possible fix 12360. If it doesn't help, it doesn't hurt, AFAIK...
Add imap_setacl() function (Brian Masney <masneyb@seul.org>).
Rename storage* to container*.
- A couple of fixes
Optimize macro usage...
More build fixes
Added yaz_sort. Updates for ZTS.
Centralize macros
There we go.
build fix
Let's not introduce more mess to maintain.
Sablot extension cleanup - it compiles again now
The checks were in the wrong order here.  sablot depends on expat, so check for expat first and add -lexpat then check for sablot
killed compile warnings.
compile fix (missing TSRMLS_CC)
Cleanup. Also make gethostnamel() to return FALSE on error and not just empty array.
Filter a bit of the "Bronx" out of this README
ChangeLog update
NEWS update
Prevent potential crash
Convert parameter to long if needed.
Added zend_ prefix to wrong_param_count in enum.c, object.c and struct.c
struct.c
Prevent potential crashes.
(PHP satellite_object_to_string) Added function to get IOR of object.
rewrote configuration script
Added patch for ORBit that handles "Multiple Components Profile" in an IOR.
K&R-ify the switch statments.
Commit acutal code only, will do ws on another pass.
Revert patch to seperate code from whitespace changes.
Restore xpath_eval() and the underlying php_xpathptr_eval(). It still leaks like crazy, but does not appear to crash, and seems to work correctly.
fix multiple factory calls problem with php < 4.0.7
*** empty log message ***
spaces
Updated the extension part a little bit. # I guess people didn't see the forest from the trees.. :)
More ext_skel cleanup
Workaround which avoids passing pic-related flags in link mode
fix PHPDoc
Added missing entries.
ChangeLog update
Update NEWS
Implement import_request_variables()
Put it in the wrong case...
- Implement $_FORM - Update phpinfo() - Update NEWS
- Implement new short names - $_GET, $_POST, $_COOKIE, $_SERVER, $_ENV and $_FILES - Use the Zend Engine infrastructure - make these variables available in   all functions
- Preliminary patch for method() dereferencing
Use zend_first_try
Using TSRM no longer implies ZTS
Added Frank to the CREDITS for FrontBase support Added dbx_fbsql.c to the Makefile.in # Could someone please compile/test this? My Linux-box is down :( # Win compiles just fine, I don't expext any trouble on Linux...
Added extra entries for FrontBase support (Mc)
Changed the old skool resource stuff to use the Zend macros.
Cleanup. (some relics from php3 era?)
Make this compile again.
ChangeLog update
NEWS update
More TSRM work.
Migrate .dsp patches
Yet another TSRM fix.
@- Added vprintf() and vsprintf() functions that allow passing all arguments @  after format as an array. (Andrei)
- Forgot to commit the updated dsp
Killed compile warnings.
killed a compile warning.
Adding cvs ID to source files
Adding FrontBase support to the DBX extension
TSRM fix
More TSRMLS_FETCH() nuking.
Another TSRM fix. Plus killed some compile warnings.
Another TSRM fix.
This did not work as expected. Reverted.
TSRM fix
TSRM fix
Missed these
php_sig_gd2 is only needed for GD extension.
oops. Copy-paste-magic. :)
Yet another TSRM fix.
Beutifying. Also made a check for IMAP-2001.
@- Added support for GD2 image type for ImageCreateFromString() (Jani)
let ext\shmop build under win32
fix buffer size
This was not supposed to be removed.
#remove cvs tag
implement shm* similar functions
ZTS updates.
A CRLF at the end of a line is not so wrong.
The module usually did not send out Content-Type: text/html.
- More sync with latest CVS
- Sync Engine2 CVS with latest Engine CVS
ChangeLog update
Commit uncommitted build fix
Adding missing TSRM macros. Kill signed/unsigned compiler warning
Adding missing TSRMLS_CC
- This is not supposed to be used, from c-client docs (formats.txt):
Some cleanup. Removed unnecessary duplicate #ifndef's.
removed unused function. (seems like a copy of imap_body)
Better shared code
we can no longer register internal-classes once the script is started. therefore the "incomplete class" is now registered at MINIT time.
Another TSRM fix.
missing entry
more tsrm cleanup
- Move to using Z_ macros
- Use Z_ macros
ChangeLog update
NEWS update
Removed some duplicate code out of addclashes # Not TSRM-safe, I am afraid... @- addcslashes now warns when charlist is invalid. The returned string @  remained the same (Jeroen)
Bugfix in abs(), abs(LONG_MIN) was bogus
Added proto for php_charmask in the .h
Error-handling for the second parameter of [l|r]trim
Didn't commit the correct trim.phpt, it now passes
More tests
update NEWS as well
Add the Cyrus IMAP extension to PHP's CVS (Manual editing of the news file to occur).
More nulled-out macros
more tsrm cleanup
more tsrm cleanup
fix php_write
some more eliminate-fetches-or-escalate-them-at-least
more tsrm cleanup -- output.c is not doing any fetches anymore
more tsrm cleanup
(gmp_init) Added extra (optional) argument to gmp_init():            a base argument which indicates the number base. E.g.:            gmp_init('1010101010',2); // feed gmp a binary value. Patch by Troels. @- Added optional extra argument to gmp_init(). The extra argument @  indicates which number base gmp should use when converting a @  string to the gmp-number. (Troels)
Check that _php_math_basetolong result fits long (by request from Troels Arvin)
further tsrm cleanup
further tsrm cleanup
further tsrm cleanup
delay module_shutdown even further. zend_try and _catch need the current globals as well. zeev, is this a chicken & egg problem?
module_shutdown() calls ts_free_thread in ZTS mode. so SG() cannot be accessed afterwards.
Even more TSRM cleanup.
More tsrm-related cleanup.
tsrm-related cleanup
Remove more duplicate TSRMLS_FETCH() calls.
- TSRMLS_FETCH work - whitespace fixes
TSRMLS_FETCH work
Nukre most TSRMLS_FETCH()'s in TSRM
ChangeLog update
NEWS update
support for multiple exif comments @ - Enhance read_exif_data() to support multiple comment tags (Rasmus)
Better abs() testing
Layout: revert accidentel joining of lines
Named some constants in filestat to improve readability
added some more stuff to .cvsignore
Another bugfix in pow. Special cases, with 10 times the same thing are _so_ error_prone... :(
Kill a warning
Bugfix. All tests pass now on my system
fix serialize: - keys no longer have a trailing \0 - no leak on calling __wakeup (also saved 2* malloc & free) - serializing objects that implement __sleep() works again - make test works again:-)
Another one bites the dust.
Remove duplicate TSRMLS_FETCH() call.
fix possible crash - we should never keep the zval** as they might point somewhere into the Engine. (there's still a new bug in strtok - hunting;-)
WS Pollution
Added tests for pow() #The tests near LONG_MAX/MIN fail, I know that
- A little bit cleaning of pow(), and 12 bytes less memory (wow)
Don't allocated quoted strings unless we are in a META tag.
calling mail_open() causes a SEGFAULT when using imap-2000c. mail_open(0,"",0); seems to work.
don't show the call_user_method deprecated use warning (disturbs tests)
Eliminate TSRMLS_FETCH() call.
Clean up the serializer by modularizing some of its code.  That also enables us to serialize hash indices without creating zvals for them. Due to its nature, this patch also includes some whitespace changes.
fixed a memleak.
ChangeLog update
NEWS update
#- HTML-safe error for pow()
Un-revert patch
Reverting last patch, segfaults.
Change from E_ERROR to E_WARNING in the exif extension @ Change from E_ERROR to E_WARNING in the exif extension (Rasmus)
- New pow() function. It now gives warnings on wrong input, and   returns integer result when possible @- New pow() implementation, which returns an integer when possible, @  and warnings on wrong input (jeroen)
- Added new parameter to [l|r]trim, to specify _what_ to trim @- Added optional second parameter to trim, chop and ltrim. You can @  now specify which characters to trim (jeroen)
Don't blindly assume -lc-client when linking 'conftest'.
Full include paths are preferrable.
smart_str use requires php_smart_str.h.
* Added the new fetch row mode: DB_FETCHMODE_OBJECT that returns the columns   of a fetched row as object properties * Added a new class DB_row (the default type of a fetched row object) * Updated some phpdocs
Treat trailing zeroes correctly
Do the nul'ifiying of php_var_serialize's result at the right place
Pass on nul'ified data
Don't copy the strtok parameter
NUL-terminate string
Add some casts
Replace our strtok implementation with a binary-safe one which code does not cause headaches when reading it.  Also happens to be a bit quicker.
Convert serializer to smart_str.. avoids lots of sprintf's and copying of data.
Get rid of a couple of bogus persist_alloc()'s, and some cleanup
More TSRM stuff
Implement fast memory allocation and reduced fragmentation under Windows.
Some compat macros
Changed the PHP_ADD_LIBRARY_DEFER() to work when building standalone extensions. Also improved the checks for SSL and Kerberos in IMAP extension configure.
These are redefined in the sqltypes.h that comes with unixODBC. PR: #12519
Revert whitespace patch.
Add missing header.
ChangeLog update
Revert this change - if you want to do this, do it in a 'make clean'
Larger transfer buffer before realloc() this should speed things up a bit
ws fix
Delete config.cache always. This makes config.nice a bit more useful.
require_once()/include_once will return true in case a file was not included because it was already included earlier. Changed the default return value type of the include() family from long to boolean
this kills 90% of the warings in maintainer-mode
Whitespace fixes.
not too sure about this: the uw-imap lib is usually called libc-client.a - kde comes with a libimap.a which (when used instead of libc-client.a) will break the build. so i have reversed the detection for the imap-libs - 1st look for the variations of libc-client and (if 'em are not found) try -limap. i hope this breaks nobodies setup!
adding -lsablot later makes it appear _before_ -lexpat in config_vars - and that fixes a link problem (atleast) for me. sterling?
Optimize the NEWS file :)
Update NEWS
Avoid going over huge lists of functions, classes and constants. Special thanks to the guys from the MS lab for the profiling tools :)
Some cleanup
We no longer need any FETCH's for internal functions
TSRM fix for ext_skel - probably more needed
TSRMLS fixes
ChangeLog update
Beautify
NEWS update
These new math functions are not supported on Win32
- Added a few new math functions from Jesus Castagnetto. - Converted to Z_* macros. @- Added a few new math functions. (Jesus)
added BaseInstall dir support
This should work better. Thanks to Jon Wagoner <jwagoner@wlion.com>
configure leftovers..
Implement fast scanning in the multithreaded environment
kill warning and make this build again.
fix build.
ChangeLog update
killed some compile warnings
more ZTS fixes.
remove duplicate TSRMLS_FETCH()
fixed comment..
Moved to the /pear repository
Missing header.
ws fix
Remove duplicate function entry.
Added help texts for --with-imap-ssl|kerberos.
package() now returns the full path of the generated package also improved windows support (if php getcwd() returns also the drive letter, please test it)
* DB_storage broke when DB_common::query was added, fixed
the make Sebastian happy part of the day :)
More TSRMLS_FETCH annihilation.  Enough for today...
More TSRMLS_FETCH work.  Got it under 400 now.
More TSRMLS_FETCH work
Some more TSRMLS_FETCH work
More TSRMLS_FETCH annihilation
More TSRMLS_FETCH annihilation
More TSRMLS_FETCH work
build fixes
ChangeLog update
NEWS update
Make this compile in ZTS mode.
Make this extension compile in ZTS mode.
Use the new TSRM structure.
Make this extension compile in ZTS mode. Also killed 2 compile warnings.
Make this compile in ZTS mode.
Make this compile in ZTS mode.
Killed compile warning.
Removed duplicate function entry.
moved from the Experimental dir. the basic things should work...
Updated to match TSRM changes.
@- Bump bundled expat to 1.95.2 (Thies)
name-protect new expat function
fix compile
It's been working here for four months now... hardly experimental :)  (Mc)
unneded
compile fix
Make this extension compile thread safe on unixes too. Also changed all those nice spaces to tabs # # Zeev, could you make those changes for this extension too? # # And yes, I know I shouldn't mix ws fixes to anything else but # this was easier to do this way.
More TSRMLS_FETCH work
Compile fix
Added missing file
Zend compatibility patch
More TSRMLS_FETCH work
More TSRMLS_FETCH work, and a bit of cleanup
More TSRMLS_FETCH work
- Also cache TSRM lookups in thread local storage on Windows.
Zend compatibility patch
More TSRMLS_FETCH work, and get rid of redundant ParametersPassedByRef
Let's be consisten and keep TSRMLS_DC declaration after num_args.
More TSRMLS_FETCH annihilation (Zend compatibility patch)
More TSRMLS_FETCH annihilation
Get rid of more TSRMLS_FETCH's
Avoid TSRMLS_FETCH()'s, and clean up a bit of stale extern's and layout on the way
Avoid TSRMLS_FETCH()'s (still lots of work left)
Save TSRMLS_FETCH()'s
ChangeLog update
changed for input encoding conversion in win32.
buffer was too small
*** empty log message ***
- Yet another one...
- More object junk
- Object macros...
- And more...
- More object macros
raiseError() now can accepts a PEAR error object in its first argument. With this, users can "re-throw" a previously created PEAR error object (very useful after the use of (push|pop)ErrorHandling)
Added the methods pushErrorHandler and popErrorHandler. With this it's posible to override the actual error handler with a new one for the time you need and restore it back when finish.
ChangeLog update
- More object macros.
- Object macros...
- More object macros
- More object macros
- More object macro work
- More Object macro work. I couldn't test this one so let me know if it   breaks the Windows build.
- Use object macros
- Use the Z_OBJ* macros for accessing objects
- Small patch to allow fixing the PHP tree to be compatible w/ the initial - Zend 2 objects patch. Hopefully I can commit that this week.
Make Sebastian happy...
another build fix, a simple UNIX build now compiles clean
Build fix
Some more fixes
Redesigned thread safety mechanism - nua nua
Redesigned thread safety mechanism - nua nua
Redesigned thread safety mechanism - nua nua
nesting_level is now ob_nesting_level in main/php_output.h
Remove superfluous returns
ChangeLog update
Simplified a bit and made more readable.
Simplified this a bit and made more consistent.
Bugfix by Johannes Erdfelt
- Get rid of ELS_*(), and use TSRMLS_*() instead. - Move to the new ts_allocate_id() API This patch is *bound* to break some files, as I must have had typos somewhere. If you use any uncommon extension, please try to build it...
Get rid of ELS_*(), and use TSRMLS_*() instead. This patch is *bound* to break some files, as I must have had typos somewhere. If you use any uncommon extension, please try to build it...
- Prepare for optimization - use a single fetch for multiple resources - Clean a bit
ChangeLog update
detect oracle9i
Remove unneeded variables
ChangeLog update
NEWS update
DB::assertExtension-> trigger a useful error message if backend extension couldn't be loaded
@- Improved the stability of OCIPlogon() after a database restart. (Thies)
fix recently discovered api flaws - nuke first parameter to socket_select (detemine it ourself) - swap parameters for socket_fd_set, socket_fd_clear & socket_fd_isset - allow to pass an array of sockets to socket_fd_set + socket_fd_clear
* added emacs footer
Get rid of memchr in SEARCHCR().
Get rid of memchr
updated ovrimos driver
ChangeLog update
Remove references to global startup functions.
Get rid of the redundant global startup code
Add extra check on Delete statements
removed duplicate code and changed code slightly to be compatible with broken com implementations
- MSHUTDOWN needs to return SUCCESS/FAILURE
ChangeLog update
indention
fix newly introduced mem-leak in assert-module
I added code to up the reference count of the database connection reference. This change fixes bug #11489 in php version 4.0.6. I derived this fix from the my_sql module.
Unbreak various tests and transparent session id rewriting for now.  This has been tested extensively.  Most SAPI modules (Apache 1.x, 2.0, thttpd, AOLserver, CGI, TUX, Caudium, Roxen, NSAPI, Phttpd, Pi3web, Servlet) call php_request_shutdown() right after php_execute_script (or equivalent functionality), so that output is possible under an overwhelmingly number of web-servers.
uploaded the install.txt version which was shipped with the 4.0.6 windows binary distributions with slight enhancement to cover the issue of dll location.
Handle file buckets for now; that allows us to pass something to the engine which it can handle.
tsrm_error is only available, if TSRM_DEBUG is defined.
tsrm_error is only available, if TSRM_DEBUG is defined.
Portable use of multiple arguments macro without generating lots of warnings when doing nothing.
Remove accidentially committed line
Call php_request_shutdown only, if the startup was successful.
Use synchronous php_request_shutdown in the standard case and let the pool cleanup function only become effective, when an error has occured.
ChangeLog update
these tow fail with "Constant sid already defined" i too if E_NOTICE error reporting is active
While researching a crash-bug in mail(), I found these two goldies.
fix date('T')
ChangeLog update
- The __FILE__ fix and a couple of other NEWS entries which I forgot to   commit.
Always track bailout file/lineno
Left-over outdated comment
- Shouldn't be needed anymore
Improved bailout mechanism, supports nested bailouts a-la try..catch
Improve bailout mechanism, supports nesting of bailouts a-la try..catch
Remove redundant code
Updated
Drop memchr() in php_memnstr in favor of manual scanning.  This reduces the complexity of the function and is about 20% faster on Linux/x86.
Clarify and optimize
ChangeLog update
Updated
Updated
Updated PHP mode, fixed indent mode, added syntax check mode
fix include
Retain downwards compatibility - cool idea Jon :)
Update NEWS
Implement a more granular shutdown mechanism for the executor - prevent corruption of constants and missing destructions of resources
Avoid getting bailouts on text output during shutdown.  Text output is now 'officially' disabled during shutdown (this doesn't change the Apache module behavior, but may change behavior of other server modules, in which it was possible to emit output during shutdown;  I think it's a good step towards consistency, though)
fix font handling in vdir mode
Add optional support for using boyer-moore to str_replace.
ChangeLog update
I just got annoyed by this, eventually. :)
Unfix, it has too strong effects
Catch all cases
Added the error-message functionality (new in odbc module) (Mc)
changed implementation of creating reference to a value by columnname (Mc) added a test for changing the referenced value (Mc)
Revert bogus patch
Function yaz_record handles MARC records that have identifers in 00X.
move the package list handler methods to the new Packlist.php also removed the unused code
This class will handle the pear packages database (it's experimental now)
added TODO and checks before try to open the package.xml file
update
ChangeLog update
- Only decompress package once - Allow relative directory package calls (for ex:   pear install packs/Pear_DB-1.1.tgz)
Instead of using the poor system rand() algorithm and the system-time seed, rely on the long-living LCG to determine whether to start the GC process.
The lcg needs to operate on signed 32-bit integers, so use the proper php_int32 types here.
Provide typedefs for php_int32
Retire old hash algorithm and use the FNV-1 algorithm.
fixed a bug in 'case VT_DATE'
- remove the xml parser code (use PEAR_Common::infoFromDescFile) - added the new package.xml Dir tag support - killed many bugs and warnings
- always write a the package definition file as 'package.xml' inside the package - other clean-up's
killed some warnings
fix double->long conversion
Private members don't have to be functions.
ChangeLog update
NEWS update
Woops, missed a closing paren.
Describe the standards for function naming and private methods.
Oops, said include but do require (thanks Jon and Rasmus)
- Removed the xml parser code (use now PEAR_Common::infoFromDescriptionFile()) - Added the ability to build packages without the need of being in the same   dir as the package.xml file (f.ex: pear package ./mypack/package.xml) - Removed methods log() and mkdirHier() as they are now in Common.php - More debug code and error checks
moved methods log() and mkdirHier() from Packager/Installer to here
include only the needed files
Forgotten Include. This should fix the windows build (though I currently don't have a way to test it)
Add always_populate_raw_post_data ini directive and default it to 0 to maintain current behaviour.  If this is turned on then $HTTP_RAW_POST_DATA is always populated with a copy of the raw post data. @ - Add config option (always_populate_raw_post_data) which when enabled @   will always populate $HTTP_RAW_POST_DATA regardless of the post mime @   type (Rasmus)
- Remove unused code
fix problem with static usage...
Be consistent with hashed_details behavior.
@Added support for socket and popen file types to ftp_fput (Jason)
ChangeLog update
Another layout fix
extend infoFromDescriptionFile() to: - Handle the new FileList->Dir tag format (see http://marc.theaimsgroup.com/?l=pear-dev&m=99071271521558&w=2) - Attributes of Files can inherit from Dir - Support for the experimental LibFile/LibName/Sources tags
Make read always 0-terminate strings
Generalize
Add a useful #define
ChangeLog update
Add credits to GMP
Close Bug #10235.
ChangeLog update
NEWS update
(PEAR DB) some doc fixes
Update cast
Minor cleaning
Optimize the parser a bit
Get rid of var_uninit()
Time to bid this old timer goodbye - get rid of var_uninit()
Allow indirect reference to method names in class::method() construct
Improved interactive mode - it is now available in all builds, without any significant slowdown
Early initialization
2nd bug in the same line
remove bogus &
Make bailouts valid at request_startup
ChangeLog update
NEWS update
- Faster without calling strlen()
clearify ocisetprefetch
ChangeLog update
NEWS update
ChangeLog update
replaced add_index_string with add_next_index_string made vpopmail_alias_get_all return sane result
ChangeLog update
Add fdf_set_encoding()
add missing break statements.
change test-name
make sure all string from zlib are \0 terminated. change one realloc to erealloc (though this code is never reached IMHO) add regression tests
fixed #12091. added \0 bytes at EOS in a few cases.
.
layout
the resource-lists are now destroyed backwards. this will make sure that resources get destroyed in the opposite order they were created and thereby db-cursors will always be released before their corresponding connection etc. this sould not break anything!
make regession test of session work without the ugly hack in session.c and removed that ugly hack.
Add port support to snmp functions @ - Add hostname:port support to snmp functions @   (nbougues@axialys.net, Rasmus)
added an option to support utf-8 in pcre.
Quote grep patterns to avoid shell interpretation
ChangeLog update
added DB_PARAM_MISC constant to use in prepare/execute
Allow extensions to define custom prealloc sizes
Herr sascha's reccomendation.
ChangeLog update
Return proper length, thanks for excellent reports by Colin.
Remove the last couple of bogus inlines
Remove unreferenced variable
- Move inline_zend_hash_func() to header file
use ZVAL_* macros
gzencode() now zero-terminates its buffer.
fix handle dup.
workaround to make ext/session well behaved with 'make test' and E_ALL
cleanup in preparation for session_readonly()
once again, make test would not work right with error_reporting=E_ALL
ZVAL_BOOL(v,0) -> ZVAL_FALSE(v)
fixed ZVAL_FALSE and ZVAL_TRUE
No hashpjw anymore, but we have zend_hash_func
More correct pseudo-fix # This is not really a fix. This thing is still broken. I will think on # how to really fix it. Any suggestion is *welcome*.
Nuke zval_reset
Get rid of ZVAL_RESET...
added LOCK/UNLOCK to mainps queries (reported by Erik Hjortsberg)
var_reset -> ZVAL_RESET
Get rid of some inlines
prevent php from crashing when serializing circular data.
Wrap lines.
Modified to work with the new parameter parsing API as a demonstration.
ChangeLog update
fix.
changed return value from fbsql_query to be booloan
added NEED_MORE_DATA error message to $errorMessages
- Nuke fprintf()
- Commit patch which checks for an include file in the calling scripts'   current working directory if everything else fails (include_path). - Right now this also effects things like opening php.ini. It'll now always   check in the current working directory for php.ini. I think this doesn't   screw up todays behavior.
# I think i am quite stupid.
If the transfer fails, still free the buffer if it exists.
Whitespace
ChangeLog update
NEWS update
Allow errors to be returned as XMLRPC fault packets.
manual update
minor in-line doc fix
cleaned up the RETVAL_ RETURN_ and ZVAL_ macros
- Commit Thies' patch. str.len was too long.
Make range() function smarter @ - Improve range() function to support range('a','z') and range(9,0) @   types of ranges.  (Rasmus)
*** empty log message ***
Adding new parameter parsing API.
fix newly introduced SEFAULT.
__USE_GNU should not be defined by an application.
Add getmygid() and safe_mode_gid ini directive to allow safe mode to do a gid check instead of a uid check. @ - Add getmygid() and safe_mode_gid ini directive to allow safe mode to do @ a gid check instead of a uid check. (James E. Flemer, Rasmus)
- Added php_escape_shell_arg to the header file
adopt shane's popen patch
@ - assert() now accepts the array(&$obj,"methodname") syntax. (Thies) + some cleanups
added test for assert
changed to use Z_* macros
added test for serialize changed var.c to use Z_* macros
xml_utf8_encode: make sure the returned data is zero-terminated
use erealloc for zvals!
Reset strtok_string, so that strtok can be used in all session handler functions.
Enable using an external mailer under windows.
Needed for the prototype of php_escape_shell_cmd().
@ - Make sure that OCI8 outbound variables are always zero-terminated. (Thies)
This should get xmldocfile() working again. This should fix bugs: 11192, 10899
Convert double-quotes to single-quotes.
* reverted "DIRECTORY_SEPARATOR" patch
* added missing constant
addes more logging and security options
whitespaces
Signal numbers are not uniform accross all platforms. Modified test to use the constants unless a failure occurs.
fix dsp (?)
Making --with-openlink work the same as --with-iodbc for it's eventual disappearing act. #  As requested by the Openlink Software people
fixed argument number in mb_send_mail().
fixed argument number in mb_send_mail().
Patch by Tobias, so parseInput returns pearError
enable get*by* networking functions + remove comments
fix win32 build
Added wait.h functionality to pcntl Added tests for such functionality Removed bogus files
Be consistent across all cases.
experimental db++ database support
preliminary documentation for db++ support in ext/dbplus
This should be lower-cased per the documentation and previous implementation.
Check for getpgid (torben@php.net)
Made imagegammacorrect() work on true-color images. Added support for new ImageStringFTEx function (due in GD 2.0.2).
Change a load of E_ERRORS into E_WARNINGs; it was being a bit too severe, which meant that scripts could not identify (or even display) errors before PHP bailed out.
Optimizing the mssql_execute function.
More ifdefs, just in case.
Added loads of #ifdefs; should fix Bug #11889.
Added name for enum, hopefully fixing the win32 build.
no need to implement these functions, already in posix module
Actually check for the needed system calls. Currently require sigaction, fork, waitpit.
Improve url scanner speed (up to 40% for large chunks of data) and handle some corner cases better.  The scanner has been changed to the format as proposed in "RE2C - A More Versatile Scanner Generator" by Cowan et al.
fixes in source documentation
stupid missing semicolon
Added a couple of new functions to "modularize" working with calendars. Added a few constants for the existing functions, and tidied them up a bit.
(PHP nl_langinfo) Added function when provided by OS (PHP htmlentities, htmlspecialchars) Uses nl_langinfo to determine charset @- Added nl_langinfo() (when OS provides it) that returns locale    information. (Wez Furlong) # There are a lot of constants used by nl_langinfo; should we do something # along the lines of what we do for syslog?
Stick open_basedir in here
This works better.
This module is no longer experimental
fixed an argument in example of ext/xslt.
- fixed bug in pdf_open_image_file when using images as masks. - clean up some comments
Small fixes.
Write-Patch by Alexander for bug reported by Yavor
Trivial fix - but the period looks odd in error messages
Missing constant.
Moved Config-Package from Experimental to main-directory, since noone complained about it ;)
fixed a link problem of shared extension module in ext/xslt.
PHPAPI-ize php_var_* functions # need this for shm*
fix some popen trouble
Remove unused variable.
mhash_keygen_s2k() overwrote the limits of a statically allocated buffer for long salts.  We truncate the salt now appropiately.
Make the FastCGI module behave nicer when trying to shut it down. If you kill the parent process, then it will kill all its kiddies for you. Also, now refuses to run as a CGI (since it doesn't work that way), and corrected a few debug messages.
Test commit
If no backend is specified, bail out.
Now all these options should behave the same.
- Remove bogus comment.
suppress sending of cookies if session id already came from a non-cookie source
This file needed an update..
standard .h protection
changed CLSIDfromProgId to CLSIDfromString
Adding new function to convert from binary to GUID format
let this be more userfriendly.
added in note to fix for odbc_fetch_into # could have sworn i did this before... but ahh well..
Update NEWS, test cvs commit
Update NEWS, test new CVS server
- Warn about illegal offsets - Allow assignments to uninitialized string offsets (automatically pads the   string with spaces)
# leftovers
Making logging optional.
Make info look more like mysql's output.
Added charset support.
special offer... 0 out a structure, and remove a crash bug...
fix bug: #11693. Some systems have crypt() in libc.
Simplify this and fix bug: #11654
No need for this constant.
Added an optional 2nd parameter 'readall' to read_exif_data.
Add update that Changelog missed
This test won't work without these libs. Also, it might fail for other reasons too.
*BSD doesn't have SIGPOLL or SIGPWR
Bunch of fixes, tested a bit, folks, please test with your scripts.  changes include nuking unnecessary extra copies, fixing handling of optional args, adding an additional argument.
Security fix in Udm_Set_Agent_Param function.
added missing include
added new com entries
added verbose ini entry
The extension name seems to be usually totally lower-cased.
A little typo here.. :)
added missing ending fold tag.
adapted to changes from com module
cast error
Remove bogus use of volatile and add a note about using inet_ntop instead.
fixed bug that resource was freed twice
cleanup
cleanup added some macros
added variant.h
Hopefully fix leaks...
fixed bug: #11641
This is better looking. Other options use the same.
- Bump Zend version
Check for PHP_SIGCHILD only if any of oracle libs is enabled.
added missing file
Support for handling multiple concurrent requests.
Update NEWS
fix build.
Moved some messages to the end of configure process so they are easier to notice.
@added optional suffix removal parameter to basename()   (Hartmut) added optional suffix removal parameter to basename() this makes it more simmilar to the basename command
Accomodate an Apache API change
Make it possible to build this extension as shared module.
Make it possible to build mysql extension as shared module.
mnoGoSearch module test example updates
A new parameter UDM_PARAM_VARDIR has been added in Udm_Set_Agent_Param function to support alternative search data directory. This requires mnogoSearch 3.1.13 or later. @- A new parameter UDM_PARAM_VARDIR has been added in @  Udm_Set_Agent_Param function to support alternative search data directory. @  This requires mnogoSearch 3.1.13 or later.
dup fds before fdopen'ing them, so that people cannot deliberately close stdio streams.
- Hopefully fix bug #11476 and improve garbage to be freed very quickly.   Tree tagged as PRE_GRANULAR_GARBAGE_FIX before commiting.
- Use inline instead of macro for PZVAL_LOCK()/PZVAL_UNLOCK() so that it   can be debugged.
- Nuke dependency of all of PHP on zend_execute_locks.h.
*** empty log message ***
fixed.
- fixed the reference in session thingie - regression test checked (this time;-) - added new regression test for references - references _between_ session variables also work in when the session var   replaces an already existing global var (this was a brain twister) - saved one strlen call per session variable - fixed one tiny leak
Support for SGI's State Threads.  Will be used by PHP's thttpd SAPI initially.
Eliminate the leak that the original bogus code tried to solve
Update NEWS
parent::methodname() now works better with runtime classes (fix bug #11589)
Spit out errors
1. st_blksize might be different for regular files and symlinks; hence    ignore differences in the twelfth element of the stat() array.
Remove redundant code from lint mode, it should now do only what it needs to do and not anything else, and should no longer leak.
Back out severely broken patch.  I currently don't have the time to debug this.  Please reapply a fixed version.
Changed length of BIT string. Changed return value of fbsql_field_length to long
libtool 1.3 -> 1.4 in first check
entry
date('W') now returns week of year (ISO 8601)
add PLS_FETCH();
All files are now in Unix-linebreak mode (\n only). Somehow \r\n still created problems with some cvs clients.
Make pcntl async safe by registering as a zend extension and grabing the statement handler. There could possibly be a more atomic hook in the future. Also added simple TODO section to README.
Change copyright note.
Change copyright note.
Include the 'html_errors' directive.
This warrants a NEWS entry, I think.
Allow the PostgreSQL driver to do internal row counting when iterating through a result set.
- Memory fragmentation fix.
Closed off Solid DB access to a function that it doesn't support in 3.0 and less. Thanks to Eric Veldhuzen
- Use ALLOC_HASHTABLE() instead of emalloc(sizeof(HashTable))
Finish phpinfo() HTML 4.01 tweaking.
Add missing exports
fixed malloc() / emalloc() bug
Make output of phpinfo() compliant with HTML 4.01.
Changed username and password for pgsql in include file.
Move PHP_TARGET_RDYNAMIC check to global acinclude.m4 and use it in thttpd's config.m4.
Added a pgsql testdatabase create script (thanks Christian) Fine-tuned some tests.
adding in some error checking for parameter counts, and some thread safety for functions
update credits
This extension works with pdflib 4.x too..
Added myself to the credits
Avoid crashing if the error reporting function is called after a bailout during shutdown
Clean-up Remove a lot of 100% redundent code
Latest (minor) fixes: mssql, mysql and odbc now pass the testset correctly. # I need a working setup to test pgsql with the test-set as well.
more functions, most of the simple ones (parameterwise) are now in
Adding some ifdefs for better platform compatibility
namespace protect one enum to fix compile with ncurses
added coauthors
initial version of ncurses extension, see example1 for whats possible right now
fix build
added Alan Brown to credits
(PHP curl_setopt) fix CURLOPT_HTTPHEADER crasher (Stig)
get rid of some getsockname() calls
added experimetal php->safearray support
Improve XHTML compliance (suggested by Anil Madhavapeddy)
Remove bugus file.
@Added new experimental module pcntl (Process Control) (Jason) Initial Import
added experimental enum support changed everthing to use the Z_* makros
add mbstring & xslt
Oops.
Add ext/xslt project to workspace.
should build under windows as well
this should be here..styles must be array
used in extension(s) as well
PHPAPIize url function to make them available to the outside (i.e. mbstring)
let this stuff build under windows
move some constants to a more appropriate place
fixed proto
Partial fix bug: #11333
# just correcting the evil vim removal of {{{'s and }}}'s ... bad vim!  no folding for you!
removed warnings
corrected a compile error (named variable missing).  thanks to sebastian for pointing it out # but why is he getting php-cvs commit messages and i'm not?!? # i hope to hear that the mailing lists will be back online soon...
Signal that no entry was found
Add some backwards-compatible macros to accomodate the renaming of AC_ADD_* macros.
added options for mbstring extension.
modified code freeing resouce which causes segmentation fault.
The Gettext module is not limited to the GNU implementation.
fix compilation
fix module initialization
added in a bit more checking on the persistent connection checks...
Check for http_session_vars != NULL.
Forget to add the $this->result param to fetchInto
Add missing .cvsignore entries.
added charset parameter to output of mb_output_handler().
Changed constant DB_OK from 0 to 1. So if you set a default error handler, this will improve fetchInto usability [while ($res->fetchInto($row))], because don't disturb the while loop
Remove .libs in path to libyaz.la to make libtool 1.4 happy.
Removed some ws and couple of useless comments.
change DB_result::fetchRow to use extension fetchInto instead of DB_result::fetchInto (speed improvement)
Blowfish detection patch from Alexander Bokovoy <ab@avilink.net>
remove unneccessary cast
Make gmp compile again
Update fbsql_fetch_array() to match documentation
- fixed some compiler warnings
Fold a bit more code
Remove bogus '.'.
Maintain .cvsignore files.
Prevent problems with PDFlib 3.00 when setting the imagewarning parameter. # I don't know if this is in later minors of PDF 3.x; someone please check!
   Change OCIFreeColl to OCIFreeCollection for consistency with OCINewCursor/OCIFreeCursor
defined HAVE_CONFIG_H to enable DSO extension support.
bugfix: collections didn't work correctly
Add the capibility to to allow ap_php_(v)snprintf to replace (v)snprintf if the platform has a broken (v)snprintf, or in my case, if a library included by a module redifines snprintf incorrectly.
put  VT_ARRAY outside of the switch
two bug fixed: return value of mb_strimwidth() was invalid and separator parameter of mb_parse_str wasn't worked.
Created a testset and a script to create a (mysql) database. This script is easily modified to create other databases as well. The testset needs the database, but it doesn't need to be a mysql database. Scripts to generate other databases (with the same structure and data) would be appreciated.
Replaced dbx_cmp_asc and dbx_cmp_desc with dbx_compare function and  DBX_CMP_ASC, DBX_CMP_DESC flags. Default comparison changed from DBX_CMP_TEXT to new DBX_CMP_NATIVE. Solved bug in associative fields when using mssql Cleaned up comments (/*/ ... /*/ to /* ... */) dbx_connect now always return false if the database is not found. Optimized dbx_query field-info retrieval loop
vim-6 does folding - clean up a bunch of missing folding tags plus some misguided RINIT and RSHUTDOWN calls in a few fringe extensions
typelib is loaded automatically (depends on ini setting) added com_load_typelib() # i must get rid of duplicate defines() @ fixed a bug when com.allow_dcom is set to false @ added a further parameter to the constructor to load typelibs @ from file when instantiating components (e.g. DCOM Components @ without local registration). (phanto)
-used makros for zval modifications where possible -small fixes in safearray to phparray code
Ignore generated files.
*** empty log message ***
Always use -n...
fix this (mea culpa, stray commit)
Empty directories.  No need for .cvsignore.
added safearray to pval conversion for 1d arrays
@ added the possibility to specify typelibs by full name @ in the typelib file (Alan Brown)
fix logic
removed unneeded function
fixed typelib support
a bug fixed about memory reallocation and added extra parameter support to mb_send_mail().
Leftovers from master Beckham's patch.
Patch from Daniel Beckham, fetch the entry resource id, not the directory resource id and fix prototype.
Changed efree to free for perststant data.
removed hardcoded typelib version. forgot to call release on typinfo and dispatch when obtaining typelib from classname.
Gerring rid of C++ comments, Adding extra cleanup.
Upgrade ext/mysql/libmysql to version 3.23.39.  No major changes - portability fixes.
ops..
# see
# testing changes is a good idea.
A little clean, merge two if statements.
Oops, sorry. I should not have committed this ebcdic fix (which was none)
Cleaning up and fixed some compile problems on systems that only support static libs.
Use different define name for this.
Cleanup. ws fixes (no tabs in config.m4 files please)
Cleanup a little bit.
Make use of the --with-expat-dir configure option
Missing entries in phpinfo() output
Output something if password is not set.
Added missing configuration directive: from which is used by fopen() to be send as the default password
fix crash.
- Cleaned up some whitespace (sorry, I should have committed that before any other changes) - Made use of the Zend resource macros
Let's have examples here so maybe people would understand better how to use this directive.
Adding missing resource
Changed code to return resources for links and results
small ws fix.
Revert as per Herr Schumann's request.
Try #2
should fix warnings under winblows.
should fix compile warnings on win32
fix compile
Include the To: address in the overview information (already in the envelope; it doesn't cost us anything).
ldap_result_entry needs to be initialized - tested Should probably MFH this once someone else tests.
Added array options for yaz_connect: user, group, password, cookie, proxy, and persistent.
Note to self - stop coding on planes
Add missing check
place nice with other libraries.
Kill warning.
Adding fbsql_status_db(). New function to get the status of a given database.
imap_thread(), from Rob Siemborski <rjs3@andrew.cmu.edu>.
This should finally get rid of those zlib problems. And this is safe too.
Added missing GD/GD2 image handling functions.
compile warning fixes.......
Make this compile. Killed one compile warning. # I still get a lot warnings when compiling sablot.c
use AC_CHECK_LIB to see if the new API is supported
changed checking if vpopmail has the new API added checks if certain functions are supported added vpopmail_alias_get_all
add checking if vpopmail has the new API
- tmpbuf is emalloc()'ed so this patch would be faster.
Prepare for php_streams. # Someone with interbase please test!
@Added "pearize" script to generate Makefile.in files for PEAR extensions
* added LibFile element, used to build Makefile.in
Add extra parameter to php_escape_html_entities. # I meant to commit this with the html.[ch] changes
Added charset awareness to htmlentities() and htmlspecialchars(); use an optional third parameter to specify the charset; otherwise tries to determine it from the LC_CTYPE locale setting.
Improved performance of message part extraction when using a PHP-space callback.
* missing fold marks
compile goood, compile error baaad.
remove un-necessary inline bloat...
ws fix
Oops.
Killed some compile warnings.
Adding libnsl here causes problems on some systems.
Killed compile warnings.
Removed duplicate line.
Just cleanup.
Make this compile even if the INFORMIXDIR is not in path.
killed some compile warnings. the informix header files redefine these.
remove ws, kill one compile warning.
Per Sterling's request I'm committing this. This works fine for me now. (I'm using external iconv libs)
Speed up data being sent to stdout
curl-config tells us which libraries it has compiled with. So we should use it.
This is not needed. ssl_onceonlyinit() is enough.
* typo
* use ereg functions instead of preg * send stderr to the bit bucket
Change the names around a bit zip_opendir() -> zip_open() and zip_open() -> zip_entry_open()
@ Renamed the ZZiplib extension to the Zip extension, function @ names have also changed accordingly, functionality, has stayed @ constant. (Sterling)
move to php_strtok_r()
.
so says sniper, and so it shall be.
@ Made the length argument (argument 2) to pg_loread() optional, @ if not specified data will be read in 1kb chunks. (Sterling)
more leftovers
leftovers
# The mailing lists are a productivity hole, long live cvsusers@php.net ;)
Make c2-4 optional since they aren't needed in all cases
Add TUX SAPI module
- Change if() to while() to make sure we skip enough opcodes
- Add prototype.
Display the correct automake version
fixed prototypes
added vpopmail_alias_get covering valias_select/valias_select_next
* include "config.h" if HAVE_CONFIG_H is defined (for standalone dso build)
cosmetic fixes; added 3 of the 7 valias functions
added prototypes
added check if vauth.h exists in vpopmail install
added 3 of 7 alias functions
make it possible to set the CHARSET parameter with imap_mail_compose() (Johan Ekenberg <johan@ekenberg.se>)
fix buggy debug statements
ChangeLog update
NEWS update
Due to dynamic registration of storage handlers, OnUpdateSaveHandler might be called before that registration takes place and hence the INI update is dismissed.  In that case, we defer the lookup to the first request init.
missing.
Use EXTRA_LDFLAGS at this point.
automake 1.4-p1 was released.  Remove the -p\d+ suffix as this caused an error message on FreeBSD.
$libtool already contains the full path to libtool.
- Nuke GINIT
This was merged into the 4.0.6 branch.
-Changed $param[0] to $param{0} less ambiguous -Readd "-?" param that shows the usage msg
This was merged into 4.0.6.
* added missing doc for PEAR::raiseError skipmsg parameter
- Commit fix by Steve Meyers
oops..
@ Added the CONNECTION_ABORTED, CONNECTION_TIMEOUT and CONNECTION_NORMAL @ constants. (Zak)
Add missing end-folding delimiter
ChangeLog update
NEWS update
fixed bug: #10960
   - Add correct OCIObjectFree to free collections immediately ( OCI_FREECOLLECTION_FORCE )    - Added schema optional parameter to OCINewCollection to allow accessing types in      other schemas.    - Added OCI_TYPECODE_TABLE to OCINewCollection to allow creation of collection of TYPES      as well as VARRAYS
The -c commandline option was not working at all, need to set the path override before calling on the module startup.
- Start nuking not needed GINIT
@- Made $HTTP_SESSION_VARS['foo'] and $foo be references to the same value @  when register_globals is on. (Andrei)
Changing how persistant links are added to zend_lists
remove "?" from Console_Getopt. Sorry Andrei it was there and I left there :)
- added error cheking and abort when no script install dir is set - minor typos
- Added the following params support: 	* -p set script install dir 	* -e set extension install dir 	* -d set documentation dest dir 	* -v set verbose level - Some error reporting clean up - Added the standar PHP copyright header and authors
ChangeLog update
NEWS update
this fixes a few apache can not start bugs.
- Nuke warning
- No need to include "zend" in include line #- This broke compile because Unices want Zend instead of zend
fixed bug: #10593
 Remove unused variable from imagesetstyle
one of these days I'll get this commit correct, just you watch!
typo
 WS fix (php_read) and correct checking of the return value from inet_aton, which returns *non-zero* on success (fix by Till Gerken).
Moving some functions into Zend.
- EG's are passed automatically to internal functions.
Added get_defined_constants() function.  Returns an associative array of constants mapped to their values. @- Added get_defined_constants() function to return an associative array of @  constants mapped to their values. (Sean) # If anyone sees a problem let me know.
ChangeLog update
NEWS update
Remove extraneous tab
Add support for systems where p{read|write} take a off64_t without being properly prototyped.
A few modifications to make the ZLIB checks work better.
Whoops, the expat directory needs the XML_BYTE_ORDER macro
Don't add -DXML_BYTE_ORDER to global CPPFLAGS
looks promising
remove fi
ignore ylwrap
Support for IRIX-style asctime_r/ctime_r.
Catch 'mkdir -p' brokeness on IRIX
- The previous name could be confused with resource #
- Whitespace and change the name of the macro to something more verbose   ZEND_GET_RESOURCE_ID(...)
@ - Add new ZEND_GET_LE macro for retrieving destructor @   id's from remote extensions. (Jmoore, Zend Engine)
- Don't allow resource types of 0
fixed a bug in mailparse_stream_encode which would default to a random encoding (usually base64) # oops
refining
Imported mailparse extension @- New mailparse extension for parsing and manipulating MIME mail (Wez)
@Define HAVE_CONFIG_H when building standalone DSO extensions (Stig)
This looks better.
Properly free callback_name only when necessary.
ChangeLog update
NEWS update
Store some build-specific environment variables in config.nice.
nuke last remnants of the old globals stuff
Correct NEWS entry
s/^I/  / and some re-indenting.  Also align the APXS checking code with the standard scheme.
Reindent, add link map for AIX, improve diagnostic message, carry over all -D* CPPFLAGS, and nuke REGEX recognition.
Format.
Use zend_hash_add_empty_element
Use write(2), if we can successfully write to stdout.
- Adding an entry about mcrypt bugs
Looks like this was a bogus gcc warning.
Improve reading from external data source for session id creation.
Nuke some warnings.
add entry
ChangeLog update
NEWS update
munmap() file in RSHUTDOWN, if PHPWRITE fails.
First try at using Apache's export list when building a DSO.
@ Added the IMG_ARC_ROUNDED option for the ImageFilledArc() function, which @ specified that the drawn curve should be rounded. (Sterling)
remove more php3 ts stuff
should be using the function here.
Remove the remnants of old global macro's
Files should be shared among processes.
a small proto clarification
Move -DSUPPORT_UTF8 flag into the appropriate Makefile so as not to pollute the global namespace.
revert parts of last commit - stupid me!
reset allocated_memory_peak after each request.
--enable-memory-usage-info id deprecated. use --enable-memory-limit instead!
- completed list of error messages (thanks to Torben Wilson)
ChangeLog update
NEWS update
Some fixes.  Actually assign a value scheme_handlers before processing it. Add some checks for key type.  Remove some debugging data.
update news
winsock is already initialized in an higher version by php
add notes & sockets ext
update sockets to work with winsock as well
That's slightly clearer that way :)
Allow for DB3 to reside in /usr/local/include/db3/ and -ldb3
Add missing info
MS VisualStudio .NET 7.0 has M_PI_4 in math.h
ChangeLog update
...and this fixes the typo I made long ago. It prevented people that have certain weird installations of pspell from compiling properly (couldn't find pspell header files). No-one noticed...
Add a compile check for the cURL version and fix the compile in general.
 - Sync prototype and definition of phpi_get_le_gd
# Revert the SLS_FETCH() ;)
Remove redundancy
fix windows build.
Implement zend_hash_add_empty_element() using the existing infrastructure
Commit missing fix
 - Add dbx extension to php_modules workspace
add missing apls_fetch
ChangeLog update
NEWS update
@ - Added disk_total_space() to return the total size of a filesystem. @   (Patch from Steven Bower)
@ - Renamed diskfreespace() to disk_free_space() to conform to established @   naming conventions. (jon)
Revert previous commit - callback_name does need to be checked because it is set conditional on is_callable_replace.
- Renaming $no_cache to $caching and inverting it's meaning - Adding accessors for private $caching flag: getCaching() and setCaching()
Move the initialization to a safer place (earlier, it could end up not being reset to 0 under certain circumstances)
Put the verbose mode to work again. Some other style.
white spaces and indenting
2 files from Cache/ were missing here, too.
fixed shm_remove to expect the correct argument.
Added function sem_remove
Added sem_remove to remove semaphores from memory
MFB
ChangeLog update
NEWS update
leftovers.....
Adding a small readme file for win32 users
updating the win32 readme
Register the binary transfer option
Clean up call_user_func_*().
Use zend_is_callable to test whether or not the given callback is valid before calling the function.
Use zend_is_callable() and fix sp of deprecated.
Couple of changes (and a little whitespace correction, sorry to mix :(
- Bumbed up the warning level to be in sync with fopen (which is E_WARNING   too) (See bug #10856)
Need to use ELS_FETCH() here.
Reformat.
No need for check since callback_name is always filled in.
added expat version to phpinfo();
Initialize empty pDataPtr to a pseudo value to prevent a pefree on pData.
fix typo
ChangeLog update
NEWS update
renamed *typedef_VARIANT.* to *VARIANT.*
changed php_typedef_VARIANT.h to php_VARIANT.h
renamed
modified because of the changes in com.c
@added com_release($obj) and com_addref($obj) functions @and the related class members $obj->Release() and $obj->AddRef() @to gain more control over the used COM components. (phanto) also changed the return values of the internal functions from VARIANT to pval, so there's no need to convert the returned value after each function call and the real hashtable entry is returned and not only a copy of it. #now everything is prepared to implement the array support
@added an additional parameter to dotnet_load to specify the codepage (phanto)
Removed redundant (and incorrect) '0' from "begin" string for uudecode.
Safer detection of recursive PHP invocations
Nuke some warnings.
Nuke HAVE_LIBEXPAT2. We define HAVE_LIBEXPAT in config.w32.h, and that does the trick.
ChangeLog update
Took out a line that might cause problems if you try and uuencode; there is no uuencode support yet. # Looks hard to do too; we need to buffer 45 chars
Added uudecode support (MIME name "x-uuencode")
prototype for php_file_le_stream()
expose streams to other extensions.
hopefully fix win32 build, untested
Hopefully nuke the rest of the german commits.
Remove german comments from MS VisualStudio.
Make expat and ext/xml compile again on Win32.
- Remove check for ht == NULL in copy_ctor.   If ht is NULL at this point then we are better off crashing and fixing   the bug that caused it.
First step towards full libtool 1.4 portability
Remove ltconfig which is not used anymore by libtool 1.4
Nuke more quotes
Nuke some unneccessary quotes
These functions have been changed to macros.
Default to including expat.h
Moved to 4.0.6
Rename some custom macros from AC_* to PHP_*
Replace ssize_t with long, as Win32 lacks proper support for that type.
add missing file
ChangeLog update
NEWS update
Open season on memory leaks, shoot all you can.
Rewrote stat() and fstat() to be memory efficient, due to a recent thread on php-dev.
Compress several entries into one.
update and some late additions
add missing closing paranthesis
Some extensions don't associate any data with hash entries, except the key.  Prior to this change, a separate chunk of memory was allocated in that case to store exactly zero bytes (plus memory manager overhead).  We treat that case similar to the pointer case, but don't copy any data at all (because the pointer is usually the NULL pointer).
@- Added --enable-memory-usage-info. This creates a new Apache 1.x logging @  directive "{mod_php_memory_usage}n" which will log the peak amount of @  memory used by the script. (Thies)
added --enable-memory-usage-info
.
4.0.6 is tagged, HEAD is now 4.0.7-dev
bump bundled expat to 1.95.1 win32 project _needs_ updating and i don't have windows
Save a couple of syscalls per session
Start cleaning up domxml memory leaks. Still much stuff to do.
Tabs please...
@fstat() and stat() now return identical output by returning a numerical and @string indexed array (Jason)
ChangeLog update
NEWS update
default to /usr/local
Always free the callback_name when using zend_is_callable().
fixed bug of mb_substitute_character() and mb_substr() in mbstring.
Treat numeric strings as numbers in the increment operator
Missing .slo ignore.
Cleaning this a bit too. Now I'm also able to configure and compile with the test for imap-ssl.
ChangeLog update
NEWS update
Cleaning up here too.
Moved the zlib configure before other extensions.
Cleaned up this a bit..
Reverse my earlier patch for mysql_db_query() & emit an E_NOTICE of it's deprecated status. # Should it be a warning or a notice?
Switching to zend_register_list_destructors_ex()
Nuke unused variable.
@- Added is_callable() function that can be used to find out whether @  its argument is a valid callable construct. (Andrei)
Minor change to the way string lengths are calculated and space alocated.
Document overwriting behaviour of PHP_ARG_WITH/ENABLE with regard to ext_shared.
Getting rid of memset.
The PHP_EXTENSION() has to be before any other PHP_ARG_*()'s
Change for Empress PHP support
Update .dsp
Also remove -L/usr/lib/? from LDFLAGS.
Remove -L/usr/lib/? from PHP_LDFLAGS.
remaked mb_gpc_handler as mb_parse_str() in mbstring.
fix crash bug (unlikely, but this is the only place where the reported bug would make sense, and it can't hurt)...
ChangeLog update
E_ERROR instead of E_WARNING on nullpointer exceptions
No need to show these if they are not used.
this is a fix for bug 10250.  it basically provides the unixODBC driver with access to the SQLDriver functions.  patch originally submitted by dzoll@nyscul.org, and is going to be tested by some of the unixODBC people.
Remove wrong line.
Reformatting.
Update NEWS
added mb_language to ext/mbstring.
reminder to remove the --with-openlink configure option PR: Submitted by: Reviewed by: Obtained from:
ChangeLog update
NEWS update
$argc was off by one in -f (fix bug #9289)
Give correct warnings if certain libaries/verisons are not avalible
whitespace
Avoid crashing if somehow, output is sent in a new thread tha had no requests
Passed db_handle to dbx_error_function instead of NULL (Mc) # I don't know why it worked on my machine, but now it works # because the code is right, not through magic :)
update address of licence term in mbstring.
Update NEWS
Make zend_execute_scripts() reentrant
Allow virtual() of PHP files.  We may have to improve the detection code a bit, but it worked well on everything I tried.
Enabled optional result_mode param in mysql_db_query() to make it behave as mysql_unbuffered_query (can be either MYSQL_USE_RESULT or MYSQL_STORE_RESULT)
As the WDDX extension can now be built as shared extension without functional loss with regard to the session serializer, it is safe to default to disable.  We enable XML automatically only, if the user is building WDDX as a static extension.
Patch from Jan Legenhausen to add vars to the HTTP_SERVER_VARS array.
ChangeLog update
NEWS update
updated the .emacs example
use $PHP_LAYOUT, not $libdir, to determine the extension install layout
@Added --with-layout configure option (Stig) Changed the default php.ini path back to /usr/local/lib.  Use "--with-layout=GNU" for now to get the new behaviour.
fix crash bug
fixed divided by zero exception and lack of multidimentional array support in mbstring.
fix compile bug.
Attempt to fix the build when a c-client lib with kerberos, pam and ssl is used.
- Nuke warning
Up prerequisites to libtool 1.4
Upgrade to libtool 1.4.
- Partial fix for bug #9050, support for "Jan 19  2000" date format
- .cc files were renamed. Update .cvsignore.
Moved ts_alloca_id() into MINIT like Andi requested.
Yikes, that would have been a very bad bug :)
Floating point keys didn't work in array() (fix bug #6662)
Update NEWS
Support interactive mode in thread-safe builds
Retain single spaces as spaces to condense HTML
Corrected one proto.
Beutify phpinfo() output.
Added a check that libc-client support SSL.
Removed usused variables.
fixed a compilation problem without --enable-mbstr-enc-trans.
Add pg_last_notice() function
ChangeLog update
Nuke buffering from php_streams, move connect_nonb() from fsock.c to network.c and rename to php_connect_nonb(). Use php_connect_nonb() instead of connect() in php_hostconnect() -> timeouts should now work in php_hostconnect(). sock streams abstraction now uses php_sockbuf as the "abstract" pointer.
Layout fix
Added Sascha Kettler to credits
not to forget this one!
emalloc()'d strings must be freed before the request shutdown; Rule of the thumb:  initialize in RINIT, clean in RSHUTDOWN
ChangeLog update
NEWS update
I'm now the primary maintainer for OpenSSL extension, as agreed with Stig Venaas.
Making notes about which extensions need most work for streams.
Add support for in_reply_to header, and fix erealloc usage ("Johan Ekenberg" <johan@ekenberg.se>).
namespace-protect "open"
added ext/com/ files to the project
fixed a memory leak in ext/mbstring.
Removed a duplicate php_import_environment_variables() call from fastcgi sapi
Forgot the Visual Studio project, added now (Mc) Updated CREDITS (Mc)
Registered db-module constants for use in dbx_connect (Mc) Added support for Microsoft SQL Server (Mc)
Added docs about creating dbx-support for other databases. (Mc)
Nuke unreferenced local variables.
Make it compile with the latest cURL cvs, heck it even works.
added status parameter to output handler in ext/iconv.
@ Added connection error support to mysql_error() and mysql_errno() (Jason)
ChangeLog update
NEWS update
- Applied a patch that enables getimagesize to return the size of .bmp and   .psd files (Patch by Paul Jongsma <paulj@webtic.com>) @- Added support to getimagesize to return dimensions of BMP and PSD @  files (Derick)
Added streams stuff # Turn on those psychological thumbscrews!
add crash guard (valid message number check) to imap_body().
removing references to IMSP module, which will probably never be ported to php4 (lack of a publically available library implementing it).
add an interface for registering storage modules at run-time.
fixed leaky code #cleaned up dirty hack from yesterday
Replace slow strlcpy with a quick memcpy.
Some fixes in Udm_Cat_List and Udm_Cat_Path functions.
added .cvsignore.
ChangeLog update
deleted some function aliases. @- Added Japanese multibyte string functions support. (Rui)
added generation of CREDITS and EXPERIMENTAL to ext_skel
- More strncpy() -> strlcpy() changes. Am I getting bored yet? :)
- More strncpy() -> strlcpy() changes. mm_login() doesn't seem to be used   though.
- Another strncpy() -> strlcpy() change
- Change strncpy()'s to strlcpy()'s
- Whitespace fix
- Commit interbase fixes
- Support \r as newline in the ini scanner
adapted because of the changes in the com module
*** empty log message ***
removed itypeinfo calls because they didn't work on every machine #i'm investigating this ...
- Handle MAC OS X \r line endings
Changing paramters on database_password
- Patch by Andrei to prevent crash in error situation when not all   object overloading handles are defined.
.
set the date 4.0.5 was released.
- Apply Vlad's sybase patch to work with two different kinds of builds of   the sybase libraries
fix whitespace pollution
Add support for cram-md5 authentication in imap_open().
Patch from Stephen Landamore: speed up the environment merging by using memcpy instead of putenv.
make run-tests work under win32 too # this whole thing is pretty ugly...
clear http input encoding detection result in RSHUTDOWN.
Now the file uploads 'work' also on Lynx. This patch was submitted by Andreas Pistoor <andreas@erestor.f2s.com> and I have tested it a quite long time now and didn't notive any problems. Bug: #9930
ChangeLog update
NEWS update
- Remove C-style comments - Remove some stale debugging code
modified some function name in ext/mbstring based on naming convension and mbstr_http_input() implemented.
looks like i missed something
Add TODO
- Optimizer the previous patch a bit by nuking memset()
Adding support for BINARY, VARBINARY and IMAGE column types. Thanks to Brad LaFountain.
Patch from Sascha that abstracts session serializers. WDDX extension now implements the encode/decode functions and registers them with the session module.
- Remove C++ comment
hartmfixed and extended the ini parameter and module globals stuff
modified some function name in mbstring based on php's naming convension.
- Bump up Zend version
- Remove unused variable
simplified some function's name in ext/mbstring.
fix for bug 6491, http://www.php.net/bugs.php?id=6491, removes a bit of (what I think is) broken logic.
Check for the existance of the iconv library
renamed jstring to mbstring.
d
ChangeLog update
NEWS update
some more example code for modules using --with-something works for me (linux/bash) but please give it a test drive
remove last minute garbage that snuck in...
As per Andi's suggestions.
# Wayyyyy too many entries, if anyone has an idea to maybe cut this down to # one or two anouncements, speak!! :)
Add some missing constants.
# Ok, big ass change list.  Most of the changes are NEW's worthy, so # I'll enter them directly there, not here....  The non-newsworthy code # is:
make pgsql build under win32 again
Timeout setting for yaz_wait. Force call by reference for yaz_ccl_parse and yaz_scan_result.
added japanse http input (POST/GET/Cookie) handler. It is nessceary to add input encoding conversion functionality for ext/jstring.
added japanese string function module.
- Add mistakenly removen closing bracket
- Get rid of warning
*must* use HwSLS_FETCH()
- Change macros from V_ to VCWD_ because of AIX name clash
make dsp supporting gd2
Udm_Cat_List and Udm_Cat_Path functions has been added. @ Udm_Cat_List and Udm_Cat_Path functions has been added.
look in Release_TS_inline for php4ts.lib as well
make dotnet module build again & fix dsp ouput dir
newer libxml libs are called libxml2.lib
# mnoGoSearch module TODO updated
fix ouput directory
fix win32 build
Added UDM_FIELD_CATEGORY parameter to get current document category in the mnoGoSearch module
- Interactive mode is back in 4.0.6
- Try to solve crash on OS400. There is actually no reason I can see for   why his fix should solve a crash but it doesn't harm.
@ - Added key_exists() to check if a given key or index exists in an @ array or object (David Croft) Added key_exists() to check if a given key or index exists in an array or object
ChangeLog update
layout
- Remove leak from opendir() under Windows. Maybe readdir.c should be   changed to use emalloc() PR: Submitted by: Reviewed by: Obtained from:
- Some news
Accept the fix suggestion from bug #9562
Added not about 'thread-safing' all extensions for 4.1.
Really fix bug #10362. # My previous fix caused a segfault when there were parens in an unallowed # tag :(  Thanks Andi.
- Whitespace
- Improve overwrite detection in debug mode.
- Update to work with latest Zend PR: Submitted by: Reviewed by: Obtained from:
whitespace fix
- Previous patch for too early freeing of resources seemed to have worked. - Clean it up a bit.
- Try and solve the too early resource destruction problem.
ChangeLog update
# Actually fix the bug this time (I fixed another bug last time :)
fix bug #10541
include limits.h if available
Zend shallow copy needs to be fixed
add/fix pi3web dsp
- Move all cases into switch().
- Just some little whitespace stuff.
- Don't add/remove cached memory blocks from blocks list as this will slow - down performance a bit.
Resources weren't being properly destroyed by the convert_to_*() functions
ChangeLog update
- Commit test passed
- Testing commit script
- More whitespace fixes while I'm at it.
- Whitespace changes to be standard like the rest of Zend
add notes about support directories
add instructions for Netscape/iPlanet servers
get rid of MS's _popen/_pclose
- Added note about error messages
Make old readdir_r code compatible with HPUX and Solaris.
Add the xslt_make_array and xslt_free_array api functions (C level). Change the naming to be a bit more standard for a few of the existing api functions.
ChangeLog update
- Convert cfunction -> function.
fix for bug #8994, courtesy tom.anheyer@berlinonline.de
Enforce the right number of params for mysql_fetch_*() functions, related to bug 9839.
Add a readme, this is a substitute to the e-mail I was going to send.  it gives a basic overview of the new xslt extension and goes into the details of the api, etc.
- use get_current_key_ex() in order to receive key length and not having - to use strlen() everywhere.
Add a free function to free the returned structure.
Add the parse_xslt_arguments api function which parses sablotron type arguments into an easy to use structure.
Take the blame for this one if it breaks something
compile was broken, new argument?
ChangeLog update
NEWS update
Add an experimental version of the new XSLT extension.  This is by no means to be used on anything production, if you want to test it, beware, it may or may not work (feel free to complain to me if it doesn't work, or shower praise if it does work)...
* define PEAR_EXTENSION_DIR as well
a backslash was missing (+ whitespace)
- Make the printf functions binary clean @ - Make the printf family of functions binary clean
Remove c++ comment Move errormessage when FBExec is not running. This error should not show if we connect through a port number.
make fbsql_field_flags return a value
removed unused code
    Collections cleanup        - Removed date specific methods.  Dates work consistently with          the rest of the oci8 code.        - Removed unused variables from collection code.        - RETURN_FALSE on all errors.        - fix error prints to php_error.
   Cleanup collections - removed unused members from oci_collection structure
- Another fix
- Nuke warning. This signed/unsigned stuff gets really annoying sometimes.
ChangeLog update
whoops, two less items for 4.1
Accomodate Apache HTTPD 2.0 API change
Made Cache::save() a wrapper for Cache::extSave()
ChangeLog update
Disable use of th_farm since it doesn't seem to work. Uses a Pike layer thread farm now instead.
Remove unnecessary tab (was killing Tru64 make)
fixed ZTS buidl - still some WS pollution left
Uh, weird typo.  Wonder when that crept in.
ChangeLog update
Updater.php -> Uploader.php
remove Only.* lines from patch
bytes in the conn structure was renamed to bytes_sent.
Update patch to thttpd-2.21
* fixed PEAR_Common::infoFromDescriptionFile
* don't override $libdir and $datadir if they are specified on the   commandline
ChangeLog update
* expanded the following constants and made them available in PHP:   DEFAULT_INCLUDE_PATH   PEAR_INSTALL_DIR   PHP_EXTENSION_DIR   PHP_BINDIR   PHP_LIBDIR   PHP_DATADIR   PHP_SYSCONFDIR   PHP_LOCALSTATEDIR   PHP_CONFIG_FILE_PATH * no longer generating pear/PEAR.php * fixed some tests * some more installer work
- Add typedef for function pointer of llist dtor
- Get rid of warning.
ChangeLog update
Let people know what the heck I was up to.
Enabling WDDX by default.
That made it into 4.0.5.
ws pollution removed.
* update class doc-comment
* fixed up the XML-RPC class so it's useful at least (based on usefulinc 1b8)
ChangeLog update
fix small bug on error reporting (PEAR::raiseError params order)
Change all // to /* */, fixed small whitespace. Builds on Solaris now.
* fixed DB_common::getXxx when using the parameter array (didn't work before)
- Use memcpy() instead of strlcpy() which is faster.
appling patch for joey since he has no ODBC karma.  this is for bug #10252
- Patch from Jason Greene. - Make it easier to write PHP function definitions in more than just one .c   file while accessing the same module globals.
fix crash bug 10400.
Patch from Adam Dickmeiss to make configure detect libtff again.
* cotcha, Tomas
- fixed the garbage collection   Added some kind of LRU to delete all entries older than n seconds.   This fixes the bug that cache entries with lifetime 0 (endless) never   got removed although if they are no longer used. What's still missing   is some space limit for cache data.
- \r\n -> \n
- WS
* forgot to update this test too
* DB_common now inherits PEAR and its error handling stuff * DB_common::raiseError is now just a wrapper for PEAR::raiseError * fixed some cast warnings in prepare/execute * updated tests
* check that error callbacks exist
* added Colin's connect/factory error reporting fix
corrects bug #7488, patch supplied by submitter (torben@php.net). quick local tests show it to work.
ChangeLog update
* fix handling of broken DSNs like Colin suggested
Function yaz_record returns database for record if type is "database".
Removed some old commented code (Mc)
Added DBX_CMP_TEXT and DBX_CMP_NUMBER constants and support for them in the dbx_cmp_desc and dbx_cmp_asc functions. The old method of passing a string "number" is now no longer valid. (Mc)
Information about php streams
ChangeLog update
Adding fbsql_fetch_assoc() functon
Discovered warn_not_available and used it.
Changes for streams.  Added temporary fopenstream function to PHP so that the streams can be tested.
Added files for PHP streams
Added --enable-php-streams option for experimental file abstraction
small beautification
* PEAR_Installer un-broken again, it still doesn't update the   package list though * better error handling in "pear" script
This change seems to fix bugs 7158, 7807, 8531, and 8636.  After asking why this patch was applied no one seemed to respond with anything useful.  If you find this change in error, sorry, I tested it on as many systems as I could.
* have DB.php use PEAR::raiseError in factory methods
* enable static use of PEAR::raiseError
* implemented PEAR_Packager to make distribution packages.  Currently only   runs on platforms with GNU tar installed * the "pear" script now requires a command parameter (similar to cvs),   for example "pear package Cache.xml" * broke PEAR_Installer :-)
ChangeLog update
NEWS update
* using CGI -C option, you no longer have to specify "full" path to tests
@Added -C command-line option to avoid chdir to the script's directory (Stig)
* DB::isManip now handles create, drop, alter, grant, revoke.
* make the error class used by raiseError configurable (_error_class property,   overridden by first parameter to constructor)
* actually commit the stuff I said I had committed :-)
Daniel fixed this for PHP 4.0.6.
More todo stuff.
- Updating order slighly so the install is easier to follow.
ChangeLog update
* added sgml/xml catalog file
* add a package type called empty (default)
We shoud not fseek in a pipe and this caused a problem with popen and fgets on the platforms where the buffer fix was applied (Solaris, FreeBSD). Now the fseek is done only when the handle is of type fopen.
ChangeLog update
NEWS update
deleted warning output in dbx/pgsql.
.
enable temporary LOBs when we detect oracle 8.1 enabled by default in Win32 project!
@- Added temporary LOB support in OCI8 (Patch by David Benson)
the collections stuff s worth mentioning in the credits!
ChangeLog update
NEWS update
Added news about gd and openssl changes.
When using freetype2, turn off libttf and turn on native gd ttf.
- Added the note about function names
* separated and compressed changelogs from 1999 and 2000
* PEAR: look for destructor methods in parent classes if   the current class does not have one
here's a preliminary list of stuff for 4.1
@ - OCI8 now supports binding of collections @   (Patch by Andy Sautins <asautins@veripost.net>)
Added GD 2.0.1 support.
ChangeLog update
ChangeLog update
never initialize oci in OCI_THREADED mode. seems to break win32.
Added a database member to the dbx_link object. Since e.g. mysql reuses connections, two or more dbx_link objects may share the connection identifier. The database name is used in the dbx_query, where it calls mysql_db_query instead of mysql_query. This means the database name has to be passed around to all dbx_xxx_query functions, hence the update on all the files. (Mc) # Thanks to Christian Rabe for all the input on this issue!
ChangeLog update
Statements end with a period.
ChangeLog update
- Removed debug thing
Constand should be case sensitive. # Thanks Sterling
Stop SIGSEGV on Apache startup.  Patch from <adam@indexdata.dk>
Revert mega patch.
printf argnum (parameter swapping) support from Morten Poulsen
Added optional 'comparison_type' parameter to compare functions, to force either text or number comparison. (Mc)
- added domxml_version() to retrieve version of libxml
ChangeLog update
NEWS update
* CGI version is always installed! * replaced --disable-pear with --with-pear=DIR (or --without-pear),   is backwards compatible * use --datadir, --libdir and --sysconfdir configure options to determine   where PEAR files, shared extensions and php.ini goes * simplified the extension version directory name
@Add DIRECTORY_SEPARATOR constant ('/' on UNIX, '\' on Windows) (Stig)
Contribute the MSVC project file. Someone could add this to the php4ts workspace.
Reorganized the #define's in the header.
Updated copyright agreement regarding move of Pi3Web to sourceforge.
Use tabs instead of spaces.
ChangeLog update
ws pollution removed.
fix proto
fixed protos
ChangeLog update
Killed some compile warnings.
Comment out the 'include_path' variable by default.
Make this message more grammatically correct.
fixed typo in CVS id
ChangeLog update
spaces to tabs
- Whitespace
- Lock the whole thing for now in order not to have a race condition.   It shouldn't effect performance too much because usually threads are   reused a few times before they are nuked by the web server, at least   under IIS and Zeus.
- Nuke README.BCMATH
add printer ext to php.ini & maintain extensions file
pg_close not closing right connection.
Remove manual entry
ChangeLog update
- Revert previous fix because dtor's which access thread local storage   might stop working. Need to fix this! We can either mutex the whole thing   which is slow (this is how it was before the race condition was introduced)   or find a different solution.
make it compile with 6.5.x postgresql notices are now send to the standard error-log
This branch is 4.0.6-dev..
Added new configuration directives: arg_separator.input and arg_separator.output
Adding empty RSHUTDOWN function.
Killed 2 compile warnings.
- Use tabs and not spaces !!!
- This can explain lots of instability on multi-threaded platforms!
This is a temporary fix to the previous patch that breaks the build. This keeps the functionality of searching for glibtool or libtool, but have you checked the rest of the build process to see if this is compatible? Regardless, 'which' returns a value on some os's when nothing is found which breaks the previous patches test. Also the unary negation after an if is not compatible with true bourne.
ChangeLog update
Cookies use ; as argument separator. # And also the first step for the possible configure option
Cleaned up a bit. Removed some checks for header files that are already checked in configure.in
Separate CPPFLAGS from CFLAGS.
Note INSTALL_ROOT change
use V_STAT
resolve realpath if in v-dir mode
Undo oopsie
Add INSTALL_ROOT variable to specify install location.
Find libtool if it's called glibtool.
SCO (and maybe others) do not have this defined.
Cleaner (and probably safer) condition handling.
ChangeLog update
changed the flags parameters to be a bitfield + constants (I don't know what I was thinking!).  Added a couple of extra parameters so that the equivalent functionality of the openssl smime command can be pretty much used in full. Added some more error reporting.
Free the correct output buffer, to avoid a segfault on a HEAD request when using output buffering with a custom handler (patch by zeev@)
remove rogue ZEND_GET_MODULE()
Added small change to php_odbc module, to check for failed SQLDisconnects and to close any outstanding transactions if the call fails, then disconnect again. This can cause chaos with SQL Server, this regards a SELECT as starting a transaction, and will leave it  open if the result set is not all read.
Use correct string length.
Inserted a few extra initialisations, just in case. Had some problems in a different module, this solved it there, hance the added insurance. (Mc)
added some more error reporting and did a little tidying.
ChangeLog update
Added whole bunch of PKCS7 (S/MIME) functions and made the key/cert params a bit more friendly to use.  See the README for more info.
According to GD documentation the macros should be used instead..
ChangeLog update
ChangeLog update
Implemented cpdf_set_viewer_preferences (previously a stub). Added new functions: cpdf_set_font_directories and cpdf_set_font_map_file.
Send the correct Vary headers, if we negotiate a gzip/deflate session via Accept-Encoding.  This obeys a SHOULD directive in RFC2616
Replace the incomprehensible newline escaping with @NEWLINE@
- Renamed the file following Thies suggestion
ChangeLog update
- uuups, modified the package.dtd, undo
- Added a package xml file for IT[X] templates
- package XML for the Cache
Output php version at end of tests.
ChangeLog update
pgsql.php * better handling of $rownum param in fetchInto() * changed property numrows[] to num_rows[]
Make file() work again. # For some reason if libbind is linked with PHP the file() function # won't work with URLs. Do we even need libbind?
fix typo
fix proto
Added a simple usage example
Make Windows happy
Get rid of more redundant code
Cleaner way of making sure resources start at 1 and not 0...
Remove redundant code
ChangeLog update
Renamed the AC_ prefixed macros defined in acinclude.m4 to PHP_* prefixes. # Heads up people! I tested this before committing but you never know..
God knows what this code was doing...
The last fix was missing a &, Marc Boeren either made the patch wrong, or I applied it improperly.  Anyways, Sebastian Bergmann discovered it, and supposedly is fixed with this.
Changed header handling; before, we were somehow losing Content-Type: text/html
fixed newly introduced crash in ora_bind
ChangeLog update
pgsql.php * connect() always use pg_connect string instead of the deprecated params mode * removed duplicated functions prepare() and execute() (now in common.php) * pgsqlRaiseError() always fills native error param on DB_error objs * added third param $rownum to fetchInto() so users can fetch also absolute row numbers * changed fetchRow() to use fetchInto() (can not erase, still used in get*() from common.php
Updated get_class_methods() to take class instance as well as class name.
More news.
Nitpicking.
Making it possible to pass a class name to get_parent_class() as well as a class instance.
Zend related news update.
Remove FUNCTION_LIST.txt, the file is sadly out of date and not really used...
Support Solaris 8 ldap.
Removed #include php_config.h, since it was not necessary (Mc)
pg_close was undefining default_conn even if a ref to it was still there.
ChangeLog update
ChangeLog update
Install the Informix database implementation.
Added missing files.
Added php_dbx.dll.
Solved bugs #9746 and #9937, pg_close was closing twice the default conn.
* added Christian Stocker's tableInfo() implementation
ChangeLog update
Wrap lines.
changed license of PostgreSQL module in ext/dbx.
added initial support for PostgreSQL to ext/dbx.
Changed header for source files, now point to PHP license (Mc) Found another // comment and replaced with /**/ (Mc) Removed proprietary license (in favor of php license) (Mc) Added .cvsignore file, I hope it works correctly (Mc)
Added target ownership check in function copy for safe_mode operations
update news
support unc style paths
Added configuration for detecting the BeOS thread implementation (which will be used once I get my patches into Zend to use bthreads).
Simple patch to deal with lack of fields in the BeOS implementation of rusage.
ChangeLog update
NEWS update
* fixed Oracle tests, fixed some bugs in DB_oci8, all tests but   errorNative() pass now (but that may be a bug in the test :-) * implemented numRows() emulation in DB_oci8 that is available   in "optimize portability" mode only
Removing extra check for warnings.
Adding warning when query fails
Changed C++ style comments to C-style comments (Marc) #I hope I got 'em all @Changed C++ style comments to C-style comments (Marc)
no comment :)
Added dbx module (database abstraction) to the repositorty (/ext/dbx). Compiles under Linux (--enable-dbx) and Windows. Supports MySQL and ODBC modules (more to be added later). @ Added dbx module (database abstraction) to the repository. (Marc)
- fixed some bugs with xpath
ChangeLog update
setting right params to zend_get_parameters_ex
Beta2 of PDFlib V4.0 will introduce on new function (PDF_place_pdi_page) and PDF_close_pdi_page will lose one parameter. These changes are done for the phpwrapper now. This has no impact on PDFlib V3.x.
changed arg types from pval* to zval**
Remove experimental status from bz2
I don't like to commit this over and over either, but this client definitely seems to dislike branches
UnixWare 7.1 does not have EX_TEMPFAIL or (as far as I can tell) a concept of a temporary failure response to pclose().
fighting against the cvs client, it does not want to let the win32 binary safe change go in...
win32 fixes again
more win32 fixes
- fulltext query are working now
Disable maximum execution time for tests.
1) fixed tests on *both* win32+linux 2) made tests more sophisticated (checking against compiled in modules) 3) minor changes 4) win32 improvements
- added EntityReference and Notation class - fixed handling of PI nodes - implemented more class functions
Style and whitespace, based mostly on a submission from "Tomas V.V.Cox" <cox@idecnet.com>.
ChangeLog update
NEWS update
added [com] section
@Using ITypeInfo instead of IDispatch if possible. This makes DCOM calls @and even COM calls much faster. @All ini settings are now prefixed by 'com.'. @Now you need not provide a path to the file containing the typelib, you can @also provide the GUID of the TypeLib - entry or an IID for preloading @type - information. (phanto) memory leak was reportet, i'm not sure that it is fixed by now, but it should be.
added com.h
remove some unneccessary casts, remove unneccessary error casts, standardize the coding format for some of the stuff.
really fix the build
Converting to c-style comments. Adding prototypes to all exported function
make qtdom compile on Mandrake-cooker
fix dsp
Nuke another warning.
- fixed lot of compiler warnings
fix registry per directory values # they never really worked for me before
- news about domxml
- test script for rewritten domxml module
- complete rewrite of domxml module.   It is now mostly conform to DOM Level 2 though some classes and   methods are still missing
fix build
ChangeLog update
NEWS update
Remove some unnecessary error checking
Removed unnessary file.
@- Added array_map() function that applies a callback to the elements @  of given arrays and returns the result. It can also be used with a @  null callback to transpose arrays. (Andrei)
- Add support for isset($var1, $var2, $var3); - Will be true only if all - variables are set.
Removed redundant initialization.
Altered README.Zeus to give instructions on building FastCGI. Changed --with-zeus configure option into --with-isapi, since its more descriptive (and since there are now different ways to configure PHP+Zeus)
@ New FastCGI server module New FastCGI server module. Based on the thttpd server module with large chunks of code ripped from the cgi module. Also modifies Makefile.in and configure.in in order to make it build properly. # This initial checkin has been tested with the Zeus web server, # but should work with any server that has a correct FastCGI # implementation.
ChangeLog update
Much needed cleanup and new functions added -------------------------------------------
Solved compile failure due to clash bewteen IMAP and ClibPDF headers.
Prevent mem leak
These functions are not necessary - that's what sapi_register_post_entry() and sapi_unregister_post_entry() are for...
ChangeLog update
Recode delayed loading in a much simpler way (switched back to php_ini.c 1.49)
fixed a (C++) warning about implicit conversion from void*
GarbageCollection was moved into a PEAR-Deconstructor
fix dependencys
ChangeLog update
NEWS update
@- Added array_filter(), which allows filtering of array elements via @  the specified callback. (Andrei)
All user callbacks should be to EG(function_table).
This has got to be the last one..
- Inserting links without any delimiters is now possible
.php files should not be ignored. Typo?
Missed this one.
Make compile again when ZTS is enabled and imap-2000 is used. Bug #9762
Don't do anything, if the user wants no PDF.
This should fix problems in systems without libbind.
ChangeLog update
Added a check for the one function missing in <= 0.1.0 versions of ming lib.
sybase_affected_rows implementation submitted by John F. Dumas <jdumas@locutus.kingwoodcable.com>
Killed a compile warning + made ming extension compile with the older ming libs.
Missing files.
Beutify + fix some errors in finding libs and header files.
fix win32 build
- Nuke commented code
Whitespace (spaces to four-column tabs)
ChangeLog update
Adding webteam to credits.
Forgot this one..
Missing.
-fixed prototype and indention
ChangeLog update
NEWS update
Make get_browser() read its information from $HTTP_SERVER_VARS[] if available
Implement mysql_unbuffered_query() - uses mysql_use_result() instead of mysql_store_result()
cleanup.
fix broken m4, you should have all checking code withing your withval test
Extension was enabled by default..
Centralize query code
Use a container struct instead of MYSQL directly
Adding FrontBase extension to modules
Initial check-in of FrontBase extension
Remove config.h instead of php_config.h
Replace memcpy and sprintf with smart_strs.
buf is gone. Don't reference it.
Added yaz_database. Option bit ExtendedServices set for InitRequest.
Replace another sprintf
Nuke calls to sprintf, snprintf, strcat, strcpy and rely on memcpy and smart_strs.
Changed email
fix bug in php_gmtime_r
@- IMPORTANT: removed /F modifier handling from preg_replace(). Instead @  one should use new preg_replace_callback() function. (Andrei)
ChangeLog update
NEWS update
changed scalar args and returns to doubles, added Ming_setScale function, added SWFTEXTFIELD_HTML flag, fixed SWFTextField_setIndentation glitch
Forgot to add it here
Name length is already known.
- Missed second place.
- Nuke snprintf()
- White space
Added NEWS.
A small fix to make the function imageloadfont portable.
Prevent memory leak
HEADS UP: renamed config header file in "phpize"d extensions to "config.h" rather than "php_config.h".
Use hash position with array_flip
This will have to do until the docs come along.
Improve zend_is_callable() to the point where it's actually useful. Now it just needs to be invoked everywhere in PHP where a callback is expected.
Use proper class name.
ChangeLog update
Cleaning this a little bit.
ws fixes. Plus removed unnecessary AC_MSG_ calls.
ws fix.
Revised version of the parseDSN function.
Added missing alias. PR: #9550
HAVE_BINDLIB --> HAVE_LIBBIND
ChangeLog update
If AC_CHECK_LIB fails, assume that --with-openssl is needed
This should fix the problems with not including -lz.
* only register the destructor if it exists
- Whitespace
just reversed a previous patch.
ChangeLog update
NEWS update
initialized some strings in global variable structure.
Adding a new function odbc_next_result() allowing the query to return more than one result. This can be done with a stored procedure or by sending more than one select to the server.
Adding a new function mssql_next_result() allowing the query to return more than one result. This can be done with a stored procedure or by sending more than one select to the server.
ChangeLog update
Formatting and minor inline doc changes.
Added a basic Cache_Error class.
Better use buffer_to_buffer, since zval is really buffer, not string (it can contain \0's and not end in \0). # and recode_string is recode_buffer_to_buffer internally anyways
*** empty log message ***
Point people to the Windows mailing list...
ChangeLog update
add missing globals fetches
Add missing #define's
Removing a compiler warning
That came from php-gtk.
Added support for Zeus SSL client certificate information. Added SERVER_SIGNATURE to the environment.
Update .ini's and NEWS
Make parent:: work in runtime bindings as well
ChangeLog update
NEWS update
Implement internal output compression?\0020:wq
We actually only need AC_PROG_LEX here.
Replace AM_PROG_LEX with a separated call to AC_PROG_LEX and AC_DECL_YYTEXT. The latter is only called, if lex was found, so that PHP configures now on setups without (f)lex.
More internal output buffering fixes
Initial work on internal output handlers - should be much quicker
Whitespace only.
Avoid using ret uninitialized
Thread hashtable was being initialized with a size of 1! Changed to 128 as a more sensible number. # Also could change the 'expected resources' parameter from 1, but I # haven't tested that bit yet ----------------------------------------------------------------------
Speedup for pthread implementation. We make use of thread local storage to allow access to the current thread's resources without having to obtain the memory mutex and traverse our hash table. This is a big performance win!
Avoid writing to error_log in case of aborted connections.
Don't insert empty path if PHPRC is empty
Typo. # I don't know where I got 4.02 from
get_meta_tags now allows attributes that are not quoted as well as those that are.  It follows the HTML 4.01 specification for attribute values outlined here -> http://www.w3.org/TR/html4/intro/sgmltut.html#h-3.2.2
ChangeLog update
fixed bug in PDF_getbuffer (happend only on Windows) When using PDFlib V4.0 the pdf_set(grey/rgbcolor) functions are replaced by the PDFlib V4.0 function pdf_setcolor
ChangeLog update
Can't output any error messages if there isn't any function initialized to do it.. # Bug report: #7650
get_meta_tags now handles single quoted attributes as well as those that are double quoted.
I don't know German, but I imagine that was the problem :)
Improve memory consumption on chunked output buffering
Implemented chunked output buffering support - it's quite cool!
fixed typo
Changed code layout to remove PHP warning when running php as a CGI.
ChangeLog update
this function will never return true...
Improve chunked output buffering - the output handler now knows at which stage it is
whitespace fix
The main file with new features.   - added support for cache dataset groups   - added extSave() - see my next PEAR list posting   - added getUserdata()
-Os is a valid GCC optimization level.
Jan says: 'Do not load php_gtk.dll through php.ini, only use dl(), otherwise it crashes (atleast on Win32).' Me thinks: 'There should be no crash, but a warning. Anyways, remove it from php.ini-dist, so others do not run into this... :-)
- modified line 161 to be xml compliant
Whitespace only.
Added some more Win32 extension DLLs.
ChangeLog update
NEWS update
add a warn not available for curl_getinfo(). remove unneccessary error checking.
Whitespace fix
@- Forced call_user_method() and call_user_method_array() to take the @  object argument by reference. (Andrei) * Forced call_user_method() and call_user_method_array() to take the   object argument by reference. * Also cleaned up the protos for those functions and brought   call_user_method_array() into functional equivalence with   call_user_method().
Combine all HTTP headers into a single writev
- Commit NSAPI patches.
Add CyberMut extension from Sylvain PAGES <spages@free.fr>
# TODO updates in mnoGoSearch module README
# mnoGoSearch example fix
Whitespace only.
Added experimental version of Cache_Function module.
ChangeLog update
ws fix
- integrated new functions vor PDFlib V4.0 (beta1) - all functions accepting strings now support binary strings, by calling   the appropriate PDF*2() functions.
Added note about PEAR/Cache.
Added Graphics and Output Cache.
missing a backslash
update the makefile for the new Cache classes.
use standard naming/capitalization, and do a bit of error checking when instantiating the storage classfile.
UDM_PARAM_CROSS_WORDS mnoGoSearch extension session parameter has been added to use crosswords available since version 3.1.11 of mnogosearch. Example updated.
# mnoGoSearch example updated.
# Corrected NEWS entry about mnoGoSearch extension.
Udm_Api_Version function has been added. Example updated.
Udm_Get_Doc_Count function from mnoGoSearch 3.1.11 has been added. mnoGoSearch library version printing in phpinfo() has been added. Example updated.
Added UdmFreeEnv call to mnoGoSearch link list destructor to free memory allocated for environment.
If php is compiled --with-imap-ssl, link in the SSL authenticator from c-client so that we can use php to make ssl imap connections.
ChangeLog update
httpd-2.0 cvs seems to be busted.  I'm getting very strange backtraces and the header filter still seems to be broken.  Will try later.
Now it actually loads, but it segfaults upon a request.
Make the module compile again with the latest httpd-2.0 cvs.
Do case-insensitive class name matching when parsing array('Class', 'method') structure. You guys can clean it up, if there is a better way.
ChangeLog update
#adding name to credits.  nothing to see here, keep moving. PR: Submitted by: Reviewed by: Obtained from:
- Nuke zval_del_ref()
- Pointed out by Andrei. zval_ptr_dtor() should be used instead of the   zval_del_ref() function which should be nuked.
Added PHP_AUTH_USER, PHP_AUTH_PW and PHP_AUTH_TYPE environment variables for Zeus/ISAPI, so basic authenication works.
PHP3_TLS_*() macros are no longer used in ext/dav/dav.c, ext/ldap/ldap.c.
ws fix
Daniel told me he is working on this one, and he is pretty close to finishing the job.
Add UNC in the "todo" list
Don't overwrite existing handlers with parent ones.
ChangeLog update
Provide proper function aliases, if the sendmail functions don't exist.
- Rename modules.h to zend_modules.h
- Finally rename modules.h to zend_modules.h for consistency (first try   was 2000-03-11). - Remove the first_arg_force_ref[]; and friends extern from php.h as they   are included via zend_API.h
# Bad patch job on the last commit by me.  I take the BAD_CODER award for # the day. Removes two unnecessary REGISTER_MAIN_LONG_CONSTANT's. # what should be done about the PHP_MINFO_FUNCTION
nuke warnings
ob_iconv_handler changed to use for text data only.
#Just adding in proper id (forgot to do it on the initial) PR: Submitted by: Reviewed by: Obtained from:
Correctly checks for the proper header files, and excludes the QUOTA functions from non-imap2000 systems (unavailable for testing at this time). # anyone willing to test this out on non-imap2000? PR: Submitted by: Reviewed by: Sascha Schumann Obtained from:
- One more copyright year update
- Update copyright year
ChangeLog update
NEWS update
Updating the IMAP client to include quota support via the imap c-client2000 libraries. # Y2K support is good... Removes the SA_QUOTA and SA_QUOTA_ALL defines # After speaking with Mark Crispin, it is believed these never existed. Cleans up the imap_status() function to remove notion of quotas in a status message. # There is no quota setting in a STATUS message from c-client.
ChangeLog update
Don't assume that tzname exists, if tm_zone does not exist.
- Add exports from Daniel Beulshausen
Declare inet_aton properly, if the system lacks support for it.
Actually compile on systems without syslog.
php_register_command_line_global_vars only needs file scope.
Neither the CGI nor the Servlet SAPI module call syslog, so remove references to the syslog include files.
Change the default to assumption that people don't use AOLserver 3.0 anymore.
ChangeLog update
That should do the trick.
Finish fopen-wrappers rename.
mnogosearch example updated.
Added ispell loading routines and date search limits in mnogosearch module.
fix stas' last commit, added additional ifdefs PHP_SIGCHILD to fix win32 build
ChangeLog update
removed LC_* warnin
factory-generated classes have lowercase subclass names by our (newly revised) standards.
README for mnoGoSearch module updated.
Added Ispell routines to work with Ispell data loaded into sql tables. Example updated.
Safer bin2hex
- took out the HwSLS_FETCH to make it compile again on Unix   Is this really neccesary at this point?
The php_rand() and php_srand() functions added in the previous commit require the inclusion of php_rand.h.
ChangeLog update
Adding php_rand() and php_srand(seed) as a wrapper around random, lrand48 and rand.
Initalize some of the global vars.  Crashed under ms debugger without having them initialized.
Adding crypt.c and php_crypt.h to win32 builds, they were missing..
When using pdf_get_buffer() and doing a correct cleanup by calling pdf_delete() this always resulted in a coredump (after everything was finished, so only visible in the logfile). So it seems to be neccesary to copy the contents of the result of get_buffer, to avoid this coredump.
zend_compile_file returns a NULL on error, check for that before calling destroy_op_array unless we like crashes :-)
fix possible leak.
If we cannot send the header, we don't need to continue with the page.
* dbmaker fix, shared support
Add safety check
# make sebastian and compiler happy .)
There is no need to declare ap_php_(opterr|optopt) with external linkage as they are not used outside of getopt.c.
Instead of assuming that sendmail lives in /usr/lib, if we don't find it, we also check /usr/lib now.
Correctly check for the existence of the st_rdev field.
Preprocessor stuff should go into CPPFLAGS.
Added note about PCRE update.
Corrected News entry.
ChangeLog update
NEWS update
will now initialize dynamic extensions *after* static ones
* allow empty passwords in dsn (for example "mysql://user:@database")
Enable UTF8 support (incomplete) by default.
Include PHP compatibility header file.
Upgrade PCRE to version 3.4.
proper prefix for lookup_hostname
make hyperwave build under win32
make socket functions available to the outside
make gd work again under win32
add configuration which links again libsasl.lib
Changed default behavior of array_search to match in_array (strict was default on, and is now default off)
Patch for inherited interfaces by Daniel Stodden <stodden@in.tum.de>
added missing ELS_FETCH()
define HAVE_LIBICONV
Stop leaking ParameterType data
no swf under win32
Corrected typo in config.m4
changed zlibstat.lib -> zlib.lib, which is the correct name
Rename to array_search().
Yet another bug fix regarding present.
Phrase search support has been added to mnogosearch extenstion. Min_word_len and Max_word_len support has been added to mnogosearch extension. Example updated.
Moved the core of in_array into the function php_search_array, which is called by in_array and search_array (new)
Restore COM.c
ChangeLog update
NEWS update
Bug fix: number of records in yaz_range wrongly set to zero.
Simpler fix for the InvalidOid thing by Tom Lane.
Include <sys/uio.h>.  Apparently, the header cleanup in glibc 2.2.2 caused that file to be included by accident.
Allow passing relative paths to --with-pgsql
ChangeLog update
NEWS update
Save 50% of the syscalls when writing the HTTP header.
[p]fsockopen: fixed possible leak
fixed buffer-overwrite
fixed a possible double-free
Go back to listing the copyright years explicitly (instead of using a range).
Typos in protos.
export global constants for codepage and variant type VT_* and CP_*
added a few more variant types for zval <-> variant conversion
@- Added new object VARIANT() to encapsulate values for use with @  the COM and DOTNET module. Therefore it is now possible to pass @  values by reference, convert php values to extended variant types (currency, @  date, idispatch, iunknown, ...) and define the codepage that should @  be used for unicode - conversion.
added myself to CREDITS
add year 2001 to header
ChangeLog update
make oci work again.
multiple codepage support export global constants
ChangeLog update
Add some old and some recent news
import notes modules from Brad Atkins
Add all necessary includes for these header files.
All DB modules should return NULL from fetchRow() now if there are no more results, and a DB_Error object only on an error.
Wrong return type.
ChangeLog update
NEWS update
Small typo.
Change e-mail address
0..255
fixed SEGFAULT when using xml_set_object. Zend does not yes support cyclic references!
Added thow new mnoGoSearch agent session parameters: UDM_PARAM_WEIGHT_FACTOR and UDM_PARAM_WORD_MATCH.
There might be more systems which do not support chroot, so we check for the existence of it.
ChangeLog update
- chroot does not work on windows
This should make detecting the version of Oracle libs a bit more accurate to avoid the 'missing libcore4' errors. (e.g. on AIX) Bug reports: #9027, #8905
mnoGoSearch config.m4 freebsd compatibility fix.
Added mnogosearch version checking into config.m4. Some proto fixes.
allow more extensions with resources
ocifreedesc() now spits a NOTICE when called the "wrong" way.
- Added the notification of the chroot function addition #- I forgot this with the initial commit
- Added an extra chdir("/"); as sugested by Sascha
- Added the chroot function for changing root in a script. #- This can be usefull when using PHP in a shell environment, or when PHP #  runs as CGI which needs a little more security
Add note about removing the requirement that you need to include the respective class definition before using a session variable of the type object.
*** empty log message ***
ChangeLog update
NEWS update
remove stupid PGSQL warning
Bug fix: Record retrieval (present) is termiated on error.
@- PostgreSQL now does a rollback at the end of a request on every @  persistent connection. This is done by doing an "empty" transaction @  on the connection (This was advised by someone from the PostgreSQL @  core-team). If you leave transactions open on your page you will see a @  "NOTICE:  BEGIN: already a transaction in progress" message in your @  apache error_log. This message is created by the PostgreSQL libs - we can @  do nothing about it. (Thies)
@- fixes PostgeSQL pg_connect() bug. We would sometimes close the default @  link by acciedent. (Patch by: aja@nlgroup.ca)
remove unneded comments
Move version registration to a more correct place
ChangeLog update
NEWS update
Implemented yaz_present, yaz_scan, yaz_scan_result, yaz_ccl_conf, yaz_ccl_parse and yaz_itemorder. Updated documentation.
added module support (for dl()) for PDFlib the PDF files now tell that they are generated by the PHP binding.
- Remove two unused functions
@- Improved OCI8 dead-session detection. (Patch by: George Schlossnagle)
fixed possible leak in imap_search
ChangeLog update
The Cmd:: class implements an abstraction for various ways of executing commands (directly using the backtick operator, as a background task after the script has terminated using register_shutdown_function() or as a detached process using nohup).
Added note about get_meta_tags bugfix
ChangeLog update
make _php_image_convert configuration-aware
libjpeg-not-installed protection
Stray ]
What the heck is CUT?  Assume someone meant UTC here.  And fix a warning.
Added UDM_PARAM_FIRST_DOC and UDM_PARAM_LAST_DOC mnoGoSearch extenstion result parameters. Example updated.
- Remove duplicate code and do a tiny optimization in DO_FCALL
ChangeLog update
fixed SIGSEGV in vpopmail_auth_user when optional arg apop is not set
*** empty log message ***
Make fprintf's optional
- add domxml_unlink_node(), not tested
Added UDM_PARAM_SEARCHTIME result parameter. Now at least mnoGoSearch-3.1.10 required to use this module. Added some parameters aliases. Example updated.
# also Added CREDITS and cvs Template # added udm_config.h for compatibility with mnoGoSearch-3.1.10pre
Move todo items.
ChangeLog update
Suppress the other nasty warning
may as well go by the capitalization we agreed on sooner rather than later.
# fixed several warnings - variables not used, functions not declared # added vclose() declaration - vpopmail does not declare it
Improve use of $withval.  This also cures the problem of adding -Lyes/lib to $LIBS.
Only one entry for mnoGoSearch is necessary.
Added .cvsignore
ChangeLog update
NEWS update
For those lucky systems with both random() and *rand48(), the random() family is the prefered choice. So if both exist, we now choose that.
UDM_FIELD_ORDER and UDM_FIELD_CRC mnoGoSearch result fields has been added. Example updated. @- UDM_FIELD_ORDER and UDM_FIELD_CRC mnoGoSearch result fields @  has been added. (gluke)
UDM_PARAM_WORDINFO mnoGoSearch result parameter has been added. UDM_PARAM_RATING result field has neen added as alias for UDM_PARAM_SCORE. Example updated. @- UDM_PARAM_WORDINFO mnoGoSearch result parameter has been added. @  UDM_PARAM_RATING result field has neen added as alias for @  UDM_PARAM_SCORE. (gluke)
Preserve API compatibility.
Don't use Z* macros for non-zvals.
Cleaned up and optimized WDDX serialization - it's about twice as fast now.
ChangeLog update
NEWS update
Added tests for arpa/*.h and resolv.h which don't exist on the BeOS. The dns functions on BeOS come from socket.h
Added tests for arpa/nameser.h and resolv.h, which don't exist on the BeOS.
- Added a new parameter to mail() which appends aditional command line   parameters to the mail program. This is usefull to set the From headers   correctly with the -f parameter to sendmail p.e. @- Added a new parameter to mail() which appends aditional command line @  parameters to the mail program. (Derick)
Added myself to CREDITS (vlad)
fixes the problem that php.exe compiled on win2k platform won't run on any other
now when pspell/pspell.h is included, it will recognize that it has to work in compatibility mode. (The previous fix had the right idea, but was too far down in the source)
*** empty log message ***
Allow calling static methods via call_user_method_* functions.
One more notice about using names with NEWS entries.
Added new Udm_Clear_Search_Limits mnogosearch extension function. @- Added Udm_Clear_Search_Limits mnoGoSearch extension function.
2 things to do
Whitespace.
Added new Udm_Add_Search_Limit mnoGoSearch extension function. Some bugfixes and example update. @- Added new Udm_Add_Search_Limit mnoGoSearch extension function. @  Some bugfixes and example update. (gluke)
Adding Sebastian Bergmann to QA team list.
ChangeLog update
NEWS update
Adding microtime() tests
Always return a value even if HAVE_GETTIMEOFDAY is not set
# *Brain Fart*
Add a bunch of stuff..
ChangeLog update
Allow passing class name as well as an object instance to call methods.
Set the correct function state during execution. This is mainly to have get_active_function_name() to return proper value.
Adding delimiter capturing functionality.
Inherit overloaded handlers.
ChangeLog update
NEWS update
Comments didn't reflect rewinddir()
Revert bogus patch and fix it properly.
pspell .12 fix @ pspell .12 fix (Hugh Jones)
correct phpinfo() output
I think this should've been changed as well, right?
correct phpinfo() output
Added new UDM_PARAM_STOPTABLE and UDM_PARAM_STOPFILE parameters for Udm_Set_Agent_Params mnoGoSearch module. Now it can use stopwords stored either in database or in the plain text files. Added php warnings. Test example updated. @- Added new UDM_PARAM_STOPTABLE and UDM_PARAM_STOPFILE parameters @  for Udm_Set_Agent_Params mnoGoSearch module. Now it can use stopwords @  stored either in database or in the plain text files. Added php warnings. @  Test example updated. (gluke)
make sure to include subclasses before trying to instantiate them.
ChangeLog update
NEWS update
trigger_error() should be ($msg,$level), no?
ws-only
@- When using the ob_gzhandler() PHP now automagically also sets the @  Content-Lengh correctly which enables browsers to use the HTTP @  Keep-Alive feature. (Thies)
While we're fixing the ini files, change these to web-safe colours ... this always bugged me :)
Allow usage of GD contexts and not tempfiles in output functions
No need for CLS_FETCH().
Add cvsclean target for standalone extensions.
UDM_PARAM_CHARSET parameter in Udm_Set_Agent_Param() has been added to set local charset you are using. Example updated also. @- UDM_PARAM_CHARSET parameter in Udm_Set_Agent_Param() has been added to @  set local charset you are using. Example updated also. (gluke)
Add utility function
did someone poop in the code? :-)
­ some modification from Rainer Schaaf    * fixed prototype for pdf_new()    * MINFO: included Revision of pdf.c, removed info about CJK + in-memory, this is      standard with V3.x)    * repaired PDF_open_CCITT    * repaired PDF_setfont    * eliminated many compiler warnings.    * former resource "pdf document" is now called "pdf object"
Massive reformatting.
Modified /F handling to allow calling object methods.
Added zend_is_callable() function that checks whether passed zval represents a valid and exiting callable construct.
ChangeLog update
NEWS update
Only two lines are allowed here.
Added the mysql_get_*_info() functions. # If anyone knows of a version of mysql lower then 3.20.32 that implements # all 3 of these functions, please change the conditionals. @- Added mysql_get_client_info(), mysql_get_server_info(), @  mysql_get_proto_info(), and mysql_get_host_info() functions. (Sean)
- Change unset() functions to null(). unset() is legacy
use $HTTP_SERVER_VARS, in case register_globals is Off, and use !empty() instead of just if () to avoid errors.
add iconv and ming
nuke warning, and add dsp
fix typo
make iconv compile under win32 using libiconv # http://clisp.cons.org/~haible/packages-libiconv.html
Added search cache and track query features. @-Added search cache and track query features. # For example please refer at ext/mnogosearch/test.php
Adding readme for release process, this needs to live somewhere and here seems as good a place as any.
added currency, date, IUnknown and NULL datatypes
- note about change of pdf api
- Quick fix. I'm for changing these to add_property_null() as we've nuked - unset.
ChangeLog update
NEWS update
whitespace
fixing .cvsignore
adding .cvsignore
mnoGoSearch extension module initial version has been added. This module currently at the alpha state, but it can be used already. @- mnoGoSearch extension module initial version has been added. @  This module currently at the alpha state, but it can be used already. # For details about mnoGoSearch please refer at http://search.mnogo.ru PR: Submitted by: Reviewed by: Obtained from:
@Allow url encoding in DB usernames and passwords (Stig, PEAR)
Applied patch from Oleg Sharoiko <os@rsu.ru> to fix bug in satellite_any_to_zval_sequence
pass another com object as parameter
ChangeLog update
@Added raiseError and setErrorHandling methods to PEAR class (Stig, PEAR) # This allows all objects to have their own default error handling # or use a global default.
use *_EXTERN_C() and PHP_WIN32
fixed unicodeconversion and parameter passing bugs in com and dotnet modules
fixed unicodeconversion and parameter passing bugs in com and dotnet modules
ChangeLog update
PR: Clean up and add folding
PR: Remove --with-pfpro warning. Verisign has released a beta SDK which corrects the problem.
PR: Submitted by: Reviewed by: Obtained from: Add configure warning message when compiling --with-pfpro
File formats in uppercase characters.
- That doesn't seem like a smart thing to do :) - I wonder if gcc optimized it out.
This config.m4 was obviously not tested at all before being committed.
ChangeLog update
Adding Ming experimental file
First include of ming (SWF generation) library wrapper
# fixed protos in comments for *_ex functions
Mostly off by one.
Whitespace change for funclist.txt.
have DB::isError return true if passed "null". Now you can more consistently use DB::isError(), since some of the db drivers return nulls from various functions (like fetchRow()), and others don't... We should probably make all of them just return errors. I did this for the mysql driver, as a start.
- This is major change of the php pdf api to be closer to the pdflib api   done by Rainer Schaaf from pdflib GmbH. - Some more functions has been implemented as well. - backwards compatibility has been maintained a much as possible
- changed naming of some functions (kept compatibility)
ChangeLog update
make msql build under win32
gd didn't work if no WBMP was available after rev 1.107 -> fixed
ChangeLog update
NEWS update
Added my_winthread.c. Thanks to Thimble Smith.
Already done.
Added 'you must use gcc' comment to build instructions.
Don't #define HAVE_COMPRESS on windows.
Protos fixed.
- Commited a patch that adds support for converting Images to WBMP format.   (Thanx to Denis Gasparin <denis@editnet.it>) @- Added support for converting images from JPG/PNG on the fly with the GD @  extension, which is usefull for creating dynamic WAP-sites (Derick)
ChangeLog update
changed function names to be like vpopmail_add_user instead vpopmail_adduser added vpopmail_error to report error string (vpopmail_errno global var) put exec functions back in with _ex (vpopmail_add_domain_ex) rewritten README to help users keep secure fixed protos to state bool instead void return type
Forgot this too ...
Never added this ...
fix a couple of warnings
Upgrade ext/mysql/libmysql to version 3.23.32.  One notable bug fix is that the client can now connect to a server which is using a default charset other than latin1.
#found this by playing with phpMyAdmin.
fixed crash in add_index_bool.
ChangeLog update
NEWS update
jouni was added as an author of the docs
If we can't call custom replacement function, don't change the subject string.
@- Improved str_replace() to accept an array for any parameter - similar @  to preg_replace(). (Andrei)
Make add_index_zval() available to the outside world.
Don't need to check for out-of-memory condition.
Z-ify the source.
rename php_mssql70.dll to php_mssql.dll, as we have only one mssql extension
ChangeLog update
NEWS update
Kill warning
Sigh.  Even less sleep than I thought :)  Really fix it this time.
Update and pastify NEWS
Don't overwrite PATH_TRANSLATED if it exists
This probably should have a NEWS entry
- BeOS apparently doesn't have realpath(). Improve the previously   commited patch.
@BeOS patch from svanegmond@bang.dhs.org modified somewhat by Rasmus BeOS patch from svanegmond@bang.dhs.org modified somewhat by Rasmus
- Make people happy who like the Zend version number bumped up in parallel   with PHP.
ChangeLog update
- Patch from Sterling. Add API calls to add zval's as array indeces/   object properties. Add _ex functions which take the string length as an   argument for better performance.
Revert last completely broken patch.
install the various HTML/* files
added: EXPERIMENTAL
ChangeLog update
NEWS update
Desired functionality can be achieved with array_sum/array_count.
@- Added URL support for getimagesize() function (Jani) # tested with all imagetypes. Also the iptc works.
Added muscat to EXTENSIONS as it should be there all along PR: Submitted by: Reviewed by: Obtained from:
Bump PHP_API_VERSION
- Added a notice about the wordwrap function fix #- suggested by Jani for people depending on the buggy behaviour
Make the code match the comment.
Added some missing EXPERIMENTAL files plus some missing extensions into EXTENSIONS file.
@- Added xslt_set_scheme_handler() function (carmelo@akooe.com)
- For Sterling. I wonder if not all of the API functions should take the - key_length as a parameter in order to save that strlen().
ChangeLog update
NEWS update
- Added the pg_lolseek function, which allows for arbitrary seeking within   a large object, and the pg_lotell call, which can be used to find the   current file offset for a large object (Submitted by: Adam Haberlach   <adam@newsnipple.com>). @- Added the pg_lolseek and pg_lotell functions (Derick)
Support AIX/HP shared lib extensions and j2sdk1.3.0 (hotspot)
Some decent credits and such in the phpinfo page
Aghh.  Despite my efforts two files still slipped through
First checkin of muscat/empower module; been using it here for some time Developing using aegis and just checking in baseline from time to time
Libedit readline replacement support # Comments are very welcome!
ChangeLog update
NEWS update
@- Changed 'Z' flag to date() to always return timezone offset with @  negative sign if it's west of UTC. (Andrei)
Put these back where they belong.  They weren't necessary unless ZTS and HAVE_LOCALECONV were both defined.
Making parallel search allow different filter for each link
Make sablot compile again. Typo?
Kill a couple of warnings
ChangeLog update
NEWS update
Updated configure.in to look for strcoll() # Woopsie.
Added string comparison function strcoll().  It uses the current locale to do the comparisons. @- Added localeconv() and strcoll() functions for localization. (Sean)
Kill some warnings
@ Added the xslt_set_base function. (Sterling)
@ Support Zeus 3.3.8 Added changes to environment variable manipulations, to support Zeus 3.3.8 and increase compatibility between Zeus/IIS/Apache. Now, URLs like http://foo.org/file.php/a/b/c/d work correctly. # While testing, it looks like IIS+ISAPI is mishandling URLs like the above. # The PATH_TRANSLATED given by ISAPI includes the /a/b/c/d bit of the URL, # so using this var to find the script file to open on disk will not work. # We now use SCRIPT_FILENAME if it is present (in Zeus 3.3.8) # IIS doesn't seem to set this variable, it might be necessary to mangle # SCRIPT_NAME and APPL_PHYSICAL_PATH together?
ChangeLog update
NEWS update
- Implement CompareStringWithFile() - Remove a stupid NULL assignment that slipped in the last commit
Try harder to push data through the wire.
Some protos fixed.
Add free_estring()
- Remove the ini_extension_list global - Switch to delayed loading of Zend extensions
Use free_estring()
Nuke a couple of warnings
Defer loading of extensions until all configuration entries have been added to the configuration hash.
restored vadddomain/vdeldomain to use library functions rather than invoking  vpopmail executables implemented vaddaliasdomain natively global variable to store whether vpopmail was used and only vclose() if  necessary return the functions to returning true/false for success/failure rather than  some arbitrary vpopmail return value return the functions to not doing everything at once as you then lose  fine-grain control over its operation change C++ comments to C
ChangeLog update
NEWS update
test now produce valid OK or FAIL.
dont do results if not using test files
clean up temp files
@- Added odbc_error() and odbc_errormsg() functions (Stig)
check files open
fix file reading, add results
Multithreaded stress test program for isapi module now supports phpt files still stuff to do before it's realy done, but does run the tests, just need to get it to compare results right now.
vpopmail's bin dir is unnecessary as the library exports these functions
#added simple minimum survival readme
merged my version with David Croft's removed unneccessary php.ini calls and defines removed module_init, shutdown, request_init declarations and references added request_shutdown to close mysql/other db connection 	(a must in apache module) added defines for external binaries from vpopmail changed functions to present more consistent api from user's point of view 	so that in one call more stuff is done added more comprehensive MINFO function helping users debug their case added static int vpopmail_exec(char *cmd) [will change to php_Exec soon] @ vpopmail extension updated to working alfa. give it a try but keep in @ mind that it is not ready for production environments (Boian Bonev)
updated
Name this php_Exec instead
rewritten the whole logic of the script added VPOPMAIL_BIN_DIR to point to ~vpopmail/bin directory added checks for ALL files needed by the extension style fixes to the output
Added localeconv() function.  Operates similarly to localeconv() defined in locale.h.  Should work well under non-ZTS as well as ZTS.
Export _Exec for extensions to use
fixed readfile() fd-leak.
Don't fetch numeric indices in mysql_fetch_object()
# restored code for latest vpopmail version @ New extension for vpopmail - http://www.inter7.com/vpopmail (David Croft)
vpopmail extension
added iconv_get_encoding and supported initialization from php.ini
reserve space for quoted characters fixes buffer overrun bug #8694
ChangeLog update
NEWS update
Both thread-safe and thread-unsafe builds should be ok now
Add sybase_get_last_message() from Jan Fedak <J.Fedak@sh.cvut.cz> @- Added sybase_get_last_message() to the Sybase CT module (Jan Fedak)
- Removed a stale var that broke the build
- There was one ret left, changed it to FG(pclose_ret), this fixes the   build
Support for perl-compatible blowfish encryption (in libmcrypt CVS and versions later than 2.4.8)
cleanup time...
Remove some more useless code
Remove stale code
Simplified code a bit, added detailed error reporting, and fixed a bug when getaddrinfo returned a non-IP family before IP families
arr_index errorneusly included the trailing ']' character, so that variable names like Data_name[Image]] were passed to the register functions.
Realized that emalloc() never returns NULL, simplified code
ChangeLog update
NEWS update
Added parallel search when given array of link identifiers @- Made ldap_list(), ldap_read() and ldap_search() do parallel search when @  first parameter is an array of link identifiers (Stig Venaas)
Follows redirects again, and $http_response_header now contains all headers with an empty string as delimiter @- Made fopen() of HTTP URL follow redirects, $http_response_header will @  contain all headers with empty string as delimiter (Stig Venaas)
Add HTTP_Compress::, which provides an easy wrapper around producing gzip-compressed html. This should be ported to use the ob_gzhandler() output handler, but I haven't had a chance to look into that yet.
Add newline
Make daniel's changes work in ZTS mode...
take out emtpy struct # vc chokes on them
PR: Submitted by: Reviewed by: Obtained from: Added Image_Remote class.
ChangeLog update
NEWS update
@- Added Console_Getopt class for parsing command-line args. (Andrei, PEAR)
If external expat is used, header file is expat.h
removed old expat libs
Housekeeping...
ChangeLog update
*** empty log message ***
disable directory search for libexpat and disable some macros for libxml-1.95.
Especially on FreeBSD it seems to be common that send(2) does not do a decent job.  We handle that better now.
exec'd processes now get cleaned up even if the browser connections was aborted. fixes: #8143
fixed swatch internet time (bugs#8242,7106)
Allocate buffer in date() for the actual length of the timezone (bug#8292)
ChangeLog update
NEWS update
* renamed PEAR scripts * set localstatedir
added .cvsignore file
* updated copyrights (thanks Colin) * moved scripts to own directory (bug #7635)
added a option to dedine libexpat install directory (by Jani Taskinen)
*** empty log message ***
I should learn how to spell PR: Submitted by: Reviewed by: Obtained from:
Now the coding standards are defined elsewhere ... PR: Submitted by: Reviewed by: Obtained from:
Move the definition of the xslt_set_encoding to the "proper" place in the file and fix the prototype.
Update the copyright year range to 1997-2001.
Avoid possible memory leak in the URL scanner, if the connection is interrupted during writing the output.
Sorry, two lines are enough.
moved to ext/iconv.
added test code to iconv.
move iconv related functions to separate iconv extension.
added iconv extension.
@- Allow access to uploaded files in safe_mode. Beware that you can only @  read the file. If you copy it to new location the copy will not have the @  right UID and you script won't be able to access that copy. (Thies)
If TZ environment variable is changed call tzset(). # Although man page for tzset() says it should be called automaticly # by some of the time related functions, IRL this doesn't happen. # PR: 3977, 4732, 5510, 6972, 7203, 8502, 8609
Propagate the response code/HTTP status code back to thttpd for logging.
Account the number of sent bytes properly
fix for Bug id #8606
php_add_var_hash() uses sizeof(id) in the calls to zend_hash_*, implying that all bytes in the character array have been set (they are used to compute the hash value using hashpjw).
Make Apache 2.0 filter build again
WS fix
@- Changed extract() to check that prefixed name is a valid one. (Andrei)
@- Changed extract() to return the number of variables extracted. (Andrei)
Optimize it a bit - no need to dup empty string (which can be pretty common for .ini)
Duplicate property value, otherwise parser would free it and we're in bad shape.
Corrected some protos.
Added ldap_rename(). Currently requires API with ldap_rename(). @- Added ldap_rename() function (Stig Venaas)
*** empty log message ***
Use platform's dir separator
Test ACL commit
* display a notice when downloading
* no need for this test file anymore
* updated DB status * updated the "pear" script, it can install basic packages now
added iconv_set_encoding() to change the encoding setting.
ChangeLog update
NEWS update
added a output handler function ob_iconv_handler which tranforms output encoding using iconv().
ignore blank lines
my mistake...freed in a different function.
be sure to unlock that mutex before returning!
add notes on this program
stresstest is based on cgiwrap.  it can be used to debug php4isapi.dll without the use of an actual web server.
define flag to turn off exception handling
Added OpenSSL
Changed OpenSSL requirements from 0.9.6 to 0.9.5
Minor changes to LDAP_OPT constants, and added support for controls to ldap_set_option. @- Made ldap_set_option() support controls (Stig Venaas)
- Remove backward dependency from PHP -> Zend - Rename get_ini_entry() as get_configuration_directive() for clarity   (it doesn't use the INI subsystem, but the module-supplied function for   retrieving configuration directives)
Change get_ini_entry to get_configuration_directive
Remove -S option on all bison calls
Add Release_TSDbg to TSRM as well
Added LDAPv3 stuff. ldap_search() now treats LDAP_ADMINLIMIT_EXCEEDED like LDAP_SIZELIMIT_EXCEEDED and returns referral results. Added new functions ldap_parse_result(), ldap_first_reference(), ldap_next_reference() and ldap_parse_reference() that among other things make referrals and search references accessible. @- Changed ldap_search() and added functions ldap_parse_result(), @  ldap_first_reference(), ldap_next_reference() and ldap_parse_reference() @  to cope with LDAPv3 stuff like referrals and references. (Stig Venaas)
fix small leak in ociexecute() fixes: #8573 submitted by: tcarroll@chc-chimes.com
Made OpenSSL extension work with 0.9.5 and changed version check to 0.9.5
Use MAKE_STD_ZVAL/FREE_ZVAL to handle zval memory allocation.
Add a new test and refine the fourth test
Use zval_ptr_dtor instead of zval_dtor/FREE_ZVAL pair.
imap_user and imap_password were freed too early. PR: 8424
list the correct modeline for vi.
ChangeLog update
Remove -S
- This slipped in by mistake.
fixed option name mismatch.
linked with libexpat. it's necessary to use sablot-0.50. added xslt_set_encoding() function.
ChangeLog update
Adding hack to allow odbc_tables to work on Access databases
add File/Passwd.php to the install rules, and change the class name to File_Passwd to match our standard.
revert Jon's patch, leaving only the correct one.
$from_arr is a two-dimensional array here.  Treat it as such.
make sure we get back a flat array from parseAddressList().
remove stupid ifdef's
finally remove -S option from bison # bison.simple should be stored in the same folder or # set the 'bison_simple' variable which points to the file
fixed date not allocating enough buffer, bug 7963
include config.w32.h under win32
make threaded apache module build again
- Get rid of C++ comments
- fixed potential segmfault in xmldoc() and xmldocfile()
Added missing ieeefp.h. (This is needed e.g. by nsapi on some systems)
added libxml-1.95 support and some new functions related to namespace support. changed config.m4 to support xml extension as shared module.
initial coding standards doc for all to argue over.
ChangeLog update
fix the Log::factory() method to assume that the Log stuff is in the include_path (like all of PEAR does).
Added credits.
Removed some stupid header text. Implemented functions for returning the error string and starting and stopping the message handler. Added comments for all functions.
Removed some stupid header text. Added a new struct for handling error logs and Qt Message Handler handles. Added functions for returning the error string and starting and stopping the message handler.
New function qdom_error which returns the error text from the last qdom operation, or FALSE if none occured.
Changing my email address...
- Make plist_destructor work like list_destructor to allow it to call   extended destructors.
ChangeLog update
Mail.php: use the Mail_rfc822:: class to parse addresses. There is a small performance penalty, but it handles rfc822 groups, which imap_rfc822_parse_adrlist doesn't.
Added better checking for OpenSSL's libraries. Now configure stops if the libs aren't found. # bug report #8365
Make socket support compile under Solaris 8 with the Sun WorkShop compiler.
I missed this function..
Trying to bring pdf extension a bit more up to date.
fix filepath handling
add Numbers/Roman.php, Net/Curl.php, and XML/RPC.php to the install rules.
fix bug 8341 & 8394
Commit missing declaration
add allan@lodestone.co.za's Date_Human calculator class.
here's an initial version of Richard Heyes' rfc822 email address parser.
ChangeLog update
NEWS update
Import COM patch from Harald Radi <h.radi@nme.at> The new code should allow for better international support.
Many patches.  I hope I remember them all:
I think the order is wrong, switched order of ssl and crypto libs
Make this comment readable.
Make the generated <input> lower case and terminated with a /, to be xhtml-compliant.
- Remove unreachable code
it seems one section was missing the HAVE_SOLID_30 section...
added #define(OPENLINK) to the SDWORD instead of SQLINTEGER line.. this is for bug #5526 to allow compiles.
config file was missing a new line which seemed to cause the if statement to parse the else into an echo.  yuck.
Add license info
Added the arg_separator directive.
Minor update regarding new phpinfo table format. Moved pi3web_sapi.h to the sapi module. PR: Submitted by: Reviewed by: Obtained from: Pi3Web
ChangeLog update
Make nl2br() output <br /> instead of <br> to be XHTML compliant.
Make the INI mechanism thread safe (or at least thread safer :)
- Make the INI mechanism thread safe (fix necessary API changes from Zend) - Make the Win32 non-TS configuration build again
ChangeLog update
Use iostream.h instead of istream.h (IBM's compiler doesn't come with istream.h, and iostream.h should include it)
Add Release_TSDbg support.  This mode compiles PHP with the release C runtime, but with optimizations disabled and with debug info.  Some crashes can only be debugged using this mode.
- Use supplied istdiostream definition for the INI scanner too - Add Release_TSDbg configuration
#remove cvs [dollar] ID from changelog
ChangeLog update
ChangeLog update
Skip mcrypt/gmp tests, if the extensions are not available.
Add session_set_save_handler test
More instances of s/efree/FREE_ZVAL/
Not freeing the zval using FREE_ZVAL caused a segfault in shutdown_memory_manager.
Also call some member functions of the deserialized objects
Run run-tests.php in srcdir and add top_builddir/pear to the include path (does not seem to work though yet.  The include path does not seem to get changed at all).
Add session object deserialization test
Add two regression tests for the session module
This needs updating as well
Sync the expected output with Linux dirname output.  The test passes now. Perhaps this should be split into two tests, because the Win32 paths don't work properly with PHP's dirname on Unix.
revert last fix. the problem is now fixed globally in Zend.
ChangeLog update
More aggressive protection in call_user_function_ex()
fix #8363. fix call_user_function when parser->object is not set.
Pass some more variables to AC_SUBST as those are needed for Apache 1.3's libphp4.module.in.
ChangeLog update
(PHP session_unset) Return early, if no session was started.
Support multi-char arg separators.
Set the floating-point exception mask on FreeBSD to 0 (as do other FreeBSD system applications).  Also bump up the module API number as the zend_hash_get_current_key change affects source and binary compatibility.
Signal an error condition, if write was unable to perform the complete operation.
NULL is a valid return value of mmap.  Check against (void *) MAP_FAILED.
(php_file_copy) Use mmap to map the source file into our address space and then simply write it out to the target file.  That avoids switching between user and kernel land too many times.  If that does not work, we fall back to the read/write method.
Heads up people!
Allow get_current_key() not to return the key itself, instead of a duplicate
ChangeLog update
NEWS update
@- Changed setlocale() to use LC_* constants. (Jani)
No need for GCC extensions in non-debugging mode.
Some AC_SUBST substitutions were removed which are still needed.
ChangeLog update
install the Math/* files.
Stop automatically passing vars to AC_SUBST through PHP_SUBST.
Speed up the genif.sh script a little bit.  Whereas it took three seconds previously, it takes now about 100ms on a P233.
- Use memcmp() instead of ugly char-by-char compare
Removed unused variable from is_scalar
Note about fix under correct version.
ChangeLog update
NEWS update
Add the QA team to the credits
Add support for ASP tags in one-line comment
@ ctype functions now follow the extension naming conventions (Hartmut) # removed unneccesary code generated by ext_skel
Updated to reflect recent discussions on php-dev.
ChangeLog update
wb fix.
Adding test for is_scalar().
Added is_scalar() function.
- No need to generate number.c and number.h anymore.
- Success! Yay!
- Yet another one.
- Testing
- No luck
- Make this damn commit stuff work.
- Testing
Use HashPosition iterator instead of saving/restoring internal pointer
Preserve internal pointer over print_r (fix #8289)
- Testing Sascha's CVS commit script which should work with branches.
- Testing
- Testing
- Testing
- Testing
- Testin
Test, ignore
Test, ignore
Test, ignore
Test, ignore
Test, ignore
fixed BUG #8306: shmat() returns -1 on errors, not NULL
Add notice when auto-converting array to string
ChangeLog update
- Clean up the scanner a tiny bit while messing with it.
- %> without asp_tags should not be treated as inline_html but as regular   tokens. Of course the parser will die with a parse error which is the   correct behavior.
No need to link main binary with ODBC libs if we use shared module
add a reminder about #3149
ChangeLog update
Don't do anything, if the input string has a length of 0.
- How did CVS let me commit this? Probably it confused with the branch   merge
- In PHP we're supposed to only use MAXPATHLEN (defined in php.h)
- Make all places use MAXPATHLEN in the same way. It includes the   terminating NULL.
ChangeLog update
NEWS update
AIX's XlC++ does not allow casts as an lvalue.
removed a warning when testing against a single .phpt file
Attempt by Matt Bonneau to get thumbnail extraction working (no need to bring this into the 4.0.4 branch)
- Added test for bug #8040
- Added a patch that changed the checking of which version of libmcrypt is   installed (Thanks to: Anil Madhavapeddy <anil@recoil.org>)
Removed unused variables.
* run-tests.php: fixed a few bugs, including the POST/GET problem reported by   Stas
ChangeLog update
@Added iconv() function (using libc or libiconv) (Stig)
@Added ODBC_TYPE constant (Stig)
- This is the correct way of doing it
added missing SLS_FETCH()
New m4 macros should go into acinclude.m4.
enforce lenght limit and catch out-ouf-memory conditions
Don't define LC_MESSAGES, if LC_MESSAGES is not defined.
fgetcsv() will now work correct with empty fields in tab delimited files # fix for bug #8258 and regression test
added define for force cgi redirect
Add proto
- handled possible case that an Anchor has no Position   (This used to cause a segm fault)
ChangeLog update
Update module_api_no
That slipped in :(
levenshtein() fixed, regression tests added (bug id #6562 and #7368) # fallback to unoptimized version for 4.0.4 release
- Bodytag is insertet by fnInsAnchors() - several small bugs which might cause a segm fault
(Zeus) Re-added some server variables that will be used. Also added DOCUMENT_ROOT, was missing before for non-Win32
Add GMP tests
* rename write* to dowrite* to avoid clash with ext/sockets * sapi/cgi seems to ignore command-line options when running in "real"   CGI mode, need to find a way to pass include_path to it...
* PEAR: don't require "make install" before "make test"
Add apache_child_terminate() and INI setting apache.child_terminate which defaults to 0.
Don't increase the refcount of id, if we already have increased the refcount of the same id before.
Move cracklib entry to 4.0.5
link against msvcrt(d).lib, ignoring it isn't a good idea
Kill warning
Added a missing note.
ChangeLog update
Open files in binary mode - should fix readfile() on Windows
- add test for hw_insertanchors()
- new function hw_insertanchors(). It takes a document, a list of anchors   and its destination and inserts the anchors into the text.
ChangeLog update
Added a note about --enable-versioning working with IRIX 6.5
Formatting.
fix #6348
Add TODO note
Make php_array_merge() an API function.
ChangeLog update
Align ZTS handling of globals with common usage
fix win32 apache module # this is ugly, has someone a better way?
fix windows build
- Add NEWS about being able to assign new's by ref
[whitespace] make this code a bit less dense.
Initial commit of Function_Cache.
Added constants for locale categories.
Moved the constants into ext/standard
Making the shmop phpinfo entry look the same as others.
For nice looking error output. ;)
ChangeLog update
* DB::isManip counts "REPLACE" as a manipulation command (MySQL specific) * renamed DB_common::execute_emulate_query to DB_common::executeEmulateQuery * moved "query" DB method to DB_common, there was duplicated logic in query   and simpleQuery in all backends.
Kills one compile warning.
Fetch SWF globals
Removed unused variable definitions. And libxml can be build NOT to have support for either XPath or XPtr.
ChangeLog update
NEWS update
wb clean.
@ Added the call_user_method_array function which allows you to call a method with an @ arbitrary number of parameters. (Sterling)
Version checking for domxml. Requires >= 2.2.7 at the moment.
* output fix for skipped tests
Added constants to represent the various categories of locale (LC_ALL, LC_MESSAGES, etc...)
* applied fetch modes patch for odbc by Richard M. Yumul * added DB::isManip so we have _one_ place for testing whether something   is a data manipulation query * when passed a string as its first constructor arg, DB_Error now uses   the error code DB_ERROR rather than just 0 * implemented auto-commit for ibase (not yet fully tested) * fixed persistent connections in odbc
ChangeLog update
added TODO comment
Namespace protect parse_date interface and implementation
* added Sebastian's affectedRows() and numRows() for MySQL * added regression test for DB_mysql::affectedRows * fixed some PEAR_Error based tests that had broken (line number change)
Hardcode strlen due to problems on SCO OpenServer 5.0.4 which defines strlen to __std_hdr_strlen.
Enable libgcc, if we are building on Solaris with GCC.
Hardcode the readdir entry as well
We don't want any hard errors in PHP scripts unless absolutely necessary.
Fugbix in call_user_func_array() if second argument is empty.
Axe rest of DAV leftovers and use STD_PHP_INI_ENTRY in the INI section
Hardcode all functions which are mentioned in the Large File Support Spec
Enable DB2 shared build
Added note that openssl 0.9.6 is required.
Whitespace fix
Allow var $foo = array(ABC => 1) constructs # It still doesn't work good with constants, but at least doesn't leak now
- set propper min version
* make it possible to override the start directory for "make test"
Close bug #7013.
ChangeLog update
Contribute Horde's Log:: abstraction class to PEAR.
The new openssl extension requires OpenSSL version >= 0.9.6
INIT_DATA/UPDATE_DATA assumed that pData elements of the size of a void pointer would actually be aligned like a void pointer. This lead to bus errors on architectures which don't allow unaligned 32-bit accesses.
updated with =& new syntax
made run-tests.php windows compatible
added $this in constructor test (fails currently)
added OO test (will fail currently)
Update README
* cleanup
#With "php -f file.php", file.php is unable to parse command-line #options because they are swallowed by PHP.  Use "-q" option instead to #avoid this but still supress HTTP headers.
ChangeLog update
NEWS update
@- Removed ext/dav due to obsolescence. (Andrei)
spaces after commas. all whitespace.
- Support for $var =& new foo() syntax. This allows you to use objects   which create extra references to themselves in the constructor.
Make GMP use Zend's memory functions
Add check for conversion base
Expose all timeout functions
* applied patch by Stig-Ørjan Smelror <Stig.Orjan.Smelror@lincom.no>
Applied IBM DB2 patch by Walter Franzini <walter@sys-net.it> @ext/odbc: IBM DB2 patch by Walter Franzini <walter@sys-net.it>
Pass core_globals to new inline functions
* MySQL sequence emulation using auto_increment * fixed indentation
ChangeLog update
NEWS update
Removed a fatal condition to allow for harmless user error plus some other small changes.
have PEAR::isError() not take parameters by reference for now.
- Explanation about Zend change. I'll move it to the branch when I'm happy   with the way it's explained. It's rather hard to explain it well.
This branch will become 4.0.5. New entries should only be added to the 4.0.4 area, if you merge them.
Added nextid() method to DB_common. Added lock() and unlock() methods to DB_mysql.
- new function hw_new_document_from_file()
Automatically carry over macro definitions from Apache.
added name for credits on work for Solid interface..
GD shared build fixes - should fix problem with gd.so not being linked with right libraries
close the filehandle if it is a tempfile.
Move code from macros to inline functions to ease debugging
Handle the case of no-handlers properly and make handlers a proper C "string".
No comment.
I couldn't read it in order to understand it in order to extend it :-)
ChangeLog update
NEWS update
Another attempt at fixing 8036
Windows ist ser schlecht
Workaround for these two symptoms:
changed run-tests.php to use 'php -q' instead of 'php -f'
ChangeLog update
NEWS update
Include <ext/standard/info.h> for php_info-related functions.
Noone defines PACKAGE/VERSION anymore.
Use the hardly-documented third parameter of AM_INIT_AUTOMAKE to suppress defining PACKAGE/VERSION.
Use the hardly-documented third parameter of AM_INIT_AUTOMAKE to suppress defining PACKAGE/VERSION.
@- Added extension for the cracklib library. (Alexander Feldman)
First attempt at fixing 8036
Branched off 4.0.4. This trunk becomes 4.0.5-dev.
ChangeLog update
Minor cosmetic changes.
More config.m4 fixes.
Updated config test to also work with debian pike 7 cvs etc.
Get rid of HAVE_EXTNAME. This dates back to PHP 3 where source files were unconditionally compiled. It is not necessary in PHP 4.
Add newline. Recent GCC snapshots segfault, if the input file is completely empty. Should I report this? This appears to be quite lame.
Please avoid potential buffer overflows in new code. If you deal with strings, consider storing the string length along with the string data. That will make your life easier.
Remove *.o
ChangeLog update
Beautifying of phpinfo().
Changed presentation of default values for textsize and textlimit in phpinfo(). the value -1 means "Server default"
updated documentation and configuration
changed variable names to *_class_functions
fix configure --help option name...
ChangeLog update
NEWS update
The ODBC extension looks for settings named odbc. and not uodbc.
Removed old version 6.5 code. Clinet Libraries for SQL Server 7.0 can be used  with version 6,5. Minor changes to use som Zend macros to define globals.
Add .cvsignore
Add more GMP functions, fix a couple of bugs
@ Added the is_null() function that will return true if a variable is of @ type null. (Sterling)
made gd working correct under win32 # fixes the issues when running php threadsafe
ChangeLog update
NEWS update
Added the capability to specify a different HTTP Redirection response code before the Location Header.
Output buffering was being enabled all the time - fixed
One file missing.
Added missing .cvsignore files.
AC_CHECK_LIB prints out yes/no itself.
A field of mines
ChangeLog update
Add note about an old change
Always add top_srcdir to the header file search path.
- Allow passing references which are returned from functions and new - statements to be passed by reference.
fix path operations, under win32
Update class constants before trying to get default properties.
Add a note about what a missing const specifier does mean in the context of the request_info structure.
The result of conv_z_macros and some manual conversion of "return_value.*=.*IS_STRING" constructs to RETVAL_STRINGL.
Oh man, gcc's logic is really flawed
Move build-defs.h(.in) and php_config.h to main
Kill a warning (code is correct)
update win32 extension section
ChangeLog update
Added a brief section documenting the preference of tabs over spaces. There are a few touch-ups in this commit, too.
GNU GMP - arbitrary precision nubers library
- Add bcmath to the standard UNIX build - Change a couple of malloc()'s and free()'s to emalloc()'s and efree()'s
ChangeLog update
Add get_defined_functions() and get_defined_vars().  Clean up constant() entry a bit.
ChangeLog update
NEWS update
@ Added the call_user_func_array() function which gives you the ability to @ call a user function by passing an array of parameters as the second @ argument.
Declaring variables is generally a good thing
fixed bug 7961
ChangeLog update
NEWS update
Added README on usage, and added myself to CREDITS
Very initial work on chunked output buffering.  It's really unoptimized at this time, and it can crash under some circumstances, but that's the concept...
This submission introduces two features.
Revert bad commit. # And now I'm ready to sleep..
oops, libcrypt shouln't be in the linker libs by default
- optional argument for hw_pipedocument() to specify link prefix
I forgot to commit the .dsp update...
make ctype ext compile under windows
added missing SABLOTLS_FETCH()
make genfunclist in phpdoc happy
- The name of the extension has to be fdf and not fdftk
fix libbcmath compile, updated dependencies & add libbcmath to linker options
- fixed copy and paste error
filename wildcards in a c comment were a bad idea
Adding Win32 project for libbcmath
ChangeLog update
NEWS update
changed comment to allow compilation under win32
added a "DO NOT EDIT!" header and regenerated the credits_*h files
merged ext/apache/CREDITS and sapi/apache/CREDITS
this little scripts will collect the CREDITS files from all the ext/ and sapi/ subdirectories and put them all together into ext/standard/credit_[ext|sapi].h
Run through conv_z_macros
Run through conv_z_macros and make use of RETVAL_STRING where useful
Avoid estrdup and a couple of other minor cleanups
Run through conv_z_macros
There is no Apache extension per se. Please leave this directory empty.
Run through conv_z_macros
Add ircg
At long last, import the bcmath library, by Phil Nelson
- Remove code which has been commented out for ages.
@ Put an end to BUG#4615 (kalowsky & Eric Veldhuyzen)
Hmmm, that wasn't good.
- Thanks to "Daniel Beulshausen" <daniel@php4win.de>
Pass on the exit status
Set the exit status from the return value of php_execute_script()
Return the exit status from php_execute_script()
removing '{' was certainly not intended
Don't access opt, if opt was not set.
Whitespace fix and initialize ret properly
ChangeLog update
NEWS update
some more info on the ctype extension
an experimental extension providing the C ctype function family
- The baby patch wasn't that innocent :)
Sterling's patch to make get_defined_vars() simpler and better.
Major rework of the basic api which provides:
make HAVE_FOPENCOOKIE available for other extensions besides zlib
added .cvsignore files for tests directories
fix PDF image open under Win32
Adding php.ini value to set default batch size for mssql extension
Adding new functions, mssql_affected_rows and mssql_fetch_batch. Added optional paramter to mssql_query, batchsize used minimize the memery usage during select of large datasats.
ChangeLog update
# a minor change, but still important :)
all the _GNU_SOURCE dependant stuff is now in zlib_fopen_wrapper.c so all the #define/#include workarounds in zlib.c are no longer needed
Adding credits.c to project to allow compilation.
removing compiler warning by including credits.h
fixed a compile problem with glibc<=2.1.1 (#7327, #7892) # zlib.c still produces a warning, perhaps i should move # the fopen wrapper to a seperate file to get things right # but i think i will wait for the autoconf book to arrive
- NEVER copy and paste :)
- Baby patch towards making the damn pass-by-ref work.
Revert.
Update API number
Move "replace value" logic to Zend
Add macro to replace value of zval with another value while preserving referencing structure
2nd step towards auto-credits
first step towards auto-generated credits
- This patch is broken and needs more thorough fixing.
ChangeLog update
- Try and fix the problem when sending references returned from a function by reference.
typo fix (copy/paste bug?)
*** empty log message ***
*** empty log message ***
Patch to find module dir
include checks for cal_misc.h and icalroutines.h
ChangeLog update
Added .cvsignore file.
Stopping Compile Warnings when using old GD
Persist these numbers so that they stay for the duration of the entire process
Forgot to commit the non-debug build fix yesterday...
Update SAPI modules to interface with the new TSRM. Enable thread-safety memory debugging in ISAPI when in debug mode
Add thread-safety debugging information (idea - Dmitri Dmitrienko)
Beef up debugging support
ChangeLog update
NEWS update
Import debug-level improvements to TSRM, by Dmitri Dmitrienko
Added openssl extension info
Added optional passphrase argument to openssl_get_privatekey() @- Added OpenSSL extension (Stig Venaas)
Renamed openssl_read_privatekey openssl_get_privatekey, and some minor fixes including init and shutdown functions
Reset the state, if there is garbage in an HTML tag.
close bug 7851
PHP does not care about inline at all, so get rid of this block.
Missed one section that required the addition of a new HAVE_SOLID_30 This should be correct now.
Decided not to clutter NEWS file with build fix, It is big enough already.
Corrected the spelling of verion to version, and cleaned the configuration code up a bit.  Also added in much better (read: tested) support for Solid 3.0.   Credit for almost all of the patch goes to Eric Veldhuyzen, minor modifications done (by me) to make it non-linux specific.
@ quoted_printable_decode() function is made RFC-2045 compliant. (Kir)
ChangeLog update
NEWS update
Added ext/java fix line - I should learn to use '@' correctly : )
fix ora_fetch_into to allow_call_time_pass_reference = Off; (#7838)
extname -> openssl
don't use TLS in MINIT function.
ChangeLog update
Clear idle_read_timer
Removed an unneccesary #warning which was used for testing purposes only.
Initial import, PHP program for testing if the qtdom extension is available.
Initial import, since PHP cannot be compiled with a C++ compiler all C++ specific calls had to be moved to a separate file without any php includes. It has several C functions which are used for initiating a QDomDocument and traversing it.
Initial import, contains PHP specific extensions, takes care of converting C++ QDom objects to PHP objects. This version has only one function: qdom_tree() which returns a tree of a string containing an XML document.
Autoconf configure script for qt dom, needs some more checking in the future.
Makefile source, has a fix for compiling C++ files.
Initial import, ignores standard files.
- fixed silly bug (did check for 5 arguments but expected only 4)
- Modified preg_replace() to take Perl-style $1 backreferences in addition   to \\n ones. - Modified preg_grep() to always return the results with the keys   from the original array.
ChangeLog update
Restore compatibility with old broken way
Better 0x handling - not change non-0x number behaviour
# added .cvsignore file
Changed to use Z_LVAL_PP, Z_STRVAL_PP and Z_STRLEN_PP.
Attempt at better handling long 0x-numbers, like 0xffffffff
Not using automake here either
initial - ONn
Add persistent memory handling to smart_str API
Automake is gone. No need to ignore a non-existing file.
*** empty log message ***
Made API simpler
ChangeLog update
NEWS update
fix link object # maybe it's too late already...
forgot to add...
make ingres compile under win32 # no cleanup...
added dsp for openssl win32
@- Modified preg_replace() to ignore backreferences that refer to @  non-existing subpatterns. (Andrei)
OpenSSL extension. So far it implements assymetric encryption functions.
OpenSSL checking didn't work well, should be better now. Removed check for include/evp.h, are there versions around that put it there? Recent versions have it in include/openssl.
Handle unable-to-add-new-headers error nicely
- Remove unused function
- Use typedef's for function pointers so that we can easily define arrays - of these function pointers.
initial - ONn
Update patch and add persistent connection handling
- fixed serveral prototypes - replaced C++ style comments
Add thttpd-dependent interface for maintaining persistent connections on an iterative web-server. This will be used by the IRCG extension.
More verbose error message for non-working apxs case
Add note about serialized requests and their impact
ChangeLog update
Prototype corrected.
Test, ignore
PHP_FDFTK is always != no. $PHP_FDFTK is not.
enabled shared module.
ChangeLog update
Add Apache 2.0 sapi module and sort alphabetically.
strdup private AOLserver data before inserting it into SAPI's request_info.
Update README
- Move SET_UNUSED() to header
- Beautify by using the standard #define.
RFC822 does specify two digit years, but practically every decent mail client I could check is using 4-digit years these days.
fix for #7756 and #6743 : fatal error on 'include("")' instead of warning (+ some cleanup)
ChangeLog update
Further updates to README.Zeus # Using LD_RUN_PATH to let the libphp4.so library find other libraries. # Surely there should be a better way, using -rpath? However, libtool # seems to swallow any extra -rpath options given to the compiler.
- Remove this damn thing once again.
- new function set_content() which is a workaround for bug #6457
- Note about improved domxml
- add testing for xpath
- Some more
- Add files to .cvsignore thanks to Jon Parise
ChangeLog update
- Maybe it's OK now? :)
- Undo the previous commit for fixing $obj = new foo().
- Commit experimental patch to fix the problem when doing $a = new foo()   and the constructor assigns $this by reference to other symbol table   elements. Thanks to Daniel J. Rodriguez on this one.
oops, forgot to document it :)
some changes, and added 'r' flag which generates an RFC822 compatible date string.
- fix crash when using blob_in_file mode (danny).
- Some more comments - Initial support to just include anchors into documents
- Started support for XPath/XPtr (completely untested)
Beutifying the output of configure a bit. # I promise, this is the last commit for today. =)
Remove duplicate check for xpm support.
Remove duplicates (when curl-7.4.1 is used).
ChangeLog update
add gzdeflate() and gzinflate() for handling of pure gzip-datastreams
E_WARNING into E_ERROR, Last commit (today)! I PROMISE! :-)
Added license
Alert user if they're trying to use ImageCreateFromString() with GD < 1.5.. Sorry, should've added this last commit.
- Made gd extension build when using gd version < 1.5
Add ability to find extensions by name
Will work on a more thorough implementation for mysql_store_result() after 4.0.4
Make this compile with libxml2.2.7.
ChangeLog update
NEWS update
Cleaned up a bit.
config.m4
Forgot to commit it...
win32 sapi symbol export fixes
@- In CGI mode, $HTTP_SERVER_VARS now includes all of the environment variables @  as well (Zeev)
cookie_data may also be modified...
Enable to use mysql_use_result in query functions. You may need this if you use real big queries. @- Allow user to use mysql_use_result in mysql queries (Stas)
Andi says it should be zval_ptr_dtor
ChangeLog update
NEWS update
Kill a misleading warning which is intended for old code which assumes sizeof(int) == sizeof(void *).
Use socklen_t for getsockopt
zend_hash_find() treats this argument as const, but fails to declare the function properly.
sizeof(size_t) != sizeof(int) on 64-bit platforms.
- Added myself to the credits...
add a Crypt_HCEMD5 class. This implements the same algorithm as the perl Crypt::HCE_MD5 package, and should be cross-compatible with it. It provides a secret-key based encryption algorithm possibly suitable for those who don't have mcrypt enabled.
Noted that setting of multiple headers with the same name is fixed.
(php_caudium_set_header): Allow for multiple headers with the same name.
(ImageCreateFromString) Added forgotten GDLS_FETCH() needed for ZTS.
And now the right fix - should add it still
Serialize as reference only if it's a true reference
I guess SG(request_info).argv0 and not !SG(request_info).argv0 was an intent, otherwise it doesn't make much sense.
Add support to ukrainian characters (by serhiy@society.kiev.ua)
ChangeLog update
NEWS update
Add apache_sub_req()
Make sure these are initialized to NULL
Bring phpcredits() up to date
Remove apache2 sapi module in favour of Sascha's apach2filter
We need a space after 'dnl' to comment stuff out.  Why not just delete this stuff now?
dnldnl won't work
This should fix the garbage.
Outcomment everything. Since this is an exact duplicate of apache/config.m4, it might cause conflicts.
PHP_EXTENSION_DIR is defined in build-defs.h
ChangeLog update
fix #7573 closedir() now really close the directory - used to stay open 'cause the default-directory resource was "remembered" for arg-less calls.
Now make it work too (thanks for noticing that Andi :)
Forgot to add one note. Plus some beutifying.
Should be ok to use CC here
ChangeLog update
NEWS update
Updated proto for highlight_file/highlight_string
Include header file for phpi_get_le_gd()
Include header file for php_file_le_fopen()
- Introduced ImageCreateFromString() function,   works for GIF/JPEG/PNG and WBMP ..   (Note: This built with the latest snapshot I grabbed    tonight; Derick seemed to have trouble though..) @-Introduced ImageCreateFromString(), creates an image @ stream out of eg a MySQL blob. (Mathieu)
Add some additional checks
install instructions for more webservers
use argv[1] if it's given, thanks to Bob Denny <rdenny@dc3.com>
Added extra help with library issues, and some performance tuning tips
- Add trailing \n?
ChangeLog update
fix configure..
Changed as per discussion with Sablotron folks.
*** empty log message ***
- Make the random generator work again. This patch seems to work.
Add RESVAL macros
Use V_CHDIR_FILE instead of doing the job of that function myself and added a define to disable the use of threads for debugging purposes. @Support for the Caudium webserver (http://caudium.net/) added. It's based @on the Roxen SAPI module. Many bugs have been identified and fixed. (David)
Setting no_cache causes Expires: to be send, which is not what we want.
- When mode is specified the flag is a don't care
- Missed one of the php_checkuid() places
Update NEWS
- Use CHECKUID_* #define's instead of cryptic numbers in php_checkuid() - I did not test for validity of the actual php_checkuid() calls and there - might be mistakes in the previous code.
Update to reflect the changes in the parsers/scanners
spelling. bad chuck.
always prepend Receieved: headers to avoid generating mail that looks like spam, and remove a silly comment from the sendmail backend.
Now correctly detects Pike 7.0 and use the alternative code. It also sends the number of written bytes to the done callback function.
Missed those
Maintain consistency
Added Caudium to credit line.
Changed contact information.
Added notice about Caudium websites.
Initial caudium support.
- Replace do_exit() with zend_do_exit(). - Problem reported by David Hedbor <david@hedbor.org>
Revert the patch - people don't like it
Add note
.
Update. Someone should really write better docs. =)
Const'ify part of sapi_request_info.
Namespace protect mergesort (caused conflict on Darwin).
Namespace protect dir_cmds and kill some warnings
Restrict php_admin_value to *.conf files.
Das war nicht gut.
update NEWS
Remove unnecessary variables
explicit declaration here too - sigh, way too early in the morning
oops
explicit declaration
ChangeLog update
Validators are happy now.
Updated for ZTS mode.
- Beautify
Our context's lifetime differs from the lifetime of a filter's context, so don't set the filter's context in the INIT_CTX macro.
Use Input filters for handling POST data
- Define the different possible modes for readibility and use in the rest - of PHP
- In function declerations the opening { should be on a new line
- Change some estrdup()'s to estrndup()'s
- Revert patch which seems to have caused the STOP mechanism not to work. - I'm not quite sure why this should have caused harm even if not completey - the right way of doing it.
No more segfaults.
Add line of possible XBM support to the phpinfo()
ChangeLog update
mode_t should be an unsigned_int
mode_t fixes
generalization of image handling in phpinfo
Remove unnecessary code, fix phpinfo()
Require bison 1.28
removed some bogus code
support for short comments was added to ext_skel proto files theese will be used in proto comments in the source and as <refpurpose> information in the XML docs
cosmetic changes (added some "proto"s missing in the function documentations)
ChangeLog update
NEWS update
Both RETR and STOR have also 250 as possible return value
- Complete the move to the new INI parser.  (Side effect:  at last, people   can finally have spaces and tabs in their extension statements...)
Final touches on the INI parser
PATH is not optional (we print that message, because php-config isn't in the PATH).
- Added the two constants mentioned in bug #6097 # I did not test it, because I don't have access to an Adabase RDBMS
Update to use reference-serializer too
Add support for serializing references. @- Add support for serializing references (Stas) # WDDX and shared memory functions not covered yet
Don't try to work with negative timestamps # It returns the same day as for 0, which is wrong
Remove empty temp file on failed upload
Another attempt to make it build
LTLIBRARY_DEPENDENCIES might depend on variables defined in config_vars.mk, so we force inclusion of that file before we use LTLIBRARY_DEPENDENCIES in a rule.
Make "H*" work
Remove --with-aolserver-src directive.
ChangeLog update
NEWS update
Removed INI entry for read() function, made changes to read() so it will take 4th parameter specifying whether to use the read() wrapper or the system read() function, and modified the wrapper() so that it worked (mostly) properly once again.
parse_ini_file() supports a new optional 2nd argument that instructs it to divide the directives to arrays according to the sections in which they reside
Move browscap code to the new modular INI parser
Forgot the @...
Use the new INI parser for parse_ini_str() - parse_ini_str() is now thread-safe, and supported under Windows (Zeev)
The new INI parser is showing some signs of life
Forgot this one
Generalization work
POSTs work fine
Add standard license
Allow module to proclaim compatibility with any Zend version
This is actually user-visible.
Unify handling of aborted connections
Unify aborted connection handling
Add/unify aborted connection handling
Add php_handle_aborted_connection()
New directive AddRequestBodyFilters
Some more work on the INI parser/scanner
Handle user aborts
Initial step in rewriting the INI parsing mechanism
Add Request Body filters. This is a much nicer concept than ap_get_req_body, since it is much more flexible and does not need to buffer everything in memory (PHP still does..).
Unify the names of these last 3 files...
Initial steps to move the INI mechanism to the Zend engine
update my email.
Test descriptions showed up blank, fixed.
Check also that the file isn't empty.
ChangeLog update
Moving --with-openssl to global configure, want OpenSSL for not just snmp
Allow to send secure cookies
- URL-opened files now store the HTTP response header in $http_response_header - Some layout updates
ChangeLog update
NEWS update
POST handler for my ubercool new Apache 2.0 function ap_get_req_body.
Making _php_math_longtobase() and _php_math_basetolong() callable from DLL and SO modules
added "printer" extension, to access printers under win32
New e-mail address.
Kill compiler warning.
use puts instead of fprintf in log handler. no need for a format string.
Some information about this handler
Added macros for object properties and class entry.
Looks like transient buckets are limited to 4096 bytes, so split up writes.
Add log message sapi handler.
Apache 2.0 does some funky internal caching which works for static content, but fails miserably in our context.
speling
type fixes to make compilers happy
Add some comments
Leave initializing of auth_(user|password) to php_handle_auth_data().
Initialize auth_(user|password) to NULL, if data was not suitable.
Allow strings to be passed to methods expecting primitive types.
The CGI RFC allows servers to pass Authorization data to the script, if the server did not use the information contained therein.
Handle cookies and make use of php_handle_auth_data.
Use php_handle_auth_data
Utility function for sapi modules (it is not in SAPI.c, because it relies on php_base64_encode).
bunch of changes
Allow users to specify whether they want to replace existing header fields.
- added four functions to do fulltext query
Added -m (Shows list of modules) to commandline..
Handle special queries.
Move some code to php_handle_special_queries().
Removed a warning in getaddrinfo check, not really needed
it won't work otherwise # http://support.microsoft.com/support/kb/articles/Q115/8/57.asp
Move some initialization code from php_execute_script() to php_request_startup() where it should be. AFAICT, it does not cause any problems, but please it test it with your favorite SAPI module.
added dba extension for win32, currently the dsp is only configured with db3, adding other configurations shouldn't be hard
update
Add sapi_add_header_ex, which lets you specify whether you want to add or replace a header.
use V_RENAME makro instead
Protect us from Apache 2.0's pcre-posix stuff
Remove second_arg_force_ref, defined in Zend
The type has changed to size_t.
Add session_adapt_url().
Reinstantiate single quotes properly.
Make the API more leaner (sp?) and get rid of *copy*.
Provide name of libtool archive.
Temporary fix for mac os x stuff.
An Apache 2.0 Filter for PHP, completely from scratch.
session_unset() now cleans up $HTTP_SESSION_VARS as well.
- Add V_RENAME() by "Daniel Beulshausen" <daniel@php4win.de>. - It is untested and all places which use rename() in PHP should now use - V_RENAME().
Corrected some checks for errors.
Added keygen_s2k function. Function which generates keys from passwords.
Use zend_register_list_destructors_ex() instead.
Remove the patch to register_list_destructors().
Added array_sum() function.
gdImageWBMP has some bug in it. Using the php-internal one works.
Install the new Mail classes.
add Mail:: interface and supporting classes.
__USE_GNU shall not be defined by application
it's n.a. on win32 :)
Make zlib compile again
Cleaned up.
have you ever tried to run the regression tests with error_reporting=E_ALL ? now it will run smoothly without all theese 'undefined ...' warnings
added a regression test skeleton file  plus a partintro in xml documentation template
ChangeLog update
NEWS update
Move server_filter to an extension-specific global
Adding textlimit and textsize parameters to MSSQL sections
Added new INI entries to default php.ini files.
Added ini entry for choosing whether to use the read() wrapper or directly calling the read() system call. # Some people were commenting about "oddities" in the wrapper that I hadn't # noticed before, though I've used it in many places before now..
Adding iisfunc to modules workspace
Need a global server filter for the Apache 2.0 module
@- OCIBindByName() now does better parameter-checking. (Thies)
Makes curl extension compile again plus some typo fixes.
Output function now passes the data onto the next filter in the chain Clean up some variables - bb = bucket brigade, b = bucket
Code to flatten Apache 2.0 bucket brigades
We don't need to store NUL of the key which simplifies the lookup significantly.
Woops, get rid of some crap
The start of an Apache 2.0 module
added reg. files for the pws, thanks to phil
i'll place the reg file in the win32 folder cause it doesn't really fit in this folder
Corrected prototype comments for ldap_get_option and ldap_set_option
Hopefully made some compile fixes for Solaris ("sun" is an already defined symbol on Solaris.. s_un isn't...), and corrected bugs with checking for a string by checking if Z_STRVAL_PP(ptr) == NULL instead of Z_STRLEN_PP == 0, causing segfaults when uninitialized values were passed into certain functions. @- Attempted to make compile fixes for Solaris in ext/sockets/sockets.c (Chris Vandomelen) # OK, so I have a tendency to make lots and lots of bug fixes in big spurts..
Oops, forgot to remove those .. thought I had..
Corrected some bugs dealing with compile failures (should now compile on most varieties of Linux, and should hopefully fix at least 3 of the compile errors that were discovered). Also modified read() slightly to take an optional parameter as to whether the data was binary or text so it wouldn't stop reading on a newline or null byte received. @- Made read() binary-safe in sockets.c (Chris Vandomelen) @- Attempted fixing some compile failures (Chris Vandomelen) # Hopefully someone will attempt to compile this on other systems, I # have no access to other platforms to compile it on ....
ChangeLog update
NEWS update
added missing def.
- including php.h automatically includes the PHP config file.
Made array_unique use array_type_data_compare instead of array_data_compare
Added array_type_data_compare which is like array_data_compare but compares type first. Also rewrote array_intersect and array_diff, so that the order is not changed. @- Made array_intersect and array_diff not alter order (Stig Venaas)
i'm sure this should be ibase_query :)
i can find no php_config.h on win32 :)
Save url_scanner_ex.c and don't require re2c to be installed on the release/snapshot machine.
made yaz compile under windows
Gremlins?
Config Patch for DBMaker
added bz2 and removed ZendTS (not really nedded here)
make libmysql compile under win
Removed files from Win32 workspace that were removed in libmysql 3.23
more news
ChangeLog update
NEWS update
Now checks that the library really exists even if path is specified as /usr PR: 7358
test commit
Parse quoted boundary correctly
Add explicit format string
Mention the ext/mysql/libmysql upgrade in NEWS.
Update libmysql to 3.23 version.  No major changes visible to the user - mostly bug fixes and other maintenance-oriented changes.
updated for the new sqlcli
Made ldap_connect() accept URL in host parameter when using OpenLDAP 2.x. @- Made ldap_connect() accept URL in host parameter when using OpenLDAP @  2.x. To use SSL, use ldaps://host/ as URL. (Stig Venaas)
Changing datatype to remove compiler warning
Adding type cast to remove compiler warning
Changed array_avg() to array_mean()
added array_sum() and array_avg() to TODO list
- Should lessen confusion
Regenerate url_scanner_ex.c (always) without '#line' directives for releases and snapshots. PR: 7154, 7263, 7289 # Sascha: Is this allright?
ChangeLog update
NEWS update
- Removed the shm_* aliases @- Removed the shm_* aliases, only the smhop_* function wiil be @  supported (Derick) #I'll change the NEWS file as soon as it has been rebuild
- Renamed the shm_ to shmop_ and created aliases for the old shm_   functions @- Renamed the shm_* functions to shmop_* and added aliases for the @  old functions (Derick)
Hack for #7262, not fixed yet
Use sybct for INI values.
Close bug #7325. Patches by djm@web.us.uu.net.
Remove left over ext_skel comment
Check that AF_INET6 is defined before using IPv6
fixed a mistake.  should be .
- Constant expressions which are used multiple times need to be copy_ctored
add an optional parameter to imap_sort to specify a search program that messages must match to be included in the sorted list.
ChangeLog update
modified the configure scripts to make shared extension.
- Try #2. Wasn't allowed to delete in the previous manner because we were   in the middle of an llist_apply()
Add explicit conversion from 'void *', otherwise ANSI C++ compilers will break out.
Back out circular references protection patch.
fixed logic error in the get parameters stage of mcal_list_alarms
Removed some zval_dtor calls. There were two more than needed, and I had just added two more...
Added some missing zval_dtor calls in php_fsockopen()
url_rewriter.tags needs to have " around the parameter to work.
Added destruction of return value parameter, and using ZVAL_LONG and ZVAL_STRING to set return value in ldap_get_option.
As per andi, similar names are for legacy reasons only.
corrected authors notice
Updated naming standards as per 9/12 dev/doc discussion.
ChangeLog update
NEWS update
update for Date_Calc install
Added the mhash HMAC functionality. Now the mhash function can use keyed hash by added the key as an extra parameter to the function.
(ibase_execute) - Oops, trying to free a little bit too much. Maybe fixes 		  #6721, #7117, #7278.
spaces to tabs. do we have a standard on this?
fix imap_fetchstructure(). msgindex is not valid if we're using FT_UID; always use Z_LVAL_PP(msgno) in the actual c-client function call.
Added ldap_get_option() and ldap_set_option() functions @- Added ldap_get_option() and ldap_set_option() functions (Stig Venaas)
replace fixed-size buffers for username and password with dynamically allocated strings in the MCAL extension.
Removed some redundant convert_to_*_ex() calls. Edited some whitespace.
cvs commit message disappeared.
*** empty log message ***
Added support for SAP DB
Initialize tags properly.
Back out ws changes
.
fix indentation
ChangeLog update
Aha, Sascha made a mistake!  ;) Make this thing compile again without trans-sid
make compile again
Enable users to set the HTML tags to rewrite through a configuration directive
include php.h to have VIRTUAL_DIR defined this should fix bugs where the ttf functions won't find the font in the actual working dir # like under windows :)
added a option to use the truetype string handling function in gd.\n it is useful for japanese because the truetype string function in gd supports some japanese encodings.
fixes bug 7055 & 7235
ChangeLog update
NEWS update
- Increase op_array size faster and make eralloc() it in the end to save   memory.
Added Satellite to list of extensions @- The Satellite CORBA client extension is ready for use (eriksson@php.net)
Updated build instructions, changed E_ERRORs to E_WARNINGs
PEAR DB: added DB_ERROR_VALUE_COUNT_ON_ROW
PEAR DB: added DB_ERROR_NOT_LOCKED, gave DB_common::raiseError an optional "nativecode" parameter.
ChangeLog update
NEWS update
We don't support FreeType 2 - let's stop pretending we do
Missed this from last commit.
config.m4
- Add another patch from Sterling.
- Preliminary commit of Sterlings get_defined_functions()/get_defined_vars   functions
ChangeLog update
- Only run startup() if ZEND_EXTENSIONS is defined to 1.   This fixes a link error on platforms which don't support libdl
trivial output change # someone urged me too
*** empty log message ***
- Make increment of "" become "1"
post handler registration done right (never use emalloc in an extension MINIT function)
now it works for me as CGI and APXS, with or without --enable-debug ...
step to 4.0.4-dev
compile fixes & update of win32 dsp
ChangeLog update
fopen wrappers cleanup   - comfiguration is now done by an ini parameter     instead of a compile time option   - the implementations of the three standard wrappers     now live in seperate files in ext/standard   - the compiler is happy again, no more warnings
Ignore trailing slashes
fix make install for PEAR. (bug 7109)
I have a dream...
forgot this one yesterday, fdfdata.[ch] is no more ...
Let strtr() use smart_str to reduce complexity
ChangeLog update
NEWS update
Rewrite php_str_to_str using the smart_str API.
Move structure definition into its own file, so that public header files don't need to include the complete source code.
added generalized SMTP code todo
removed fdfdata.h
removed fdfdata.c
@ - POST handler for Adobe FDF format (Hartmut) the FDF handler is now working and totaly living in the fdf extension, no more special code in main is needed
@ -read and write .gz-files transparently on glibc based systems @  using the 'zlib:' fopen wrapper (Hartmut)
This patch didn't make it for 4.0.3...
fixed some includes and removed an unneeded file.
corrected typo
Add session_write_close(). This is primarily intended to enable script writers to release the lock associated with the session lock before the request finishes.
Provide basic auth info to scripts.
Don't use 'new' symbol
NEWS update
*** empty log message ***
Added mysql_escape_String()
*** empty log message ***
Remove conflict
- Commit Kristian's PHP 3 patch to PHP 4. Kristian I hope it's also the   same here.
Update version
Go with 4.0.3
Corrected a wrong include
Added support for Ovrimos SQL Server.
Add zend_hash_merge_ex(), for selective merging
proto typo fixes
added protos
avoid giving the impression that they fix the security bug by upgrading...
Old PostgreSQL fix I forgot to commit, and NEWS consistency update
added missing protos
added some missing protos
protos fixed
added sablotron extension
make windows compile
ChangeLog update
- Reserved the patch # Please check if it works, as I'm not be able to test it # Blame CaPS for this one :)
- added optional argument pdf_show_boxed() to determine if text is   actually shown or not.
- Made ora_close return values like it should (thanks to james@php.net and   mathieu@gginter.net)
revert patch. Sablot won't build anymore, at least in combination with zlib.
I SHALL NOT TOUCH A RELEASE CANDIDATE! I SHALL NOT TOUCH A RELEASE CANDIDATE! I SHALL NOT TOUCH A RELEASE CANDIDATE! (previous patch reverted)
added support for GNU-specific domainname field in uname
No comment on this, so I'm guessing it's okay.
ChangeLog update
Add File_SearchReplace class from Richard Heyes.
more cleanup of info code
only beautifying
ChangeLog update
NEWS update
Move static declaration to source file.
ChangeLog update
Removed obsolete entries from php.ini.
ChangeLog update
- News
- Add calendar to default Win32 build.
- Add FTP extension to default Win32 build
- Update link
- Remove old dsw
Get ext_skel working again
- Clean-up original code and add to NEWS.
Updated email address to reflect my php.net address. I am no longer associated with Plexus InterActive (my plexmedia.com address) so the old address is no longer any good.
- Updated included_files() also for plain include()/require().
- List entry types should be true globals.
Add more missing protos and make folding style closer to mysql module.
ChangeLog update
Now it really checks that libxml version is >= 2.0
Use ZEND_DECLARE_MODULE_GLOBALS instead of equivalent #if ZTS/#else/#endif construct.
Ignore close tags and use unsigned char type.
* changed Andi's "testdirname" into a real regression test # Andi, could you verify that the expected output really # is correct?
ChangeLog update
typo
#include "ext/standard/php_string.h" to get php_memnstr().
- Package RC2
- Add dirname() test. Don't have time to create a real regression test
- Move #define to .h file
ChangeLog update
NEWS update
Add --with-imap-ssl to support SSL'ized imap library in RH7 and others @Add --with-imap-ssl to support SSL'ized imap library in RH7 and others @(Rasmus)
- Change zend_extension_api_no
- Now really fix it.
- Update NEWS
Clean up the alignment of configure --help output
- Aiming for thursday to release 4.0.3
- Darn file is needed for Windows. Maybe it should be called   php_version.w32.h?
- Any reason why php_version.h is in the CVS? I'm removing it so if I'm   screwing something up scream *now* :)
forgot that a while ago...
fixed unresolved externals. # it compiles fine now, and php loads the extension fine # but there must be definetly something with the paths # cause mcrypt doesn't want to load any alogrithm
*** empty log message ***
Tiny change in copying of buffer.
ChangeLog update
NEWS update
Adding note about having to make install if you do not have apache already installed (IE there is no apache dir to copy httpd binary to)
- Remove unneeded IS_SLASH() definition.
@- Added the shmop extension. It allows more general ways of shared memory @  access. (thanks to Ilia Alshanestky <iliaa@home.com> and Slava Poliakov @  <slavapl@mailandnews.com> (Derick)
It seems these entries were truncated in my commit, perhaps it was due to the multiple NEWS entries in the same commit.
ChangeLog update
NEWS update
added filepro & snmp
move have_snmp to the dsp already
snmp win extension
.
uses php.h define
- Cleanup error output
- Cleanup output functions
- Cleanup some output functions
added dsp for the filepro extension
made win32 compile
removed zendts.lib from link options
cleanup
fix not producing valid extension
leftovers.
Buncha changes, generally makes the module more stable and removes unnecessary (as of Sablotron 0.44) workarounds.
install Benchmark/Iterate.php
@ Added the ability for CURLOPT_POSTFIELDS to accept an array of HTTP post parameters. (Sterling) @ Added the CURLOPT_HTTPHEADER option that allows for the posting of HTTP headers to a remote site from cURL. (Sterling) @ Add the curl_error() and curl_errno() functions. (Sterling)
ChangeLog update
.
Return SUCCESS from write handler, if vallen is 0.
UnixWare defines shutdown to _shutdown, which causes problems later on when using a structure member named shutdown. Since this source file does not use the system call shutdown, it is safe to #undef it.
corrected lines for Solid 2.3 systems after some advice from users, please test...
Don't try to serialize references.
Added clean up code for persistent connections to avoid some problems with autocommit.
- Another has optimization/fix like the hash_copy one from earlier on
a little cleanup
added tsrm dir to include path
removed ignoring msvcrt(d) libary
major cleanup # but still doesn't work for me
@- Changed ext/db not to be enabled by default (Jani)
Having odbc_tables() and odbc_columns() match the documentation with parameters optionel from the right
Make hash_copy call copy constructor on a real copy, not on a temp
move the timer class to Benchmark/Timer.php, and add it to Makefile.in so it gets installed.
Removed profiling_information() in favour of a more generalized approach with get_profiling().
Line seems to be missing and causing configure test failures for other extensions.
Hopefully converted all TABs to SPACEs
Added PEAR/Timer class for timing script execution and generating profiling information. This class is based upon a concept by Allan Kent shown in his article on PHPBuilder.com
- Remove zend_gcc_inline.c
ChangeLog update
complementary PHP patch
Don't convert to BSD-style Makefiles
Automatic conversion might cause interpretation of 0xff as EOF, so we store the result in an object of type int first.
Recognize single quotes around cdata.
Clean up STR_CAT macro (it is still ugly)
Move php_memnstr to the header file, so that the function body is available in all compilation units (note the static linkage).
correct the problem configure script doesn't output Makefile as shared extension.
fixed tsrm dir, little cleanups
add some new and old stuff
removed redefines
cleanup, added configurations for ssl as well
cleanup
added tsrm dir to include path, and release_ts_inline to lib path
Build compat bridge for makes which support only the BSD .include command.
Remove --enable-c9x-inline option. We now use a syntax which is compatible with all compilers by providing the function with static linkage in every compilation unit.
Unify memory allocation in smart_str functions
Remove superflucious variable
#include "SAPI.h" once
Cleanup
Add URL support for GD
Add protos from sybase DB Library.
Move extension startup further down the startup sequence
ChangeLog update
No more empty '-l' caused by this extension.
Small fix to the literal IPv6 parsing, now stops at first ] after [
Parsing of URLs with literal IPv6 addresses, see RFC 2732 @- IPv6 support in fopen (one can access IPv6 ftp/web servers) (Stig Venaas)
Revert controversial patch
ChangeLog update
added mysql_fetch_assoc.  Acts like mysql_fetch_array used to.
This was missing..
Cleanup SCANNER_DEBUG and don't NUL terminate work buffer
Use emalloc and friends. Since we reuse all buffers, this does not affect the speed.
Remove this pseudo optimization from the previous rewrite.
Another 5%-10% speed increase achieved by
le_link and le_plink are no longer part of the sybase_globals.
Add support for URLs containing NAME info (for scrolling; #name).
Deactivate E_NOTICE message on gc
Rename prototype to currently used name. These stupid names will go away once the transition periode ends.
s/url_scanner.h/url_scanner_ex.h/
Make the new url scanner the default.
2nd Rewrite of the main scanner engine. This version is cleaner and faster.
ChangeLog update
This fix prevents adding an empty -l to LIBS
fix unresolved externals
Reduce the amount of copying in the mainloop. We copy tag/arg only, if we need to preserve them for a new loop iteration (after we leave mainloop). Otherwise, we can just let them point to the work area.
Revert part of last commit. I'll refine it later.
- Change to Z_BVAL macro
- Add Z_BVAL* macros
Another speedup by avoiding string copies.
Remove nextiter label
s/DEBUG/SCANNER_DEBUG/. "Convert" one macro to inline function to be more consistent. Also use continue.
Kill warning
The rewrite was completely authored by Hartmut
(Zeus-specific) Don't GetServerVariable() for vars which Zeus doesn't use
Remove unnecessary include directive
Don't restore timestamp on internal_functions.c, otherwise rerunning configure will cause config.status to be run again during make (due to the rule in main/Makefile.in).
Add new URL scanner. This version is up to 20% faster. It will be enabled by default once I'm sure that it works in every case.
*** empty log message ***
ChangeLog update
#tiny formatting fix
let windows build with trans sid
ChangeLog update
Made get_included_files() work again, in somewhat different way
Add empty string checks to add?slashes
Set filename even on recursive include
ChangeLog update
- Add TODO
Thought that I had just committed something really stupid. On closer inspection, realized that the proto comments for chown and chgrp were reversed. :) I did not realize this and had only fixed chown previously
trivial change corrected mistake in proto comment for chown fold
ChangeLog update
Changed assignment in read() to be more sane.
Remove CVS conflict. Zeev, I assume you wanted context inside the globals?
Indicate the Sun's JDK 1.2.2 now works...and complete a sentence.
ChangeLog update
Corrected memory leak in read().
- Use IS_ABSOLUTE_PATH() so that this will work correctly under Windows
- Time to remove these two.
ChangeLog update
NEWS update
Added prototypes for socketpair() and shutdown(), and corrected an obvious bug in socketpair (causing it to not return the created sockets to the PHP script.)
- Added ftp_exec to the ftp functions (thanks to <jhennebicq@i-d.net>) @ Added ftp_exec to the ftp functions (thanks to <jhennebicq@i-d.net>) @ (Derick)
Create module info function.
Changed the php.ini examples to match the names in the source code.
Really fix the de-allocation.
- a comma sneaked in before the java extension - added the java configuration section #can you please add the setting for *nix as well?
added note about odbc support and changed to the appropriate names of the windows extensions
PEAR:  * added $debuginfo parameter to PEAR_Error constructor  * put last query in $debuginfo from DB_common::raiseError() @PEAR: add last executed query as debug info in DB errors (Stig)
PEAR:  * show what's going on when PEAR files are installed  * allow multiple modes (or'ed) in PEAR_Error @PEAR: allow multiple modes in PEAR_Error (Stig)
- The Sprit of PHP is to have descriptive function names and not   necessarily short ones. Maybe we should have some FAQ for this?
ChangeLog update
NEWS update
updated some functions'name using obsolete name convention.
Thanks, Adam
@- Made the Sybase CT module thread safe (Zeev)
- Made eval() and several other runtime-evaluated code portions report the   nature and location of errors more accurately (Stas)
Make compile_string() accept a description of the code
Forgot to update proto.
@- Added second argument to array_reverse() that indicatese whether @  the original array keys should be preserved. (Andrei)
reversed chomp alias addition as per Andi Gutmans' request
# missed proto comments
Clean up htmlspecialchars/htmlentities inconsistencies. @Clean up htmlspecialchars/htmlentities inconsistencies. (Rasmus)
added chomp() alias for chop() for us Perl purists.
Make parse_str always register globals with 1 argument and never - with 2 arguments
A quick attempt to make parse_str($str,$arr) not register globals.
- Always use V_* macros even if logic seems to be only using fullpath.
ChangeLog update
NEWS update
@PEAR: renamed DB_GETMODE_* to DB_FETCHMODE_*, added setFetchMode() @      in DB_common to set the default mode, added some MySQL tests (Stig)
- Renamed functions so that this extension finally starts to follow the   recommended naming scheme of PHP.
- Windows and UNIX compile fixes
- Get rid of stuff which is already done in php.h - More can probably be removed as the code doesn't use lots of sys calls.
- Remove #if 0 code
- Add config_common.h to dsp
- Move php_open_temporary_file() out of file.c
Kill a warning
Add proper struct sockaddr * casts and make use of memcpy/memset ('coz we don't provide any fallbacks for bcopy/bzero).
- Added functions pg_putline and pg_endcopy (thanks to Dirk Elmendorf   <delmendo@rackspace.com>) @ Added functions pg_putline and pg_endcopy (Dirk Elmendorf)
Solaris-readdir_r-wants-large-buffer fix Libc5-readdir_r workaround
Libc5-readdir_r workaround
- Forgot to create extended info in include()/require() call
- Testing 1 2 3
- Testing 1 2 3
(PHP parse_str) ParameterPassedByReference() check is not necessary.
Add additional parameter to parse_str for saving result (thanks to John Bafford <dshadow@zort.net>) @ Added second parameter for parse_str to save result (John Bafford)
- Should fix compile warning
ChangeLog update
NEWS update
php4ize a bit. fix a little bit of grammar.
Make unpack("H") work like in Perl
Allow require_once to take expressions, just like require
Try once more to remove dups
Test commit - weed out duplicate messages
A tiny fix to the getaddrinfo check
refining getaddrinfo check further, checking that struct addrinfo is there
@- Added the pathinfo() function. (Sterling)
@- Updated sybase_ct module and its sybase_query to use high performance API. (sybase_query) Use high performance API in sybase_query. Will work on the others later.
Use new Zend API stuff.
ChangeLog update
NEWS update
Added IPv6 support to php_fopen_url_wrap_ftp (EPSV and php_hostconnect())
fix typo
Update NEWS
check the range of message numbers in imap_uid.
Update NEWS
Don't use unsafe sprintf()
More security-related (control) patches: - Avoid displaying errors during startup, unless display_startup_errors is enabled. - Implemented post_size_max limit.  Defaults to 8MB. - Implemented file_uploads on/off directive (defaults to on).
More restrictive getaddrinfo check, better not find it than breaking builds
Check for mkstemp()
Security related updates: - Introduce php_open_temporary_file(), in place of tempnam().  Still   needs testing under UNIX (mkstemp()), works reliably under Windows now. - Reimplement the mechanism for unlinking uploaded files at the end of the request   (was it ever tested?).  Files moved with move_uploaded_file() will not be unlink()'d   again, to avoid (albeit very unlikely) race conditions.
@Added a more configurable error reporting interface to DB. Added a more configurable error reporting interface to DB. Also added some more tests, and moved the DB tests to pear/DB/tests. #Usage example that prints and exits on every error: #$dbh = DB::connect($dsn); #$dbh->setErrorHandling(PEAR_ERROR_DIE); # #Example with plain callback function: #$dbh->setErrorHandling(PEAR_ERROR_CALLBACK, "errorHandler"); # #Example with object callback function: #$dbh->setErrorHandling(PEAR_ERROR_CALLBACK, array($obj, "errorHandler")); # #Handler functions/methods are called with the error object as a parameter. #
* compile fix
ChangeLog update
* don't require "POST" section to be present (TEST, FILE and EXPECT   are enough)
Implement move_uploaded_file() (untested)
is_uploaded_file() is probably a better name.
- Implemented is_upload_file()
Restore the headers_only test to the centralized SAPI startup.  If necessary, it can be overriden in the activate() callback.
Don't trust snprintf return
Never trust snprintf return value
Changed // to /* */ comments.
Since we don't allow parameters for syslog, we shouln't pass the string as format
- Add another ..\ to the TSRM search path
- Add TSRM to the apache workspace include path
- last parameter of pdf_get_parameter(), pdf_get_value() optional - fixes to make it compile with sun cc
ChangeLog update
NEWS update
- The mcrypt extension also works with 2.4.4 since php 4.0.2
Better IPv6 checking
- Converted __string_value() to toString(), since the former is obsolete. - Made sure DB results are freed where necessary. - Made DB::getAssoc() use $params if passed. - Implemented DB::getAll().
Wrap long lines.
-
- Smarter detection of MAXPATHLEN
- Get rid of build warning on Windows
make ZTS mode compile
Send $HTTP_POST_FILES to the right place
ChangeLog update
- Centralize some configuration stuff - Use inline in my strtok_r implementation
- Save two lines
Unless overwritten, default to no optimization in debug mode.
4.0.3-dev
Add TSRM include dirs
Convert some more "complex" expressions manually to Z_* macros.
Rename symbols whose first character was an underscore.
Convert to Z_* macros
A little script for converting source files to the Z_* macros
fix #6552 & #6577 thanx to Blake Schwendiman" <blake@intechra.net>
deleted unnecessary defines i also plan to let windows build with crypt() support
added LIBGD define # what's with the 'PHPAPI' on line 274 in gd.c, should it get exported? # it currently breaks the windows build
fixed debug build and removed dsw
fix build
little fix for the debug extension
ChangeLog update
NEWS update
Why make it more complex than necessary?
Now it should not crash, though still leaks # I'll continue with it tomorrow
This fix wasn't quite right and is no longer necessary after the recent php_ini optimizations
broken logic fixed.  I'm getting old
Try to fix session INI variables handling This should also fix #6538. # This code gets really hairy, I do not like it, # but it's the only working thing I could come with. # If original creator reviews and cleans it up, it'd be great
More fixes fo ini_ handling functions
str_repeat() should be able to handle multipliers of 0 gracefully, IMHO ... Hope no one disagrees. :)
- back out unneeded patch (danny).
- Commiting Sterling's new multi_convert* functions
using emalloc and efree, instead of malloc and free
Add EscapeShellArg() function which turns a b into 'a b' and a'b into 'a'\''b' @Add EscapeShellArg() function (Rasmus)
renamed hostconnect() to php_hostconnect()
using the new hostconnect() for the http wrapper
Added check for getaddrinfo()
hostconnect now supports IPv6 if getaddrinfo exists, and also tries to connect to all addresses of a host before giving up. It should also be thread safe when using getaddrinfo.
Missed the Zend..fixed.
Add: 	Support for multiple processors (re-using the old one). 	Support for basic functions when a processor is in use.
ChangeLog update
NEWS update
This should fix the multiple-line problem.
Protect arrays as well.
Add the session.use_trans_sid option to php.ini file.
@Add a php.ini option session.use_trans_sid to enable/disable trans-sid. (Sterling)
Prevent exploit in [tmp_name] as well
- remove a memory leak warning and fix a crash when tempnam()   failed for some reason (danny).
3rd time's a charm
update NEWS
Include "php.h", otherwise we don't have access to the PHP and autoconf macros.
Quick-fix for the file upload security alert @Quick-fix for the file upload security alert (Rasmus)
- This shouldn't have been commited.   There are quite a few modules which are using VIRTUAL_DIR. I don't think   this should be happening.
- Added macros
- Found my bug and managed to move the V_* macros to TSRM
- Remove two tabs
Convert 2 internal functions to follow naming conventions. Revert small patch made earlier
ChangeLog update
NEWS update
oops.
This makes flex and bison not to add those #line directives which cause trouble with some compilers.
If the user wants to use more than one handle reuse the old handle.
- Increase buffers of output buffering to 40KB and 10KB increments which   makes more sense when web pages are typically like 10KB-20KB.   I think it would be best to change the reallocation algorithm at least to   redoubling when it's full instead of incrementing and possibly use   a data structure similar to Zend/zend_static_allocator which uses memory   blocks and not realloc().
- Before removing php_virtual_cwd.[ch] #if 0 them to make sure nothing   is broken by this.
- Remove php_virtual_cwd.[ch] from Windows project
Added timeout argument, but not used yet
- More TSRM work
- Add new files to TSRM windows project
- Make TSRM work on Windows.
- Move to virtual cwd in TSRM
- Move virtual cwd to TSRM.   In the least this still doesn't work on Windows.
Make gcc happy
Just when you got something working they decide to change the API on you :-).
ucd -> sablot.
@-Add the Sablotron extension for XSL parsing. (Sterling)
Remove deprecated call-time reference
Added network.c
To be included by code using functions in network.c
Network related functions, only for internal use by other PHP code. Tries to hide the details of address families/protocols, and to reduce duplication of code.
Remove deprecated call-time reference
tests look for skipif.inc, so add it
ChangeLog update
NEWS update
- Remove another TSRM->Zend dependency
@- Added support for an optional output handler function for output @  buffering.  This enables transparent rendering of XML through XSL, @  transparent compression, etc. (Zeev)
- Revert change of defining TSRM_WIN32 in dsp
- Defining TSRM_WIN32 in each and every dsp sucked. Revert this change
- Get rid of unused code and stop including PHP's win95nt.h
- More Windows build fixes
Unitialized variable causes trap on Windows
- indent before someone shoots me
- Change TSRM_OTHER macro to TSRM_THREADS as it should be only to check   for threads
- Make TSRM compile stand-alone again
- Define TSRM_WIN32 in Windows dsp
- Use TSRM_WIN32
Allow TSRM to be built on Windows platforms
ChangeLog update
NEWS update
# corrected my e-mail address
- Initial submission of CORBA extension for PHP: Satellite
@- Added support for user defined 'tick' callback functions. This helps @  emulate background processing. (Andrei)
Extend HTTP headers for private-caching and add a new PHP function session_cache_limiter.
s/PATH_MAX/MAXPATHLEN/
Speed up standard php encoding function and add new php_binary serializer.
Hopefully last round of fixing varargs use.
Solaris/x86 insists of having a large buffer for storing the result of readdir_r(), otherwise it will segfault.
ChangeLog update
NEWS update
- This should fix the performance problem with Release builds
- Support for always building TSRM into PHP
- Always include TSRM in PHP build. This will enable us to move virtual - cwd to TSRM. - BTW, if I comile with --enable-experimental-zts not from php4/ but from - php4/cgi (ran ../configure there) then the build doesn't work also b4 - this patch.
* all tests should pass now (expect for the interbase stuff that I haven't   had the chance to test)
*** empty log message ***
- Remove support for __string_value() in print $obj
- Remove redundant IS_SLASH - Reverse config.w32.h patches - Use IS_ABSOLUTE_PATH() in one place in fopen-wrappers.c
Attemt to fix a lot of bug reports (5582,5614,5633,60,6181,6202) on crashes with php and mssql server.
- Change license of .c and .h files of TSRM. It's still not the complete - text like in the PHP headers because we don't have it on the web yet but - it should be enough to allow Sascha to touch TSRM :)
Added detection of Netscape LDAP SDK 4.1
Make main.c compile again
removed some NSLDAP #if's giving more detailed error reporting
Safer shutdown process.  Continue to shut down even if we bail out in the middle of a certain part.
Safer shutdown process
Made ingres extension use --with--ingres instead of --with-ii. Andi actualy changed only the help line.
ChangeLog update
updated with db and mhash
dsp for mhash # guess i'll have to add some readme's soon...
should be easier when compiling the modules
dsp for the db(m) extension
- Missed a space
This is no longer relevant...
- Truly fix varargs handling - the current situation was a sure-fire crash in most platforms   (the older code worked, even though it didn't compile well for some very odd reason, probably   a compiler bug;  The new code would cause PHP to crash if both display_errors/log_errors and   track_errors were enabled)
more info for phpinfo()
Remove single quote from HTMLSpecialChars() ... use addslashes(), htmlentities(), strtr() instead.
Removing placeholder.
* added regression tests for the XML extension
ChangeLog update
NEWS update
Start on 4.0.3-dev. [placeholder] in NEWS is for automated nightly NEWS file update script, it'll be removed after the first entry is there.
- To configure with ingres should be --with-ingres and not --with-ii - Changing it for 4.0.2 so that we don't have backwards compatibility - problems later on
- Close NEWS file for release.
Go 4.0.2
- Update Zend version.
Set SG(request_info).path_translated to the path of the main script.
fix var_dump()s "}"-indention
@Added PHP API for Zend's ticks Added PHP API for registering tick functions.  Ticks is a per-instruction callback in Zend that allows us to implement cooperative multitasking within PHP.  Example:
* Added "test" make target so you can do "make test" in any directory. * Added copyright header to run-test.php
All (three) current DB tests pass.
Add reflect.java to the list of java classes to be compiled
ChangeLog update
* renamed toString method to __string_value
- Change spaces to tab
- updated on new zend_api
- fixed prototyp
Missed a couple of center attributes
I said I had not _tested_ this on windows, didn't I? :-)
ChangeLog update
NEWS update
Some minor cleanup to make W3C's tidy validator happy
Compute absolute path to script
sizeof(old_cwd) evaluated to sizeof(char *) after last commit, so old_cwd was not set correctly.
- Use do_alloca()/free_alloca() for old_cwd. This will ensure speed in - non-ISAPI environments but in ISAPI will use emalloc()/efree() to save - stack space. MS only gives us 10KB those bastards.
- Reverting Sascha's patch although I don't like doing these kind of things - but as it is Sascha who has reverted a zillion patches I don't feel that - bad about it :) - The patch is morally incorrect and it actually also has a crash bug which - I won't point out because it shouldn't be there. - SG(path_translated) should be set by the SAPI module correctly and if it - isn't the SAPI module should be fixed and not add code to PHP. There is - enough special case code in PHP and I would like to clean it up and not - add more. - Last but not least, old_cwd takes 4KB of stack space. We should probably - malloc() it because in ISAPI we only have 10KB of stack space.
undid the undoing of Sascha's last commit
@PHP 3 regression testing framework re-born (Stig) Took the old PHP 3 regression testing framework and rewrote it in PHP. Should work on both Windows and UNIX, however I have not tested it on Windows.  See tests/README for how to write tests.  Added the PHP 3 tests and converted most of them.
@Added php_uname() function (Stig) Added php_uname() function.
Initializing new_path once is enough
If a SAPI module does not pass an absolute path as primary_file to php_execute_script(), we will now change the filename to point to the absolute path.
Export IS_ABSOLUTE_PATH to the outside world.
Real fix for this rule.
- This should be more efficient. - Post 4.0.2 it's time to move the whole opened_path and virtual stuff - to emalloc() and friends including some alloca() improvements where - possible but I don't want to break anything before
- Remove some unused stuff.
- Test commit msg. This is Andi and it seems to come from Zeev.
- Forgot to fix non-ZTS CHDIR_FILE macro
- Try and fix problem with opening wrong file.
Taking responsibility for the IMAP and MCAL extensions, so there's at least a point of contact.
fixing the license header and updating some prototypes/variable names in the mcal extension.
Remove obsolete note about Makefile.am
Refine PHP_STRLCPY comment
newtype has a length of newlen+1, 'len' refers to the length of *mimetype here.
Add PHP_STRLCPY macro. This macro should be used in new code instead of strlcpy/strlcat which are intended for fixing broken code.
ChangeLog update
updated with cybercash and dotnet
added sam's readme and played with the directory's
dsp for cybercash
News about ldap.c change to allow building with OpenLDAP 2.0
Makes it work with OpenLDAP 2.0 and reduces number of ifdefs
- Don't define this function in non-debug mode
Advise people to use error logging instead of error displaying on production web sites
- Also change constants. Note: PHP tries to make names intuitive. - PHP extensions don't necessarily need to use the exact C counter part, it - should be easy to read and not be short names such as II_*
- Asked the author a long time already to change the function names to - something which won't take up all of the ii_* names (not verbose enough). - I'm doing it myself now so it really has to be checked as I can't compile. - Changed both the function names and INI parameter names.
mkdep.perl was replaced by mkdep.awk
Add ***EXPERIMENTAL*** Zend OO Extension support for Microsoft.Net
ChangeLog update
NEWS update
added the ifx (informix) extension
updated dsp to build with custom build step
lets keep it in one dsp
Copyright modification.
Use request_uri as PHP_SELF. decodedurl also includes the query string.
Use SAPI' register_server_variables hook.
php_register_variables(.. ELS_CC ..)
Add dummy depend: target
Make proper use of SAPI's register_environment functionality.
ChangeLog update
Add autoconf check for awk and use proper macro $(AWK)
NEWS update
Add new depend rule to rules_pear.mk and install mkdep.awk.
Remove old .cvsignore file
@Added ob_get_length function (Stig) Added ob_get_length() function (returns size of buffer)
compile fix (RedHat 6.2)
prefer -gt to -lt, and dropped the version number to 2 instead of 3
Don't distribute buildmk.stamp to the end user. Otherwise, buildcheck.sh won't be run on the user's system, when they try to use buildconf.
- Revert patch from 9/7/2000 which seems to have broken unset(). - I hope what made me do this patch doesn't appear again.
Update .dsp
Remove bogus commit that made DB::DB() an alias for DB::connect()
updated dsw with fdf and gd
added the gd extension - see the comment! # configuring the gd extesion is currently a mess. # currently its configured with jpg, wbmp, png and ttf # maybe we should think about moving that stuff to the # config.w32.h or to a seperate gdwin32 header
dsp for the win32 fdf extension
deleted a few unnecceasary defines and added the Release_TS_Inline path to the libpath
Andi's suggestion.
beautify
More complete set of (C) notes
Script for replacing the copyright messages
These scripts are not in use anymore. RIP.
builddir is used by the Unix build framework.
Small speedup
Speed it up by moving the two sub's into the main loop.
Create dependencies using an awk script. Works much nicer in vpath environments.
Typo
Some crappy makes don't handle the .PHONY target correctly.
-Add getCode() method to PEAR_Error -Correct license versions + My Address for DB/* mods -Correct ibase module -Javadocize File_Find -Add a optional constructor to DB that passes it on to DB::connect()
ChangeLog update
ext/icap is obsolete.
added curl, dbase and gettext to the project
win32 projectfile for the curl extension
Add note about --with-kerberos
win32 projectfile for the dbase extension
win32 projectfile fot the gettext extension
changed the output directorys from the windowsbuilds
changed the intermediate output dir, to make it a bit cleaner
phpextdist is located in $(srcdir), so don't try to install it from $(builddir).
Changed long to int.
formatting.
-lt is preferred over \>
Make parsedate build again # I do not really know what's the problem with const, but I do know # it doesn't compile when declaration and definition don't match
A little condensing,   Add an additional check to make sure port is specified with   AF_INET in connect().
Corrected bugs in php_if_connect() to make it work properly -- needed to run htons() on the port number provided, and needed to perform DNS lookups properly and store the results as expected.
ChangeLog update
NEWS update
cleaned up the PHP/SOLID integration code, and corrected some minor assumptions on my part for the 3.5 EE systems.  also removed a series of warnings on builds within the ODBC functions, and corrected header order.  include of the SS_LINUX and SS_FBX defines, needed to make solid headers completely happy with the wchar.h situation.
'const' is problematic in code in the final section of a Bison file (Bison defines it away)
Adding ..\..\..\bindlib_w32 to include path
@- Added ability for each xml_set_*_handler() function to take the @  array($obj, 'method') syntax for the handler argument as well @  as the normal function name. (Andrei)
@- Updated array_walk() to be able to accept array($obj, 'method') @  syntax for the walk function. (Andrei)
some fixes
added cpdf and domxml
projectfile for the domxml extension
- Remove new libmysql files
- Try and revert libmysql for 4.0.2
projectfile for the clibpdf extension
added interbase, pdf and sybase_ct
minor fixes
Removing php_realpath.c from win32 project
projectfile to build the sybase_ct extension
projectfile to build the pdf extension
little fixes
Interface for 'raid' files (ont in use by PHP)
New files for MySQL 3.23.23 client library. New files are for qouting using different character sets.
Disable php_value and add note about reliability
Add note about need to fix INI system
AOLserver CVS uses PREFIX.
Set file_handle.opened_path to NULL
Add note about installing PHP on web servers other than Apache.
- Cleanup imagetransparent in the GD library
ChangeLog update
Slight Darwin tweak from Fred
updated project to work with readdir.h rev.1.5 from apache cvs
updated the projectfile to build the aolserver and nsapi modules
added the vs6 projectfile for the aolserver
thttpd/PHP verified to run IMP 2.2.0 without any hitches.
NEWS update for file-function segfault fix.
Keep servlet working...
Remove extra tab
Make the DB classes work with call-time pass-by-reference disabled.
Get rid of php_global.h and the associated data types UINT4/_POINTER.
The macro CONVERT_TO_WIN_FS is not used anywhere.
Cleaning up some mess
- added function fdf_set_javascript_action()
- Reversed last 'fix' # Sascha suggested that it must be corrected in wuth mcal
- Remove old/deprecated version of expand_filepath
Delete this suggestion as it was leading newbie users to use this file without understanding what they were doing.  Experienced users will find and use this file on their own.
Move thttpd_php_init() call to httpd_initialize().
ChangeLog update
NEWS update
- Change PHP_SEPARATOR to PHP_DIR_SEPARATOR
- Checking for ".." isn't enough. include_once() could mess up even if both - names didn't include ".." but were referenced different directories which - were symlinked to each other.
Added another bug fix to detect for negative values being passed into the fd_*() functions, as passing negative values would cause PHP to segfault.
Added Oracle LDAP SDK SSL support
- Sascha's patch should make PHP in VIRTUAL_DIR mode also change to the - right directory so this shouldn't be needed anymore.
The status quo in PHP is that the current directory is initialized to the directory where the executing script is located.
Use size_t as parameter type in the getenv member of struct sapi_module
const'ify virtual-cwd API
Provide PHP_SEPARATOR which expands to the default directory separator on the target platform.
Add virtual_real_chdir_file. Silly name for a useful function.
Execute PHP scripts everywhere (not only in the top-level directory)
Remove -DHAVE_CONFIG_H. It ain't used anywhere.
_isnan seems to be supported on Win32, add an appropiate macro.
Bunch o' changes.. 	- Add the ability to return the web page into a variable 	by setting the CURLOPT_RETURNTRANSFER constant to 1. 	- Make everything conform to the naming guidelines. 	- Delete the resource id from the file_id table when a 	resource is closed.
If available, use fpclassify for substituting zend_finite.
Including math.h before using macros defined there will work better :)
Make use of zend_isinf and zend_isnan.
Add zend_isinf and zend_isnan.
Add/update license
Relicense build-related files under the PHP License
Remove php_realpath from build.
ChangeLog update
Added some more predefined constants
We only need winsock.h one time
Adding ignore file for Win32
One more fix to C compile.
Note about Oracle LDAP SDK support. Should I not say experimental?
Eliminate run-time leak with eval()'s
Update NEWS
Avoid an endless loop situation in case of an error situation while sending headers
- Beautify
Adding Oracle LDAP SDK support
ChangeLog update
- Centralize more fopen-wrappers functionality.
Adding howto file for MS SQL
use estrndup and efree to hopefully avoid both munging of arguments and leaking memory.
REQUEST_URI is a handy server variable, lets pass it onto ISAPI/PHP
Add necessary *_FETCH() macros
#Its fixed this time, no really.
Purely cosmetic.
typo fix in array_diff error message, fixes bug #6236
minor typo fix in proto
ChangeLog update
Reorder call to ELS_FETCH to be after declarations
Reverting the pemalloc -> malloc change until we figure out why it breaks.
No need to have persistent allocation.
prevent mail_criteria from munging the variable passed in containing the query - just had to add a cpystr(). if this isn't the right fix, let me know, but it does work.
(send_headers) Removed code freeing http_status_line, this is performed                in sapi_send_headers() # Looks like a similar problem in sapi/pi3web/pi3web_sapi.c as well. # I can't test this though, so I'm being paranoid and not changing that code. # Could someone please check this?
additional include should fix bug #6086
Better error reporting when dll/shared library is not able to be loaded. Submitted by: Bård Farstad <bf@ez.no>
- It should be #ifdef PHP_WIN32
ts issues.
ChangeLog update
- The beginning of an attempt to cleanup fopen-wrappers. - I started with trying to localize the V_FOPEN's so that we can have a - version which won't really open the file for include_once/require_once to - work faster and have less chance of a race which would cause a fd leak. - What I did will, therefore, change but I want to do this step by step - because the code is extremley messy so first of all I want to make sure - that the isolating of the V_FOPEN code doesn't break anything. - How about moving URL stuff out of this file? - php_fopen_url_wrapper() copy and pasted the second part of - php_fopen_wrapper() (incorrectly). Please try not to copy&paste code but - centralize functionality. Need to think of a nice way to nuke one of the - copies and have both functions use the same one.
compile fix
proto fixed
ChangeLog update
NEWS update
Change the C++ extension to .cpp
- Inserted constants for fdf flags
Leftovers...
Add Win32 support for cURL.
This fixes to problems:
Sync with Zend
- Clearified which version of libmcrypt is enabled # Request by Olivier Cahagne
renamed ini section, quoted default host and tabulated.
display ini file entries on phpinfo(), unregister them on shutdown numeric ini file entries stored as ints removed unnecessary casts from PFPROG() pval -> zval
ChangeLog update
# Added TODO so I can track things that need doing with this module - (brendan)
Remove unnecessary precompiler macros. The failure condition is catched at configure time.
Restrict INI entries when compiling against libmcrypt 2.4.
- This patch should hopefully fix situations where a constructor uses - the $this pointer as a reference.
presumably this was wrong
- Unused results should be marked with EXT_TYPE_UNUSED and not IS_UNUSED
ChangeLog update
NEWS update
- Now using the better way of using INI directives - Changed some warning/error messages to be more clear
*** empty log message ***
- Revert foreach() change which only allowed variables and array(...)
ChangeLog update
Some protos corrected.
 - The destructor for a connection resource closed the current    connection if the connection had been closed before (danny)
ChangeLog update
NEWS update
@ Added support for libmcrypt 2.4.4
Added news item for Andi's strncasecmp commit
- restore ifx_close() to PHP3 behaviour for non-persistent connections   by silently reconnecting the existing link if closed earlier (danny)
Make COM work in a multithreaded environment
return type in proto for OCIError fixed
Added support for username, group and password for function yaz_connect.
*** empty log message ***
- Only support variables and array(...) in foreach loops
ChangeLog update
NEWS update
- The commit messages didn't seem to update the news file
-  changed all pvals to zvals (like they were before) # Turns out zval *is* the proper call for a variable.
Added capability to create and manipulate a config object that can be used later to create an instance of the spellchecker based on that config.
- Homogonized CCVS with the rest of the modules in the ext/ tree:     - All ZEND_* macro calls changed to PHP_* macros.     - All zval's converted to pval's. # Per discussion with Hartmut Holzgraefe on [PHP-DEV] list.
- Move compat macros to php3_compat.h
Remove bogus "by"
Cut and paste error? :)
Formatting.
last patch reverted, i didn't get the whole picture here
duplicate alias entry removed
#fixed typos
Correct bug in headers only logic.
ChangeLog update
NEWS update
Update NEWS, including some stuff that somehow got forgotten on my home machine
that too
Update to be consistent with the new Zend API
Update API number
The patch we promised - redesigned the compilation/execution API: Advantages: - Smaller memory footprint for the op arrays - Slightly faster compilation times (due to saved erealloc() calls and faster zend_op   initialization) - include_once() & require_once() share the same file list - Consistency between include() and require() - this mostly means that return()   works inside require()'d files just as it does in include() files (it used to   be meaningless in require()'d files, most of the time (see below)) - Made require() consistent with itself.  Before, if the argument was not a constant   string, require() took the include() behavior (with return()). - Removed lots of duplicate code. Bottom line - require() and include() are very similar now;  require() is simply an include() which isn't allowed to fail.  Due to the erealloc() calls for large op arrays, require() didn't end up being any faster than include() in the Zend engine.
Updated Supported CCVS Versions based on Conversation with Doug. All versions of CCVS 3.0 and greater should work without problems. @ The CCVS module is now stable and compiling. It compiles as a CGI and into apache cleanly without warnings. (Brendan W. McAdams)
Added Dougs name to the PHPINFO "Support By" call. Added a "Release Supports CCVS Versions..." line in PHPINFO
fix #6061
Looks like I found my problem. I was predeclaring my functions in ccvs.h (stupid of me), so PHP was seeing the predec from internal_functions.h, the predec again, and then the actual functions and barfing.  Compiles into apache now.  Will test further.
Tracked the stray -libccvs call to a bad config directive in the config.m4 file.
Trying to resolve the build issue. This module is currently broken. PHP compiles it fine but I'm having linking issues when it gets to the apache level. Any help would be greatly appreciated.
ChangeLog update
First commit of these files.  We have had them working for about 3 weeks, very well, as a DL.  The straight compile-into PHP support should work fine; I've got it compiling on my Slackware 7 i386 box with Apache 1.3.12 + mod_ssl.  Documentation, module info and example code are forthcoming.
Added missing 'subject'-key in envelope. # I'm starting to think imap_mail_compose() should be rewritten from scratch..
Beautified some protos.
Added instructions on how to use personalized dictionaries
added support for personalized dictionaries. new functions: pspell_new_personal(), pspell_save_wordlist().
Standartize full path handling - everything now goes via expand_filepath Add errno to open_basedir checking function
fix return code for virtual_file_ex
Remove manually committed change description
urlencode() fix (Bug #6016)
ChangeLog update
NEWS update
- fix for # 5980 (using ifx_connect/ifx_close multiple times for the   same database connection) (danny)
Add support for <binary> WDDX element.
.
Remove some crud from diff output (Only in..).
Set abs_srcdir before SAPI modules' configure stuff is run.
- updated those entries I feel responsible for
fixed binary mode for Win32
- got rid of php_ prefix in Modulename and some structs
Add DOCUMENT_ROOT
- made compilation as dynamic lib possible
- added functions fdf_set_flags(), fdf_set_opt(), fdf_set_submit_form_action()   as proposed by <gweisz@l-speed.com>
fixed for openldap 2.0beta.
ChangeLog update
NEWS update
Add 4th optional parameter to sybase_[p]connect to specify the charset for the connection @- Add 4th optional parameter to sybase_[p]connect to specify the charset @  for the connection (alf@alpha.ulatina.ac.cr)
Reverse this patch - it really shouldn't be in the error handler, but in the place that generates the error...
Added a parameter type.
Including utime.h once is enough.
Description from the ChangeLog. Thies, is it correct?
Add utime include
Add Joey Smith's sendmail_port patch
Include <utime.h> in php_virtual_cwd.h.
Replace min() - not everyone has it
fix stupid bug
Virtualize realpath, chmod, chown and utime This should fix #5935 and #5904 @- Virtualize realpath, chmod, chown and utime (Stas)
Changed some protos.
removed a BAD IDEA (tm) that filtered out backslashes
Support content-encoding headers in file upload mime parts @- Support content-encoding headers in file upload MIME parts @  (Ragnar Kjørstad)
decouple this check just in case we hit a weird system that has one and not the other.  And we specifically check for this, so we should use the information.
Remove mysql dll
ChangeLog update
NEWS update
- Use some more SEPARATE_ZVAL macros instead of replicated code.
@- OCIError() would sometimes not report failed connections. (Thies)
ChangeLog update
changed default sendmail flags from '-t' to '-t -i' (bugid#5374)
Restore the ability to clean compile in non-multithreaded environments
fixed ZTS compile
- This should fix bug #5964 # Could someone please check this out..it works as intented for me at least. # But I don't have any Windoze machines available to test this there.
#ooops
Sorry only the *_replaceparameters are wrong.
Wrong parameters found by Martin Buchholz @ six.de.
ooops - theese new parameters are optional
added new second parameter to osrt functions in the protos
no longer needed
do not rewrite absolute urls (should be more clever and identify itself though)
- Beautify code. Try and use more macros for splitting instead of - replicating the code everywhere.
Geez, you'd think English wasn' tmy native tongue.
Outdated URL, link to the master site instead.
Small portability fix
ChangeLog update
evaluate sendmail exit status, fixes unix side of bug #5630
If we can't find a protocol in URL wrapper, try it as a filename (fix #5931)
will now work again on 1-character urls, spaces before and after '=' and urls containing '#' scrolling info # argh, this file's not even a week old and already needs # a heavy cleanup rewrite, but at least it gets all my test cases right
ChangeLog update
NEWS update
Leave this initialization in
- Remove commented code
- Added two new functions: ldap_t61_to_8859() and ldap_8859_to_t61().   These functions are available only when using openldap which is compiled   with STR_TRANSLATION and LDAP_CHARSET_8859 defined in ldap_cdefs.h (Jani)
ChangeLog update
NEWS update
Add Olympus-specific tags to read_exif_data() @ Add Olympus-specific tags to read_exif_data() (Rasmus)
typo fix
Enable building PHP against kerberized IMAP libraries
protect datetime() against all zero inputs ...
"undefined function" error message will now suggest similar named functions as jikes compiler for java does (typo protection)
trans-sid rewrite, is now state-aware (fix for bug #3411 and friends)
ChangeLog update
- Get rid of whitespace.
Missed a symbol
Add note about software requirements
ChangeLog update
NEWS update
fix for bug #5672
@Added XML_Parser class in PEAR (Stig) @Added "make test" target in pear/ and added some regression tests (Stig) Also fixed a bug in the PEAR class that was discovered when testing :-)
#Damn. It still crashes in some situations. So this was bogus. =(
Refactor in support of subclassing
ChangeLog update
NEWS update
This url symbol was a bit too generic.  Change it to php_url instead. It was clashing with a similar typedef in the UdmSearch integration I am working on.
Add a couple of notes to the INSTALL file to hopefully cut down on a couple of frequently asked questions.
Made ob_start() and friends reentrant.  It's now possible to implement this long-requested functionality, now that output buffering is re-entrant:
- Update .dsp's - Make non ZTS Win32 build again
Removed an extra tab, it caused problems for Digital Unix' poor native make...
This should fix #5826.
Just cleaning up.
ChangeLog update
NEWS update
# Oops..where did those creep in? =(
@- Made ldap_add(), ldap_modify(), ldap_mod_add(), ldap_mod_replace() @  binary-safe. Original patch: Terrence Miao <terrence_miao@email.com> (Jani) #Thanks go to Terrence for making a patch correcting this bug in php3.0.12... #A patch, which somehow wasn't included at all in it?-) I wonder why..?
* PEAR now stands for "PHP Extension and Application Repository"
Moving the Socket class to Net/Socket.php, and basing it on code that Stig wrote, with a few extra utility functions from my old class.
added '-l' option to command line / CGI version for 'syntax check only' plus a little cleanup and rearranging in command line option parsing
should fix bug #5729
Make define return false and issue E_NOTICE when trying to redefine constant @- Make define return false and issue E_NOTICE when trying to redefine constant (Stas)
ChangeLog update
NEWS update
Make ext_skel create a Makefile.in set up to handle shared extension support automatically @ Make ext_skel create a Makefile.in set up to handle shared extension @ support automatically (Rasmus)
added DB/oci8.php to PEAR_FILES
Reworded some of the php_error messages for grammar and clarity. (For example, settled on "cannot" instead of "can't" in all case)
Always store full filename as compiled file name
Add news of recent fixes
Add a Socket class. If this should be somewhere other than top-level, just let me know - none of the existing subdirectories made sense to me, and I didn't want to add a new one just for this.
ChangeLog update
NEWS update
Access to global variable safe_mode fixed.
Changed syntax of pspell_new() (one more parameter - mode)
Added seteuid and setegid functions on request by max@valkyrie.sscf.ucsb.edu. Also fixed the function detection for the HAVE_ functions.
Removed pspell_mode() and pspell_runtogether()
Get rid of unnecessary preprocessor constructs.
Use the lcg as another entropy source for seeding the PRNG when creating a salt for crypt().
Clean up the mess WRT rebuilding a limited set of files.
Protos fixed.
OK, got ahead of myself. Go back to where we started this morning.
Add strncasecmp function @ Added strncasecmp function (Andi)
Proto fixed.
Make proper object initialization
OK, the fastgen stuff should be working OK, and normal configure should, too. There is an annoying warning being generated due to null 1st arg to AC_OUTPUT, but I don't know what to do a/b that.
@- Added new function: ldap_compare(). (Jani) # Documentation is coming right after this.
Make configure work again. CONFIG_FILES is broken again, tho. (I think). Will work with Stig to try and figure this out.
Multiple DB::connect or DB::factory calls using the same backend should work now.
tidy up news
Just a little beutifuing.
* EXTENSIONS -- update status on CURL & SWF * NEWS --   1.  Change wording for the ibase and sybase DB announcement.   2.  Remove second pfpro announcement, if pfpro is being released with 4.0.2   entries about new features before 4.0.2 shouldn't be in there.   3.  Joey, that entry just doesn't seem incredibly relevant to the NEWS file,   I'll backport it if you want (or add a new entry). * ext/standard/info.c -- Add a CREDIT_LINE() for CURL.
Add CURLOPT_TRANSFERTEXT option to curl_setopt().
MAINTAINERS has become EXTENSIONS
ChangeLog update
NEWS update
Read from /dev/u?random until the buffer is filled.
Trivial change to add access to CURL version information for user programs in order to have them react appropriately.
added several functions for manipulating wordlists:  pspell_store_replacement()  pspell_add_to_personal()  pspell_add_to_session()  pspell_clear_session()
- added several functions for manipulating wordlists - pspell_store_replacement(), pspell_add_to_personal(), pspell_add_to_session(), pspell_clear_session(). - fixed a few confusing typos in comments
There is still something wrong with Sybase DB-Lib, but CT-Lib works great.
Finally fixed so config.status can regenerate single files without doing the whole fastgen and warning message whoopla again.  Whee!
forgot to commit this one last night
Report configuration path that is really used, not that is compiled in # it does matter when using -c option
htmlspecialchars and htmlentities will now encode single quotes to &#39; (due to feature request in BUG ID#5254)
Default section name should be uppercase, I guess
# removed stupid dollar Id dollar in changelog
ChangeLog update
NEWS update
* the beginning of a regression testing framework?
remove comments for consistency.
.
* generate pear scripts properly with configure
* PEAR.php is now generated by configure
1.  Move from experimental -> production 2.  Thread safety 3.  Set some initial options 4.  Redo the placement of some functions and options.
Patched to work for Solid/Linux libc5 and glibc2 without the need for renaming the lib files, thanks to Kevin Way... fixed typo from GLIHC to GLIBC
# Added example entries for the pfpro extension to the php.ini templates
# Added code to pfpro.c and php_pfpro.h to parse defaults out of php.ini @- For the pfpro extension: defaulthost, defaultport, defaulttimeout, and @  all of the default proxy settings can now be defined in php.ini
Patched to work for Solid/Linux libc5 and glibc2 without the need for renaming the lib files, thanks to Kevin Way
added TODO file for PEAR
updated MODULES_STATUS file. Perhaps this should be renamed EXTENSIONS_STATUS?
licence versions -> 2.02 in pear files
@Ported DB to new error reporting scheme
* new class: PEAR - can be used as a base class for others. * PEAR_Error moved into PEAR.php to reduce the number of files that are   always included * cleaned up the PEAR_Error API a bit and changed the two classes using it * added PEAR_Installer - an administration class for installing packages   and maintaining a "class/file cache"
various version 2.0 and 2.01 licenses -> 2.02
Correct the value of request_uri
corrections to NEWS file
Changed lots of PHP 3 licence headers to PHP 4, mainly in .h files. Added a few RCS $Id$ tags.
ChangeLog update
NEWS update
It's better not touch those ldap->ld_* when they aren't given as parameters. (Now using -1 the parameters not wanted can be omitted) # Plus some source-polishing.
Remove $file and $line.
(getimagesize) fix FORCE_REF.
Add another check for broken browscap object # I do not know how it could get broken, but just in case...
Make browscap not to lowercase its arguments # Why it is doing it? Parent matching doesn't work with lowercase # If there was any reason to it, please tell
Try to fix some get_browser crashes and clean it up # Probably needs more work, just what I could see immediately
Setting "compatibility" parameter requires having a PDF structure that has NOT had PDF_open_*() called on it, according to the documentation.
BROKEN_SPRINTF should be PHP_BROKEN_SPRINTF
ChangeLog update
NEWS update
Complete the work mapping arrays and hashtables
fix bug 5322.
Allow java.lang.Hashtables to be passed into PHP as arrays.
Verify that a classname is actually passed on a new Java() call.
Respect the object type the user specified (i.e., never automatically convert the result of "new Java()" to a primitive type)
Don't assume that Java byte arrays are null terminated.
# zeev is god
fixed socket_set blocking in windows (bug 3845)
wordwrap function from Chris Russel <russel@yorku.ca> differences from his patch:  - wordwrap width and wrap-string now optional parameters    (default to 75 and "\n" respectively)  - wordwrap_byte is now just an automatic special case of wordwrap  - Zend API compliant
ChangeLog update
NEWS update
Forgot those constants.
Pass PHP arrays to Java as hash tables; minor cleanup
INI stuff labelled sybase.* should be sybct.*. Thanks to dean.bennett@home.com.
New naming sequence for PEAR_Error   - PEAR_ERROR -> PEAR_Error   - $CLASSNAME -> $classname
column size for date in imap_headers increased (see bug id #5699)
Add PEAR_ERROR class for returning exception objects.
	Undo numerical format regression introduced by the fix of the 	zero-precison %s formatting.
ChangeLog update
NEWS update
fix for bug #5707
fix 5705 .
ChangeLog update
NEWS update
automatically initialise library at first use if necessary automatically cleanup library at request end if user hasn't done so libpfpro library version shown on phpinfo()
# remove leading _ from #define
Itanium patch from Steve Robb <steve@eu.c2.net> @ Itanium patch (Steve Robb)
ChangeLog update
NEWS update
typo
Shutup a gcc warning
Forgot to link this function...
This is probably the oldest bug in PHP :) Luckily it's unlikely we're ever actually bitten by this bug.
Added myself
Don't touch ChangeLog, please. It's automagically generated from commit messages.
	Bring forward the zero-precision (%.0s) string formatting fix 	from PHP3.  (After being nagged by Thies. :-)  Whee!  My first 	PHP4 commit..
@Set default include_path so PEAR files can be reached (Stig)
Patch STDOUT support.
ChangeLog update
NEWS update
Added new function ii_autocommit()
Made ingres_ii module compile with its new name
@Added "pear" executable, requires CGI version installed (Stig)
Added extension ii for Ingres II native support. @- Added extension ii for Ingres II native support. See README in ext/ii @  directory. (David H)
Build fixes
- Made Interbase compile under Win32, cleaned warnings @- Added Win32 project for the Interbase module (Zeev)
Minor adjustments to compile-advice
- Cannot see any good reason why the test script in the dir of   the extension, though it is in tests as well
*** empty log message ***
ChangeLog update
- Beautify Zeev's patch a bit.
Update news
Add CURL support (http://curl.haxx.se).
Tiny wording fix
Implement parent::foo()
ChangeLog update
NEWS update
Some cosmetic changes.
Add more extended_info calls
fixed uninitilized var in ZTS mode.
Some cosmetic changes.
@- You can now call Ora_Error() without prameters to get the reason @  for a failed connection attempt. (Kirill Maximov)
Some cosmetic changes.
#.cvsignore file for ext/pfpro
merged changes from Signio module by John Donagher <john@webmeta.com>
test file for pfpro
.
@- New extension "pfpro" for interface with Signio Payflow Pro (David Croft) New extension pfpro to interface with Signio Payflow Pro library for credit card processing etc
ChangeLog update
NEWS update
Add IMG_GIF, IMG_JPG, IMG_JPEG, IMG_PNG and IMG_WBMP constants for imagetypes() function @ Add IMG_GIF, IMG_JPG, IMG_JPEG, IMG_PNG and IMG_WBMP constants for @ imagetypes() function (Rasmus)
Add ImageTypes() function which returns a bitfield with the supported image formats.  1=gif, 2=jpeg, 4=png and 8=wbmp @ Add ImageTypes() function which returns a bitfield with the supported @ image formats.  1=gif, 2=jpeg, 4=png and 8=wbmp (Rasmus)
Improve register_resource_ex() infrastructure
Hopefully this will stop the php_mysql.dll questions that haunt us...
Make it possible to specify an empty string as a thousands-seperator in number_format() @ Make it possible to specify an empty string as a thousands-seperator @ in number_format()
Protos fixed.
Shared module support for LDAP extension @ Shared module support for LDAP extension (Troels Arvin)
ChangeLog update
NEWS update
Use dashes and short day name in cookies since some browsers seem picky about this @ Use dashes and short day name in cookies since some browsers seem picky @ about this (Rasmus)
The description for protos need no period.
- Making pspell compile as a shared module - fix a couple typos @ Making pspell compile as a shared module
Forgotten to change.
Corrected some protos.
*** empty log message ***
make -c in stand-alone mode work again. Setting ini_path after php_module_startup doesn't do much good - since php_module_startup reads .ini. # This fix is very ugly. Everyone is welcome to make better fix # that won't report errors twice and won't scan argument 3 times
ChangeLog update
fix ZTS startup without filename (thanx purify!)
- The pdfclock example using cpdf
unset active_symbol_table on zend-shutdown.
(php_error) only set php_errormsg if we (still) have an active_symbol_table.
- By mistake recommited bad entry
- Add some Zend Engine changes to the NEWS file
ChangeLog update
NEWS update
- Oops I was only thinking about VIRTUAL_DIR and forogt about the rest of - TSRM which Zeev implemented  on his own.
- Commit new license for TSRM.
- typo
- Work-around for ESQL/C bug with BLOBs and NULL values (Danny).
Updated comments.
@- Improved array_multisort() to be able to specify sort type as well sort @  order. Incidentally, it can be used to sort multi-dimensional arrays @  as well. (Andrei)
Another persistent hash - disable apply protection
Disable the hash_apply() protection on hashes that persist across requests - it's unsafe because we may be aborted at any point
Thies, finish your news entries next time. :)
The official product name is PostgreSQL, so s/PostgresSQL/PostgreSQL/
Always use the current DIR_DELIMITER to create the session file path
fix warning in VC6
- Oops. Too early in the morning
- Don't need extern for functions
- Include iostream.h in C++.
ChangeLog update
NEWS update
- PS_* constants changed to PSPELL_* - zval is used instead of pval (as Andrei Zmievski suggested)
Initial release. Includes: - Functionality of aspell - 3 modes of spellchecking (fast, normal, bad_spellers) - support for run-together words
Changed the descriptions.
Changed some protos and the authors email address.
php.ini install docs from David Croft <david@infotrek.co.uk>
- Oops, missed two GLOBAL()'s.
- Another attempt to sync with PHP3 and handle multiple recipients. - Change all \'s to \r\n. - It's now PHP 4.0 WIN32 -mailer.
Lift the add-once limit for libraries, because there are valid reasons against it. When dealing with static libraries, the link order is important and it might be necessary to add a library multiple times to satisfy mutual symbol requirements.
Unify use of my email address
Substitute CXX_PHP_COMPILE. Compiling C++ source files works now.
Make the cxx suffix easily adjustable
Also output the name of the save_handler when reporting a failed write attempt.
masquarading as sascha;-)
ChangeLog update
Add support for building C++ sources.
- Need to seperate if the hash isn't a reference
Corrected a mispelled word.
.
Restore INI entries after the request shutdown of modules.
- Left debugging accidentally on...
(ibase_blob_import) It's good to have link handle available, if you want to                     use it... (_php_ibase_exec)   On error situations, only xsqlda was freed, not its                     contents.
- I must be getting demented. Forgot to add and register list destructor   function when creating new list entry type. Several other modifications   too related to this. Blobs still not working.
Reentrancy fixes
ChangeLog update
NEWS update
Eliminated a typo.
@- Updated str_pad() to be able to pad on left/right/both sides. (Andrei)
Uncomplete proto.
- Add zend_ulong
Aren't there some function names conflicts?
Add experimental APIs to get and clear the last exception
* php4/ext/sockets.c, php4/ext/php_sockets.h: 	Numerous changes. Many prototypes changed to be more like the 	appropriate *NIX counterparts. Many new prototypes defining many 	more advanced socket routines. Better AF_UNIX socket support. 	bind() now recognizes the socket type and acts appropriately, 	instead of needing the AF_* for the socket passed in. # Something I'd like to write yet is proper signal() support. Unfortunately, # the last time I tried, doing anything with the signal except ignoring it # caused PHP to segfault. And to have decent socket support.. at least, from # my experience, having signals is a good thing. Only problem.. to implement # it, some changes would have to be made to the parser - since that is where # the problems lie on handling asynchronous signals.
ChangeLog update
- Restore testing for Unicode charmap to what it was, it was working(?), this   shouldn't have any effect on other charmaps. - Remove bogus message about not finding any Unicode mapping table.
- Move away from encoding transaction number into link_id and use properly   resources instead for both. - Some cleaning.
Remove C++ commennts.
ChangeLog update
NEWS update
- Remove code which has never been used (neither in PHP 3)
- Make is_method_call() static and remove a couple of old lines
- Yet another fix...
- One more...
- One more fix for the latest patch
- One dumb bug in my latest patch
- Complex fix for solving a problem with objects & method calls. - Previous version is tagged PRE_METHOD_CALL_SEPERATE_FIX_PATCH. - I need to check this fix on a server so if it doesn't work I will revert - it.
WDDX now implements __sleep()/__wakeup() functionality.
preg_replace() can be non-greedy now.
- still an error in my last patch (thanks Andi)
- Use #ifdef PHP_WIN32 to detect Windows
Applied DBMaker patch by Jeffrey Lin <clin@lion.syscom.com.tw>
Applied multiple character set support diff by Rob Goodwin @Multiple character set support in gdttf.c (Rob Goodwin)
- last commit indroduced a new compile warning, should be fixed now
- fixed compile problems on win32 (thanks to Gabriel Weisz <gweisz@l-speed.com>)
ChangeLog update
NEWS update
That's no bug, it's quite fine the way it is (if id is set to -1, it's ignored, and the passed_id argument is used).
- Discoverd possible bug. Could somebody have a look.
- Link is now of type RESOURCE and not LONG
- Increase allowed number of columns from 256 to 384.
When using HTTP auth from PHP, fill in the %u custom log field so the authenticated used id will get logged in the Apache access_log @- When using HTTP auth from PHP, fill in the %u custom log field so the @  authenticated used id will get logged in the Apache access_log (Rasmus)
- Support for pdflib 3.01
- Note about FDF working again
- fixed handling of fdf data (application/vnd.fdf)
- First try at getting interbase to compile and work in ZTS-mode. Compiles.
(PHP session_destroy) return the error condition from storage handler's session_destroy method.
ChangeLog update
NEWS update
Not every argument type is mixed.
Missed a two liner.
(PHP date) Added new 'O' format modifier for printing out the GMT Offset in            the same manner as emails have in their Date: header.  The format            is similar to [+-]HHMM of offset. @- Added new 'O' format modifier that will output the GMT offset as "[+-]HHMM" @  (eg: Pacific time is -0700).  This is useful for things such as Date: mail @  headers. #  Um, this should have existed LONG time ago...   much better than that gmt #   offset in seconds modifier :)
Added "html_errors" directive to optionally disable HTML formatting of error messages.  The default is on. (Stig)
Make script work on POSIX sh
ChangeLog update
NEWS update
- Informix driver : Changes for new "main" directory (win32 build)
Unblock SIGPROF signal when starting timer. On Linux, this signal is blocked by default after first signal is run
Add suggestions for dealing with difficult installations, based on feedback from multiple people.  The .bashrc suggestion was from Rael Dornfest.
Identifiers which begin with an underscore are reserved. Changed _PHP_SOCKETS_H to PHP_SOCKETS_H.
Use AC_CHECK_HEADERS(unistd.h) instead
* ext/sockets/.cvsignore - Forgot to import into repository.
* Makefile.in   config.m4   php_sockets.h   sockets.c   sockets.php:   - Added files needed for Unix-style sockets support in PHP.
ChangeLog update
Replace macros which begin with an underscore through an appropiately named macro.
Rename macros which begin with underscore to valid macros.
Rename macros which begin with underscore to appropiate macros. The general rule is:
  Change header protection macros to conform to standard.
Change header protection macros to conform to standard.
Identifiers that begin with underscore are reserved for the implementation.
i don't think there's a reason to nuke the db handle here (when freeing results).
fix php4dllts dsp file
fix apache dsp file
fix nsapi dsp file
react only on CORE_ERROR
Be strict on errors in modules startup
- Take #2 with tab size 4
- Beautify parser a bit. It still could do with some more at some point
- Forgot ZEND_API
- Make PHP compile again under Windows. - Please be careful when you make such changes.
unlink() is not a function related to HAVE_SYMLINK. It is being used to delete files (actually, in Unix, names of files, as in Unix nobody has deleted a file, ever).
added new functions: pg_setclientencoding, pg_clientencoding in Postgres-7.0.
ChangeLog update
NEWS update
revert + note.
- strdup -> estrdup - check whether return_value array is initialized.
This is documented to not be case sensitive and it is not case sensitive in PHP 3, so let's not make it case sensitive. @Make the special Header("http/...") response be case insensitive like 3.0 (Rasmus)
- Commit tiny patch to remove redundant code by Amit Schreiber.
stylistic modifications.
definition.
@- Allow cybercash to compile as a DL module. (Sterling)
ChangeLog update
NEWS update
Typo.
updates for the SolidEE to work for 3.5 with PHP4.0.1.  Still causes warning of "integer from pointer used without typecast" but does not seem to effect the final build any.  have not found a correction yet.  has not shown the SQLParamData bug either, but unknown if it is closed as i was unable to reproduce it.
DB::parseDSN() now checks the value it is passed, and if it is already an array, returns it. This lets you pass arrays to the connect functions and they'll work transparently.
Some user-agents send 'basic' instead of 'Basic' in their Authorization header.  ApacheBench is an example.  PHP's HTTP Auth would not work with these. Some user-agents send 'basic' instead of 'Basic' in their Authorization header.  ApacheBench is an example.  PHP's HTTP Auth would not work with these. (Rasmus)
First Sybase-DB fix patch
remove unnecessary dependency
Add a messagebox style that's safe to use from an ISAPI filter
hmm, this file is not really auto-generated.
Set version number on DLLs
PHP modules should only be in the php_modules.dsw workspace...
error_reporting fix
- using more of the zend API
ChangeLog update
.
welcome 4.0.2-dev
- Get rid of absolute path
- Make pgsql compile on Windows.
Add $context argument to error handler
Lowercase class name before checking for it # I didn't really check it - have no WDDX
Lowercase class name before looking for it
ezmlm_hash() function also available for php4.
- Extra newline crept in somehow
Make fgets not use maximal buffer length always, but shrink buffer if it's too big.
Starting 4.0.2 changes.
Try to fix #5271 - crash when $HTTP_SESSION_VARS is already defined via "global" # I'm not sure it's fastest fix possible, but at least it should remove the # crash
ChangeLog update
NEWS update
Improve error handling code
Be HTML friendly
Would be a useful thing to have.
Oops, didn't mean to commit that.
@- Added an optional parameter to preg_replace() that can be used to @  specify how many replacements to make. (Andrei)
version update
I'm not sure whether this is necessary or not.  Is it guarenteed that get_module_conf() will always return a value?  Even if there were no relevant directives at all?
Added note about creating PDF documents in memory. This is not quite complete, due to a bug in pdflib 3.0.
ChangeLog update
NEWS update
Cosmetic name change
# Forgot this...
# Reverting as requested.
- Limit lines to 80 chars - Let people know they don't have to use the ISAPI filter if they don't need   HTTP authenatication
- dba_[p]open accepts now a new parameter, which kind of database to create   (DBA_BTREE or DBA_HASH), if the handler is either 'db2' or 'db3' and   mode 'c' or 'n'. It is ignored if mode is 'c' and the db already exists. # Asked on the list 4 1/2 hours ago if anyone's got to say something to this, # no response, so I'm assuming it's ok. And yes, I did test this.
Revert the sendmail.c patch - it uses 4 different variables that aren't defined, and breaks the Win32 build
Use [\]n to refer to the two characters '\' and 'n'. This is the correct way according to SUS II.
should now get multiple To: and Cc: recievers right (code taken from php3 version)
add Java as a valid package
defer loading of the native code
(fgetcsv) fixed leak
- Made discard-path work again
ChangeLog update
Removed 8KB limit on line length of the file() function
- Disabled dl() when PHP is being used as a module inside a multithreaded web   server - it didn't work before, and caused weird results (Zeev)
- Don't depend on USE_PATH being equal to 1. Use #define value
Add missing enable_dl
Support boolean NOT in the php.ini processor
Make it possible to detect whether we're thread safe or not from PHP scripts and the php.ini file
Separate plain name returned by php_sapi_module() and pretty name used for output.
- Pray this is an OK fix for the DISCARD_PATH junk
- Please NEVER copy fopen_wrappers.c functions to modules. They are ugly - enough as is and need cleaning up. Duplicating the mess makes things just - worse and prevents bug fixes in the functions from propogating throughout - PHP. - This fix is untested so someone who uses zlib, please test it and report - back.
Make exec() fwork on Unix again
TRACK_VARS is really no longer necessary...
max_execution_time is no longer UNIX only...
Right name for the function persist_alloc
- Try two in fixing the problem with memory leaks reporting path_translated
- Add another "\n" at the end of error messages.
Make max_execution_time work properly when set to 0 under Win32 (disable)
Corrected a syntax error: Macro requires braces.
Added function php_sapi_name() as written by Stefan Livieratos.
ignore libs.mk
If we freed it, we might not touch it # BTW, this is not a real fix - we still might use it # when reporting memory leaks, but at least we won't reference # unitialized memory
two too many.
ChangeLog update
NEWS update
Update
Make the zlib DLL work with the stock zlib library
- Update .dsp - Add Win32 'spec' file
Another late one.
Add it manually for the release.
imap_sendmail.[ch] are missing... Whomever added them, please cvs add them and then readd them to the project...
- Line breaks at 80 chars and change php4ts.dll -> php4isapi.dll
- The check for bison nukes $1 and $2 which are used later on in the script - This needs to be fixed sometime. I have 1.28 on my system :)
- Get ready to package
Now its a todo.
Get rid of a warning
PHPAPI is invalid here...
It was Jouni: Prevent Hartmut finding this until it is actually implemented...
- I wrote a long msg but the commit didn't go through. - So here is the short version: - a) Start moving to binary opens in Windows - b) Give checkuid_mode() a small face lift including the fopen-wrappers.c - The mode to this function should at least be a #define but that is for - another day. Anyway this whole stuff should be given more face lifts in - the future.
- I wrote a long msg but the commit didn't go through. - So here is the short version: - a) Start moving to binary opens in Windows - b) Give checkuid_mode() a small face lift including the fopen-wrappers.c - The mode to this function should at least be a #define but that is for - another day. Anyway this whole stuff should be given more face lifts in - the future.
Add Win32 README file
better description for recent serializer change
The second array_merge() is now array_merge_recursive().
A droto is not a proto.
Add version checking.
# Missing ;
Proto.
ChangeLog update
Nuke a warning
Correct protos call_user_func() and call_user_method().
- winsnmp.c has moved to ext/snmp
Revice winsnmp.c from repo-copy
credit where credit's due
Apply the NSAPI patch
- Close cursor immediately before reuse so that calling ibase_free_result is   not necessary anymore. Seems to also prevent a a situation where at request   shutdown cursor was first dropped and tried to close it afterwards when   all the resources were not manually freed, and could occasionally segfault.
- Forgot to remove comment
- Only use VIRTUAL_DIR in ZTS mode until it is thoroughly tested. - Mutex popen() in Windows as the UNIX trick doesn't work there.
Also install XML-related header files.
Get rid of files in the dl directory hierarchy.
Stop including dl/phpdl.h.
alloc.h has been removed from the Apache 1.3 CVS tree
- Entries start with capital letters
<funcprototype> added to xml generation
ChangeLog update
NEWS update
Added a description to get_browser().
Typos.
Make use of incomplete class API
API change: Use zval * instead of zval **
Move the incomplete class stuff into its own file, so that we can make it easier accessible to WDDX.
.
Change the serialization semantics to:
- COMPILE_ERROR should only be used in Zend
@- added spliti() function. (Thies)
debug-code removed
this change should solve all problems regarding trans_sid_id and "empty" href urls like "", "#name", "?param=val" ...
ChangeLog update
Remove some unnecessary CLS_FETCH()s.
- Not returning a value anymore
- Don't need SUCCESS/FAILURE anymore
- Add license
- Commit static allocator structure which we might use in an upcoming Zend - change
- Make Windows compile. Was missing crc32.c
- Oops I miss-wrote that field
- Change API version and make the error messages more meaningful.
Update to 4.0.1
- Change cache size and only initialize part of it.
- Improve memory cache performance and increase cache size. (Stas, Zend Engine)
Cached-freed memory blocks should not be in "occupied" list
Make cache counters to be unsigned int Start collecting statistics after cache pre-fill
ChangeLog update
NEWS update
Add a crc32 checksum function - used by the udm_search search engine and currently run through a system call.  This will speed up the udm_search php frontend significantly. @ Add a crc32 checksum function - used by the udm_search search engine @ and currently run through a system call.  This will speed up the udm_search @ php frontend significantly. (Rasmus)
Add alloca.h check
HAVE_MEMORY_H is not used by PHP.
Revert earlier commit.
unserialize() and wddx_deserialize() now create an empty class if they enconter a class which's code is yet unknown. this makes sessionized data retain the class name of objects even if you visited pages that don't have the classes code available.
Here is a brief start towards getting the DB stuff up to speed and working (I need it to move forward on some stuff, and I really do want to see PEAR succeed, so I'm going to work with the official code to get it working. Hope that's okay). I've replaced all instances of 'use' and 'import' with 'include_once' (and added the .php extension where necessary). This gets my short test script working. More possibly to come.
ChangeLog update
Warn about using the built-in MySQL library
This is no longer needed
bonsai test
ChangeLog update
Canged back to uppercase. Are all the backslashes on line 69 to 111 really needed?
Unbreak imap by fixing the assignment
- minor changes
- added prototype
Call __wakeup() after all the instance variables are initialized.
kill warinig
good morning, thies!
some adjustments to the sysliblist # still needs some fixing - sascha?
(fsockopen) fix #5090
ChangeLog update
NEWS update
- Nuke warning
No response from Sascha so changed to lowercase.
More protos.
Changed strtok_r to php_strtok_r
Changed strtok_r to php_strtok_r
fp_except check for FreeBSD 1.0-2.2.5
Welcome zend_finite(n).
Some protos fixed.
Make error callback be publicly accessible
- Better FreeBSD fix. Does fp_except_t exist on 3.4?
Cosmetic cleanups
(implode), (strtr) no longer touch the internal array-pointer.
(serialize) no longer touches the internal array-pointer
Readd pi3web_sapi.c and reset flags.
- I don't know how this happened. I tested the bloody thing and I remember - copy&pasting from code which used ~.
One more place.
@- Modified in_array() to not touch array pointer. (Andrei)
ChangeLog update
Slightly more accurate description here
Relic from cvs conflict?
- Add restore_error_handler() error_handler's are now stored in a stack
Update news
- Add notice about CGI fix
Allow the symbol_table to be passed to call_user_function_ex()
Wrong number of commas.
Have to use zval_ptr_dtor() on values returned from user functions.
- Export ts_resource_ex in order to succesfully build Windows version
- Make Windows compile - Windows doesn't support LC_MESSAGES
Avoid crashing with recursive applies - limit apply nest level to 3 (I'm not aware of a place in which applying recursively on the same hash makes sense with more than one nest level, but 3 should be enough)
Announced Pi3Web support
Added Pi3Web support
Suppress AC_ADD_LIBRARY(x) where x is matched by /^(c|c_r|pthread*)$/
Make use of the new macros PHP_EVAL_LIBLINE and PHP_EVAL_INCLINE
Add PHP_EVAL_LIBLINE and PHP_EVAL_INCLINE
- Missed one if() and cosmetic changes.
changed default cell alignment to "left" (see bug id #5048)
setlocale didn't recognize LC_MESSAGES (BUG ID#3957)
look for apxs in /usr/sbin (that's where SUSE puts it) if no path is given and apxs is not found in $PATH
ChangeLog update
NEWS update
fix for BUG #5066
Just to make extra sure.
Plug a memory leak: retval_ptr should be destroyed.
@- Enhanced WDDX functions to call __sleep() and __wakeup() when working on @  objects. (Andrei)
typo fix
retro-patch from // comments, theese where private experimental changes
Typo.
C++ // comments are evil ...
Protos looks now equal in both versions.
Make it possible to access other threads' local storage.  Only use it if you have a clear knowledge of what you're doing!
Ok, this time here's some real Win32 system programming :) Redesigned the timeout system using a single timeout thread and a single window, and used a much quicker check.
@- Changed WDDX to serialize arrays as structs only if needed. (Thies)
More main work
Some stuff has moved to main
- Forgot to test check for errors in two places.
- Make Windows compile
Macro it up the right way
Macro this up, so it can be moved to other places
Improve timeout support - ini_get("max_execution_time", ...) works now
ChangeLog update
NEWS update
- Move timeout code to Zend - Implement timeouts in Win32
Move timeout code to Zend, allow Win32 timeouts @- Implemented max_execution_time under Win32 (Zeev)
- Don't need to check doc_root's length twice
- Last one for tonight. Make sure that we don't check uninitialized - memory
- Last patch for tonight. A more optimized way to check for absolute path - in Windows. This should be fixed to use the virtual cwd macro for - ABSOLUTE_DIR() but I need to have time to understand the logic first
- Missed a bracket
- Beautify fopen-wrappers a bit. - Still needs quite a lot of improvement in order to treat Windows well
- More #if WIN32|WINNT -> #ifdef PHP_WIN32 conversions
- Beautify a bit
- Try and fix crash with CGI. - Please check out the comment I wrote in init_request_info(). There was a - lot of code there which was running for no apparent reason. Should it be - removed or should it actually run?
Use hardcoded 3600 seconds offset instead of altzone which may not be present on all systems.
- Unncessary SLS_FETCH();
*** empty log message ***
set_file_buffer was not being exported.  This is now fixed.
*** empty log message ***
- Support multiple arguments to unset()
- virtual_fopen() should fail on empty path
ups.
changed return type of ZEND_VERIFY_RESOURCE from FALSE to NULL
.
Another entry.
@- Updated strtotime() to handle many more formats. It now has complete @  feature parity with GNU date command. (Andrei)
fixed typo
Add php_version.h.
- changes to handle the slightly different access to attributes
- fixed problems with missing attributes due to a change   in libxml 2.0.0
patch from jtaskine@hit.fi - add deleted info to imap_mailboxmsginfo() and fix some prototype info.
ChangeLog update
NEWS update
return FALSE from strftime on negative timestamp values they do not make sense anyway and seem to crash win2k
Refine checkdate() fix to accept numeric strings and floating point as well
Move some stuff to zend_operators.h which is required by the moved inline functions.
- More correct way of doing bit mask
@- Moved VC++ Win32 project and workspace files to the win32 directory @  (Zeev)
reminder
Require the year arg to checkdate to be an integer - fix for bug #5034 @Require the year arg to checkdate to be an integer (Rasmus)
Thoroughly fix .dsp problems - restore custom builds
test
no c++ comments, please
Find servlet includes in new "main" directory.  Add (finally) java and servlet to the list of projects
Copy header files from main and also add that directory to the list of include directories.
.
Only replaced C0X and C0x, but not c0x..
Rename C0x-inline to C9x-inline, and frame preprocessor directives in zend_gcc_inline.c with #ifndef C9X_INLINE_SEMANTICS..#endif.
Use the new PHP_GEN_* macros in pear
# Prevent Hartmut finding this until it is actually implemented...
- Make Win32 build
ChangeLog update
Export the necessary functions to enable servlet support to be subclassed
Plus a leak when both register_globals and track_vars are off.
News of ldap_add() and ldap_modify() fix.
Also need to 0-terminate when adding/modifying an array of values.
Think have to 0-terminate mod_values strings, got trailing garbage, this fixes bug #5001 I think.
Add to the API
We should define symlink functions only when HAVE_SYMLINK is defined. Otherwise, they should be aliased as not available.
Due to creating the Makefiles later, generating libphp4.module failed, because sapi/apache had not been created. This applies to VPATH builds only.
Add optional support for C0x inline semantics.
array_uniq() has been implemented by someone else.
Include <math.h> in php_math.h. This is necessary, because we might otherwise redefine system macros.
Delete phpdir.h. Someone moved this to php_dir.h in the past and forgot to delete it.
Rename phpmath.h to php_math.h.
copy() now creates the destination file with mode 0777 again. this is the way it used to be in PHP 3
Damn.
Forgot to add this yesterday.
O_APPEND breaks 'c' for DBM files - this is handled correctly by PHP3, so it's almost a forward'' port :)
Add llist_apply_func_t and make prototypes use the typedefs.
Proper casts
Remove extra cast. `ch' is already of type `char *'.
Remove single ;
(php_math_number_format) Simplifying the logic also fixed bugs #4954 and #4998.
ChangeLog update
NEWS update
Check more locations. Submitted by Anil Madhavapeddy <anil@recoil.org>
Removed obsolete, commented line
Make Egon happy :)
making zlib module compile on win32 with new directory structure
making oracle module compile on win32 with new directory structure
making oci8 module compile on win32 with new directory structure
making ldap module compile on win32 with new directory structure
making java module compile on win32 with new directory structure
making imap module compile on win32 with new directory structure
making ftp module compile on win32 with new directory structure
making exif module compile on win32 with new directory structure
making calendar module compile on win32 with new directory structure
Return the previous error handler from set_error_handler()
news update
Avoid using E_CORE_* errorlevels in any place which is not in the global startup sequence
making MSSQL module compile with new directory structure
@- Upgraded PCRE to version 3.2 and fixed a bug when anchored pattern @  matched an empty string. (Andrei)
Document change.
- On UNIX support popen() which works with current working directory - when in VIRTUAL_DIR mode.
Make gdttf.c work with virtual dir support.
- Start of popen() fix for UNIX. Still unclear what we'll do on Windows.
Killed <?php_track_vars?>
Get rid of <?php_track_vars?>
(PHP str_pad) Terminate string with a null.
Lets not offend anyone :)
(php_readdir_r) Revert that bad patch.
Quiet CVS.
(php_readdir_r) Last argument to readdir_r was missing.
ChangeLog update
Change directory name from core to main.
Prepare move of the top-level source files to the core directory.
- Solve floating point precision crash on FreeBSD.
- Update NEWS
- Untested but it should fix the problem with cyr_convert() not being - binary safe and destroying other values in the script
- Make shockwave work with virtual_dir (a bit ugly). - swf_openfile doesn't return any values. This seems to mean that you can - only have one file open at a time.
Added argument type.
Forgot to set_compare_func in the new array functions, had only tested with older source.
Separate creating config_vars.mk and generating Makefiles.
Remove unnecessary second cat invocation
(set_time_limit) converted to new API. # for some weird reason this fixes a newly introduced crash.
Upgrade to Libtool 1.3.5.
oops.
ChangeLog update
- Avoid generating unnecessary switch statemets. - Add a test if argument was given (if it is optional) before trying to   fetch a resource and a note that something should be done if it wasn't. - Some cosmetic fixes in the code generated. - Some other small fixes in the code generated, already forgotten.
One more place.
Terminate the string with '\0'.
Notice about adding array_unique, array_intersect and array_diff
Changed array_subtract to array_diff
Adding fuctions array_unique, array_intersect and array_subtract.
- Commit message says it all
- Erased an extra line by mistake
Define _POSIX_PTHREAD_SEMANTICS on Solaris by default.
- This seems to be a bug. Anyone know who wrote this code? Should it stay - in?
- Update module project files to include: - HAVE_MODULE=1 - ZEND_WIN32 - PHP_WIN32 - COMPILE_DL_MODULE - ZTS=1
- Add some documentation for ext_skel and a note about it's existence.
- #ifdef COMPILE_DL_FOO - #if HAVE_FOO
- Nuke COMPILE_DL. Modules that need to be compiled as dll's in Windows - need to define both COMPILE_DL_MODULE and HAVE_MODULE=1
Add -qthreaded for AIX cc V5
Add FreeBSD's new -kthread option.
Search for mysqlclient library in lib and lib/mysql
- Automatically generate C code to handle arguments passed to a PHP function   based on function proto. # Very cool! Try yourself, put for example the following line in file funcs: # bool drawtext(string text, resource font, int x, int y [, resource color]) # and then run ./ext_skel foobar /full/path/to/funcs and then look at # foobar.c...
Make yaz compilable as shared module.
ChangeLog update
NEWS update
I can't think of a reason of why it should just be a notice...  Make it a warning, like it was in PHP 3.
# Still a typo.
- Update postgress to build on Windows
# Cosmetic fixes and a typo.
Made an alias for hash apply with arguments.
- Cosmetic changes. - Optionally, create function entries, stubs and declarations from names   listed in a file.
- Forgot to remove the FIXME
- Make the memory limit accurate
Real fix for std_syslog issue on OpenServer. This is limited to the native development system (/bin/cc and icc) and does not show up with the UDK.
The ! command is not portable.
- Allocate and cache in 8 byte blocks. Most allocators anyway use 8 byte - blocks. This should help fragmentation and cache hits. - The old tree is tagged as PRE_EIGHT_BYTE_ALLOC_PATCH
Update news
- Changed user instructions.
- Time to change it. We changed register_internal_class() -> - zend_register_internal_class()
- Andrei, this is for you! - Add zend_register_internal_class_ex() which allows you to specify a - parent to inherit from. You can either specify the parent directly or via - its name.
@- Changed WDDX to always serialize arrays as structs. (Andrei) Changed WDDX to always serialize arrays as structs. PR #4924
- Typo
- Remove old obsolete code.
- Make unset consistent with the way array offsets work
Handle unset with empty key
Make chmod in safe mode not allow SUID bits
- Change register_internal_class to zend_register_internal_class for - consistency. - Andrei: I'm still thinking about the _ex you want me to implement
- Use PHP_WIN32
- As Sascha requested.
(php_wddx_deserialize_ex) return SUCCESS/FAILURE Use that return value in WDDX session deserializer.
Change COMPILE_DL to COMPILE_DL_EXTNAME
- Added skeleton module creating script.
- Parse errors in the php.ini files under Windows will no longer mess up the   HTTP headers in CGI mode and are now displayed in a message box
ChangeLog update
NEWS update
Move back everything to where it belongs...
This should no longer be necessary
This seems to be a valid report, can't hurt anyway (PR 4252)
Restore the check for the trailing slash.  Windows does not apply s#/+#/# (PR 4375)
You need to include dynlib.mk in Makefile.in.
The default serializer is still php.
Automatically recover from a failed attempt to decode a session object.
Somehow I screwed up the find parameters while doing the original change.
Include php_global.h, instead of global.h
Update .dsp's
Added more server variables to the HTTP_SERVER_VARS array, all the variables listed in the structs in nsapi.c should work now. Untested on Windows platform.
@ fopen_wrappers() are now extensible via modules so here it finaly is, the more general approach to fopen wrappers # see what i'll break this time
Add PHP_BROKEN_SPRINTF check here.
Wipe out acconfig.h.in and rewrite some checks to use PHP_ARG_ENABLE.
Clean up acconfig.h
Add a couple of casts
ChangeLog update
NEWS update
Always define PROGRAM_NAME to avoid problems with Irix's and OpenServer's makes.
Add note about using PHP_ARG_WITH/ENABLE
- fixed compilation error
- more removal of obsolete pdflib functions, but no changes to the php   api
- new function pdf_set_info() to replace pdf_set_info_xxx()
beautify
cyscape's "current" browscap.ini file doesn't terminate the last line in the file with a newline character this resulted in a parse error
Purely formatting.
ChangeLog update
NEWS update
Make trim strip \0 to match php 3 @ Make trim strip \0 to match php 3 (Rasmus)
- Added functions imagewbmp(), imagecreatefromxbm(). - Nuked a lot of duplicate code. @- Added function imagecreatefromxbm(). (Jouni) @- Added function imagewbmp(). (Jouni, based on patch from Rune Nordbøe Skillingstad) # Note: calling imagejpeg() with 3 arguments, the second one empty, # is currently broken. Fill fix tomorrow evening unless someone beats me. # Must have some sleep now, brains stopped working...
@- Added str_pad() for padding a string with an arbitrary string on left or @  right. (Andrei)
- add functions pdf_get_value(), pdf_set_value(), pdf_get_parameter(),   pdf_set_border_dash() - some prototype fixes
I guess Zeev's done it already.
@- Made the short_tags, asp_tags and allow_call_time_pass_reference INI directives work @  on a per-directory basis as well, e.g. from .htaccess files (Zeev)
PHP code to test sscanf()
Enable asp_tags/short_tags/allow_call_time_pass_by_reference to work on a per-directory basis as well
Modified Makefile.in so scanf.c compiles
- Preparing to add new image types to gd module. # Sascha, if you see this, why are there two checks for jpeg dirs # (PHP_GD_JPEG)? I just literally applied the same method to check for # Xpm libs, don't know how to fix it. Could you please have a look at this?
Added sscanf() function.
- I didn't have anything to do with this buggy code. Just kidding :)
 adding definition for EWOULDBLOCK for Win32 to compile
added missing '/' to closing <center> tag (BUG ID #4416)
added T1LIB information to info function
Added another bug to be fixed
add check for stdbool.h
bool -> int
@- added fflush() function. (Eric Huss) # the socket fsync() might not work on Win32. # # i'm not sure if we need any code for flushing sockets as they are # currently alway written via write().
hashtable.h -> expat_hashtable.h
Adding correct compiler directives for Win32 compilation
Use common naming convention.
Get the version #'s right...
Add newline at the end of the file (breaks at least SCO and Tru64 C compiler).
ChangeLog update
NEWS update
Move to the Z_*_PP macros.
Move hashtable.h to expat_hashtable.h.
Make TSRM compile again. ZTS is defined by a header file included in tsrm_config.h, so TSRM.o was always empty.
PRE_INCLUDES hack reverted
PRE_INCLUDE hack reverted
Move global.h to php_global.h.
Move main.h to php_main.h.
List with TODO items
Added a new user-definable include variable, PRE_INCLUDES. It works like EXTRA_INCLUDES but is added before the global INCLUDES variable. # # This was needed for the roxen SAPI module, which requires the PHP4 # include dirs to be after the Pike include dirs. I can't make the # Pike include dir global though, since Pike includes then conflict # with PHP4 includes in the rest of the compile.
Changed include statement for main.h to avoid inclusion of Pike's main.h.
- ARG_COUNT(ht) -> ZEND_NUM_ARGS() mega patch
Oops, fixed slight miscue there.  Now it works.
- Restore locale settings to state they were at module startup if they   were changed.
@ Clean up constants in flock() function and add optional 3rd arg which @ is set to true on EWOULDBLOCK (Rasmus) Clean up constants in flock() function and add optional 3rd arg which is set to true on EWOULDBLOCK
Ignore generated files.
Getting exif module to compile on win32
fixing compiler directive so the module will actually build a php module
- should now compile and configure with libxml 2.0.0
- Revert internazionalization fix.
- Revert Thies' locale patch. It was screwing up language level things. - We could add support for locale in some specific output functions at a - later time to make everyone happy
compile fix regarding bug report #4780
- Complete change to create_function()
ChangeLog update
NEWS update
(pg_connect) Missed adding reference to link.
Change shutdown order to sort out a crash when assigning a resource id to a static.
- Support unordered hash comparisons - Make == perform an unordered comparison with arrays/objects, and === perform an ordered comparison
*** empty log message ***
Rename lambda()
- Added functions pg_loimport(), pg_loexport(). @- Added functions pg_loimport(), pg_loexport(). (Jouni)
@ Add SWF support to getimagesize() function (Derick Rethans) Add SWF support to getimagesize() function
Redirect messages from cp modules/* to /dev/null
\0 is part of they key, but not of the variable
Back out the last change by Andi which caused TSRM to be always configured.
add opendir to VIRTUAL_DIR
chdir returns -1 on error, so should V_CHDIR
chdir returns 0 on success, compare against it
@ Add support for both indexed and non-indexed arrays of file uploads @ eg. name="file[]" type="file" (Rasmus) Add support for both indexed and non-indexed arrays of file uploads eg. name="file[]" type="file" (Rasmus)
- Only compile if building a thread safe version
ChangeLog update
*** empty log message ***
news update
Support comparisons of arrays (with arrays) and objects (with objects)
- Change #if to #ifdef.
- Allow all functions that receive user-defined function callbacks to accept   an array that contains an object and a method name, in place of a function   name, e.g. usort($array, array($obj, "ObjSort")) (I checked the code in array.c and basic_functions.c, other code which uses call_user_function() may still force the function_name argument to be of type IS_STRING, which prevents this feature from working - and is no longer necessary)
Don't take chances with new include files
Improve call_user_function() to support array($obj, $method)
- Make the INI entries sorted in phpinfo()
- Export normalize_bool - This global/static syntax fix brought us back to the 4 documented conflicts
ChangeLog update
NEWS update
Add missing {
- Update NEWS so that this is documented
- global/static require a trailing ';'
Update error code
Use the new error code @- Added set_error_handler() to allow custom error handling functions, @  instead of the built-in error handling code (Zeev, Zend Engine) @- Renamed user_error() to trigger_error();  user_error() remains @  defined for compatibility (Zeev, Zend Engine)
Small optimization
Nuke the old error code, use the new one
-
- Make TSRM always compile into PHP. We can now move virtual_cwd over here. - We might not want to compile TSRM.c in case we are on a platform which - doesn't support threads. Sascha? What do you think?
ChangeLog update
NEWS update
patch for redhat 6.2 from Teodor Cimpoesu <teo@digiro.net>.
Update header file.
@- Cleaned up PCRE extension and made it binary-safe. (Andrei)
(ucwords) Remove unnecessary code. # Didn't keep my promise to stop...
(ucwords) Yet another fix for #4748. # Last one from me today, I must have a beer now.
Some tweaks.
@- Added third argument to in_array(). If it's true, then in_array() @  will use strict comparison instead of the default one. (Andrei)
uh, off by one?!! this time it's regression-tested, fast and compact
(ucwords) Another try to fix #4748.
ucwords will now test against isspace() instead of just ==" " (see BUG #4748)
ChangeLog update
NEWS update
s/sys_syslog/std_syslog/
Correct fix this time... (?)
Make use of already existing macro PHP_PROG_SENDMAIL
@- Added pg_trace() and pg_untrace (Dominic J. Eidson & Zeev)
Use sed instead of tr. The tr regexp syntax does not seem to be portable enough to make wide use of it. This should fix problems on Solaris 8 and possibly on older SysV-derivatives.
IS_BC isn't really being used, but still...
monkeying Sascha's suggested change to allow relative pathnames.
Added changes suggested by Stanislav Borutsky with respect to NSAPI_PUBLIC.
@- ignore_user_abort=Off is now default. (Thies)
The last line added '-I' to INCLUDES, causing all SAPI modules but NSAPI failing to build.
just do phpinfo() and "collect" all error_reporting related ini-entries - you'll get my point;-)
ChangeLog update
NEWS update
Making imap module compile on win32 and include imap_mail() function)
Updated help section with some more compile problems & solutions
@- Added array_merge_recursive() that will recursively merge values @  under the same keys. (Andrei)
retab
Finally figured out what pathinfo() was all about.
Altered NSAPI autoconf to check for location of include files automatically, tested for Netscape 3.x and iPlanet 4.x. Added very basic variable support for usefull things such as PHP_SELF. I'll extend this to supply this rest of the variables soon. Commited a patch to activate ZTS in the NSAPI module, this patch comes from Jayakumar Muthukumarasamy.
@- fixed crash in OCIParse when parsing invalid SQL. (Thies)
ChangeLog update
Forgot to update the makefile
Allow disabling of functions for security reasons
warn_not_available() will be used by other modules besides ext/standard in the (very near) future
- License is at 2.02
Oh yeah, I said there's no need for it to be defined didn't I? :)
Clean up EXIF code and give up on extracting the embedded thumbnail for now.  Will return to it when I find some real specs on it. Also added a couple of missing copyright headers
Remove stale reference to .h file
There's really no need for an entire file for a one line function...
detab
add some notes
allow_call_time_pass_reference fix: similar_text
Remove stale macro
`len' is not the actual length of the string, but the possible maximum length. This fixes a couple of problems, like not setting the cookie path correctly.
More secure mode
Creat is creat is creat, no open
ChangeLog update
Add maintainer info for dbase extension.
Remove old, unused files.
fix license version number in sample header
- Use pointer arithmetic to speed up the function a bit
- This should have been done for 4.0.0. - Default build is without debug now. Use --enable-debug if you want a - debug build which includes leak/memory overwrite etc. detection
Changed parameter naming some function prototypes
- Move zend_activate_modules() to later on.
Remove win32/php_registry.h from include list. That slipped in by accident.
Use php_syslog() for system call. On OpenServer 5, syslog is defined to var_syslog/sys_syslog which causes various problems.
Make syslog module thread-safe.
Test scripts for ODBC added
Cosmetic changes.
(php_execute_script) fix leak for phpinfo() images. # maybe the activate/deactivate should be moved outside php_execute_script()?
- added COMPILE_DL_INFORMIX to WIN32 project file
 - Name correction.
ChangeLog update
added comments to the System/Distribution specific default path tests for gd.h
should make SuSE 6.x users happy (and anybody else with gh.d in   /usr/include/gd ... )
Solve conflict with mysql's readdir_r check. Both defined HAVE_READDIR_R, but with different values.
a second (cleaner?) try on warnings about unsupported functions
- I'm not sure if PHP_NOT_IN_THIS_BUILD is the way to handle these - functions but in any case I have changed it to PHP_NOT_IN_THIS_BUILD()
ChangeLog update
NEWS update
Add Sam Ruby
@ Changed the Apache handler's return status to 'Declined' when a requested @ PHP file could not be found.  Returning 'Not Found' caused problems @ in the ErrorDocument handler stage in that $REDIRECT_REDIRECT_ERROR_NOTES @ was not getting set at all.  Moving to 'Declined' shoudl fix this and I @ can't see any other side effects.  (Rasmus) Changed the Apache handler's return status to 'Declined' when a requested PHP file could not be found.  Returning 'Not Found' caused problems in the ErrorDocument handler stage in that $REDIRECT_REDIRECT_ERROR_NOTES was not getting set at all.  Moving to 'Declined' shoudl fix this and I can't see any other side effects.
protos fixed
proto fixed
if a module provides a function it should also do so if the function is not functional due to configure findings the function should offer a meaningful warning if it is not supported instead of just beeing undefined i had already changed this in 'gd', now this is doing it for 'standard'
Save more overhead.  Look for the serializer/save_handler only when they're actually modified.
Use the INI framework in the session module
- swf.h belongs to the libswf distribution and should not be copied   in the php distribution. - the configure script now checks for the libswf.a and swf.h in   <swf-dir>/lib and <swf-dir>/include. If it doesn't find it the   default directories /usr/local and /usr are checked.
- Update news file
ChangeLog update
NEWS update
Added extension YAZ.
Added short README for ext YAZ.
Added extension YAZ (Z39.50 client role).
Update proto.
@- Added second argument to preg_quote() which allows quoting of @  one additional character, usually the regex delimiter. (Andrei)
Test commit
Test commit
added functions gzcompress() and gzuncompress() for direct string compression as requested by BugId #1151
Making ZLIB compile on Win32
fixing typo
(about the removed line - we agreed that the NEWS file should only contain stuff that would interest end users, removing warnings isn't such a thing in my opinion)
Only fetch globals if it's necessary (which it usually won't be)
Accept CVS version of libtool (1.3c)
- Added credits.
- Move to high performance api, use Z_* macros. - Added some spaces here and there. # Have yet to test that I didn't break anything...
@- Uncommitted outstanding OCI8 transactions are now rolled back @  before the connection is closed. (Thies)
@- ignore_user_abort() & friends should now work in CGI mode as well. @  (Patch by daniel.braun@ercom.fr)
ChangeLog update
NEWS update
Check lib.
Add -traditional-cpp for Rhapsody and -D_BSD_TIMEOFDAY_FLAVOR for DG/UX.
proto takeover from php3
The behaviour for result == NULL || entry == NULL is undefined.
If no further directory exists, php_readdir_r() returns success and sets *result to NULL.
Adding PHP_EXIF directive to actually include the functions
Updating workspace with the latest modules
Adding project for new exif module
Add enable-threads flag for gcc on HPUX
Support old-style readdir_r()
Avoid building two versions of the time-related reentrant functions.
@ New module for reading EXIF header data from JPEG files.  Most digital @ cameras will embed all sorts of information about a picture inside the @ jpeg images it generates.  (Rasmus) exif module
rename hastable -> _hashtable to avoid clashes
add rdbuf() to our own istdiostream implementation, allowing C++ compile using SUN and SGI native compilers. (by Jayakumar Muthukumarasamy <jk@kasenna.com>)
remove gremlin
Added PostgreSQL module info function.
php_basename() prototype changed according to latest changes in string.c
ChangeLog update
NEWS update
Convert config.m4 to make use of the new build system features
Make imap extension buildable as shared module.
Make recode extension buildable as shared module.
Make msql extension buildable as shared module.
Add INFORMIX_SHARED_LIBADD to LT_SHARED_LIBADD
Make informix extension buildable as shared module on Unix.
A couple of cleanups and shared-libadd additions
another bunch of proto fixes
proto function name fixed
added a missing proto
Make gettext extension compilable as shared module.
even more protos were missing
some protos where missing, took them from php3
proto typo fix
some protos where missing proto keyword
protos where lacking return types
integratet protos from php3 version
some protos fixed commented out yet not implemented function icap_popen() from functiontabe
some protos got to the wrong function - fixed
Add check for Bison. A recent version is required when in ZTS mode.
one little unimportant detail (cut&paste is evil :)
a little less optimized, but no dirty tricks anymore
Make calc_levdist static and fix pointer swapping.
- Update Windows project to include levensthein.c and update NEWS file
Add interesting email which explains why disabling -fPIC works on Linux by Martin v. Loewis <martin@loewis.home.cs.tu-berlin.de>
- Virtual current working directory is now enabled - Added support for mkdir()/rmdir() and more
Cosmetic changes
Some systems don't have dirent.h. Wrap include appropiately.
Use reentrant version of readdir. If the target platform does not support the POSIX-like readdir_r, we fall back to readdir. In ZTS mode, this will cause php_readdir_r calls to be serialized.
Add POSIX-like readdir_r for Win32
- English fix.
name changed from levdist() to levenshtein() (although i bet we'll get a    levenstein() alias some day)
- Support virtual unlink()
added function "int levdist(string str1, string str2)" that will calculate the Levenshtein distance between two strings (faster and possibly more accurate than similar_text())
Changed the #ifdefs around "errno = ETIMEDOUT;" to include the rest of the statement ["if (n == 0)"]
- PHP_WIN32 macro should be used with #ifdef/#ifndef - Always use PHP_WIN32 instead of WIN32/WINNT values
Revert recent COMPILE_DL change.
Clean up the patch by Hartmut.
'char *' to 'char'
fixing type
chang #if to #ifdef
fixed newly introduced crash
Use new syntax
--with-foo causes $withval to be set to "yes," not ""
even better check for netinet/in.h
make ftp compile on unix again
s/COMPILE_DL/COMPILE_DL_EXTNAME/
Use #ifdef COMPILE_DL_EXTNAME solely.
s/COMPILE_DL/COMPILE_DL_EXTNAME/ for Windows build files.
Only print the attention thing, if the MD5 and DES checks failed.
making ftp module compile and work on win32
bump version to 4.0.1-dev
According to current PostgreSQL docs, using PQoidStatus() is deprecated.
again (due to feature request in bug id #3251) added optional 3rd parameter 'limit' to explode() as in split()
@-Add the swf_ortho function. (Sterling)
ChangeLog update
NEWS update
fix for bug #2852 : argc inconsistency
-i, -v, -h and -? execution pathes didn't flush the output buffer on exit, resultiong in no output at all when "output-buffering=On" ( BUG id#3420 )
Add section about adding shared module support to an existing module.
oops forgot to save project before commit
adding project for swf
applied Luca Montecchiani's win32 fixes (open files in binary mode using the "b" fopen flag, and use closesocket rather than close when closing sockets)
@-Allow the writing of flash files to stdout.
Add SWF.
in [mt_]rand(): (see BUG #3353) - additional range checking for (max-min)<=[MT_]RAND_MAX - [mt_]rand(0,[mt_]getrandmax()) will now work without integer overflow
# Guess I'll take it for now... there's actually even something coming, just # waited for 4.0.0 to be released.
Sigh, that should be the last one :I
- Remove ugly Ltd.
- Make calendar compile as a dll on Windows
Notify people that .phps is now fixed
ChangeLog update
fix bug 4533
Windows build failure
- Move activate_models() back to where it was. I don't want to make such - an optimization right before 4.0.0. Who knows, maybe one of the phpinfo() - functions depends on some information only available after RINIT. - In any case, my fix for .phps stays in.
- Get ready for release
use simpler foreach instead of while
passing Strings as Objects
Turn off retrieving the whole error stack
ChangeLog update
patch to explode (bug id #3251) suspended till 4.0.1
ChangeLog update
Proto fixes.
added optional 3rd parameter 'limit' to explode() as in split() (due to feature request in bug id #3251)
Give some more room for configurability
be consistent with the URLs
fix the fix (it's still a hack)
make sigchild handler more robust.
Open these up for the API
added some Notice about --enable-sigchild
Minor output mods
ChangeLog update
added new option "--enable-sigchild" (default is off) when using this option php will setup it's own SIGCHLD handler. when using oracle-libraries >= 8.1 on linux you need this option if you are connecting using the BEQ interface - elsewise you will see <defunc> processes whenever a php-script disconnects from oracle.
22 May is my birthday!
Package 4.0.0
Update the license with the new clause 6
Do it in thread unsafe mode for now.
Later AOLserver releases will copy the include to the installation dir.
Kill warnings
Cosmetic change
Make the shared library suffix dynamic. Improve workaround for libtool's inflexibility WRT -avoid-version to support various numbers of .0
- Do this someplace else.
- fixed bug #4076
Update for sort functions - user can now specify sort type.
ChangeLog update
NEWS update
Tough to explain in two lines.
Update for sort functions - user can now specify sort type.
Make the SWF module compile again + 1 stylistic change.
- Make non-threaded project build on Win32
proto corrected
proto-takeover from php3
proto takeover from php3
proto-takeover from php3
typo fix
correction
- Nuke dlist.[ch] from Win32 build.
- Remove dlist from build
- Remove dlist.[ch]. Should not be needed anymore
Add debug.log facility. If there are any obscure bugs in our build system, this will give us enough information to find and fix it.
proto-takeover from php3
- Add support for string_compare_function() and number_compare_function().   UNTESTED!
Second parameter is optional.
took over missing prototypes from php3 source (copied them only, didn't check for parameter changes!)
name in proto should be name of real function, not alias
Normalize results of compare_function()
.
- fixed wrong interpretation of last parameter of swf_rotate() - add MOD_COLOR and MOD_MATRIX constants
- test script to test creation of flash files
Only allow loading of extensions only during .ini file parsing
Let's cast it.
@- Improved round() to allow specification of rounding precision. @  (Andrei, Todd Kirby <kirbyt@yahoo.com>)
ChangeLog update
Add missing prototype
ANSIfy declarations/prototypes
s/normal/SUSV2/
Remove extra declarations of cwd_globals(_id)
- Small optimization. Filling up the Cache helps performance.
- Reverse the patch until I have time to look at it. The global id should   be defined by ZEND_DECLARE_GLOBALS(cwd)
- Commit Sascha's patch to the virtual_cwd code. Will test it on Windows   soon.
- fixed prototype
ChangeLog update
NEWS update
Complain loudly and stop configuration, if we cannot run apxs.
Use "mkdir -p" instead of "test -d || mkdir" where possible
Cosmetic changes
Complain, if write(2) failed.
@- NULL values are now preserved in the return value of mysql_fetch_array() @  and mysql_fetch_object(). (Andrei)
Define PHP_SELF properly with Zeus+ISAPI
fix .sl <-> .so recognition
Drop slower strchr in favor of memchr.
this now works on .so and .sl (HP) systems
ChangeLog update
NEWS update
# I think it's safe say so now... @- InterBase module finally ported from PHP3 to PHP4. Full support for @  InterBase 6. (Jouni)
@-Add swf_definepoly for drawing polygons to the SWF functions. (Sterling)
Please maintain consistency in these names... :)
@-Port imagegammacorrect from PHP3 to PHP4. (Sterling)
ChangeLog update
Do not use non-standard type u_int32_t.
"INT" configuration values must be of type long
ChangeLog update
Add Meself for LibSWF.
# Correct spelling, adding Andrew because half the code in that module is # his, removing myself from Informix because I don't think my influence to # that module was big enough worth mentioning, adding myself to GD because # I think T1lib is worth mentioning. BTW, who wrote the TTF extension? I think # he is missing credits here.
Testing.
test
Another test.
Testing.
test
i18n, part I
Changed ibase_num_fields to use high-performance api (which fixed a *very* obscure bug).
Remove directory test when creating directories using mkdir -p
Upgrade shtool to 1.4.9 and fix "mkdir -p" behaviour. Patch has been sent to the author of shtool.
ChangeLog update
Get rid of chval - it's really not necessary and seems to be confusing people
Refined fix
Prototype adapted
Restoring old parameter ordering in odbc_fetch_into()
- Remove unneeded object_init(return_value) from three places
Typo.
Forcing passing by reference for array in odbc_fetch_into() Added function odbc_column_scale(), new alias odbc_column_precision for odbc_column_len Added better description in Prototypes for some functions
build error on Unix
ChangeLog update
-  fix for SQLLVARCHAR provided by Alan Shepherd. (Danny)
Move to past RC2.
fix for segfault. patch from Jade Nicoletti <nicoletti@nns.ch>.
- Bump up Zend extension version number
make waning readable
revert last patch - you can only specify the dl() path relative to extension_dir again
ChangeLog update
NEWS update
Support (partially) the new datatypes in InterBase 6.
@- Added array_rand() function. (Andrei)
Thoroughly initialize IS_UNUSED for proper cleanup
- Change Zend Engine version number
- Return real size allocated
Make zend_binary_strcasecmp compile again
config.m4 redone - now supports building oracle extension as shared module # i really hope i didn't break linking agains ancient oracle-versions!
Make strcasecmp() act correctly WRT SUS II.
oracle.c expects _ORACLE_
imporved version detection
oracle/oci8 no longer share the compile-time infos
rewritten the configure stuff
AC_ADD_LIBRARY_WITH_PATH now always prepends new libraries.
support empty libpath in AC_ADD_LIBRARY_WITH_PATH make sure the link-order for shared and static builds are the same
(php_dl) treat path as absolute if it starts with '/'
ChangeLog update
another minor change to test CVS mails again
Never tell link editor to libc. Some systems use thread-safe replacements for libc in Pthreads mode.
Libtool creates libphp4.so.0.0 on at least AIX and FreeBSD 2.2.
executor_globals is always passed to MINIT functions
s/localtime_r/php_localtime_r/
ChangeLog update
Avoid relying on non-standard tar `z' option.
Move <syslog.h> inclusion into php_syslog.h. This will make sure that all source files "get it."
This change addresses an issue on systems which cannot link against libnsl and libsocket, resulting in segfaults. If yp_get_default_domain is available after checking for libsocket, we assume we do not need libnsl anymore.
On some systems, <syslog.h> defines syslog to another symbol, so that syslog.lo does not contain the expected symbols. Including <symbol.h> in basic_functions.c fixes the resulting linking problem.
add nsapi to workspace
news
nsapi now compiles under win32, untested
- Make zend_eval_string() return SUCCESS/FAILURE
- Make $obj->test = 5; work again (assigning to uninitialized objects)
add apache module to workspace
some news
Some breaking news for RC2.
It helps to change the comment too.
oh boy! apache-win32 works!
Enable assert by default,
Planning for 4.0RC2 on Monday
ChangeLog update
Testing.
Linking directly against libc might result in unexpected behaviour. We check for dlopen in libdl first, and check then whether dlopen exists.
Assign/restore vars appropiately
Move dlopen in -ldl check to configure.in. This should ensure that if libdl exists, it will be always found. We define HAVE_LIBDL now always, if the function dlopen is found.
Put in a hack, so that users can compile PHP, even if the configure-time checks failed to detect the capabilities of crypt().
- Make Windows compile again.
ChangeLog update
NEWS update
testing
Updates for changed WDDX API.
Done.
. Reworked string serialization . <, >, and & in strings are now properly escaped . Removed a lot of unnecessary calls to strlen()
Generate missing files
Typo.
`.deps' are sourced only by Makefiles created by fastgen.sh, so it makes sense to create empty .deps there.
Don't distribute ChangeLog. You can download it from lxr.php.net
Remove trailing slash(es) from pathnames
Some formatting.
- Add -z and -g switches to the CGI
If using a persistent connection, check if it's still there and reopen if needed.
Install extensions in different directories, so that users can have various PHP installations with different parameters.
s/strtok_r/php_strtok_r/
Missed localtime_r/ctime_r. Prefix them with php
Don't automatically assign pthreads_cflags/pthreads_libs to env variables. That allows us to check for the availability of POSIX threads before actually using it.
Change reentrancy API to always use the php prefix.
Determine first whether we will use ZTS mode or not.
more apachewin32 work.  much better now, but still crashing in zend_execute.  At least it's getting the file open now though.
ChangeLog update
NEWS update
.
have to work now - maybe iÄll do it tonight
- Change fetch_type to be zend_uint
- Change the place CAST uses for the op_type
Let's enable assert by default since it's so useful.
Add fact that every entry in NEWS has to have a name after it
Sascha pointed me in the right direction.
We want to have name at the very end.
Correct build breakage - win32
Moving README-BCMATH to README.BCMATH
I am going to move README-BCMATH to README.BCMATH for consistency.
Changed install-local to install-sapi for clarity. @ Moved install-local to install-sapi for clarity. (Joey)
Shut up CVS and make cvsclean wipe this file out...
ChangeLog update
Complain loudly, if we were not able to install everything.
adda dir..
Verbose "give the reader a quick success" tutorial
Make bcmath buildable as shared module
.
Set abs_srcdir. Last example in README.S-C-EXTENSIONS works now.
Make MySQL independent of build location
Add a ; for Sybase
First try at explaining how to create a self-contained extension
Pear Changes:
Move install-modules target into top-level Makefile template
- Shouldn't be needed. The configuration mechanism makes sure this is - up-to-date
Change zend_hash_get_current_key_ex() to also return the string length
Preset extension_dir to the installation directory of PHP modules.
Make php_dl() respect the configured extension_dir setting.
calling a function that is not supported in the current build due to a missing library or unsupported feature (especially GIF-Output) will now give a slightly more usefull error message than eg. " Call to undefined function:  imagegif()" (this seemed to confuse a lot of users ....)
Updated build advice for different platforms
Protect everything which requires <libpq-fe.h> with PHP_PGSQL_PRIVATE
Include php_virtual_cwd.h for V_OPEN
Make filepro compilable as shared module
Make dbase compilable as shared module
Make sybase compilable as shared module
Make readline compilable as shared module
Make interbase compilable as shared module
Use the new AC_ADD_LIBRARY_WITH_PATH option shared-libadd
Make mcal buildable as shared module
Add shared-libadd option to AC_ADD_LIBRARY_WITH_PATH.
Make dba compilable as shared module
Make mhash builable as shared module
Make mcrypt buildable as shared module
Make ftp buildable as shared module
Make calendar buildable as shared module
Make icap buildable as shared module
Make sysvshm buildable as shared module
Make sysvsem buildable as shared module
Add ZEND_GET_MODULE(name). This is a short-cut for the common get_module function.
Make yp buildable as shared module
Make zlib buildable as shared module
ChangeLog update
NEWS update
    #if COMPILE_DL
Replace the various get_module() functions with a uniform ZEND_GET_MODULE(name) macro.
Make swf_nextid() return a value.
Remove trailing empty lines
Source file does not end with a newline. Some old compilers don't like that.
Never mind on the error check
Large test commit IV
Large commit test III
Large test commit II
Large test commit I
Make posix module buildable as shared module
Revamp config stuff
.
Dynamically allocate points for ImagePolygon (Marc Pohl) @Dynamically allocate points for ImagePolygon (Marc Pohl)
Use GCC's --print-libgcc-file-name flag to find libgcc's path.
It's nice to keep them alphabetized.
Nother entry.
Added a way to get all declared classes.
New function.
oops wrong settings commited in project.
adding calendar project
Small fix: Description still referred to package as PHP3.
Remove white-space, breaks UnixWare make
Forgot to mention: Added configure time checking for bcmath package. (Thanks, Sascha!) @ Added configure time checking for bcmath package
There was already a perfectly good README-BCMATH, I just found the different naming confusing.
Shut up CVS
php_reentrancy.h is needed for strtok_r
Ignore standard files
Rebuild xml, if libexpat changed.
Link expat into static and shared module.
Copy dynlib.mk to the build directory.
Get rid of old cruft. Broke build on Irix.
Improved in-tree shared libraries build system
ChangeLog update
NEWS update
Added info about the swf module
Allow the SWF module to compile as a dl.
Proto's and the such.
Ignore standard files
- Change some open's to V_OPEN()'s
Add LibSWF support to PHP, will be sending an e-mail on the files and uses shortly.
Add initial NSAPI module from Jayakumar Muthukumarasamy @Add initial NSAPI module from Jayakumar Muthukumarasamy
- Take Sascha's advice and create on V_OPEN() which replaces open(). - Unlike the other macros its argument has to have braces around it, for - example, open(filename, flags) becomse V_OPEN((filename, flags)) - Made small conversion to new Zend macros. The ugly (*foo)->value.str.val - now becomes Z_STRVAL_PP(foo). PP means pointer pointer, there also exist - single P's for example foo->value.str.val becomes Z_STRVAL_P(foo).
Debian 2.2 puts rfc822.h in /usr/include/c-client, check that place too.
# Changes modules current status
Moving module to the high-performance API & fixing it for PHP4.
zeroing the variables fixes one crash...now crashes on memory allocation during zend_compile_files
Add UnixWare/OpenServer flags
sorry, do comments right
apache module now compiles under win32, apache loads, but crashes on line 1167 main.c on page request
Overall UNIX build system improvements:
(The first part of this commit died with a SIGPIPE from the CVS server.)
Overall UNIX build system improvements:
ChangeLog update
NEWS update
- Implement V_OPEN() V_OPEN_CREAT() and V_CREAT().   Next step is to substitute all open()'s and creat()'s in the PHP tree
@ Updated natural comparison/sorting algorithm by Martin Pool @ <mbp@humbug.org.au>. (Andrei)
- Never mind. Seems like we're still missing the open() functionality
- Give VIRTUAL_DIR another try after testing it extensively on our web site
Oops, wrong path
An empty .deps was not getting generated here
Pass the op_array to the ctor/dtor, instead of just the resource
crash fix
- Add zend_llist_apply_with_arguments() - Add a message handler to the extensions
.
Beautify
ChangeLog update
NEWS update
Improve imap-lib check
no more broken scripts by erroneously terminating header()'s argument with a CR-LF
Removed bug that prevented it to work on longer strings. Changed commenting to c-style commenting.
Make convert_to_string() allocations traceable
(php_module_startup) is now doing setlocale(LC_ALL, "") instead of just setlocale(LC_CTYPE, ""). suggested by Jon Forsberg <zzed@cyberdude.com> # this change simply seems "right" as setlocale(LC_ALL, "") also happens in RSHUTDOWN(basic)
.
compile fix
no longer needed
ChangeLog update
*** empty log message ***
Change to using the #define's
Change to using macros
More error handling work (still completely disabled)
More error handling work (still completely disabled)
Please, no more bug reports about bcmath
TODO update and fix for C++ comments.
using vi to update DevStudio Files, yeah!
.
allow oci8 to be build as loadable module.
ChangeLog update
NEWS update
Small proto fix.
@Added substr_count() from Peter Kovacs. (Andrei) # also some todo stuff
We'll need two...
Add useful macros
ChangeLog update
* typecast fs_give parameter to void** * removed wide-character treatment from imap_utf7_encode * suggestion to #include "linkage.c" rather than link in auth/mail drivers   manually
- Forgot to keep the ':' in the class_name
- Get rid of newly introduced warning
.
Correct fix
MODULE_TEMPORARY should get a call to RSHUTDOWN as well!
RINIT was called twice for modules loaded vi php.ini
Exterminate warnings.
The third argument to fseek() is now one of the standard SEEK_* constants.
fixed shutdown crash if MSHUTDOWN tries to php_error() something.
enabel PDB
fix warning
ChangeLog update
NEWS update
@-Add an optional third argument to fseek to indicate were to seek from. (Sterling)
Moving output files to common folder
Removing invalid readme file
moving pointers to header and library files to match php_build structure
adding project file for mcrypt module
Add a new directory for File (it was supposed to be there in the first place).
ChangeLog update
back off from high-performance api in imap_rfc822_parse_adrlist. if you called it twice on the same string, there were _strange_ side effects. This may be slower, but it works.
- In Windows RAND_MAX is defined in stdlib.h - Get rid of comment which is confusing.
- Hopefully fix mt_rand() functions under Windows. This patch will effect   all platforms so I hope it's OK.
ChangeLog update
NEWS update
add VDIR info
add oracle and oci8
.
oracle compiles now on win32 - untested!
*** empty log message ***
- Missed second argument
make it compile on Win32
export zval_add-ref and zvale_del_ref
- Small fix to virtual_Chdir_file() to include the trailing slash when   the file is in the root directory.
Moving output modules
Adding a short WIN32_HOWTO and moving library and header files to php_build
@- OCIBindByName() will no longer complain about bindlength beeing zero. (Thies)
createfrom* fixes
ChangeLog update
Compile fixes
Add .txt files to .dsp's
Another consistency fix
Consistency fix
A few .dsp fixes
- Change a getcwd()
Adding Java project to modules workspace
Adding ftp project to modules workspace
- virtual_lstat() doesn't exist on Windows.
Adding project file for ftp module on Win32
Remove strlcpy from the zlib project
- Add the zlib project to the php_modules workspace, and fix it's C-runtime definitions - Move IMAP to the high performance API
Adding strlcpy to makefile
- Export strlcat()/strcpy() for Frank. - Windows doesn't have lstat().
Making zlib compile under Win32 and fixing a typo
- Add missing V_STAT()
New style
Do not enable GD, if --without-gd was used
- Change macro names from Z to Z_
- CHange macro names from Z to Z_
Add some macros for nicer zval handling
Do proper ieeefp.h check.
Check for ieeefp.h.
- Another PHP_WIN32 patch
- Change to PHP_WIN32
improve fix
compile before commit! compile before commit! compile before commit!
revert andrei's path (i can't compile anymore on linux) we're always using #ifndef HAVE_BLA instead of if !HAVE_BLA and if we need ieeefp.h for some weird platform (which one is that?) we need an autoconf check for it.
ChangeLog update
NEWS update
*** empty log message ***
A little easter egg for April 1st ... :)
Modified entry.
Just a type cast is sufficient.
SIGPIPE is unknown on WIN32 platforms
Include proper files for finite.
Make ext/calendar optional.
ignore SIGPIPE in standalone-mode so that one can actually use fsockopen() *and* have the remote side close the socket whithout PHP dying!
author fixes
Improve performance of the PHP_SELF registration under ISAPI
Support E_USER_* error types
Initial support for trapping errors (not complete and disabled;  will be enabled only post-PHP 4.0.0)
Some fixes.
Kill warning
- Renamed get_used_files() to get_required_files() for consistency - Documented some functions - Added user-level warning messages - Added user_error()
fgetcsv() patch from Nick Talbott @ The fgetcsv() function now handles embedded end-of-line in a quoted field @ (Nick Talbott)
phpcredits() update.
- Export pass_include() for Windows
ChangeLog update
NEWS update
Add convert_to_writable_*_ex() macros (unused at this time)
Corrected some protos.
indent/beautify
Document the ob_*() functions
# Document module status
# Reaching alpha status with this module...
ChangeLog update
minor optimization
fixed imap quota/relogin compilation errors
Have forgotten myself.
ups, finite is already a macro on Win32
shut up CVS!
ignore stuff
HPUX11 only has isfinite()
initial checkin
ChangeLog update
This doesn't belong in NEWS.
Undefine HAVE_*_R, so that we get our replacements
Removed unnecessary FAR's (I am assuming we don't need to work under 16 bit windows). They break several ODBC builds.
The comma is also optional.
Updates
added unixtojd() and jdtounix() to convert from unix time_t to Julian Days and vice versa
ChangeLog update
NEWS update
made calendar a real extension instead of a dl one only
Adding mssql to modules
Adding $PHP_SELF variable for compatibility with other platforms
SECTION is not defined in info.h anymore
Support install directories other than srcdir/root
Add documentation on how to install PHP in AOLserver
hpux needs _REENTRANT
fixes compile on platforms without dl() support. #i think zend_register_extension should be declared static
- PHP_FOPEN -> V_FOPEN
Remove unnecessary argument
 - Change PHP_ to V_ (directory & file functions)
- Change PHP_ to V_ (directory & file functions)
@ "use" is not yet supported; instead use include_once() or require_once() @  for the time being (Andi, Zend library)
Forgot to commit the php4 fixes
- Clean up resource lists namespace - Prepare extended resource list destructor APIs (currently unused)
- fix Win32 Release_TS build of Informix driver (danny).
ChangeLog update
NEWS update
Small corrections.
ChangeLog update
NEWS update
Add the documentation team to the credits page
Make error_prepend_string and error_append_string work @Make error_prepend_string and error_append_string work
Undo bogus commit
I don't see why this should be gcc dependant and this fixes bugs 4140 and 4143
fseek() idea.
Oops - remove debug statement
match changes to Tomcat example
@- array_walk() now automatically resets the array. (Andrei)
- Make Windows builds build again - Make non-gcc based platforms compile again
the asset call caused an undefined __eprintf here!
Test for EBCDIC platform
Claim some stuff.
Already done.
Added natural comparison/sorting routines using code from Martin Pool.
make it compile on Win32
something with the @ commit stuff *is* broken.
@- Zeus Webserver support (version 3.3.6+) for ISAPI
*** empty log message ***
Re-add.
One off the list.
Added PCRE 3.01.
*** empty log message ***
- Turn off VIRTUAL_DIR by default
another option
Eliminate warning if virtual cwd is specified
- Added support for reading properties that require arguments in the COM   module - writing to them will only be supported in PHP 4.1 (Zeev)
indent
*** empty log message ***
-
Object overloading API changed slightly (llist is now a pointer)
- Add warnings
- Two more places needed changing
Clean up last/size definitions
- Try and resolve the problem with current working directories not being   set to the script directory
- Don't need to extern functions - Use virtual_file_ex() in expand_filepath()
*** empty log message ***
fixed unterminated string constant introduces by foreign patch.
added the other usefull constants besides M_PI from math.h  as PHP constants
- Make all CVS users use the new virtual dir support.   Will probably disable this for the release.
@-Added ldap_get_values_len function from PHP3 to PHP4. (Sterling)
Add a missing expand_filepath()
Thoroughly fix include_once()
*** empty log message ***
recommended changes
last one ... promise
typo
typo
prettying
*** empty log message ***
more prettiness
Unify
Removed some compiler warnings.
@- Added php.ini-optimized (Zeev)
- This slipped in. Enable VIRTUAL_DIR when we're in ZTS. Eventually it   should always be enabled.
- Add wddx support to the default build
cleaning up some small off-by-one errors and argcount follies. Can someone take a look at the errors imap_mime_header_decode() generates when compiling? I took a quick look, but don't have time to puzzle through that code.
- ZEND_DEBUG is always defined
phpinfo() pretying
phpinfo() prettying
*** empty log message ***
*** empty log message ***
a better way, i've been told (thanks)
More phpinfo() prettying.
Initial preparation for OO overloading patch
@- Added ldap_errno, ldap_err2str and ldap_error from PHP3 to PHP4. (Sterling)
Corrected compilation error with wrong number of arguments to php_info_print_box_start()
typo
phpinfo() prettying
phpinfo() prettying
Update the PHP logo
- Bump up version number
finally (thanks Andreas)
still cant get this
- FIx JMPZNZ
- Not needed anymore
- More fixes
phpinfo() prettying
phpinfo() prettying
fixed the segfault problem (probably not the prettiest way, but)
phpinfo() prettying
Prettying up the output of phpinfo().  Someone has to tell me how to get a new .gif logo in there, and why the ZEND_DEBUG output is causing seg faults.
The ISAPI module was incompatible with the CGI fix, which ruined POST's
fix typo: wrong variable name
look for Tomcat binaries too
Make it clear that the jawt example is only intented to be run as a CGI
Define PHP_SELF in sapi/servlet. Reported by Lim Swee Tat <limst@ncscom.sg>
Windows build: xmltok is needed by wddx
Make MySLS_FETCH use the same globals ID as ZEND_INIT_MODULE_GLOBALS
- One more fopen -> PHP_FOPEN patch
return false after determining that a message number is bad, instead of going on to crash.
Additional check for IS_OBJECT.
- should fix a problem with ifdef
@- WDDX now defaults to ISO-8859-1. (Thies) # andrei, plz have a look at my changes - seems to work for me!
export xml_utf8_decode for wddx module
(var_dump) cleaned up some weird & buggy stuff
- all functions returning a list of object record should be faster now   and require less accesses on the server
forgot @ thingie
buffer was short by one
Return type was missing.
tweaks to prototypes
update function protos. should all be there now
adding mcal and gettext to MODULES_STATUS
*** empty log message ***
- fopen and ZTS fixes
test -e doesn't exist on Solaris - substituting test -d
*** empty log message ***
*** empty log message ***
*** empty log message ***
@- Add $HTTP_POST_FILES[filename][tmp_name] - it was previously impossible to @  retrieve the temporary name of an uploaded file using $HTTP_POST_FILES[] (Zeev) - Changed IMAP Win32 definitions
- Create dtor function
- This version of chdir_file should be compatible with the Apache one.
- A bit more cleanups. - Need to implement virtual_chdir_file() to replace chdir_file() in   sapi/apache so that we can start testing apache and debug it.
- Virtual cwd compiles now (need to uncomment #define in php.h for it to   be enbaled right now).   It seems to work very basic stuff
*** empty log message ***
- Move to new Zend macros
- PHP_WIN32 is not defined here use ZEND_WIN32
- More virtual_cwd work
- Make php_virtual_cwd compile
Accomodate back level (JSDK 2.0) implementations
- Need zend.h for ZTS
-
- Intermediate commit
Oh yeah, committing these would be a good idea:)
Several fixes
@- Made the IMAP and LDAP modules compilable under Windows and thread-safe (Zeev)
*** empty log message ***
.
Have a standard way of exporting symbols
Up version number to 4.0RC2-dev. (4.0-dev looks too general for now.)
Use int
Generalize some common thread-safety stuff
Have a standard entry for the globals id
Added some things that I forgot to add when I did them.
- This shouldn't do any harm and might fix a problem with Win32
Would be good.
That should be it
Remove more files
Remove bindlib_w32
Several fixes, plus remove bindlib_w32 (it's more trouble than it's worth)
*** empty log message ***
The previous fix ended up being broken, this one should do it
- One more update
- Add bindlib to the Win32 build
- Add bindlib_w32 to the PHP tree
Use C style comments, per the CODING_STANDARDS
Remove trailing slash
fix indentation (this project has tabstop=4!)
* Include <stddef.h> for NULL * Check for pthread_mutexattr_init() for improved SGI support
eliminate chdir if it is already virtual
- Hopefully got most of them. We also need a chdir_file function like   for Apache.
- Baby steps... Use PHP_FOPEN()
- Use PHP_CHDIR()
#Stylistic changes.
Non-functional changes
Build the bundled mysqlclient library thread-safe in thread-safe mode.
@-added session_get_cookie_params (sterling)
kill warning
* Add --enable-libgcc which explicitly links against libgcc.
.
Allocate enough memory for additional /.
- Bump up API number after Lars' change
Give another hint to BSD makes
Propagate pthread_cflags to CXXFLAGS and INLINE_CFLAGS
Some OS prepend _ to symbol names while their dynamic linker does not do that automatically. Thus we check manually for _get_module.
Specifically mention $(srcdir), so that OpenBSD's make gets it
Specifically mention $(srcdir), so that OpenBSD's make gets it
fix bug 3971, SNMP now compiles on FreeBSD.
Missed Andrei's @ note...
Added !== (is not identical) operator.
GC now prints out how many session objects were removed
Improved error messages
@- Changed the Windows version of PHP so that a php.ini file is no @  longer mandatory (Zeev)
*** empty log message ***
*** empty log message ***
Do not add dl function, if libdl is not present.
- Make sure zend_API.h has Zend'ish versions of the ZEND macros so that   Zend'ish modules don't need to mix PHP & Zend notation.
#yikes stripes, didn't see that one #its time to go to bed Re-fixed return value of min and max
single, sorta proto.
1.  Holy protos Batman. 2.  Converted some functions from using "return" to RETURN_FALSE
@- session_start() is now more verbose if headers cannot be send. (Thies)
Tis protoriffic.
Sterling, only one line for the short descritption, even it is massiv.
*** empty log message ***
*** empty log message ***
The checks for func_num_args() and friends were broken - fixed
Description differs between version 3 and 4.
- added pdf_open_image_file() to read jpeg, tiff, gif and png images
Couple of thangs:   1.  We've got protos!   2.  The second half of the script is now most Zendiferous.
Use PHP_ARG_WITH
Welcome PHP_ARG_ENABLE and PHP_ARG_WITH. They are there to replace the common AC_MSG_CHECKING, AC_ARG_[ENABLE,WITH], AC_MSG_RESULT trio.
Generate better skeleton config.m4
These should not be exported
* Check the default location of Berkeley DB 3.0 * Check additionally for libdb-3
That's one thing @ missed...
Slight change for time on the return side.
*** empty log message ***
*** empty log message ***
GNU make is not required
Remove debug libraries from debug build
Whoops!  Not everybody want Java included by default!
Update the INSTALL docs
Remove debug runtime libraries from Release builds
support non-debug builds
support non-debug builds
PHP_EXTENSION sets $ext_src_base
Some white-space changes
Ignore errors at this place
Allow MySQL to be compiled against extern mysqlclient library
Use compression for makedist
Package RC1
- Stop zend_func_args() and co. from crashing
- Change new -> result. Using C++ keywords isn't too hot
- Didn't see Thies' commit message although I can't really see how it would   make a difference
- Include Andrea's fix for alloca.h
<alloca.h> needs to be included before we define macros calling alloca() atleast using SGI's cc - should not harm other platforms (i hope)
Return value corrected.
no c++ comments // please
fix cast
imap_clearflag_full now returns true appropriately.
JAVA_LIBPATH was not allways being added to the LIBPATH
Revamp session's config.m4 and reenable support for mm. The shared memory module works now successfully again under Apache and other web servers.
Add MSIE 5-specific Cache-Control fields
Tid Bit More.
Update .dsp's
- snmpwalkoid is an alias now - small optimizations - delete that switch case in php_snmp   =The different functions are now in the PHP_FUNCTION declaration thingies - If-else blocks have brackets
*** empty log message ***
- Update dsp - Remove unnecessary includes
- Some header dependencies cleanup - Generalize zval_print() and zval_print_r()
- Support getcwd() semantics. - We need to change this whole business to work with ZTS globals
Dynamically load java support, for better error messages
RTLD_NOW => RTLD_LAZY|RTLD_GLOBAL
Update dsp's
andrei, i'm sure we're missing some @ entries in NEWS (this one is one of them)
@- Modified the registry INI entry reader (Win32) to work with drive letters.  For @  example, if you wish to wish to specify INI entries for C:\foo\bar, you should @  create HKLM\PHP\Per Directory Values\C\foo\bar in the registry, and add @  string values for each directive you want to override in this directory (Zeev)
- Nuke hash_*_ptr() functions
- Nuke hash_*_ptr functions
- several clean ups
Use WRONG_PARAM_COUNT.
- Make it compile
Added get_class_methods().
Added get_class_methods().
- Change Zend version as API has changed
- Wrong fix
- Only free when result != op1
@- stristr() no longer modifies it's arguments. (Thies) fix #3890
Attribution.
- Adjust for change in zend_startup()
- Change zend_startup to accept a flag for starting builtin functions
- Move #defines
ChangeLog update
NEWS update
Please use @ in front of _all_ lines intended for NEWS file.
As it turns out, there are some browsers that can't handle default charsets.  I think forcing this on is going to cause us a lot of headache, so turn it off by default. @ Don't default to iso-8859-1 since this confuses some browsers
Make it possible to specify both a port and a socket in mysql_[p]connect @ Make it possible to specify both a port and a socket in mysql_[p]connect
ChangeLog update
initial function prototypes
Leave sendmail_path commented out to pick up compiled-in default
Added new function: imap_mime_header_decode Decodes mime header elements in accordance with RFC 2047.
- Quick fopen() support. The code needs some cleaning up and we might   need to think of performance issues with the strdup()'s (definitely   use strndup() and maybe try to do with less string copies).
I suppose errors should be printed prior to endthread
do this only on win32
just a little more detail in exception report
libmysql must use USE_TLS for multithreaded compilation on windows.
Cleanup
(var_dump) removed "refcount-hack" - comiles without warning again (&works).
fix some protos
kill warning
ChangeLog update
NEWS update
A small fix when checking for libjpeg
@- Added --disable-pic for disabling generating PIC for shared objects    on platforms which support it (i.e. Linux) (Sascha)
Make it compile
- No reason for refcount to be signed and move to zend_* typedefs
*** empty log message ***
(serialize/unserialize) _sleep_() -> __sleep(), _wakeup_() -> __wakeup() rename.
renamed _string_value_() to __string_value().
*** empty log message ***
The third argument to define() wasn't working right, fixed
ChangeLog update
is_executable() for root fixed this is an intermediate patch, switching from stat() to access() for is_(readable|writable|executable) shall fix the whole topic once and for all
ChangeLog update
NEWS update
ftruncate returns 1 on success and 0 on failure instead of 0 on success and -1 on failure.
- Last one for today.
- Allow passing of a verify function. This way we can easily create   chdir() and expandpath() wrappers.
- Note quite sure why this wasn't done.
Cleanup
- php_is_dir_ok() should work on Windows now.
- Make it compile on Windows.
Use old_state
(php_check_dots) we don't need len
virtual_chdir:
restore compilation on ZTS enabled environments (like Windows)
- Add initial virtual_getcwd() and virtual_chdir() for discussing with the   rest of the folks
@ Added is_numeric() that returns true if the argument is a number @ or a numeric string. (Andrei)
share some thoughts
*** empty log message ***
@- serialize()/unserialize() now call _sleep_() and _wakeup_() when @  working on objects. (Thies) @- renamed to_string() method to _string_value_() for consistency. @  (Thies, Zend library)
renamed "to_string" -> "_string_value_"
ChangeLog update
Adding .cvsignore to ext/recode
Use CPPFLAGS for reentrancy/thread flags
- WIN32 -> PHP_WIN32
Make zend_hash_move_forward()/zenv_hash_move_backwards() a little smarter.
- support for libxml 2.0 beta
Update README to indicate improvements in overload resolution and easier configuration.
Emulate user/group/other on Windows
Cleanup, better error recovery, easier configuration
- changed libgz to libz (Bug #3614)
.
Get Blackdown support to compile.  Doesn't seem to be able to find classes yet...
ChangeLog update
NEWS update
One space character is enough.
Implemented external list traversing.
Thies, please check the function names and descriptions.
- fixed invalid class names - added standalone, encoding attribute to DocDocument class
I SHALL NOT TOUCH MY EMACS BETWEEN COMPILE AND CHECKIN !!! I SHALL NOT TOUCH MY EMACS BETWEEN COMPILE AND CHECKIN !!! I SHALL NOT TOUCH MY EMACS BETWEEN COMPILE AND CHECKIN !!!
imap_utf7_encode didn't expand international characters to 16bit    before coding imap_fetch_overview could crash when some fields where missing imap_fetch_overview will now take msg indices for default and    UIDs by optional flag, as the other functions in the family
- Allow array(1,2,3,) i.e. with trailing comma. You can only have one   trailing comma.
@- fixed possible crash in unserialize if the serailized data was @  damaged. (Thies)
- ELS are passed to internal functions
ChangeLog update
NEWS update
-
- Spare a byte :)
- Change Zend license version
- Another zend_uchar
*** empty log message ***
Changed HTTP_STATE_VARS to HTTP_SESSION_VARS. @ Changed $HTTP_STATE_VARS to $HTTP_SESSION_VARS. Use only the latter @ version now! (Andrei)
- define zend_uint and zend_uchar and use them in a few places
Introduced a way to traverse hashes through external pointers.
odbc_close() and odbc_close_all() working again
- Change type from int -> char
remove java.library from the README
# Oops - functions with multiple optional args suck
- Also check module API number
gd-jpeg support @Add GD-JPEG Support (Rasmus)
ChangeLog update
Eliminate java.library ini option in favor of rpath
Adding imap_rfc822_parse_headers(). This function lets you grab mail headers from anywhere - a saved message in an archive, a pop server, a database, etc - and parse them into an object similar to what imap_headerinfo() returns. It's just missing the flag info and other things that only come from the IMAP server.
spelling correction, and rename make_event_object to _php_make_event_object for consistency.
# Compiles. Doesn't work yet. Unless leaking memory counts as 'working'. # Trying to finish before RC1...
Finished porting recode module.
pval->zval use the *_ex() functions use zend_get_parameters_ex
- using _ex() functions now, thanks to Andrej.
- Define these ones and declare them in modules.h
-
- Guessing this is the problem
Use sprintf everywhere and define sprintf to php_sprintf, if sprintf is broken.
Also search for freetype headers in $prefix/include/freetype
ChangeLog update
NEWS update
remove recent patch to _close_odbc_conn calling _free_odbc_result
Nuke DEBUG.
- Added additional DEFER macro. - First stab at porting the recode module. Still having problems   with the _ex() functions, they core - why?
- Oops I commited a name change for consistency of Zend/modules.h to   Zend/zend_modules.h before it being finished. Revert it
- Don't define DEBUG anymore. Everyone should use PHP_DEBUG.   There are 2-3 third-party libs in PHP which use DEBUG and I left them   this way (primary example is pcrelib). - Please test things and Andrei, can you check that pcrelib stopped   printing the warning messages?
- Don't load modules which have different debug and ZTS information than   PHP() (untested). Not sure how to handle API version. Should it also not   load? It probably should but it might bite us at some point. @ Prevent from loading dynamic PHP modules which were compiled with different   debug and thread safety modes than PHP, which resulted in a crash (Andi)
Upgrade to libtool 1.3.4
Unix classpath fixes
mkextlib is not created anymore
We don't need mkextlib anymore
switching the order of arguments of mcal_week_of_day() to be more flexible - day, month, year now so that month and year can be defaulted at some point. this is also consistent with the library function.
Add mcal_week_of_year(), submitted by jtaskine@hit.fi.
ChangeLog update
NEWS update
- Remove inline from functions which are pretty large and besides eating up   memory in compile time probably doesn't boost performance.
Add generated file.
Reminder.
- Seems to be a problem here with the return value not being set
- Use strlcpy() insted of strcpy()
*** empty log message ***
- Quick way of supporting include_once().   Good enough for RC1.
- Support require_once().
- Cleanup old IMPORT stuff
- Nuke import, add include_once and include_require scanner/parser rules.   Hope to nuke use too :)
- That broke the Win32 build
- replaced some old code to access server variables
- zend_config.h is enough
- Weird that this wasn't caught earlier
- Save ZEND_DEBUG, ZTS, ZEND_API information
@- connection_aborted() and friends work again. (Thies)
ChangeLog update
_close_odbc_conn calls _free_odbc_result if possible
VPATH builds were broken, if the user specified the path to configure using an absolute path. With this change, absolute and relative paths are accepted and processed correctly.
PEAR now uses "use" instead of "include".
- fixed cpdf_set_font() error
- ups, fixed stupid compile errors
- dropped support for version of pdflib < 3.0 - better detection of libs required for pdflib
Both PHP and Java can't read Post data - let java do it and reconstruct for PHP.
- bug fix, insertion of links back into HTML document - smarter test script
remove duplicate line
(OCILogon) fixed crash in OCILogon if username was not valid (newly introduced - no need for a NEWS entry)
ChangeLog update
- several fixes and cleanups in hw module
Typo.
blah
Anything in $HTTP_SESSION_VARS[] is auto-registered, if register_globals is turned off.
ChangeLog update
- support for pdflib 3.0
Changed typo (interpretor->interpreter)
Write configuration parameters into `config.nice', so you can redo the same configuration with exactly one command.
- quick hack to support pdflib 3.0 (not tested)
Try to locate the mysql.sock
Move the sincludes outside of AC_DEFUN(), so PHP can use the macros
- Enable MySQL by default
Expanded checking for pcre.h and libpcre.a.
- Thies, it is crucial :)
Sapi/servlet build on Unix broken
- some cleanups and fixed memory leak
Include metaphone on win32 builds
Unresolved external php_if_ftruncate on Win32
Use threads.m4
Use improved POSIX threads check from threads.m4
- switch to zend's double link list finished
Only define crypt if it is present
Can't believe it hasn't been done yet.
Kill warning.
(php: dl) fixed MAXPATHLEN bug # now it's /* SAFE */ !
ChangeLog update
NEWS update
It looks like a number of "standard" extensions are now truly builtin...
Change default UNIX sock to /tmp/mysql.sock
Build fixes - MySQL now actually works
@Cleaned up extension namespace (Stig) Cleaned up extension namespace, and changed ext/standard into one single extension.
update
added GINIT_FUNC_ARGS and GINIT_FUNC_ARGS_PASSTHRU
Finish config.m4 changes
Build always against embedded library
Modularize mysql autoconf stuff
Use php_module_shutdown_wrapper as the shutdown function
Use
- Bump up Zend's API version
Added ZEND_MODULE_INFO_FUNC_ARGS_PASSTHRU.
Change extension names in all extensions' zend_module_entry to their directory name.
"User interface" for removing all files which are ignored by cvs (i.e. object files, Makefiles)
Hartmut don't touch protos. Only two lines are allowed.
- Missed one
off-by-one error (bug id #3741) fixed
Need to pass PLS_DC.
(php_get_session_var) The variables are now serialized either from globals or from $HTTP_STATE_VARS[] array, depending on register_globals and track_vars settings.
Cleanup
- root property in Dom Doc class is now reference to array element in   children property
Unresolved externs
@- OCINLogon() sessions are now closed again. (Thies) # happy hacking in hongkong!
It's official now...
ChangeLog update
Eliminate "wrong number of parameters" warning
- Make some fixes although there is a problem with getpid() being defined in process.h as getpid(void) and thus having an arugment. We might need to define a php_getpid() function to wrap getpid().
Wrap some commonly unused callbacks
SuSE 6.3 imap.rpm puts the library into /usr/lib and the include files into /usr/include/imap
Avoid the side-effect of defining function names, so that the PHP functions are not renamed to their prefixed variants.
Protos fixed.
Attribute list support ported from php3.
Remove warning.
*** empty log message ***
ChangeLog update
NEWS update
Don't need this check.
@Added ip2long() and long2ip() courtesy of Faisal Nasim <faisal@nasim.org>
@Added ftruncate() and fstat(), courtesy of Faisal Nasim <faisal@nasim.org>
Prefix some symbols with php_ ^(pcre|Xml|XML).*
Don't export Lookahead
Remove outdated PHP 3.1 stuff
The default return value from include() and eval() changed from 1 to 0 unintentionally after the old return-reference patches - fixed
@- Added parse_ini_file().  Currently implemented in non thread safe version @  of PHP, and currently lacks section support (Zeev) - Bring the non thread safe .dsp's uptodate
ChangeLog update
adding the fix for bug #3685 to php4 as well.
crazy idea brought on by someone at FAST
Support HP-UX 10.x non-standard time-related reentrant functions
- tiny changes to testscript and domxml
- more changes to use zend_llist
make it work
Better lib check
Also consider $i/include while searching for rfc822.h
- xmltree() now returns an 'Dom Document' object with prop root and   children. root contains just the root element, children is an array   with all nodes on root level, e.g. comment, pi, element
- added property type to obejct xml doc
ChangeLog update
NEWS update
Added functions to retrieve scale, precision and raw oracle data type for columns.
Now recommend --enable-roxen-zts...
- using zend llist instead of dlist (not tested)
adjust comment II
adjust comment
Enable by default
- some minor changes, cleanups
- dom class now distinguishes between $dom->root() and $dom->children()   $dom->root() returns just the element, $dom->children() all nodes e.g.   comments
- The root node of a xml doc is now an array since it is possible   to have a comment or pi and an element on root level.
@"none" is now equivalent with "" in Apache config directives (Stig) "none" is now equivalent with "" in Apache config directives.
Eliminate 62 warnings
ChangeLog update
NEWS update
Add appropriate check for mckcrypto lib
- started to implement overload class for xml node
Removal of printf-debug, changed sp/fp to Pike_sp / Pike_fp instead of using a define.
Only two lines are allowed here.
round(-0.1) will now return 0 instead of -0
- Upgrade to year 2000
.
    now
@- OCINLogon no longer crashes. (Thies)
get rid of warning when $url["port"] isn't set
ChangeLog update
Add _php_imap_parse_address(), which replaces a lot of duplicated, hard-to-follow code in imap_headerinfo(). This code also happened to be broken, causing the $h->to, $h->from, etc arrays to contain only the first address, not every address. This is fixed now.
Show the minor MCAL version if we have it.
Automatically try to symlink c-client.a to libc-client.a, so people can avoid changing things.
Rewrite IMAP checks. This should solve the problems people had with shared imap libs
AD_ADD_LIBRARY_DEFER allows people to add libraries in a deferred way (needed for imap and recode)
Made php_escape_html_entities() as a separate function for export.
ChangeLog update
NEWS update
roxen.c
Removed warning about ZTS since it works fine now.
fixing segfaults in imap_getmailboxes and imap_getsubscribed.
WDDX header comments now conform to the latest DTD.
Improved handing of instances of private classes.  Added servlet examples.
- Use *_ex-API and *_RESOURCE-macros (partial). # Yell if this breaks all the hell loose. Otherwise I'll continue with the # wonderful experience of learning PHP4/Zend-APIS.
(php_set_session_var) $foo and $HTTP_SESSION_VARS["foo"] are no longer references to the same value.
.
WDDX additions.
@- Switched back to the old $HTTP_*_VARS[] behavior - $HTTP_GET_VARS["foo"] @  and $foo are no longer references to each other, but separate variables @  like they were prior to PHP 4.0 Beta 4 (Zeev)
ChangeLog update
fixing number of arguments to be consistent with php3 code.
mcal_next_recurrence() actually works again now (in addition to not crashing).
- Hopefully fix browscap problem
- Bye bye Perl.
.
.
*** empty log message ***
out of space in private (brain) memory;-)
*** empty log message ***
Compile fix
Avoid E_NOTICE errors in PEAR code.
just so that i don't forget
ChangeLog update
NEWS update
Some formatting, and fix the crashes in mcal_next_recurrence (finally!)
Verified $HTTP_*[] protection
compilation error - Win32
- Protect $HTTP_POST_FILES[] as well
Added notice about new functions.
Added get_class_vars() and get_object_vars() functions.
@- The various $HTTP_*_VARS[] are now protected, and cannot be manipulated by @  user input (Zeev) This patch is untested!  I'll only have time to test it thoroughly in a couple of hours...
Add a couple of entries.
Compile fix
register package
Allow the INI callbacks to know at what stage PHP is
@- Added ini_set() as an alias to ini_alter() (Zeev)
@- The string None is now recognized as a keyword by the php.ini processor, and @  can be used to denote an empty string (Zeev) - Added None keyword support to the INI parser - Removed specialized "none" code
(sapi_send_headers) fix leak
- More function in php module
correct
fixing imap_undelete to accept 2 or 3 arguments, not 3 or 4.
*** empty log message ***
Added simple HTTP utility class, currently with Date() and negotiateLanguage().
- Convert 'PHP3' to 'PHP' - Avoid declaring crypt() related salt types twice
- Removing the code that checks for Zend, since this is distinctly php4-specific now. - bringing it up to date with the mcal functions in php3 - cleanups
ChangeLog update
NEWS update
Need to include php_ticks.c in the windows build
Win32 build error:
Build failure on Win32:   error C2198: 'sapi_apply_default_charset' : too few actual parameters
let's not ignore Zend/TSRM
@- Implemented default_charset and default_mimetype config directives (Stig) Implemented default_charset and default_mimetype configuration directives. Started implementing ticks in PHP.
add a note about include return values
Use the fast cache here too
Make 4-diogit date RFC 2068 compliant
Breaks funclist.txt
fix obvious crash.
More protos.
Ported T1lib support from PHP3. @- Ported T1lib support from PHP3. (Jouni) # That's almost a lie... needs still some work.
ChangeLog update
NEWS update
started implementing directives for default mimetype/charset
Update .dsp
Thies I will give up until tomorrow.
More protos.
More protos.
More protos.
Is it ok, Andrei.
More protos.
Revert the y2k ini patches.
Turn on y2k_compliance by default.
Set y2k_compliance to "On" by default, as we do have y2k now.
More protos.
There are more '|' and should be mixed.
More protos.
Improve APXS_CFLAGS checks
Define EAPI, if Apache uses EAPI
Remove XML_INCLUDE, we use the embedded expat always
Revert last commit (cybercash has its own version of base64.h)
Will watch the diffs as much as I can.
zorro does a Z - egon does an e?
More protos.
More protos.
More protos.
Most functions don't have protos.
More protos.
More protos.
WTF?
ChangeLog update
The Roxen PHP4 module is now a part of the Roxen CVS which makes more sense.
Remove obsolete code
(PHP getrusage) don't define this function at all if the getrusage() function is not available on the system.
- Win32 compile fixes
- MySQL now compiles right into the PHP 4 binary on Windows
Kill another warning
Remove warning message
.
shut up cross compiling warnings
Define SQL_SUCCEEDED for Solid.
bump version number
Include <sys/types.h> and <sys/time.h> before <sys/resource.h>
More protos.
More protos.
uodbc now uses zend's reference system. The crashes on request shutdown should be gone.
More protos.
More protos.
Thies, it looks now a little bit better. Please correct my dummy entries.
php.h should be the first file included, so that HAVE_* are defined
More protos.
Changed here also.
Include <sys/resource.h> for getrusage(2)
Speling mistake, fix suggested by zeekamotay@hotmail.com in #3558
Proper check for getrusage(), it somehow disappeared.
More protos.
- Make libmsyql.lib compile. It fails with two unresolved symbols on link   with PHP 4 so I am not commiting the .dsw quite yet.
ChangeLog update
NEWS update
Revert part of the last commit
added the ftp_site() function
- added support for namespaces - made entities in attributes possible
(PHP exec) Return last line of output properly.
- some tiny changes to the test routine
- dom tree isn't editable anymore. Will probably change back in the future
More protos.
More protos.
Print out a warning, if writing the session data failed. This might happen in a request shutdown handler; php_error() worked for me in the CGI version.
add proper dependencies
Added phpextdist script for making external extension packages.
Use 'cp' instead of 'install'.
Typo.
Remove duplicates.
ChangeLog update
NEWS update
Ignore more
Autogenerated file.
*** empty log message ***
Prepare a package
- Ups,
- pdf_set_text_matrix() disappeared in pdflib 2.30. Put in another ifdef - small fix in testdom to suppress error msg.
- Update CVS with right version
being accountable for the imap and mcal work that I've done (and adding an MCAL credits line)
added myself to the FTP/IMAP credits
compile-fix
the next baby is likely to be RC1, but...
ChangeLog update
Some small changes for readability
Autogenerated!
Update for libmysql.
Update for libmysql.
Go B4, go!
php4ts.lib => php4ts_debug.lib when building for Debug_TS target
Potential trap when cookies are sent
Added support for arrays
Win32 compile fix
Eliminate compile errors relating to signals.
ChangeLog update
NEWS update
Win32 compile fix
the pipe is breaking all the time
It didn't all go through
Get the license right... (this won't make it to RC1 of B4)
Prepare for B4-RC1
(c) patch
*** empty log message ***
Restore the singal protection in the MySQL module
Add missing files to Makefile
First version from the MySQL team.
Worked on beautifying rfc1867.c a bit @- Introduced $HTTP_POST_FILES[], that contains information about files uploaded @  through HTTP upload (Zeev)
- Add two missing files
- One more fix to link with Release_TS_inline
- Link with the right php4ts library in Release_TS_inline mode.
New function instead of fix.
Generalize macros
*** empty log message ***
- Add libmysql to the tree
ChangeLog update
*** empty log message ***
Get rid of second declaration of compare_func_t. Either put in a common header file or prefix it with i.e. zend_llist_
- Quick and dirty hack for supporting sorts. Improve later on when I wake up.
File is found in $(srcdir)
- Didn't compile on Win32
ChangeLog update
NEWS update
fixing imap_delete. All of the argcount checks were against one integer too high.
- Tiny change (I know I don't have to cast malloc() to void * but I like   casting my malloc()'s)
- Preliminary support for dynamic arrays. I need it on order to try out a   new hash implementation. It isn't used anywhere.
The list grows.
Don't need dlist.h anymore.
Updated to use Zend's internal doubly-linked list instead of dlist.[ch] implementation. Also fixed serialization to always output objects as struct. In the past, if the object did not have any member variables initialized it would've been output as array of length 0.
typo
- fixed bug if attribute value is entity
No need for a value (not that it seems to work anyway...)
Make POST handling the way it should be.  RFC1867, and any future POST handlers we might have in the future now obey to the variables_order directive, and there's a real way modular way to handle POST content. This is all untested, BEFORE_SAPI_POST_PATCH_17_FEB_2000 tagged before submission @- Made multipart/form-data content obey to the variables_order directive (Zeev)
install DB_pgsql and DB_storage
* prepare/execute emulation moved into DB_common * returning references everywhere in DB_mysql and DB_pgsql * added a todo note to DB_pgsql
- change some function name into php style
- Add ZEND_API
Allow non-public enumerations to be accessed
ChangeLog update
NEWS update
@- Updated the browscap module to work with PHP 4.0 (Zeev)
recognize 125 as success for put/get commands
Add test to avoid recursion, if the build environment is not correctly set up.
- Hopefully fix Thies' bug report.
I'd really like that.
ZEND_TEST_EXCEPTIONS should be defined/undefined before it's checked
Add to the news
- In IIS ISAPI when the user presses the STOP button while the script is   running make sure it stops gracefully. Before it stuck the server.
speedup parse_url!
(url_parse) only free regex if compile worked.
(url_parse) fix memory leak (#3495)
- OK, for a change I remember to put my changes in the NEWS file.
- PHP_WIN32
ChangeLog update
NEWS update
adding a missing PHP_FALIAS to imap_listsubscribed()
Changed --with-wddx to --enable-wddx.
Test for --enable-xml.
Changing the header.
Little correction.
- initial support for pdflib 2.20, little testing till now
- Get rid of mistake
ChangeLog update
NEWS update
- Put in the infrastructure for the unset() fix. Right now it has the old   behavior but I just need time tomorrow to add the correct behavior.
@Re-introduced "none" for disabling auto_prepend/append_file (Stig) Made auto_prepend_file and auto_append_file accept "none" as parameter to disable, like in PHP 3.0.
@Added DB/storage to PEAR @Introduced DB warnings Added DB/storage to PEAR. Introduced DB warnings Revert to using Javadoc-style comments. DB_common now returns references in the appropriate places
ChangeLog update
NEWS update
imap_delet(),imap_undelete() and imap_move() will now optionaly accept UDIs
Use sapi_free_header.
- Not sure if len can be zero but it's better to check it once then   rechecking for it every loop and having an extra variable do nothing.
- Beautify a bit.
- Save a function call one very hash_add
- Improve startup speed a bit by using the hash_*_ptr() functions
- Make startup a bit faster by changing some hash_update()'s and hash_add()'s   to hash_update_ptr()/hash_add_ptr()
- PHP_WIN32
Report access violations
*** empty log message ***
Make all of the ISAPI variables register themselves as Server variables
Make (array) false == array() and not array(false)
Trap bailout of shutdown functions
- Update the C file to use PHP_WIN32
- Update the project file with the Win32 defines.
having HTTP_UPLOAD_FILES[] seems logical to me
@- Workaround for bogus POST-Data from IE/Mac. (Thies) @  Patch by Alain Malek <alain@virtua.ch> fix #2944
- Support wddx by default on Windows
$ext_src_base is the source dir of the extension
Tell expat the byte order
Never use Apache regex stuff
#if WIN.*   => #ifdef PHP_WIN32 #if !(WIN.* => #ifndef PHP_WIN32
Use bundled expat library on UNIX. Note: Need to fix --enable-xml=shared
on WIN32, PHP_WIN32 and ZEND_WIN32 need to be defined
(request_shutdown) Prevent infinite loop on shutdown if there is an error                    in shutdown function. (php_array_walk) Print a warning if the walk function doesn't exist.
Made a couple of typedefs for zend_hash_apply_*() calls.
backed out some stuff that got committed by accident & broke things:(! uwe: please read twice what you are commiting!
(PHP passthru) Shouldn't return anything. This fixes bugs #3428 and #3430.
request_info.h is gone.
Update .dsp's
Fine tune Andi's patch
Define phpext_oracle_ptr properly.
More cosmetic things
Kill warnings
Some style(9) cosmetics
- Baby steps with PHP_WIN32 :)
Avoid the 'unexpected end of file' error.
- A few more
- A bit more PHP_WIN32 work
- Get rid of some more evil MSVC5's and switch standard/ to use PHP_WIN32
Final build fixes - that's enough for now...
Update .dsp's
request_info.c is dead! long live SAPI @- Finished the server abstraction layer;  All of the PHP code is now shared @  across different servers (Apache, CGI, IIS, etc.), except for thin @  interface modules (Zeev)
request_info.c is giving up
SAPIfication, Episode VI:  Return of the SAPI Remove mostly all references to APACHE and CGI_BINARY from the code.
The last patch wasn't that good, fix
More protection...
Make the CVS compile again
Only activate if we're inside an actual request
Yes, you guessed it... More cleanup
More cleanup!
Set ext_base, a common prefix to the per-extension build directory (ext/<ext-name> for in-tree builds, "" for rest)
More cleanup - move getenv() to SAPI
More cleanup...
- Little fix
- #define ZEND_WIN32 differently
- PHP_WIN32
- Introduce PHP_WIN32
- Finally beautify those WIN32|WINNT checks
More cleanup
Should be 'deactivate' rather than the opposite.
More abstraction
Always use getopt with CGI, never use it for anything else
Move the logging mechanism to SAPI
@- Added NULL-support in gettype(). (Thies)
- added funktion xmltree(), renamed dom() to xmldoc() and domfile()   to xmldocfile(). - testdom covers most of the functionality
- added pdf_open_tiff()
@- base64_decode() will decode POST data correct. (Thies) @  Patch submitted by: Turadg Aleahmad <turadg@wise.berkeley.edu>
- Shouldn't be there
- Cleanup the code
ChangeLog update
- removed stupid leftover in testdom - added more functions to domxml
Return by reference, where necessary.
Added three get modes: DB_GETMODE_ORDERED, DB_GETMODE_ASSOC and DB_GETMODE_FLIPPED.  Docs are within.
*** empty log message ***
foreach() works now for objects as well.
- new function to read and parse xml doc from file
- fixed several bugs an did some testing. Parsing and creating simple   XML docs should work. See the script testdom.
shut-up CVS
ChangeLog update
NEWS update
Change string->str where possible;  string is basic a C++ class, so gdb can't look inside variables named 'string'.
New function notice.
Patches from Walter for strncmp() stuff.
- made hyperwave extension compile again
ChangeLog update
NEWS update
Remove old unnecessary check
Syntax highlighting was erronously emitting more than one semicolon and/or garbage with heredocs
@- Made the output of var_dump() more informative. (Thies)
another re-sync with the PHP3 tree imap_mail deactivated for win builds, as the files win32/imap_sendmail.c  win32/imap_sendmail.h from PHP3 are still missing
ChangeLog update
NEWS update
@- Protect the ISAPI module against exceptions.  Stack overflows in scripts are @  now nicely detected and handled (Zeev)
- Support the string offset syntax $a{2} with the regular array opcodes.   Will need to write new opcodes sometime but right now it's good enough   to announce the change to this string offset syntax for beta 4.
*** empty log message ***
- Make it compile again with new (p)list globals.
ChangeLog update
NEWS update
Standardize
- This hopefully fixes the list($a, $a) = array(1,2) crash, i.e. when list   by mistake contains the same variable twice. - BTW, there is no defined order of assignment. The value of $a after the   previous example is undefined, and should not be assumed to be either 1   nor 2.
Get Win32 IMAP DLL to compile
- Make Win32 compile again
More cleanup
fix compile
*** empty log message ***
Add default registration of server vars.
PostgreSQL compile fixes
Compile fixes
Pass the executor globals to internal functions
Cleanup patches
- Stop passing list/plist to internal functions - Add a typedef for the pCopyConstructor function pointer - Minor hacks
ChangeLog update
NEWS update
That was the broken downcasting that prevented the interactive C++ mode from working properly under UNIX
Implemented setting of session cookie parameters. @ Added session_set_cookie_params() function. (Andrei)
Use the new state functions @- If header information is sent after output has already been sent, the warning @  message will now state the filename and line number at which the first output @  was made (Zeev)
Maintain a state of whether we're compiling and/or executing
ChangeLog update
- Sounds nicer
- Add some news
- some more testing
- fixed several bugs, left some for tomorrow :-)
*** empty log message ***
- more functions added but none of them tested
- fixed segm fault in hw_docbyanchor()
fix
ChangeLog update
- support libxml installed in gnome
Add expat to the distribution Add expat support to Win32 builds
(php_sock_fgets) Respect timeout event.
Initialize apache properly.
Remove crud.
Forgot to add the actual file.
Some rearranging.
foreach note
use FREE_ZVAL where appropiate
- several minor cleanups like removing unused variables
Moved ext/apache into sapi/apache.
ChangeLog update
NEWS update
Added add_property_unset() and add_property_bool().
Not needed.
Compile fix
Improve dependencies
- Implemented socket_get_status() function. Some more stuff can be added   to it in the future. - Renamed set_socket_timeout() to socket_set_timeout() - Renamed set_socket_blocking() to socket_set_blocking() but kept the   old name for compatibility. It now outputs a warning that   set_socket_timeout() is deprecated but still goes through. @ Added socket_get_status() function. Renamed: @   set_socket_timeout() -> socket_set_timeout() @   set_socket_blocking() -> socket_set_blocking(). (Andrei)
Sort out a gdb problem
Socket note.
Servlets work again!  OK, so it crashes on shutdown, apparently trying to report a memory leak, but it is worth committing the progress so far.
- Get rid of remains of garbage. - This should fix Thies' UMR
make it work without the zend_hash_pointer*() functions. some work on the shutdown issues (more to follow)
moved destroying of garbage before resource-list gets destroyed - (see my previous mail) zeev, andi - please comment!
added missing break.
took out zend_hash_pointer_update() & zend_hash_pointer_index_update_or_next_insert() - i really prefer link-errors instead of runtime-errors, don't you?
Implemented realpath(). @ Added realpath() function. (Andrei)
ChangeLog update
NEWS update
Add the complement to the putenv() security
Another todo.
- This has to always be done.
(PHP mktime) Added windowing support for 0..70 @- mktime interprets years in the range 0-70 now as 2000-2070. You can @  continue to specify the complete year (i.e. 1920) (Sascha)
Another point.
NEWS update
*** empty log message ***
@- Added the ability to prevent the user from overriding certain environment @  variables in Safe Mode (Zeev) - Finished work, more or less
Some more work, I'll finish this when I get home
PHP can install and run as a servlet again on Unix. Still todo: allow access to ext/java functionality from within servlet.
Initial work on the protected env vars stuff
- Run it on align_test
add installation
Progress: sapi/servlet now builds again on Unix
First steps towards restoring sapi/servlet on Unix. Cosmetic improvements to allow README to be read on systems with tabstop=8
No comment - will explain next week
- Change the argument order of php_register_variable() to something more   intuitive. - Make the authentication variables be a part of the HTTP_SERVER_VARS[] array
- Get rid of another rule which isn't needed.
- Add parser support for string offsets. This added three shift/reduce   conflicts but they all seem to be fine. - Cleaned up the parsing rules a bit and made them much more compact and   elegant. - Please CVS update and see that I didn't break anything.
- This will save some memory w/ GCC compilers on some platforms
- Yet another tiny optimization.
- Make loop a bit faster.
- Make sure its use is understood.
- Double the speed of some key switch() tests for Win32.
- A few fixes - Added register_argv_argc directive to allow disabling of argv/argc
Rename gpc_globals to register_globals
Apache module compile fixes
Use sizeof on the proper string.
Tried to centralize global variable registration as much as possible:
Use a more general and descriptive name
dsp updates
- Make Win32 compile again
post.c really had nothing to do with POST anymore, and it belongs to the top level directory
- This makes the switch() statement twice as quick. Moving to enum   might make this a general speed up for other platforms too
Get rid of the old implementation
accomodate old versions of kaffe which don't support jar
Shutdown cleanly (prevents Kaffe from trapping on exit)
Mcal cleanup, stage 1: it compiles again (the php3 syntax to php4/zend syntax conversion left a lot of: PHP_FUNCTION void ... definitions, giving two types to every function).
PHP now starts up in CGI mode with Kaffe on RedHat Linux 6.1. status: segfault atexit, npe in jawt - but otherwise both samples work! Installation needs more work
Forward progress, thanks to Sascha Schumann. libphp_java.so is now built again - it just refuses to load. At least I now have something I can debug!
Allow shared libraries to be built everywhere
- Keep objects as references.
- add another comment to the script
- test script for domxml
- Allow is_ref to become 0 in case the refcount is back to 1.
- resumed work on domxml and found a way to circumwent a segm fault   (see the source). No solution to fix it, yet. Probably needs some   understanding of zend, which I don't have. - added more functions
Proper indentation here also.
- Make foreach() now copy the array but use the original array. It can   still be optimized A LOT but it's only a performance issue and not   a feature issue.
NULL out the ticks callback until Stig implements it
- Implement declare() with declarables framework - Implement ticks - Germany&Norway - 5 points!
Add some order...
Indentation fixes
- Optimize zend_hash_del a tiny bit.
- Hopefully fix the hash problem.
- Hrm I'm not concentrating
- Actually the destructor should run after the data is already detached   from the hash but before the bucket is freed.
- Rollback hash_apply and friends. They assume now that hash_del is reentrant   as it first applies the destructor and only later nukes the bucket
- Run destructor before the hash structure is modified, thus, making   hash_del, reentrant (BLOCK_INTERRUPTIONS needs to be made a counter now).
- Undo a bug we introduced. (Another one out there).
First step to restoring the ability to build Java support on Unix: 1) Restore the ability to build CGI as a shared library 2) Correct make dependency rule so that the jar files are included 3) Search for jar executable, and use it, if found
RETURN_NULL -> RETURN_NULL() // we don't want macros without an argumnet
This doesn't seem to be necessary, and causes a leak in case of output_buffering=on
Leak fix
Make the phpinfo() images work properly again
RETURN_NULL & RETVAL_NULL don't need ().
@- Ora_GetColumn()/Ora_FetchInto() now return NULL for NULL-Columns. (Thies) also changed return-type for list-dtor
use defines
Get rid of the IsPointer functionality in the hash.
Destructors no longer return ints, the low level problem it was intended to solve is long gone now...
- Remove the pre-request-shutdown hooks, they should no longer be necessary. The session module may not work due to an unknown (and until now, IMO, misdiagnosed) problem, if it does, please report it!
- Make zend_hash_apply() (and friends) reentrant and much, much quicker - Introduce zend_hash_graceful_destroy(), which allows the destructor functions to   use zend_hash_apply() and/or zend_hash_graceful_destroy() - Switch to zend_hash_graceful_destroy() in the resource list shutdowns
Remove the post-startup callback support.  Modules are now started only after the entire engine is started.  People - please make sure that the session module works properly for you.
Allow module startup to be separate from the compiler/executor startup
move call to php_execute_pre_request_shutdown() into php_request_shutdown() so it will be called when script terminated due to call to exit().
@- OCI8 now supports binding of NULL-values. Module cleanups. (Thies) lots of cleanup - all invisible to the user (i hope;-) - full refcounting of connections & statements - cleanup of the descriptor-code (descriptors are now real resources) - we now use SQLT_CHR instead of SQLT_STR (no trailing \0) - smarter & faster - ocifetchinto(OCI_BOTH) will use references.
fixes #3220, #3221 finally
nother go on #3220, #3221
hopfully fixes #3220, #3221
make the ht->inconsistent stuff less ugly:)
(wddx_stack_destroy) Properly free the dangling varname. (php_wddx_deserialize_ex) There should be only 1 value on the stack after                           parser is done.
Another idea I had today.
(php_sockwait_for_data) timeout is not assigned yet, so check the right one.
(php_sockwait_for_data) clean up
Added ability to set timeout on socket read operations. New function set_socket_timeout(socket, seconds, microseconds) sets the timeout. @- Added ability to set timeout on socket read operations through @ set_socket_timeout() function. (Andrei)
Added support for $foo->{$bar}["foobar"] notation (was supported in PHP 3)
Initialize flag correctly
Compile fixes for ZTS
if ZEND_DEBUG mode is on we'll now see warnings  when a HashTable is accessed while it's inconsistent.
just add a remark. zend_hash_apply can & will cause problems here unless
in an rshutdown function we should not access the regular_list like this.
Initialize/destroy hook lists implicitly.
Be more verbose, if headers were already sent and remove RSHUTDOWN handler
sessions are now written via a _php_session_shutdown which is registered via php_register_pre_request_shutdown().
- don't set php_errormsg on errors that will cause a zend_bailout().   using zend_hash_update() can make things worse in this situation. - new function php_register_pre_request_shutdown(). this way modules   can register callbacks that will be called as soon as execution of   the script is done but *before* any cleanup (global symbol_table etc)   has taken place.
Complain verbosely, if a destroy failed
Since we're highlighting code, put <code> and </code> around the code.
@- Added implicit_flush INI directive (Zeev)
Make Win32 compile again
Woops, forgot to commit the right version of the file...
- Added flush() support to SAPI - Got rid of the old flush() implemenetation in favour of the new one - Added implicit_flush() support to the output buffering layer. @- Added implicit_flush() to control whether flush() should be called @  implicitly after any output (Zeev)
Only suppress including dlfcn.h when we are in PHP.
Move dl stuff from acconfig.h into zend.h. That allows us finer control when it comes to suppressing dlfcn.h.
Avoid including dlfcn.h, if we are compiling as an Apache module.
Full gear backwards. We still need acconfig.h.in for additional acconfig.h files (from TSRM/Zend).
Add description for AC_DEFINEs
acconfig.h.in became superflicious when we removed the config.h.stubs. Let's get rid of it.
Make cvsclean work on AIX
*** empty log message ***
- changed cpdf_global_set_document_settings() to cpdf_global_set_document_limits()
- added cpdf_global_set_document_limits()
Functionality & crash fixes
fix solaris compile
Add another point
Recognize UnixWare 7
ChangeLog update
NEWS update
@- Applied safe-mode patch to popen(). (Patch by Kristian Köhntopp)
ChangeLog update
`cp' will do the job everywhere, even on AIX
Move reentrancy initialisation/destruction into SAPI. These calls only do something, if reentrancy emulation is required.
ChangeLog update
NEWS update
- Rename IS_BC to FLAG_IS_BC. We will probably nuke it.
added ZVAL_*() macros.
- Separate the overloaded objects' types from Zend's data types.   There is no reason for them to be the same, and IS_METHOD just cluttered   the data types. - Overloaded elements should now use OE_IS_OBJECT, OE_IS_ARRAY, and   OE_IS_METHOD
- Separate the overloaded objects' types from Zend's data types.   There is no reason for them to be the same, and IS_METHOD just cluttered   there data types.
- Change IS_UNSET -> IS_NULL
@- str_repeat() now returns correct length. (Thies)
Replace all += constructs with equivalent ones
# Grr
@ Don't assume libz and libpng are installed for the GD checks (Rasmus)
ChangeLog update
NEWS update
# There is no functions/ directory in PHP4. @ number.h comes from ext/bcmath, not functions/  number.h comes from ext/bcmath, not functions/
* Implemented <boolean> and <null> types. We now support WDDX version 1.0   as best as we can. * Cleaned up the API function names, _ was really not needed. * Cleaned up the repetitive stack var name stuff with a macro. * WDDX now no longer converts numbers to strings in arrays when during   serialization. @Implemented support for <boolean> and <null> types according @to WDDX version 1.0 (Andrei)
even better;-)
yes sir!
FreeBSD 2.x/3.x fix.
*** empty log message ***
forgot
ChangeLog update
NEWS update
nice to have.
Statements get closed before connection shutdown. Disabled fetching all errors for Adabas.
(var_dump, serialize, unserialize) support NULL @- Added new NULL constant (Zeev, Zend library)
renamed RET???_UNSET -> RET???_NULL
ChangeLog update
Add some points
Remove second (equal) definition of isleap()
Some cleanup
Y2K updates
- IS_NULL should be 0 when converted to a long although I don't think it   really should be documented.
tiny optimisation
Happy new year (especially to Zeev :)
Declare timezone only, if the system fails to do so.
ChangeLog update
Happy Y2K patch! Happy new year (or the new millennium, depending on whether you start counting at 0 or 1).
Be as portable as possible
.dsp updates
- Add Release_inline builds
Add new Release_inline builds to Win32.  Standard release versions will not use inline under Win32.
Happy new year (especially to Thies :) - Zend branch patches merged in - get the PHP tree uptodate - Clean
- Nuke undefined_variable_string - Introduce IS_UNSET
ChangeLog update
First try at getting the ODBC stuff right
Synchronize with rules.mk
Perform manual interpolation for EXTRA_INCLUDES and EXTRA_CFLAGS
Replaced some ODBC 3 stuff to be backwards compatible to ODBC 2
Typedef socklen_t, if it is not available
THREAD_T refers to thread ids, not attributes
Append liblber to satisfy symbols in libldap
Let m4 decide what to do
Remove second {}, that shouldn't be there
fix AC_DEFINE
Define to 1
Proper protection for GNU make's parallel build
Propagate error condition correctly
Ease include file selection. Let's see which cpps support this construct.
Rebuild config.h.in whenever configure changes
Add distclean target
This should enable people to use ALLOC_ZVAL() in code outside the php4.dll
Whoops, defining them to empty values generates many parse errors. Defaulting to 1.
Get rid of config.h.stub. Note that you should embed a comment about what the respective define does into the AC_DEFINE macro. I.e.
We build in regex as well, create empty .deps
Let genfiles work in the new environment
Integration of -ng changes. Changes:
Macro syntax has changed
Rewrite TSRM_CHECK_GCC_ARG to cache its result
ChangeLog update
Solaris' sed does not like this expression. Since -O0 is the default, we can also omit it.
Let check succeed on systems which don't need special flags for pthreads. Also change the message to be more informative.
Don't search for config.h.stubs in sapi
Get rid of some config.h.stubs. Comments are placed into AC_DEFINE()
- Change var_reset() to set bool(0) instead of string("")
time_t is an int under Linux... this should always work.
ChangeLog update
Make sapi_module static. This is was the majority of SAPI modules uses. I wonder how this has worked up to now..
Move include into source file
Add neccessary includes
*** empty log message ***
not too bad: i can see phpinfo()!
shut up
SAPI module for phttpd - found at ftp://ftp.netuse.de/pub/phttpd/, ftp://ftp.signum.se/pub/phttpd/ (DOES NOT WORK YET!!)
non-ZTS fix
new constant: SQL_NULL new macros: RETURN_SQLNULL,RETVAL_SQLNULL,IS_SQLNULL
Remove unneccessary include to make stand-alone build work
Move .PHONY special target to the end
ChangeLog update
NEWS update
Beginning work to get PHP 4 to work with Apache 2.0.  This change detects Apache 2.0 properly. # This is extremely experimental because neither project is release # quality yet.  I expect this to drive bugs out of Apache 2.0's configure # process as well as provide a useful version of PHP for Apache 2.0, so it # may take some time for this to become stable.  I will commit changes to # PHP as needed although more modifications will be on the Apache side.
- Get rid of warning
- Generalize the fast cache mechanism - Add the HashTable struct to the fast cache mechanism
- Make zend_internal_function allocate a full zend_function structure so   that we don't get memory overruns and Thies doesn't get angry :)
*** empty log message ***
Add cache statistics support
Format fix.
fix UMR in ZTS mode
Build correctly on systems which lack localtime_r
Save a few lines while checking for -pthread[s]?
ChangeLog update
- Enable the new zval cache on debug too.  No real reason not to, and it keeps   the code cleaner. - ZTS compile fixes
Add missing file
Cache results of crypt capability checks
*** empty log message ***
Introduce a zval-specific cache - 5-15% speed improvement
Makefile.am: Add dummy target for dependencies acinclude.m4: Cache result of broken sprintf check
Change ALLOC_ZVAL() semantics
namespace protection
ChangeLog update
- Change uint32 to php_uint32 (PostgreSQL defines uint32, and perhaps other packages too) - PostgreSQL finally compiles&links
Make PostgreSQL compile again
inline functions cannot accept varargs
- Prepare Zend for the new $a{2} string offset syntax.
- Get rid of two warnings
ChangeLog update
NEWS update
Update .cvsignore, make build.mk more verbose
Enable dependencies for UNIX. Because this only works, if you use GNU make and GCC, you need to enable it manually by running
Use __forceinline under Win32 (inlining under Win32 gives roughly 30% performance increase)
php3_realpath.c -> php_realpath.c
Shut gcc up
- Move more stuff to ALLOC_ZVAL(). We need to add those FREE_ZVAL()'s now.
Optimize
Add -rdynamic, if supported by gcc and static Apache build is used
Remove --enable-low-memory, and preserve LIBS from TSRM
Put -pthreads? into CFLAGS; libtool still filters it out during shared library linking; need to find a way to prevent that.
- Use ALLOC_ZVAL() in PHP. Finding the places to put FREE_ZVAL(z) is much   more tricky and I'm not sure how many places this is. zval allocations   were only made directly in 11 places.
- Create two new macro's. ALLOC_ZVAL() and FREE_ZVAL(z) and make Zend use   them.
- Use function_add_ref() here too
- Beef up the INI file reader - it now supports PHP constants, as well as   bitwise operators on them (no more error_reporting = 7, from now on you   can use error_reporting = E_ALL & ~E_NOTICE @- Improved the php.ini reader to support constants and bitwise operators (Zeev)
ChangeLog update
NEWS update
- Make the project compile again
This one slipped away
Rename option to match description string
clean up basic_functions
pval->zval
@- strrev() no longer modifies arg1. (Thies)
Compile zend_execute.c with special CFLAGS. For GCC, INLINE_CFLAGS contains -O0 to disable optimizations. This can be disabled by using the appropiate parameter.
killed warning + added reminder
ZTS fix
Also remove files which are ignored by default by CVS.
digital cc doe not like whitespaces before a # mark
ChangeLog update
NEWS update
Kill compiler warning
Kill compiler warning
Clear LIBS as well, otherwise later linking checks (TSRM) might fail
Add TSRM's LDFLAGS to EXTRA_LDFLAGS
Improved check for GCC's -pthread and -pthreads flag
Enable --with-oci8 to use relative paths as input parameters
Don't set DEBUG_CFLAGS to -g, if -g is already in CFLAGS
Limit _POSIX_PTHREAD_SEMANTICS to Solaris, and stop appending -O2. This is automatically done by autoconf's AC_PROG_CC.
Ignore these directory entries
export
unlock the serializing lock a tad bit later
Those void's don't belong in there
Little fix.
- Remove unused variable.
Catch errors in the pike version-check script to avoid potential problems
ChangeLog update
NEWS update
Removed C++ style comment
Some fixes in thread safe (ie ZTS) mode - now it actually seems to work perfectly. Also fixed a couple of typos.
Logic fix, improved comments, better SID checking
Warn users, if they have disabled gpc_globals and track_vars. Also work correctly, if users have enabled track_vars/disabled gpc_globals.
Some cleanup
Some more php3->php stuff.
php3 -> php prefix work
Correct PHP's mime type.
*** empty log message ***
Move TSRM checks, so that additional flags can be considered @- Added GNU Pth support (Sascha, TSRM library)
Enable TSRM to use Pth
We're using ZVAL's now.
some more thoughts
commented out select() & friends for now - we need to come up with a good API for those!
Improve Pthreads check
No need to block for interruptions so early
- This should have made it into the NEWS
Optimize.
ChangeLog update
NEWS update
would be nice & clean
Ex API
This should get it to compile...
Only add additional include paths, if building in a separate directory (cosmetic change)
Workaround for broken trs
Further cleanup as including php.h is no longer harmful - thanks to Sascha for noticing it. Tested on Linux and WinNT, should work everywhere.
Change order to avoid system prototype mismatch (sprint is defined to php_sprintf by php_config.h)
Propagate ZTS setting correctly
Explicitly check for C++ preprocessor, otherwise autoconf forces it onto us at the wrong place (subsequent autoconf checks failed).
Use sapi_module_struct to contain SAPI module name
(PHP preg_quote) Made binary-safe. @ Made preg_quote() binary-safe. (Andrei)
Made quotemeta() binary-safe. @ Made quotemeta() binary-safe. (Andrei)
Use Critical Sections under Win32 - shows roughly 40% performance increase under multithreaded Win32!
getParameters -> zend_get_parameters
Make the Win32 tree compile again
Zend fixups.
Corrected some protos.
IMAP should now be in sync with its PHP3 counterpart
Add and fix a few entries
Add information about chosen SAPI module to phpinfo()
Add SAPI module for thttpd server. Quote from the README:
Ex API
ChangeLog update
Ex API
Ex API and UDP support. @- Added UDP support in fsockopen() (Evan). # UDP activated with "udp://hostname"
Some updates
Win32 updates
Make these work again
libzend -> Zend
(ext/informix) function name changes: zend_get_parameters_ex (danny)
Support the latest update to call_user_function_ex()
- Made things work again (Thies, everybody - please check the latest CVS and see if you're   still getting any problems) - Changed the interface of call_user_function_ex() to support returning of references
replaced PHP_FE by PHP_FALIAS in imap_functions[] where appropriate
Use zend_sprintf by default (which is defined to sprintf, if the system's sprintf is useable).
Refine PEAR option. Since it does not reference anything external, it should be AC_ARG_ENABLE instead of AC_ARG_WITH.
- More fixes related to the return references patch - eval_string() and call_user_function_ex() still don't work. - The libzend tree is untested and might not be stabl yet.
DAV extension now compiles.
Use workaround function for sprintf, if the return value of sprintf is needed
Add zend_sprintf.c
configure sets ZEND_BROKEN_SPRINTF
Variables are not interpolated unless we use _UNQUOTED
Added --without-pear option.
- The tree compiles again
Let autoconf check for the proper inline keyword
automake created illegal target names due to the ZEND_SCANNER definition. We now substitute @ZEND_SCANNER@ directly
- Introduce ZEND_NUM_ARGS(), to replace ARG_COUNT(ht) - Rename getParameters() and friends for consistency and namespace cleanliness
getParameters() and friends changed for consistency and namespace cleanliness
Get rid of all GNUisms in build.mk. Verified to work with BSD make, SysV make, and GNU make (tested on FreeBSD-current, Solaris 7, Linux with GNU make 3.78).
- Make Win32 compile again
(ext/informix) : remove traces of php3 (danny)
compiles again
Some more php3_ cleanup
More php3_ cleanup
More php3_ cleanup
More php3_ annihilation
some style changes
More php3_ cleanup
More php3_ annihilation
More php3_ annihilation
ChangeLog update
NEWS update
More php3_ cleanup
More cleanup
More cleanup...
More php3 cleanup
More php3 cleanup
More cleanup...
More work on php3_ annihilation...
- Made PHP_VERSION and PHP_OS work again - More php3_ cleanup @- Restored the PHP_VERSION and PHP_OS constants (Zeev)
- Made PHP_VERSION and PHP_OS work again - More php3_ cleanup @- Restored the PHP_VERSION and PHP_OS constants (Zeev)
More php3_ annihilation
More php3_ annihilation
merged in imap_search() from the PHP3 tree more ( like imap_lasterror() ) will follow
Define inline to inline explicitly
Remove passthru, it is not needed anymore
Build structure change. Instead of using an external configure for libzend and TSRM, the core code of these configures was separated into extra m4 files which we can now include into PHP's configure. Advantages:
Make Apache SAPI module compile in ZTS mode
Move config code into separate file
- By mistake commited this to the branch. It fixes a bug we introduced with   the return reference patch.
ChangeLog update
NEWS update
Added get_loaded_extensions(), extension_loaded(), and get_extension_funcs() functions. @ Added get_loaded_extensions(), extension_loaded(), and get_extension_funcs() functions. (Andrei)
A little renaming.
force ext/java to be built as a shared library
(php_ns_request_handler) set SG(server_context) to non-NULL
ChangeLog update
NEWS update
And still more stuff.
More stuff for me to do.
Doh! I'm an idiot.
NEWS notice.
- s/inheritence/inheritance/g - Added is_subclass_of() function
- Implement ability to turn off support for call-time pass by reference
- Implement return by reference:   - In function declaration instead of the return statement   - In the assignment phase - Implement ability to turn off support for call-time pass by reference
switched to Ex Api
(return_one) removed. (OnChangeMemoryLimit) Only defined if MEMORY_LIMIT is defined.
Added date/time stamping to PHP error log file. Idea credit goes to Joey. @ Added date/time stamping to PHP error log file. (Andrei, Joey)
val->len
Faster, must go faster.
fixed some compile errors.
Ex API
I would've compiled first, I swear...
Ex API
Not yet, Joey.
ChangeLog update
NEWS update
Moved function_exists() to Zend library.
(bcmath) Name of header changed from php3 to php but include forgotten.
- Added class_exists() - Moved function_exists() here from from the basic_functions.c - Modified method_exists() to convert method name to lowercase   when checking
# Added date/time stamping to php3_log_error @ Preliminary support for date/time stamping in error logs Preliminary support for date/time stamping in error logs
always check if output is ok after php3_header()
whoops..need to allow 7 parameters also
(getimagesize) grrr, fixed newly (30 min ago) introduced NPR
use ex-API
@- implemented count_chars(). (Thies)
use ex-API
use _ex-API
Boo.
ChangeLog update
NEWS update
Postpone the execution of post request startup handlers until the symbol_table is populated
Made strspn() and strcspn() binary-safe. # Please test if you can, especially cases with embedded chr(0).
Finished array_multisort() function. Basically it sorts multiple arrays similar to ORDER BY SQL clause. @ Added array_multisort() function. (Andrei) # Docs are coming soon
Make rand.c thread-safe.
Reapply configuration for each request
(php_ns_config) use 3.0's Ns_ConfigGetPath instead of Ns_ConfigPath
(_ps_files_path_create) terminate string correctly and append the whole key instead of the rest key
ChangeLog update
NEWS update
Make filestat.c thread-safe
@- Made pageinfo.c thread-safe (Sascha)
Remove trailing white-spaces
Reformat ini entries and add new options (cache_limiter, cache_expire).
Add cache_limiter and cache_expire options. Rename extern_referer_check to referer_check.
Kill a warning
Initialize variables
Initialize value properly
Call SLS_FETCH() only, if it is needed
Make it compile in ZTS mode
Include header file for php_file_le_fopen()
Remove unnecessary ARRAYLS_FETCH() calls
Disable global lock for now. We will have to find a way to test subsystems for thread-safety, and lock them appropiately, if they aren't thread-safe.
"setup" is obsolete
ChangeLog update
NEWS update
Added array globals in preparation for multisort() changes.
(PHP php_implode) Made binary-safe. @ Made implode() binary-safe (Andrei)
get_meta_tags() was using php_stristr() so it needed to be changed. Optimized it to use php_memnstr() directly.
Made strstr(), stristr(), and ucwords() binary-safe(). Also corrected stristr() behavior to match that of strstr() if needle is not a string. @ Made strstr(), stristr(), and ucwords() binary-safe() (Andrei)
Moving APXS-specific checks into respective config.m4. The placement of `%APXS -q..` caused error messages, if APXS was not used.
Don't include functions not supported by Solid
ChangeLog update
Added makerpm by Samuel Liddicott <sam@campbellsci.co.uk>
Output information about HTTP headers
Export sapi_free_header()
remove uninteresting NEWS entries
A few more fixes for php_strtolower().
ChangeLog update
NEWS update
(PHP strtoupper, strtolower, substr_replace) Made binary-safe. @Made strtoupper(), strtolower(), substr_replace() binary-safe. (Andrei)
(php_set_session_var): logic fix:
just went thru string.c and wrote down the functions that are obviously NOT binary-safe
(unserialize) closed mem-leak
small cleanups in MINIT code OCIInitialize is now called at the "right" spot again
Report all ODBC error's not just the top of the stack
- improved configuration due to compile problems which suddently show up
ChangeLog update
NEWS update
- Use Set-Cookie for consistency with SetCookie() (and possibly for adherence with   with some clients?) - Remove unnecessary directive from configuration-parser.y
Use global ctor in non-ZTS mode as well
(unserialize) now cleans up better on failure!
make non-ZTS happy again
@- OCI8 now returns NULL values in LONG columns correct. (Thies)
Added some more error defines (CANNOT_CREATE/DELETE/DROP). Folded up the methods in DB.php. Started adding documentation for DB_result methods. Added doOne() doRow() and doAssoc() methods in DB_common. Added numCols() to DB_mysql.
ZTS compile fixes
this is the "right" ZTS-fix
ChangeLog update
NEWS update
Oops.
(DB::parseDSN) check for an extra / at the end purely to guard against                user error
(DB::parseDSN) Remove extraneous / at the end of the spec if no database                is specified.
Fill in empty constructor in order to appease Sascha ;-) More seriously, uninitialized values cause MSHUTDOWN to trap. Only an issue because assert was added to internal_functions.
Provide basis for shared libraries/dlls to contain internal extensions
Apparently already implemented by Thies.
Revert the patch.
Add check for broken apxs script
added assert.quiet_eval plus a bit of cleaning (docs to follow!)
fixed just enough to enable assert to build on win32 and Linux/ZTS
Need to check for __inet_aton on Solaris.
- opened_path should not be freed here as the zend_file_dtor() takes care   of it. This doesn't fix the bug report for the crash of highlight_file()   though.
Move it to the right place
fixed NPR
the order *does* matter!
@- Added support for a C-like assert() function. (Thies)
getting there
Ignore generated files
new assert() module. (Not yet finished!)
- Several small corrections, typos, ...
(explode) fixed newly introduced bug (them shall check twice *before* committing!)
Support ZTS definition in zend_config.h
Email change.
Mention CyberCash.
-kludges -warning +reentrancy(more) +compiles(Unix)
More clean up.
ChangeLog update
NEWS update
Now it compiles - couldn't find lib before.
Eliminate some warnings.
Minor changes and clean up.
@- Added CyberCash support. (Evan) CyberCash support.
Move the #include of zend-parser.h out of zend_compile.h
First step in making parsedate.y thread safe - use a pure parser
More localization
fixed warning
@- explode() is now binary-safe. (Thies) we save one buffer-copy as well (hehe)
@- strpos() is now binary-safe. (Thies)
Add another item.
This is no longer needed.  Note that we'll always need to undefine YYSTYPE, since the template bison generated .h file defines it if it's not already defined.
Separate libpaths into PHP_LDFLAGS, so that we can address them separately (required for Apache build).
Localize a couple of macros
opened_path could end up uninitialized - fixed
removed unneded CLS_FETCH()
build error: wrong num parms to date_parse
first pass at method overloading
Hmmm...must have misplaced the getcwd/chdir logic...
*** empty log message ***
ChangeLog update
NEWS update
Give it a nicer looking module name
*** empty log message ***
php3_* => php_*
Create helper library during configure time
Allow AC_ADD_LIBRARY to append library
Add rpaths to LDFLAGS during configure, drop them later.
Revert changes.
Thies, can you provide some docs? I need something to show to my German translators. Is the &obj correct?
@- added XML_Set_Object() function, now you can use the XML-Parser from @  within an object. (Thies) (XML_Set_Object) new function.
Prepend added libraries and separate LDFLAGS handling
Add ts_allocate_dtor, use ts_allocate_[cd]tor where appropiate.
More maintainer-mode cleanups
More maintainer-mode cleanups
ChangeLog update
NEWS update
Win32 .dsp update
That one is actually supposed to have 'php3' on it - it's the PHP 3.0 compatibility defines for 4.0
#if -> #ifdef change for HAVE_LIBDL (to be consistent with the same symbol in libzend).
Create ``libs'' subdirectory as the current user and add /usr/ucblib always to the libpath, if it exists (#2752).
Build error
Cast val to (char *) to avoid compile warning. Forgot ; at the end and need to derefence the ent pointer.
Clean up php3.*\.h files. The files itself are renamed, and references in all .*\.[ch] files were changed. There is a slight chance that my script missed a few changes, please correct them manually.
*** empty log message ***
(php_set_session_var) Initialize the refcount here.
ZTS fixes
Remove custom LDFLAGS/LIBS changes
Don't overwrite EXTRA_LIBS, some ext config.m4s access it directly
Remove code references to serverapi
Use LIBS instead of EXTRA_LIBS, so that inter-library dependences can be tested for using standard autoconf macros.
some more ideas
(PHP session_register) Correct calling convention.
Session variables now obey track_vars and gpc_globals settings. If track_vars is on then decoded variables appear in $HTTP_STATE_VARS array. If gpc_globals is on, then session vars are decoded into global variables. If both are on, then globals and $HTTP_STATE_VARS contents are references to each other.
Added zend_set_hash_symbol() function.
backed out last change after andi decided on a different approach.
- Call ZEND_SET_SYMBOL_WITH_LENGTH() with refcount 1 from the standard   ZEND_SET_SYMBOL()
- Implement get_used_files() and get_imported_files()
- Added get_used_files() function - returns a hash mapping the use()'d files   to their full path (Zeev)
- zend_file_handles must now flag whether their .filename property should be   free by Zend or not (uses e*() functions)
the new SET_VAR_* macros forgot to set the refcount!
Check for htonl in libsocket (sol251), and move inet_aton check in libbind to configure.in, so that our later AC_CHECK_FUNCS(inet_aton) will find inet_aton in libbind (if it is there).
build error - windows
fixed tiny leak
"use" should use arg+".php" as parameter to require
This should fix the fd leak with include()/require()
ChangeLog update
NEWS update
windows build errors
inet_aton is in libresolv on Solaris 2.5.1
Added credit notes for Roxen SAPI module
Include errno.h. # Please try compiling before committing
*** empty log message ***
Added ZEND_SET_GLOBAL_VAR_WITH_LENGTH_EX() macro.
Improve locking when O_EXCL is available
# I hate these * empty log message * notes that get added to the changelog # telling us that nothing was added to the changelog.  The very fact that # this empty log message is added to the changelog makes the message # invalid.
PHP_BUILD_* m4 macros are not intended to be used by extensions. If you want to tell the user that the current choice of a specific SAPI module is bad, check $php_build_target.
2<<30 (== 1<<31) overflows 32-bit signed int, reverting to 1<<30
Solaris needs -D_REENTRANT to define prototypes for localtime_r etc.
Use socklen_t where appropiate
Add check for socklen_t (we cannot use AC_CHECK_TYPE, because socklen_t is defined in sys/socket.h).
revert my last patch - WARNING: we leak fd's again. add initialzation of opened_path highlight_file()
forgot the "@"
Add configure command to phpinfo() output (Stig)
Add configure stuff (note that --with-xxx should be only used, if it references something  external.)
Add posix module
Add X-Powered-By header in all configurations to ease PHP usage metering
(php_ns_sapi_header_handler): use sapi_free_header()
- Remove _EX and make it the old _LENGTH
# Here you go Andrei
@ PHP 4 scripts will now obey the max_execution_time setting and actually @ time out (Rasmus) # Note that Apache clears all signal handler including SIGPROF before # calling the content handler, so even though we set our itimer before # this in the PHP_INI stuff, Apache kicks sand in our face and we need # to set the timer again just before we start parsing
Support DATE_to_pval and DISPATCH_to_pval
ChangeLog update
NEWS update
- Add _EX macro for Andrei
# just some symbol cleanup while I am browsing through looking for this # timeout problem
@ Add optional socket path to the mysql_?connect() functions
Solve a couple of compile issues
php_fopen_wrapper_for_zend() does *NOT* insert the opened files into any list - the caller needs to fclose() the file. (not sure if this is desired) fixed "Uninitialized memory read" when including URLs
*** empty log message ***
Let user override default setting of ``make''
ChangeLog update
NEWS update
Define COMPILE_DL_MODNAME, if module is built as dynamic module
Back out PIC/COMPILE_DL hack from gd/mysql.
Make it possible to explicitly set refcount in ZEND_SET_SYMBOL_WITH_LENGTH(), part 2
Allow to set the reference count explicitly for ZEND_SET_SYMBOL_WITH_LENGTH()
Test commit, ignore
@- Made the GET/POST/Cookie and their HTTP_*_VARS[] counterparts be references @  to each other (Zeev)
@- Make the global GET/POST/Cookie variables and their $HTTP_*_VARS[] counterparts @  be references to each other (Zeev)
remove some debug output
Make array.c thread-safe
Remove fsock-specific members
Make fsock module thread-safe
- Forgot to check for BP_VAR_IS in the fix made for Thies' string offset   problem.
use new PHP_BUILD_THREAD_SAFE macro
libzend/zend_compile.h's #define YYSTYPE causes parsedate to barf on Windows
just a remark
ChangeLog update
NEWS update
Avoid Apache's regex.h, if system regex was chosen
# another oops
# Oops
Kill some warnings
Add '--enable-low-memory' option.
Add PHPAPI for Windows.
- Applied Thies' bug fix. Great work!
- Added opened_path to php_fopen_wrapper() and the URL fopen wrapper (it's not   always properly set, it's a TODO for all of us).  This enables us to implement   true 'use' support. @- Added support for the 'use' keyword - behaves like 'require', but will not @  use the same file more than once (Andi & Zeev, Zend library)
- Add use support (behaves like require, but will not use the same file twice) - Add import support (behaves like include, but requires parentheses;  will not   use the same file twice; Currently, it is not yet properly implemented, and   only behaves like include)
Added check in the ODBC module that a connection is still valid before reuse in a persistent connection.
the Zeus-Guys were nice enoug to give us a call similar to DllMain()!
need to prevent multiple usage
ChangeLog update
NEWS update
Show some extra info for GD with phpinfo()
Clean up code
ISAPI wants to run in ZTS
Typo
Modified to use preg_* functions.
add .cvsignore
Initial alpha-level of sapi/servlet.  See README for details.
more PECL -> PEAR renaming
- DB classes now inherit DB_common - Added DB_ERROR_NODBSELECTED - Added DB::connect($dsn[, $persistent] which creates a DB object and connects   $dsn is a "data source name" in a format specific to DB:     phptype(dbsyntax)://username:password@protocol+hostspec/database   Don't worry, such a dsn can be as short as "mysql" - Added mysql support
*** empty log message ***
Name update.
Use thread-safe versions of localtime and gmtime on Win32 too
Remove some more redundant checks.  buildconf is not but a simple wrapper for build.mk & co.
Revert last patch (leak in libzend is fixed now)
ChangeLog update
NEWS update
@Added DBMaker support (patch by Pax Tsai <paxtsai@lion.syscom.com.tw>) Added DBMaker support (patch by Pax Tsai <paxtsai@lion.syscom.com.tw>)
@Renamed "PECL" to "PEAR" (PHP Extension and Add-on Repository). Renamed "PECL" to "PEAR" (PHP Extension and Add-on Repository). New name courtesy of Peter Bowen <pzb@ARISTOTLE.ORG>.
@buildconf now uses build.mk Removed redundancy in buildconf/build.mk, buildconf now runs "make -f build.mk"
- Add OLS_C so that we can call php_output_init_globals() with it.
Prevent mod_ssl's ap_hook.h from being included.
# check link() as well
(symlink) Disable symlinks to urls @- Disable symlinks to urls
Add buildmk.stamp
Add version checks from buildconf
(ext/informix/ifx.ec) Reflect ESQL/C version used (Danny) @- Informix driver now reflects version of ESQL/C used  (Danny)
ChangeLog update
Remove INCLUDES line from Makefile.am skeleton
Make basic/string functions thread-safe
ZTS fix
Improved build (now sets also runtime library search paths, works out-of-the-box with Apache)
*** empty log message ***
Don't cry, CVS.
(PHP session_register) Modified to accept variable number of arguments, any of which can be either string holding the variable name or an array consisting of such variable names or other arrays.
one tmbuf is enough
- Win32 thread unsafe build updates
typecast void pointer to char* for pointer arithmetic
Use thread-safe versions of localtime and gmtime
Update Win32 build
Only compile the scanner, if trans_sid is enabled
Test for PHP_THREAD_SAFETY
PERL_PATH is used nowhere
Add --enable-experimental-zts
ChangeLog update
Get Win32 to compile again
Add ability to disable the memory cache
*** empty log message ***
UNIX/non ZTS compile fixes
- Improve the file handle closing code
- Modify zend_llist_del() to receive a comparison function
Kill undefined reference
Enable _POSIX_THREAD_SEMANTICS for all configurations testwise
Undefine HAVE_PUTENV, if ZTS is used
Kill one race.
This request_shutdown() is no longer needed (never was needed really)
unposixfy calls to TSRM
Define macros only, if one of the locking _r functions is used
Avoid fd leak which appears when using ZEND_HANDLE_FILENAME
This should get the file to close properly
Use php_init_output_globals() also in non-ZTS mode
Rebuild libzend.la, if the scanner was rebuilt
- move strtok_r into reentrancy.c - add rand_r()
Add/update copyright headers
Back out last commit.
Add reentrant versions of ctime, localtime, gmtime, asctime.
Convert more source files to use thread-safe functions
Use thread-safe versions of asctime and localtime
Use thread-safe versions of localtime and gmtime
Close a resource leak.
Undo previous bogus commit
*** empty log message ***
Remove request_started, increase thread safety
(PHP_RINIT(session)) Never return FAILURE on trivial issues from a request startup handler
Replace strtok with strtok_r
Add strtok_r replacement function from FreeBSD-current.
Include php_config.h in both files, otherwise HAVE_STRLCAT/HAVE_STRLCPY will never be defined, even on systems which have these functions.
ChangeLog update
That's a more thorough fix...
*** empty log message ***
- changed encoding parameter of cpdf_set_font to string on advice from   fastio to better support asian fonts.
- made domxml compile
Now the new direct write is enabled too...
ChangeLog update
Implemented direct writing to the client's FD if RXML parsing of the result isn't selected.
Now ZTS can be used. Unless --enable-roxen-zts is specified at the configure line the default process global Roxen PHP lock will be used. In tests this was a lot faster for some reason and until the reasons are figured out, it's recommended to use the non-thead-safe version. Cvs: ----------------------------------------------------------------------
I'm dreaming that someone else can format this when he/she is looking at it.
Some patched versions of GD support both GIF and PNG. The GD module now checks for both instead of assuming that PNG support means that there is no GIF support anymore.
Removed an empty -L from LDFLAGS which caused errors in configure when running it with --with-gd (without path). Because of this configure detected every GD as GD-1.2.
Killing some unused variable warnings
some cosmetical changes
Descriptions should be different for different function names.
fix typo
Removed some forgotten C++ style comments
Now actually correctly checks for Pike paths etc.
- new xml parser with dom support
Freeing the memory would be a good idea...
Mention new select(), fd_set() and fd_isset() functions
Cleaning up remnants of ChangeLog manipulations.
Can't forget fd_isset()
- add PHP_BUILD_THREAD_SAFE - move #undef HAVE_AOLSERVER into its own config.h.stub
First attempt at fd_set() and select() # Please test thoroughly
- Added a couple of static for functions that don't need to be public. - Removed some unused code. - Started writing better comments.
Don't create a new thread for each php-script - use the handler thread.
ChangeLog update
NEWS update
Moved HAVE_ROXEN to sapi/roxen/config.h.stub
Added .cvsignore
Added the wrong file.
Added HAVE_ROXEN for the Roxen sapi module
First version of Pike/Roxen module for embedding PHP.
*** empty log message ***
Re-arranging a bit.
Use the unified notation...
Cosmetic changes
add some points
Only create regex/Makefile, if we use the bundled regex library
(main) Remove redundant statement, this is part of the initialization function.
*** empty log message ***
Don't bail out, if PECL cannot be installed. PHP is often only an intermediate step of the installation, so it is often not performed by root.
Getting Zeus-Support in place - i can already see phpinfo()!
- inform everybody about cpdf support
- extended test script for cpdf by GD image insertion
Convert to Ex API # If someone could please check these I'd appreciate it
errors during startup trap server
Formatting.
Add .cvsignore.
ChangeLog update
NEWS update
Don't forget the pickle.
Reformatting.
add MS SQL module seams to be working
add MS SQL module to credit info
Project changed to allow compilation for MS SQL 6.5 or 7.0
*** empty log message ***
- test for hyperwave module
- test for cpdf module
- port of clibpdf module based on ClibPDF 2.x.   This module is not tested yet, it just compiles.   I don't expect any real problem since the api hasn't changed.   ClibPDF 1.x isn't support anymore.
@Introduced PECL - PHP Extension and Code Library (prounounced "picke") Introduced PECL - PHP Extension and Code Library (prounounced "picke"), in the "pecl" subdir.  "make install" will now install the database abstraction layer in PREFIX/lib/php. I hereby dedicate this part of PHP to my daughter-of-yesterday Malin. :-)
Optimize a tiny bit
Optimize LDAP a little with Ex API
ChangeLog update
NEWS update
(php_ns_hash_environment) Ns_ConnHost() may return NULL, check for it
(PHP getallheaders) added function for AOLserver
That slipped away
Maybe later on today. Must buy some beer first.
@- Implemented get_html_translation_table() function. (Thies) (PHP get_html_translation_table) new function.
@- Implemented array_flip() function. Returns input-array with key, value @  flipped. (Thies) (PHP array_flip) new function. no clash detection, only works for IS_STRING and IS_LONG datatypes in src-array.
-renamed some macros -return_value_used now used in a few more functions
(PHP strtr) little smarter
Java module now works with Linux jdk 1.2pre2.
ChangeLog update
NEWS update
add Berkeley DB3 support @- Added Berkeley DB3 support in DBA (Sascha)
(PHP substr_replace) Changed the order of the arguments.
--enable-versioning can now be used with CGI/AOLserver as well. Note that we do not use versioning per se anymore, but export only the required symbols.
- Changed path to MySQL library in Win32 project
@- Implemented 2-Arg version of strtr($str,$translation_array). This can be used @  to revert what htmlspecialchars() did. (Thies) (PHP strtr) new 2-Arg version.
*** empty log message ***
ChangeLog update
NEWS update
- More PGSQL thread-safe updates. It still doesn't work though. Crashes for   some reason at .dll load time
- Should pretty much work now
- Add project file
- Start PostgreSQL support for Win32. Just added preliminary ZTS support.   Still need to make minit ZTS.
<sys/time.h> is needed on linux
- Moved var_uninit() for return_value to the beginning of DO_FCALL.   We forgot to do it for overloaded methods
- Functions whose return values aren't used have them freed in DO_FCALL   and don't need a special ZEND_FREE opcode following them anymore
- Make it consistent with the rest of the stuff there.
- Add array.c to the Win32 project
Optimize a bit
ChangeLog update
Removed stdio wrapper from sockets; added timeouts to socket ops.
Moving apMakefile.{libdir,tmpl} to sapi/apache directory.
arg!  alphabetize correctly!
add Java module to credit info
ChangeLog update
Add post request startup handlers. These are called at the end of the request startup function, and can use the initialized structures like the symbol table.
(php_rinit_session): use post request startups to reenable session.auto_start
Remove --enable-thread-safety. There is no reason people should be able to set this manually; most likely, they will burn themselves by using it.
- If a function's return value is unused then don't create a ZEND_FREE   opcode but free it after the function call in zend_execute.
Bump version to 4.0b4-dev.
b3 is already tagged in CVS
- Forgot this
ChangeLog update
NEWS update
(PHP substr_replace) New function. @- Added substr_replace() function. (Andrei)
- Weird that this compiled for me.
Just some rearranging.
- CHange used_return_value -> return_value_used
- Change used_return_value to return_value_used
- Initial support for Thies' idea of passing functions a flag telling them   they don't need to return a value. Adjusted reset() to work with this.   It is a bit problematic because if internal functions don't look at the   flag and still return a value orginally this leaked. So I free the value   in any case, which kind of makes the speed gain a bit smaller
- In any case create the free opcode. Need to allow the functions to   create a hint.
- Add support for used_return_value passed to internal functions.
final news update before 4.0b3
final changelog update before 4.0b3
4.0b3 coming up
ChangeLog update
cleaning up
ChangeLog update
NEWS update
(php_minit_mcrypt): Also allow never versions of mcrypt
(php_minit_mhash): Don't use REGISTER_LONG_CONSTANT macro, because we don't have a fixed size array of chars (this used to work nevertheless).
(PHP mhash): don't segfault, if mhash_end() returns NULL
(PHP k[r]sort) now use compare_function from libzend to be consistent with the language-core.
- Remove ISAPI project from main dir as it's been copied to sapi/isapi
clearify
@- ucfirst()/ucwords() no longer modify arg1. (Thies) (PHP ucfirst,ucwords) no longer modify arg1
(ext/informix) Added WIN32 build files for informix driver                and make it compile with ZTS @ -Added Win32 build files for Informix driver @  and make it compile with ZTS (danny)
@Added tmpfile() function (Stig) Removed the mkstemp stuff and added tmpfile() function instead.
ChangeLog update
These are inserted automatically now.
It's in array.c now.
Split array functions into separate module.
Suck in prototypes correctly with applied aliases (otherwise php_reg* would not be prototyped)
- Make Win32 compile again
Allow --with-apxs and --with-regex=apache
Improve regex library selection. It lets user specify whether they want system, apache, or php's regex library by using the --with-regex option. "php" is the default; if you use --with-apache in combination with Apache 1.3.x, the default is "apache".
Remove libtool targets
- remove extra CPPFLAGS from top-level Makefile - HSREGEX defaults to what the user wants, but can be changed now internally
Export CPPFLAGS to propagate additional flags
preparing 4.0b3-RC5
Remove the extra INCLUDES line from most automake Mafiles. This is not necessary, because we can change the value of INCLUDES globally in one place (configure.in).
(AC_EXPAND_PATH) Expand relative paths completely
ChangeLog update
NEWS update
Enable selective regex library compilation.
upgrade regex library to alpha3.8 @- Upgraded regex library to alpha3.8 (Sascha)
added missing function-alias
oops, didn't mean to activate this!
ChangeLog update
NEWS update
# Add some ext's here
@- RFC-854 fix for internal FTP-Code. Commands have to end in "\r\n" (Thies) (PHP fopen) commands send to a FTP-server need to end in "\r\n" (RFC 854)
ChangeLog update
# Improve the GD lib detection when GD is on the ld_path and it is # configure using just --with-gd
This arg is optional
"import" libtool file preservation code from build.mk
Shut up warning from automake.
Remove duplicates.
ChangeLog update
NEWS update
add Java and MSDev outputs
Adding default mssql ini-setings
#if -> #ifdef changes for the ODBC extension (for consistency)
IRIX ld likes this order better
Move only, if the file exists.
automake overwrites libtool's files, if
Add libtool helper files
add mergesort into build
- substitute JAVA_LFLAGS (not set, but used in libphp_java_la_LIBADD) - add .cvsignore file
4.0b3-RC4
Preserve the CVS versions of ltconfig/ltmain.sh during makedist. #This is a temporary fix!
Better lib detection for ucd-snmp
location of output.c moved.
Find ucd-snmp include files more intelligently
Clean up ODBC HAVE_XXX symbols, compile fixes for OpenLink and Solid. #The Solid support still does not link, though (looks like a side-effect of #the way the Solid libs are named and our stubborn friend libtool). #This can wait until after 4.0b3.
- set default path for cookie to the root directory ("/") - complete session documentation in php.ini-dist
add java
Include proper header files (replacement functions were not used).
Bump version to 4.0b3-RC3. # We release RC2 just minutes before Sam Ruby commits his Java extension. # What timing!
@ Added Zend OO syntax overloading support for Java components # # My lawyer made me do this: # Users of PHP are hereby granted a non-exclusive, irrevocable, world-wide, royalty-free, non-transferable license to use, execute, prepare derivative works of, and distribute (internally and externally, and including derivative works) the code accompanying this license as part of, and integrated into PHP. WARRANTY OF ANY KIND EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTY OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AND ANY WARRANTY OF NON-INFRINGEMENT.  THE ENTIRE RISK ARISING OUT OF THE USE OR PERFORMANCE OF THIS CODE REMAINS WITH USERS OF PHP.  The owner of this code represents and warrants that it is legally entitled to grant the above license.
Makedist can now be run from outside the CVS tree.
ChangeLog update
NEWS update
"sybase" is definitelly six characters long :-)
Cleaned up makedist a bit more. # Also changed 4.0B3-RC2 to 4.0b3-RC2.  I don't see why we should start # using capital letters in 4.0.
ignore distribution files
Add libtool files to CVS. Advantages:
Remove prototype. The prototype was not necessary for UCD SNMP 3.5.3, and broke the build for UCD SNMP 4.0.1.
(PHP tempnam) now uses mkstemp() if available @- tempnam() now uses mkstemp() if available (Stig)
ChangeLog update
(php_ns_request_ctor) enable HTTP Access Authentication
ChangeLog update
NEWS update
- limit find to PHP's automake Makefiles - check whether patches were applied correctly
Disable auto_start until we find a way to access the necessary data fields.
Version update
- Win32 fixes - COM module improvements from Boris Wedl
(PHP var_dump, serialize) now use php.ini's precision size when displying/serializing doubles @- serialize() and var_dump() now honor the precision as set in php.ini @  for doubles. (Thies)
ChangeLog update
NEWS update
We need to use mysql_field_count() instead of mysql_num_fields() if we are using MySQL 3.22.24 or newer when we want to check a mysql struct instead of a result struct.  The reference is here:  http://www.mysql.com/Manual_chapter/manual_Clients.html#mysql_num_fields
configuration failures trap server
ChangeLog update
(PHP multisort) More work, not yet done though.
Made zend_hash_rehash() callable from outside.
Try to avoid IBM/Berkeley DB2 confusion
# Updated to work with the new build system.
# First shot at 4.0b3.
# Workaround needed to run automake in makedist.
- Add include path. Used relative include path assuming php4 and bindlib_w32   are in the same directory.
ChangeLog update
*** empty log message ***
Added MS SQL server module
Changed directory names to match project
Adding MS SQL Server module for Win32
#-  Added support for forcing a variable number of internal function arguments #    by reference. #-  This is done by using BYREF_FORCE_REST as the last arg_types value.
- Add support for BYREF_FORCE_REST
ChangeLog update
NEWS update
Add <FORM ACTION=...> tag
Additional check for concurrent use of --with-{apache,apxs}
Remove extraneous comment. # Pay no attention to multisort() at the moment.
(PHP getprotoby{name,number}) New Functions @- Implemented getprotoby{name,number} (Evan)
ChangeLog update
NEWS update
*** empty log message ***
Added array_pad() function. # Ignore multisort() for now. @- Added array_pad() function. (Andrei)
Trying to clean up the last of the body->id/body->description confusion.
Added new session configuration directives. # Sascha, please document them here.
ChangeLog update
NEWS update
(PHP getservby{name,port}) New functions. @- Added new getservby{name,port} functions. (Evan)
Add missing initialization entry
Support current mcrypt. Tested with libmcrypt-2.2.4
Change session.lifetime to session.cookie_lifetime. And: @ - Added session.cookie_path and session.cookie_domain (Sascha)
@Continue processing PHP_INI_SYSTEM knownDirectives after extension= # # Never saw a response to PHP-DEV post of 25-OCT # # Given the existence of knownDirectives, I figured that option 2 # was closest to the original design intent.
ChangeLog update
typing in the dark
Damn, can't see underscores correctly on this silly terminal I am on
Clean up regex header file mess.  php.h now explicitly includes php_regex.h and php_regex.h figures out which regex header files to include and defines symbols that prevents other stuff from including the wrong versions of regex header files.
ChangeLog update
Kill the regex header file warnings
Looked like this was done by RedHat the way I wrote it.
ChangeLog update
NEWS update
Remove set-if-not-set colon, since CPPFLAGS is never set by automake.
New function.
ChangeLog update
NEWS update
look for output.c in its new location in the windows build
(PHP str_repeat) New function.
moved output.c into ext/standart and made it thread-safe. moved output-buffering related functions from basic_functions to output.c Win32 project need to be updated to reflect new position. # i'm not really happy with this solution, but it seemed the easiest one! # the whole output code is a bit hard to understand... @- Output-Buffering system is now Thread-Safe. (Thies)
@- implemented OCI8 $lob->WriteToFile() function - very useful for streaming @  large amounts of LOB-Data without to need of a huge buffer. (Thies)
Forgot to remove function entry.
ChangeLog update
eliminated warinigs
No tabs please.
(PHP array_map) Away with it.
Some todo things.
ChangeLog update
*** empty log message ***
added some more options
ChangeLog update
kill warning
folding fix (xemacs 21 loads the file again;-)
Allow CYGWIN directory to be specified as via environment variable
(PHP session_register, session_unregister) always return true
ChangeLog update
Allow CYGWIN directory to be specified as via environment variable
one can now use callbacks for custom completion functions (still work-in-progress)
ChangeLog update
Add session.use_cookies option
unserialize no longer complaints about unserializing empty-strings (started that just a few days ago)
ChangeLog update
Add <AREA HREF=...
(_ps_files_valid_key): small logic fix
Added hw_mapid(), read comment in hg_comm.c
(_ps_files_open): evaluate key (session id) before path creation
ChangeLog update
NEWS update
(php_ns_hash_environment): provide more CGI/1.1 variables to scripts.
- Make COM compile again
- Make CVS compile on Win32. - Rename php3_COM.h -> php_COM.h
(PHP getcwd()) added, needs to porting to Win32 @- added getcwd() function. (Thies) # as we do have chdir() now we have getcwd() - i think we *should* restore the # working directory in RSHUTDOWN!
(_display_module_info): Add anchor for module names
(php_info_aolserver): add more information from the server context
(PHP xml_parse_into_struct) sometimes the value was truncated @- XML_Parse_Into_Struct no longer eats data. (Thies)
(PHP var_dump, serialize) fixed mem_leak.
Ignore shared modules directory.
Ignore generated libs.
(PHP xml_parse_into_struct): fixed mem-leak when encountering invalid XML.
(php_ns_hash_environment) add SERVER_SOFTWARE, SERVER_BOOTTIME, SERVER_BUILDDATE, SERVER_PROTOCOL
ChangeLog update
NEWS update
Revert my patches to error functions.
added === operator support (type *and* value match) . samples: (1 == "1") is true (1 === "1") is false (integer != string) (0 == false) is true (0 === false) is false (integer != boolean)
fixed is_identicat_function()
- Move IS_IDENTICAL next to IS_EQUAL
- some tiny changes to possible improve link extraction/insertion of HTML-docs
- Preliminary submit of Thie's patch. Will fix the rest on Windows   as this was added on UNIX with patch. Changed IS_SAME -> IS_IDENTICAL
ChangeLog update
NEWS update
More forgotten prototypes.
Added zlib module to list of maintained extensions. (Stefan).
@- unserialize() now gives a notice when passed invalid data. (Thies)
(PHP unserialize) - fixed mem-leak.
Be safe, use ().
ChangeLog update
NEWS update
Add PNG support. Tested with gd 1.7.3.
Looks better, but isn't wrong
One typo corrected.
_php3/_php3i -> php rename
- It's OK if we link dynamically.
- Get windows version to compile again. No biggy if array_map is not #if 0'd   out even if it doesn't work.
*** empty log message ***
(PHP array_map) Temporarily #if 0 this.
Update mergesort() proto.
unstatic'fy is_numeric_string()
*** empty log message ***
Make string copying a little more efficient.
Small tweak in the error format.
(php3_log_err): Don't output error message to stderr when 				running as CGI binary.
Renamed a couple of functions to have proper php_ prefix.
(php_error): finally get rid of those annoying html tags              when running as CGI binary
Massive change of zend_error() to php_error().
Add mergesort.c to compilation list.
Added mergesort.c from FreeBSD.
(is_resource, is_bool) new functions @- Added is_resource(), is_bool() functions. (Thies)
files are now resources, file.c is thread-safe, the le_ vars are no longer shared, but they are accessible thru "php_file_le_socket(), php_file_le_uploads()..." i also updated the ftp, pdf and file-upload stuff to match the new requirements. @- Cleaned up File-Module (Thies)
(PHP implode): Properly separate zval for another case.
That should do the trick - fix implode() not to modify its arguments
*** empty log message ***
Make ODBC work under Win32
- Converted math.c to use new convert_to_number_ex() macro.
- Add convert_to_number_ex()
Add "--disable-inline" for low-memory machines (be it limited RAM or virtual memory). It's also useful for Digital C where the C++ compiler thinks "inline" is an invalid specifier.
Use sources from $(srcdir)
configure works for me (RH 6.1) @- Added readline support. Works *only* in standalone mode! (Thies)
forgot
interface to GNU-Readline! (not yet active, autoconf needs to be done) very neat - but only usable in standalone (command-promt) mode!
Add dba and mcrypt extensions to list.
new api fo dl() - renamed php3_dl to php_dl (added compat header)
(PHP: htmlspecialchars, htmlentities): new zend-api for html-function (not worth mentioning in NEWS)
@- Upgraded math-funtions to use new Zend function API (Thies)
Add mhash module.
Do not use $< for anything but implicit rules.
(zend_fetch_resource) added warinig if resource is of wrong type
ChangeLog update
NEWS update
Disable ZEND_EXTENSIONS_SUPPORT, if RTLD_NOW is not defined.
starting to clean-up/new API'ize and resourcify the file-stuff - nothing happened yet - just renaming things around.
(Informix driver) Thies introduced ZEND_FETCH_RESOURCE2 (Danny). @- Thies introduced ZEND_FETCH_RESOURCE2 (Danny).
made nice
add myself
(wddx_add_vars) adjusted to new resource-API
(php sybase_close) fixed obvious bug.
new improved resource-API (i hope everything still compiles)
new improved resource-API
Use DL_LAZY for OpenBSD. This seems to be a compatibility flag which should be used for the 2nd parameter to dlopen.
Just some formatting.
- object.ptr was made NULL in DO_FCALL but wasn't restored. Right now I   push it in DO_FCALL and at the end of do_fcall_common it always gets   popped. We might be able to optimize it out.
Added Informix driver to list of maintained extensions. (Danny). @- Added Informix driver to list of maintained extensions. (Danny).
*** empty log message ***
ChangeLog update
NEWS update
Modified sorting functions to use updated zend_hash() prototype.
*** empty log message ***
Modified zend_hash() to accept a pointer to sort function.
Added notice about LXR and Bonsai.
- No idea why this bug didn't exist before. But I'm too tired to think of it.   During a regular do_fcall we need to set object.ptr to NULL and, thus,   push it in the beginning and pop it in the end.   I hope this fix more or less cuts it. I just want to sleep :)
First revision.
*** empty log message ***
(ext/informix) Changed ifx.ec to use the new high-performance                ZEND API now that it compiles with libtool. (Danny) @- Informix driver : Changed ifx.ec to use the new high-performance @  ZEND API. (Danny)
(configure) Allow IFX_LIBDIR environment variable to specify the             Informix library path to allow linking with the static             libraries (libtool related). (Danny). @- IXF_LIBDIR environment variable specifies alternate Informix library    path for configure (Danny).
ChangeLog update
- Didn't lower refcount when doing an internal function call linked to a regular object.
added some more autoconf/libtool stuff to be ignored
automake scans aclocal.m4 as well
(build.mk) fix suggested by sascha.
(build.mk) make cvsclean now also deletes the libzend & TSRM symlinks.
Add stub.c for helper library.
(build.mk) added target cvsclean: removed all files listed in all .cvsignore files found in the current tree.
Workaround for Informix set of libraries. One library depends on another "library" (an object file). We build a standard library out of this object here, so that we can link it in at the right place later.
This should fix the deadlock
Remove -DPIC preprocessor macros. This is defined by libtool automatically, if a shared library is built. This would lead to multiple definitions of get_module(). If you want to build modules, add -DCOMPILE_DL to your CFLAGS.
Link in IFX_LIBS properly.
- Clean up a bit. Separate before the locking so that we can use SEPARATE_ZVAL   macro.
Add clean target which removes standard targets
build.mk can be used to generate build tools. It is usually faster than buildconf, since it rebuilds only components, if it is necessary. To use it, run
ChangeLog update
Clean up and add 'clean' target which removes standard targets recursively
build.mk can be used to generate build tools. It is usually faster than buildconf, since it rebuilds only components, if it is necessary. To use it, run
- Shouldn't be needed
- God damn this sucked. I hopefully fixed the problems with classes although   we might need to clean stuff up a bit.
Define RTLD_NOW to DL_NOW, if RTLD_NOW is not defined (for OpenBSD).
Remove redundant library declaration. All libtool libraries are referenced through DEPENDENCIES now.
Only link with bundled regex, if the user wants it.
POSIX_MISTAKE is enabled by default.
fix suggested by sascha for xml-build in apxs mode
ChangeLog update
NEWS update
Forgot to remove workaround for SQLANY_BUG which is no longer needed
Moved Environment handle to connection struct for thread safety
Mention php-cvs-daily list.
    Use correct data type for mutex.
    Implement temporary workaround for thread-safety issues. This     serializes all request accesses. To disable, define NO_GLOBAL_LOCK
More emphasis on ChangeLog and NEWS daily updates.
mailing list test
testing
test
More information on how to use the special prefixes and the frequency of NEWS and ChangeLog updates.
(php_info_aolserver): Show information about the SAPI module (php_ns_module_main): Return early, if request startup failed
Added the files for t1lib support. No porting from PHP3 done yet.
ChangeLog update
(PHP setlocale) Locale settings are now correctly restored to the values 		set in environment at request shutdown. @- setlocale doesn't anymore screw up things if you forgot to change it back    to the original settings. (Jouni) # Trying to conform to the rules set up by Andrei. Let's hope this works.
Apparently, we did too much cleanup. The server survives now much longer.
NEWS update
New files.
POST works now and does not block anymore.
Remove SAPI_TARGET and use PHP_SAPI completely.
(ns_globals_struct): remove content_type member
    Add comments to the source code and fix POST-read-data bug.
Some ChangeLog surgery.
    Add help to get people started.
Made henv a real global var. Seems to work basically when multithreaded
    nsapi => aolserver changes
    nsapi => aolserver
Renaming ChangeLog to NEWS. All future entries intended for public should go into NEWS.
    PHP_SHOW_LD_LIBRARY_PATH leaked out of my test environment.
- new functions pdf_get_font, pdf_get_fontsize, pdf_get_fontname
Test commit again. # add white space
Testing commit. @ Removed white space.
Ignore generated files.
Put PLS_FETCH() in the correct place.
Ignore generated files.
fix ZTS compile
fixed hopefully last XML problem. that one was hard!
added zval_del_ref() function
(php_ns_request_handler): call ts_free_thread() to clean up
compiles again - and gets compiled
    Pass -avoid-version when building a shared library to avoid problems     with "installing" symbolic links. We need to do this conditional, since     some libtool versions imply --disable-static with this option.
SET_VAR_STR* expect a emalloc'ed  copy of the string!
- Reverse my patch
Enable hardcoding runpaths for more platforms and allow Solaris' patch to run buildconf.
    Ignore already applied patches.
    Allow *.a and *.o as libtool objects, and hardcode runpaths into     shared libraries.
Move random functions related defines into its own header file.
*** empty log message ***
fix for using resources as array indices
    unidiff isn't widely recognized, change to context format.
- replaced most getParamters against getParamtersEx calls - removed ParamterPassedByReference where appropiate
    * --copy always, since we need to change ltmain.sh     * make patch on some obscure UNIX happy
- fixed some memory leaks
- as always forgot the Changelog entry
- support for mimetype application/vnd.fdf needed by fdf module   (only active if fdf support is compiled in)
- fix to work with new version of FdfTk
    FreeBSD's libtool port seems to contain a bug which is triggered by     -avoid-version. Removing it, since we don't absolutely need this option.
    Apply patch automatically at buildconf time
use reference counting for emulating child<->parent (cursor<->connection) relationships.
    Explicit casts to ulong. Some compiler don't like pointers in %
    More portability stuff
dir modules is now resourcified & thread-safe!
    Generate files for distribution (also adds parsedate.c)
    OSF/1 V4.0 wants -lcxx
    Add $automake_flags, to allow propagation of --copy
    Get rid of *_SHLIB variables. Our config scripts don't need Perl,     unfortunately the "apxs" utility does. Someone slap the creator of apxs.
Remove _A.
*** empty log message ***
fixed ora_close again
fix some warnings
    Use libtool
    automake does not find all subdirectories automatically.
    This causes link problems with anything higher than -O0.
    * Get rid of libphp_util.la     * Don't build CGI from convenience library     * Add additional checks to regex.h (Apache build broke)
    100% speedup in buildconf.     We have a top-level Makefile.am, so find becomes superflicious
    Build program static.
Taken from PHP3 source.
*** empty log message ***
test
test
test
    -module is already set in Makefile.am
Added delete and rename functions.
    Move %(EXTRA_LIBS).
    The .sym format isn't that complex.
    Add necessary rule.
    Forgot these..
    Use libtool.
    Use libtool to build.
        * archive-based convenience libraries completely replaced           with libtool components
    Whoops, OSF/1 has -lpthread and -lpthreads, but defines most     pthread_* as __pthread*. According to pthread(3), -lpthread is the     correct choice.
    Polish this.
upgraded the former basic_functions.c code to use new API.
use getParametersEx for all builtin functions
ereg now returns a continious array 0..9 again - empty values are returned as false. i think this is *more* compatible with PHP3 - unless anybody really dislikes it i'd prefer it like this.
    -lpthreads is needed on OSF/1 aka Digital Unix aka Tru64
added add_*_resource() and add_*_bool() functions
i swear, i compiled (at least) before i committed!
    Object files are usually not found in the srcdir.
"cc -32" on IRIX 6.4 does not like (PHP_TRACK_VARS?"1":"0") - at least not if PHP_TRACK_VARS is 0.
- Hooray. This might actually work. (I hope)
- Update changelog
    Make config executable
    Make it executable.
    *_config are executable, thus we don't need %(SHELL)
    Test commit II.
    Test commit.
    Reactivate autoheader
test commit
test commit
*** empty log message ***
test commit
test commit
test commit
commit test
test
test commit
test commit 1
test commit
- Another locking fix.
    Use the already compiled `mod_php4.o'. This avoids the trouble     apxs has with VPATH builds (assumes source dir = build dir).
- Move is_ref back to being an unsigned char and not a bit field.
- Remove locking support completely
- I forgot this
Added array_reverse() function.
rename.
one zval fix - cleanups
- For Andrei. Implement references in array() initializations
test commit
preg_replace() now makes copies of array entries if arrays are passed in, so that convert_to_string() preserves the originals. Is this the correct way to do it?
    Test commit II.
No need for this anymore.
    Test commit.
    Automatically add the SAPI target's Makefile to the list. This     frees us from doing this in each config.m4.
major rework here - the refcount stuff gets better and better!
    * create Makefiles for ext, pcrelib, sapi/*     * copy files for Apache from $(srcdir)
    * VPATH work     * add "--local" switch to buildconf which only recrates the local       autoconf scripts.
*** empty log message ***
cjh: closing bug #2407.
fix the order.. (thanx, andi)
added add_property_resource
*** empty log message ***
Decent configure speedup.  Makefiles are now generated only for the extensions you are including.  Got rid of configure.in.in. Moved the last Apache-specific files into sapi/apache and made both static and DSO build work again (it still doesn't run properly).
The $shared variable should normally never be used outside of a call to AC_ARG_(ENABLE|WITH).  If it is necessary anyway, make sure it is set to "no" before starting.
fixed crash in connection shutdown!
just some renaming.
- Stop using the locking mechanism and start using refcount.   Now we know when we need to free but we still need to support it
- Get rid of warning
- First part of the patch which makes reads use ptr and not ptr_ptr.
disable --with-zeus for now.
Started working on the Zeus support.  Zeus's ISAPI obviously differs from Windows's, does someone have docs for the Windows API?
    Provide alternative istdiostream.
initialize OCI in threaded mode if ZTS is defined.
init in thread-safe mode if ZTS isdefined
fixed startup-deadlock.
found a typo!
- Update project.
    Make an extra copy of input parameter.
    * include from $(srcdir)     * use proper target for nsapi
    Create directories, if they do not exist (for VPATH builds).
added README file with very brief docs
Generalized server-API build process on UNIX.  Each SAPI implementation now has its own directory under sapi/, just like extensions have theirs under ext/.  To make the final targets appear in the main dir, the top-level Makefile includes sapi/NN/Makefile.inc from the selected sapi backend.  This is a plan Makefile stub without any autoconf substitutions.  Each SAPI backend also has its own config.m4 like extensions (read at the end of diversion 2) and config.h.stub files.
    Remove C++ style comments from C source file.
I will follow portability guidelines. I will follow portability guidelines. I will follow portability guidelines. I will follow...
Added functions ftp_{pasv,size,mdtm,fget,fput} PASV mode is now supported; file size and last-modified time can now be fetched from servers that support them; files now may be stored to and retrieved from open files, in addition to disk files.
Make it portable.
added AC_SYS_LFS from fileutils
    Actually allow to set CXXFLAGS
    Now thread safe version builds out of the box. libzend/TSRM     contain extra config scripts which pass the necessary libs back     to our Makefile.
    Build communication channel and add checks for C++ library
    Do not let PACKAGE/VERSION escape from tsrm_config.h.
    Undefine previously PACKAVE/VERSION macros. We should find a way     to suppress these from automake
    Use new tsrm_config script to determine libraries.
    Use helper script to determine compile time configuration for TSRM
Have to keep using AM_PROG_LIBTOOL to keep all automake versions happy.
    Avoid specifying standard paths. This might result in compiler problems     (see #1937, #2367)
    Expand relative paths properly, otherwise build process will fail.
    Do nothing, if PHP_RPATHS is empty.
    Disable rpaths optionally.
- Changed Ts{}.var to Ts{}.var.ptr_ptr.
    * Use per-thread structure for request data     * Update ChangeLog
    Do not try to free NULLs.
    * use faster Ns_ConnWrite()     * access cookies correctly     * set HTTP_* variables for script
    * cleanup     * make cookies work
fixed callback code -> now $parser is passed as a resource!
    * use consistent php_ns prefix     * improve configuration code     * shutdown SAPI/TSRM correctly
    Add entry for AOLserver.
    * remove debugging message     * use SAPI's http response code     * improve POST read (still blocks in Ns_ConnRead, even if there is enough       data to read)     * improve config data handling
    New Zend API
    Use new Zend API
*** empty log message ***
odbc now uses the new Zend function api
Use new Zend API.
    -   support POST and HEAD requests     -   clean up module_main()     -   allow arbitrary mappings
    Initial AOLserver support. Note that the current way of creating     the shared library works only with GNU utilities. Some features     have to be added yet (i.e. POST and cookie support).
- Updated array functions to use high-performance API - Updated preg_split() to allow returning only non-empty pieces
    PTHREADS is a custom symbol
    Additionally check libc_r (*BSD) for pthread functions
*** empty log message ***
Update to new high-performance function API.
    Use new Zend API.
    Add _ex API implementation for booleans.
    Use new Zend API and some minor cleanup.
*** empty log message ***
Extended var_dump to handle IS_RESOURCE somewhat.
Update WDDX for new high-performance function API.
we want to know who to "blame";-)
updated XML (only partly tested)
more high-tech shared building
kill another warning
kill warning
set "phplibdir" in configure so it doesn't have to be set in Makefile.am
use getParameterEx
#if !HAVE_FOO -> #ifndef HAVE_FOO
AM_PROG_LIBTOOL is obsolete in libtool 1.3.3, which we now require. Using AC_PROG_LIBTOOL instead.
Detect automake/libtool that are installed with different prefixes.
fixed warning
Compile fixes for WDDX, XML and Zlib (untested)
This should make the Sybase CT module compile again (untested)
This should make the mSQL module compile again (untested)
Ok guys, the prototype for zend_fetch_resource*() has changed - it now accepts a zval ** instead of a zval *, to be suitable for use with the getParametersEx() API. You don't have to switch to the getParametersEx() API, but you will have to go over your code and add &'s where it's applicable (of course, if you have the mental strength to go over your code and convert it to use the Ex API, it's best).
Exify the standardized resource stuff
    Link with libtsrm.a, if thread-safety is chosen.
    Exit, if subsequent configure scripts fail.
    Try to find ANSI/STDC compatible mode of host compiler
fixed php3 code problem
Small clarification.
    This version is finally the standard one. The last one was created     using the 'nested ifs mode' which seems to be the source of the problem.
fixed typo in mcal_list_alarms()
    re2c's bit vectors appear to be not binary clean. Revert to     standard mode for the moment.
tiny optimisation
Ora_Fetch_Into now resets the returned array in all cases
fixed NULL column cleanups
Added odbc metadata update log
Added support for metadata functions, odbc_tables, odbc_columns,     odbc_columnprivileges, odbc_foreignkeys, odbc_gettypeinfo,     odbc_primarykeys, odbc_procedurecolumns, odbc_procedures,     odbc_procedurecolumns, odbc_procedures, odbc_specialcolumns,     odbc_statistics, odbc_tableprivileges
mcal fix
added null-checking in make_event_object
Added optional port argument to ftp_connect()
i always forget something;-)
fixed Ora_PLogon (rewrote ora_do_logon using php_mysql.c) oracle_hack.c should no longer be needed!
preliminary fix for each until andi & zeev clean up!
resourcified Oracle
if you pass NULL as the resource_type_name to zend_fetch_resource*&friends the functions will not print any warnings if the resource is not found!
Added new allowable_tags for gzgetss() in ChangeLog, too.
- fixed misleading explaination of fdftk option
- Get rid of warning on win32, non-threadsafe mode.
removed NULL reference
added missing "addr.sin_family = AF_INET" to socket routines
*** empty log message ***
WDDX can now serialize and deserialize objects. It uses a variable named 'php_classname' to store the class name as part of the structure. This way WDDX modules in other languages don't get broken by extensions to DTD we would have had to make otherwise.
Slightly redundant to check for crypt() here again, but the TRY_RUN stuff needs it defined in the same m4 file or it won't work, and it will just get pulled out of the cache anyway, so it isn't a big deal.
fgetss/gzgetss fixes
A couple of fixes.
    AC_CRYPT_CAP depends on symbol checks performed later.
    * Do not check explicitly for symbols in the C library (fixes #2339)
added krsort() function
    Continue, if re2c is not available.
    Use install-sh (autoconf) script to install php. This automatically     creates the bindir path, so that the effect described in #2304 disappears.
    On at least Win32, gettimeofday() returns values in tv_usec which exceed     1,000,000.
*** empty log message ***
Add get_func_args()
*** empty log message ***
woops
- Move some more language specific functions over to Zend.   get_class() and friends.
- Move some more Zend internal functions from PHP
    Timestamp commit. I do consider removing the rule from Makefile.am
Here was also something missing.
- Next part of locking fix.   $var = expr; and $var += expr; first create code for expr and later on   for the fetch_w of $var.
added FTP module
- Newline for Sun's compiler
- Add some internal functions to Zend
- Internal functions which are basic language functions should be in Zend   and not in PHP. I.e. strlen(), each(), error_reporting(), count(),   get_class_name().
Added optional allowable_tags arguments to strip_tags() and fgetss() to allow you to specify a string of tags that are not to be stripped
- First step in fixing locking problem. Array fetches are now always done last.   Later on we will want to delay the write fetches even longer until after their   resulting expression is parsed. The way it is now, will make it very easy   to delay as long as we need.
php3 compatibility added
- Indirect references had all of the fetches by mistakenly backpatched.   Actually all of the fetches are supposed to be read, except for the last   one.
*** empty log message ***
- Upgraded var_dump() to take multiple arguments - php3api_ is changed to php_
Replaced ftplib because of incompatible license.
logic fix
Added zend_num_args() and zend_get_arg()
resource API & ZTS stuff
Add a file in which we can put Zend builtin functions
*** empty log message ***
added array_count_values function.
new API for var_dump
*** empty log message ***
- Try to fix the leak Rasmus reported. It's pretty sucky code so I'm really   not sure this fix is OK.I can't remember all of what we did there.
- Make Win32 compile again
Safer behavior
    Aline escape signs in macro definitions.
    Pipe header names through sort and put only one on each line. This     makes them better accessible.
    There is no reason to define malloc() to xmalloc() in this context.
Make CVS quiet.
make SUNs c89 happy
SUN c89 doesn't like } direct after a label;-(
no // in the sources please
added newline at end of file
note the shared modules in the changelog
Convert to Ex API. Does anyone have a better name for it?
	Use Ex API here as well.
	Convert module to use Ex API.
fix #2316 - fetching empty LOBs via OCI8
don't call empty function names
add user-level callbacks
*** empty log message ***
supply path to xml include dir for APXS and APACI
This format is also used by the XML module allows us to compile with Apache's expat-lite dir
`0' flag ignored with precision specifier and `X' format
If available, use Apache's embedded expat
fix Unix build
- Added support for unknown POST content types (Zeev) - Introduce the convert_to_*_ex() API in strlen()
Introduce convert_to_*_ex()
*** empty log message ***
*** empty log message ***
Generalize SAPI a bit
Added documentation hooks to ftp.c
added ftp_pwd() ftp_cdup() ftp_mkdir() and ftp_rmdir()
added ftp_systype() and ftp_listraw() functions
Added rudimentary FTP support.
improve short help messages
this was twice here
this helps compiling on non-ANSI C compliant platforms
libtool check fix
.
Make some things accessible from outside for session module
.
wddx decode works as well
wddx serialization works now
Since Thies fixed var.c, objects work now, too.
use AM_PROG_CC_STDC which covers AIX, Ultrix, OSF/1, HP-UX, and SVR4
silence libtool
php4 now deserialized php3 objects correctly! php3 will ignore objects serialized by php4 (that's the price we have to pay!) small fix in deserializing objects with static initializers (thanx boris)
when unserializing classes: if the class is not known the standard class (no methods) will be used. if the class is known - the created object will functional again!
HASH_OF is now in php.h.
use new API in var.c
i love id-strings
made serialize/unserialize work with classes! (also made the code "shorter") CHANGES: - the serialized string now also contains the class name (was not available in PHP3)! - when unserializing php will create a fully working object of that class again   therby the class has to be defined when unserializing - else you get a warning!
add LIBOBJS, used by AC_REPLACE_FUNCS
HASH_OF is usable enough (i hate duplicating macros all over the place)
Clean up the strlcat/strlcpy checks.
- Leave this for now.
- Thread-unsafe win32 compiles again - Some strlcpy changes including one bug fix.
- gettimeofday wasn't registered.
- Another small one. I'll leave the rest for now...
- First go at using strlcat().
- Support strlcpy/strlcat in windows.
- Updated bundled PCRE library to version 2.08 - Made it possible to specify external location of the PCRE library - Reworked PCRE extension to use updated PCRE library API
Add strlcpy/strlcat to the build process
- fixed memory leaks in pdf_open_memory_image() and pdf_add_bookmark()
forgot
is_array & friens speedups
count() now uses the new getParamertersEx API.
i'm sure this was left-over debugging code!
you can now position when doing lob-writes.
- X-* is probably more standard.
Added PHP_WITH_SHARED for checking "shared,*" prefix when configuring extensions.
added Metaphone support
got rid of the define-callback stuff there's a bug in oracle-oci8!
Per Stig's suggestion.
ported  $lob->savefile($filename) method from PHP3
Make sure HAVE_LIBDL gets defined. Disable more C++ tests when not configured for thread safety.
cleanups
ported oci8 to use new class API var_dump no longer tries to traverse avr->value.ht for objects but uses var->value.obj.properties instead
Modified phpinfo() to show the contents of arrays in HTTP_*_VARS[]
- Rewrote the GET/POST/Cookie data reader to support multi-dimensional   arrays! (Zeev)
Add PHP-Version header in IIS
That's important enough to be cached
Make this class instanciatable
check for c++ only, if thread safety is enabled
use static buffer for URLs instead of allocating/freeing memory for each one
calculate length of cookie string correctly
add missing result msg
move session URL stuff to the last place before SAPI takes over
These shouldn't be here
- Oops
- Make it compile on Win32
Time to do that - rename the output layer prefix
*** empty log message ***
expand version number
update
Reverting to previous state.
update macro
Use global symbol table instead..
Use TRANS_SID macro for selective compilation..
add rule for url_scanner.c
- add standard disclaimer - regenerate scanner with re2c -s
  add transparent session id propagation   this uses a custom scanner which detects relative URIs and changes   them appropiately.   must be explicitly enabled with --enable-trans-sid   (normal case is not affected, since session_adapt_uris defaults to    void statement. Compiler should eliminate dead code in output.c then.)
Use OnUpdateBool for Boolean entries.
avoid mmap overhead for small files
optimize fpassthru/readfile to use mmap instead of fread which especially increases speed on large files.
- support for external entropy sources - extern_referer_chk => extern_referer_check - kill a warning in mod_files.c
Rename allow_builtin_links to expose_php
More cleanup
Except for this small bug fix - it works
- Seriously optimize and clean php_parse_gpc_data() - Added gpc_globals directive to turn global definitions of GPC variables on/off (untested)
Cleanups & optimizations
Cleanups
Move Linux check => more general --version-script check
add info about php3/php4 apache modules
tweak the INSTALL document a little bit
pass flag correctly to linker
- better use of scoping - support Solaris 2.x
Workaround for m4 weirdness.
lets not go down that road..were onyl going to use the internal event structure. No passing objects
wrong preprocessor command
ported the php3 stuff to php4. This module should work intechangably between the two versions also
*** empty log message ***
Shut up a warning
- wrong use of php_print corrected
Lost functionality in earlier fix... That should really work.
That should do the trick (untested)
my bad, sorry
fixed memory leak
- Add mcal to TS project. It seems that mcal needs to be patched a bit in   order to work TSRM. Right now it has globals.
forgot to change prototype
pdf_setfont got optional parameter to embed fonts
Remove extraneous debug dlerror() call which results in the subsequent dlerror() returning NULL.
- Add -b option to flex++
remove -Wl,--version-script from RPATHS, put it into a separate variable
Be consistent.
- add posibility to specify how objrec to objarr conversion   is performed (not ready yet)
add versioning support
Correct compiler warning.
- Update non-threadsafe project file
Here you go, Egon.
Add thread-safety notice here.  The solution is using gethostbyname_r, but it seems that it takes different parameters on Solaris and Linux. ;-P We should probably make a wrapper function, and make a configure test that checks if there is a reentrant version available, and if not protect gethostbyname and similar calls with a mutex until the results have been copied.  Ugly.
Added second parameter to array_keys() which allows returning keys only for a specific value in an array.
Kill compiler warning.
Shut up, CVS.
Kill warnings.
- uniqid() used the additional parameter even if it was not provided   this caused an segm fault. fixed it.
define tests first, use after.
A couple of BoundsChecker fixes
- Should fix Win32 compile
- Make zend compile again in Win32.
File should here be string.
Forgot to update ChangeLog
Removed remaining PHP_31 defines. First try with ZTS support, can someone with a working ZTS enabled setup test this, please?
Enabled shared build of gd module
ignore zend-scanner.cc
hand-patched some MSVC files
* header file cleanup * fixed --enable-thread-safety build for UNIX
Workaround to prevent TSRM from defining PACKAGE and VERSION. No longer using autoheader.
- "Resourcified" the Informix driver.
untabified
Workaround for crypt() getting too few characters for salt.
Corrected the argument-list for getopt. -c expects argument.
Added addcslashes(), stripcslashes(). Reverted addslashes() to the very original behaviour.
fix warning
- Should fix short_tags and co. problem.
- Oops
- Make Win32 compile once again.
- Shift around header files.
Find debian umich-ldap libraries/include files.
Changes for updated odbc module
Renaming odbc files
New resource handling for odbc module
work around gcc bug, otherwise compiler would die with
- php_error(E_ERROR,...) won't ever return so change the connection_status   before it is called.
C++ comment fix... sorry.
Appended second argument of addslashes(), Changed php_addslashes() to add \000 instead of just \0
Forgot one
Kill a warning
This was actually intentional... put it back in and improve
Cleanups
First try with new resource handling in zlib module.
Oops, set_time_limit() would never have worked becase HAVE_SETITIMER never got defined anywhere.
Oops
Catch a timeout and add user-level interface for connection handling
Might as well bail as soon as we know we should since this is now possible.  We still need to set our connection status bit field so a shutdown function can figure out if a script was terminated due to an abort, timeout or finished normally.
First part of the connection_status work.  No user-callable functions yet.  That is coming next.  Have also only done Apache and CGI so far. Will have to crack open my ISAPI book to do that one.
Oops, don't need those commented out blocks.
Kill compiler warnings.
Conform to new resource handling guidelines.
*** empty log message ***
Add resource support to the Sybase CT module
First try at WDDX serializer (not active currently)
A few fixes
cleanup
remove superflicious enumaration
bail out, if ps_mm_instance wasn't initialized correctly (should take place in global startup)
implement single directory garbage collector
Update the mSQL module with the latest tech
Damn, forgot to commit that
*** empty log message ***
Static is good...
Final MySQL tweaks
- backed out IS_RESOURCE stuff in favour of old php3-style IS_LONG   for now. This makes the Informix driver work again.
More cleanups
Use the new API for resources in MySQL
Add new API for resources
Added detection of Oracle 8.1 (aka 8i) from PHP3.
Practice what you preach, I guess.
Add global startup/shutdown functions in Win32 version as well
Add prototypes for new functions in internal_functions.c.in
- add global startup/shutdown handlers - improve genif.sh to also consider all header files for inclusion   (checks for phpext_) - use vsnprintf in main.c to avoid buffer overflows - improve sessions's mm module to cope better with OOM situations   within the shared memory segment - fix typo wrt session.auto_start
Add global startup/shutdown functions
Makefile.in and other generated do not belong under CVS control
Enabled shared build of mysql module
Small cleanup
Enabled shared build of snmp module
Revert the IS_RESOURCE patch.  It had some unintended behavior.
Enabled shared build of pgsql module
- complete rewrite of object to array conversion
Version update
Let $GLOBALS actually work...
*** empty log message ***
Release resources when converting to other types (fix Thies's reported problem)
Use \0NameFilenameLineno as key instead of numeric index for runtime defined functions
clean up library naming
newest GetImageSize renamed header-file
- Small fix but it's important for people to know when B3 is released.
Added mcal module
- Add sessions module to standard win32 build.
- Group-attribute may now appear multiple times in objrec record.
ext/lcg -> ext/standard in various places
oops
we need DEFS when compiling this dir
fix for bug #2165
fix for bug #2191
compat fix, bug #2201
"fix" for #2202
Add support for unixODBC
moved lcg stuff to ext/standard
PATH_TRANSLATED was not used at all, even if one comment implied it should be used. After adding this, the CGI version works for me w/ Apache + suexec
This one was nonesense.
Missing return type.
Oops, file should be string here.
This check actually doesn't make a whole lot of sense.  We need something here, but if a mod_auth_* module declines, the type is still set.  So, we need a check to see if there have been a non-declined auth hook previously for this request.  I will ponder a good approach to this.
Add -d switch
*** empty log message ***
*** empty log message ***
semicolon syntax error
Bug in gmmktime(): it produced wrong results in New Foundland, Central Australia, India, Iran, and Java, with half-hour timezones.
when "track_vars" is disabled and a script which contains <?php_track_vars?> is accessed for the first time, track vars were not created properly.
merge in fix from php3
New relay code
If we stick to this style, parsing becomes easier (for humans and computers).
Beef up debug macros
- fix potential buffer problem in send_cookie - fix gc probability algorithm - don't access mod_data directly - initial version of mm support for session data storage
Better debug macros
Typo fix
*** empty log message ***
Tiny fixes
Log date&time on script logs
lets not make global functions unless we need to..actually this should be taken out someday
cleand up storing new events
Missing return types in prototypes
shut up CVS
*** empty log message ***
- Damn. It wasn't a correct fix. This should do it.   When the zval ** are equal we don't want to assign_ref, in any other case   I can think of we do want to assign_ref.
- Make Win32 compile again.
make it compile with gcc again
- Add hash_apply_with_arguments()
.
AIX wants the value, not the pointer to the value.
 Make fopen() work with URL's in Win32
- More elegant fix for Win32 include_path
- Temporary fix to allow Win32 MT safe version to use zend_fopen().
Add output_buffering directive
argh..Finally
suppress error exit status on non Rhapsody systems
don't print out error message
malloc.h is deprecated, use stdlib.h instead
changed to use the new, soon to be public libicap 0.99
return true to match documentation
This changes makes it work on egcs 1.1.2/Alpha
- Add lcg to windows project.
.
remove all references to RAW_RPATHs Apache builds now correctly when shared core is used
remove checks
- cleanup code - add script which creates the directory tree for better scaling   of mod_files
Use O_EXCL where possible.
- add session.extern_referer_chk - use combined lcg in session id creation
.
get rid of that usleep() and add some entropy using the combined lcg
*** empty log message ***
Here was also something missing
*smack*...must..initialize...return...value..
On the way to make configure more robust
- Make sure expr_list and echo_list are either empty or comma seperated   expressions
- fixed several memory leaks - fixed broken hw_cp and hw_mv functions
*** empty log message ***
missing return type
TTF support tested and working now
This should fix TTF support - untested
cjh: fixing the imap_add_body crash in php4.
ZTS
Ported fixed for bug #2103 from PHP3.
ZTS fix
some ZTS stuff
on unix ZTS gets defined in zend_config.h
ocifetchinto fix
*** empty log message ***
- Add some ZENDAPI's
merge in change:
update
HAVE_FREETYPE_H isn't defined anywhere. HAVE_LIBTTF should be sufficient
fix persistency of mhash_* constants
dont have these library functiosn yet
argh..heh..par for the course..
argh..bad day..
please work...
hrmmm
last few compile fixes
maybe it'll compile now..more php3->php4 conversions
more changes
ZTS stuff
thanks Andrey!
fix flushing cached information to disk
cleanups & ZTS stuff (ZTS untested!)
imported diskfreespace from 3.0
fixed potential segm faults
Removed internal pointer reset from array_walk.
make pcre test program compile again with Zeev's additions in the pcre_exec() function parameters
- Oopsie
- Optimize the execute stack a bit.
added a few PLS_FETCH()
Close bug #1742
*** empty log message ***
Forgot to have internal pointer reset.
more of the new ini stuff
Generate better warnings for class/function redefinitions
Rename TestClass to OverloadedTestClass
- Make the non-threadsafe version compile again
Add new-thread handlers
rerun checks if buildconf is newer than the time stamp file
Separate Sybase-CT from Sybase, and fix build process for Sybase-CT
fixed unresolved symbol pdf_open_memory_image when pdflib 2.01 is used
no return warning removed. fixed TSRM constructor prototype
signed/unsigned warning removed
Bison generated files
config for pdf module should now be similar to php3
whoops, forgot to actually return the alarms :^)
slight changes to config of pdf module
- Got rid of the C++ comments.
Makefile.in should not be added to CVS
starting to clean up
you can now override the CFLAGS while doing make - eg: make CFLAGS="-g"
more ports
ports to php4
more moudle stuff
added icap files from php3 sources
More typos.
I missed that also.
Another typo.
that too
Go beta 2 (final)
- Thies's crash fix.
fixed sysv_shm*
add changelog entries which I forget a couple of days ago
solve infinite recursion error when including <signal.h>
First shot at odbc for PHP4 Problems with LONGs to be investigated
fix for #1995 (this module needs some more work.)
More zend-izing.
Built-in phpinfo() links are now turned off by default.  They can be turned on using the allow_builtin_links INI directive
- Changed phpinfo() to list modules that have no info function
*** empty log message ***
Modified array_walk() function so that the userland callback is passed a key and possible user data in addition to the value.  It's still backward compatible with one argument version.
unreferenced variable warning
Corrected spelling.
Now that's an annoying bug.
bump up the version number
count/sizeof had their arguments setup wrong (messup between Beta 1 and 2)
Introduce call_user_func_ex()
*** empty log message ***
*** empty log message ***
Made Hypwerwave module threat safe
fix for #1947
Fdf module should now be up to date
Order of freeing memory cause segm fault since efree seems to wipe out the memory.
renamed file
zend_hash_update() seems to be a bit different form php3_hash_update
Huge patch to update the hyperwave and pdflib module. Only pdflib >2.0 is supported. None is tested yet. Hyperwave seems to be broken now.
hope i haven't missed anything - but we're no longer in the 3.x tree
*** empty log message ***
Added a note about the SNMP changes
Updated the files so that they have all the functionality of PHP 3.0.12.  These include snmpwalkoid, snmp_get_quick_print, snmp_set_quick_print, and snmpset.
[s]printf fix for bug #1952  (note, [s]printf doesn't work in PHP4 yet)
- Initialize extended value's and put the fetch_type in it's own variable   name.
Last character of file not a newline, causing problems with Sun's C compiler
file did not end with a newline, causing problems for Sun's C compiler
This should sort the buildconf bug...
AIX needs this include...
Go Beta 2
Removed '3' from key functions in PHP (maintained compatibility through php3_compat.h)
Make set_compiled_filename() return a pointer to the allocated file name
More symbol work.
More symbol work.
Updated proto
Another forgotten prototype. Andrey, why is preg_grep in PHP3 missing?
Support resource type in gettype()
Final IMAP fixes
More IMAP fixes
That should fix bug #1903
These aren't necessary
Declaration fix
Ok, that should be a good start.  Can somebody verify that this actually compiles, and perhaps check if it runs?
Early steps towards making the IMAP module PHP 4.0 compatible (and readable - indent people, INDENT)
This should fix the implode() problem
Support symbols in any symbol table, not just the active one
- Damn that's more like it.
- Cut&paste crap
- Add ptr_stack_n_{push,pop} in order to speed up function calls a bit.   There seems to be no reason for stack->top in the ptr_stack except for   when realloc()'in the stack. I think I'll remove it.
* Setting variables in the global scope wasn't handling is_ref's properly
-Tiny fix
- Added function documentation prototypes. Thanks to Egon Schmid for   straightening me out :)
- Added get_class($obj), get_parent_class($obj) and method_exists($obj,"name")
Make it compile again
Commited changes in php3 function/soundex 1.32
License update
Inherit parent's constructor
*** empty log message ***
Symbol work.
- Update Changelog
- Add missing lock
- strttotime is compiled in on win32 again.
Oops.
More symbol work.
check for nKeyLength not arKey
*** empty log message ***
forgot to mention the password
spoonfeed
>... If you can, please update your module to use these macros. I could, so I did.
Set reference count and is_ref values for new objects
*** empty log message ***
More symbol work.
- Oops I erased this by mistake
- Should be a complete fix now. This break away code should maybe be made   somewhat generic
- Temporary fix for "this". Have to fix it tomorrow.
"gd", not "-lgd"
use AC_ADD_ macros
final php3.ini -> php.ini renaming?
A bunch of grunt work updating function entries and declarations.
overlooked them
Remove buildconf.stamp on make distclean
Congrats Andrey
more Solaris fun
added workaround for Solaris PIC weirdness. added RPM spec file for a future "official" RPM, work-in-progress
temporary icon for RPMs until Colin gets back and can make us a spiffy new one
* Make Win32 build work again * Make error_reporting value prior to the standard initialization be   set so that errors show up
Solaris 7 fix
*** empty log message ***
Get rid of most compiler warnings.
Thoroughly fix the SWITCH problem.  No RETURN handling yet.
Changelog
Bring rand.c up to date
fix for missing include path in CFLAGS
Bourne Shell does not have -nt.
Added function entry for similar_text().
Added function entry for strip_tags.
Ignore generated file.
*** empty log message ***
Ignore parsedate.c
generated and not required by windows
required for the Windows build, re-adding
*** empty log message ***
Ported strtotime() function.
Improve speed on subsequent runs of buildconf
gdttf update
run libtoolize during buildconf since we depend on libtool anyway
generated file
in case ltconfig isn't checked out executable
good boy
updated the docstring for --with-xml
Added check for freetype.h
small fix to libtool check
require libtool to be installed as well
- Make Win32 compile again.
Changeloggin'
ChangeLog
New ini-stuff incorporated. Porting to PHP4 and ZTS hopefully complete.
ChangeLog
Please add in any changes/bug fixes you've made - we need to keep a details ChangeLog...
New constants
Time to remove the PHP 3.0 ChangeLog
add the HPUX ANSI detection from php3
add checks for autoconf, automake and whether libzend/TSRM is around
identify ourselves
Implement additional heuristic for session id search. Now looks into REQUEST_URI as well.
temporary hack-fix
-Ported all remaining date() options -Made array_walk() work somewhat, but it's not  possible to change array values from inside the  walk function yet
*** empty log message ***
Blobs now working too.
Blobs don't work, hash problems.
First cut at standard way of making dynamically loadable extensions on UNIX. Examples on how to test:
*** empty log message ***
Informix extension now works but php_ini stuff still needs rewriting.
sync with 1.133
since we all seem to use different tabwidths, reformat this with :set tw=4
update
merge in change from php3
initial import of DBA
the ; is superflicious
*** empty log message ***
that's better
Debian fixes
change version number to 4.0b2-dev
fix to reiterate that one should _always_ use braces around if/else/for/while
It really does work.
ignore more files
Started php4/ZTS port of Informix driver.
use the same version as in php3
use reverse lookup array, submitted by bfranklin@dct.com, #1755
fix for #1748
disable broken sprintf test
defaults to empty string
Added locale support.
exec() can now properly handle lines longer than (EXEC_INPUT_BUF-2) bytes.
Added 'n' option to date().
- Include alloca.h when need and available.
Added headers_sent() function
get rid of --with-shared-apache it's currently broken and redundant (use APXS instead)
- Get rid of C++ comments
Remove a bunch of old junk.
The last forgotten prototypes I know.
Updated status
Don't forget .cvsignore
Ported WDDX module.
It's in PHP 3 and 4.
0.91 update
Test, will document this soon.
Updating cvsignore
Moving dlist stuff into core.
*** empty log message ***
*** empty log message ***
License update
Make error codes PHP 3.0 compatible
Kill compiler warnings.
license change
update
More credits.
- Should fix the memory leak when returning from the main scope.
allow access to std{in,out,err} by using the php domain
more to do
add session config to php.ini and adapt the naming scheme for it
Update credits a bit. "Overall Work" line should probably be extended.
-Kill compile warnings in apache.c -Make preg_grep() work with copies of array entries
Proto change
*** empty log message ***
I was sure I committed these already.  Weird
One more necessary .dsp update
*** empty log message ***
* Turn on debug by default * Remove CREDITS file, point to web page instead
Debug on by default
Update DSPs
void some warnings
use optional copy
make copy optional
Oki doki
Some work on makedist
Handle BCMath Add a license pointer
We'll have to live without these files somehow.
Dummies
We need to disable bcmath by default
Remove MEMORY_LIMIT from PHP, it's a Zend issue...
Get the Sybase modules uptodate
*** empty log message ***
A little change in how array_splice/array_slice handle length parameter.
Updated the functionality of array_splice.
the regex check relies on a previously set APXS variable, so it needs to be after the apxs check
merge fix
unnecessary, breaks the build
This is so ugly, I hate myself for committing it
Get the LDAP module uptodate
avoid nameclash
fix detection
*** empty log message ***
*** empty log message ***
Get postgresql module uptodate
Oops #2
Oops
* Get the mSQL module up to date
Minor fix
Ignore T_PHP_TRACK_VARS in the parser (handled in the scanner)
License update
License update
define sid to "", if we are in cookie mode
Change true/false back to 1/""
we don't need php_sid
that should be included 1st
define SID appropiately
*** empty log message ***
that should be included 1st
*** empty log message ***
More 3->4 changes
* PHP 3.0 -> 4.0 changes * Add php_admin Apache directives
Sooner than you think, Sascha :)
*** empty log message ***
Added .cvsignore
A useless check
disable zend_handle_sigsegv
php3.ini -> php.ini
* Update logos * Move from PreAlpha 1 to Beta 1.
How did this ever work without this #define ?
Remove some useless stuff
Small grammar fix
*** empty log message ***
- Add a bitwise flag to phpinfo() - Import a draft of the new PHP license
Woops, this was in the wrong place
change php4_value and php4_flag to php_value and php_flag
*** empty log message ***
add some which are always substituted
Tested imap, and had a look at ldap.  ldap should be working, but my ldap server is currently in a box.
Finish porting aspell - tested and works ok now
update
*** empty log message ***
*** empty log message ***
*** empty log message ***
test commit (new format inspired by FreeBSD cvs-all)
destructors should return 1, shouldn't they?
par with 3.0
fixed mem-problem
small php4 fixes
typo
merge in some autoconf stuff
Oh, that dumb bug.
Ok, so we do have to lock in there
Woops, fix.
Put the garbage in the garbage bin
Get rid of AiCount completely
Final tweaks
More locking work
*** empty log message ***
More stuff
Don't touch refcount and EA directly
Step 4: Move to a 7-bit counter (not fully implemented yet)
Phase 3: Use a single bit to mark IS_REF variables
Step 2: Rename is_ref to EA
Step 1 in nuking the garbage collector: - Change the hash destructor to return int
Step 1 in nuking the garbage collector: - Change the hash destructor to return int - Don't kill the bucket on hash_destroy if the destructor returns 0
Add Aspell module
*** empty log message ***
Send a SIGSEGV instead of exiting, to trigger a core dump
More cleanup.
Reduce clutter a bit.
*** empty log message ***
Avoid sending NULL argument to printf
Support definition of classes that are derived from classes that are defined in runtime
on par with latest php3
enable it, until we find a better way
add sendmail
Support PCRE under Win32
avoid two copies of pcre.c in the repository
make Solaris gcc happy
Correct option caching
use void * instead of long for 64-bit test
ups
fixed mem-leak
ported IPTC fro php3
added RESOURCE-returning
up to php3 version returns resources now!
added RETVAL_RESOURCE and RETURN_RESOURCE
Make convert_to_string() regard false as "" instead of "0"
updated to latest php3
*** empty log message ***
Support x-httpd-php-source
*** empty log message ***
remove cvsignore files as well
don't wipe files for distributions
'make dist' builds an easy distributable tarball
add missing include
checking for ints won't work, since they are 32 bit on both platforms
ignore this
would be logical to enable display source mode
Support isset()/empty() for string offsets
ar t is a little bit noisy on Rhapsody
almost no config.m4 substitutes these anymore.
work around the Apache problem that it pollutes the namespace
add usual rhapsody hack
missing DL_HANDLE broke build
there must be a better way
typo
let's start OS X hacking
..
...
.
test commit
test commit
workaround for 64-bit platforms
added some refcount stuff
losses memory like hell, but seems to work!
fix from php3
define zend_bool
suppress No such file or directory
someone please try whether the autoconf stuff works for sybase and sybase-ct - I've neither one.
maybe fix, following Joey's description
--with-zlib should work now
changed boolean behaviour:
some additional consts
vpath thingie
implement a simple API in the case someone wants to define his/her own serialization stuff
Make require accept any parameter
No need for a PSLS_FETCH() if PSLS_D/PSLS_DC are supplied as function arguments
*** empty log message ***
Added session expiration.
synced with 3.0.11 ora_bind works!
No need for that either...
Don't break the tree
Added session_is_registered(varname) function.
Ported MYSQL_NUM, MYSQL_ASSOC, and MYSQL_BOTH additions from php3.
oops
*** empty log message ***
work around that solaris bug
ugly and working
BSD derived tests want -h for symlink test
port
more porting
port Rasmus' APXS changes for AIX
port over from php3
lex optimizations
add dbase_replace_record
port over autoconf fixes from php3
Win32/general patches
* Get rid of another request_info element (filename) * CGI through Apache should work now
*** empty log message ***
Protect against NULL arguments in filename
* Make the memory leak reporting code much better with repeats * Remove useless variables
add dmalloc
- APXS link thingie - functions/ game obsolete. Should make compiling faster on slow machines (hi Kristian :-)
*** empty log message ***
gettype now reports "boolean" correct
Making function accessible.
Making the function accessible.
Made preg_split() consistent with split(). Added a new /e modifier for preg_replace Kill a warning in pcrelib.
urlencode and decode return an empty-string if the input-string is empty (matches php3 behaviour "more" closly) Please read my previous mail and comment!
cosmetics
Bad html in ifx_htmltbl_result().
fix some potential buffer overflows
Backing out changes.
fixed implode "again" -
whoops, kill debugging message
Introduce AC_ADD_* macros
avoid error message
use standard autoconf variables
*** empty log message ***
*** empty log message ***
Add a standard get_ini_entry() to interface between Zend and the outside world
Implement new get_ini_entry() for Zend
*** empty log message ***
Use php.ini instead of php3.ini
*** empty log message ***
Win32/ZTS compiles again
for struct sockaddr
update php3 sync info
optimize php3_fopen_url_wrapper() a bit (fewer recv() and send() calls)
Apply Sascha's fsock fixes to php4.
make CGI version work again
typo
Need to check if it exists first.
Win32 patches (does not compile still)
MIME headers may be 512 characters long.
* fixed some #if/#ifdef issues * hand-patched in php3 changes from 3.0.6 to HEAD in these files:    fopen-wrappers.[ch] ext/standard/file.[ch] ext/standard/fsock.[ch]    ext/standard/php3_string.h ext/standard/string.c * added some new file/socket macros for more readable code:    FP_FGETS(buf,len,sock,fp,issock)    FP_FREAD(buf,len,sock,fp,issock)    FP_FEOF(sock,fp,issock)    FP_FGETC(sock,fp,issock)
added INIT_FUNC_ARGS_PASSTHRU and SHUTDOWN_FUNC_ARGS_PASSTHRU
* added zend_binary_strcasecmp()
reversing another patch that slipped
* reverse fsock/string import patches
Change four spaces back to tabs (Why the hell did you change the tabs to four spaces?!)
* now using php4.ini instead of php3.ini * re-imported fopen-wrappers, fsock and string code from php3   NB!  I have not tested all of the imported functions yet.
fix some .cvsignore files
gmmktime() fix
Need to test for directory.
make symlinks if they are not present already
First attempt at moving the old RFC1867 support to the right place
We can't quite go with expr there (shift/reduce conflict), go with scalar.
require() improvement as per Andi's suggestion
it's obj.properties, not ht
Make the concatenation operator use make_printable as well
Don't take failing on an include file so badly
Support <?=
E_ERROR -> E_COMPILE_ERROR in the compiler
Two fixes: * The error generated by a failed class inheritence wasn't  properly   displaying the file in which he error occured. * Inheritence didn't work if the parent class had uppercase letters in it.
append DEBUG_CFLAGS to CFLAGS
Print out include_path in include/require failures
* Use to_string() instead of __print() * Support boolean casts ((bool) and (boolean))
Change __print into to_string()
* Make the output handling of variables much, much cooler.   Uses zend_make_printable_zval() instead of convert_to_string() now:
Now THAT's an annoying bug.
make serialize work unserialize does not work yet
Added preg_grep() function.
Sync. with php3. Only add Date: and From: if not supplied by user
Make array_shift/array_pop work better.
A fix for a fix.
oci8 to 3.0.9 implode works!
*** empty log message ***
up to 3.0.9
resync informix driver with php 3.09 version
Replace error messages
Add zend_hash_get_current_key_type()
better scaling for large servers using many session ids
Don't set is_ref in _phpi_splice() More checking in array_merge() Added keys() and values() array functions.
- some cleanups - add gc logic - add session_destroy()
one C too much
avoid unnecessary PSLS_FETCH() in internal functions
-Init tsrm on minit
- Use PS() everywhere.
- Make sessions compile on win32 but it still doesn't link.
- Add some *_FETCH()'s. Still some work to be done so that it'll compile on win32.
Work around a compiler bug - mark variables that are sent to functions that aren't yet defined as FETCH_W (because they might end up being sent by reference)
- s/encoded/encode/ - new TODO entry
- Remove the is_ref =1 from the push() function.
add some protos
add some thoughts
- auto startup when calling register - auto startup using a configuration option
moving start code into its own function
Added array_merge() function.
SAPI does not want line endings
Added push(), pop(), shift(), unshift(), splice(), and slice() array functions. The first 5 work like their Perl counterparts. slice() returns a chunk of the array specified by offset and length arguments.
* Centralized shutdown * Change shutdown order again
first import of session module
Call the request_shutdown on modules before destroying symbol tables, so that the session module can be implemented
Move shutdown order into Zend
I got the order wrong earlier :I
Not sure that's the right fix, but at least it fixes the symptom
add some .cvsignores
Added preg_quote() function.
*** empty log message ***
New $GLOBALS init
Remove old workspaces
Minor updates (mostly __declspec() stuff)
* Add a new workspace for dynamic PHP extensions. * Add a few functions to PHP's API. * Get the MySQL extension up-to-date and thread safe. * Add a project for building the MySQL extension under Win32.
added is_ref=0 and refcount=1 to SET_VAR_* macros
T_BAD_CHARACTER is actually a string.
function dir doesn't exist anymore
*** empty log message ***
- Make execute() use less stack in thread-safe win32 due to Microsoft's shitty 256kb stack.
avoid touching libraries which have not changed
thread-safety fix
*** empty log message ***
*** empty log message ***
*** empty log message ***
preg_match_all() now returns the number of global matches.
* fix some casts * introduce unary_op_type - cleaner than casting data voids to function ptrs
kill some warnings
zend_hash_merge was changed
That got fucked up when we went back to using uninitialized_zval
another VPATH related change
Updated preg_split().
* Changed the way INI entries work in Apache to allow .conf entries to work right too. * vpath fixes for standard Apache build
Support overwrite mode in zend_hash_merge()
- clean is not called from automake. use CLEANFILES instead - allow VPATH compilation
more VPATH work
kill warning
- fix APXS VPATH build - libzend/TSRM build in their own directories - ext/Makefile was generated twice
avoid crashing with php4 directives in .conf files (they still don't work)
fixes
getopt.h conflicted with system include file
.
Correct fix
*** empty log message ***
no need for those
* Get Apache module to compile again with the regex stuff. * Get Apache to propertly work with POST, and some SAPI fixes
that seems to fix it
Either I'm playing the EG(symbol_table) game wrong or var.c leaks memory when unserializing arrays/objects. Still testing
-Modified PCRE library slightly to do what needs to be done -Updated preg_replace() code to handle stuff properly -Removed ability to specify external PCRE library source to link against (since our bundled version is patched now)
I think that is the preferred way as of now
*** empty log message ***
* Use new Zend macros for standardized definition of classes. * Reverse bogus shutdown order. * Use the new object/class support of Zend to make the dir functions work again.
Some innocent cleanups
We don't need those there.
Really fix the configuration now so that it's possible to compile both against the bundled PCRE library and the one external to the source tree. Crossing my fingers while Zeev compiles this. :)
self-contained extensions please :-)
Generate Visual Studio compatible error messages when compiling under Win32
Moved all #define's for SET_ and RETURN_ to zend_API.h
- fix CGI build (at least)
add rfc1867.c
-Added PCRE library source -Updated configuration process
Added preg_split.  Same syntax as regular split().
A few changes here.
Avoid crashing if an error occurs before we open the first file.
Add container for file-upload.  It's not quite implemented yet.
Just a little sanity check.
Allow unregistering content types as well.
* Add generic POST content-type support.  Only application/x-www-form-urlencoded   supported at this time, but the framework allows for any other types, including   runtime addition of types.
include regex in Win32 build
The last fix was wrong
Another operators fix
boolean comparison didn't work with smaller-than and greater-than, something that fucked up berber's site a bit.  fixed.
Thou shalt use the API, and thou shalt be safe
Some comments.
- add -lregex - change module name to php4
Added ability to pass array parameters to pcre_replace.
Sigh, another leak bites the dust.  FREE_OP missing in case of a SEND_VAR.
Warn about AiCount not zeroing out
add a $(srcdir)
fix compile issues in LDAP/XML exts
fix APXS compile
More fixes.  Should hopefully work well now.
php_ini fixes
Give more information and save log lines in memory leak reports
* Minor fixes * Better handling for multiple repeated memory leaks (libzend updated)
Time to rename the child
Avoid leaking fd's in case of failures
Small fix
more fixes
That wasn't supposed to slip in
This should be centralized...
* Properly handle failed file opens in C++ * Properly handle failed require()'s within libzend
add support for mhash 0.5.0
-Added regex cache -Made module thread-safe
Get rid of debug printf's.
Initial check-in of PCRE (Perl Compatible Regular Expressions) extension.
- run ext sources through conv_proto - add necessary phpext_*_ptr
merge in some PHP3 stuff
incorporate YP/NIS support
- fix compile issues for various packages (dbase, sysv*, zlib) - some cleanup in mhash/mcrypt
- add phpext_pgsql_ptr - semaphore update for glibc-2.1 systems
Add default path for binary mysql distributions
remove debug messages
Optimize allocations into uninitialized_zval assignments
Use OutputDebugString() or fprintf(stderr,) for memory leaks
Apply the fix for feof()
- Updates we did today
- Small fixes
-Open curly braces fix?
add mhash support
kill another 64-bit issue. this affected at least md5 which produced wrong values on 64-bit platforms
char * => unsigned char *
conv_proto *.[ch]
this script automatically converts the ugly void php3_... prototypes to PHP_FUNCTION(...) prototypes. Also kills some unnecessary extern declarations in front of function prototypes.
add fast bin2hex string function
kill some compiler warnings
*** empty log message ***
If a require() dies, we must bail out (since it corrupts an existing op_array
don't install Zend on the system
Add \012 and \xff missing support to constant quoted string
Release fix
* HTTP-auth bugfix * Patch the regex thread safe code to compile in thread safe mode
*** empty log message ***
Enable Apache HTTP Auth
Support HTTP Auth under ISAPI.  Now, these short pieces of code took *A LOT* of research :(
install libzend.a and header files on "make install"
add --enable-thread-safety option
Added prepend to llist
It's been there long enough.
compiles
added _php3_hash_next_index_pointer_insert
- regex cache (needs some work) - str_replace changes from php3
up-to-date with 3.0.8
move oci8 from oracle to it's own ext-directory - configure stuff needs more work - but it configures and compiles
builds and configures again
substr() fix
substr() fix for PHP4 as well
Easier Win32 debug code
* Finally commit that -q patch * Refine SAPI built in header support * Use DllMain() in ISAPI to clean after threads and initialize tsrm/sapi as soon as possible.
Added compact() function.
Handle the Location: header centrally for all SAPI modules.
Support POST in Apache
beatify Apache's info func
Memory leak fix
* Get Apache to work.  POST doesn't work yet. * There are now -I directives for the absolute path of php4, php4/libzend and the builddir for   the Apache module, so we can #include any php/Zend header. * Rename config.h to php_config.h
Minor updates.
Added in_array() function.
Weed out all BoundsChecker-found bugs (including a serious file descriptor leak in the C++ scanner)
A couple of fixes.
Weed out all BoundsChecker-found bugs
Only read POST info if the request method is POST.
Change argument name
A few other minor fixes
Several minor fixes
Almost forgot to commit those
* Finalizing the PHP version of SAPI.  Support POST and cookies among other things. * Fully implement ISAPI support - POST and cookies among other things. * Almost completely rewrote phpinfo().  Allow modules to easily display their   information in phpinfo() without modifying phpinfo() itself (prototype for   the module info function was changed, thus the large amount of updated module   files). * Initial extended SAPI support for Apache, completely untested. * CGI now uses SAPI fully as well.
get rid of the binary character, execute sed only once
this is faster than parsing the file line by line
-Added extract() function -Added function_exists() function
-fixed configure.in.in to use genif.sh instead of genif.pl -fixed genif.sh -updated php3_mysql.h to have phpext_mysql_ptr
Oh yeah, wrong license
* Get output buffering to work again * Warn about adding header information after headers are sent * Several fixes
calloc et al need stdlib.h according to ANSI-C
add compat #define
Do we really want to depend on Perl? Shell scripts are handy and run on virtually every Unix box whereas Perl does not. I don't think Perl should be required when actually configuring PHP4. Open to comments...
Ok, I tested it now.  It works very nicely!
* Optimize _php3_parse_gpc_data() and clean it up, plus fix a couple of Zend related memory leaks in it
vpath fix Apache compatability fix
fix
Get CGI to work with the new headers code. Now Apache is the only interface that doesn't use it.
ISAPI WORKS!
llist improvements
Added initial headers support in SAPI *untested* It definitely broke the thread-safe CGI, it may have broken other stuff as well.
Get Win32 to compile again
An initial default builtin modules file for Win32
ZTS fixes Stig - --enable-thread-safety belongs in libzend, since libzend doesn't #include config.h, whereas PHP does #include zend_config.h
vpath patches (cool job Stig!)
* added --enable-thread-safety switch * now generating internal_functions.c
Get apache uptodate
Move path_info to the SAPI structure
Get rid of request_info.path_translated
Apache compile fix
- Don't support interactive mode when thread safe.
UNIX CGI build fix
- Make ISAPI hook in as an extension too. - Some work on moving stuff to SAPI.
func name changes, remove arbitrary limit
mcrypt 2.1.18 support, better autoconf checking
Several operator fixes.  Should fix the MySQL problem.
- Free refcount when destroying the last class reference.
- Missed one place
- First try at fixing $a->foo[] syntax.
forward port of current oracle.c + fixes to make it actually work;-)!!!
oracle links again (at least on linux!!!)
- Move back to yyless(). I haven't tested it yet because it's taking too long   to compile and I have to disconnect
- No reason to handle newlines here.
Make the C++ scanner support interactive input
Get the MySQL module to use the new INI mechanism feature
Remove redundant code
Additional generalization of the INI mechanism.  Avoid needing specialized message handlers in 99% of the cases.
A step towards generalizing the INI mechanism even more
get rid of some stupid warnings
- export patch
- Small startup fix.
dsp update
Add fgetcsv() here as well
* Get rid of the memory leak messages in case of fatal errors or exit() * .dsp fixes * Minor fixes
Temporary fix for CGI compilation under UNIX
Somehow the rules for the configuration parser/scanners disappeared
* Get the Apache module to compile again * Get rid of php3_rqst, use SG(server_context) instead (there's still Apache-specific code,   but it nuked a global)
fix
Match the CVS name
Various thread safety fixes and DLL updates
* Plenty of thread safety and Win32 work. * Changed PHP4 to compile as a DLL, both ISAPI and the the CGI run with the same DLL. * Switched to using the DLL runtime library under Win32.  PHP will NOT work if   compiled against the static library! * Removed yesterday's php4libts project (with php4dllts, it's obsolete).
-Add .dsp file
-More commits
-More
Make GD config fail if it doesn't find the gd files
PHP3 compat stuff
Ok, apxs build works nicely now
oops, the 0th byte should be set, too
final change (?), add get_algorithms_name
make code more compact
remove some redundant code
that was a silly one
add OFB mode, the final one
add mcrypt_create_iv()
Win32 isn't a good os to commit uppercase files with...
cleanup, add new stream mode, allow IV for CBC mode
add get_(key|block)_size
Ah, these too
add CBC
add mcrypt module
Ok, this beast compiles via --with-apxs Not sure if it actually works yet though.  I have a feeling there are some -fpic flags missing in the libzend build.  Will test later on today.
-f tests for plain files only. We need a way to find out whether we could do any damage to existing files. If we cannot write to them, we probably cannot do harmful things hopefully.
serialize & unserialize working (with mem-leak)
Argh!  That typo took me over an hour to find.  Grr..
test -e fails in sh.  Used test -f instead.
unreliable check whether cc option can be used really
security check and disclaimer for generated files
Oops, would be a good idea to edit the .in file instead of acconfig.h
libbind check
add function checks
Change cmp'risons to be cross-shell compatible.
bugfix port
port from PHP3
include some header files explicitly
Use relative paths
forward-port of php3-CVS version my 1st zend-array stuff (ocifetchinto) is WORKING!!
made var_dump zend-aware.... <? $ar = array("hallo" => "tubu");
Another small fix
Add my API letters to the CVS
dsp update
Small fixes
We'd have to find a different way of allowing timeouts in Win32
Thread safety fixes
set up automake
Remove redundant includes
g++ compile fix
*** empty log message ***
Cleanups, remove old ts code
A lot of cleanups...  Removed old thread-safe code and other redundant code and files
Remove redundant code
Thread-safe header_is_being_sent
Remove tls.[ch]
cleanups
Arithmetics bug fix
* MySQL fix (thanks Stig) * Remove reundant includes from bcmath
use only EXTRA_LIBS
Minor MySQL thread safety issues
License
Testing unified diffs
Support eval() and highlight_string() in the C++ scanner
- Use yyless() instead of unput() where possible. I'll erase the commented   out code in a day or so.
Ok, finally..  These now work nicely on a RH-5.2 box:   --with-mysql --with-ldap --with-imap --with-zlib --with-snmp
Make zlib compile
*** empty log message ***
Ok, call me crazy, because I probably am. Thread safe version now uses a C++ scanner object.  Works fully.
Module work
Make token names uniform, they all begin with T_ now.
vpath fix
This is generated
Bring imap build rules up to date.  We still have a problem here though. In this new build structure we are adding libraries to $LIBS as we add modules instead of doing an AC_SUBST into the Makefile.  One reason for doing the subst in php3 was to get around the libraries that could not be included in $LIBS because doing so would mess up the various configure tests.  For example, you can't do a -limap as part of the various simple configure compile programs because -limap requires a bunch of callback symbols to be present.
- Update the regular VC project file.
db was not linked in
db was not linked in
last bunch of extensions moving to ext/ fhttpd module taken out of functions, functions is ready to go. The only extensions I have tested are gd+freetype and odbc(solid). Please try compiling in your favourite extensions and let me know how it works.
moved imap and ldap
moved fdf, hyperwave, informix and some smaller files
moved db
moved bcmath
moved apache, com and hyperwave into ext/
moved dav, msql and oracle to ext/
moved filepro to ext
moved filepro to ext
mysql should work again now, can someone with mysql installed test it?
gd compile fix
moving mysql to ext/
create .cvsignore only once :-)
create .cvsignore as well
state which aclocal.m4 and configure files are created
state which aclocal.m4 and configure files are created
merge the object files in a temporary directory
zend-parser.o and zend-scanner.o were included twice in libzend.a
* Change the thread safe project to create a C++ scanner. * Add in a slightly modified skeleton file (only a couple of #if's for #include's that we dont have in Windows)
Thread safe project update
added PHP_API_VERSION, simply set it to 19990421 for now
Minor fixes
forgot that one
cleanup, flock() support
crypt constants
cleanup
Thread safety patch.  It works now with just-in-time resource initialization!
Thread safety patch.  It works now with 'just in time' resource initialization!
incorporate gettext support
port some fixes, add compat routines
str_replace  fix
make config.h.stub as well
remove old libtool and automake stuff that was borrowed using 3.0
Thread-safe project
Update thread-safe projects
config.h.in is a generated file and should be ignored by CVS
move automake back to before autoconf
move automake back to before autoconf
autoheader must be called after autoconf, automake after autoheader
autoheader must be called after autoconf, automake after autoheader
think before one commits
doh.  cvs appears to ignore .in files by default
generates basic skeleton for new extension
More thread safety work
Thread safety patch.  We're still not quite there but it compiles again, and more logic has been implemented.
Thread Safe Resource Manager
added ext/*/config.h.stub files removed config.h.in (generated)
Makefile.in and aclocal.m4 are generated added buildconf script
odbc compiles and runs on UNIX again (tested with Solid 2.3)
Return a success value from the startup function, so we can unload immediately if it fails.
convert libzend to automake
convert to automake
Rearrange the .dsp for the new ODBC layout
Add a couple of ZEND_API's
ignore acconfig.h
include the right header files
generate acconfig.h from acconfig.h.in and ext/*/config.h.stub
Support =unset as arguments
moved odbc into ext/
keep old files if they are not modified
moved dbase into ext/
moved dbase into ext/ along with the bundled library dbase programs are no longer included
removed -lnsl and -lsocket checks from zend
run automake and run autoconf in libzend
Ah, so that file is generated too
AiCount needs to be decreased here
* Added buildconf, runs all the scripts necessary to build configure (Stig - if there's any way   to detect whether we need to run 'automake --add-missing', please add it...) * Make vpath work again * Minor UNIX bugfixes
Make Win32 happy with the recent changes.
Forgot to add these - Win32 registry support
Whatnot: * updated alloc_persist to use critical sections * changed extension shutdown to two-phase * updated dependencies * PR support (don't remember if there was any really)
Win32 registry support
- Make gettype() behave like it used to where it returned "object" for   objects.
Apache module compiles again
this file is now generated
make sure the images on the phpinfo() page point to PHP-enabled pages
ignore configure.in
this file is now generated
First commit of re-structuring phase one.  We have started using automake in sub-directories and started to move extension code into ext/<name>.  For now, I have moved the "standard" extension (which is quite a mix of everything right now) and the GD extension into their own subdirs in ext/. The configure script now also runs configure in the libzend directory automatically and makes sure php4 and libzend use the same config.cache file. To avoid running configure in libzend, use the --no-recursion option. "make" in php4 also builds libzend now. The Apache module doesn't compile right now, but a fix for that is coming up.
updated GD from php3 repository, using it as a test extension for the new directory structure
- Make the memory leak message print PHP4.
- one more place which seems to have needed fixing. I don't have time to look   more into it. I hope we don't have anymore places which need fixing.
- Should fix the pass by reference problem. This happened because we moved  start from arg 1 now and not arg 0. There might be more places which need fixing  like in the executor but the bug seems OK now.
Compile fix
-Tiny patches
Better detection
Refcount bugfix
Remove unnecessary stack
off by one
Minor optimization
Make functions that don't take arguments somewhat happier:)
This should take care of "this" for user-defined functions.  It wasn't yet working for built-in functions anyway, this one is coming soon.
NULL's should remain NULLs (at least in strings)
Destroy the resource list after destroying the symbol table, otherwise the auto-destructor for resources are run when the resource list is no longer valid
This patch is a go.  Not fully optimized yet, but working properly. Prepatch tagged as BEFORE_STACK_PATCH.
Minor fixes: 	missing zval_copy_ctor() 	messed up AiCount fix
tolerate uninitialized ini settings in php_ini_{long,double,string}()
This should help in keeping PHP4 up to date
Test patch...
test patch
Oops
php3_ini?  What's that?
Buh-bye php3_ini
Allow runtime setting of the memory limit
Get rid of php3_ini in Zend
A lot of php3_ini -> php_ini work
Move safe_mode to the new php_ini mechanism
Move asp_tags and short_open_tag to the new php_ini mechanism
We need to initialize the utility values after we initialize the INI file, which in turn, is after we initialize Zend.  Set the utility values separately from Zend's initialization
* php_ini fixes * convert the MySQL module to use the new php_ini mechanism
Apache php_ini support
testing 123
test, ignore
Testing 123
- Changed here-docs to <<< followed by whitespace.
*** empty log message ***
Get the apache module to compile
*** empty log message ***
ignore file
* A lot of work on php_ini stuff * A lot of work on getting rid from php3_ini
- I guess print $GLOBALS and print "$GLOBALS" should yield the same result   so I returned the one in encaps_var. - Made INITAL_OP_ARRAY_SIZE smaller (64? can't remeber). I don't think the   erealloc()'s during compile time are such a biggy, we might make it even   smaller. We can have a configure time option as to it's size.
- Support $GLOBALS in cvar's. Now list(..) = each($GLOBALS) will work. - Remove support of $GLOBALS in enacapsed strings. print "$GLOBALS" isn't   supposed to work in any case.
Honor a semicolon on the same line as an ending token of a heredoc
Prevent class redeclarations
Type library support in COM module
* Add arguments to shutdown function * Bring php_ini uptodate
* Add arguments to shutdown functions * Remove traces of php_ini stuff
"Our favourite mistake"
$GLOBALS support
patched in fsock.c from php3
Spurious $ removed in Makefile.in
foreach() syntax has changed
get rid of extra and doc dirs, more cvs ignore stuff
fix configure warnings
Remove an unused variable
Update deps
Win32 patches
That's better.
PHP 4.0
We didn't save the .dsp back then...
Cleanups:  ZendCore->libzend
*** empty log message ***
Zend Library
Standard project directories initialized by cvs2svn.
