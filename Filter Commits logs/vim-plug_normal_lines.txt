Revert "Add Sponsor Labels action"
Add Sponsor Labels action
Update ISSUE_TEMPLATE: Require plug block contents
Update username of NERDTree plugin (#1208)
Add .gitignore (#1204)
Explicitly address the side-effects of plug#end() in the example
Create FUNDING.yml
PlugDiff: Press enter on the name of a plugin to see the full diff
Check the actual value g:did_load_filetypes (#1176)
Include plugins with 'commit' values in PlugSnapshot output
Change the default plugin directory for Neovim
README: Clarify recommended plugins directory for Windows Vim (#1151)
Migrate to GitHub Actions
Set --origin=origin for git clone commands (#1117)
Add --create-dirs option to flatpak installation instrictions (#1126)
Recognize pwsh(.exe) as PowerShell (#1090)
Add GV.vim-style q mapping (#827)
Disable credential.helper for git fetch (#1046)
XDG_DATA_HOME respecting powershell script (#1042)
Set empty credential.helper only when git 2.0 or above is available
Disable credential-helper (#1026)
Code cleanup
Reduce the number of git processes for faster operation (#937)
Test Neovim on Bionic
"non-master branch" -> "non-default branch"
Update test cases
Use branch name of origin if not specified
PlugDiff should be able to find pending updates
User-specified branch name should not be empty
Use branch
Add missing function
Support non-master default branch
Add |:Plug| tag in help docs (#951)
Update README.md (Powershell Install One-Liner) (#1003)
Support Windows shell without extension (#997)
Report when PlugClean fails to remove a directory (#985)
:Plug throws error for invalid option (#961)
Comply with the XDG protocol in the README (#966)
Add Flatpak installation instructions to README.md (#846)
Updated readme (#967)
Load plugin before running funcref hook
Use list type for command in s:spawn() (#959)
Support list type command for s:system to reduce batchfiles on Windows (#956)
Clarify error message (#931)
Validate last buffer line of g:plug_window (#927)
Use iconv() only if +iconv is enabled. (#921)
Encode batchfile in current codepage. (#913)
Do not show git signatures in diff window (#918)
Set/unset shellslash on jobstart (#917)
Detect shellslash on Windows (#916)
Delete batchfile only if it exists (#901)
Use s:path with s:rtp always (#694)
Detect WSL (Neovim only) (#887)
Use chcp only if sed is in PATH (#891)
Add path for Neovim on Windows (#789)
output of chcp was not parsed correctly (#886)
Add collaborators section
Travis: use default image for osx (#871)
Travis: add macOS 10.14 (#870)
travis: add ubuntu bionic,xenial (#867)
Update YCM path: Valloric -> ycm-core (#869)
Don't override shell on Windows (#856)
Change PlugClean description (#853)
Escape batchfile path on Windows (#850)
Avoid downward search when using finddir
Escape arguments to git command during PlugUpgrade
Travis: rename vim72 to vim74 (#723)
Use 'rtp' option to filter diff (#798)
Allow cloning into an empty directory (#782)
Ignore useless use of on-demand loading (#786)
Add support for parallel fetching of Git submodules (#784)
Clear colorcolumn in vim-plug buffer (#779)
has('win32') is enough for detecting Windows (#765)
Add <plug>(plug-preview) map (#769)
Update README and add vim help file
Add link to automatic installation instructions
Display not-loaded status with all plugins that have a dir (#547)
Remove extra quotes in PlugDiff output (#680)
Prepend 'silent' to ':!' to avoid hit-enter prompt (#678)
Port fzf#shellescape (#676)
Create LICENSE
Hard-wrap installation instructions for Windows (#649)
Disallow using standard Vim plugin directory as plug home
Extend plug#load to process a list of names instead of varargs
Update installation instruction for Neovim on Windows (#634)
Deprecate implicit vim-scripts expansion
Travis: VADER_OUTPUT_FILE=/dev/stderr for neovim (#618)
Load plugins only once in plug#load (#616)
nvim: Enable job-control nvim 0.2+ (#617)
Proper escaping of tag patterns
Append -- to git checkout commands
Commit hash in PlugDiff output can be longer than 7 characters
Add plugin to &rtp before running post-update hook with : prefix
Do not use nomodeline when triggering BufRead
Update README
Update README
Add --sync flag to Plug{Install,Update}
Commit preview should work with non-POSIX-compliant &shell
Travis CI: sudo: false (#561)
test/run: shellcheck fixes (#562)
Update documentation
More description on `plug#end`
Update usage examples
Do not check Ruby interface when parallel update is not needed
Neovim: use "dict" when referring to "self" (#566)
git_validate: better error with checkout being ahead/diverged (#546)
test/workflow.vader: minor Assert improvement (#563)
Update installation instruction for Neovim
Do not check spelling in vim-plug buffers
Ignore trailing ! in proxy command name
Set the default completion type of proxy command to "file"
Remove unnecessary operations
No need for `filetype off` unless `g:did_load_filetypes` exists
Set nolist in vim-plug buffers
Do not prepend COUNT"REGISTER when feeding keys in insert mode
Update Vim 8 requirement
Address out-of-order invocation of out_cb and exit_cb
Update README: +job
Set out_mode to raw for progress report
Refactor job callbacks with partial
Use job_start on vim
Set up Travis CI build for Neovim
Make Neovim installer synchronous during startup
Update git URI validation in Ruby and Python installers
Reuse existing plug window
Improve git URI validation
Print exception from post-update hook with : prefix
Print warning message when plug window is closed
Print post-processing error in multi-line paragraph
Silence :delete commands
Add g:plug_pwindow for customizing preview window layout
No period in echo message
Define d operator for selectively removing invalid directories
Do not proceed if $GIT_DIR or $GIT_WORK_TREE is found
Update example: youcompleteme#Enable is no longer needed
Support { 'do': ':VimCommand' } notation
Ignore inconsistencies between g:plugs and g:plugs_order
Put cursor inside the installer window after post-update hook
Always set register in map-based ODL
Do not trigger BufRead if not necessary
Trigger BufRead when a plugin is loaded by `on` condition
Clarify that function call requires `call`
Do not use Ruby older than 1.8.7
Switch &shell during submodule update
Export Plug command as plug# function
Support wildcards in tag option
Revert "Use python2 for YCM post-installation"
Use python2 for YCM post-installation
Update README: PlugInstall! and PlugUpdate!
Detect plugins that are diverged their origins
Minor refactoring
Add comments to test file
Do not patch plug.vim during test
Make Plug{Install,Update}! trigger post-fetch checkout, submodule update
Fall back to Python installer if Ruby is broken
Clear message on retry
Use <nomodeline> on User autocmd if possible
Reset colors for git show
Update submodules whenever the repo is updated
Refactor duplicate logic in installers
Update README.md
Remove redundant checks of git --version in Neovim installer
Clarify that the installation script for Windows requires PowerShell
Do not proceed if getcwd() returns an empty string
Avoid unnecessary runtime command (#434)
Use runtime only when the file is not found in the plugin directory (#434)
Strip trailing whitespaces in PlugDiff output
PlugDiff to include graphical representation of commit history
Avoid multiple `syntax enable` during Vim startup
Rename script-local function to generate better error message
Better error message when git executable is not found
Add 'as' option (#371)
Only highlight vim-plug buffers if syntax enabled
Update README - description on plug#end()
Add hint for Neovim configuration path
Update YCM instruction on README
Amend comment section
PlugDiff to show pending updates as well
PlugSnapshot output in Vim script format (#360)
Enable multi-thread on windows
Ensure CWD isn't a factor for powershell command.
Bind q to :bd
Migrate travis to use new docker system.
Update installation instruction (#329)
Add install directions for using neovim
Add windows install instructions
Add support for commit hashes
Enhance post-update hook output
Case-sensitive validation of on arguments (#314)
Prepend [vim-plug] to error messages
Update usage examples
Add a non-master branch example
Post-update hook should not run in case of an error
Update YouCompleteMe install script
Join a thread instead of sleeping.
Refactor Python code & .travis.yml
Close #262 UnicodeDecodeError
Make it clear that &runtimepath is updated on plug#end()
Need to set modifiable for reloading commit content (#255)
Make commit preview unmodifiable + map q for quit
Remove GLog.
Test refactoring
Remove unused test code
Add failing test case for #236
Bugfix of on-demand loading
Explicitly reset s:-variables during test
Inline dependency example.
Specify a format when `git show` displays a commit
Trigger User autocmd when plugin is loaded on demand (#231)
Check if autocmd defined before doautocmd
Temporarily change shellredir (#159)
silent! redraw is simpler
Force evaluation of &statusline before running installer
Neovim Python Support
Update README
Update README
Support Python 2.6+ & 3.0+
Add test case where shallow-clone is disabled by tag
Add test case for g:plug_shallow
Shallow clone by default (#122 #217)
Revert "Shallow clone by default (#122 #217)"
Shallow clone by default (#122 #217)
Ignore case for "<Plug>"
Testing changes.
Improve check of Neovim Job API
Print warning message on old Neovim (#206)
PlugUpgrade using git
New dict format.
New neovim jobs API.
Update usage and license in plug.vim
Allow using Ruby/Python for PlugUpgrade on Windows (#192)
Slim
Change the default number of threads on Windows to 1 (#191)
Disable on cygwin for now.
Python 2.6 compatibility
Update README (markdown table)
Remove uniq() function from test code
Linking to wiki.
Minor refactoring
Interpret the second argument to Plug command as tag option
Python parallel plugin management.
Extend Travis CI build to use vim-nox on Ubuntu 12.04
Revert "Use :pgroup option when starting subprocesses"
Add `o` key binding for PlugDiff
Use :pgroup option when starting subprocesses
Restore $GIT_TERMINAL_PROMPT in s:update_finish
Remove `git::@` from URI if git 2.3.0 or above is found
Add test case for unescaped spaces in &rtp
Do not escape spaces in &rtp
Use v:version == 702 && has('patch374')
Disable Ruby installer when without patch-7.2.374 (#162)
Do not use --progress option on git 1.7.0 or below (#162)
Do not use --progress option when not necessary
Ignore error when the buffer is not properly initialized (#162)
Update PlugClean for Gist plugins
Use /bin/sh instead of /bin/bash (PlugSnapshot)
Update README - `curl --create-dirs`
Update README - Pros.
Clarify messages after 'PlugUpgrade'
Simplify neovim check
Add more test cases for #139
Change test code to use local repositories
Update README
Downcase opt-in confirmation options
Update README
Check for full match of command name
Define s:triggers by default to avoid error after upgrade (#132)
Display "Press 'D'" message only when existing plugins are updated
Update: job_data[2] is a list.
Install frozen plugin if it's not found (#113)
Workaround for PlugUpgrade error on Neovim (#111)
Update README
Sort auto-completion candidates
Improve ]]/[[ movement
Use s:extract_name instead of matchstr
Minor refactoring
Update test case (related: #8c915a5)
Code cleanup
Detect abnormal process exit using 'Error' line
Reuse plug window even if it's in another tab
Use s:lines instead of split
Disable NVim parallel installer on Windows
Avoid unnecessary tab/window switch
Stabilize Neovim installer
Parallel installer for Neovim
PlugSnapshot to use unexpanded plug home
Minor refactoring
Implement PlugSnapshot (#97)
Remove unnecessary submodule command after recursive clone
Allow unmanaged plugins inside g:plug_home (#95)
Enable syntax only during startup
Add link to Travis CI page
Reload plugins after everything's ready
Stricter double-comma replacement
Improve &rtp management (#85)
Suppress error messages from `which` command
Expand argument to plug#begin (#82)
Code cleanup
Use blackhole register when deleting lines
Add `U` keybinding for updating plugins
Remove plugin directory on failure during installation (#75)
Revert "Remove plugin directory on failure during installation (#75)"
Remove plugin directory on failure during installation (#75)
When to use `for` option
Throw v:shell_error when system() output is empty
Refactor PlugUpgrade (#72)
`syntax enable` instead of `syntax on`
Resolve symlinks in path to plug.vim
Do not print 'D'-message when there was no update (#66)
Use blackhole register when deleting commit list
Remove unnecessary dot-concatenations
cd to repo root when in preview window on preview commit
Use `--no-rebase` option on `git pull` (#64)
Update README
Implement g:plug_url_format (#62)
Add g:plug_window to README (#57)
Add test case for g:plug_window (#57)
User can now specify how plug window opens
Add example for on-demand loading for multiple file types (#59)
Change raw.github.com url (#58)
Use `git::` prefix to avoid password prompt on git 1.7 (#56)
Allow Plug command even when git executable is not found (#52)
Improve PlugDiff: 'X' key to revert the update
Improve PlugStatus
Add plug#load() (#48)
Add plug#helptags()
Do not require reloading of .vimrc after PlugUpgrade
Update README.md
Revert "Make sure update/install after PlugUpgrade work"
Make sure update/install after PlugUpgrade work
Add -bar option to commands
s:upgrade_specs should be called after reloading the source
Do not try to create g:plug_home more than once
Test against multiple versions of Ruby
Note on escaping double quotes in inline expression
Forced run of post-update hooks using bang commands
Remove duplicate expression and escape helptags directory
Update README
Update README
Update README.md
Update README
Remove FAQ/Troubleshooting section and add link to wiki page
Force use of bash for Vader tests.
Update README
Minor tweaks
Refactoring
Ensure files under `after` are loaded when first installed
Update examples
Remove support for experiemental dependency resolution (#43)
Add `dir` option: managed plugins outside `g:plug_home`
Inline substitute inside s:dirpath()
Unmap / and ? from vim-oblique after test
Replace s:extract_name with a single fnamemodify call
Use single-quotes whenever possible for consistency
Define a separate version of s:is_local_plug for Windows
Use fnamemodify instead of split hackery
Performance tuning: reduce the number of s:parse_options calls
Use dot operator instead of get()
Code cleanup: reuse s:trim() when possible
Change error reporting method
Performance tuning: reduce the number of globpath calls
Performace tuning: inlining some function calls
Avoid echoerr inside catch block
Refactor s:add function
Update README
Escape angle brackets in README
Change post-hook function to take a dictionary for more control
Update documentation
Don't need <Plug> map (#38)
Print progress of post-update hooks using `:!` (#38)
Replace return value of type() with named values
Don't check for the need for post-update hook when interrupted
Minor refactoring
Post-update hook (`do` option)
`R` to retry interrupted tasks as well
Update README
'R' to retry failed update/installation tasks
Retry in 3 seconds
Avoid InsertEnter/InsertLeave events in GUI MacVim workaround
Use `gui_macvim` instead of `mac` (#36)
Temporarily disable &imd on GUI MacVim (#36)
Workaround for screen freeze in MacVim GUI (#36)
Retry in case of timeout (#35)
Do not assume that `frozen` key exists
Exclude unmanaged plugins from PlugDiff output
Ignore errors during :helptags
Note on single quotes (#33)
License
Pin first and last path in &rtp (#34)
Add support for local plugins. Add `frozen` option (#32)
Ignore occasional error from Ruby 1.8.7
Change gif
Real-time progress report
Revert "Real-time progress report"
Real-time progress report
Minor refactoring
Minor refactoring in ODL: no need to pass full dict
Load ftplugins while avoiding extraneous FileType events (#24, #25)
Remove images from repo
Travis-CI integration
Update test runner script
Improve PlugStatus message
Use case-sensitive match
Ensure ftplugin files are loaded (#24)
Revert "Ensure ftplugin files are loaded (#24)"
Revert "Remove FileType autocmd after loaded"
Ensure ftplugin files are loaded (#24)
Revert "Clear #filetypeplugin for filetype-based ODL (#24)"
Remove FileType autocmd after loaded
Clear #filetypeplugin for filetype-based ODL (#24)
Add pending test case on dependency resolution
Allow updating subset of plugins
Allow -range in on-demand loading commands
Allow trailing comment after Plug declaration (#23)
On-demand loading on filetypes (#21)
git submodule update --init --recursive (#18)
Use black hole register when emptying buffer
Echo "Press 'D'" message only on PlugUpdate
PlugDiff: Display commit info in preview window
Explicitly return 0
Use s:esc function
Change PlugDiff message (suggested by @beloglazov in #17)
Change PlugDiff message (thanks to @beloglazov)
Less LOC
Add PlugDiff command (#17)
Change PlugStatus output to match those of other commands
Place cursor on the 2nd line during PlugClean
added plug load order (for dependencies)
Support paths with spaces (#15 [, #14])
Replace shellescape function to avoid error when &shellslash is set
Update README (Related: #12)
Remove unnecessary code
On-demand loading for imaps of <Plug> mappings
Use <silent> map
Add test runner
Avoid remapping of temporary <Plug> map
On-demand loading with <Plug> mappings (experimental)
Load-on-demand with `on` option
Update README
Print error message when unable to determine plug home
Display error message if plug#end is called before plug#begin
Update demo screencast
Remove dependency resolution section (link to wiki)
Update formatting of error messages
Ignore `git:@` when validating cloned repository
Change list bullet charactor for errors
Improve progress bar format
Update test/README
Add test/README.md
Strip trailing slash from g:plug_home
Encourage use of path argument to plug#begin() to avoid confusion
Add basic test scenario
Revert "Make :Plug command unavailable after end()"
Make :Plug command unavailable after end()
Update README
Add FAQ section (#10)
plug.png
PlugUpgrade without curl
Update README: be explicit about reloading .vimrc (#8)
Remove trailing backslash from rtp on Windows
Update README
Add link to a blog post
while -> until
Recursively kill dangling child processes using pgrep
Try to cleanup dangling processes on int or timeout (#5, #6)
Implement task timeout with default timeout 60 sec (#5)
Add link to plug.vim
Add gif for Plugfile example
Make plug#begin() return boolean value
Find Plugfile under rtp
Add support for dictionary option argument: branch, rtp (#2)
Update README
Update README
Proper handling of invalid branch in parallel installer
Spawn multiple threads unless g:plug_threads is set to 1
Prevent serialization due to early termination of threads
Prototype implementation of dependency resolution (#2)
Add a note on feature request (#1)
New screenshot
Updating plugins -> Installing plugins
Add PlugStatus command
Update README
Update README
Update README
Update README
Update syntax highlighting
Ruby-support link
Print log in reverse order
Update README.md
init -> begin
Change PlugClean message
PlugClean!
Git remote validation
Relocate screenshots
plug#begin() - plug#end()
4 gifs
Add screenshot
Change directory structure: user/repo/branch -> user/repo
Add after directory to rtp as well
Old rubby
Windows support
Improve parallel update process
Updates
Update doc
Initial commit
