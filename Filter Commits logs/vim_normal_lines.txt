patch 9.0.0887: cannot easily try out what codes various keys produce
patch 9.0.0886: horizontal mouse scroll only works in the GUI
patch 9.0.0885: informational message has an error message number
patch 9.0.0884: mouse shape remains in op-pending mode after failed change
patch 9.0.0883: a silent mapping may cause dots on the command line
patch 9.0.0882: using freed memory after SpellFileMissing autocmd uses bwipe
patch 9.0.0881: cannot get the currently showing mouse shape
patch 9.0.0880: preprocessor indenting is off
patch 9.0.0879: unnecessary nesting in makefile
patch 9.0.0878: Coverity warns for dead code
patch 9.0.0877: using freed memory with :comclear while listing commands
patch 9.0.0876: code is indented more than needed
patch 9.0.0875: using freed memory when executing delfunc at more prompt
patch 9.0.0874: using freed memory when executing unmenu at more prompt
patch 9.0.0873: using freed memory when executing mapclear at more prompt
patch 9.0.0872: code is indented more than needed
patch 9.0.0871: using freed memory when clearing augroup at more prompt
patch 9.0.0870: get E967 when using text property in quickfix window
patch 9.0.0869: bogus error when string used after :elseif
patch 9.0.0868: MS-Windows: after Vim exits console resizing problem
patch 9.0.0867: wildmenu redrawing code is spread out
patch 9.0.0866: no test for what patch 8.2.2207 fixes
patch 9.0.0865: duplicate arguments are not always detected
patch 9.0.0864: crash when using "!!" without a previous shell command
patch 9.0.0863: col() and charcol() only work for the current window
patch 9.0.0862: default value of 'endoffile' is wrong
patch 9.0.0861: solution for "!!sort" in closed fold is not optimal
patch 9.0.0860: MS-Windows: windres fails with clang 15.0.4
patch 9.0.0859: compiler warning for unused variable
patch 9.0.0858: "!!sort" in a closed fold sorts too many lines
patch 9.0.0857: selecting MSVC 2017 does not set $PLATFORM
patch 9.0.0856: MS-Windows: executable not found when running test
patch 9.0.0855: comment not located above the code it refers to
patch 9.0.0854: no proper test for what 9.0.0846 fixes
patch 9.0.0853: terminal mouse test is still flaky on MacOS M1
patch 9.0.0852: crypt test is skipped if xxd is not found
patch 9.0.0851: terminal mouse test is still flaky
patch 9.0.0850: MS-Windows Terminal has unstable color control
patch 9.0.0849: terminal mouse test is a bit flaky
Update runtime files
patch 9.0.0848: help item for --log argument is not aligned nicely
patch 9.0.0847: CI: not totally clear what MS-Windows version is used
patch 9.0.0846: using assert_fails() may cause hit-enter prompt
patch 9.0.0845: shell command with just space gives strange error
patch 9.0.0844: handling 'statusline' errors is spread out
patch 9.0.0843: VHS tape files are not recognized
patch 9.0.0842: Unicode range for Apple SF symbols is outdated
patch 9.0.0841: deletebufline() does not always return 1 on failure
patch 9.0.0840: cannot change a slice of a const list
patch 9.0.0839: test may fail depending on sequence of events
patch 9.0.0838: compiler warnings for unused variables
patch 9.0.0837: append() reports failure when not appending anything
patch 9.0.0836: wrong error when using extend() with funcref
patch 9.0.0835: the window title is not redrawn when 'endoffile' changes
patch 9.0.0834: warning for missing return type
patch 9.0.0833: Mac: no +sound feature in huge build
patch 9.0.0832: deprecation warning causes build failure
patch 9.0.0831: compiler warning for redefining HAVE_DUP
patch 9.0.0830: compiling with Perl on Mac 12 fails
patch 9.0.0829: wrong counts in macro comment
patch 9.0.0828: various typos
patch 9.0.0827: <Home> key in tmux doesn't work when 'term' set to "xterm"
patch 9.0.0826: if 'endofline' is set CTRL-Z may be written in a wrong place
patch 9.0.0825: cannot drag an entry in the tabpage line
patch 9.0.0824: crash when using win_move_separator() in other tab page
patch 9.0.0823: mouse drag test fails
patch 9.0.0822: crash when dragging the statusline with a mapping
patch 9.0.0820: memory leak with empty shell command
patch 9.0.0820: memory leak with empty shell command
patch 9.0.0819
Update runtime files
Add missing entry for the 'endoffile' option.
Revert unintended Makefile change
patch 9.0.0818
patch 9.0.0817
patch 9.0.0815
patch 9.0.0814: aws config files are not recognized
patch 9.0.0813: Kitty terminal is not recognized
patch 9.0.0812: GUI mouse scrollwheel mappings don't work
patch 9.0.0811: error if :echowin is preceded by a command modifier
patch 9.0.0810: readblob() returns empty when trying to read too much
patch 9.0.0809: test for job writing to buffer fails
patch 9.0.0808: jsonnet filetype detection has a typo
patch 9.0.0807: with 'smoothscroll' typing "0" may not go to the first column
patch 9.0.0806: 'langmap' works differently when there are modifiers
patch 9.0.0805: filetype autocmd may cause freed memory access
patch 9.0.0804: crash when trying to divide a number by -1
patch 9.0.0803: readblob() cannot read from character device
patch 9.0.0802: MS-Windows: cannot map console mouse scroll events
patch 9.0.0801: the modifyOtherKeys flag is set when it should not
patch 9.0.0800: compiler complains about repeated typedef
patch 9.0.0799: in compiled function ->() on next line not recognized
patch 9.0.0798: clang format configuration files are not recognized
patch 9.0.0797: order of assert function arguments is reverted
patch 9.0.0796: mapping test fails in some situations
patch 9.0.0795: readblob() always reads the whole file
patch 9.0.0794: there is no way to find out if modifyOtherKeys has been seen
patch 9.0.0793: MS-Windows: mouse scroll events only work with the dll
patch 9.0.0792: MS-Windows: compiler complains about unused function
patch 9.0.0791: at the hit-Enter prompt the End and Home keys may not work
patch 9.0.0790: test for dummy buffer does not always produce the E86 error
patch 9.0.0789: dummy buffer ends up in a window
patch 9.0.0788: ModeChanged autocmd not executed when Visual ends with CTRL-C
patch 9.0.0787: mouse scrolling in terminal misbehaves without dll
patch 9.0.0786: user command does not get number from :tab modifier
patch 9.0.0785: memory leak with empty shell command
patch 9.0.0784: text prop "above" not right with 'number' and "n" in 'cpo'
patch 9.0.0783: ":!" doesn't do anything but does update the previous command
patch 9.0.0782: OpenVPN files are not recognized
patch 9.0.0781: workaround to rename "small" to "smallfont" is clumsy
patch 9.0.0780: 'scroll' value computed in unexpected location
patch 9.0.0779: lsl and lm3 file extensions are not recognized
patch 9.0.0778: indexing of unknown const type fails during compilation
patch 9.0.0777: code is indented too much
patch 9.0.0776: MSVC can't have field name "small"
patch 9.0.0775: MS-Windows: mouse scrolling not supported in the console
patch 9.0.0774: the libvterm code is outdated
patch 9.0.0773: huge build on macos uses dynamic Perl
patch 9.0.0772: the libvterm code is outdated
Update runtime files
patch 9.0.0771: cannot always tell the difference beween tex and rexx files
patch 9.0.0770: quickfix commands may keep memory allocated
patch 9.0.0769: too many delete() calls in tests
patch 9.0.0768: too many delete() calls in tests
patch 9.0.0767: too many delete() calls in tests
patch 9.0.0766: too many delete() calls in tests
patch 9.0.0765: with a Visual block a put command column may go negative
patch 9.0.0764: indent and option tests fail
patch 9.0.0763: MS-Windows: warning for using int for size_t
patch 9.0.0762: build failure
patch 9.0.0761: cannot use 'indentexpr' for Lisp indenting
patch 9.0.0760: display test for 'listchars' "precedes" fails
patch 9.0.0759: huge build on macos does not use Perl
patch 9.0.0758: "precedes" from 'listchars' overwritten by <<<
patch 9.0.0757: line number not visisble with 'smoothscroll', 'nu' and 'rnu'
patch 9.0.0756: no autocmd event for changing text in a terminal window
patch 9.0.0755: huge build on macos always fails on CI
patch 9.0.0754: 'indentexpr' overrules lisp indenting in one situation
patch 9.0.0753: some Ex commands are not in the help index
patch 9.0.0752: Rprofile files are not recognized
patch 9.0.0751: 'scrolloff' does not work well with 'smoothscroll'
patch 9.0.0750: crash when popup closed in callback
patch 9.0.0749: alloc/free of buffer for each quickfix entry is inefficient
patch 9.0.0748: Kitty may send key without modifiers with CSI u code
patch 9.0.0747: too many #ifdefs
patch 9.0.0746: breakindent test cases are commented out
patch 9.0.0745: wrong cursor position when using "gj" and "gk" in a long line
patch 9.0.0744: in script in autoload dir exported variable is not found
patch 9.0.0743: starting cscope on Unix does not quote the arguments right
patch 9.0.0742: reading past end of the line when compiling a function
patch 9.0.0741: cannot specify an ID for each item with prop_add_list()
patch 9.0.0740: prop_add_list() gives multiple errors for invalid argument
patch 9.0.0739: mouse column not correctly used for popup_setpos
patch 9.0.0738: cannot suppress completion "scanning" messages
patch 9.0.0737: Lisp word only recognized when a space follows
patch 9.0.0736: quickfix listing does not handle very long messages
patch 9.0.0735: breakindent and scrolloff tests fail
patch 9.0.0734: cursor position invalid when scrolling with 'smoothscroll'
patch 9.0.0733: use of strftime() is not safe
patch 9.0.0732: no check for white space before and after "=<<"
patch 9.0.0731: clang-tidy configuration files are not recognized
patch 9.0.0730: startup test fails with right-left feature
patch 9.0.0729: the rightleft and arabic features are disabled
patch 9.0.0728: extend() test fails
patch 9.0.0727: help in the repository differs from patched version too much
patch 9.0.0726: looping over list of lists works in script, not in function
patch 9.0.0725: virtual text "after" wraps to next line when 'wrap' is off
patch 9.0.0724: closure in compiled function gets same variable in block
patch 9.0.0723: extra empty line below virtual text when 'list' is set
patch 9.0.0722: virtual text "after" does not show with 'list' set
patch 9.0.0721: virtual text "above" with padding not displayed correctly
patch 9.0.0720: MS-Windows GUI may have pixel dust from antialiasing
patch 9.0.0719: too many delete() calls in tests
patch 9.0.0718: extra empty line between two virtual text "below"
patch 9.0.0717: compiler warning for unused variable in tiny build
patch 9.0.0716: with 'nowrap' virtual text "after" does not scroll left
patch 9.0.0715: wrong argument for append() gives two error messages
patch 9.0.0714: with 'nowrap' two virtual text below not displayed correctly
patch 9.0.0713: <amatch> of MenuPopup event is expanded like a file name
patch 9.0.0712: wrong column when calling setcursorcharpos() with zero lnum
patch 9.0.0711: SubStation Alpha files are not recognized
patch 9.0.0710: quitting/unloading/hiding a terminal does not work properly
patch 9.0.0709: virtual text "after" not correct with 'nowrap'
patch 9.0.0708: :confirm does not work properly for a terminal buffer
patch 9.0.0707: with 'smoothscroll' cursor position not adjusted in long line
patch 9.0.0706: :help in a narrow window always opens at the top
patch 9.0.0705: virtual text truncation does not take padding into account
patch 9.0.0704: CI runs "tiny" and "small" builds, which are the same
patch 9.0.0703: failing check for argument type for const any
patch 9.0.0702: incomplete testing cursor position with 'linebreak' set
patch 9.0.0701: with 'smoothscroll' cursor position not adjusted in long line
patch 9.0.0700: there is no real need for a "big" build
patch 9.0.0699: tiny build fails
patch 9.0.0698: VisVim is outdated, does not work with current Visual Studio
patch 9.0.0697: cursor in wrong position with Visual substitute
patch 9.0.0696: it is unclear if the +rightleft and +arabic features are used
patch 9.0.0695: failing check for dictionary type for const any
patch 9.0.0694: no native sound support on Mac OS
patch 9.0.0693: browse() first argument cannot be a bool
patch 9.0.0692: PoE filter files are not recognized
patch 9.0.0691: lalloc(0) error in listchars test
patch 9.0.0690: buffer size for expanding tab not correctly computed
patch 9.0.0689: compiler warning for unused function
patch 9.0.0688: debugger does not display the whole command
patch 9.0.0687: "export def" does not work in a nested block
patch 9.0.0686: the right ALT key does not work on some MS-Windows keyboards
patch 9.0.0685: FORTIFY_SOURCE causes a crash in Vim9 script
patch 9.0.0684: skipped :exe command fails compilation on MS-Windows
patch 9.0.0683: cannot specify a time for :echowindow
patch 9.0.0682: crash when popup with deleted timer is closed
patch 9.0.0681: "<<<" shows for 'smoothscroll' even when 'showbreak is set
patch 9.0.0680: tests failing with 'breakindent', 'number' and "n" in 'cpo'
patch 9.0.0679: tests failing with 'smoothscroll', 'number' and "n" in 'cpo'
patch 9.0.0678: using exclamation marks on :function
patch 9.0.0677: breakindent test accepts wrong result
patch 9.0.0676: CI on Mac M1 with gcc actually uses clang
patch 9.0.0675: search test screendump is outdated
patch 9.0.0674: build error with tiny version
patch 9.0.0673: first line wong with 'smoothscroll' and 'scrolloff' zero
patch 9.0.0672: line partly shows with 'smoothscroll' and 'scrolloff' zero
patch 9.0.0671: negative topline using CTRL-Y with 'smoothscroll' and 'diff'
patch 9.0.0670: no space for command line when there is a tabline
patch 9.0.0669: too many delete() calls in tests
patch 9.0.0668: CI on Mac M1 only uses clang
patch 9.0.0667: ml_get error when 'splitkeep' is "screen"
patch 9.0.0666: spacing-combining characters handled as composing
patch 9.0.0665: setting 'cmdheight' has no effect if last window was resized
patch 9.0.0664: bad redrawing with spell checking, using "C" and "$" in 'cpo'
patch 9.0.0663: tests check for +cmdwin feature which is always present
patch 9.0.0662: concealed characters do not work correctly
patch 9.0.0661: multi-byte "lastline" in 'fillchars' does not work properly
patch 9.0.0660: mapping with CTRL keys does not work in the GUI
patch 9.0.0659: wrong type of comment in SetSyn() function
patch 9.0.0658: tiny build fails on Mac OS
patch 9.0.0657: too many #ifdefs
patch 9.0.0656: cannot specify another character to use instead of '@'
patch 9.0.0655: passing modifier codes to a shell running in the GUI
patch 9.0.0654: breakindent test fails
patch 9.0.0653: BS and DEL do not work properly in an interacive shell
patch 9.0.0652: 'smoothscroll' not tested with 'number' and "n" in 'cpo'
Update runtime files
patch 9.0.0651: build fails without the +conceal feature
patch 9.0.0650: some tests are failing
patch 9.0.0649: no indication the first line is broken for 'smoothscroll'
patch 9.0.0648: when using powershell input redirection does not work
patch 9.0.0647: the 'splitscroll' option is not a good name
patch 9.0.0646: with 'smoothscroll' CTRL-E is wrong when 'foldmethod' set
patch 9.0.0645: CTRL-Y does not stop at line 1
patch 9.0.0644: 'smoothscroll' is not copied to a new window on :split
patch 9.0.0643: smoothscroll test fails
patch 9.0.0642: breakindent test fails
patch 9.0.0641: missing part of the new option code
patch 9.0.0640: cannot scroll by screen line if a line wraps
patch 9.0.0639: checking for popup in screen_char() is too late
patch 9.0.0638: popup menu highlight wrong on top of preview popup
patch 9.0.0637: syntax of commands in Vim9 script depends on +eval feature
patch 9.0.0636: underline color may not work in some terminals
patch 9.0.0635: build error and compiler warnings
patch 9.0.0634: evaluating "expr" options has more overhead than needed
patch 9.0.0633: FEAT_TITLE was removed but is still used
patch 9.0.0632: calling a function from an "expr" option has overhead
patch 9.0.0631: too many delete() calls in tests
patch 9.0.0630: in Vim9 script a numbered function cannot be called
patch 9.0.0629: get an error for using const only when executing
patch 9.0.0628: Coverity warns for not checking return value
patch 9.0.0627: "const" and "final" both make the type a constant
patch 9.0.0626: too many delete() calls in tests
patch 9.0.0625: too many delete() calls in tests
patch 9.0.0624: leaking argument type array
patch 9.0.0623: error for modifying a const is not detected at compile time
patch 9.0.0622: matchaddpos() can get slow when adding many matches
patch 9.0.0621: filetype test leaves file behind
patch 9.0.0620: matchaddpos() can only add up to 8 matches
patch 9.0.0619: too many delete() calls in tests
patch 9.0.0618: calling function for reduce() has too much overhead
patch 9.0.0617: calling function for reduce() has too much overhead
patch 9.0.0616: spell test fails because error message changed
patch 9.0.0615: using reduce() on a list from range() is a bit slow
patch 9.0.0614: SpellFileMissing autocmd may delete buffer
patch 9.0.0613: running source tests leaves file behind
patch 9.0.0612: blockedit test passes with wrong result
patch 9.0.0611: tests delete files with a separate delete() call
patch 9.0.0610: global interrupt test fails when run under valgrind
patch 9.0.0609: blockedit test fails because of wrong indent
Update runtime files
patch 9.0.0608: with spelling, deleting a full stop does not update next line
patch 9.0.0607: verbose echo message test fails on Mac OS
patch 9.0.0606: system() opens a terminal window when "!" is in 'guioptions'
patch 9.0.0605: dump file missing
patch 9.0.0604: luacheckrc file is not recognized
patch 9.0.0603: with 'nosplitscroll' folds are not handled correctly
patch 9.0.0602: new TypeScript extensions are not recognized
patch 9.0.0601: too much indent
patch 9.0.0600: GYP files are not recognized
patch 9.0.0599: latexmkrc files are not recognized
patch 9.0.0598: using negative array index with negative width window
patch 9.0.0597: cannot close a tab page with the middle mouse button
patch 9.0.0596: CI on Mac M1 has the channel feature disabled
patch 9.0.0595: extra newline in messages after a verbose shell message
patch 9.0.0594: Makefile error message causes a shell error
patch 9.0.0593: CI actions have too many permissions
patch 9.0.0592: display not cleared when scrolling back in messages
patch 9.0.0591: message window popup shows on only one tab page
patch 9.0.0590: after exiting Insert mode spelling not checked in next line
patch 9.0.0589: on AmigaOS4 the pid is available but the task address is used
patch 9.0.0588: MorphOS build is broken
patch 9.0.0587: Unicode tables are outdated
patch 9.0.0586: missing change in test
patch 9.0.0585: when long message test fails the error message is not visible
patch 9.0.0584: cscope test with wrong executable name fails
patch 9.0.0583: only recognizing .m3u8 files is inconsistent
patch 9.0.0582: channel cwd test fails on Cirrus CI
patch 9.0.0581: adding a character for incsearch fails at end of line
patch 9.0.0580: no CI running for MacOS on M1
patch 9.0.0579: using freed memory when 'tagfunc' wipes out buffer
patch 9.0.0578: one timer test fails on Mac M1
patch 9.0.0577: buffer underflow with unexpected :finally
patch 9.0.0576: unused loop variables
patch 9.0.0575: the getchar() function behaves strangely with bracketed paste
patch 9.0.0574: timer garbage collect test hangs on Mac M1
patch 9.0.0573: outdated dependencies go unnoticed
patch 9.0.0572: insert complete tests leave a mapping behind
patch 9.0.0571: MS-Windows: CTRL-C can make Vim exit
patch 9.0.0570: CI for Windows is still using codecov action 3.1.0
patch 9.0.0569: cannot easily get out when using "vim file | grep word"
patch 9.0.0568: autocmd code is indented more than needed
patch 9.0.0567: 'completeopt' "longest" is not used for complete()
patch 9.0.0566: Nim files are not recognized
patch 9.0.0565: cscope test causes problems with test timeout timer
patch 9.0.0564: a few tests keep failing on MacOS M1
patch 9.0.0563: timer_info() test fails
patch 9.0.0562: HSL playlist files are not recognized
patch 9.0.0561: when a test gets stuck it just hangs forever
patch 9.0.0560: elapsed time since testing started is not visible
patch 9.0.0559: timer test may get stuck at hit-enter prompt
patch 9.0.0558: Coverity warns for possibly using NULL pointer
patch 9.0.0557: valgrind reports possibly leaked memory
patch 9.0.0556: leaking memory with nested functions
patch 9.0.0555: scrolling with 'nosplitscroll' in callback changing curwin
patch 9.0.0554: using freed memory when command follows lambda
patch 9.0.0553: no error for "|" after "{" in lamda
patch 9.0.0552: crash when using NUL in buffer that uses :source
patch 9.0.0551: mode message is delayed when :echowin was used
patch 9.0.0550: crash when closing a tabpage and buffer is NULL
patch 9.0.0549: duplicated code in calling a :def function
patch 9.0.0548: reduce() with a compiled lambda could be faster
patch 9.0.0547: looping over empty out_loop[] entries
patch 9.0.0546: supporting Ruby 1.8 makes code complicated
patch 9.0.0545: when a test is slow and CI times out there is no time info
patch 9.0.0544: minor issues with setting a string option
patch 9.0.0543: insufficient testing for assert and test functions
patch 9.0.0542: MSVC build still has support for 2012 edition
patch 9.0.0541: terminal pwd test fails with a very long path name
patch 9.0.0540: assigning stack variable to argument confuses Coverity
patch 9.0.0539: long message test can be flaky
patch 9.0.0538: manually deleting test temp files
patch 9.0.0537: the do_set() function is much too long
patch 9.0.0536: CI: codecov action update available
patch 9.0.0535: closure gets wrong value in for loop with two loop variables
patch 9.0.0534: line number is displayed at virtual text "above"
patch 9.0.0533: the win_line() function is much too long
patch 9.0.0532: edit test is flaky when run under valgrind
patch 9.0.0531: the win_line() function is much too long
patch 9.0.0530: using freed memory when autocmd changes mark
patch 9.0.0529: appveyor setup contains outdated lines
patch 9.0.0528: MS-Windows: no batch files for more recent MSVC versions
patch 9.0.0527: long sign text may overflow buffer
patch 9.0.0526: MS-Windows: still some support for XP and old compilers
patch 9.0.0525: manually deleting temp test files
patch 9.0.0524: build instructions for MS-Windows are outdated
patch 9.0.0523: more compiler warnings for arguments in small version
patch 9.0.0522: build fails on Appveyor
patch 9.0.0521: compiler warns for unused argument in small version
patch 9.0.0520: declaring a loop variable at the start of a block is clumsy
patch 9.0.0519: the win_line() function is much too long
patch 9.0.0518: virtual text highlight starts too early with 'nowrap'
patch 9.0.0517: when at the command line :redrawstatus does not work well
patch 9.0.0516: virtual text "above" highlights gap after it
patch 9.0.0515: virtual text highlight starts too early when 'number' is set
patch 9.0.0514: terminal test sometimes hangs
patch 9.0.0513: may not be able to use a pattern ad the debug prompt
patch 9.0.0512: cannot redraw the status lines when editing a command
patch 9.0.0511: unnecessary scrolling for message of only one line
patch 9.0.0510: Chatito files are not recognized
patch 9.0.0509: confusing error for "saveas" command with "nofile" buffer
patch 9.0.0508: when the channel test fails there is no clue why
patch 9.0.0507: cmdline cleared when using :redrawstatus in CmdlineChanged
patch 9.0.0506: line number argument for :badd does not work
patch 9.0.0505: various problems with 'nosplitscroll'
patch 9.0.0504: still a build failure
patch 9.0.0503: build failure
patch 9.0.0502: a closure in a nested loop in a :def function does not work
patch 9.0.0501: warning for using uninitialized value in mouse test
patch 9.0.0500: when quitting cmdline window with CTRL-C it remains visible
patch 9.0.0499: in :def function list created after const is locked
patch 9.0.0498: various small issues
Update runtime files
patch 9.0.0497: LyRiCs files are not recognized
patch 9.0.0496: no good reason to keep supporting Windows-XP
patch 9.0.0495: closure doesn't work properly in nested loop
patch 9.0.0494: small build misses float function declaraitons
patch 9.0.0493: Perl test fails
patch 9.0.0492: cmdwin test fails on MS-Windows
patch 9.0.0491: no good reason to build without the float feature
patch 9.0.0490: using freed memory with cmdwin and BufEnter autocmd
patch 9.0.0489: using "end_lnum" with virtual text causes problems
patch 9.0.0488: cursor wrong with virtual text "above" and 'showbreak'
patch 9.0.0487: using freed memory with combination of closures
patch 9.0.0486: text scrolled with 'nosplitscroll', autocmd win and help
patch 9.0.0485: in :def function all closures in loop get the same variables
patch 9.0.0484: in :def function all closures in loop get the same variables
patch 9.0.0483: illegal memory access when replacing in virtualedit mode
patch 9.0.0482: "g0" moves to wrong location with virtual text "above"
patch 9.0.0481: in :def function all closures in loop get the same variables
patch 9.0.0480: cannot use a :def varargs function with substitute()
patch 9.0.0479: in :def function all closures in loop get the same variables
patch 9.0.0478: test for 'splitscroll' takes too much time
patch 9.0.0477: missing dependency may cause crashes on incomplete build
patch 9.0.0476: varargs does not work for replacement function of substitute()
patch 9.0.0475: not using deferred delete in tests
patch 9.0.0474: fullcommand() test failure
patch 9.0.0473: fullcommand() only works for the current script version
patch 9.0.0472: virtual text "below" doesn't show in list mode
patch 9.0.0471: no test for what patch 9.0.0469 fixes
patch 9.0.0470: in :def function all closures in loop get the same variables
patch 9.0.0469: cursor moves if cmdwin is closed when 'splitscroll' is off
patch 9.0.0468: exectution stack underflow without the +eval feature
patch 9.0.0467: build failure
patch 9.0.0466: virtual text wrong after adding line break after line
patch 9.0.0465: cursor moves when cmdwin is closed when 'splitscroll' is off
patch 9.0.0464: with virtual text "above" indenting doesn't work well
patch 9.0.0463: command line test leaves directory behind
patch 9.0.0462: ASAN warning for integer overflow
patch 9.0.0461: 'scroll' is not always updated
patch 9.0.0460: loop variable can't be found
patch 9.0.0459: Vim9: block in for loop doesn't behave like a code block
patch 9.0.0458: splitting a line with a text prop "above" moves it down
patch 9.0.0457: substitute prompt does not highlight an empty match
patch 9.0.0456: function called at debug prompt is also debugged
patch 9.0.0455: a few problems with 'splitscroll'
patch 9.0.0454: incorrect color for modeless selection with GTK
patch 9.0.0453: on an AZERTY keyboard digit keys get the shift modifier
patch 9.0.0452: Visual highlighting extends into virtual text prop
patch 9.0.0451: virtual text "above" does not work with 'nowrap'
Add missing part of patch
patch 9.0.0450: return value of argument check functions is inconsistent
patch 9.0.0449: there is no easy way to translate a key code into a string
patch 9.0.0448: SubRip files are not recognized
patch 9.0.0447: using :echowin while at the hit-enter prompt causes problems
patch 9.0.0446: message window may be positioned too low
patch 9.0.0445: when opening/closing window text moves up/down
patch 9.0.0444: trying to declare g:variable gives confusing error
patch 9.0.0443: blueprint files are not recognized
patch 9.0.0442: virtual text "above" doesn't handel line numbers
patch 9.0.0441: closure in for loop test fails on some systems
patch 9.0.0440: crash when using mkdir() with "R" flag in compiled function
patch 9.0.0439: cursor wrong if inserting before line with virtual text above
patch 9.0.0438: cannot put virtual text above a line
patch 9.0.0437: no error when custom completion function returns wrong type
Update runtime files
patch 9.0.0436: CI: running tests in parallel causes flakiness
patch 9.0.0435: compiler warning for uninitialized variable
patch 9.0.0434: gitignore files are not recognized
patch 9.0.0433: Coverity warns for not checking allocation failure
patch 9.0.0432: crash when using for loop variable in closure
patch 9.0.0431: current mode shows in message window
patch 9.0.0430: cannot use repeat() with a blob
patch 9.0.0429: not all keys are tested for the MS-Windows GUI
patch 9.0.0428: autocmd test uses common file name
patch 9.0.0427: Drupal theme files are not recognized
patch 9.0.0426: failed flaky tests reports only start time
patch 9.0.0425: autocmd test is a bit flaky on MS-Windows
patch 9.0.0424: gitattributes files are not recognized
patch 9.0.0423: "for" and "while" not recognized after :vim9cmd and :legacy
patch 9.0.0422: not enough testing of the :all command
patch 9.0.0421: MS-Windows makefiles are inconsistently named
patch 9.0.0420: function went missing
patch 9.0.0419: the :defer command does not check the function arguments
patch 9.0.0418: manually deleting temp test files
patch 9.0.0417: Jsonnet files are not recognized
patch 9.0.0416: ml_get error when appending lines in popup window
patch 9.0.0415: on MS-Windows some tests are flaky
patch 9.0.0414: matchstr() still does not match column offset
patch 9.0.0413: ASAN reports a memory leak
patch 9.0.0412: compiler warning for unused argument
patch 9.0.0411: only created files can be cleaned up with one call
patch 9.0.0410: struct member cts_lnum is unused
patch 9.0.0409: #{g:x} was seen as a curly-braces expression
patch 9.0.0408: GUI test sometimes fails on MS-Windows
patch 9.0.0407: matchstr() does match column offset
patch 9.0.0406: deferred functions not invoked when partial func exits
patch 9.0.0405: arguments in a partial not used by a :def function
patch 9.0.0404: crash when passing invalid arguments to assert_fails()
patch 9.0.0403: 'equalalways' may be off when 'laststatus' is zero
patch 9.0.0402: javascript module files are not recoginzed
patch 9.0.0401: CI uses older clang version
patch 9.0.0400: GUI test sometimes hangs on CI
patch 9.0.0399: using :defer in expression funcref not tested
patch 9.0.0398: members of funccall_T are inconsistently named
patch 9.0.0397: :defer not tested with exceptions and ":qa!"
patch 9.0.0396: :findrepl does not escape '&' and '~' properly
patch 9.0.0395: clang warnings for function prototypes
patch 9.0.0394: Cygwin: multibyte characters may be broken in terminal window
patch 9.0.0393: signals test often fails on FreeBSD
patch 9.0.0392: inverted condition is a bit confusing
patch 9.0.0391: using separate delete() call instead of writefile() 'D' flag
patch 9.0.0390: cannot use a partial with :defer
patch 9.0.0389: crash when 'tagfunc' closes the window
patch 9.0.0388: the do_arg_all() function is too long
patch 9.0.0387: repeat <ScriptCmd> mapping doesn't use right script context
patch 9.0.0386: some code blocks are nested too deep
patch 9.0.0385: GUI: when CTRL-D is mapped in Insert mode it gets inserted
patch 9.0.0384: Covertity still complains about using return value of getc()
patch 9.0.0383: Coverity complains about unused value
patch 9.0.0382: freeing the wrong string on failure
patch 9.0.0381: writefile test leaves files behind
patch 9.0.0380: deleting files in tests is a hassle
Revert part of patch merged twice
patch 9.0.0380: deleting files in tests is a hassle
Update runtime files
patch 9.0.0379: cleaning up after writefile() is a hassle
patch 9.0.0378: compiler warning for uninitialized variable
patch 9.0.0377: argument assignment does not work
patch 9.0.0376: clang warns for dead assignments
patch 9.0.0375: the footer feature is unused
patch 9.0.0374: Coverity still complains about dropping sign of character
patch 9.0.0373: Coverity warns for NULL check and unused return value
patch 9.0.0372: MS-Windows: "%T" time format does not appear to work
patch 9.0.0371: compiler warning for uninitialized variable
patch 9.0.0370: cleaning up afterwards can make a function messy
patch 9.0.0369: a failing flaky test doesn't mention the time
patch 9.0.0368: old Coverity warning for using NULL pointer
patch 9.0.0367: Coverity complains about dropping sign of character
patch 9.0.0366: cannot use import->Func() in lambda
patch 9.0.0365: file name used in test is unusual
patch 9.0.0364: clang static analyzer gives warnings
patch 9.0.0363: common names in test files causes tests to be flaky
patch 9.0.0362: expanding ":e %" does not work for remote files
patch 9.0.0361: removing a listener may result in a memory leak
patch 9.0.0360: crash when invalid line number on :for is ignored
patch 9.0.0359: error message for wrong argument type is not specific
patch 9.0.0358: 'breakindent' does not indent non-lists
patch 9.0.0357: 'linebreak' interferes with text property highlight
patch 9.0.0356: :echowindow sets the in_echowindow flag too early
patch 9.0.0355: check for uppercase char in autoload name is wrong
patch 9.0.0354: MS-Windows: starting a python server for test sometimes fails
patch 9.0.0353: missing entry in switch
patch 9.0.0352: using :echowindow in a timer clears part of message
patch 9.0.0351: message window may obscure the command line
patch 9.0.0350: :echowindow does not work in a compiled function
patch 9.0.0349: filetype of *.sil files not well detected
patch 9.0.0348: MS-Windows: GUI mouse move event test is flaky
patch 9.0.0347: MS-Windows: cannot set cursor shape in Windows Terminal
patch 9.0.0346: :horizontal modifier not fully supported
patch 9.0.0345: error message for list argument could be clearer
patch 9.0.0344: MS-Windows: background color wrong in Console
patch 9.0.0343: ColorScheme autocommand triggered when colorscheme not found
patch 9.0.0342: ":wincmd =" equalizes in two directions
patch 9.0.0341: mapset() does not restore <Nop> mapping properly
patch 9.0.0340: the 'cmdheight' zero support causes too much trouble
patch 9.0.0339: no check if the return value of XChangeGC() is NULL
patch 9.0.0338: return value of list_append_list() not always checked
patch 9.0.0337: flicker when resetting cmdline_row after updating the screen
patch 9.0.0336: tests are flaky because of using a common file name
Update runtime files
patch 9.0.0335: checks for Dictionary argument often give a vague error
patch 9.0.0334: test does not properly clean up
patch 9.0.0333: method test fails
patch 9.0.0332: overwrite check may block BufWriteCmd
patch 9.0.0331: cannot use items() on a string
patch 9.0.0330: method tests fail
patch 9.0.0329: ":highlight" hangs when 'cmdheight' is zero
patch 9.0.0328: OLD_DIGRAPHS is unused
patch 9.0.0327: items() does not work on a list
patch 9.0.0326: some changes for cmdheight=0 are not needed
patch 9.0.0325: MS-Windows: completion test fails
patch 9.0.0324: MS-Windows: resolve() test fails
patch 9.0.0323: using common name in tests leads to flaky tests
patch 9.0.0322: crash when no errors and 'quickfixtextfunc' is set
patch 9.0.0321: cannot use the message popup window directly
patch 9.0.0320: command line type of CmdlineChange differs from getcmdtype()
patch 9.0.0319: Godot shader files are not recognized
patch 9.0.0318: clearing screen causes flicker
patch 9.0.0317: when updating the whole screen a popup may not be redrawn
patch 9.0.0316: screen flickers when 'cmdheight' is zero
patch 9.0.0315: shell command is displayed in message window
patch 9.0.0314: VDM files are not recognized
patch 9.0.0313: using common name in tests leads to flaky tests
patch 9.0.0312: test for cmdheight zero fails
patch 9.0.0311: test for hit-Enter prompt fails
patch 9.0.0310: output of :messages dissappears when cmdheight is zero
patch 9.0.0309: invalid memory access when cmdheight is zero
patch 9.0.0308: when cmdheight is zero the attention prompt doesn't show
patch 9.0.0307: :echomsg doesn't work properly with cmdheight=0
patch 9.0.0306: buffer write message is two lines in message popup window
patch 9.0.0305: CI lists useless deprecation warnings
patch 9.0.0304: WinScrolled is not triggered when only skipcol changes
patch 9.0.0303: it is not easy to get information about a script
patch 9.0.0302: CI for Coverity is bothered by deprecation warnings
patch 9.0.0301: the message window popup is delayed after an error message
patch 9.0.0300: 'cpoptions' tests are flaky
patch 9.0.0299: error messages for setcmdline() could be better
patch 9.0.0298: compiler warning for size_t to int conversion
patch 9.0.0297: cursor position wrong after right aligned virtual text
patch 9.0.0296: message in popup is shortened unnecessary
patch 9.0.0295: GUI drop files test sometimes fails
patch 9.0.0294: crash when 'cmdheight' is 0 and popup_clear() used
patch 9.0.0293: messages window not hidden when starting a command line
patch 9.0.0292: test causes another test to fail
patch 9.0.0291: test failing
patch 9.0.0290: compiler warning for variable set but not used
patch 9.0.0289: invalid memory write
patch 9.0.0288: when 'cmdheight' is zero some messages are not displayed
patch 9.0.0287: Irix systems no longer exist
patch 9.0.0286: using freed memory when location list changed in autocmd
patch 9.0.0285: it is not easy to change the command line from a plugin
patch 9.0.0284: using static buffer for multiple completion functions
patch 9.0.0283: cannot complete "syn list @cluster"
patch 9.0.0282: a nested timout stops the previous timeout
patch 9.0.0281: build failure without the +eval feature
Update runtime files
patch 9.0.0280: the builtin termcap list depends on the version
patch 9.0.0279: the tiny version has the popup menu but not 'wildmenu'
patch 9.0.0278: the +wildignore feature is nearly always available
patch 9.0.0277: Coverity CI: update-alternatives not needed with Ubuntu 20.04
patch 9.0.0276: 'buftype' values not sufficiently tested
patch 9.0.0275: BufEnter not triggered when using ":edit" in "nofile" buffer
patch 9.0.0274: netrw plugin does not show remote files
patch 9.0.0273: Konsole termresponse not recognized
patch 9.0.0272: BufReadCmd not triggered when loading a "nofile" buffer
patch 9.0.0271: using INIT() in non-header files
patch 9.0.0270: some values of 'path' and 'tags' invalid in the tiny version
patch 9.0.0269: getscriptinfo() does not include the version
patch 9.0.0268: build error without the +eval feature
patch 9.0.0267: Coverity workflow still uses Ubuntu 18.04
patch 9.0.0266: compiler warning for unused argument
patch 9.0.0265: no good reason why the "gf" command isn't in the tiny version
patch 9.0.0264: CI still runs on Ubuntu 18.04
patch 9.0.0263: too many #ifdefs
patch 9.0.0262: build failure without the +quickfix feature
patch 9.0.0261: bufload() reads a file even if the name is not a file name
patch 9.0.0260: using freed memory when using 'quickfixtextfunc' recursively
patch 9.0.0259: crash with mouse click when not initialized
Update runtime files
patch 9.0.0258: MS-Windows installer skips syntax/shared
patch 9.0.0257: "->" in ":scriptnames" output not tested yet
patch 9.0.0256: compiler warning for uninitialized variables
patch 9.0.0255: build failure without the eval feature
patch 9.0.0254: typo in function name
patch 9.0.0253: a symlink to an autoload script results in two entries
patch 9.0.0252: cursor in wrong place after virtual text
patch 9.0.0251: test output shows up in git
patch 9.0.0250: slightly inconsistent error messages
patch 9.0.0249: no test for what 9.0.0234 fixes
patch 9.0.0248: duplicate code in finding a script in the execution stack
patch 9.0.0247: cannot add padding to virtual text without highlight
patch 9.0.0246: using freed memory when 'tagfunc' deletes the buffer
patch 9.0.0245: mechanism to prevent recursive screen updating is incomplete
patch 9.0.0244: cannot easily get the list of sourced scripts
patch 9.0.0243: text properties "below" sort differently on MS-Windows
patch 9.0.0242: "make install" still fails
patch 9.0.0241: "make install" does not install shared syntax file
patch 9.0.0240: crash when using ":mkspell" with an empty .dic file
patch 9.0.0239: build failure without the +wildmenu feature
patch 9.0.0238: Shift-Tab shows matches on cmdline when 'wildmenu' is off
patch 9.0.0237: Mac: cannot build if dispatch.h is not available
patch 9.0.0236: popup menu not removed when 'wildmenu' reset while visible
patch 9.0.0235: 'autoshelldir' does not work with chunked respose
patch 9.0.0234: cannot make difference between :normal end and argument char
patch 9.0.0233: removing multiple text properties takes many calls
patch 9.0.0232: test with BufNewFile autocmd is flaky
patch 9.0.0231: expanding "**" may loop forever with directory links
patch 9.0.0230: no error for comma missing in list in :def function
patch 9.0.0229: Vim9: error message for missing type is not clear
Update runtime files
patch 9.0.0228: crash when pattern looks below the last line
patch 9.0.0227: cannot read error message when abort() is called
patch 9.0.0226: job_start() test may fail under valgrind
patch 9.0.0225: using freed memory with multiple line breaks in expression
patch 9.0.0224: Using NULL pointer when skipping compiled code
patch 9.0.0223: typo in diffmode test
patch 9.0.0222: no good reason why text objects are only in larger builds
patch 9.0.0221: accessing freed memory if compiling nested function fails
patch 9.0.0220: invalid memory access with for loop over NULL string
patch 9.0.0219: cannot make a funcref with "s:func" in a def function
patch 9.0.0218: reading before the start of the line
Update runtime files
patch 9.0.0217: 'shellslash' works differently when sourcing a script again
patch 9.0.0216: undo earlier test sometimes fails on MS-Windows
patch 9.0.0215: not passing APC_INDENT flag
patch 9.0.0214: splitting a line may duplicate virtual text
patch 9.0.0213: using freed memory with error in assert argument
patch 9.0.0212: invalid memory access when compiling :unlet
patch 9.0.0211: invalid memory access when compiling :lockvar
patch 9.0.0210: 'list' mode does not work properly with virtual text
patch 9.0.0209: build error with small features
patch 9.0.0208: the override flag has no effect for virtual text
patch 9.0.0207: stacktrace not shown when debugging
patch 9.0.0206: redraw flags are not named specifically
patch 9.0.0205: cursor in wrong position when inserting after virtual text
patch 9.0.0204: indexof() may leak memory
patch 9.0.0203: confusing variable name
patch 9.0.0202: code and help for indexof() is not ideal
patch 9.0.0201: CursorLine highlight overrules virtual text highlight
patch 9.0.0200: cursor wrong if 'nowrap' and two right aligned text props
patch 9.0.0199: cursor position wrong with two right-aligned virtual texts
patch 9.0.0198: ml_get error when switching buffer in Visual mode
patch 9.0.0197: astro files are not detected
patch 9.0.0196: finding value in list may require a for loop
patch 9.0.0195: metafun files are not recogized
patch 9.0.0194: cursor displayed in wrong position after removing text prop
patch 9.0.0193: search and match highlgith interfere with virtual text
patch 9.0.0192: possible invalid memory access when 'cmdheight' is zero
patch 9.0.0191: messages test fails; window size incorrect
patch 9.0.0190: the way 'cmdheight' can be made zero is inconsistent
patch 9.0.0189: invalid memory access for text prop without highlight
patch 9.0.0188: strange effects when using "text_align" with non-zero column
patch 9.0.0187: command line height changes when maximizing window height
patch 9.0.0186: virtual text without highlighting does not show
patch 9.0.0185: virtual text does not show if text prop at same position
patch 9.0.0184: virtual text prop highlight continues after truncation
patch 9.0.0183: extra space after virtual text when 'linebreak' is set
patch 9.0.0182: quarto files are not recognized
patch 9.0.0181: textprop test with line2byte() fails on MS-Windows
patch 9.0.0180: stray logfile appears when running tests
patch 9.0.0179: cursor pos wrong with wrapping virtual text in empty line
patch 9.0.0178: cursor position wrong with virtual text before Tab
patch 9.0.0177: cursor position wrong with 'virtualedit' and mouse click
patch 9.0.0176: checking character options is duplicated and incomplete
patch 9.0.0175: spell checking for capital not working with trailing space
patch 9.0.0174: no error for using "#{ comment" in a compiled function
patch 9.0.0173: assert fails only on MS-Windows
patch 9.0.0172: trying to allocate zero bytes
patch 9.0.0171: quickfix line highlight is overruled by 'cursorline'
patch 9.0.0170: various minor code formatting issues
Update runtime files
patch 9.0.0169: insufficient testing for line2byte() with text properties
patch 9.0.0168: cursor positioned wrong with two virtual text properties
patch 9.0.0167: checking for text properties could be a bit more efficient
patch 9.0.0166: when using text properties line text length computed twice
patch 9.0.0165: looking up a text property type by ID is slow
patch 9.0.0164: using freed memory with put command
patch 9.0.0163: text property not adjusted for text inserted with "p"
patch 9.0.0162: text property "below" gets indent if 'breakindent' is set
patch 9.0.0161: warning for uninitialized variable
patch 9.0.0160: some diff mode tests fail
patch 9.0.0159: cannot build with small features
patch 9.0.0158: with 'nowrap' "below" property not displayed correctly
patch 9.0.0157: 'showbreak' displayed below truncated "after" text prop
patch 9.0.0156: giving E1170 only in an expression is confusing
patch 9.0.0154: text properties wrong after splitting a line
patch 9.0.0153: no fold and sign column for virtual text with "below" align
patch 9.0.0152: warning for unused argument in small build
patch 9.0.0151: a "below" aligned text property does not work with 'nowrap'
patch 9.0.0150: error for using #{ in an expression is a bit confusing
patch 9.0.0149: test for fuzzy completion fails sometimes
patch 9.0.0148: a "below" aligned text property gets 'showbreak' displayed
patch 9.0.0147: cursor positioned wrong after two "below" text properties
patch 9.0.0146: missing part of change for "override" flag
patch 9.0.0145: substitute that joins lines drops text properties
patch 9.0.0144: text property cannot override 'cursorline' highlight
patch 9.0.0143: cursor positioned after virtual text in empty line
patch 9.0.0142: crash when adding and removing virtual text
patch 9.0.0141: "delmenu" does not remove autocmmands
patch 9.0.0140: execute() does not use the "legacy" command modifier
patch 9.0.0139: truncating virtual text after a line not implemented
patch 9.0.0138: not enough characters accepted for 'spellfile'
patch 9.0.0137: debugger test may fail when $CWD is very long
patch 9.0.0136: after CTRL-Left-mouse click a mouse scroll also has CTRL
patch 9.0.0135: comment about tabpage line above the wrong code
patch 9.0.0134: no test for text property with column zero
patch 9.0.0133: virtual text after line moves to joined line
patch 9.0.0132: multi-byte characters in virtual text not handled correctly
patch 9.0.0131: virtual text with Tab is not displayed correctly
patch 9.0.0130: cursor position wrong when inserting around virtual text
Update runtime files
patch 9.0.0129: compiler warning for int/size_t usage
patch 9.0.0128: Coverity complains about possible double free
patch 9.0.0127: unused variable
patch 9.0.0126: expanding file names fails in dir with more than 255 entries
patch 9.0.0125: cursor positioned wrong with virtual text after the line
patch 9.0.0124: code has more indent than needed
patch 9.0.0123: cannot build with small features
patch 9.0.0122: breakindent test fails
patch 9.0.0121: cannot put virtual text after or below a line
patch 9.0.0120: MS-Windows GUI: cannot use AltGr + Space
patch 9.0.0119: tiny chance that creating a backup file fails
patch 9.0.0118: no test for what patch 9.0.0155 fixes
patch 9.0.0117: text of removed textprop with text is not freed
patch 9.0.0116: virtual text not displayed if 'signcolumn' is "yes"
patch 9.0.0115: when 'cmdheight' is zero pressing ':' may scroll a window
patch 9.0.0114: the command line takes up space even when not used
patch 9.0.0113: has() is not strict about parsing the patch version
patch 9.0.0112: MS-Windows: test fails because file already exists
patch 9.0.0111: "nocombine" is missing from synIDattr()
patch 9.0.0110: help tag generation picks up words in code examples
patch 9.0.0109: writing over the end of a buffer on stack
patch 9.0.0108: configure check for timer_create may give wrong error
Update runtime files
patch 9.0.0107: condition always has the same value
patch 9.0.0106: illegal byte regexp test doesn't fail when fix is reversed
patch 9.0.0105: illegal memory access when pattern starts with illegal byte
patch 9.0.0104: going beyond allocated memory when evaluating string constant
patch 9.0.0103: if running configure with cached results -lrt may be missing
patch 9.0.0102: reading past end of line with insert mode completion
patch 9.0.0101: invalid memory access in diff mode with "dp" and undo
patch 9.0.0100: get hit-enter prompt for system() when '!' is in 'guioptions'
patch 9.0.0099: scrollback can be wrong after redrawing the command line
patch 9.0.0098: missing include file in timer_create configure check
patch 9.0.0097: long quickfix line is truncated for :clist
patch 9.0.0096: flag "new_value_alloced" is always true
patch 9.0.0095: conditions are always true
patch 9.0.0094: cursor restored unexpected with nested autocommand
patch 9.0.0093: sway config files are recognized as i3config
patch 9.0.0092: plugins cannot change v:completed_item
patch 9.0.0091: duplicate error number
patch 9.0.0090: no error when assigning bool to a string option
patch 9.0.0089: fuzzy argument completion doesn't work for shell commands
patch 9.0.0088: pattern for detecting bitbake files is not sufficient
patch 9.0.0087: MS-Windows: CTRL-[ on Belgian keyboard does not work like Esc
patch 9.0.0086: tabline is not redrawn when entering command line
patch 9.0.0085: ":write" fails after ":file name" and the ":edit"
patch 9.0.0084: using "terraform" filetype for .tfvars file is bad
patch 9.0.0083: ModeChanged event not triggered when leaving cmdline window
patch 9.0.0082: cannot interrupt global command from command line
patch 9.0.0081: command line completion of user command may have duplicates
patch 9.0.0080: compiler warning for size_t to int conversion
patch 9.0.0079: error in autoload script not reported for 'foldexpr'
patch 9.0.0078: star register is unexpectedly changed when deleting
patch 9.0.0077: wrong restored cursor position when switching window in autocmd
patch 9.0.0076: no test for what patch 8.1.1424 fixes
patch 9.0.0075: some compilers warn for using an uninitialized variable
patch 9.0.0074: Coverity warns for double free
patch 9.0.0073: too many files recognized as bsdl
patch 9.0.0072: compiler warning for uninitialized variable
patch 9.0.0071: command overlaps with printed text in scrollback
patch 9.0.0070: using utfc_ptr2char_len() when length is negative
patch 9.0.0069: leaking memory when using text prop with inserted text
patch 9.0.0068: build fails with tiny features
patch 9.0.0067: cannot show virtual text
Update runtime files
patch 9.0.0066: switching window uneccarily when getting buffer options
patch 9.0.0065: cross-compiling doesn't work because of timer_create check
patch 9.0.0064: confusing error when using "q:" in command line window
patch 9.0.0063: too many type casts for dict_get functions
patch 9.0.0062: compiler warnings for signed/unsigned char
patch 9.0.0061: ml_get error with nested autocommand
patch 9.0.0060: accessing uninitialized memory when completing long line
patch 9.0.0059: test file has wrong name
patch 9.0.0058: Win32: cannot test low level events
patch 9.0.0057: has('patch-xxx') returns true
patch 9.0.0056: wrong line number reported when :cexpr fails in :def function
patch 9.0.0055: bitbake files are not detected
patch 9.0.0054: compiler warning for size_t to int conversion
patch 9.0.0053: E1281 not tested with the old regexp engine
patch 9.0.0052: "zG" may throw an error if invalid character follows
patch 9.0.0051: using CTRL-C wih :append may hang Vim
patch 9.0.0050: split else-of is confusing
patch 9.0.0049: csv and tsv files are not recognized
patch 9.0.0048: cursor in wrong column with mouse click after concealed text
Runtime files update
patch 9.0.0047: using freed memory with recursive substitute
patch 9.0.0046: reading past end of completion with duplicate match
patch 9.0.0045: reading past end of completion with a long line
patch 9.0.0044: typos in comments, wrapping lines
Update runtime files
patch 9.0.0043: insufficient testing for bracket commands
patch 9.0.0042: missing change for filetype detection
patch 9.0.0041: a couple of filetype patterns do not have "*" before "/etc"
patch 9.0.0040: use of set_chars_option() is confusing
patch 9.0.0039: not all systems have GDK_KEY_dead_circumflex
patch 9.0.0038: 'listchars' test fails
patch 9.0.0037: build error
patch 9.0.0036: 'fillchars' cannot have window-local values
patch 9.0.0035: spell dump may go beyond end of an array
patch 9.0.0034: spell tests do not always clear the word list
patch 9.0.0033: on a Belgian keyboard CTRL-[ does not work
patch 9.0.0031: <cmod> of user command does not have correct verbose value
patch 9.0.0030: matchfuzzy test depends on path of current directory
patch 9.0.0029: the bitmaps/vim.ico file is not in the distribution
patch 9.0.0028: MS-Windows: tests fail if there is a "runtime" directory
patch 9.0.0027: the command line test is getting quite big
patch 9.0.0026: accessing freed memory with diff put
patch 9.0.0025: accessing beyond allocated memory with the cmdline window
patch 9.0.0024: may access part of typeahead buf that isn't filled
patch 9.0.0023: on Solaris timer_create() exists but does not work
patch 9.0.0022: spell test fails
patch 9.0.0021: invalid memory access when adding word to spell word list
patch 9.0.0020: with some completion reading past end of string
patch 9.0.0019: timers test not run where possible
Update runtime files
patch 9.0.0018: going over the end of the typahead
patch 9.0.0017: accessing memory beyond the end of the line
patch 9.0.0016: comparing line pointer for 'breakindent' is not reliable
patch 9.0.0015: with EXITFREE defined terminal menus are not cleared
patch 9.0.0014: missing part of the test override change
patch 9.0.0013: reproducing memory access errors can be difficult
patch 9.0.0012: signature files not detected properly
patch 9.0.0011: reading beyond the end of the line with put command
patch 9.0.0010: returning 0 for has('patch-9.0.0') is inconsistent
patch 9.0.0009: going past the end of a menu item with only modifier
patch 9.0.0008: cannot specify the variable name for "xxd -i"
patch 9.0.0007: no support for double, dotted and dashed underlines
patch 9.0.0006: not all Visual Basic files are recognized
patch 9.0.0005: hare files are not recognized
patch 9.0.0004: plural messages not translated properly
patch 9.0.0003: functions are global while they could be local
patch 9.0.0002: map functionality outside of map.c
patch 9.0.0001: Travis CI is no longer used
release version 9.0
patch 8.2.5172: "make menu" still uses legacy script
patch 8.2.5171: dependencies and proto files are outdated
patch 8.2.5170: tiny issues
Update runtime files
patch 8.2.5169: nested :source may use NULL pointer
patch 8.2.5168: cannot build with Python 3.11
patch 8.2.5167: get(Fn, 'name') on funcref returns special byte code
patch 8.2.5166: test for DiffUpdated fails
patch 8.2.5165: import test fails because 'diffexpr' isn't reset
patch 8.2.5164: invalid memory access after diff buffer manipulations
patch 8.2.5163: crash when deleting buffers in diff mode
patch 8.2.5162: reading before the start of the line with BS in Replace mode
Update runtime files
patch 8.2.5161: might still access invalid memory
patch 8.2.5160: accessing invalid memory after changing terminal size
Update runtime files
patch 8.2.5159: fix for CTRL-key combinations causes problems
patch 8.2.5158: TSTP and INT signal tests are not run with valgrind
patch 8.2.5157: MS-Windows GUI: CTRL-key combinations do not always work
patch 8.2.5156: search timeout test often fails with FreeBSD
patch 8.2.5155: in diff mode windows may get out of sync
Update runtime files
patch 8.2.5154: still mentioning version8, some cosmetic issues
patch 8.2.5153: "make uninstall" does not remove colors/lists
Update runtime files
patch 8.2.5152: search() gets stuck with "c" and skip evaluates to true
patch 8.2.5151: reading beyond the end of the line with lisp indenting
patch 8.2.5150: read past the end of the first line with ":0;'{"
patch 8.2.5149: cannot build without the +eval feature
patch 8.2.5148: invalid memory access when using expression on command line
patch 8.2.5147: flaky test always fails on retry
patch 8.2.5146: memory leak when substitute expression nests
patch 8.2.5145: exit test causes spurious valgrind reports
patch 8.2.5144: with 'lazyredraw' set completion menu may be wrong
patch 8.2.5143: some tests fail when using valgrind
patch 8.2.5142: startup test fails if there is a status bar
patch 8.2.5141: using "volatile int" in a signal handler might be wrong
patch 8.2.5140: seachpair timeout test is flaky
patch 8.2.5139: TIME_WITH_SYS_TIME is no longer supported by autoconf
patch 8.2.5138: various small issues
patch 8.2.5137: cannot build without the +channel feature
Update runtime files
patch 8.2.5136: debugger test fails when run with valgrind
patch 8.2.5135: running configure gives warnings for main() return type
patch 8.2.5134: function has confusing name
patch 8.2.5133: MacOS: build fails
patch 8.2.5132: :mkview test doesn't test much
patch 8.2.5131: timeout implementation is not optimal
patch 8.2.5130: edit test for mode message fails when using valgrind
patch 8.2.5129: timeout handling is not optimal
patch 8.2.5128: syntax disabled when using synID() in searchpair() skip expr
patch 8.2.5127: using assert_true() does not show value on failure
patch 8.2.5126: substitute may overrun destination buffer
patch 8.2.5125: MS-Windows: warnings from MinGW compiler
patch 8.2.5124: when syntax timeout test fails it does not show the time
patch 8.2.5123: using invalid index when looking for spell suggestions
patch 8.2.5122: lisp indenting my run over the end of the line
patch 8.2.5121: interrupt test sometimes fails
patch 8.2.5120: searching for quotes may go over the end of the line
patch 8.2.5119: CI uses cache v2
patch 8.2.5118: MS-Windows: sending a message to another Vim may hang
patch 8.2.5117: crash when calling a Lua callback from a :def function
patch 8.2.5116: "limit" option of matchfuzzy() not always respected
Update runtime files
patch 8.2.5115: search timeout is overrun with some patterns
patch 8.2.5114: time limit on searchpair() does not work properly
patch 8.2.5113: timer becomes invalid after fork/exec, :gui gives errors
patch 8.2.5112: gui test hangs on MS-Windows
patch 8.2.5111: no test for --gui-dialog-file
patch 8.2.5110: icon filetype not recognized from the first line
patch 8.2.5109: mode not updated after CTRL-O CTRL-C in Insert mode
patch 8.2.5108: retab test disabled because it hangs on MS-Windows
patch 8.2.5107: some callers of rettv_list_alloc() check for not OK
patch 8.2.5106: default cmdwin mappings are re-mappable
patch 8.2.5105: test still hangs on MS-Windows
patch 8.2.5104: test hangs on MS-Windows
patch 8.2.5103: build fails with small features
patch 8.2.5102: interrupt not caught in test
patch 8.2.5101: MS-Windows with MinGW: $CC may be "cc" instead of "gcc"
patch 8.2.5100: memory usage tests are not retried
patch 8.2.5099: some terminal tests are not retried
patch 8.2.5098: spelldump test sometimes hangs
patch 8.2.5097: using uninitialized memory when using 'listchars'
patch 8.2.5096: terminal test still fails with some shell commands
patch 8.2.5095: terminal test still fails with some shell commands
Update runtime files
patch 8.2.5094: MS-Windows GUI: empty command may cause a dialog
patch 8.2.5093: error message for unknown command may have the command twice
patch 8.2.5092: using "'<,'>" in Ex mode may compare unrelated pointers
patch 8.2.5091: terminal test fails with some shell commands
patch 8.2.5090: MS-Windows: vim.def is no longer used
patch 8.2.5089: some functions return a different value on failure
patch 8.2.5088: value of cmod_verbose is a bit complicated to use
patch 8.2.5087: cannot build with clang on MS-Windows
patch 8.2.5086: CI runs on Windows 2019
patch 8.2.5085: gcc gives warning for signed/unsigned difference
patch 8.2.5084: when the GUI shows a dialog tests get stuck
patch 8.2.5083: autocmd test still fails on MS-Windows
patch 8.2.5082: retab test fails
patch 8.2.5081: autocmd test fails on MS-Windows
Update runtime files.
patch 8.2.5080: when indenting gets out of hand it is hard to stop
patch 8.2.5079: DirChanged autocommand may use freed memory
patch 8.2.5078: substitute test has a one second delay
patch 8.2.5077: various warnings from clang on MS-Windows
patch 8.2.5076: unnecessary code
patch 8.2.5075: clang gives an out of bounds warning
patch 8.2.5074: spell test fails on MS-Windows
patch 8.2.5073: clang on MS-Windows produces warnings
Update runtime files
patch 8.2.5072: using uninitialized value and freed memory in spell command
patch 8.2.5071: with some Mac OS version clockid_t is redefined
patch 8.2.5070: unnecessary code
patch 8.2.5069: various warnings from clang on MS-Windows
patch 8.2.5068: gcc 12.1 warning when building tee
patch 8.2.5067: timer_create is not available on every Mac system
patch 8.2.5066: timer_create is not available on every Mac system
patch 8.2.5065: wrong return type for main() in tee.c
Update runtime files.
patch 8.2.5064: no test for what 8.1.0052 fixes
patch 8.2.5063: error for a command may go over the end of IObuff
patch 8.2.5062: Coverity warns for dead code
patch 8.2.5061: C89 requires signal handlers to return void
patch 8.2.5060: running configure fails
patch 8.2.5059: autoconf 2.71 produces many obsolete warnings
patch 8.2.5058: input() does not handle composing characters properly
patch 8.2.5057: using gettimeofday() for timeout is very inefficient
patch 8.2.5056: the channel log only contains some of the raw terminal output
patch 8.2.5055: statusline is not updated when terminal title changes
Update runtime files
patch 8.2.5054: no good filetype for conf files similar to dosini
patch 8.2.5053: cannot have a comment halfway an expression in a block
patch 8.2.5052: CI checkout step title is a bit cryptic
patch 8.2.5051: check for autocmd_add() event argument is confusing
patch 8.2.5050: using freed memory when searching for pattern in path
patch 8.2.5049: insufficient tests for autocommands
patch 8.2.5048: when using XIM the gui test may fail
patch 8.2.5047: CurSearch highlight is often wrong
patch 8.2.5046: vim_regsub() can overwrite the destination
patch 8.2.5045: can escape a terminal popup window when the job is finished
patch 8.2.5044: command line test fails
patch 8.2.5043: can open a cmdline window from a substitute expression
patch 8.2.5042: scrollbar thumb in tall scrolled popup not visible
patch 8.2.5041: cannot close a terminal popup with "NONE" job
patch 8.2.5040: scrollbar thumb in scrolled popup not visible
patch 8.2.5039: confusing error if first argument of popup_create() is wrong
patch 8.2.5038: a finished terminal in a popup window does not show scrollbar
patch 8.2.5037: cursor position may be invalid after "0;" range
patch 8.2.5036: using two counters for timeout check in NFA engine
patch 8.2.5035: when splitting a window the changelist position moves
patch 8.2.5034: there is no way to get the byte index from a virtual column
patch 8.2.5033: build error with +eval but without +quickfix
patch 8.2.5032: Python 3 test fails without the GUI
patch 8.2.5031: cannot easily run the benchmarks
patch 8.2.5030: autocmd_add() can only handle one event and pattern
patch 8.2.5029: "textlock" is always zero
patch 8.2.5028: syntax regexp matching can be slow
patch 8.2.5027: error for missing :endif when an exception was thrown
patch 8.2.5026: Vim9: a few lines not covered by tests
patch 8.2.5025: Vim9: a few lines not covered by tests
patch 8.2.5024: using freed memory with "]d"
patch 8.2.5023: substitute overwrites allocated buffer
patch 8.2.5022: 'completefunc'/'omnifunc' error does not end completion
patch 8.2.5021: build fails with normal features and +terminal
patch 8.2.5020: using 'imstatusfunc' and 'imactivatefunc' breaks 'foldopen'
patch 8.2.5019: cannot get the first screen column of a character
patch 8.2.5018: Vim9: some code is not covered by tests
patch 8.2.5017: gcc 12.1 warns for uninitialized variable
patch 8.2.5016: access before start of text with a put command
patch 8.2.5015: Hoon and Moonscript files are not recognized
patch 8.2.5014: byte offsets are wrong when using text properties
patch 8.2.5013: after text formatting cursor may be in an invalid position
patch 8.2.5012: cannot select one character inside ()
patch 8.2.5011: Replacing an autocommand requires several lines
patch 8.2.5010: the terminal debugger uses various global variables
patch 8.2.5009: fold may not be closeable after appending
patch 8.2.5008: when 'formatoptions' contains "/" wrongly wrapping comment
patch 8.2.5007: spell suggestion may use uninitialized memory
patch 8.2.5006: asan warns for undefined behavior
patch 8.2.5005: compiler warning for uninitialized variable
patch 8.2.5004: right shift on negative number does not work as documented
patch 8.2.5003: cannot do bitwise shifts
patch 8.2.5002: deletebufline() may change Visual selection
patch 8.2.5001: checking translations affects the search pattern history
patch 8.2.5000: no patch for documentation updates
patch 8.2.4999: filetype test table is not properly sorted
patch 8.2.4998: Vim9: crash when using multiple funcref()
patch 8.2.4997: Python: changing hidden buffer can cause display mess up
patch 8.2.4996: setbufline() may change Visual selection
patch 8.2.4995: still a compiler warning for possibly uninitialized variable
patch 8.2.4994: tests are using legacy functions
patch 8.2.4993: smart/C/lisp indenting is optional
patch 8.2.4992: compiler warning for possibly uninitialized variable
patch 8.2.4991: no test for hwat patch 8.1.0535 fixes
patch 8.2.4990: memory leak when :defcompile fails
patch 8.2.4989: cannot specify a function name for :defcompile
Update runtime files.
patch 8.2.4988: textprop in wrong position when replacing multi-byte chars
patch 8.2.4987: after deletion a small fold may be closable
patch 8.2.4986: some github actions are outdated
patch 8.2.4985: PVS warns for possible array underrun
patch 8.2.4984: dragging statusline fails for window with winbar
patch 8.2.4983: colors test fails in the GUI
patch 8.2.4982: colors in terminal window are not 100% correct
patch 8.2.4981: it is not possible to manipulate autocommands
patch 8.2.4980: when 'shortmess' contains 'A' loading session may still warn
patch 8.2.4979: accessing freed memory when line is flushed
patch 8.2.4978: no error if engine selection atom is not at the start
patch 8.2.4977: memory access error when substitute expression changes window
patch 8.2.4976: Coverity complains about not restoring a saved value
patch 8.2.4975: recursive command line loop may cause a crash
patch 8.2.4974: ":so" command may read after end of buffer
patch 8.2.4973: Vim9: type error for list unpack mentions argument
patch 8.2.4972: Vim9: compilation fails when using dict member when skipping
patch 8.2.4971: Vim9: interpolated string seen as range
patch 8.2.4970: "eval 123" gives an error, "eval 'abc'" does not
patch 8.2.4969: changing text in Visual mode may cause invalid memory access
patch 8.2.4968: reading past end of the line when C-indenting
patch 8.2.4967: MS-Windows GUI: mouse event test sometimes fails
patch 8.2.4966: MS-Windows GUI: mouse event test gets extra event
patch 8.2.4965: GUI: testing mouse move event depends on screen cell size
patch 8.2.4964: MS-Windows GUI: mouse event test is flaky
patch 8.2.4963: expanding path with "/**" may overrun end of buffer
patch 8.2.4962: files show up in git status
patch 8.2.4961: build error with a certain combination of features
patch 8.2.4960: text properties that cross lines not updated for deleted line
patch 8.2.4959: using NULL regexp program
patch 8.2.4958: a couple conditions are always true
patch 8.2.4957: text properties in a wrong position after a block change
patch 8.2.4956: reading past end of line with "gf" in Visual block mode
patch 8.2.4955: text property in wrong position after auto-indent
patch 8.2.4954: inserting line breaks text property spanning two lines
Update runtime files, new color schemes
patch 8.2.4953: with 'si' inserting '}' after completion goes wrong
patch 8.2.4952: GUI test will fail if color scheme changes
patch 8.2.4951: smart indenting done when not enabled
patch 8.2.4950: text properties position wrong after shifting text
patch 8.2.4949: Vim9: some code not covered by tests
patch 8.2.4948: cannot use Perl heredoc in nested :def function
patch 8.2.4947: text properties not adjusted when accepting spell suggestion
patch 8.2.4946: Vim9: some code not covered by tests
patch 8.2.4945: inconsistent use of white space
Update runtime files and translations
patch 8.2.4944: text properties are wrong after "cc"
patch 8.2.4943: changing 'switchbuf' may have no effect
patch 8.2.4942: error when setting 'filetype' in help file again
patch 8.2.4941: '[ and '] marks may be wrong after undo
patch 8.2.4940: some code is never used
patch 8.2.4939: matchfuzzypos() with "matchseq" does not have all positions
patch 8.2.4938: crash when matching buffer with invalid pattern
patch 8.2.4937: no test for what 8.2.4931 fixes
patch 8.2.4936: MS-Windows: mouse coordinates for scroll event are wrong
patch 8.2.4935: with 'foldmethod' "indent" some lines not included in fold
patch 8.2.4934: string interpolation fails when not evaluating
patch 8.2.4933: a few more capitalization mistakes in error messages
patch 8.2.4932: not easy to filter the output of maplist()
patch 8.2.4931: Crash with sequence of Perl commands
patch 8.2.4930: interpolated string expression requires escaping
patch 8.2.4929: off-by-one error in in statusline item
patch 8.2.4928: various white space and cosmetic mistakes
Update runtime files, translations
patch 8.2.4927: return type of remove() incorrect when using three arguments
patch 8.2.4926: #ifdef for crypt feature around too many lines
patch 8.2.4925: trailing backslash may cause reading past end of line
patch 8.2.4924: maparg() may return a string that cannot be reused
patch 8.2.4923: test checks for terminal feature unnecessarily
patch 8.2.4922: mouse test fails on MS-Windows
patch 8.2.4921: spell test fails because of new illegal byte check
patch 8.2.4920: MS-Windows GUI: unused variables
patch 8.2.4919: can add invalid bytes with :spellgood
patch 8.2.4918: conceal character from matchadd() displayed too many times
patch 8.2.4917: fuzzy expansion of option names is not right
patch 8.2.4916: mouse in Insert mode test fails
patch 8.2.4915: sometimes the cursor is in the wrong position
patch 8.2.4914: string interpolation in :def function may fail
patch 8.2.4913: popup_hide() does not always have effect
Update runtime files
patch 8.2.4912: using execute() to define a lambda doesn't work
patch 8.2.4911: the mode #defines are not clearly named
patch 8.2.4910: imperfect coding
patch 8.2.4909: MODE_ enum entries names are too generic
patch 8.2.4908: no text formatting for // comment after a statement
patch 8.2.4907: some users do not want a line comment always inserted
patch 8.2.4906: MS-Windows: cannot use transparent background
patch 8.2.4905: codecov includes MS-Windows install header file
patch 8.2.4904: codecov includes MS-Windows install files
patch 8.2.4903: cannot get the current cmdline completion type and position
patch 8.2.4902: mouse wheel scrolling is inconsistent
patch 8.2.4901: NULL pointer access when using invalid pattern
patch 8.2.4900: Vim9 expression test fails without the job feature
patch 8.2.4899: with latin1 encoding CTRL-W might go before the cmdline
patch 8.2.4898: Coverity complains about pointer usage
patch 8.2.4897: comment inside an expression in lambda ignores the rest
patch 8.2.4896: expression in command block does not look after NL
patch 8.2.4895: buffer overflow with invalid command with composing chars
patch 8.2.4894: MS-Windows: not using italics
patch 8.2.4893: distributed import files are not installed
patch 8.2.4892: test failures because of changed error messages
patch 8.2.4891: Vim help presentation could be better
patch 8.2.4890: inconsistent capitalization in error messages
patch 8.2.4889: CI only tests with FreeBSD 12
patch 8.2.4888: line number of lambda ignores line continuation
patch 8.2.4887: channel log does not show invoking a timer callback
patch 8.2.4886: Vim9: redir in skipped block seen as assignment
patch 8.2.4885: test fails with the job/channel feature
patch 8.2.4884: test fails without the job/channel feature
patch 8.2.4883: string interpolation only works in heredoc
patch 8.2.4882: cannot make 'breakindent' use a specific column
patch 8.2.4881: "P" in Visual mode still changes some registers
patch 8.2.4880: Vim9: misplaced elseif causes invalid memory access
patch 8.2.4879: screendump test may fail when using valgrind
patch 8.2.4878: valgrind warning for using uninitialized variable
patch 8.2.4877: MS-Windows: Wrongly using Normal colors for termguicolors
patch 8.2.4876: MS-Windows: Shift-BS results in strange char in powershell
patch 8.2.4875: MS-Windows: some .exe files are not recognized
patch 8.2.4874: Win32 GUI: horizontal scroll wheel not handled properly
patch 8.2.4873: Vim9: using "else" differs from using "endif/if !cond"
patch 8.2.4872: Vim9: no error for using an expression only
patch 8.2.4871: Vim9: in :def function no error for misplaced range
patch 8.2.4870: Vim9: expression in :substitute is not compiled
patch 8.2.4869: expression in command block does not look after NL
patch 8.2.4868: when closing help window autocmds triggered for wrong window
patch 8.2.4867: listing of mapping with K_SPECIAL is wrong
patch 8.2.4866: duplicate code in "get" functions
patch 8.2.4865: :startinsert right after :stopinsert may not work
patch 8.2.4864: Vim9: script test fails
patch 8.2.4863: accessing freed memory in test without the +channel feature
patch 8.2.4862: Vim9: test may fail when run with valgrind
patch 8.2.4861: it is not easy to restore saved mappings
patch 8.2.4860: MS-Windows: always uses current directory for executables
patch 8.2.4859: wget2 files are not recognized
patch 8.2.4858: K_SPECIAL may be escaped twice
patch 8.2.4857: Yaml indent for multiline is wrong
patch 8.2.4856: MinGW compiler complains about unknown escape sequence
patch 8.2.4855: robot files are not recognized
patch 8.2.4854: array size does not match usage
patch 8.2.4853: CI with FreeBSD is a bit outdated
patch 8.2.4852: ANSI color index to RGB value not correct
patch 8.2.4851: compiler warning for uninitialized variable
patch 8.2.4850: mksession mixes up "tabpages" and "curdir" arguments
patch 8.2.4849: Gleam filetype not detected
patch 8.2.4848: local completion with mappings and simplification not working
patch 8.2.4847: crash when using uninitialized function pointer
patch 8.2.4846: termcodes test fails
patch 8.2.4845: duplicate code
patch 8.2.4844: <C-S-I> is simplified to <S-Tab>
patch 8.2.4843: treating CTRL + ALT as AltGr is not backwards compatible
patch 8.2.4842: expand("%:p") is not empty when there is no buffer name
patch 8.2.4841: empty string considered an error for expand()
patch 8.2.4840: heredoc expression evaluated even when skipping
patch 8.2.4839: compiler warning for unused argument
patch 8.2.4838: checking for absolute path is not trivial
patch 8.2.4837: modifiers not simplified when timed out
patch 8.2.4836: Vim9: some lines not covered by tests
patch 8.2.4835: Vim9: some lines not covered by tests
patch 8.2.4834: Vim9: some lines not covered by tests
Update runtime files
patch 8.2.4833: failure of mapping not checked for
patch 8.2.4832: passing zero instead of NULL to a pointer argument
patch 8.2.4831: crash when using maparg() and unmapping simplified keys
patch 8.2.4830: possible endless loop if there is unused typahead
patch 8.2.4829: a key may be simplified to NUL
patch 8.2.4828: fix for unmapping simplified key not fully tested
patch 8.2.4827: typo in variable name
patch 8.2.4826: .cshtml files are not recognized
patch 8.2.4825: can only get a list of mappings
patch 8.2.4824: expression is evaluated multiple times
patch 8.2.4823: concat more than 2 strings in :def function is inefficient
patch 8.2.4822: setting ufunc to NULL twice
patch 8.2.4821: crash when imported autoload script was deleted
patch 8.2.4820: not simple programmatic way to find a specific mapping
patch 8.2.4819: unmapping simplified keys also deletes other mapping
patch 8.2.4818: no test for what 8.2.4806 fixes
patch 8.2.4817: Win32 GUI: modifiers are not always used
patch 8.2.4816: still using older codecov app in some places of CI
patch 8.2.4815: cannot build with older GTK version
patch 8.2.4814: possible to leave a popup window with win_gotoid()
patch 8.2.4813: pasting text while indent folding may mess up folds
patch 8.2.4812: unused struct item
patch 8.2.4811: Win32 GUI: caps lock doesn't work
patch 8.2.4810: missing changes in one file
patch 8.2.4809: various things no6 properly tested
patch 8.2.4808: unused item in engine struct
patch 8.2.4807: processing key eveints in Win32 GUI is not ideal
patch 8.2.4806: a mapping using <LeftDrag> does not start Select mode
patch 8.2.4805: CurSearch used for all matches in current line
patch 8.2.4804: expression in heredoc doesn't work for compiled function
patch 8.2.4803: WinScrolled not always triggered when scrolling with mouse
patch 8.2.4802: test is not cleaned up
patch 8.2.4801: fix for cursorbind fix not fully tested
patch 8.2.4800: missing test update for adjusted t_8u behavior
patch 8.2.4799: popup does not use correct topline
patch 8.2.4798: t_8u option was reset even when set by the user
patch 8.2.4797: getwininfo() may get oudated values
patch 8.2.4796: file left behind after running cursorline tests
patch 8.2.4795: 'cursorbind' scrolling depends on whether 'cursorline' is set
patch 8.2.4794: compiler warning for not initialized variable
patch 8.2.4793: recognizing Maxima filetype even though it might be another
patch 8.2.4792: indent operator creates an undo entry for every line
patch 8.2.4791: events triggered in different order when reusing buffer
patch 8.2.4790: lilypond filetype not recognized
patch 8.2.4789: cursor pos wrong when using :redraw while editing the cmdline
patch 8.2.4788: large payload for LSP message not tested
patch 8.2.4787: prop_find() does not find the right property
patch 8.2.4786: test for win_gotoid() in Visual mode fails on Mac
patch 8.2.4785: Visual mode not stopped if win_gotoid() goes to other buffer
patch 8.2.4784: lamba test with timer is flaky
patch 8.2.4783: Coverity warns for leaking memory
Update runtime files
patch 8.2.4782: accessing freed memory
patch 8.2.4781: Maxima files are not recognized
patch 8.2.4780: parsing an LSP message fails when it is split
patch 8.2.4779: lsan suppression is too version specific
patch 8.2.4778: pacman files use dosini filetype
patch 8.2.4777: screendump tests fail because of a redraw
patch 8.2.4776: GTK: 'lines' and 'columns' may change during startup
patch 8.2.4775: SpellBad highlighting does not work in Konsole
patch 8.2.4774: crash when using a number for lambda name
patch 8.2.4773: build failure without the +eval feature
patch 8.2.4772: old Coverity warning for not checking ftell() return value
patch 8.2.4771: Coverity warns for not checking return value
patch 8.2.4770: cannot easily mix expression and heredoc
patch 8.2.4769: build warning with UCRT
patch 8.2.4768: CI: codecov upload sometimes does not work
patch 8.2.4767: openscad files are not recognized
patch 8.2.4766: KRL files using "deffct" not recognized
patch 8.2.4765: function matchfuzzy() sorts too many items
patch 8.2.4764: CI uses an older gcc version
patch 8.2.4763: using invalid pointer with "V:" in Ex mode
patch 8.2.4762: using freed memory using synstack() and synID() in WinEnter
patch 8.2.4761: documentation for using LSP messages is incomplete
patch 8.2.4760: using matchfuzzy() on a long list can take a while
patch 8.2.4759: CurSearch highlight does not work for multi-line match
patch 8.2.4758: when using an LSP channel want to get the message ID
patch 8.2.4757: list of libraries to suppress lsan errors is outdated
patch 8.2.4756: build error without the +eval feature
patch 8.2.4755: cannot use <SID>FuncRef in completion spec
patch 8.2.4754: using cached values after unsetting some environment variables
patch 8.2.4753: error from setting an option is silently ignored
patch 8.2.4752: wrong 'statusline' value can cause illegal memory access
patch 8.2.4751: mapping <SID>name.Func does not work for autoload script
patch 8.2.4750: small pieces of dead code
patch 8.2.4749: <script> is not expanded in autocmd context
patch 8.2.4748: cannot use an imported function in a mapping
patch 8.2.4747: no filetype override for .sys files
patch 8.2.4746: supercollider filetype not recognized
patch 8.2.4745: using wrong flag for using bell in the terminal
patch 8.2.4744: a terminal window can't use the bell
patch 8.2.4743: clang 14 is available on CI
patch 8.2.4742: there is no way to start logging very early in startup
patch 8.2.4741: startup test fails
patch 8.2.4740: when expand() fails there is no error message
patch 8.2.4739: accessing freed memory after WinScrolled autocmd event
patch 8.2.4738: Esc on commandline executes command instead of abandoning it
patch 8.2.4737: // in JavaScript string recognized as comment
patch 8.2.4736: build problem for Cygwin with Motif
patch 8.2.4735: quickfix tests can be a bit hard to read
patch 8.2.4734: getcharpos() may change a mark position
patch 8.2.4733: HEEx and Surface do need a separate filetype
patch 8.2.4732: duplicate code to free fuzzy matches
patch 8.2.4731: the changelist index is not remembered per buffer
patch 8.2.4730: MS-Windows GUI: cannot use CTRL-/
patch 8.2.4729: HEEx and Surface templates do not need a separate filetype
patch 8.2.4728: no test that v:event cannot be modified
patch 8.2.4727: unused code
patch 8.2.4726: cannot use expand() to get the script name
patch 8.2.4725: unused variable in tiny build
patch 8.2.4724: current instance of last search pattern not easily spotted
patch 8.2.4723: the ModeChanged autocmd event is inefficient
patch 8.2.4722: ending recording with mapping records too much
patch 8.2.4721: cooklang files are not recognized
patch 8.2.4720: ABB Rapid files are not recognized properly
patch 8.2.0003: Build file dependencies are incomplete
patch 8.2.4719: ">" marker sometimes not displayed in the jumplist
patch 8.2.4718: @@@ in the last line sometimes drawn in the wrong place
patch 8.2.4717: for TextYankPost v:event does not contain all information
patch 8.2.4716: memory allocation failure not tested when defining a function
patch 8.2.4715: Vagrantfile not recognized
Update runtime files
patch 8.2.4714: using g:filetype_dat and g:filetype_src not tested
patch 8.2.4713: plugins cannot track text scrolling
patch 8.2.4712: only get profiling information after exiting
patch 8.2.4711: when 'insermode' is set :edit from <Cmd> mapping misbehaves
patch 8.2.4710: smart indenting does not work after completion
patch 8.2.4709: after :redraw the statusline highlight might be used
patch 8.2.4708: PHP test files are not recognized
patch 8.2.4707: redrawing could be a bit more efficient
patch 8.2.4706: buffer remains active with WinClosed and tabpages
patch 8.2.4705: jump list marker disappears
patch 8.2.4704: using "else" after return or break increases indent
patch 8.2.4703: memory leak in handling 'cinscopedecls'
patch 8.2.4702: C++ scope labels are hard-coded
patch 8.2.4701: Kuka Robot Language files not recognized
patch 8.2.4700: buffer remains active if WinClosed event throws an exception
patch 8.2.4699: hard to reproduce hang when reading from a channel
patch 8.2.4698: Vim9: script variable has no flag that it was set
patch 8.2.4697: Vim9: crash when adding a duplicate key to a dictionary
patch 8.2.4696: delete() with "rf" argument does not report a failure
patch 8.2.4695: JSON encoding could be faster
patch 8.2.4694: avoidance of #elif causes more preproc nesting
patch 8.2.4693: new regexp does not accept pattern "\%>0v"
patch 8.2.4692: no test for what 8.2.4691 fixes
patch 8.2.4691: solution for <Cmd> in a mapping causes trouble
patch 8.2.4690: channel tests fail on MS-Windows
patch 8.2.4689: using <Cmd> in a mapping does not work for mouse keys
patch 8.2.4688: new regexp engine does not give an error for "\%v"
patch 8.2.4687: "vimgrep /\%v/ *" may cause a crash
patch 8.2.4686: configure doesn't find the Motif library with Cygwin
patch 8.2.4685: when a swap file is found for a popup there is no dialog
patch 8.2.4684: cannot open a channel on a Unix domain socket
patch 8.2.4683: verbose check with dict_find() to see if a key is present
patch 8.2.4682: Vim9: can use :unlockvar for const variable
patch 8.2.4681: build fails with a combination of features
patch 8.2.4680: build failure without +postscript
patch 8.2.4679: cannot have expandcmd() give an error message for mistakes
patch 8.2.4678: Vim9: not all code is tested
patch 8.2.4677: the Athena GUI support is outdated
patch 8.2.4676: test fails with different error
patch 8.2.4675: no error for missing expression after :elseif
patch 8.2.4674: cannot force getting MouseMove events
patch 8.2.4673: redrawing a split window is slow when using CTRL-F and CTRL-B
patch 8.2.4672: using :normal with Ex mode may make :substitute hang
patch 8.2.4671: 'wildignorecase' is sometimes not used for glob()
patch 8.2.4670: memory allocation failures for new tab page not tested
patch 8.2.4669: in compiled code len('string') is not inlined
patch 8.2.4668: buffer allocation failures insufficiently tested
patch 8.2.4667: expandcmd() fails on an error
patch 8.2.4666: Vim9: assignment not recognized in skipped block
patch 8.2.4665: popup with "minwidth" and scrollbar not updated properly
patch 8.2.4664: Elvish files are not recognized
patch 8.2.4663: occasional crash when running the GUI tests
patch 8.2.4662: no error for using out of range list index
patch 8.2.4661: Coverity warning for using uninitialized variable
patch 8.2.4660: cursorcolumn is sometimes not correct
patch 8.2.4659: invalid memory access when using printable function name
patch 8.2.4658: org-mode files are not recognized
patch 8.2.4657: errors for functions are sometimes hard to read
patch 8.2.4656: Vim9: can't use item from "import autoload" with autoload dir
patch 8.2.4655: cmdline completion popup menu positioned wrong
patch 8.2.4654: missing changes for import check
patch 8.2.4653: "import autoload" does not check the file name
patch 8.2.4652: leaking memory if assignment fails
patch 8.2.4651: test fails because path differs
patch 8.2.4650: "import autoload" only works with using 'runtimepath'
patch 8.2.4649: various formatting problems
Update runtime files
patch 8.2.4648: handling LSP messages is a bit slow
patch 8.2.4647: "source" can read past end of copied line
patch 8.2.4646: using buffer line after it has been freed
patch 8.2.4645: 'shortmess' changed when session does not store options
patch 8.2.4644: redrawing too often when 'relativenumber' is set
patch 8.2.4643: Vim9: variable may be locked unintentionally
patch 8.2.4642: Vim9: in :def function script var cannot be null
patch 8.2.4641: may mark the wrong window for redrawing
patch 8.2.4640: some boolean options use "long" instead of "int"
patch 8.2.4639: not sufficient parenthesis in preprocessor macros
patch 8.2.4638: superfluous check if a redraw is needed for 'cursorline'
patch 8.2.4637: warning for using uninitialized variable
patch 8.2.4636: not using Visual range
patch 8.2.4635: tests using null list or dict fail
patch 8.2.4634: Vim9: cannot initialize a variable to null_list
patch 8.2.4633: Visual range does not work before command modifiers
patch 8.2.4632: using freed memory in flatten()
patch 8.2.4631: crash when switching window in BufWipeout autocommand
patch 8.2.4630: 'cursorline' not always updated with 'culopt' is "screenline"
patch 8.2.4629: flattennew() makes a deep copy unnecessarily
patch 8.2.4628: not enough testing for 2/3 letter substitute commands
patch 8.2.4627: flatten() does not use maxdepth correctly
patch 8.2.4626: Visual area not updated when removing sign in Visual mode
patch 8.2.4625: old Coverity warning for resource leak
patch 8.2.4624: old Coverity warning for resource leak
patch 8.2.4623: Coverity warns for using uninitialized field
patch 8.2.4622: Vim9: crash with :execute and :finish
patch 8.2.4621: crash when using the tabline right-click menu
patch 8.2.4620: two letter substitute commands don't work
patch 8.2.4619: mapping is cancelled when mouse moves and popup is visible
patch 8.2.4618: cmdline completion does not recognize single letter commands
patch 8.2.4617: no completion for :scriptnames
patch 8.2.4616: Vim9: Declarations in a {} block of a user command remain
patch 8.2.4615: mapping with escaped bar does not work in :def function
patch 8.2.4614: redrawing too much when 'cursorline' is set
patch 8.2.4613: return type of swapfile_unchanged() is wrong
patch 8.2.4612: Vim9: cannot use a recursive call in a nested function
patch 8.2.4611: typos in tests; one lua line not covered by test
patch 8.2.4610: some conditions are always true
patch 8.2.4609: :unhide does not check for failing to close a window
patch 8.2.4608: getcompletion() does not work when 'wildoptions' has "fuzzy"
patch 8.2.4607: sourcing buffer lines may lead to errors for conflicts
patch 8.2.4606: test fails because of changed error message
patch 8.2.4604: error for redefining a script item may be confusing
patch 8.2.4603: sourcing buffer lines is too complicated
patch 8.2.4602: Vim9: not enough test coverage for executing :def function
patch 8.2.4601: Vim9: not enough test coverage for executing :def function
patch 8.2.4600: Vim9: not enough test coverage for executing :def function
patch 8.2.4599: GTK: get assertion errors when scrolling a split window
patch 8.2.4598: profile completion test sometimes fails
patch 8.2.4597: LuaV_debug() not covered by tests
patch 8.2.4596: installing tutor binary may fail
patch 8.2.4595: X11: using --remote-wait may keep the CPU busy
Update runtime files
patch 8.2.4594: need to write script to a file to be able to source them
patch 8.2.4593: unnecessary call to redraw_later()
patch 8.2.4592: search continues after giving E1204
patch 8.2.4591: cursor line not updated when a callback moves the cursor
patch 8.2.4590: Vim9: range type check has wrong offset
patch 8.2.4589: cannot index the g: dictionary
patch 8.2.4588: mapping with key after other matching mapping does not work
patch 8.2.4587: Vim9: double free after unpacking a list
patch 8.2.4586: Vim9: no error for using lower case name for "func" argument
patch 8.2.4585: cannot use keypad page-up/down for completion menu
patch 8.2.4584: error for using autoload function in custom completion
patch 8.2.4583: screendump test fails
patch 8.2.4582: useless code handling a type declaration
patch 8.2.4581: null types not fully tested
patch 8.2.4580: Vim9: incorrect error for shadowing variable
patch 8.2.4579: cannot use page-up and page-down in the cmdline popup menu
patch 8.2.4578: no warning when autoload script for completion has an error
patch 8.2.4577: message test is flaky
patch 8.2.4576: Vim9: error for comparing with null can be annoying
patch 8.2.4575: Vim9: test for profiling still fails
patch 8.2.4574: Vim9: test for profiling fails
patch 8.2.4573: a nested function is compiled for debugging without context
patch 8.2.4572: Vim9: return type "any" is changed to first returned type
patch 8.2.4571: not all gdb files are recognized
patch 8.2.4570: no command line completion for :profile and :profdel
patch 8.2.4569: Coverity warning for not using a return value
patch 8.2.4568: getmousepos() does not compute the column below the last line
patch 8.2.4567: bracketed paste doesn't work well in Visual linewise mode
patch 8.2.4566: check for existing buffer in session file may not work
patch 8.2.4565: no command line completion for :breakadd and :breakdel
patch 8.2.4564: running test leaves file behind
patch 8.2.4563: "z=" in Visual mode may go beyond the end of the line
patch 8.2.4562: linear tag search is not optimal
patch 8.2.4561: build failure with some combination of features
patch 8.2.4560: suspending with CTRL-Z does not work on DragonFlyBSD
patch 8.2.4559: getmousepos() returns the screen column
patch 8.2.4558: Motif: using default colors does not work as expected
patch 8.2.4557: confusing comment about 'cursorlineopt'
patch 8.2.4556: test fails without the +job or +channel feature
patch 8.2.4555: getmousepos() returns the wrong column
patch 8.2.4554: Vim9: using null values not sufficiently tested
patch 8.2.4553: linear tag search is a bit slow
patch 8.2.4552: in a :def function "put = expr" does not work
patch 8.2.4551: when mapping <Esc> terminal codes are not recognized
patch 8.2.4550: Motif: cannot set the color of the scrollbar thumb
patch 8.2.4549: cannot build with Motif and editres
patch 8.2.4548: script-local function is deleted when used in a funcref
patch 8.2.4547: the neXTaw GUI is old and does not work well
patch 8.2.4546: duplicate #undef
patch 8.2.4545: MS-Windows: the installed icon is low resolution
patch 8.2.4544: Coverity warnings for not using returned value
patch 8.2.4543: Coverity warning for refactored tag search code
patch 8.2.4542: Vim9: "break" inside try/catch not handled correctly
patch 8.2.4541: Crash in debugger when a variable is not available
patch 8.2.4540: line number for error is off by one
patch 8.2.4539: when comparing special v:none and v:null are handled the same
patch 8.2.4538: the find_tags_in_file() function is too long
patch 8.2.4537: output from linter and language server shows up in git
patch 8.2.4536: debugger test fails when breaking on expression
patch 8.2.4535: filename modifer ":8" removes the filename
patch 8.2.4534: Vim9: "is" operator with empty string and null returns true
patch 8.2.4533: Vim9: no test that after assigning null type is still checked
patch 8.2.4532: suspending with CTRL-Z does not work on OpenBSD
patch 8.2.4531: LGTM warnings for condition and buffer size
patch 8.2.4530: making comparison with null work changes legacy behavior
Update runtime files
patch 8.2.4529: Vim9: comparing partial with function fails
patch 8.2.4528: crash when using null_function for a partial
patch 8.2.4527: the Athena GUI is old and does not work well
patch 8.2.4526: Vim9: cannot set variables to a null value
patch 8.2.4525: some GUI tests don't work on Athena
patch 8.2.4524: MS-Windows: cannot build with some sodium libraries
patch 8.2.4523: when gvim is started maximized the 'window' option isn't set
patch 8.2.4522: GUI test fails with Motif
patch 8.2.4521: build failure without the +diff feature
patch 8.2.4520: using wrong highlight for cursor line number
patch 8.2.4519: Vim9: Can still use ":fini" and ":finis" for ":finish"
patch 8.2.4518: the binary tag search feature is always enabled
patch 8.2.4517: MS-Windows: cannot specify location of sodium library
patch 8.2.4516: build failure without the +eval feature
patch 8.2.4515: old subsitute syntax is still supported
patch 8.2.4514: Vim9: some flow commands can be shortened
patch 8.2.4513: window-local directory is not applied if 'acd' fails
patch 8.2.4512: the find_tags_in_file() function is much too long
patch 8.2.4511: filetype test fails
patch 8.2.4510: Vim9: shortening commands leads to confusing script
patch 8.2.4509: Vim9: can declare a variable with ":va"
patch 8.2.4508: Vim9: cannot assign to a global variable on the command line
patch 8.2.4507: test fails because of new error message
patch 8.2.4506: "pattern not found" for :global is not an error message
patch 8.2.4505: Vim9: outdated "autocmd nested" still works
patch 8.2.4504: when there is a partially matching map full map may not work
patch 8.2.4503: Vim9: there is no point in supporting :Print and :mode
patch 8.2.4502: in the GUI a modifier is not recognized after CTRL-X
patch 8.2.4501: with 'showbreak' set cursor displayed in wrong position
patch 8.2.4500: Vim9: can declare a global variable on the command line
patch 8.2.4499: Vim9: at the script level declarations leak to next block
patch 8.2.4498: using <Plug> with "noremap" does not work
patch 8.2.4497: wrong color for half of wide character next to pum scrollbar
patch 8.2.4496: Coverity gives warnings after tags code refactoring
patch 8.2.4495: help test fails in 24 line terminal
patch 8.2.4494: the find_tags() function is much too long
patch 8.2.4493: options test fails in the GUI
patch 8.2.4492: no error if an option is given a value with ":let &opt = val"
patch 8.2.4491: MS-Windows makefile dependencies are outdated
patch 8.2.4490: terminal focus reporting only works for xterm-like terminals
patch 8.2.4489: failing test for comparing v:null with number
patch 8.2.4488: build error with +eval but without +channel or +job
patch 8.2.4487: Vim9: cannot compare with v:null
patch 8.2.4486: MS-Windows GUI: slow scrolling with maximized window
patch 8.2.4485: compiler warning for uninitialized variable
patch 8.2.4484: Vim9: some error messages are not tested
patch 8.2.4483: command completion makes two rounds to collect matches
patch 8.2.4482: no fuzzy cmdline completion for user defined completion
patch 8.2.4481: cmdline popup menu not removed when 'lazyredraw' is set
patch 8.2.4480: suspending with CTRL-Z does not work on Android
patch 8.2.4479: no fuzzy completieon for maps and abbreviations
patch 8.2.4478: crash when using fuzzy completion
patch 8.2.4477: crash when using fuzzy completion
Update runtime files.
patch 8.2.4476: operator name spelled wrong
patch 8.2.4475: fuzzy cmdline completion does not work for lower case
patch 8.2.4474: memory allocation failures not tested in quickfix code
patch 8.2.4473: Coverity warnds for not checking return value of ftell()
patch 8.2.4472: Coverity warns for use of a freed function name
patch 8.2.4471: Coverity warns for uninitialized variable
patch 8.2.4470: Coverity warns for uninitialized variable
patch 8.2.4469: Coverity warns for uninitialized variable
patch 8.2.4468: Coverity warns for uninitialized struct member
patch 8.2.4467: running filetype test leaves file behind
patch 8.2.4466: MS-Windows: illegal memory access in installer
patch 8.2.4465: fuzzy completion does not order matches properly
patch 8.2.4464: Dtrace files are recognized as filetype D
patch 8.2.4463: completion only uses strict matching
patch 8.2.4462: not enough testing for quickfix code
patch 8.2.4461: MS-Windows: garbage characters on stdout with VIMDLL
patch 8.2.4460: Vim9: wrong error for defining dict function
patch 8.2.4459: Vim9: compiling sort() call fails with unknown arguments
patch 8.2.4458: Vim9: compiling filter() call fails with unknown arguments
patch 8.2.4457: the GPM library can only be linked statically
patch 8.2.4456: terminal test may fail on some machines
patch 8.2.4455: accepting one and zero for second sort() argument is strange
patch 8.2.4454: resetting cmdwin_type only for one situation
patch 8.2.4453: :helpgrep may free an option that was not allocated
patch 8.2.4452: test for what 8.2.4436 fixes does not check for regression
patch 8.2.4451: sort() fails when ignoring case
patch 8.2.4450: list sort test fails
patch 8.2.4449: vim9: function argument of sort() not checked at compile time
patch 8.2.4448: filetype detection is failing
patch 8.2.4447: Vim9: can still use s:var in a compiled function
patch 8.2.4446: Vim9: cannot refer to a global function like a local one
patch 8.2.4445: exit test fails on MS-Windows anyway
patch 8.2.4444: beep caused by test
patch 8.2.4443: regexp pattern test fails on Mac
patch 8.2.4442: test for error reading input fails on MS-Windows
patch 8.2.4441: Vim9: function argument of filter() not checked like map()
patch 8.2.4440: crash with specific regexp pattern and string
patch 8.2.4439: accepting "iso8859" 'encoding' as "iso-8859-"
patch 8.2.4438: crash on exit when using cmdline window
patch 8.2.4437: vartabs test fails on MS-Windows
patch 8.2.4436: crash with weird 'vartabstop' value
patch 8.2.4435: dead code in checking map() arguments
patch 8.2.4434: duplicate check for cmdline window
patch 8.2.4433: CI: cannot see interface versions for MS-Windows
patch 8.2.4432: cannot use settabvar() while the cmdline window is open
patch 8.2.4431: unnecessary condition when assigning to a variable
patch 8.2.4430: GTK: crash when using 'guiligatures' and reading from stdin
patch 8.2.4429: using script-local function from the wrong script
patch 8.2.4428: crash when switching tabpage while in the cmdline window
Update runtime files
patch 8.2.4427: getchar() may return modifiers if no character is available
patch 8.2.4426: map() function on string and blob does not check types
patch 8.2.4425: map() function does not check function arguments
patch 8.2.4424: ".gts" and ".gjs" files are not recognized
patch 8.2.4423: "make nvcmdidxs" fails
patch 8.2.4422: autochdir test fails on MS-Windows
patch 8.2.4421: some installed files and directories have wrong permissions
patch 8.2.4420: menu translations are inconsistent
patch 8.2.4419: illegal memory access when using 20 highlights
patch 8.2.4418: crash when using special multi-byte character
patch 8.2.4417: using NULL pointer
patch 8.2.4416: Vim9: using a script-local function requires using "s:"
patch 8.2.4415: function argument name conflicts with C++ keyword
patch 8.2.4414: solidity files are not recognized
patch 8.2.4413: Vim9: Coverity warns for using NULL pointer
patch 8.2.4412: translation cleanup script does not remove empty lines at end
patch 8.2.4411: bicep files are not recognized
patch 8.2.4410: Vim9: some code not covered by tests
patch 8.2.4409: Vim9: some code not covered by tests
patch 8.2.4408: Vim9: some code not covered by tests
patch 8.2.4407: Vim9: some code not covered by tests
patch 8.2.4406: expand functions use confusing argument names
patch 8.2.4405: compiler warning for unused variable without +folding
patch 8.2.4404: Vim9: some code not covered by tests
patch 8.2.4403: ml_get error with nested folds and deleting lines
patch 8.2.4402: missing parenthesis may cause unexpected problems
patch 8.2.4401: map listing does not clear the rest of the command line
patch 8.2.4400: MS-Windows: cannot use the mouse in the console with VIMDLL
patch 8.2.4399: crash after ml_get error
patch 8.2.4398: some command completion functions are too long
patch 8.2.4397: crash when using many composing characters in error message
patch 8.2.4396: Python3 test fails
patch 8.2.4395: some code lines not covered by tests
patch 8.2.4394: UTF8 select mode test fails on MS-Windows
patch 8.2.4393: possible number overflow with nested folds
patch 8.2.4392: MS-Windows with VIMDLL: Escaping CSI is wrong
patch 8.2.4391: command line executed when typing Esc in the GUI
patch 8.2.4390: Vim9: list from declaration with inferred type not set
patch 8.2.4389: screenpos() does not handle a position in a closed fold
patch 8.2.4388: dead code in op_insert()
patch 8.2.4387: command line completion doesn't always work properly
patch 8.2.4386: still cannot build tiny version
patch 8.2.4385: cannot build tiny version
patch 8.2.4384: Vim9: error message not tested, some code not tested
patch 8.2.4383: Vim9: unused code lines
patch 8.2.4382: a custom 'tabline' may cause Esc to work like Enter
patch 8.2.4381: translation file listed twice
patch 8.2.4380: small differences between Chinese translation files
patch 8.2.4379: an empty change is reported to a listener
patch 8.2.4378: incsearch HL broken when calling searchcount in 'tabLine'
patch 8.2.4377: CI steps for Windows are a bit unorganized
patch 8.2.4376: not enough tests for command line completion
patch 8.2.4375: ctx_imports is not used
patch 8.2.4374: unreachable code
patch 8.2.4373: expression test fails
patch 8.2.4372: filetype detection from file contents is in legacy script
patch 8.2.4371: Vim9: can create a script variable from a legacy function
patch 8.2.4370: MS-Windows: libsodium.dll not included with the installer
patch 8.2.4369: redundant #ifdef argument
patch 8.2.4368: Amiga: a few compiler warnings
patch 8.2.4367: calling in_vim9script() multiple times
patch 8.2.4366: not enough tests for command line completion
patch 8.2.4365: sticky command modifiers are too sticky
patch 8.2.4364: MS-Windows: still running out of memory for a very long line
patch 8.2.4363: MS-Windows: running out of memory for a very long line
patch 8.2.4362: :retab may allocate too much memory
patch 8.2.4361: Vim9: some tests fail
patch 8.2.4360: Vim9: allowing use of "s:" leads to inconsistencies
patch 8.2.4359: crash when repeatedly using :retab
patch 8.2.4358: Vim9: line number of exception is not set
patch 8.2.4357: sticky command modifiers are too sticky
patch 8.2.4356: command line completion functions are very long
patch 8.2.4355: unnecessary call to check_colorcolumn()
patch 8.2.4354: dynamic loading of libsodium not handled properly
patch 8.2.4353: CI does not use the latest Lua and Python
patch 8.2.4352: ReScript files are not recognized
patch 8.2.4351: no coverage is measured on MS-Windows CI
patch 8.2.4350: FEAT_GUI_ENABLED defined but never used
patch 8.2.4349: FileChangedShell test fails on MS-Windows
patch 8.2.4348: "legacy exe cmd" does not do what one would expect
patch 8.2.4347: in some build setups UNUSED is not defined
patch 8.2.4346: a custom statusline may cause Esc to work like Enter
patch 8.2.4345: <amatch> is expanded like a file name for DirChangedPre
patch 8.2.4344: Amiga: header file included twice
patch 8.2.4343: when reloading not all properties are detected
Update runtime files.  (closes #9741)
patch 8.2.4342: CI will soon switch to other windows version
patch 8.2.4341: command line not redrawn when finishing popup menu
patch 8.2.4340: Amiga: mch_can_exe() is not implemented
patch 8.2.4339: CTRL-A does not work properly with the cmdline popup menu
patch 8.2.4338: an error from an expression mapping messes up the display
Update runtime files
patch 8.2.4337: part of condition is always true
patch 8.2.4336: using :filter for :scriptnames does not work
patch 8.2.4335: no autocommand event triggered before changing directory
patch 8.2.4334: command line popup menu not positioned correctly
patch 8.2.4333: cstack not always passed to where it is needed
patch 8.2.4332: Vim9: incomplete test for existing script variable in block
patch 8.2.4331: Vim9: no test for existing script variable in block
patch 8.2.4330: Vim9: no error if script imports itself
patch 8.2.4329: no support for end line number and column in 'errorformat'
patch 8.2.4328: command line complete matches cleard when typing character
patch 8.2.4327: may end up with no current buffer
patch 8.2.4326: "o" and "O" copying comment not sufficiently tested
patch 8.2.4325: 'wildmenu' only shows few matches
patch 8.2.4324: Vim9: script-local function name can start with "_"
patch 8.2.4323: Vim9: nested function name can start with "_"
patch 8.2.4322: Vim9: crash when using funcref with closure
patch 8.2.4321: Vim9: crash when using a funcref to a closure
patch 8.2.4320: Athena and Motif: when maximized scrollbar position is wrong
patch 8.2.4319: :put does not work properly in compiled function
patch 8.2.4318: various comment and indent mistakes, returning wrong zero
patch 8.2.4317: MS-Windows: Vim exits when Python 3 initialisation fails
patch 8.2.4316: __CYGWIN32__ is not defined on 64 bit systems
patch 8.2.4315: put in Visual mode not fully tested
patch 8.2.4314: test fails where lines are skipped
patch 8.2.4313: Vim9: cannot change type of list after making a slice
patch 8.2.4312: no error for using :vim9script in a :def function
patch 8.2.4311: Vim9: changing script variable type not caught compile time
patch 8.2.4310: Vim9: constant list and dict get a declaration type
patch 8.2.4309: Vim9: crash when using a partial in the wrong context
patch 8.2.4308: Vim9: cannot list autoload function
patch 8.2.4307: a few more messages should not be translated
patch 8.2.4306: no test for fixed perl filetype check
patch 8.2.4305: tex filetype detection fails
patch 8.2.4304: Vim9: slice() makes a copy but doesn't change the type
patch 8.2.4303: a few messages should not be translated
patch 8.2.4302: Vim9: return type of getline() is too strict
patch 8.2.4301: Vim9: type error for copy of dict
patch 8.2.4300: cannot build tiny version
patch 8.2.4299: SafeState autocommand interferes with debugging
patch 8.2.4298: divide by zero with huge tabstop value
patch 8.2.4297: Vim9: not all code covered by tests
patch 8.2.4296: Vim9: not all code covered by tests
Update runtime files; use compiled functions
Update runtime files.
patch 8.2.4295: Vim9: concatenating two lists may result in wrong type
patch 8.2.4294: MS-Windows: #ifdefs for Cygwin are too complicated
patch 8.2.4293: Vim9: when copying a list it gets type list<any>
patch 8.2.4292: test fails
patch 8.2.4291: error number used twice
patch 8.2.4290: MS-Windows: using type casts for timer IDs
patch 8.2.4289: warnings reported by MSVC
patch 8.2.4288: preprocessor indents are inconsistent
patch 8.2.4287: cannot assign empty list with type to variable with list type
patch 8.2.4286: Vim9: strict type checking after copy() and deepcopy()
patch 8.2.4285: Vim9: type of item in for loop not checked properly
patch 8.2.4284: old mac resources files are no longer used
patch 8.2.4283: using a variable for the return value is not needed
patch 8.2.4282: restricted mode requires the -Z command line option
patch 8.2.4281: using freed memory with :lopen and :bwipe
patch 8.2.4280: list-dict test crashes
patch 8.2.4279: Vim9: cannot change item type with map() after range()
patch 8.2.4278: build with Athena GUI fails
patch 8.2.4277: Vim9: an import does not shadow a command modifier
patch 8.2.4276: separate test function for the GUI scrollbar
patch 8.2.4275: cannot use an autoload function from a package under start
patch 8.2.4274: Basic and form filetype detection is incomplete
Update runtime files
patch 8.2.4273: the EBCDIC support is outdated
patch 8.2.4272: Vim9 expr test fails without the channel feature
patch 8.2.4271: MS-Windows: cannot build with Ruby 3.1.0
patch 8.2.4270: generating nv_cmdidxs.h requires building Vim twice
patch 8.2.4269: Coverity warns for using a NULL pointer
patch 8.2.4268: CI log output is long
patch 8.2.4267: unused entry in keymap enum
patch 8.2.4266: compiler warning for uninitialized variable
patch 8.2.4265: autoload tests fails
patch 8.2.4264: Vim9: can use old style autoload function name
patch 8.2.4263: no test for the GUI find/replace dialog
patch 8.2.4262: some search tests fail
patch 8.2.4261: accessing invalid memory in a regular expression
patch 8.2.4260: Vim9: can still use a global function without g:
patch 8.2.4259: number of test functions for GUI events is growing
patch 8.2.4258: Coverity warns for array overrun
Update runtime files
patch 8.2.4257: Vim9: finding global function without g: prefix inconsistent
patch 8.2.4256: MS-Windows: compiler warnings when compiled with /W4
patch 8.2.4255: theoretical computation overflow
patch 8.2.4254: using short instead of int
patch 8.2.4253: using freed memory when substitute with function call
patch 8.2.4252: generating the normal command table at runtime is inefficient
patch 8.2.4251: vala files are not recognized
patch 8.2.4250: channel out callback test is flaky on Mac
patch 8.2.4249: the timeout limit for spell suggestions is always 5000
patch 8.2.4248: no proper test for moving the window separator
patch 8.2.4247: stack corruption when looking for spell suggestions
patch 8.2.4246: one error message not in errors.h
patch 8.2.4245: ":retab 0" may cause illegal memory access
patch 8.2.4244: MS-Windows: warning from MSVC on debug build
patch 8.2.4243: Lua tests fail with Lua 5.4.4
patch 8.2.4242: put in Visual mode cannot be repeated
patch 8.2.4241: some type casts are redundant
patch 8.2.4240: error for using flatten() in Vim9 script is unclear
patch 8.2.4239: build fails with unusual configuration
patch 8.2.4238: *.tf file could be fileytpe "tf" or "terraform"
patch 8.2.4237: record buffer wrong if character in Select mode was not typed
patch 8.2.4236: accessing freed memory
patch 8.2.4235: invalid check for NULL pointer
patch 8.2.4234: test_garbagecollect_now() does not check v:testing
patch 8.2.4233: crash when recording and using Select mode
patch 8.2.4232: some compilers don't like a goto label without statement
patch 8.2.4231: Vim9: map() gives type error when type was not declared
patch 8.2.4230: MS-Windows: set_guifontwide() is included but won't work
patch 8.2.4229: possible crash when invoking timer callback fails
patch 8.2.4228: no tests for clicking in the GUI tabline
patch 8.2.4227: Vim9: using "lockvar!" in :def function does not work
patch 8.2.4226: filter-map test fails
patch 8.2.4225: Vim9: depth argument of :lockvar not parsed in :def function
patch 8.2.4224: Vim9: no error when using a number for map() second argument
patch 8.2.4223: long/int compiler warnings; function arguments swapped
patch 8.2.4222: MS-Windows: clumsy way to suppress progress on CI
patch 8.2.4221: some functions in normal.c are very long
patch 8.2.4220: MS-Windows: some old compiler support remains
patch 8.2.4219: reading before the start of the line
patch 8.2.4218: illegal memory access with bracketed paste in Ex mode
patch 8.2.4217: illegal memory access when undo makes Visual area invalid
patch 8.2.4216: Vim9: cannot use a function from an autoload import directly
patch 8.2.4215: illegal memory access when copying lines in Visual mode
patch 8.2.4214: illegal memory access with large 'tabstop' in Ex mode
patch 8.2.4213: too much code for supporting old MSVC versions
patch 8.2.4212: window title test still fails in some configurations
patch 8.2.4211: window title test still fails in some configurations
patch 8.2.4210: window title test fails in some configurations
patch 8.2.4209: partial in 'opfunc' cannot use an imported function
patch 8.2.4208: using setbufvar() may change the window title
patch 8.2.4207: recursion test fails with MSVC
patch 8.2.4206: condition with many "(" causes a crash
patch 8.2.4205: the normal_cmd() function is too long
patch 8.2.4204: screenpos() has non-zero row for invisible text
patch 8.2.4203: entering a character with CTRL-V may include modifiers
patch 8.2.4202: Vim9: cannot export function that exists globally
patch 8.2.4201: when using the GUI CTRL-Z does not stop gvim
patch 8.2.4200: some tests do not clean up properly
patch 8.2.4199: MS-Windows: Support for MSVC 2003 is not useful
patch 8.2.4198: Vim9: the switch for executing instructions is too long
patch 8.2.4197: cannot use an import in the "expr" part of 'spellsuggest'
patch 8.2.4196: various file types not recognized
patch 8.2.4195: resizing terminal may cause to behave like CTRL-Z
patch 8.2.4194: MS-Windows: code for calculating font size is duplicated
patch 8.2.4193: cannot use an import in 'charconvert'
patch 8.2.4192: cannot use an import in 'printexpr'
patch 8.2.4191: json5 files are not recognized
patch 8.2.4190: all conceal tests are skipped without the screendumps feature
patch 8.2.4189: MS-Windows: code for "old look" is obsolete
Update runtime files
patch 8.2.4188: not all gitconfig files are recognized
patch 8.2.4187: gnuplot file not recognized
patch 8.2.4186: cannot use an import in 'patchexpr'
patch 8.2.4185: cannot use an import in 'indentexpr'
patch 8.2.4184: cannot use an import in 'includeexpr'
patch 8.2.4183: cannot use an import in 'formatexpr'
patch 8.2.4182: memory leak when evaluating 'diffexpr'
patch 8.2.4181: Vim9: cannot use an import in 'diffexpr'
patch 8.2.4180: 'balloonexpr' is evaluated in the current script context
patch 8.2.4179: 'foldtext' is evaluated in the current script context
patch 8.2.4178: Vim9: invalid error for return type of lambda when debugging
patch 8.2.4177: Vim9: autoload script not loaded after "vim9script noclear"
patch 8.2.4176: Vim9: cannot use imported function with call()
patch 8.2.4175: MS-Windows: runtime check for multi-line balloon is obsolete
patch 8.2.4174: Vim9: can use an autoload name in normal script
patch 8.2.4173: cannot use an import in 'foldexpr'
patch 8.2.4172: filetype detection for BASIC is not optimal
patch 8.2.4171: cannot invoke option function using autoload import
patch 8.2.4170: MS-Windows: still using old message API calls
patch 8.2.4169: MS-Windows: unnessary casts and other minor things
patch 8.2.4168: disallowing empty function name breaks existing plugins
patch 8.2.4167: Vim9: error message for old style import
patch 8.2.4166: undo synced when switching buffer in another window
patch 8.2.4165: the nv_g_cmd() function is too long
patch 8.2.4164: error in legacy code for function shadowing variable
patch 8.2.4163: no error for omitting function name after autoload prefix
patch 8.2.4162: Vim9: no error for redefining function with export
patch 8.2.4161: Vim9: warning for missing white space after imported variable
patch 8.2.4160: cannot change the register used for Select mode delete
patch 8.2.4159: MS-Windows: _WndProc() is very long
patch 8.2.4158: MS-Windows: memory leak in :browse
patch 8.2.4157: terminal test fails because Windows sets the title
patch 8.2.4156: fileinfo message overwrites echo'ed message
patch 8.2.4155: translating strftime() argument results in check error
patch 8.2.4154: ml_get error when exchanging windows in Visual mode
patch 8.2.4153: MS-Windows: Global IME is no longer supported
patch 8.2.4152: block insert with double wide character fails
patch 8.2.4151: reading beyond the end of a line
patch 8.2.4150: Coverity warns for using pointer after free
patch 8.2.4149: test override not restored, autocommand left behind
patch 8.2.4148: deleting any mapping may cause <ScritpCmd> to fail
patch 8.2.4147: E464 does not always include the offending command
patch 8.2.4146: Vim9: shadowed function can be used in compiled function
patch 8.2.4145: confusing error when using name of import for a function
patch 8.2.4144: cannot load libsodium dynamically
patch 8.2.4143: MS-Windows: IME support for Win9x is obsolete
patch 8.2.4142: build failure with normal features without persistent undo
patch 8.2.4141: Vim9 builtin functions test fails
patch 8.2.4140: maparg() does not indicate the type of script
patch 8.2.4139: using freed memory in expression abbreviation
patch 8.2.4138: Vim9: no error for return with argument when invalid
patch 8.2.4137: Vim9: calling import with and without method is inconsistent
patch 8.2.4136: Vim9: the "autoload" argument of ":vim9script" is not useful
patch 8.2.4135: Vim9: ":scriptnames" shows unloaded imported autoload script
patch 8.2.4134: MS-Windows: test for import with absolute path fails
patch 8.2.4133: output of ":scriptnames" goes into the message history
patch 8.2.4132: Vim9: wrong error message when autoload script can't be found
patch 8.2.4131: Vim9: calling function in autoload import does not work
patch 8.2.4130: MS-Windows: MSVC build may have libraries duplicated
patch 8.2.4129: building with +sound but without +eval fails
patch 8.2.4128: crash when method cannot be found
patch 8.2.4127: build failure without the +eval feature
patch 8.2.4126: crash on exit when built with dynamic Tcl
patch 8.2.4125: completion tests fail
patch 8.2.4124: Vim9: method in compiled function may not see script item
patch 8.2.4123: complete function cannot be import.Name
patch 8.2.4122: ":command Cmd" does not show custom completion argument
patch 8.2.4121: Visual test fails on MS-Windows
patch 8.2.4120: block insert goes over the end of the line
patch 8.2.4119: build failure when disabling the channel feature
patch 8.2.4118: using UNUSED for argument that is used
patch 8.2.4117: Vim9: wrong white space error after using imported item
patch 8.2.4116: Vim9: cannot use a method with a complex expression in :def
patch 8.2.4115: cannot use a method with a complex expression
patch 8.2.4114: Vim9: type checking for a funcref does not work for method
patch 8.2.4113: typo on DOCMD_RANGEOK results in not recognizing command
patch 8.2.4112: function not deleted at end of test
patch 8.2.4111: potential proglem when map is deleted while executing
patch 8.2.4110: Coverity warns for using NULL pointer
Update runtime files
patch 8.2.4109: MS-Windows: high dpi support is outdated
patch 8.2.4108: going over the end of the w_lines array
patch 8.2.4107: script context not restored after using <ScriptCmd>
patch 8.2.4106: going over the end of the w_lines array
patch 8.2.4105: translation related comment in the wrong place
patch 8.2.4104: Vim9: lower casing the autoload prefix causes problems
patch 8.2.4103: Vim9: variable declared in for loop not initialzed
patch 8.2.4102: Vim9: import cannot be used after method
patch 8.2.4101: warning for unused argument in tiny version
patch 8.2.4100: early return when getting the 'formatlistpat' value
patch 8.2.4099: Vim9: cannot use Vim9 syntax in mapping
patch 8.2.4098: typing "interrupt" at debug prompt may keep exception around
patch 8.2.4097: wrong number in error message on 32 bit system
patch 8.2.4096: Linux CI: unnecessarily installing packages
patch 8.2.4095: sed script not recognized by the first line
patch 8.2.4094: 'virtualedit' is window-local but using buffer-local enum
patch 8.2.4093: cached breakindent values not initialized properly
patch 8.2.4092: MacOS CI: unnecessarily doing "Install packages"
patch 8.2.4091: virtcol is recomputed for statusline unnecessarily
patch 8.2.4090: after restoring a session buffer order can be quite different
patch 8.2.4089: terminal test for current directory fails on FreeBSD
patch 8.2.4088: xxd cannot output everything in one line
patch 8.2.4087: cannot test items from an autoload script easily
patch 8.2.4086: "cctx" argument of find_func_even_dead() is unused
patch 8.2.4085: Vim9: no test for using import in legacy script
patch 8.2.4084: memory leak when looking for autoload prefixed variable
patch 8.2.4083: Vim9: no test for "vim9script autoload' using script variable
patch 8.2.4082: check for autoload file name and prefix fails
patch 8.2.4081: CodeQL reports problem in if_cscope causing it to fail
patch 8.2.4080: not sufficient test coverage for xxd
patch 8.2.4079: MS-Windows: "gvim --version" didn't work with VIMDLL
patch 8.2.4078: terminal test for current directory not used on FreeBSD
patch 8.2.4077: not all Libsensors files are recognized
patch 8.2.4076: memory leak in autoload import
patch 8.2.4075: test failures
patch 8.2.4074: going over the end of NameBuff
patch 8.2.4073: Coverity warns for using NULL pointer
patch 8.2.4072: Vim9: compiling function fails when autoload is not loaded
patch 8.2.4071: Vim9: no detection of return in try/endtry
patch 8.2.4070: using uninitialized memory when reading empty file
patch 8.2.4069: Vim9: import test fails on MS-Windows
patch 8.2.4068: Vim9: import test fails
patch 8.2.4067: Vim9: cannot call imported function with :call
patch 8.2.4066: Vim9: imported autoload script loaded again
patch 8.2.4065: computation overflow with large cound for :yank
patch 8.2.4064: foam files are not detected
patch 8.2.4063: Vim9: exported function in autoload script not found
patch 8.2.4062: match highlighting of tab too short
patch 8.2.4061: codecov bash script is deprecated
patch 8.2.4060: win_execute() slow on systems where getcwd()/chdir() is slow
patch 8.2.4059: Vim9: an expression of a map cannot access script-local items
patch 8.2.4058: Vim9: import test failure in wrong line
patch 8.2.4057: Vim9: not fully implementing the autoload mechanism
patch 8.2.4056: Vim9: memory leak when exporting function in autoload script
patch 8.2.4055: Vim9: line break in expression causes v:errmsg to be fillec
patch 8.2.4054: Vim9 script test fails
patch 8.2.4053: Vim9: autoload mechanism doesn't fully work yet
patch 8.2.4052: not easy to resize a window from a plugin
patch 8.2.4051: compiler complains about possibly uninitialized variable
patch 8.2.4050: Vim9: need to prefix every item in an autoload script
patch 8.2.4049: Vim9: reading before the start of the line with "$"
patch 8.2.4048: gcc complains about use of "%p" in printf
patch 8.2.4047: depending on the build features error messages are unused
Update runtime files
patch 8.2.4046: some error messages not in the right place
patch 8.2.4045: some global functions are only used in one file
patch 8.2.4044: Vim9: no error when importing the same script twice
patch 8.2.4043: using int for second argument of ga_init2()
patch 8.2.4042: Vim9: build error
patch 8.2.4041: using unitialized pointer
patch 8.2.4040: keeping track of allocated lines is too complicated
patch 8.2.4039: the xdiff library is linked in even when not used
patch 8.2.4038: various code not used when features are disabled
patch 8.2.4037: Insert mode completion is insufficiently tested
patch 8.2.4036: Vim9: script test file is getting too long
patch 8.2.4035: timer triggered at the debug prompt may cause trouble
patch 8.2.4034: Coverity warns for possibly using a NULL pointer
patch 8.2.4033: running filetype tests leaves directory behind
patch 8.2.4032: ATTRIBUTE_NORETURN is not needed
patch 8.2.4031: crash in xterm with only two lines
patch 8.2.4030: a script local funcref is not found from a mapping
patch 8.2.4029: debugging NFA regexp my crash, cached indent may be wrong
patch 8.2.4028: ml_get error with :doautoall and Visual area
patch 8.2.4027: import test fails on MS-Windows
patch 8.2.4026: ml_get error with specific win_execute() command
patch 8.2.4025: error for import not ending in .vim does not work for .vimrc
patch 8.2.4024: confusing error message if imported name is used directly
patch 8.2.4023: using uninitialized variable
patch 8.2.4022: two error messages in the wrong file
patch 8.2.4021: missing part of the :import changes
patch 8.2.4020: debugger test fails
patch 8.2.4019: Vim9: import mechanism is too complicated
patch 8.2.4018: ml_get error when win_execute redraws with Visual selection
patch 8.2.4017: gcc warns for misleading indent in Athena menu code
patch 8.2.4016: Vim9: incorrect error for argument that is shadowing var
patch 8.2.4015: build failure with tiny features
patch 8.2.4014: git and gitcommit file types not properly recognized
patch 8.2.4013: build failure without the spell feature
patch 8.2.4012: error messages are spread out
patch 8.2.4011: test fails because of changed error number
patch 8.2.4010: error messages are spread out
patch 8.2.4009: reading one byte beyond the end of the line
patch 8.2.4008: error messages are spread out
patch 8.2.4007: session does not restore help buffer properly
patch 8.2.4006: Vim9: crash when declaring variable on the command line
patch 8.2.4005: error messages are spread out
patch 8.2.4004: old compiler complains about struct init with variable
patch 8.2.4003: error messages are spread out
patch 8.2.4002: first char typed in Select mode can be wrong
patch 8.2.4001: insert complete code uses global variables
patch 8.2.4000: Coverity warns for checking for NULL pointer after using it
patch 8.2.3999: redundant check for NUL byte
patch 8.2.3998: asan error for adding zero to NULL
patch 8.2.3997: Vim9: not enough testing for extend() and map()
patch 8.2.3996: Vim9: type checking lacks information about declared type
patch 8.2.3995: not all sshconfig files are detected as such
patch 8.2.3994: Vim9: extend() complains about type when it was not declared
patch 8.2.3993: when recording a change in Select mode char appears twice
patch 8.2.3992: wrong local-additions in the help with language mix
patch 8.2.3991: Vim9: error when extending dict<any>
patch 8.2.3990: testing wrong operator
patch 8.2.3989: some insert completion code is not tested
patch 8.2.3988: tiny build fails
patch 8.2.3987: error messages are spread out
patch 8.2.3986: error messages are spread out
patch 8.2.3985: error messages are spread out
patch 8.2.3984: debugger test fails
patch 8.2.3983: error messages are spread out
patch 8.2.3982: some lines of code not covered by tests
patch 8.2.3981: Vim9: debugging a for loop doesn't stop before it starts
patch 8.2.3980: if 'operatorfunc' invokes an operator Visual mode is changed
patch 8.2.3979: Vim9: the feature is not mentioned in the right places
patch 8.2.3978: build error when using dynamycally loaded Python 3
patch 8.2.3977: error messages are spread out
patch 8.2.3976: FEARG_LAST is never used
patch 8.2.3975: error messages are spread out
patch 8.2.3974: Vim9: LISTAPPEND instruction does not check for a locked list
patch 8.2.3973: tiny build fails
patch 8.2.3972: error messages are spread out
patch 8.2.3971: build fails
patch 8.2.3970: error messages are spread out
patch 8.2.3969: value of MAXCOL not available in Vim script
patch 8.2.3968: build failure
patch 8.2.3967: error messages are spread out
patch 8.2.3966: when using feedkeys() abbreviations may be blocked
patch 8.2.3965: Vim9: no easy way to check if Vim9 script is supported
patch 8.2.3964: some common lisp and scheme files not recognized
patch 8.2.3963: build failure with tiny and small features
patch 8.2.3962: build fails for missing error message
patch 8.2.3961: error messages are spread out
patch 8.2.3960: error messages are spread out
patch 8.2.3959: error messages are spread out
patch 8.2.3958: build failure compiling xxd with "-std=c2x"
patch 8.2.3957: error messages are spread out
patch 8.2.3956: duplicate assignment
patch 8.2.3955: error messages are spread out
patch 8.2.3954: Vim9: no error for shadowing if script var is declared later
patch 8.2.3953: insert completion code is too complicated
patch 8.2.3952: first line not redrawn when adding lines to an empty buffer
Update runtime files
patch 8.2.3951: Vim9: memory leak when text after a nested function
patch 8.2.3950: going beyond the end of the line with /\%V
patch 8.2.3949: using freed memory with /\%V
patch 8.2.3948: Vim9: failure with partial with unknown argument count
patch 8.2.3947: unnecessary check for NULL pointer
patch 8.2.3946: when an internal error makes Vim exit the error is not seen
patch 8.2.3945: Vim9: partial variable argument types are wrong
patch 8.2.3944: insert mode completion functions are too long
patch 8.2.3943: compiler warning from gcc for uninitialized variable
patch 8.2.3942: Coverity reports a possible memory leak
patch 8.2.3941: SIGTSTP is not handled
patch 8.2.3940: match highlight disappears when doing incsearch for ":s/pat"
patch 8.2.3939: MS-Windows: fnamemodify('', ':p') does not work
patch 8.2.3938: line comment start is also found in a string
patch 8.2.3937: Insert mode completion function is too long
patch 8.2.3936: no proper test for maintaining change mark in diff mode
patch 8.2.3935: CTRL-U in Insert mode does not fix the indent
patch 8.2.3934: repeating line comment is undesired for "O" command
patch 8.2.3933: after ":cd" fails ":cd -" is incorrect
patch 8.2.3932: C line comment not formatted properly
patch 8.2.3931: Coverity reports a memory leak
patch 8.2.3930: getcmdline() argument has a misleading type
patch 8.2.3929: using unititialized variable
patch 8.2.3928: heredoc test fails
patch 8.2.3927: Vim9: double free when using lambda
patch 8.2.3926: build failure without the 'autochdir' option
patch 8.2.3925: diff mode confused by NUL bytes
patch 8.2.3924: Vim9: no error if something follows :enddef
patch 8.2.3923: Vim9: double free with split argument list in nested function
patch 8.2.3922: cannot build with dynamic Ruby 3.1
patch 8.2.3921: the way xdiff is used is inefficient
patch 8.2.3920: restoring directory after using another window is inefficient
patch 8.2.3919: Vim9: wrong argument for append() results in two errors
patch 8.2.3918: function list test fails
Update runtime files
patch 8.2.3917: the eval.txt help file is way too big
patch 8.2.3916: no error for passing an invalid line number to append()
patch 8.2.3915: illegal memory access when completing with invalid bytes
patch 8.2.3914: various spelling mistakes in comments
patch 8.2.3913: help for expressions does not mention Vim9 syntax
patch 8.2.3912: the ins_complete() function is much too long
patch 8.2.3911: Vim9: type check for filter() does not accept unknown
patch 8.2.3910: when compare function of sort() fails it does not abort
patch 8.2.3909: Containerfile using prefix name not recognized
patch 8.2.3908: cannot use a script-local function for 'foldtext'
patch 8.2.3907: error messages are spread out
patch 8.2.3906: Vim9 help still contains "under development" warnings
patch 8.2.3905: Dockerfile using prefix name not recognized
patch 8.2.3904: Vim9: skip expression type is not checked at compile time
patch 8.2.3903: "gM" does not count tabs as expected
patch 8.2.3902: Vim9: double free with nested :def function
patch 8.2.3901: Vim9: Cannot set 'cpo' in main .vimrc if using Vim9 script
patch 8.2.3900: it is not easy to use a script-local function for an option
patch 8.2.3899: Vim9: test for map() on string fails
patch 8.2.3898: Vim9: not sufficient testing for variable initialization
patch 8.2.3897: Vim9: second argument of map() and filter() not checked
patch 8.2.3896: Vim9: no test for nested function not available later
patch 8.2.3895: Vim9: confusing error when using function() with a number
patch 8.2.3894: Vim9: no proper type check for first argument of call()
patch 8.2.3893: Vim9: many local variables are initialized with an instruction
patch 8.2.3892: when modifyOtherKeys is used CTRL-C is not recognized
patch 8.2.3891: github CI: workflows may overlap
patch 8.2.3890: Vim9: type check for using v: variables is basic
patch 8.2.3889: duplicate code for translating script-local function name
patch 8.2.3888: the argument list may contain duplicates
patch 8.2.3887: E1135 is used for two different errors
patch 8.2.3886: can define autocmd for every event by using "au!"
patch 8.2.3885: arglist test fails
patch 8.2.3884: crash when clearing the argument list while using it
patch 8.2.3883: crash when switching to other regexp engine fails
Update runtime files
patch 8.2.3882: more duplicated code in f_getreginfo()
patch 8.2.3881: QNX: crash when compiled with GUI but using terminal
patch 8.2.3880: Solution filter files are not recognized
patch 8.2.3879: getreg() and getregtype() contain dead code
patch 8.2.3878: Vim9: debugger tries to read more lines than there are
patch 8.2.3877: function does not abort after a type error in compare
patch 8.2.3876: 'cindent' does not recognize inline namespace
patch 8.2.3875: gcc complains about buffer overrun
patch 8.2.3874: cannot highlight the number column for a sign
patch 8.2.3873: go.mod files are not recognized
patch 8.2.3872: Vim9: finddir() and uniq() return types can be more specific
patch 8.2.3871: list.c contains code for dict and blob
patch 8.2.3870: MS-Windows: wrong dir when using right-click context menu
patch 8.2.3869: Vim9: type checking for "any" is inconsistent
patch 8.2.3868: Vim9: function test fails
patch 8.2.3867: implementation of some list functions too complicated
patch 8.2.3866: Vim9: type checking global variables is inconsistent
patch 8.2.3865: Vim9: compiler complains about using "try" as a struct member
patch 8.2.3864: cannot disable requesting key codes from xterm
patch 8.2.3863: various build flags accidentally enabled
patch 8.2.3862: crash on exit with EXITFREE and using win_execute()
patch 8.2.3861: list of distributed files is outdated
patch 8.2.3860: Vim9: codecov struggles with the file size
patch 8.2.3859: Vim9: some code lines not tested
patch 8.2.3858: Vim9: not enough tests
patch 8.2.3857: Vim9: inconsistent error for using function()
patch 8.2.3856: Vim9: not enough tests
patch 8.2.3855: illegal memory access when displaying a blob
patch 8.2.3854: Vim9: inconsistent arguments for test functions
patch 8.2.3853: Vim9: not enough tests
patch 8.2.3852: Vim9: not enough tests
patch 8.2.3851: Vim9: overhead when comparing string, dict or function
patch 8.2.3850: illegal memory access when displaying a partial
patch 8.2.3849: functions implementing reduce and map are too long
patch 8.2.3848: cannot use reduce() for a string
patch 8.2.3847: illegal memory access when using a lambda with an error
patch 8.2.3846: no error when using control character for 'lcs' or 'fcs'
patch 8.2.3845: Vim9: test fails when the channel feature is missing
patch 8.2.3844: Vim9: no type error if assigning func(number) to func(string)
patch 8.2.3843: dep3patch files are not recognized
patch 8.2.3842: Vim9: can change locked list and list items
patch 8.2.3841: Vim9: outdated TODO items, disabled tests that work
patch 8.2.3840: useless test for negative index in check functions
patch 8.2.3839: using \z() with \z1 not tested for syntax highlighting
patch 8.2.3838: cannot use script-local function for setting *func options
patch 8.2.3837: QNX: crash when compiled with GUI but using terminal
patch 8.2.3836: Vim9: comment after expression not skipped to find NL
patch 8.2.3835: the inline-function example does not work
patch 8.2.3834: Test_out_cb often fails on Mac
patch 8.2.3833: error from term_start() not caught by try/catch
patch 8.2.3832: test fails because of changed error message
patch 8.2.3831: opfunc test fails when missing feature changes function name
patch 8.2.3830: error messages are spread out
patch 8.2.3829: no error when setting a func option to script-local function
patch 8.2.3828: when opening a terminal from a timer first typed char is lost
patch 8.2.3827: huntr badge does not really fit in the list
patch 8.2.3826: Vim9: using "g:Func" as funcref doesn't work in :def function
patch 8.2.3825: various comments could be improved
Update runtime files
patch 8.2.3824: no ASAN support for MSVC
patch 8.2.3823: test for visual replace is in wrong function
patch 8.2.3822: leaking memory in map() and filter(), no string in Vim9
patch 8.2.3821: ASAN test run fails
patch 8.2.3820: "vrc" does not replace composing characters
patch 8.2.3819: test fails because error message changed
patch 8.2.3818: cannot filter or map characters in a string
patch 8.2.3817: Vim9: Not using NL as command end does not work for :autocmd
patch 8.2.3816: compiler warning for posible loss of data on MS-Windows
patch 8.2.3815: Vim9: cannot have a multi-line dict inside a block
patch 8.2.3814: .csx files and .sln files are not recognized
patch 8.2.3813: confusing error when using :cc without error list
patch 8.2.3812: Vim9: leaking memory in numbered function test
patch 8.2.3811: the opfunc error test fails on a slow machine
patch 8.2.3810: Vim9: expr4 test fails on MS-Windows
patch 8.2.3809: Vim9: crash when garbage collecting a nested partial
patch 8.2.3808: Vim9: obsolete TODO items
patch 8.2.3807: Vim9: can call import with star directly
patch 8.2.3806: terminal focus test fails sometimes
patch 8.2.3805: i3config files are not recognized
patch 8.2.3804: script context not set when copying 'swf' and 'ts'
patch 8.2.3803: GUI: crash with 'writedelay' set using a terminal window
patch 8.2.3802: terminal in two windows test fails on some systems
patch 8.2.3801: if a terminal shows in two windows, only one is redrawn
patch 8.2.3800: when cross compiling the output of "uname" cannot be set
patch 8.2.3799: edit test hangs or fails
patch 8.2.3798: a :def callback function postpones an error message
patch 8.2.3797: no good reason to limit the message history in tiny version
patch 8.2.3796: the funcexe_T struct members are not named consistently
patch 8.2.3795: too many #ifdefs
patch 8.2.3794: Vim9: cannot find script-local func using "s:"
patch 8.2.3793: using "g:Func" as a funcref does not work in script context
patch 8.2.3792: setting *func options insufficiently tested
patch 8.2.3791: build error with +cindent but without +smartindent
patch 8.2.3790: test for term_gettitle() fails in some environments
patch 8.2.3789: Test_window_minimal_size can fail on a slow machine
patch 8.2.3788: lambda for option that is a function may be freed
patch 8.2.3787: no proper formatting of a C line comment after a statement
Use text area for environment in the bug template.
Update issue template.
patch 8.2.3786: test fails because of using Vim9 syntax in legacy function
patch 8.2.3785: running CI on MacOS with gcc is not useful
patch 8.2.3784: the help for options is outdated
patch 8.2.3783: confusing error for using a variable as a function
patch 8.2.3782: Vim9: no error if a function shadows a script variable
patch 8.2.3781: the option window script is outdated
patch 8.2.3780: ":cd" works differently on MS-Windows
patch 8.2.3779: using freed memory when defining a user command recursively
patch 8.2.3778: lambda debug test fails in some configurations
patch 8.2.3777: spell file write error not checked
patch 8.2.3776: when a tags file line is long a tag may not be found
patch 8.2.3775: Vim9: lambda compiled without outer context when debugging
patch 8.2.3774: test for command line height fails
patch 8.2.3773: wrong window size when a modeline changes 'columns'
patch 8.2.3772: timer info test fails on slow machine
patch 8.2.3771: Vim9: accessing freed memory when checking type
patch 8.2.3770: new compiler warnings from clang-12 and clang-13
patch 8.2.3769: zig files are not recognized
patch 8.2.3768: timer_info() has the wrong repeat value in a timer callback
patch 8.2.3767: crash when using NULL partial
patch 8.2.3766: converting a funcref to a string leaves out "g:"
patch 8.2.3765: Vim9: cannot use a lambda for 'opfunc' and others
patch 8.2.3764: cannot see any text when window was made zero lines
patch 8.2.3763: when editing the cmdline a callback may cause a scroll up
patch 8.2.3762: if quickfix buffer is wiped out getqflist() still returns it
patch 8.2.3761: focus change is not passed on to a terminal window
patch 8.2.3760: not automatically handling gnome terminal mouse like xterm
patch 8.2.3759: quickfix buffer becomes hidden while still in a window
patch 8.2.3758: options that take a function insufficiently tested
patch 8.2.3757: an overlong highlight group name is silently truncated
patch 8.2.3756: might crash when callback is not valid
patch 8.2.3755: Coverity warns for using a buffer in another scope
patch 8.2.3754: undesired changing of the indent of the first formatted line
Add Huntr badge.
patch 8.2.3753: Vim9: function unreferenced while called is never deleted
patch 8.2.3752: build error when using Photon GUI
patch 8.2.3751: cannot assign a lambda to an option that takes a function
patch 8.2.3750: error messages are everywhere
Update runtime files
patch 8.2.3749: error messages are everywhere
patch 8.2.3748: giving an error for an empty sign argument breaks a plugin
patch 8.2.3747: cannot remove highlight from an existing sign
patch 8.2.3746: cannot disassemble function starting with "debug" or "profile"
patch 8.2.3745: autochdir test fails without the +channel feature
patch 8.2.3744: E854 is not tested; some spelling suggestions are not tested
patch 8.2.3743: ":sign" can add a highlight group without a name
patch 8.2.3742: dec mouse test fails without gnome terminfo entry
patch 8.2.3741: using freed memory in open command
patch 8.2.3740: memory left allocated on exit when using Tcl
patch 8.2.3739: in wrong directory when using win_execute() with 'acd' set
patch 8.2.3738: screen is cleared when a FocusLost autocommand triggers
patch 8.2.3737: test fails without the 'autochdir' option
patch 8.2.3736: test fails without the channel feature
patch 8.2.3735: cannot use a lambda for 'imactivatefunc'
patch 8.2.3734: Vim9: crash when no pattern match found
patch 8.2.3733: Vim9: using "legacy" before range does not work
patch 8.2.3732: "set! termcap" test fails
patch 8.2.3731: "set! termcap" shows codes in one column, but not keys
patch 8.2.3730: "/etc/Muttrc.d/README" gets filetype muttrc
patch 8.2.3729: no support for squirrels
patch 8.2.3728: internal error when passing range() to list2blob()
patch 8.2.3727: in a gnome terminal keys are recognized as mouse events
patch 8.2.3726: README file in a config directory gets wrong filetype
patch 8.2.3725: cannot use a lambda for 'completefunc' and 'omnifunc'
patch 8.2.3724: build error for missing error message in small build
patch 8.2.3723: when using 'linebreak' a text property starts too early
patch 8.2.3722: Amiga: superfluous messages for freeing lots of yanked text
patch 8.2.3721: using memory freed by losing the clipboard selection
patch 8.2.3720: Vim9: Internal error when invoking closure in legacy context
patch 8.2.3719: MS-Windows: test sometimes runs into existing swap file
patch 8.2.3718: compiler warns for unused variable without +textprop
patch 8.2.3717: Vim9: error for constant list size is only given at runtime
patch 8.2.3716: Vim9: range without a command is not compiled
patch 8.2.3715: Vim9: valgrind reports spurious problems for a test
patch 8.2.3714: some unused assignments and ugly code in xxd
patch 8.2.3713: MS-Windows: no error if vimgrep pattern is not matching
patch 8.2.3712: cannot use Vim9 lambda for 'tagfunc'
patch 8.2.3711: Vim9: memory leak when compiling :elseif fails
patch 8.2.3710: Vim9: backtick expression expanded for :global
patch 8.2.3709: Vim9: backtick expression expanded when not desired
patch 8.2.3708: Vim9: test fails with different error
patch 8.2.3707: Vim9: constant expression of elseif not recognized
patch 8.2.3706: text property highlighting is used on Tab
patch 8.2.3705: cannot pass a lambda name to function() or funcref()
patch 8.2.3704: Vim9: cannot use a list declaration in a :def function
patch 8.2.3703: most people call F# "fsharp" and not "fs"
patch 8.2.3702: first key in dict is seen as curly expression and fails
patch 8.2.3701: Vim9: invalid LHS is not possible
patch 8.2.3700: text property highlighting continues over breakindent
patch 8.2.3699: the +title feature adds a lot of #ifdef but little code
patch 8.2.3698: match highlighting continues over breakindent
patch 8.2.3697: cannot drag a popup without a border
patch 8.2.3696: Vim9: error for invalid assignment when skipping
patch 8.2.3695: confusing error for missing key
patch 8.2.3694: cannot use quotes in the count of an Ex command
patch 8.2.3693: Coverity warns for possibly using a NULL pointer
patch 8.2.3692: Vim9: cannot use :func inside a :def function
patch 8.2.3691: build failure with small features
patch 8.2.3690: Vim9: "filter #pat# cmd" does not work
patch 8.2.3689: ex_let_one() is too long
patch 8.2.3688: the window title is not updated when dragging the scrollbar
patch 8.2.3687: blockwise insert does not handle autoindent properly
patch 8.2.3686: filetype detection often mixes up Forth and F#
patch 8.2.3685: Visual studio project files are not recognized
patch 8.2.3684: blockwise insert does not handle autoindent properly
patch 8.2.3683: Vim9: cannot use  in :...do commands
Update runtime files.
patch 8.2.3682: Vim9: assigning to a script variable drops the type
patch 8.2.3681: cannot drag popup window after click on a status line
patch 8.2.3680: repeated code in xxd
patch 8.2.3679: objc file detected as Octave
patch 8.2.3678: illegal memory access
patch 8.2.3677: after a put the '] mark is on the last byte
patch 8.2.3676: unused runtime file
patch 8.2.3675: using freed memory when vim_strsave() fails
patch 8.2.3674: when ml_get_buf() fails it messes up IObuff
patch 8.2.3673: crash when allocating signal stack fails
patch 8.2.3672: build failure with unsigned char
patch 8.2.3671: restarting Insert mode in prompt buffer too often
patch 8.2.3670: error checks repeated several times
patch 8.2.3669: buffer overflow with long help argument
patch 8.2.3668: messages may be corrupted
patch 8.2.3667: building libvterm fails with MSVC
patch 8.2.3666: libvterm is outdated
patch 8.2.3665: cannot use a lambda for 'tagfunc'
patch 8.2.3664: cannot adjust sign highlighting for 'cursorline'
patch 8.2.3663: using %S in printf() does not work correctly
patch 8.2.3662: illegal memory access if malloc() fails
patch 8.2.3661: test for put with large count fails
patch 8.2.3660: overflow check uses wrong number
patch 8.2.3659: integer overflow with large line number
patch 8.2.3658: duplicate code in xxd
patch 8.2.3657: Vim9: debug text misses one line of return statement
patch 8.2.3656: Vim9: no error for an evironment variable by itself
patch 8.2.3655: compiler warning for using size_t for int
patch 8.2.3654: GTK: a touch-drag does not update the selection
patch 8.2.3653: terminal ANSI colors may be wrong
patch 8.2.3652: can only get text properties one line at a time
patch 8.2.3651: Vim9: no error for :lock or :unlock with unknown variable
patch 8.2.3650: Vim9: for loop variable can be a list member
patch 8.2.3649: Vim9: error for variable declared in while loop
patch 8.2.3648: "verbose pwd" is incorrect after dropping files on Vim
patch 8.2.3647: GTK: when using ligatures the cursor is drawn wrong
patch 8.2.3646: using <sfile> in a function gives an unexpected result
patch 8.2.3645: Vim9: The "no effect" error is not given for all registers
patch 8.2.3644: count for 'operatorfunc' in Visual mode is not redone
patch 8.2.3643: header for source file is outdated
patch 8.2.3642: list of distributed files is outdated
patch 8.2.3641: xxd code has duplicate expressions
Update runtime files
patch 8.2.3640: freeze when calling term_wait() in a close callback
patch 8.2.3639: line commented out accidentally
patch 8.2.3638: getcompletion() always passes zero as position
patch 8.2.3637: typos in test files
patch 8.2.3636: Coverity warns for unreachable code
patch 8.2.3635: GTK: composing underline does not show
patch 8.2.3634: error for already defined function uses wrong line number
patch 8.2.3633: Vim9: line number of lambda is off by one
patch 8.2.3632: GTK3: undercurl does not get removed properly
patch 8.2.3631: "syntax enable" does not work properly in Vim9 context
patch 8.2.3630: printf() with %S does not handle multi-byte correctly
patch 8.2.3629: command completion in cmdline window uses global commands
patch 8.2.3628: looking terminal colors is a bit slow
patch 8.2.3627: difficult to know where the text starts in a window
patch 8.2.3626: "au! event" cannot be followed by another command
patch 8.2.3625: illegal memory access when C-indenting
patch 8.2.3624: when renaming a terminal buffer status text is not updated
patch 8.2.3623: "$*" is expanded to "nonomatch"
patch 8.2.3622: "verbose pwd" shows confusing info
patch 8.2.3621: build failure
patch 8.2.3620: memory leak reported in libtlib
patch 8.2.3619: cannot use a lambda for 'operatorfunc'
patch 8.2.3618: getcwd() is unclear about how 'autochdir' is used
patch 8.2.3617: ":verbose pwd" does not mention 'autochdir' was applied
patch 8.2.3616: arglist test does not clear the argument list consistently
patch 8.2.3615: wrong indent in first line if re-formatting with indent expr
patch 8.2.3614: zindex of popup windows not used when redrawing popup menu
patch 8.2.3613: :find test fails
patch 8.2.3612: using freed memory with regexp using a mark
patch 8.2.3611: crash when using CTRL-W f without finding a file name
patch 8.2.3610: crash when ModeChanged triggered too early
patch 8.2.3609: internal error when ModeChanged is triggered recursively
patch 8.2.3608: users who type "q:" instead of ":q" are confused
patch 8.2.3607: GTK3 screen updating is slow
patch 8.2.3606: file missing from list of distributed files
Update runtime files
Add missing change to version.c
patch 8.2.3605: cannot clear and unlinke a highlight group with hlset()
patch 8.2.3604: not all sudoers files are recognized
patch 8.2.3603: fish filetype not recognized
patch 8.2.3602: Python3 test fails with Python 3.10 on MS-Windows
patch 8.2.3601: check for overflow in put count does not work well
patch 8.2.3600: filetype test fails
patch 8.2.3599: not all gdbinit files are recognized
patch 8.2.3598: RouterOS filetype is not recognized
patch 8.2.3597: Vim seems to hang when writing a long text to a terminal
patch 8.2.3596: crash when using :pedit in Vim9 script
patch 8.2.3595: check for signed overflow might not work everywhere
patch 8.2.3594: xxd code is a bit difficult to understand
patch 8.2.3593: directory is wrong after executing "lcd" with win_execute()
patch 8.2.3592: Test_hlset fails when terminal has many columns
patch 8.2.3591: no event is triggered when closing a window
patch 8.2.3590: test for v:colornames sometimes fails
patch 8.2.3589: failure when "term_rows" of term_start() is an unusual value
patch 8.2.3588: break statement is never reached
patch 8.2.3587: compiler test fails with backslash file separator
patch 8.2.3586: command completion test fails
patch 8.2.3585: crash when passing float to "term_rows" of term_start()
patch 8.2.3584: "verbose set efm" reports location of the :compiler command
patch 8.2.3583: the "gd" and "gD" commands do not update search stats
Update runtime files
patch 8.2.3582: reading uninitialized memory when giving spell suggestions
patch 8.2.3581: reading character past end of line
patch 8.2.3580: gj does not move properly with a wide character
patch 8.2.3579: CI sometimes fails for MinGW
Add missing piece of patch 8.2.3578
patch 8.2.3578: manipulating highlighting is complicated
patch 8.2.3577: overflow check fails with 32 ints
patch 8.2.3576: some functions are not documented for use with a method
patch 8.2.3575: overflow check still fails when sizeof(int) == sizeof(long)
patch 8.2.3574: divide by zero
patch 8.2.3573: cannot decide whether to skip test that fails with 64 bit
patch 8.2.3572: memory leak when closing window and using "multispace"
patch 8.2.3571: some unicode control characters are considered printable
patch 8.2.3570: Test_very_large_count fails on 32bit systems
patch 8.2.3569: error for :let when vimrc is Vim 9 script
patch 8.2.3568: ctrl-hat test fails with Athena and Motif
patch 8.2.3567: CTRL-I in Insert mode is not tested
patch 8.2.3566: build failure on old systems when using nano timestamp
patch 8.2.3565: Makefile dependencies are outdated
patch 8.2.3564: invalid memory access when scrolling without valid screen
patch 8.2.3563: build failure with +eval but without GUI or +termguicolors
patch 8.2.3562: cannot add color names
patch 8.2.3561: cscope has a complicated way of giving an error message
patch 8.2.3560: using freed memory with lambda
patch 8.2.3559: loop variable recreated every time
Update runtime files
patch 8.2.3558: Vim9: asserting the wrong variable
patch 8.2.3557: Vim9: cannot call imported funcref at script level
patch 8.2.3556: filler lines are incorrect for other window in diff mode
patch 8.2.3555: ModeChanged is not triggered on every mode change
patch 8.2.3554: xxd has various way to exit
patch 8.2.3553: xxd test fails on MS-Windows
patch 8.2.3552: xxd revert does not handle end of line correctly
patch 8.2.3551: checking first character of url twice
patch 8.2.3550: completion() does not work properly
patch 8.2.3549: mistakes in test comments
patch 8.2.3548: GTK GUI crashen when reading from stdin
patch 8.2.3547: opening the quickfix window triggers BufWinEnter twice
patch 8.2.3546: build failure without the +eval feature
patch 8.2.3545: setcellwidths() may make 'listchars' or 'fillchars' invalid
patch 8.2.3544: Unix: may leak file descriptor using non-existing directory
patch 8.2.3543: swapname has double slash when 'directory' ends in it
patch 8.2.3542: too many comments are old style
patch 8.2.3541: compiler warning for unused variable in tiny version
patch 8.2.3540: the mark '] is wrong after put with a count
patch 8.2.3539: GTK3: with 'rightleft' set scrollbar may move unintentionally
patch 8.2.3538: else-if indenting is confusing
patch 8.2.3537: mode() does not return the right value in 'operatorfunc'
patch 8.2.3536: the do_highlight() function is way too long
patch 8.2.3535: if-else indenting is confusing
patch 8.2.3534: autoread test is a bit flaky
patch 8.2.3533: inefficient code in xxd
patch 8.2.3532: the previous '' mark is restored after moving the cursor
patch 8.2.3531: command line completion test fails on MS-Windows
patch 8.2.3530: ":buf \{a}" fails while ":edit \{a}" works
patch 8.2.3529: xxd usage output is incomplete
patch 8.2.3528: 'thesaurus' and 'thesaurusfunc' do not have the same scope
patch 8.2.3527: gcc complains about uninitialized variable
patch 8.2.3526: tests have clumsy check for X11 based GUI
patch 8.2.3525: option variable name does not match option name
patch 8.2.3524: GUI: ligatures are not used
patch 8.2.3523: duplicated code in xxd
patch 8.2.3522: cannot use \x and \u when setting 'listchars'
patch 8.2.3521: options completion test fails
patch 8.2.3520: cannot define a function for thesaurus completion
Update runtime files
patch 8.2.3519: TOML files are not recognized
patch 8.2.3518: Test_xrestore sometimes fails
patch 8.2.3517: TextChanged does not trigger after TextChangedI
patch 8.2.3516: terminal window does not have transparent background
patch 8.2.3515: nano time test fails on Mac and FreeBSD
patch 8.2.3514: autoread test with nano second time sometimes fails
patch 8.2.3513: using freed memory when using a timer and searching
patch 8.2.3512: timestamp test fails on some systems
patch 8.2.3511: Vim9: entry for loop variable is created every round
patch 8.2.3510: changes are only detected with one second accuracy
patch 8.2.3509: undo file is not synced
patch 8.2.3508: Vim9: bad separators for "g" and "s" insufficiently tested
patch 8.2.3507: generating proto files may fail
patch 8.2.3506: Vim9: special cases for "g" and "s" insufficiently tested
patch 8.2.3505: Vim9: build failure without the +eval feature
patch 8.2.3504: Vim9: warning for signed vs unsigned
patch 8.2.3503: Vim9: using g:pat:cmd is confusing
patch 8.2.3502: cannot enter password in shell command
patch 8.2.3501: tmux filetype dection is incomplete
patch 8.2.3500: Github CI fails to install clang
patch 8.2.3499: GUI geometry startup test fails
patch 8.2.3498: recover test may fail on some systems
patch 8.2.3497: put test fails when run by itself
patch 8.2.3496: crypt test fails if xxd was not installed yet
patch 8.2.3495: GUI geometry startup test fails on some systems
patch 8.2.3494: illegal memory access in utf_head_off
patch 8.2.3493: large count test fails on MS-Windows
patch 8.2.3492: crash when pasting too many times
patch 8.2.3491: xpm2 filetype dection is not so good
patch 8.2.3490: superfluous return statements
patch 8.2.3489: ml_get error after search with range
patch 8.2.3488: issue template is not easy to use
patch 8.2.3487: illegal memory access if buffer name is very long
patch 8.2.3486: illegal memory access with invalid sequence of commands
patch 8.2.3485: Python 3 test fails with Python 3.10
patch 8.2.3484: crash when going through spell suggestions
patch 8.2.3483: #ifdef for using sysinfo() is incomplete
patch 8.2.3482: reading beyond end of line ending in quote and backslash
patch 8.2.3481: failures when char is unsigned
patch 8.2.3480: test does not fail without the fix for a crash
patch 8.2.3479: crash when calling job_start with an invalid argument
patch 8.2.3478: still crash with error in :catch and also in :finally
patch 8.2.3477: startup test fails on MS-Windows
patch 8.2.3476: renaming a buffer on startup may cause using freed memory
patch 8.2.3475: expression register set by not executed put command
patch 8.2.3474: some places use "Vimscript" instead of "Vim script"
Update runtime files
patch 8.2.3473: some files with tcl syntax are not recognized
patch 8.2.3472: other crashes with empty search pattern not tested
patch 8.2.3471: crash when using CTRL-T after an empty search pattern
patch 8.2.3470: crash with error in :catch and also in :finally
patch 8.2.3469: some files with json syntax are not recognized
patch 8.2.3468: problem with :cd when editing file in non-existent directory
patch 8.2.3467: CursorHoldI event interferes with "CTRL-G U"
patch 8.2.3466: completion submode not indicated for virtual replace
patch 8.2.3465: cannot detect insert scroll mode
patch 8.2.3464: nginx files are not recognized
patch 8.2.3463: pattern matching with ModeChanged not tested
patch 8.2.3462: ModeChanged only uses one character for new_mode and old_mode
patch 8.2.3461: cannot distinguish Normal and Terminal-Normal mode
patch 8.2.3460: some type casts are not needed
patch 8.2.3459: Vim9: need more tests for empty string arguments
patch 8.2.3458: not all dictdconf files are recognized
patch 8.2.3457: MS-Windows Vim9: test executed and fails
patch 8.2.3456: Vim9: not all functions are tested with empty string argument
patch 8.2.3455: using a count with "gp" leaves '] in wrong position
patch 8.2.3454: using a count with "gp" leave cursor in wrong position
patch 8.2.3453: autocmd not executed when editing a directory
Correct Spanish translations
Update runtime files
patch 8.2.3452: MPD files are not recognized
patch 8.2.3451: not all apache files are recognized
patch 8.2.3450: coveralls action fails
patch 8.2.3449: sort fails if the sort compare function returns 999
patch 8.2.3448: :endtry after function call that throws not found
patch 8.2.3447: a couple of declarations are not ANSI C
patch 8.2.3446: not enough tests for empty string arguments
patch 8.2.3445: on Solaris longVersion may be declared twice
patch 8.2.3444: concealed text not revealed when leaving insert mode
patch 8.2.3443: Vim9: memory leak when and/or fails
patch 8.2.3442: Vim9: || and && are not handled at compile time
patch 8.2.3441: MS-Windows: vimtutor can't handle path with spaces
patch 8.2.3440: recover test fails if there is an old swap file
patch 8.2.3439: deleted lines go to wrong yank register
patch 8.2.3438: cannot manipulate blobs
patch 8.2.3437: compiler warnings for 32/64 bit usage
patch 8.2.3436: check for optional bool type has confusing return type
patch 8.2.3435: Vim9: dict is not passed to dict function
patch 8.2.3434: function prototype for trigger_modechanged() is incomplete
patch 8.2.3433: :delcommand does not take a -buffer option
patch 8.2.3432: octave/Matlab filetype detection does not work properly
patch 8.2.3431: completion for :disas sorts local functions first
patch 8.2.3430: no generic way to trigger an autocommand on mode change
patch 8.2.3429: leaking memory when assigning to list or dict
patch 8.2.3428: using freed memory when replacing
patch 8.2.3427: double free when list is copied
patch 8.2.3426: crash when deleting a listener in a listener callback
patch 8.2.3425: warning for using uninitialized variable
patch 8.2.3424: a sequence of spaces is hard to see in list mode
patch 8.2.3423: Vim9: list += list creates a new list in :def function
patch 8.2.3422: Vim9: no failure if return type differs from returned var
Update runtime files
patch 8.2.3421: a bit of code is not covered by tests
patch 8.2.3420: _REENTRANT defined more than once
patch 8.2.3419: a failing debug expression may make Vim unusable
patch 8.2.3418: garbage collection while evaluating may cause trouble
patch 8.2.3417: Vim9: a failing debug expression aborts script sourcing
patch 8.2.3416: second error is reported while exception is being thrown
patch 8.2.3415: Vim9: not all function argument types are properly checked
patch 8.2.3414: fullcommand() gives wrong name with buffer-local user command
patch 8.2.3413: Vim9: too many characters are allowed in import name
patch 8.2.3412: Vim9: importing the wrong file
patch 8.2.3411: Vim9: crash when using base name of import
patch 8.2.3410: crash with linebreak, listchars and large tabstop
patch 8.2.3409: reading beyond end of line with invalid utf-8 character
patch 8.2.3408: can delete a numbered function
patch 8.2.3407: using uninitialized memory with "let g:['bar'] = 2"
patch 8.2.3406: on some systems tests fail without _REENTRANT
patch 8.2.3405: cannot have a comment line in a {} block of a user command
patch 8.2.3404: Vim9: no error for white space before "("
patch 8.2.3403: memory leak for :retab with invalid argument
patch 8.2.3402: invalid memory access when using :retab with large value
patch 8.2.3401: Vim9: cannot use negative count with finddir() and findfile()
patch 8.2.3400: ":z!" is not supported
patch 8.2.3399: Octave files are not recognized
patch 8.2.3398: html text objects are not fully tested
patch 8.2.3397: no test for what 8.2.3391 fixes
patch 8.2.3396: when libcall() fails invalid pointer may be used
patch 8.2.3395: Vim9: expression breakpoint not checked in :def function
patch 8.2.3394: filler lines are wrong when changing text in diff mode
patch 8.2.3393: escaping for fish shell is skipping some characters
patch 8.2.3392: augroup completion escapes regexp pattern characters
patch 8.2.3391: crash with combination of 'linebreak' and other options
patch 8.2.3390: included xdiff code is outdated
patch 8.2.3389: cannot stop insert mode completion without side effects
patch 8.2.3388: fnamemodify('path/..', ':p') differs from using 'path/../'
patch 8.2.3387: compiler warning for non-static function
patch 8.2.3386: using uninitialized memory
Update runtime files
patch 8.2.3385: escaping for fish shell does not work properly
patch 8.2.3384: cannot disable modeline for an individual file
patch 8.2.3383: Vim9: completion for :disassemble adds parenthesis
patch 8.2.3382: crash when getting the type of a NULL partial
patch 8.2.3381: crash when using NULL list with sign functions
patch 8.2.3380: crash when using NULL string for funcref()
patch 8.2.3379: crash when using NULL job
patch 8.2.3378: MS-Windows: completing environment variables with % is wrong
patch 8.2.3377: Vim9: :disass completion does not understand "s:"
patch 8.2.3376: Vim9: no warning that "@r" does not do anything
patch 8.2.3375: using uninitialized memory
patch 8.2.3374: Pyret files are not recognized
patch 8.2.3373: text property test fails on MS-Windows
patch 8.2.3372: line2byte() value wrong when adding a text property
patch 8.2.3371: Vim9: :$ENV cannot be followed by ->func() in next line
patch 8.2.3370: Vim9: no check for white space before type in declaration
patch 8.2.3369: auto formatting after "cw" leaves cursor in wrong spot
patch 8.2.3368: not all Racket files are recognized
patch 8.2.3367: Vim9: :@r executing a register is inconsistent
patch 8.2.3366: Vim9: debugging elseif does not stop before condition
patch 8.2.3365: Vim9: cannot use option for all operations
patch 8.2.3364: Vim9: crash when :for is skipped
patch 8.2.3363: when :edit reuses the current buffer the alternate file is set
patch 8.2.3362: buffer overflow when completing long tag name
patch 8.2.3361: Vim9: crash with nested :while
patch 8.2.3360: user function completion fails with dict function
patch 8.2.3359: Vim9: error for type when variable is not set
patch 8.2.3358: structurizr files are not recognized
patch 8.2.3357: crash when 'virtualedit' is set and window is narrow
patch 8.2.3356: adding many text properties requires a lot of function calls
patch 8.2.3355: MS-Windows: compiler warning for 64-32 bit conversion
patch 8.2.3354: build failure with +byte_offset but without +textprop
patch 8.2.3353: Vim9: type of argument for negate not checked at compile time
patch 8.2.3352: Vim9: error for nested :enddef has wrong line number
patch 8.2.3351: Vim9: using a function by name may delete it
patch 8.2.3350: text properties test fails on MS-Windows
patch 8.2.3349: eval test for scriptversion fails
patch 8.2.3348: line2byte() returns wrong value after adding textprop
patch 8.2.3347: check for legacy script is incomplete
patch 8.2.3346: Vim9: no error for using "." for concatenation after ":vim9cmd"
Update runtime files
patch 8.2.3345: some code not covered by tests
patch 8.2.3344: vimscript test fails
patch 8.2.3343: Vim9: autoload test fails
patch 8.2.3342: test for :let errors fails
patch 8.2.3341: Vim9: function call aborted despite try/catch
patch 8.2.3340: accessing uninitialized pointer
patch 8.2.3339: Vim9: cannot lock a member in a local dict
patch 8.2.3338: Vim9: no type check when assigning a list range
patch 8.2.3337: completing "call g:" returns entries with just "g:"
patch 8.2.3336: behavior of negative index in list change changed
patch 8.2.3335: Vim9: not enough tests run with Vim9
patch 8.2.3334: Vim9: not enough tests run with Vim9
patch 8.2.3333: Vim9: not enough tests run with Vim9
patch 8.2.3332: Vim9: cannot assign to range in list
patch 8.2.3331: Coverity warns for using value without boundary check
patch 8.2.3330: Coverity reports using uninitialized field
patch 8.2.3329: v_lock not set when getting value of environment variable
patch 8.2.3328: Coverity error for not checking return value
patch 8.2.3327: no check for sysconf() failing
patch 8.2.3326: Vim9: no error passing an empty list of the wrong type
patch 8.2.3325: digraph test fails when LC_ALL is set to "C"
patch 8.2.3324: Vim9: Cannot use :silent with :endwhile
patch 8.2.3323: Vim9: Cannot use :silent with :endwhile
patch 8.2.3322: Vim9: checking type of dict does not check member type
patch 8.2.3321: some code is not tested
patch 8.2.3320: some local functions are not static
patch 8.2.3319: Coverity action on github does not work
patch 8.2.3318: Vim9: cannot ignore quotes in number at the command line
patch 8.2.3317: Vim9: No error for missing white space before return type
patch 8.2.3316: float test fails
patch 8.2.3315: cannot use single quote in a float number for readability
patch 8.2.3314: behavior of exists() in a :def function is unpredictable
patch 8.2.3313: unused code in win_exchange() and frame_remove()
patch 8.2.3312: Vim9: after "if false" line breaks in expression not skipped
patch 8.2.3311: Vim9: check for DO_NOT_FREE_CNT is very slow
patch 8.2.3310: Vim9: unpack assignment does not mention source of type error
patch 8.2.3309: Vim9: divide by zero causes a crash
patch 8.2.3308: Vim9: no runtime check for argument type with varargs only
patch 8.2.3307: Vim9: :echoconsole cannot access local variables
patch 8.2.3306: unexpected "No matching autocommands"
patch 8.2.3305: Vim9: :finally in skipped block not handled correctly
patch 8.2.3304: popup window title with wide characters is truncated
patch 8.2.3303: some structures could be smaller
patch 8.2.3302: Coverity is not run from github
patch 8.2.3301: memory allocation functions don't have their own place
patch 8.2.3300: Lua: can only execute on Vim command at a time
patch 8.2.3299: Vim9: exists() does not handle much at compile time
patch 8.2.3298: build failure with small features
patch 8.2.3297: cannot use all commands inside a {} block
patch 8.2.3296: Vim9: cannot add a number to a float
patch 8.2.3295: 'cursorline' should not apply to 'breakindent'
patch 8.2.3294: Lua: memory leak when adding dict item fails
patch 8.2.3293: finding completions may cause an endless loop
patch 8.2.3292: underscore in very magic pattern causes a hang
patch 8.2.3291: Coverity warns for not checking return value
patch 8.2.3290: Vim9: compiling dict may use pointer after free
patch 8.2.3289: compiler warning for unused variable with small features
patch 8.2.3288: cannot easily access namespace dictionaries from Lua
patch 8.2.3287: channel events not handled in BufEnter autocommand
patch 8.2.3286: win_enter_ext() has too many boolean arguments
patch 8.2.3285: scdoc filetype is not recognized
patch 8.2.3284: no error for insert() or remove() changing a locked blob
patch 8.2.3283: Julia filetype is not recognized
patch 8.2.3282: Vim9: error about using -complete without -nargs is confusing
patch 8.2.3281: Vim9: TODO items in tests can be taken care of
patch 8.2.3280: 'virtualedit' local to buffer is not the best solution
patch 8.2.3279: Vim9: cannot use block in cmdline window
patch 8.2.3278: Vim9: error when adding 1 to float
patch 8.2.3277: Vim9: compiled has() does not work properly
patch 8.2.3276: Vim9: exists() can only be evaluated at runtime
patch 8.2.3275: optimizer can use hints about ga_grow() normally succeeding
patch 8.2.3274: macro for printf format check can be simplified
patch 8.2.3273: autocmd test fails
patch 8.2.3272: cannot use id zero with prop_find()
patch 8.2.3271: Vim9: cannot use :command or :au with block in :def function
patch 8.2.3270: prop_find() finds property with ID -2
patch 8.2.3269: Vim9: wrong argument check for partial
patch 8.2.3268: cannot use a block with :autocmd like with :command
patch 8.2.3267: Vim9: crash when disassembling using deleted script variable
patch 8.2.3266: Vim9: assignment with two indexes may check next line
patch 8.2.3265: smartcase does not work correctly in very magic pattern
patch 8.2.3264: Vim9: assign test fails
patch 8.2.3263: Vim9: "..=" does not accept same types as the ".." operator
patch 8.2.3262: build failure when ABORT_ON_INTERNAL_ERROR is defined
patch 8.2.3261: Vim9: when compiling repeat(123, N) return type is number
patch 8.2.3260: build failure with small features
patch 8.2.3259: when 'indentexpr' causes an error did_throw may hang
patch 8.2.3258: error messages have the wrong text
patch 8.2.3257: calling prop_find() with -1 for ID gives errornous error
patch 8.2.3256: executable test may fail on new Ubuntu system
patch 8.2.3255: ci" finds following string but ci< and others don't
patch 8.2.3254: win_gettype() does not recognize a quickfix window
patch 8.2.3253: channel test fails randomly
patch 8.2.3252: duplicated code for adding buffer lines
patch 8.2.3251: listing builtin_gui as an available terminal is confusing
patch 8.2.3250: MS-Windows: cannot build with libsodium
patch 8.2.3249: Vim9: error for re-imported function with default argument
patch 8.2.3248: Vim9: error message for wrong input uses wrong line number
patch 8.2.3247: using uninitialized memory when checking for crypt method
patch 8.2.3246: memory use after free
patch 8.2.3245: the crypt key may appear in a swap partition
patch 8.2.3244: Lua 5.3 print() with a long string crashes
patch 8.2.3243: MS-Windows: "edit with multiple Vim" choice is less useful
patch 8.2.3242: Vim9: valgrind reports leaks in builtin function test
patch 8.2.3241: Vim9: memory leak when function reports an error
patch 8.2.3240: Lua print() does not work properly
patch 8.2.3239: Vim9: no error using heredoc for a number variable
patch 8.2.3238: Vim9: error message does not indicate the location
Update runtime files
patch 8.2.3237: when a builtin function gives an error processing continues
patch 8.2.3236: mode() does not indicate using CTRL-O in Select mode
patch 8.2.3235: cannot use lambda in {} block in user command
patch 8.2.3234: crash when printing long string with Lua
patch 8.2.3233: prop_list() and prop_find() do not indicate the buffer
patch 8.2.3232: system() does not work without a second argument
patch 8.2.3231: build failure with small features
patch 8.2.3230: Vim9: type error when function return type is not known yet
patch 8.2.3229: Vim9: runtime and compile time type checks are not the same
patch 8.2.3228: cannot use a simple block for the :command argument
patch 8.2.3227: 'virtualedit' can only be set globally
patch 8.2.3226: new digraph functions use old naming scheme
patch 8.2.3225: incsearch highlighting is attempted halfway a mapping
patch 8.2.3224: cannot call script-local function after :vim9cmd
patch 8.2.3223: Vim: using {} block in autoloade omnifunc fails
patch 8.2.3222: Vim9: cannot used loop variable later as lambda argument
patch 8.2.3221: Vim9: argument types are not checked at compile time
patch 8.2.3220: Test_term_setansicolors() fails in some configurations
patch 8.2.3219: :find searches non-existing directories
patch 8.2.3218: when using xchaha20 crypt undo file is not removed
patch 8.2.3217: build failure
patch 8.2.3216: Vim9: crash when using variable in a loop at script level
patch 8.2.3215: Vim9: argument types are not checked at compile time
patch 8.2.3214: MS-Windows: passing /D does not set the install location
patch 8.2.3213: NOCOMPOUNDSUGS entry in spell file not tested
patch 8.2.3212: Vim9: execution speed can be improved
patch 8.2.3211: Vim9: argument types are not checked at compile time
patch 8.2.3210: Vim9: searchpair() sixth argument is compiled
patch 8.2.3209: Vim9: lambda doesn't find block-local variable
patch 8.2.3208: dynamic library load error does not mention why it failed
patch 8.2.3207: Vim9: crash when compiling string fails
patch 8.2.3206: Vim9: argument types are not checked at compile time
patch 8.2.3205: Coverity reports a null pointer dereference
patch 8.2.3204: display garbled when 'cursorline' is set and lines wrap
patch 8.2.3203: Vim9: compiled string expression causes type error
patch 8.2.3202: Vim9: tests are only executed for legacy script
patch 8.2.3201: crash in test
patch 8.2.3200: Vim9: hard to guess where a type error is given
patch 8.2.3199: Vim9: execution speed can be improved
patch 8.2.3198: cannot use 'formatlistpat' for breakindent
patch 8.2.3197: error messages are spread out
patch 8.2.3196: Vim9: bool expression with numbers only fails at runtime
patch 8.2.3195: Vim9: unclear error when passing too many arguments to lambda
patch 8.2.3194: Vim9: argument types are not checked at compile time
patch 8.2.3193: screenpos() is wrong when 'display' is "lastline"
patch 8.2.3192: build failure with small version
patch 8.2.3191: Vim9: not enough code is tested
patch 8.2.3190: error messages are spread out
patch 8.2.3189: Vim9: error when using "try|"
patch 8.2.3188: Vim9: argument types are not checked at compile time
patch 8.2.3187: Vim9: popup timer callback is not compiled
patch 8.2.3186: Vim9: not all failures for import tested
patch 8.2.3185: Vim9: start of inline function found in comment line
patch 8.2.3184: cannot add a digraph with a leading space
patch 8.2.3183: duplicate error numbers
patch 8.2.3182: Vim9: crash when using removing items from a constant list
patch 8.2.3181: Vim9: builtin function test fails without channel feature
patch 8.2.3180: Vim9: memory leak when concatenating to an imported string
patch 8.2.3179: Vim9: cannot assign to an imported variable at script level
patch 8.2.3178: Vim9: the file name of an :import cannot be an expression
patch 8.2.3177: Vim9: can not use "for _ in expr" at script level
patch 8.2.3176: Vim9: no type error for comparing number with string
patch 8.2.3175: Vim9: using illegal pointer with nested lambdas.
patch 8.2.3174: Vim9: "legacy undo" finds "undo" variable
patch 8.2.3173: Vim9: argument types are not checked at compile time
patch 8.2.3172: MzScheme test fails
patch 8.2.3171: another illegal memory access in test
patch 8.2.3170: Illegal memory access in test
patch 8.2.3169: Vim9: cannot handle nested inline function
patch 8.2.3168: Vim9: type error for constant of type any
patch 8.2.3167: get E12 in a job callback when searching for tags
patch 8.2.3166: Vim9: nested autoload call error overruled by "Unknown error"
patch 8.2.3165: Vim9: in a || expression the error line number may be wrong
patch 8.2.3164: MS-Windows: reported version lacks patchlevel
patch 8.2.3163: location list window may open a wrong file
patch 8.2.3162: Vim9: argument types are not checked at compile time
patch 8.2.3161: Vim9: no error when reltime() has invalid arguments
patch 8.2.3160: 'breakindent' does not work well for bulleted lists
patch 8.2.3159: cursor displayed in wrong position after deleting line
patch 8.2.3158: strange error message when using islocked() with a number
patch 8.2.3157: crypt test may fail on MS-Windows
patch 8.2.3156: Vim9: term_getansicolors() test fails without +termguicolors
patch 8.2.3155: some option related code not covered by tests
patch 8.2.3154: Vim9: some type checks for builtin functions fail
patch 8.2.3153: URLs with a dash in the scheme are not recognized
patch 8.2.3152: Vim9: accessing "s:" results in an error
patch 8.2.3151: Vim9: profiling fails if nested function is also profiled
patch 8.2.3150: Vim9: argument types are not checked at compile time
patch 8.2.3149: some plugins have a problem with the error check
patch 8.2.3148: Vim9: function arg type check does not handle base offset
patch 8.2.3147: Vim9: profiling does not work with a nested function
patch 8.2.3146: Vim9: line number wrong for :execute argument
patch 8.2.3145: Vim9: profile test fails without profile feature
patch 8.2.3144: Vim9: no error when using an invalid value for a line number
patch 8.2.3143: Vim9: wrong context if lambda called from profiled function
patch 8.2.3142: Vim9: type check for has_key() argument is too strict
patch 8.2.3141: no error when using :complete for :command without -nargs
patch 8.2.3140: MS-Windows: ipv6 channel test is very flaky also without GUI
patch 8.2.3139: functions for string manipulation are spread out
patch 8.2.3138: debugger test fails
patch 8.2.3137: Vim9: no error when a line only has a variable name
patch 8.2.3136: no test for E187 and "No swap file"
patch 8.2.3135: Vim9: builtin function arguments not checked at compile time
patch 8.2.3134: crash when using typename() on a function reference
patch 8.2.3133: Vim9: memory leak when add() fails
patch 8.2.3132: compiler warns for size_t to colnr_T conversion.
patch 8.2.3131: MS-Windows: ipv6 channel test is very flaky in the GUI
patch 8.2.3130: Vim9: import test fails
patch 8.2.3129: Vim9: imported uninitialized list does not get type checked
patch 8.2.3128: Vim9: uninitialzed list does not get type checked
patch 8.2.3127: Vim9: no error when adding number to list of string
patch 8.2.3126: Vim9: for loop error reports wrong line number
patch 8.2.3125: variables are set but not used
patch 8.2.3124: Vim9: no error for white space between option and "=9"
patch 8.2.3123: Vim9: confusing error when using white space after option
patch 8.2.3122: with 'nowrap' cursor position is unexected in narrow window
patch 8.2.3121: 'listchars' "exceeds" character appears in foldcolumn
patch 8.2.3120: crypt with sodium test fails on MS-Windows
patch 8.2.3119: compiler warning for unused argument
patch 8.2.3118: Vim9: "any" type not handled correctly in for loop
patch 8.2.3117: Vim9: type not properly checked in for loop
Update runtime files
patch 8.2.3116: Vim9: crash when debugging a function with line continuation
patch 8.2.3115: Coverity complains about free_wininfo() use
patch 8.2.3114: Amiga-like systems: build error using stat()
patch 8.2.3113: no error when for loop variable shadows script variable
patch 8.2.3112: in rare cases the cursor may be somewhere in a folded line
patch 8.2.3111: Vim9: confusing error with extra whitespace before colon
patch 8.2.3110: a pattern that matches the cursor position is complicated
patch 8.2.3109: check for $DISPLAY never fails
patch 8.2.3108: test for remote_foreground() fails
patch 8.2.3107: Vim9: error for arguments while type didn't specify arguments
patch 8.2.3106: Vim9: confusing line number reported for error
patch 8.2.3105: Vim9: type of partial is wrong when it has arguments
patch 8.2.3104: Vim9: unspecified function type causes type error
patch 8.2.3103: swap test may fail on some systems
patch 8.2.3102: test for crash fix does not fail without the fix
patch 8.2.3101: missing function prototype for vim_round()
patch 8.2.3101: missing function prototype for vim_round()
patch 8.2.3100: Vim9: no error when using type with unknown number of args
patch 8.2.3099: Vim9: missing catch/finally not reported at script level
patch 8.2.3098: popup window test is flaky on MS-Windows with GUI
patch 8.2.3097: crash when using "quit" at recovery prompt
patch 8.2.3096: temp files remain after running tests
patch 8.2.3095: with 'virtualedit' set to "block" block selection is wrong
patch 8.2.3094: Test_popup_atcursor_pos() fails without the conceal feature
patch 8.2.3093: tablabel_tooltip test fails with Athena
patch 8.2.3092: Vim9: builtin function test fails without +channel feature
patch 8.2.3091: Vim9: default argument expr. cannot use previous argument
patch 8.2.3090: in rare cases the cursor may be somewhere in a folded line
patch 8.2.3089: garbage collection has useless code
patch 8.2.3088: with 'virtualedit' set to "block" Visual highlight is wrong
patch 8.2.3087: Gemtext files are not recognized
patch 8.2.3086: Vim9: breakpoint on "for" does not work
patch 8.2.3085: JSONC files are not recognized
patch 8.2.3084: Vim9: builtin function argument types are not checked
patch 8.2.3083: crash when passing null string to charclass()
patch 8.2.3082: a channel command "echoerr" does not show anything
patch 8.2.3081: cannot catch errors in a channel command
patch 8.2.3080: recover test fails on 32bit systems
patch 8.2.3079: Powershell core not supported by default
patch 8.2.3078: Vim9: profile test fails
patch 8.2.3077: Vim9: an error in a catch block is not reported
patch 8.2.3076: Vim9: using try in catch block causes a hang
patch 8.2.3075: xxd always reports an old version string
patch 8.2.3074: popup_atcursor() uses wrong position with concealing
patch 8.2.3073: when cursor is move for block append wrong text is inserted
patch 8.2.3072: "zy" does not work well when "virtualedit' is "block"
patch 8.2.3071: shell options are not set properly for PowerShell
patch 8.2.3070: not enough testing for shell use
patch 8.2.3069: error messages are spread out
patch 8.2.3068: Unicode tables are slightly outdated
patch 8.2.3067: building fails with Athena
patch 8.2.3066: Vim9: debugging lambda does not work
patch 8.2.3065: Vim9: error when sourcing script twice and reusing function
Update runtime files
patch 8.2.3064: Vim9: in script cannot set item in uninitialized list
patch 8.2.3063: crash when switching 'cryptmethod' to xchaha20 with undo file
patch 8.2.3062: internal error when adding several text properties
patch 8.2.3061: testing the shell option is incomplete and spread out
patch 8.2.3060: Vim9: cannot use ternary operator in parenthesis
patch 8.2.3059: Vim9: memory leak when using lambda
patch 8.2.3058: Vim9: cannot use ternary operator in parenthesis
patch 8.2.3057: Vim9: debugger test fails with normal features and +terminal
patch 8.2.3056: Vim9: using default value in lambda gives confusing error
patch 8.2.3055: strange error for assigning to "x.key" on non-dictionary
patch 8.2.3054: Vim9: unpack assignment using "_" after semicolon fails
patch 8.2.3053: Vim9: cannot assign to @@ in :def function
patch 8.2.3052: Vim9: "legacy call" does not work
patch 8.2.3051: Vim9: for loop with one list variable does not work
patch 8.2.3050: cannot recognize elixir files
patch 8.2.3049: JSON patch file not recognized
patch 8.2.3048: strange error for white space after ++ command
patch 8.2.3047: increment and decrement don't allow for next command
patch 8.2.3046: Amiga MorphOS: Term mode is set using DOS packets
patch 8.2.3045: minor typos
patch 8.2.3044: Amiga MorphOS and AROS: process ID is not valid
patch 8.2.3043: Amiga: cannot get the shell size on MorphOS and AROS
patch 8.2.3042: swap file test fails
patch 8.2.3041: detecting if the process of a swap file is running fails
patch 8.2.3040: GUI: dropping files not tested
patch 8.2.3039: Vim9: breakpoint at a comment line does not work
patch 8.2.3038: Amiga built-in version string doesn't include build date
patch 8.2.3037: configure reports libcanberra when checking for libsodium
patch 8.2.3036: Vim9: builtin function arguments not checked at compile time
patch 8.2.3035: Vim9: crash when calling :def function with partial
patch 8.2.3034: installing packages on github CI sometimes fails
patch 8.2.3033: no error when using alpha delimiter with :global
patch 8.2.3032: build problems with MSVC, other crypt issues with libsodium
patch 8.2.3031: no error if a function name starts with an underscore
patch 8.2.3030: Coverity reports a memory leak
patch 8.2.3029: Vim9: crash when using operator and list unpack assignment
patch 8.2.3028: GUI mouse events not tested
patch 8.2.3027: Vim9: breakpoint in compiled function not always checked
patch 8.2.3026: Vim9: cannot set breakpoint in compiled function
patch 8.2.3025: not enough tests for quickfix end_col and end_lnum
patch 8.2.3024: execute() function test fails
patch 8.2.3023: Vim9: arguments for execute() not checked at compile time
patch 8.2.3022: available encryption methods are not strong enough
patch 8.2.3021: spaces allowed between option name and "!", "?", etc.
patch 8.2.3020: unreachable code
patch 8.2.3019: location list only has the start position.
patch 8.2.3018: 'quickfixtextfunc' formatting is lost when switching buffers
patch 8.2.3017: Vim9: debugger shows too many lines
patch 8.2.3016: confusing error when expression is followed by comma
patch 8.2.3015: Vim9: Assigning to @# requires a string
patch 8.2.3014: Coverity warns for freeing static string
patch 8.2.3013: Vim: when debugging only first line of command is displayed
patch 8.2.3012: when 'rightleft' is set the line number is drawn reversed
patch 8.2.3011: Vim9: cannot get argument values during debugging
patch 8.2.3010: not enough testing for viminfo code
patch 8.2.3009: startup test may hang
patch 8.2.3008: startup test may hang
patch 8.2.3007: Vim9: test for void value fails
patch 8.2.3006: crash when echoing a value very early
patch 8.2.3005: Vim9: using a void value does not give a proper error message
patch 8.2.3004: Vim9: error for missing colon given while skipping
patch 8.2.3003: Vim9: closure compiled with wrong compile type
patch 8.2.3002: Vim doesn't abort on a fatal Tcl error
patch 8.2.3001: Vim9: memory leak when compilation fails
patch 8.2.3000: Vim9: warning for uninitialized variable
patch 8.2.2999: balloon sometimes does not hide with GTK 3
patch 8.2.2998: Vim9: disassemble test fails
patch 8.2.2997: Vim9: disassemble test fails
patch 8.2.2996: Vim9: when debugging cannot inspect local variables
patch 8.2.2995: linker errors with dynamic Python 3.10
patch 8.2.2994: various code is not fully tested
patch 8.2.2993: 'fileencodings' default value should depend on 'encoding'
Update runtime files
patch 8.2.2992: Vim9: completion for :disassemble is incomplete
patch 8.2.2991: Vim9: no completion for :vim9 and :legacy
patch 8.2.2990: Jupyter Notebook files are not recognized
patch 8.2.2989: Vim9: memory leak when debugging a :def function
patch 8.2.2988: Vim9: debugger test fails
patch 8.2.2987: build failure with normal features
patch 8.2.2986: build failure without the profile feature
patch 8.2.2985: Vim9: a compiled function cannot be debugged
patch 8.2.2984: Vim9: test fails because of missing return statement
Add links to discussion forums.
patch 8.2.2983: Vim9: an inline function requires specifying the return type
patch 8.2.2982: Vim9: future commands are not reserved yet
patch 8.2.2981: recovery test is not run on big-endian systems
patch 8.2.2980: popup window test is a bit flaky
patch 8.2.2979: not all options code is covered by tests
patch 8.2.2978: warning for uninitialized variable
patch 8.2.2977: crash when using a null function reference
patch 8.2.2976: build failure without the +eval feature
patch 8.2.2975: Vim9: can only use an autoload function name as a string
patch 8.2.2974: Greek spell checking uses wrong case folding
patch 8.2.2973: fix for recovery and diff mode not tested
patch 8.2.2972: "%bd" tries to delete popup window buffers, which fails
patch 8.2.2971: cannot yank a block without trailing spaces
patch 8.2.2970: Python configure check uses deprecated command
patch 8.2.2969: subtracting from number option fails when result is zero
patch 8.2.2968: Vim9: memory leak
patch 8.2.2967: Vim9: crash when using two levels of partials
patch 8.2.2966: ml_get errors after recovering a file
patch 8.2.2965: Vim9: crash when calling function that failed to compile
patch 8.2.2964: Vim9: hang when using space after ->
patch 8.2.2963: GUI: mouse move may start Visual mode with a popup visible
patch 8.2.2962: MS-Windows command line arguments have wrong encoding
patch 8.2.2961: keys typed during a :normal command are discarded
patch 8.2.2960: swap file recovery not sufficiently tested
patch 8.2.2959: sound_playfile() is not tested on MS-Windows
patch 8.2.2958: function list test fails
patch 8.2.2957: using getchar() in Vim9 script is problematic
patch 8.2.2956: Vim9: need to plan for future additions
patch 8.2.2955: Vim9: using filter in compiled command does not work
patch 8.2.2954: short file name extension for Scala not recognized
patch 8.2.2953: Vim9: leaking memory when using heredoc script
patch 8.2.2952: recover test fails on big endian systems
patch 8.2.2951: Vim9: cannot use heredoc for :python, :lua, etc.
patch 8.2.2950: sound code not fully tested
patch 8.2.2949: tests failing because no error for float to string conversion
patch 8.2.2948: substitute() accepts a number but not a float expression
patch 8.2.2947: build failure without the channel feature
patch 8.2.2946: Vim9: substitute expression cannot be a List
patch 8.2.2945: some buffer related code is not tested
patch 8.2.2944: Vim9: no error when using job or channel as a string
patch 8.2.2943: Vim9: check for argument count ignores default values
patch 8.2.2942: Vim9: error when calling function with too few arguments
patch 8.2.2941: Vim9: using  does not handle a list of strings
patch 8.2.2940: MS-Windows: cannot see the size when resizing
patch 8.2.2939: GTK: righthand scrollbar does not show with split window
patch 8.2.2938: after using motion force from feedkeys() it sticks
patch 8.2.2937: popup test fails if rightleft feature not enabled
patch 8.2.2936: Vim9: converting number to bool uses wrong stack offset
patch 8.2.2935: calculating register width is not always needed
patch 8.2.2934: ASAN error when using text from the clipboard
patch 8.2.2933: when 'clipboard' is "unnamed" zp does not work correctly
patch 8.2.2932: select mode test fails
patch 8.2.2931: Vim9: line continuation comment uses legacy syntax
patch 8.2.2930: when a popup is visible a mouse move my restart Visual mode
patch 8.2.2929: accidentally enable tcl by default
patch 8.2.2928: the evalfunc.c file is too big
patch 8.2.2927: test commented out because it fails with ASAN
patch 8.2.2926: Vim9: no good error for using :legacy in a :def function
patch 8.2.2925: Vim9: line continuation comment uses legacy syntax
patch 8.2.2924: superfluous extern declaration
patch 8.2.2923: EBCDIC build is broken
patch 8.2.2922: computing array length is done in various ways
patch 8.2.2921: E704 for script local variable is not backwards compatible
patch 8.2.2920: still a way to shadow a builtin function
patch 8.2.2919: using ":!command" does not work if it uses posix_spawn()
patch 8.2.2918: builtin function can be shadowed by global variable
patch 8.2.2917: spellfile functionality not fully tested
patch 8.2.2916: operators are not fully tested
patch 8.2.2915: MS-Windows: when using "default" for encoding utf-8 is used
patch 8.2.2914: cannot paste a block without adding padding
Update runtime files
patch 8.2.2913: MS-Windows conpty supports using mouse events
patch 8.2.2912: MS-Windows: most users expect using Unicode
patch 8.2.2911: pattern "\%V" does not match all of block selection
patch 8.2.2910: test for cmdline window and terminal fails on MS-Windows
patch 8.2.2909: build error with non-Unix system
patch 8.2.2908: crash when using a terminal popup window from cmdline window
patch 8.2.2907: memory leak when running out of memory
patch 8.2.2906: ASAN reports errors for test_startup
patch 8.2.2905: no error when defaults.vim cannot be loaded
patch 8.2.2904: "g$" causes scroll if half a double width char is visible
patch 8.2.2903: cursor position wrong on wrapped line with 'signcolumn'
patch 8.2.2902: spellfile functionality not fully tested
patch 8.2.2901: some operators not fully tested
patch 8.2.2900: QuitPre is triggered before :wq writes the file
patch 8.2.2899: Appveyor script does not detect nmake failure
patch 8.2.2898: QuitPre and ExitPre not triggered when GUI window is closed
patch 8.2.2897: Vim9: can use reserved words at the script level
patch 8.2.2896: spellfile functionality not fully tested
patch 8.2.2895: Vim9: random characters appear in some error messages
patch 8.2.2894: MS-Windows: using enc_locale() for strftime() might not work
patch 8.2.2893: multi-byte text in popup title shows up wrong
patch 8.2.2892: error message contains random characters
patch 8.2.2891: cannot build with Perl 5.34
patch 8.2.2890: text property duplicated when data block splits
patch 8.2.2889: typo and verbose comment in Makefiles
patch 8.2.2888: Vim9: "k" command recognized in Vim9 script
patch 8.2.2887: crash when passing null string to fullcommand()
patch 8.2.2886: various pieces of code not covered by tests
patch 8.2.2885: searching for \%'> does not match linewise end of line
patch 8.2.2884: not enough cscope code is covered by tests
patch 8.2.2883: MS-Windows manifest file name is misleading
patch 8.2.2882: Vim9: memory leak when lambda has an error
patch 8.2.2881: various pieces of code not covered by tests
patch 8.2.2880: unified diff fails if actually used
patch 8.2.2879: file extension .hsig not recognized
patch 8.2.2878: Vim9: for loop list unpack only allows for one "_"
patch 8.2.2877: insufficient tests for popup menu rightleft
patch 8.2.2876: configure cannot detect Python 3.10
patch 8.2.2875: cancelling inputlist() after a digit does not return zero
patch 8.2.2874: MS-Windows: screen redraws too often
patch 8.2.2873: not enough tests for writing buffers
patch 8.2.2872: Python tests fail without the channel feature
patch 8.2.2871: unnessary VIM_ISDIGIT() calls, badly indented code
patch 8.2.2870: CmdlineChange event triggered twice for CTRL-R
patch 8.2.2869: using unified diff is not tested
patch 8.2.2868: Vim9: when executing compiled expression trylevel is changed
patch 8.2.2867: build failure
patch 8.2.2866: Vim9: memory leak when using inline function
patch 8.2.2865: skipping over function body fails
patch 8.2.2864: Vim9: crash when using inline function
patch 8.2.2863: removing a text property does not redraw optimally
patch 8.2.2862: removing a text property causes the whole window to be redawn
patch 8.2.2861: Vim9: "legacy return" is not recognized as a return statement
patch 8.2.2860: adding a text property causes the whole window to be redawn
patch 8.2.2859: Tcl test fails because of changed error message
patch 8.2.2858: test fails because of changed error message
patch 8.2.2857: Vim9: exception in ISN_INSTR caught at wrong level
Update runtime files
patch 8.2.2856: get readonly error for device that can't be written to
patch 8.2.2855: white space after "->" does not give E274
patch 8.2.2854: custom statusline cannot contain % items
patch 8.2.2853: window is not updated after using <Cmd> mapping
patch 8.2.2852: configure can add --as-needed a second time
patch 8.2.2851: using <Cmd> mapping on the command line triggers CmdlineChanged
patch 8.2.2850: recalling commands from history is not tested
patch 8.2.2849: bufwrite not sufficiently tested
patch 8.2.2848: crash whn calling partial
patch 8.2.2847: Perl not tested sufficiently
patch 8.2.2846: Vim9: "echo Func()" does not give an error for using void
patch 8.2.2845: MS-Windows: warning for signed/unsigned comparison
patch 8.2.2844: Vim9: memory leak when using searchpair()
patch 8.2.2843: Vim9: skip argument to searchpairpos() is not compiled
patch 8.2.2842: Vim9: skip argument to searchpair() is not compiled
patch 8.2.2841: MS-Windows: cursor wrong when 'lz' and 'stl' are set
patch 8.2.2840: Vim9: member operation not fully tested
patch 8.2.2839: default redirection missing "ash" and "dash"
patch 8.2.2838: file extension .wrap not recognized
patch 8.2.2837: various code lines not covered by tests
patch 8.2.2836: build failure without the +quickfix feature
patch 8.2.2835: Vim9: leaking memory in :cexpr
patch 8.2.2834: Vim9: :cexpr does not work with local variables
patch 8.2.2833: two key command cancelled by moving mouse when using popup
patch 8.2.2832: operator cancelled by moving mouse when using popup
patch 8.2.2831: Vim9: expandcmd() not tested
patch 8.2.2830: terminal colors are not updated when 'background' is set
patch 8.2.2829: some comments are not correct or clear
patch 8.2.2828: Coverity complains about not checking rename() return value
patch 8.2.2827: test file was not deleted
patch 8.2.2826: compiler warnings for int to size_t conversion
patch 8.2.2825: code in checkreadonly() not fully tested
patch 8.2.2824: MS-Windows: build failure with MSVC
Update runtime files
patch 8.2.2823: MS-Windows: launching Vim from installer doesn't open README
patch 8.2.2822: MS-Windows: unnessarily loading libraries when unregistering
patch 8.2.2821: MS-Windows: unnessarily loading libraries when registering OLE
patch 8.2.2820: session file may divide by zero
patch 8.2.2819: finishing an abbreviation with multi-byte char may not work
patch 8.2.2818: no jump added  when opening terminal in current window
patch 8.2.2817: Vim9: script sourcing continues after an error
patch 8.2.2816: Vim9: comment below expression in lambda causes problems
patch 8.2.2815: status line flickers when redrawing popup menu info
patch 8.2.2814: Vim9: unused variable
patch 8.2.2813: cannot grep using fuzzy matching
patch 8.2.2812: Vim9: still crash when using substitute expression
patch 8.2.2811: Vim9: error for missing white space doesn't say where
patch 8.2.2810: Vim9: crash when calling a function in a substitute expression
patch 8.2.2809: Vim9: :def function compilation fails when using :legacy
patch 8.2.2808: Vim9: increment and decrement not sufficiently tested
patch 8.2.2807: build fails with tiny features
patch 8.2.2806: Vim9: using "++nr" as a command might not work
patch 8.2.2805: Vim9: cannot use legacy syntax in Vim9 script
patch 8.2.2804: setting buffer local mapping with mapset() changes global
patch 8.2.2803: flicker when the popup menu has an info popup
patch 8.2.2802: Vim9: illegal memory access
patch 8.2.2801: free Pascal makefile not recognized
patch 8.2.2800: after a timer displays text a hit-enter prompt is given
Update runtime files
patch 8.2.2799: Vim9: type casts don't fully work at the script level
patch 8.2.2798: Vim9: redir to variable with append does not accept an index
patch 8.2.2797: Search highlight disappears in the Visual area
patch 8.2.2796: Vim9: redir to variable does not accept an index
patch 8.2.2795: Coverity warns for not using return value
patch 8.2.2794: Linux users don't know how to get ncurses
patch 8.2.2793: MS-Windows: string literals are writable with MSVC
patch 8.2.2792: Vim9: :disas shows instructions for default args but no text
patch 8.2.2791: Vim9: memory leak when using \=expr in :substitute
patch 8.2.2790: filetype test fails
patch 8.2.2789: Vim9: using \=expr in :substitute does not handle jumps
patch 8.2.2788: Raku is now the only name what once was called perl6
patch 8.2.2787: MS-Windows: crash when using :echoconsole
patch 8.2.2786: Vim9: memory leak when using :s with expression
patch 8.2.2785: Vim9: cannot redirect to local variable
patch 8.2.2784: Vim9: cannot use \=expr in :substitute
patch 8.2.2783: duplicate code for setting byte in blob, blob test may fail
patch 8.2.2782: Vim9: blob operations not fully tested
patch 8.2.2781: add() silently skips when adding to null list or blob
patch 8.2.2780: Vim9: for loop over blob doesn't work
patch 8.2.2779: memory access error in remove() for blob
patch 8.2.2778: problem restoring 'packpath' in session
patch 8.2.2777: Vim9: blob operations not tested in all ways
patch 8.2.2776: :mksession uses current value of 'splitbelow' and 'splitright'
patch 8.2.2775: Vim9: wrong line number used for some commands
patch 8.2.2774: Vim9: cannot import an existing name even when using "as"
Update runtime files.
patch 8.2.2773: PSL filetype not recognized
patch 8.2.2772: problems when restoring 'runtimepath' from a session file
patch 8.2.2771: Vim9: assignment not recognized if declaration was skipped
patch 8.2.2770: Vim9: type of loop variable is not used
patch 8.2.2769: Modula-3 config files are not recognized
patch 8.2.2768: Vim9: memory leak with blob range error
patch 8.2.2767: compiler warning for unused argument
patch 8.2.2766: test failure
patch 8.2.2765: Vim9: not all blob operations work
patch 8.2.2764: memory leak when default function argument is allocated
patch 8.2.2763: Vim9: cannot use type in for loop unpack at script level
patch 8.2.2762: Vim9: function line truncated when compiling
patch 8.2.2761: using "syn include" does not work properly
patch 8.2.2760: Vim9: no error for changing a for loop variable
patch 8.2.2759: Vim9: for loop infers type of loop variable
patch 8.2.2758: Vim9: wrong line number for autoload function with wrong name
patch 8.2.2757: Vim9: blob tests for legacy and Vim9 script are separate
patch 8.2.2756: Vim9: blob index and slice not implemented yet
patch 8.2.2755: Vim9: no error for using a number in a condition
patch 8.2.2754: :sleep! does not always hide the cursor
patch 8.2.2753: Vim9: cannot ignore an item in assignment unpack
patch 8.2.2752
patch 8.2.2751: Coverity warns for using NULL pointer
patch 8.2.2750: Vim9: error for using underscore in nested function
patch 8.2.2749: Vim9: test for error can be a bit flaky
patch 8.2.2748: Vim9: memory leak when calling :def function fails
patch 8.2.2747: Vim9: not always an error for too many function arguments
patch 8.2.2746: check for duplicate arguments does not work
patch 8.2.2745: Vim9: missing part of the argument change
patch 8.2.2744: Vim9: no way to explicitly ignore an argument
patch 8.2.2743: Vim9: function state stuck when compiling with ":silent!"
patch 8.2.2742: Vim9: when compiling a function fails it is cleared
patch 8.2.2741: Vim9: Partial call does not check right arguments
patch 8.2.2740: Vim9: lambda with varargs doesn't work
patch 8.2.2739: Vim9: a lambda accepts too many arguments at the script level
patch 8.2.2738: extending a list with itself can give wrong result
patch 8.2.2737: status line not updated when local 'statusline' option set
patch 8.2.2736: Vim9: for loop over string is a bit slow
patch 8.2.2735: Vim9: function reference found with prefix, not without
patch 8.2.2734: Vim9: cannot use legacy script-local var from :def function
Update runtime files
patch 8.2.2733: detecting Lua version is not reliable
patch 8.2.2732: prompt for s///c in Ex mode can be wrong
patch 8.2.2731: Mac: SF symbols are not displayed properly
patch 8.2.2730: Coverity complains about not restoring character
patch 8.2.2729: Vim9: wrong error message for referring to legacy script var
patch 8.2.2728: special key names don't work if 'isident' is cleared
patch 8.2.2727: function test fails
patch 8.2.2726: confusing error message with white space before comma
patch 8.2.2725: Vim9: message about compiling is wrong when using try/catch
patch 8.2.2724: Vim9: concatenating to list in dict not tested
patch 8.2.2723: assignment test fails
patch 8.2.2722: Vim9: crash when using LHS with double index
patch 8.2.2721: Vim9: cannot have a linebreak inside a lambda
patch 8.2.2720: GTK menu tooltip moves the cursor
patch 8.2.2719: Vim9: appending to dict item doesn't work in a :def function
patch 8.2.2718: Vim9: no explicit test for using a global function without g:
patch 8.2.2717: GTK menu items don't show a tooltip
patch 8.2.2716: the equivalent class regexp is missing some characters
patch 8.2.2715: Vim9: tests fail without the channel feature
patch 8.2.2714: filetype pattern ending in star is too far up
patch 8.2.2713: folding code not sufficiently tested
patch 8.2.2712: memory leak when adding to a blob fails
patch 8.2.2711: "gj" in a closed fold does not move out of the fold
patch 8.2.2710: Vim9: not all tests cover script and :def function
patch 8.2.2709: the GTK GUI has a gap next to the scrollbar
patch 8.2.2708: test sometimes fails waiting for shell in terminal
patch 8.2.2707: adding a lot of completions can still be a bit slow
patch 8.2.2706: Vim9: wrong line number reported for boolean operator
patch 8.2.2705: Vim9: misleading reported line number for wrong type
patch 8.2.2704: adding a lot of completions can be a bit slow
patch 8.2.2703: Vim9: memory leak when failing on locked variable
patch 8.2.2702: compiler completion test fails when more scripts are added
patch 8.2.2701: order of removing FORTIFY_SOURCE is wrong
patch 8.2.2700: nested autocmd test fails sometimes
patch 8.2.2699: Lua test fails
patch 8.2.2698: Lua test fails on MS-Windows
patch 8.2.2697: function list test fails
patch 8.2.2696: Lua test fails with Lua 5.4.3 and later
patch 8.2.2695: cursor position reset with nested autocommands
patch 8.2.2694: when 'matchpairs' is empty every character beeps
patch 8.2.2693: Vim9: locked script variable can be changed
patch 8.2.2692: Vim9: locked script variable can be changed
patch 8.2.2691: autoconf may mess up compiler flags
patch 8.2.2690: PowerShell files are not recognized
patch 8.2.2689: tiny build fails
patch 8.2.2688: Vim9: crash when using s: for script variable
patch 8.2.2687: Vim9: cannot use "const" for global variable in :def function
patch 8.2.2686: status line is not updated when going to cmdline mode
patch 8.2.2685: custom statusline not drawn correctly with WinBar
patch 8.2.2684: not enough folding code is tested
patch 8.2.2683: build failure without the +eval feature
patch 8.2.2682: Vim9: cannot find Name.Func from "import * as Name"
patch 8.2.2681: Vim9: test fails for redeclaring script variable
patch 8.2.2680: Vim9: problem defining a script variable from legacy function
Update runtime files.
patch 8.2.2679: status line missing for non-current window with winbar
patch 8.2.2678: test for 'autoshelldir' does not reset the option
patch 8.2.2677: Vim9: cannot use only some of the default arguments
patch 8.2.2676: missing error message
patch 8.2.2675: directory change in a terminal window shell is not followed
patch 8.2.2674: Motif: cancelling the font dialog resets the font
patch 8.2.2673: Vim9: script-local funcref can have lower case name
patch 8.2.2672: Vim9: cannot use :lockvar and :unlockvar in compiled script
patch 8.2.2671: error for line number in legacy script
patch 8.2.2670: Vim9: error for append(0, text)
patch 8.2.2669: command line completion does not work after "vim9"
patch 8.2.2668: Vim9: omitting "call" for "confirm()" does not give an error
patch 8.2.2667: prop_find() cannot find item matching both id and type
patch 8.2.2666: Vim9: not enough function arguments checked for string
patch 8.2.2665: test failures
patch 8.2.2664: Vim9: not enough function arguments checked for string
patch 8.2.2663: Vim9: leaking memory when inline function has an error
patch 8.2.2662: there is no way to avoid some escape sequences
patch 8.2.2661: leaking memory when looping over a string
patch 8.2.2660: Vim9: no error for declaration with trailing text
patch 8.2.2659: eval test fails because for loop on string works
patch 8.2.2658: :for cannot loop over a string
patch 8.2.2657: Vim9: error message for declaring variable in for loop
patch 8.2.2656: some command line arguments and regexp errors not tested
patch 8.2.2655: The -w command line argument doesn't work
patch 8.2.2654: Vim9: getting a character from a string can be slow
patch 8.2.2653: build failure
patch 8.2.2652: Vim9: can use command modifier without an effect
patch 8.2.2651: Vim9: restoring command modifiers happens after jump
patch 8.2.2650: Vim9: command modifiers not handled in nested function
patch 8.2.2649: Vim9: some wincmd arguments cause a white space error
patch 8.2.2648: terminal resize test sometimes hangs
patch 8.2.2647: terminal test sometimes hangs
patch 8.2.2646: Vim9: error for not using string doesn't mentionargument
patch 8.2.2645: using inline function is not properly tested
patch 8.2.2644: prop_clear() causes a screen update even when nothing changed
patch 8.2.2643: various code not covered by tests
patch 8.2.2642: Vim9: no clear error for wrong inline function
patch 8.2.2641: display test fails because of lacking redraw
patch 8.2.2640: screenstring() returns non-existing composing characters
patch 8.2.2639: build failure when fsync() is not available
patch 8.2.2638: cannot write a message to the terminal from the GUI
patch 8.2.2637: prop_remove() causes a redraw even when nothing changed
patch 8.2.2636: memory leak when compiling inline function
patch 8.2.2635: Vim9: cannot define an inline function
patch 8.2.2634: 'tagfunc' does not indicate using a pattern
patch 8.2.2633: multi-byte 'fillchars' for folding do not show properly
patch 8.2.2632: not all command line arguments are tested
patch 8.2.2631: commands from winrestcmd() do not always work properly
patch 8.2.2630: hard to see where a test gets stuck
patch 8.2.2629: Vim9: error for #{{ is not desired
patch 8.2.2628: Vim9: #{ can still be used at the script level
patch 8.2.2627: no need to check for BSD after checking for not root
patch 8.2.2626: GTK3: error when starting up and -geometry is given
patch 8.2.2625: rss files not recognized
patch 8.2.2624: atom files not recognized
patch 8.2.2623: some tests fail when run as root
patch 8.2.2622: GTK: error when starting up and -geometry is given
patch 8.2.2621: typval2type() cannot handle recursive structures
patch 8.2.2620: Vim9: Using #{ for a dictionary gives strange errors
patch 8.2.2619: Vim9: no test for return type of lambda
patch 8.2.2618: Vim9: cannot use a normal list name to store function refs
patch 8.2.2617: Vim9: script variable in block not found by function
patch 8.2.2616: Vim9: if 'cpo' is change in Vim9 script it may be restored
patch 8.2.2615: test is sourcing the wrong file
patch 8.2.2614: Vim9: function is deleted while executing
patch 8.2.2613: new test throws exception
patch 8.2.2612: col('.') may get outdated column value
patch 8.2.2611: conditions for startup tests are not exactly right
patch 8.2.2610: mouse click test fails when using remote connection
patch 8.2.2609: test disabled on MS-Windows even though it should work
patch 8.2.2608: character input not fully tested
patch 8.2.2607: strcharpart() cannot include composing characters
patch 8.2.2606: strchars() defaults to counting composing characters
patch 8.2.2605: Vim9: string index and slice does not include composing chars
patch 8.2.2604: GUI-specific command line arguments not tested
patch 8.2.2603: Vim9: no effect if user command is also a function
patch 8.2.2602: Vim9: continue doesn't work if :while is very first command
patch 8.2.2601: memory usage test often fails on FreeBSD
patch 8.2.2600: Vim9: crash when putting an unknown type in a dictionary
patch 8.2.2599: build failure
patch 8.2.2598: Vim9: :open does not need to be supported
patch 8.2.2597: Vim9: "import * as" does not work at script level
patch 8.2.2596: :doautocmd may confuse scripts listening to WinEnter
patch 8.2.2595: setting 'winminheight' may cause 'lines' to change
patch 8.2.2594: alternate buffer added to session file even when it's hidden
patch 8.2.2593: list of distributed files is incomplete
Update runtime files.
patch 8.2.2592: code coverage could be improved
patch 8.2.2591: Poke files are not recognized
patch 8.2.2590: Vim9: default argument value may cause internal error
patch 8.2.2589: recover test hangs in the GUI
patch 8.2.2588: build failure with tiny features
patch 8.2.2587: recover test fails on FreeBSD
patch 8.2.2586: process id may be invalid
patch 8.2.2585: Vim9: illegal memory access
patch 8.2.2584: Vim9: type error for assigning "any" to a list
patch 8.2.2583: Vim9: cannot compare result of getenv() with null
patch 8.2.2582: Vim9: screendump test fails on MS-Windows
patch 8.2.2581: Vim9: sourcing Vim9 script triggers a redraw
patch 8.2.2580: Vim9: checking vararg type may be wrong
patch 8.2.2579: Vim9: crash in garbagecollect after for loop
patch 8.2.2578: Lua cannot handle a passed in lambda
patch 8.2.2577: compiler warning for type conversion
patch 8.2.2576: Vim9: defining a :func function checks for white space
patch 8.2.2575: Vim9: a function name with "->" in the next line doesn't work
patch 8.2.2574: Vim9: crash when calling partial with wrong function
patch 8.2.2573: Vim9: using inalid pointer for error message
patch 8.2.2572: Vim9: crash when getting the types for a legacy function
patch 8.2.2571: test may leave file behind
patch 8.2.2570: tests fail when run as root
patch 8.2.2569: 'fillchars' "stl" and "stlnc" items must be single byte
patch 8.2.2568: second time a preview popup is opened highlight is not set
patch 8.2.2567: Vim9: no error if variable is defined for existing function
patch 8.2.2566: Vim9: Function name is not recognized
patch 8.2.2565: Vim9: "..=" not always recognized
patch 8.2.2564: focus events end Insert mode if 'esckeys' is not set
patch 8.2.2563: cannot use multibyte characters for folding in 'fillchars'
patch 8.2.2562: GUI: star register changed when 'clipboard is "unnamedplus"
patch 8.2.2561: not all textprop code is covered by tests
patch 8.2.2560: setting 'winminheigt' does not take tabline into account
patch 8.2.2559: MS-Windows: guifont test fails on Windows XP
patch 8.2.2558: no error if a lambda argument shadows a variable
patch 8.2.2557: compiler warning for shadowd variable
patch 8.2.2556: Vim9: :import with "as" not fully supported
patch 8.2.2555: Vim9: missing test for 8.2.2553
patch 8.2.2554: Vim9: exporting a final is not tested
Update runtime files.
patch 8.2.2553: Vim9: Cannot put "|" after "{"
patch 8.2.2552: Vim9: no reason to consider "{{{{{{{{" a command
patch 8.2.2551: MS-Windows: colors test file is not installed
patch 8.2.2550: signal stack size is wrong with latest glibc 2.34
patch 8.2.2549: crash after using "g:" in a for loop
patch 8.2.2548: May get stuck in the cmdline window using :normal
patch 8.2.2547: "%" command not accurate for big files
patch 8.2.2546: typo in mouse key name
patch 8.2.2545: errors and crash when terminal window is zero height
patch 8.2.2544: Vim9: error for argument when checking for lambda
patch 8.2.2543: Vim9: a return inside try/catch does not restore properly
patch 8.2.2542: highlight of char beyond line end is not correct
patch 8.2.2541: popup_create() does not allow boolean for "cursorline"
patch 8.2.2540: Vim9: no error for using script var name for argument
patch 8.2.2539: Vim9: return from finally block causes a hang
patch 8.2.2538: crash when using Python list iterator
patch 8.2.2537: Vim9: crash when map() fails
patch 8.2.2536: Coverity complains about unchecked return value
patch 8.2.2535: MS-Windows: cannot run all vim9 tests
patch 8.2.2534: missing test coverage
patch 8.2.2533: Vim9: cannot use a range with :unlet
patch 8.2.2532: Vim9: confusing error if :k is used with a range
patch 8.2.2531: Vim9: the :k command is obscure
patch 8.2.2530: Vim9: not enough testing for profiling
patch 8.2.2529: Vim9: Not possible to use legacy and Vim9 script in one file
patch 8.2.2528: Vim9: crash when compiling lambda fails
patch 8.2.2527: Vim9: lambda return type is not determined at script level
patch 8.2.2526: build failure
patch 8.2.2525: Vim9: only local variables checked for a name
patch 8.2.2524: cannot change the characters displayed in the foldcolumn
patch 8.2.2523: Svelte filetype not recognized
patch 8.2.2522: Beancount filetype not recognized
patch 8.2.2521: some compilers can't handle pointer initialization
patch 8.2.2520: missing tests for 'listchars'
patch 8.2.2519: Vim9: no reason to keep strange Vi behavior
patch 8.2.2518: 'listchars' should be window-local
patch 8.2.2517: Vim9: fix for s390 not tested on other systems
patch 8.2.2516: test failure on s390
patch 8.2.2515: memory access error when truncating an empty message
patch 8.2.2514: Vim9: build error in tiny version
patch 8.2.2513: Vim9: missing part of :vim9cmd change
patch 8.2.2512: Vim9: compiling error test sometimes fails
patch 8.2.2511: Vim9: cannot use Vim9 script syntax in some places
patch 8.2.2510: internal error when popup with mask is zero height or width
patch 8.2.2509: tests fail on s390 build
patch 8.2.2508: cannot change the character displayed in non existing lines
Update runtime files
patch 8.2.2507: github build may fail if Ubuntu 20.04 is used
patch 8.2.2506: Vim9: :continue does not work correctly in a :try block
patch 8.2.2505: Vim9: crash after defining function with invalid return type
patch 8.2.2504: Vim9: crash when using an argument from a closure
patch 8.2.2503: Vim9: a caught error may leave something on the stack
patch 8.2.2502: a few github actions are failing
patch 8.2.2501: not always clear where an error is reported
patch 8.2.2500: build fails without the GUI feature
patch 8.2.2499: "vim -g --version" does not redirect output
patch 8.2.2498: no test for what 8.2.2494 fixes
patch 8.2.2497: no error when using more than one character for a register
patch 8.2.2496: insufficien testing for text jumping fix
patch 8.2.2495: text jumps up and down when moving the cursor
patch 8.2.2494: ":rviminfo!" clears most of oldfiles
patch 8.2.2493: text property for text left of window shows up
patch 8.2.2492: command line buffer name cannot be translated
patch 8.2.2491: popup window for text property may show in first screen line
patch 8.2.2490: 'wrap' option is always reset when starting diff mode
patch 8.2.2489: current buffer is wrong after deletebufline() fails
patch 8.2.2488: json_encode() gives generic argument error
patch 8.2.2487: terminal shows garbage after double-wide character
patch 8.2.2486: Vim9: some errors for white space do not show context
patch 8.2.2485: when sourcing a script again the script version isn't reset
patch 8.2.2484: Vim9: Cannot use a comment starting with #{
patch 8.2.2483: Vim9: type error for misformed expression
patch 8.2.2482: build error
patch 8.2.2481: Vim9: confusing error when variable arguments have default
patch 8.2.2480: Vim9: some errors for white space do not show context
patch 8.2.2479: set/getbufline test fails without the job feature
patch 8.2.2478: MS-Windows: backup files for plugins are loaded
patch 8.2.2477: autocommand tests hang on MS-Windows
patch 8.2.2476: using freed memory when splitting window while closing buffer
patch 8.2.2475: autocommand tests hangs on MS-Windows
patch 8.2.2474: using freed memory when window is closed by autocommand
patch 8.2.2473: crash when leaving command line window triggers autocommand
patch 8.2.2472: crash when using command line window in an autocommand
patch 8.2.2471: popup_setoptions() does not set textprop in other tab
patch 8.2.2470: popup_getoptions() does not get textprop from other tab
patch 8.2.2469: confusing error if :winsize has a wrong argument
patch 8.2.2468: not easy to get the full command name from a shortened one
patch 8.2.2467: script generated by :mkview changes alternate file
patch 8.2.2466: max() and min() can give many error messages
patch 8.2.2465: using freed memory in :psearch
patch 8.2.2464: using freed memory if window closed in autocommand
patch 8.2.2463: using :arglocal in an autocommand may use freed memory
patch 8.2.2462: Coverity warns for not checking for fseek() error
patch 8.2.2461: Coverity warns for unchecked return value
patch 8.2.2460: Coverity warns for unused value
patch 8.2.2459: Coverity reports dead code
patch 8.2.2458: Coverity warns for :retab using freed memory
patch 8.2.2457: Coverity warns for memory leak
patch 8.2.2456: Coverity warning for strcpy() into fixed size array
patch 8.2.2455: Vim9: key type for literal dict and indexing is inconsistent
patch 8.2.2454: leading space can not be made visible
patch 8.2.2453: Vim9: a variable name with "->" in the next line doesn't work
patch 8.2.2452: no completion for the 'filetype' option
patch 8.2.2451: MS-Windows: Extended Attributes not preserved
patch 8.2.2450: MS-Windows: ADS was not preserved if 'backupcopy' is "yes"
patch 8.2.2449: Vim9: flatten() always changes the list type
patch 8.2.2448: compilation error with Ruby 3.0
patch 8.2.2447: 'foldlevel' not applied to folds restored from session
patch 8.2.2446: setting 'term' empty has different error if compiled with GUI
patch 8.2.2445: Vim9: no proper error for lambda missing return type
patch 8.2.2444: Vim9: compile error with combination of operator and list
patch 8.2.2443: Vim9: no compile time error for wrong str2float argument
patch 8.2.2442: automatic GUI selection does not check for GTK 3
patch 8.2.2441: Vim9: extend() does not give an error for a type mismatch
patch 8.2.2440: documentation based on patches is outdated
patch 8.2.2439: not easy to figure out what packages to get
patch 8.2.2438: out of bounds compiler warning
patch 8.2.2437: deprecation warnings with default configuration
patch 8.2.2436: Vim9 script test is a bit flaky
patch 8.2.2435: setline() gives an error for some types
patch 8.2.2434: Vim9: no error when compiling str2nr() with a number
patch 8.2.2433: opening cmdline window gives error in BufLeave autocommand
patch 8.2.2432: libvterm tests are executed even when libtool doesn't work
patch 8.2.2431: warning for -fno-strength-reduce with Clang 11
patch 8.2.2430: :vimgrep expands wildcards twice
patch 8.2.2429: :goto does not work correctly with text properties
patch 8.2.2428: FocusGained does not work when 'ttymouse' is empty
patch 8.2.2427: can still switch windows for 'completefunc'
patch 8.2.2426: allowing 'completefunc' to switch windows causes trouble
patch 8.2.2425: cursor on invalid line with range and :substitute
patch 8.2.2424: some tests are known to cause an error with ASAN
patch 8.2.2423: missing error message
patch 8.2.2422: crash when deleting with line number out of range
patch 8.2.2421: double free when using autocommand with "argdel"
patch 8.2.2420: too many problems with using all autocommand events
patch 8.2.2419: autocmd test was failing on MS-Windows with GUI
patch 8.2.2418: color not changed if ModeMsg highlight is set in InsertEnter
patch 8.2.2417: condition stack values may be used when not set
patch 8.2.2416: may get stuck in command line window state
patch 8.2.2415: no way to check for the cmdwin feature
patch 8.2.2414: using freed memory when closing the cmdline window
patch 8.2.2413: crash when using :all while using a cmdline window
patch 8.2.2412: not all fields in "cstack" are initialized
patch 8.2.2411: profile test fails on MS-Windows
patch 8.2.2410: build failure without the +profiling feature
Update runtime files.
patch 8.2.2409: Vim9: profiling only works for one function
patch 8.2.2408: MinGW: "--preprocessor" flag no longer supported
patch 8.2.2407: old jumplist code is never used
patch 8.2.2406: Vim9: profiled :def function leaks memory
patch 8.2.2405: Vim9: no need to allow white space before "(" for :def
patch 8.2.2404: Vim9: profiling try/catch not correct
patch 8.2.2403: Vim9: profiling if/elseif/endif not correct
patch 8.2.2402: some filetypes not detected
patch 8.2.2401: build fails without +profiling feature
patch 8.2.2400: Vim9: compiled functions are not profiled
patch 8.2.2399: fold test fails in wide terminal
patch 8.2.2398: method test fails
patch 8.2.2397: Vim9: "%%" not seen as alternate file name for ":bdel"
patch 8.2.2396: Vim9: no white space allowed before "->"
patch 8.2.2395: Vim9: error for wrong type may report wrong line number
patch 8.2.2394: Vim9: min() and max() return type is "any"
patch 8.2.2393: Vim9: error message when script line starts with "[{"
patch 8.2.2392: fennel filetype not recognized
patch 8.2.2391: memory leak when creating a global function with closure
patch 8.2.2390: Vim9: using positive offset is unexpected
patch 8.2.2389: test failure on a few systems
patch 8.2.2388: no easy way to get the maximum or mininum number value
patch 8.2.2387: runtime type check does not mention argument index
patch 8.2.2386: Vim9: crash when using ":silent! put"
patch 8.2.2385: "gj" and "gk" do not work correctly when inside a fold
patch 8.2.2384: turtle filetype not recognized
patch 8.2.2383: focus escape sequences are not named
patch 8.2.2382: build failure
patch 8.2.2381: Vim9: divide by zero does not abort expression execution
patch 8.2.2380: Vim9: occasional crash when using try/catch and a timer
patch 8.2.2379: do spell suggestions twice if 'spellsuggest' contains number
patch 8.2.2378: Vim9: no error message for dividing by zero
patch 8.2.2377: Vim9: crash when using a range after another expression
patch 8.2.2376: Vim9: crash when dividing by zero in compiled code
patch 8.2.2375: test for RGB color skipped in the terminal
Update runtime files.
patch 8.2.2374: accessing uninitialized memory in test_undo
patch 8.2.2373: Vim9: list assignment only accepts a number index
patch 8.2.2372: confusing error message for wrong :let command
patch 8.2.2371: Vim9: crash when using types in :for with unpack
patch 8.2.2370: Vim9: command fails in catch block
patch 8.2.2369: Vim9: functions return true/false but can't be used as bool
patch 8.2.2368: insufficient tests for setting options
patch 8.2.2367: test failures on some less often used systems
patch 8.2.2366: when using ":sleep" the cursor is always displayed
patch 8.2.2365: Vim9: no check for map() changing item type at script level
patch 8.2.2364: Vim9: line break in lambda accesses freed memory
patch 8.2.2363: curpos() does not accept a string argument as before
patch 8.2.2362: Vim9: check of builtin function argument type is incomplete
patch 8.2.2361: Vim9: no highlight for "s///gc" when using 'opfunc'
patch 8.2.2360: test leaves file behind
patch 8.2.2359: strange test failure with MS-Windows
patch 8.2.2358: wrong #ifdef for use_xterm_like_mouse()
patch 8.2.2357: Vim9: crash when parsing function return type fails
patch 8.2.2356: Vim9: ":put =expr" does not handle a list properly
patch 8.2.2355: stray test failure on Appveyor
patch 8.2.2354: crash with a weird combination of autocommands
patch 8.2.2353: spartql files are not detected
patch 8.2.2352: if focus lost/gained is received twice code is not ignored
patch 8.2.2351: Vim9: error msg for "throw" in function called with "silent!"
patch 8.2.2350: using "void" for no reason
patch 8.2.2349: Vim9: cannot handle line break after parenthesis at line end
patch 8.2.2348: no check for modified files after focus gained
patch 8.2.2347: build failure without GUI
patch 8.2.2346: Codecov reports every little coverage drop
patch 8.2.2345: no focus events in a terminal
patch 8.2.2344: using inclusive index for slice is not always desired
patch 8.2.2343: Vim9: return type of readfile() is any
patch 8.2.2342: "char" functions may return wrong column in Insert mode
patch 8.2.2341: expresison command line completion incomplete after "g:"
patch 8.2.2340: win_execute() unexpectedly returns number zero when failing
patch 8.2.2339: cannot get the type of a value as a string
patch 8.2.2338: Vim9: no error if using job_info() result wrongly
patch 8.2.2337: configure test for GTK only says "no"
patch 8.2.2336: Vim9: not possible to extend dictionary with different type
patch 8.2.2335: Vim9: "silent return" does not restore command modifiers
patch 8.2.2334: Pascal-like filetypes not always detected
patch 8.2.2333: Vim9: warning for uninitialized variable
patch 8.2.2332: Vim9: missing :endif not reported when using :windo
patch 8.2.2331: Vim9: wrong error when modifying dict declared with :final
patch 8.2.2330: Vim9: crash when using :trow in a not executed block
patch 8.2.2329: not all ways Vim can be started are tested
Update runtime files.
patch 8.2.2328: some test files may not be deleted
patch 8.2.2327: debugging code included
patch 8.2.2326: build error with +eval feature but without +spell
patch 8.2.2325: Vim9: crash if map() changes the item type
patch 8.2.2324: not easy to get mark en cursor posotion by character count
patch 8.2.2323: Vim9: error when inferring type from empty dict/list
patch 8.2.2322: Vim9: closure nested limiting to one level
patch 8.2.2321: Vim9: cannot nest closures
patch 8.2.2320: Vim9: no error for comparing bool with string
patch 8.2.2319: "exptype_T" can be read as "expected type"
patch 8.2.2318: Vim9: string and list index work differently
patch 8.2.2317: Vim9: command modifier before list unpack doesn't work
patch 8.2.2316: Vim9: cannot list a lambda function
patch 8.2.2315: Vim9: "enddef" as dict key misintepreted as function end
patch 8.2.2314: Vim9: returning zero takes two instructions
patch 8.2.2313: Vim9: using uninitialized field when parsing range
patch 8.2.2312: build failure with Ruby 3.0 and 32 bits
patch 8.2.2311: Vim9: cannot assign to variable that shadows command modifier
patch 8.2.2310: Vim9: winsaveview() return type is too generic
patch 8.2.2309: 0o777 not recognized as octal
patch 8.2.2308: Vim9: no error when assigning lambda to funcref
patch 8.2.2307: a shell command in the vimrc causes terminal output
patch 8.2.2306: Vim9: when using function reference type is not checked
patch 8.2.2305: Vim9: "++var" and "--var" are silently accepted
patch 8.2.2304: Vim9: no test for unletting an imported variable
patch 8.2.2303: Vim9: backtick expansion doesn't work for :foldopen
patch 8.2.2302: Vim9: using an option value may use uninitialized memory
patch 8.2.2301: Vim9: cannot unlet a dict or list item
patch 8.2.2300: Vim9: wrong order on type stack when using dict
patch 8.2.2299: Vim9: invalid memory access making error message flaky
patch 8.2.2298: Vim9: comment right after "(" of function not recognized
patch 8.2.2297: Vim9: cannot set 'number' to a boolean value
patch 8.2.2296: cannot use CTRL-N and CTRL-P in a popup menu
patch 8.2.2295: incsearch does not detect empty pattern properly
patch 8.2.2294: VMS: a few remaining problems
patch 8.2.2293: build failure with Motif
patch 8.2.2292: Vim: expr test fails
patch 8.2.2291: Vim9: cannot use "null" for v:null
patch 8.2.2290: Vim9: unlet of global variable cannot be compiled
patch 8.2.2289: Vim9: 'cpo' can become empty
patch 8.2.2288: Vim9: line break and comment not always skipped
patch 8.2.2287: sort test fails when locale is French Canadian
patch 8.2.2286: sort test fails when locale is Canadian English
patch 8.2.2285: Vim9: cannot set an option to a false
patch 8.2.2284: Vim9: cannot set an option to a boolean value
patch 8.2.2283: Vim9: crash when lambda has fewer arguments than expected
patch 8.2.2282: length check mismatch with argument of strncmp()
patch 8.2.2281: Vim9: compiled "wincmd" cannot be followed by bar
patch 8.2.2280: fuzzy matching doesn't give access to the scores
patch 8.2.2279: Vim9: memory leak with catch in skipped block
patch 8.2.2278: falling back to old regexp engine can some patterns
patch 8.2.2277: missing backslash
patch 8.2.2276: list of distributed files is outdated
Update runtime files.
patch 8.2.2275: CTRL-C not recognized in Mintty
patch 8.2.2274: badge for Travis is outdated
patch 8.2.2273: build failure
patch 8.2.2272: Vim9: extend() can violate the type of a variable
patch 8.2.2271: ml_get error when changing hidden buffer in Python
patch 8.2.2270: warning for size_t to int conversion
patch 8.2.2269: not all :hardcopy code covered by tests
patch 8.2.2268: Vim9: list unpack seen as declaration
patch 8.2.2267: Vim9: cannot use unlet for a dict member
patch 8.2.2266: Vim9: it can be hard to see where white space is missing
patch 8.2.2265: error message for missing endfunc/enddef is last line
patch 8.2.2264: Vim9: no error for mismatched :endfunc or :enddef
patch 8.2.2263: Vim9: compilation error with try-catch in skipped block
patch 8.2.2262: Vim9: converting bool to string prefixes v:
patch 8.2.2261: Vim9: boolean option gets string type
patch 8.2.2260: window resize test fails in very wide terminal
patch 8.2.2259: Test_Executable() fails when using chroot
patch 8.2.2258: not all OCaml related files are detected
patch 8.2.2257: Vim9: using -> for lambda is ambiguous
patch 8.2.2256: Vim9: cannot use function( after line break in :def function
patch 8.2.2255: Tcl test fails
patch 8.2.2254: Vim9: bool option type is number
patch 8.2.2253: Vim9: expr test fails
patch 8.2.2252: Vim9: crash when using lambda without return type in dict
patch 8.2.2251: test failures in legacy script
patch 8.2.2250: Vim9: sublist is ambiguous
patch 8.2.2249: termcodes test is flaky when used over ssh
patch 8.2.2248: ASAN error on exit with GUI
patch 8.2.2247: VMS: various smaller problems
patch 8.2.2246: cursor keys not recognized at the hit-Enter prompt
patch 8.2.2245: Vim9: return value of winrestcmd() cannot be executed
patch 8.2.2244: crash when making the window width negative
patch 8.2.2243: crash when popup mask contains zeroes
patch 8.2.2242: Vim9: bar line continuation does not work at script level
patch 8.2.2241: Build with Ruby and clang may fail
patch 8.2.2240: clientserver test fails if full path is used
patch 8.2.2239: Vim9: concatenating lines with backslash is inconvenient
patch 8.2.2238: Vim9: cannot load a Vim9 script without the +eval feature
patch 8.2.2237: CI on Mac fails in sed command
patch 8.2.2236: 'scroll' option can change when setting the statusline
patch 8.2.2235: build failure with some Ruby versions
patch 8.2.2234: command line wildmenu test often fails with Unix GUI
patch 8.2.2233: cannot convert a byte index into a character index
patch 8.2.2232: compiler error for falling through into next case
patch 8.2.2231: when "--remote file" is used "file" is not reloaded
patch 8.2.2230: Vim9: insert completion runs into error
patch 8.2.2229: build failure without the +eval feature
patch 8.2.2228: Vim9: cannot use ":e #" because # starts a comment
patch 8.2.2227: Vim9: recognizing lambda is too complicated
patch 8.2.2226: Vim9: script test fails
patch 8.2.2225: Vim9: error when using :import in legacy script twice
patch 8.2.2224: Vim9: crash if script reloaded with different variable type
patch 8.2.2223: Vim9: Reloading marks a :def function as deleted
patch 8.2.2222: Vim9: cannot keep script variables when reloading
patch 8.2.2221: if <Down> is mapped on the command line 'wildchar' is inserted
patch 8.2.2220: Vim9: memory leak when parsing nested parenthesis
patch 8.2.2219: Vim9: method call with expression not supported
patch 8.2.2218: Vim9: failure if passing more args to lambda than expected
patch 8.2.2217: Vim9: command modifiers not restored in catch block
patch 8.2.2216: Vim9: range with missing colon can be hard to spot
patch 8.2.2215: Vim9:  not recognized in global command
patch 8.2.2214: ":e#" does not give a warning for missing white space
patch 8.2.2213: checking white space around -> is not backwards compatible
patch 8.2.2212: Vim9: lambda with => does not work at the script level
patch 8.2.2211: MS-Windows: can't load Python dll if not in the path
patch 8.2.2210: Vim9: allocating a type to set TTFLAG_BOOL_OK
patch 8.2.2209: Vim9: return type of => lambda not parsed
patch 8.2.2208: Vim9: after reloading a script variable index may be invalid
patch 8.2.2207: illegal memory access if popup menu items are changed
Tweak the style a bit.
Remove table, it doesn't work
Attempt to fix markdown in table cell.
Attempt to align the logo without a markdown table.
patch 8.2.2206: :exe command line completion only works for first argument
patch 8.2.2205: Vim9: memory leak when parsing lambda fails
patch 8.2.2204: Vim9: using -> both for method and lambda is confusing
patch 8.2.2203: Moodle gift files are not recognized
patch 8.2.2202: write file test still fails on MS-Windows
patch 8.2.2201: write file test fails on MS-Windows
patch 8.2.2200: Vim9: lambda without white space around -> is confusing
patch 8.2.2199: first write after setting 'eol' does not have NL added
patch 8.2.2198: ml_get error when resizing window and using text property
Update runtime files.
patch 8.2.2197: assert arguments order reversed
patch 8.2.2196: :version output has extra spaces in compile and link command
patch 8.2.2195: failing tests for :const
patch 8.2.2194: Vim9: cannot use :const or :final at the script level
patch 8.2.2193: Vim9: can change constant in :def function
patch 8.2.2192: Codecov on github actions fails
patch 8.2.2191: Vim9: using wrong name with lambda in nested function
patch 8.2.2190: Vim9: crash when compiled with EXITFREE
patch 8.2.2189: cannot repeat a command that uses the small delete register
patch 8.2.2188: Vim9: crash when calling global function from :def function
patch 8.2.2187: Python 3 test fails sometimes
patch 8.2.2186: Vim9: error when using 'opfunc'
Add missing change to version.c
patch 8.2.2185: BufUnload is not triggered for the quickfix dummy buffer
patch 8.2.2184: Vim9: no error when using "2" for a line number
patch 8.2.2183: Vim9: value of 'edcompatible' and 'gdefault' are used
patch 8.2.2182: Vim9: value of 'magic' is still relevant
patch 8.2.2181: valgrind warnings for using uninitialized value
patch 8.2.2180: Vim9: test for error after error is flaky
patch 8.2.2179: Vim9: crash when indexing a dict with a number
patch 8.2.2178: Python 3: non-utf8 character cannot be handled
patch 8.2.2177: pattern "^" does not match if first character is combining
patch 8.2.2176: crash with a sequence of fold commands
patch 8.2.2175: github actions: clang-11 handling suboptimal
patch 8.2.2174: Mac version doesn't specify the CPU architecture
patch 8.2.2173: Vim9: get internal error when assigning to undefined variable
patch 8.2.2172: Vim9: number of arguments is not always checked
patch 8.2.2171: valgrind warning for using uninitialized value
patch 8.2.2170: Vim9: a global function defined in a :def function fails
patch 8.2.2169: Vim9: test leaves file behind
patch 8.2.2168: Vim9: error for assigning to dict of dict
patch 8.2.2167: Vim9: assign test fails
patch 8.2.2166: auto format doesn't work when deleting text
patch 8.2.2165: Vim9: assignment to dict member does not work
patch 8.2.2164: Vim9: autoload function doesn't work in uppercased script
patch 8.2.2163: crash when discarded exception is the current exception
patch 8.2.2162: Vim9: Cannot load or store autoload variables
patch 8.2.2161: arguments -T and -x not tested yet
patch 8.2.2160: various typos
patch 8.2.2159: Vim9: when declaring a list it is not allocated yet
patch 8.2.2158: CI on cirrus times out, coveralls doesn't always run
patch 8.2.2157: Vim9: can delete a Vim9 script variable from a function
patch 8.2.2156: Github actions run on pusing a tag
patch 8.2.2155: warning from Github actions for code analysis
patch 8.2.2154: popupwin test for terminal buffer fails sometimes
patch 8.2.2153: popupwin test for latin1 still fails sometimes
patch 8.2.2152: screenpos() does not include the WinBar offset
patch 8.2.2151: $dir not expanded when configure checks for moonjit
patch 8.2.2150: Github actions CI isn't used for all available platforms
patch 8.2.2149: popupwin test for latin1 sometimes fails
patch 8.2.2148: Vim9: crash when user command doesn't match
patch 8.2.2147: quickfix window title not updated in all tab pages
patch 8.2.2146: Vim9: automatic conversion of number to string for dict key
patch 8.2.2145: Vim9: concatenating lists does not adjust type of result
patch 8.2.2144: Vim9: some corner cases not tested
patch 8.2.2143: Vim9: dead code in compiling :unlet
patch 8.2.2142: memory leak when heredoc is not terminated
patch 8.2.2141: a user command with try/catch may not catch an expression error
patch 8.2.2140: build failure with tiny features
patch 8.2.2139: Vim9: unreachable code in assignment
patch 8.2.2138: Vim9: "exit_cb" causes Vim to exit
patch 8.2.2137: Vim9: :echo and :execute give error for empty argument
patch 8.2.2136: Vim9: Using uninitialized variable
patch 8.2.2135: Vim9: #{ still seen as start of dict in some places
patch 8.2.2134: Vim9: get E1099 when autocmd triggered in builtin function
patch 8.2.2133: Vim9: checking for a non-empty string is too strict
patch 8.2.2132: padding not drawn properly for popup window with title
patch 8.2.2131: Vim9: crash when lambda uses same var as assignment
patch 8.2.2130: Insert mode completion messages end up in message history
patch 8.2.2129: MS-Windows: Checking if a file name is absolute is slow
patch 8.2.2128: there is no way to do something on CTRL-Z
Update runtime files.
patch 8.2.2127: Vim9: executing user command from Vim9 script not tested
patch 8.2.2126: Ruby: missing function prototype
patch 8.2.2125: Vim9: leaking memory
patch 8.2.2124: Vim9: a range cannot be computed at runtime
patch 8.2.2123: after using a complete popup the buffer is listed
patch 8.2.2122: Vim9: crash when sourcing vim9script early
patch 8.2.2121: internal error when using \ze before \zs in a pattern
patch 8.2.2120: not all Perl functionality is tested
patch 8.2.2119: GTK3: status line background color is wrong
patch 8.2.2118: dead code in the job support
patch 8.2.2117: some functions use any value as a string
patch 8.2.2116: MS-Windows GUI: test for 'guifont' is incomplete
patch 8.2.2115: Vim9: some errors not tested for; dead code
patch 8.2.2114: Vim9: unreachable code in assignment
patch 8.2.2113: MS-Windows GUI: crash after using ":set guifont=" four times
patch 8.2.2112: running tests may leave some files behind
patch 8.2.2111: GTK: menu background is the same color as the main window
patch 8.2.2110: cannot use ":shell" when reading from stdin
patch 8.2.2109: "vim -" does not work well when modifyOtherKeys is enabled
patch 8.2.2108: Vim9: no test to check for :let error
patch 8.2.2107: Vim9: some errors not tested
patch 8.2.2106: TOML files are not recognized
patch 8.2.2105: sound test is a bit flaky
patch 8.2.2104: build problem with Ruby 2.7
patch 8.2.2103: Vim9: unreachable code
patch 8.2.2102: Vim9: not all error messages tested
patch 8.2.2101: Vim9: memory leak when literal dict has an error
patch 8.2.2100: insufficient testing for function range and dict
patch 8.2.2099: Vim9: some checks are not tested
patch 8.2.2098: Vim9: function argument of sort() and map() not tested
patch 8.2.2097: Vim9: using :silent! when calling a function prevents abort
patch 8.2.2096: Vim9: command modifiers not restored after assignment
patch 8.2.2095: Vim9: crash when failed dict member is followed by concat
patch 8.2.2094: when an expression fails getting next command may be wrong
patch 8.2.2093: Vim9: script test sometimes fails
patch 8.2.2092: Vim9: unpredictable errors for script tests
patch 8.2.2091: MS-Windows: build warnings
patch 8.2.2090: Vim9: dict does not accept a key in quotes
patch 8.2.2089: libvterm test fails to build on Mac
patch 8.2.2088: Vim9: script test sometimes fails
patch 8.2.2087: Vim9: memory leak when statement is truncated
patch 8.2.2086: libvterm tests are only run on Linux
patch 8.2.2085: Qt translation file is recognized as typescript
patch 8.2.2084: CTRL-V U doesn't work to enter a Unicode character
patch 8.2.2083: Vim9: crash when using ":silent!" and getting member fails
patch 8.2.2082: Vim9: can still use the depricated #{} dict syntax
patch 8.2.2081: Vim9: cannot handle a linebreak after "=" in assignment
patch 8.2.2080: Vim9: no proper error message for using s:var in for loop
patch 8.2.2079: Vim9: cannot put a linebreak before or after "in" of ":for"
patch 8.2.2078: illegal memory access when using :print on invalid text
patch 8.2.2077: build failure with small features
patch 8.2.2076: MS-Windows console: sometimes drops typed characters
patch 8.2.2075: error for const argument to mapnew()
patch 8.2.2074: Vim9: using :normal from Vim9 script can't handle range
patch 8.2.2073: Vim9: for with unpack only works for local variables
patch 8.2.2072: Vim9: list assign not well tested
patch 8.2.2071: Vim9: list assign doesn't except empty remainder list
patch 8.2.2070: can't get the exit value in VimLeave(Pre) autocommands
Update runtime files
patch 8.2.2069: the quickfix window is not updated after setqflist()
patch 8.2.2068: transparent syntax item uses start/end of containing region
patch 8.2.2067: cursor position in popup terminal is wrong
patch 8.2.2066: Vim9: assignment with += doesn't work
patch 8.2.2065: using map() and filter() on a range() is inefficient
patch 8.2.2064: terminal: cursor is on while redrawing, causing flicker
patch 8.2.2063: Vim9: only one level of indexing supported
patch 8.2.2062: <Cmd> does not handle CTRL-V
patch 8.2.2061: Vim9: E1030 error when using empty string for term_sendkeys()
patch 8.2.2060: check for features implemented with "if"
patch 8.2.2059: Amiga: can't find plugins
patch 8.2.2058: using mkview/loadview changes the jumplist
patch 8.2.2057: getting the selection may trigger TextYankPost autocmd
patch 8.2.2056: configure fails when building with implicit-function-declaration
patch 8.2.2055: MS-Windows: two Vim instances may use the same temp file
patch 8.2.2054: Amiga: FEAT_ARP defined when it should not
patch 8.2.2053: Vim9: lamba doesn't accept argument types
patch 8.2.2052: Vim9: "edit +4 fname" gives an error
patch 8.2.2051: Vim9: crash when aborting a user function call
patch 8.2.2050: search test contains unneeded sleeps
patch 8.2.2049: Amiga: obsolete function
patch 8.2.2048: Amiga: obsolete code
patch 8.2.2047: Amiga: FEAT_ARP defined when it should not
patch 8.2.2046: some test failures don't give a clear error
patch 8.2.2045: highlighting a character too much with incsearch
patch 8.2.2044: MS-Windows: swap file test sometimes fails
patch 8.2.2043: GTK3: white border around text stands out
patch 8.2.2042: build failure with +profile but without +reltime
patch 8.2.2041: haskell filetype not optimally recognized
patch 8.2.2040: terminal buffer disappears even when 'bufhidden' is "hide"
patch 8.2.2039: viminfo is not written when creating a new file
patch 8.2.2038: compiler test fails on MS-Windows
patch 8.2.2037: compiler test depends on list of compiler plugins
patch 8.2.2036: buffer messed up if creating the quickfix window fails
patch 8.2.2035: MS-Windows: some tests may fail
patch 8.2.2034: Vim9: list unpack in for statement not compiled yet
patch 8.2.2033: Vim9: :def without argument gives compilation error
patch 8.2.2032: cabalconfig and cabalproject filetypes not recognized
patch 8.2.2031: some tests fail when run under valgrind
patch 8.2.2030: some tests fail on Mac
patch 8.2.2029: Coverity warns for not checking return value
patch 8.2.2028: Coverity warns for using an uninitialized variable
patch 8.2.2027: Coverity warnts for uninitialized field
patch 8.2.2026: Coverity warns for possibly using not NUL terminated string
Update runtime files
patch 8.2.2025: Amiga: Not all colors are used on OS4
patch 8.2.2024: flicker when redrawing a popup with a title and border
patch 8.2.2023: Vim: memory leak when :execute fails
patch 8.2.2022: Vim9: star command recognized errornously
patch 8.2.2021: Vim9: get E1099 when autocommand resets did_emsg
patch 8.2.2020: some compilers do not like the "namespace" argument
patch 8.2.2019: swap file test fails on MS-Windows
patch 8.2.2018: Vim9: script variable not found from lambda
patch 8.2.2017: missing part of the dict change
patch 8.2.2016: swap file test is a little flaky
patch 8.2.2015: Vim9: literal dict #{} is not like any other language
patch 8.2.2014: using CTRL-O in a prompt buffer moves cursor to start
patch 8.2.2013: Vim9: not skipping white space after unary minus
patch 8.2.2012: Vim9: confusing error message when using bool wrongly
patch 8.2.2011: "syn sync" reports a very large number
patch 8.2.2010: Vim9: compiling fails for unreachable return statement
patch 8.2.2009: MS-Windows: setting $LANG in gvimext only causes problems
patch 8.2.2008: MS-Windows GUI: handling channel messages lags
patch 8.2.2007: test for insert mode in popup is not reliable
patch 8.2.2006: .pbtxt files are not recognized
patch 8.2.2005: redoing a mapping with <Cmd> doesn't work properly
patch 8.2.2004: compiler warning for uninitialized variable
patch 8.2.2003: build error with +conceal but without +popupwin
patch 8.2.2002: Vim9: lambda argument shadowed by function name
patch 8.2.2001: Vim9: :def function does not apply 'maxfuncdepth'
patch 8.2.2000: Vim9: dict.key assignment not implemented yet
patch 8.2.1999: terminal popup test sometimes fails
patch 8.2.1998: terminal Cmd test sometimes fails to close popup
patch 8.2.1997: window changes when using bufload() while in a terminal popup
patch 8.2.1996: Vim9: invalid error for argument of extend()
patch 8.2.1995: the popup menu can cause too much redrawing
patch 8.2.1994: MS-Windows: MinGW always does a full build
patch 8.2.1993: occasional failure of the netbeans test
patch 8.2.1992: build fails with small features
patch 8.2.1991: Coverity warns for not using the ga_grow() return value
patch 8.2.1990: cursor position wrong in terminal popup with finished job
patch 8.2.1989: info popup triggers WinEnter and WinLeave autocommands
patch 8.2.1988: still in Insert mode when opening terminal popup
patch 8.2.1987: MS-Windows: Win32.mak is no longer needed
patch 8.2.1986: expression test is flaky on Appveyor
patch 8.2.1985: crash when closing terminal popup with <Cmd> mapping
patch 8.2.1984: cannot use :vimgrep in omni completion
patch 8.2.1983: ml_get error when using <Cmd> to open a terminal
patch 8.2.1982: quickfix window now updated when adding invalid entries
patch 8.2.1981: MinGW: parallel compilation might fail
patch 8.2.1980: Vim9: some tests are not done at the script level
patch 8.2.1979: "term_opencmd" option of term_start() is truncated
patch 8.2.1978: making a mapping work in all modes is complicated
patch 8.2.1977: Vim9: error for using a string in a condition is confusing
patch 8.2.1976: cannot backspace in prompt buffer after using cursor-left
patch 8.2.1975: Win32: memory leak when encoding conversion fails
patch 8.2.1974: Vim9: test for has('gui_running') fails with VIMDLL
patch 8.2.1973: finding a patch number can be a bit slow
patch 8.2.1972: crash when recreating nested fold
patch 8.2.1971: memory leak when map() fails
patch 8.2.1970: it is easy to make mistakes when cleaning up swap files
patch 8.2.1969: Vim9: map() may change the list or dict item type
patch 8.2.1968: Vim9: has() assumes a feature does not change dynamically
patch 8.2.1967: the session file does not restore the alternate file
patch 8.2.1966: popup becomes current window after closing a terminal window
patch 8.2.1965: Vim9: tests fail without the channel feature
patch 8.2.1964: not all ConTeXt files are recognized
patch 8.2.1963: crash when using a popup window with "latin1" encoding
patch 8.2.1962: netbeans may access freed memory
Correct list of patches.
patch 8.2.1961: various comments can be improved
patch 8.2.1960: warning for uninitialized variable
Update runtime files
patch 8.2.1959: crash when terminal buffer name is made empty
patch 8.2.1958: build failure with timers
patch 8.2.1957: diff and cursorcolumn highlighting don't mix
patch 8.2.1956: Vim9: cannot specify argument types for lambda
patch 8.2.1955: Vim9: not all command modifiers are tested
patch 8.2.1954: Vim9: not all command modifiers are tested
patch 8.2.1953: Vim9: extra "unknown" error after other error
patch 8.2.1952: Vim9: crash when using a NULL dict key
patch 8.2.1951: test for list and dict fails
patch 8.2.1950: Vim9: crash when compiling function fails when getting type
patch 8.2.1949: Vim9: using extend() on null dict is silently ignored
patch 8.2.1948: GUI: crash when handling message while closing a window
patch 8.2.1947: crash when using "zj" without folds
patch 8.2.1946: sort() with NULL string not tested
patch 8.2.1945: crash when passing NULL function to reduce()
patch 8.2.1944: Netbeans test is flaky
patch 8.2.1943: Vim9: wrong error message when colon is missing
patch 8.2.1942: insufficient test coverage for the Netbeans interface
patch 8.2.1941: Ex mode test fails on MS-Windows with GUI
patch 8.2.1940: Vim9: browse modifier test fails on Mac
patch 8.2.1939: invalid memory access in Ex mode with global command
patch 8.2.1938: wiping out a terminal buffer makes some tests fail
patch 8.2.1937: Vim9: test for confirm modifier fails in some situations
patch 8.2.1936: session sets the local 'scrolloff' value to the global value
patch 8.2.1935: sort test fails on Mac
patch 8.2.1934: Vim9: command modifiers in :def function not tested
patch 8.2.1933: cannot sort using locale ordering
patch 8.2.1932: compiler warnings when building with Athena GUI
patch 8.2.1931: Vim9: arguments of extend() not checked at compile time
patch 8.2.1930: wrong input if removing shift results in special key code
patch 8.2.1929: MS-Windows: problem loading Perl 5.32
patch 8.2.1928: Vim9: "silent!" not effective when list index is wrong
patch 8.2.1927: Vim9: get unknown error with an error in a timer function
patch 8.2.1926: cannot use a space in 'spellfile'
patch 8.2.1925: list/dict test fails
patch 8.2.1924: Vim9: crash when indexing dict with NULL key
patch 8.2.1923: Vim9: "filter" command modifier doesn't work
patch 8.2.1922: Win32: scrolling problems when part of window is off-screen
patch 8.2.1921: fuzzy matching does not recognize path separators
patch 8.2.1920: listlbr test fails when run after another test
patch 8.2.1919: assert_fails() setting emsg_silent changes normal execution
patch 8.2.1918: Vim9: E1100 mentions :let
patch 8.2.1917: no test for improved Man command
patch 8.2.1916: Vim9: function call is aborted even when "silent!" is used
patch 8.2.1915: Vim9: error for wrong number of arguments is not useful
patch 8.2.1914: Vim9: cannot put line break in expression for '=' register
patch 8.2.1913: GTK GUI: rounding for the cell height is too strict
patch 8.2.1912: with Python 3.9 some tests fail
patch 8.2.1911: tiny build fails
patch 8.2.1910: reading past the end of the command line
Update runtime files.
patch 8.2.1909: number of status line items is limited to 80
patch 8.2.1908: Lua is initialized even when not used
patch 8.2.1907: complete_info().selected may be wrong
patch 8.2.1906: warning for signed/unsigned
patch 8.2.1905: the wininfo list may contain stale entries
patch 8.2.1904: still using default option values after using ":badd +1"
patch 8.2.1903: buffer test fails with normal features
patch 8.2.1902: default option values changed with :badd for existing buffer
patch 8.2.1901: variable completion does not work in command line window
patch 8.2.1900: Vim9: command modifiers do not work
patch 8.2.1899: crash in out-of-memory situation
patch 8.2.1898: command modifier parsing always uses global cmdmod
patch 8.2.1897: command modifiers are saved and set inconsistently
patch 8.2.1896: valgrind warns for using uninitialized memory
patch 8.2.1895: Vim9: silent command modifier test fails
patch 8.2.1894: Vim9: command modifiers are not supported
patch 8.2.1893: fuzzy matching does not support multiple words
patch 8.2.1892: valgrind warns for using uninitialized access in tests
patch 8.2.1891: Vim9: skipping over expression doesn't handle line breaks
patch 8.2.1890: Vim9: strange error for subtracting from a list
patch 8.2.1889: Vim9: errornous error for missing white space after {}
patch 8.2.1888: Vim9: getbufline(-1, 1, '$') gives an error
patch 8.2.1887: Github actions not optimally configured
patch 8.2.1886: using ":silent!" in a popup filter has unexpected effect
patch 8.2.1885: filetype tests unnessarily creates swap files
patch 8.2.1884: compiler warning for uninitialized variable
patch 8.2.1883: compiler warnings when using Python
patch 8.2.1882: Vim9: v:disallow_let is no longer needed
patch 8.2.1881: cannot build with GTK3
patch 8.2.1880: Vim9: asan complains about adding zero to NULL
patch 8.2.1879: Vim9: argument types of insert() not checked when compiling
patch 8.2.1878: GTK: error for redefining function
patch 8.2.1877: test for function list fails
patch 8.2.1876: Vim9: argument types are not checked at compile time
patch 8.2.1875: warning when building GTK gui
patch 8.2.1874: can't do something just before leaving Insert mode
patch 8.2.1873: Vim9: missing white space when using <f-args>
patch 8.2.1872: matchfuzzy() does not prefer sequential matches
patch 8.2.1871: using %v in 'errorformat' may fail before %Z
patch 8.2.1870: Vim9: no need to keep all script variables
patch 8.2.1869: Vim9: memory leak when using add()
patch 8.2.1868: Vim9: no error for missing space after comma in dict
patch 8.2.1867: Vim9: argument to add() not checked for blob
patch 8.2.1866: Vim9: appending to pushed blob gives wrong result
patch 8.2.1865: Vim9: add() does not check type of argument
patch 8.2.1864: Vim9: no error for wrong list type
patch 8.2.1863: json code not sufficiently tested
patch 8.2.1862: vim9: memory leak when compiling lambda fails
patch 8.2.1861: Vim9: no specific error when parsing lambda fails
patch 8.2.1860: Vim9: memory leak when throwing empty string
patch 8.2.1859: Vim9: crash in unpack assignment
patch 8.2.1858: Vim9: filter functions return number instead of bool
patch 8.2.1857: Vim9: using job_status() on an unused var gives an error
patch 8.2.1856: "2resize" uses size of current window
patch 8.2.1855: Vim9: get error message when nothing is wrong
patch 8.2.1854: Vim9: crash when throwing exception for NULL string
patch 8.2.1853: "to_f" is recognized at "topleft" modifier
patch 8.2.1852: map() returing zero for NULL list is unexpected
patch 8.2.1851: Vim9: "!" followed by space incorrectly used
patch 8.2.1850: "vat" does not select tags correctly over line break
patch 8.2.1849: Vim9: garbage collection frees block-local variables
patch 8.2.1848: crash when passing a NULL string or list to popup_settext()
patch 8.2.1847: Vim9: using negative value for unsigned type
patch 8.2.1846: Vim9: block variables are not found in compiled function
patch 8.2.1845: Vim9: function defined in a block can't use block variables
patch 8.2.1844: using "q" at the more prompt doesn't stop a long message
patch 8.2.1843: Netbeans: with huge buffer number memory allocation may fail
patch 8.2.1842: crash when USE_FNAME_CASE is defined and using :browse
patch 8.2.1841: Vim9: test for compilation error fails in normal build
patch 8.2.1840: Vim9: error message is not clear about compilation error
patch 8.2.1839: Vim9: memory leaks reported in assign test
patch 8.2.1838: Vim9: cannot insert a comment line in an expression
patch 8.2.1837: using "gn" after "gN" does not work
patch 8.2.1836: autocmd test fails on pacifist systems
patch 8.2.1835: ":help ??" finds the "!!" tag
patch 8.2.1834: PyEval_InitThreads() is deprecated in Python 3.9
patch 8.2.1833: when reading from stdin dup() is called twice
patch 8.2.1832: readdirex() error is displayed as a message
patch 8.2.1831: file missing from distribution
Update runtime files.
patch 8.2.1830: MS-Windows: Python3 issue with stdin
patch 8.2.1829: warnings when executing Github actions
patch 8.2.1828: build failure without the +eval feature
patch 8.2.1827: filetype detection does not test enough file names
patch 8.2.1826: Vim9: cannot use a {} block at script level
patch 8.2.1825: Vim9: accessing freed memory
patch 8.2.1824: Vim9: variables at the script level escape their scope
patch 8.2.1823: "gN" does not select the matched string
patch 8.2.1822: list test doesn't fail
patch 8.2.1821: Vim9: concatenating to a NULL list doesn't work
patch 8.2.1820: Vim9: crash when error happens in timer callback
patch 8.2.1819: Vim9: Memory leak when using a closure
patch 8.2.1818: SE Linux: deprecation warning for security_context_t
patch 8.2.1817: Vim9: wrong instruction when reusing a local variable spot
patch 8.2.1816: Vim9: another memory leak when using function reference
patch 8.2.1815: Vim9: memory leak when using function reference
patch 8.2.1814: missing change to remove "static"
patch 8.2.1813: Vim9: can assign wrong type to script dict
patch 8.2.1812: Vim9: nested closure throws an internal error
patch 8.2.1811: mapping Ctrl-key does not work for '{', '}' and '|'
patch 8.2.1810: some code in normal.c not covered by tests
patch 8.2.1809: mapping some keys with Ctrl does not work properly
patch 8.2.1808: no test coverage for ":spelldump!"
patch 8.2.1807: can use :help in a terminal popup window
patch 8.2.1806: MS-Windows with Python: Vim freezes after import command
patch 8.2.1805: Unix: terminal mode changed when using ":shell"
patch 8.2.1804: resolve('/') returns an empty string
patch 8.2.1803: a few failures are not tested
patch 8.2.1802: Vim9: crash with unterminated dict
patch 8.2.1801: undo file not found when using ":args" or ":next"
patch 8.2.1800: Vim9: memory leak if "if" condition is invalid
patch 8.2.1799: some Normal mode commands not fully tested
patch 8.2.1798: Vim9: trinary operator condition is too permissive
patch 8.2.1797: Vim9: some parts of the code not tested
patch 8.2.1796: Vim9: invalid memory access with weird function name
patch 8.2.1795: Vim9: operators && and || have a confusing result
patch 8.2.1794: no falsy Coalescing operator
patch 8.2.1793: not consistently giving the "is a directory" warning
patch 8.2.1792: Configure does not recognize Racket 6.1+
patch 8.2.1791: Vim9: debugger test fails
patch 8.2.1790: MS-Windows with Python: crash when executed from Vifm
patch 8.2.1789: Vim9: crash with invalid list constant
patch 8.2.1788: Vim9: still allows :let for declarations
patch 8.2.1787: crash with 'incsearch' and very long line
patch 8.2.1786: various Normal mode commands not fully tested
patch 8.2.1785: compiler warning for strcp() out of bounds
patch 8.2.1784: commits are not scanned for security problems
patch 8.2.1783: try-catch test fails
patch 8.2.1782: Vim9: cannot pass boolean to mapset()
patch 8.2.1781: writing to prompt buffer interferes with insert mode
patch 8.2.1780: statusline not updated when splitting windows
patch 8.2.1779: some debian changelog files are not recognized
patch 8.2.1778: Vim9: returning from a partial call clears outer context
patch 8.2.1777: Vim9: some assignment tests in the wrong file
patch 8.2.1776: filetype.vim may be loaded twice
patch 8.2.1775: MS-Windows: adding a long quickfix list is slow
patch 8.2.1774: GTK: hang when forced to exit
patch 8.2.1773: crash when calling mapset() with a list as first argument
patch 8.2.1772: cannot use CTRL-W <Down> to move out of a terminal window
patch 8.2.1771: synIDattr() cannot get the value of ctermul
patch 8.2.1770: invalid memory use when using SpellFileMissing autocmd
patch 8.2.1769: popup filter interferes with using :normal to move the cursor
Update runtime files.
patch 8.2.1768: cannot use the help menu from a terminal window
patch 8.2.1767: Vim9: test fails with python support
patch 8.2.1766: Vim9: Some tests are still using :let
patch 8.2.1765: Vim9: some tests use "var var"
patch 8.2.1764: Vim9: no error when assigning to script var with wrong type
patch 8.2.1763: Vim9: cannot use "true" for popup window scrollbar option
patch 8.2.1762: when a timer uses :stopinsert completion isn't stopped
patch 8.2.1761: Vim9: Some tests are still using :let
patch 8.2.1760: Vim9: crash when end marker is missing
patch 8.2.1759: Vim9: Some tests are still using :let
patch 8.2.1758: Vim9: type of unmaterialized list is wrong
patch 8.2.1757: Mac: default locale is lacking the encoding
patch 8.2.1756: Vim9: :let will soon be disallowed
patch 8.2.1755: Vim9: crash when using invalid heredoc marker
patch 8.2.1754: completion with spell checking not tested
patch 8.2.1753: Vim9: crash when using import at script level
patch 8.2.1752: GTK GUI: cannot map alt-? with <A-?>
patch 8.2.1751: using 2 where bool is expected may throw an error
patch 8.2.1750: popup_setoptions() setting firstline fails if cursorline set
patch 8.2.1749: Vim9: crash when closure fails in nested function
patch 8.2.1748: closing split window in other tab may cause a crash
patch 8.2.1747: result of expand() unexpectedly depends on 'completeslash'
patch 8.2.1746: Vim9: cannot use "fina" for "finally"
patch 8.2.1745: tiny version doesn't build
patch 8.2.1744: Vim9: using ":const!" is weird
patch 8.2.1743: cannot build without the eval feature
patch 8.2.1742: test still fails without the terminal feature
patch 8.2.1741: pathshorten() only supports using one character
patch 8.2.1740: test fails without the terminal feature
patch 8.2.1739: Vim9: crash when compiling a manually defined function
patch 8.2.1738: Mac: str2float() recognizes comma instead of decimal point
patch 8.2.1737: cursor line highlight in popup window is not always updated
patch 8.2.1736: failure to compile a pattern not tested much
patch 8.2.1735: Github actions appear to timeout too soon
patch 8.2.1734: Vim9: cannot use a funcref for a closure twice
patch 8.2.1733: Vim9: memory leaks when using nested function
patch 8.2.1732: stuck when win_execute() for a popup causes an error
patch 8.2.1731: Vim9: cannot use += to append to empty NULL list
patch 8.2.1730: Vim9: cannot use member of unknown type
patch 8.2.1729: endless loop when ":normal" feeds popup window filter
patch 8.2.1728: compiler warning for using uninitialized variable
patch 8.2.1727: a popup created with "cursorline" will ignore "firstline"
patch 8.2.1726: fuzzy matching only works on strings
patch 8.2.1725: not all Pascal files are recognized
patch 8.2.1724: Vim9: assignment tests spread out
patch 8.2.1723: Vim9: Variable argument name cannot start with underscore
patch 8.2.1722: Vim9: cannot assign a lambda to a variable of type function
patch 8.2.1721: MS-Windows installer doesn't work
patch 8.2.1720: Vim9: memory leak with heredoc that isn't executed
patch 8.2.1719: Vim9: no error if comma is missing in between arguments
patch 8.2.1718: Vim9: :def function disallows "firstline" for no good reason
patch 8.2.1717 Problem:    MS-Windows installer doesn't have Russian translations. Solution:   Add Russian translations. (closes #6985)
patch 8.2.1716: options window has duplicate translations
patch 8.2.1715: Motif GUI: commented out code missed {}
patch 8.2.1714: text properties corrupted with substitute command
patch 8.2.1713: Motif GUI: crash when setting menu colors
Update runtime files.
patch 8.2.1712: Vim9: leaking memory when calling a lambda
patch 8.2.1711: Vim9: leaking memory when using partial
patch 8.2.1710: Vim9: list of list type can be wrong
patch 8.2.1709: Vim9: memory leak when using multiple closures
patch 8.2.1708: Vim9: error message for function has unpritable characters
patch 8.2.1707: small inconsitency in highlight test
patch 8.2.1706: Vim9: crash after running into the "Multiple closures" error
patch 8.2.1705: "verbose hi Name" reports incorrect info after ":hi clear"
patch 8.2.1704: Vim9: crash in for loop when autoload script has an error
patch 8.2.1703: ":highlight clear" does not restore default link
patch 8.2.1702: crash when using undo after deleting folded lines
patch 8.2.1701: Vim9: sort("i") does not work
patch 8.2.1700: Vim9: try/catch causes wrong value to be returned
patch 8.2.1699: build failure due to missing error message
patch 8.2.1698: cannot lock a variable in legacy Vim script like in Vim9
patch 8.2.1697: inconsistent capitalization of error messages
patch 8.2.1696: unused (duplicate) macros
patch 8.2.1695: Vim9: crash when using varargs type "any"
patch 8.2.1694: compiler warning for loss if data
patch 8.2.1693: "hi def" does not work for cleared highlight
patch 8.2.1692: build fails because TTFLAG_STATIC is missing
patch 8.2.1691: Vim9: list<any> is not accepted where list<number> is expected
patch 8.2.1690: text properties not adjusted for "I" in Visual block mode
patch 8.2.1689: 'colorcolumn' doesn't show in indent
patch 8.2.1688: increment/decrement removes text property
patch 8.2.1687: Vim9: out of bounds error
patch 8.2.1686: Vim9: "const!" not sufficiently tested
patch 8.2.1685: Vim9: cannot declare a constant value
patch 8.2.1684: "gF" does not use line number after file in Visual mode
patch 8.2.1683: Vim9: assignment test fails
patch 8.2.1682: Vim9: const works in an unexpected way
patch 8.2.1681: Vim9: unnessary :call commands in tests
patch 8.2.1680: Vim9: line number for compare error is wrong
patch 8.2.1679: Vim9: ":*" is not recognized as a range
patch 8.2.1678: crash when using ":set" after ":ownsyntax"
patch 8.2.1677: memory access errors when calling setloclist() in autocommand
patch 8.2.1676: compiler warnings for function typecast
patch 8.2.1675: MinGW: testdir makefile deletes non-existing file
patch 8.2.1674: Vim9: internal error when using variable that was not set
patch 8.2.1673: complete_info() selected index has an invalid value
patch 8.2.1672: v_lock is used when it is not initialized
patch 8.2.1671: Vim9: stray error for missing white space
patch 8.2.1670: a couple of gcc compiler warnings
patch 8.2.1669: Vim9: memory leak when storing a value fails
patch 8.2.1668: Vim9: not accepting 0 or 1 as bool when type is any
patch 8.2.1667: local function name cannot shadow a global function name
patch 8.2.1666: the initial value of 'backupskip' can have duplicate items
patch 8.2.1665: cannot do fuzzy string matching
patch 8.2.1664: memory leak when using :mkview with a terminal buffer
patch 8.2.1663: options window entries cannot be translated
patch 8.2.1662: :mksession does not restore shared terminal buffer properly
patch 8.2.1661: cannot connect to 127.0.0.1 for host with only IPv6 addresses
patch 8.2.1660: assert functions require passing expected as first argument
patch 8.2.1659: spellfile code not completely tested
patch 8.2.1658: expand('<stack>') has trailing ".."
patch 8.2.1657: Vim9: no proper error for nested ":def!"
patch 8.2.1656: Vim9: callstack wrong if :def function calls :def function
patch 8.2.1655: cannot build with Strawberry Perl 5.32.0
patch 8.2.1654: when job writes to hidden buffer current window is wrong
patch 8.2.1653: expand('<stack>') does not include the final line number
patch 8.2.1652: cannot translate lines in the options window
patch 8.2.1651: spellfile code not completely tested
patch 8.2.1650: Vim9: result of && and || expression is not bool in script
patch 8.2.1649: GTK3: using old file chooser
patch 8.2.1648: Amiga: no common build file for Amiga (-like) systems
patch 8.2.1647: Vim9: result of expression with && and || is not a bool
patch 8.2.1646: Amiga: Unnecessary #include
patch 8.2.1645: GTK3: icons become broken images when resized
patch 8.2.1644: Vim9: cannot assign 1 and 0 to bool at script level
patch 8.2.1643: Vim9: :defcompile compiles dead functions
patch 8.2.1642: otions test fails
patch 8.2.1641: Vim9: cannot use 0 or 1 where a bool is expected
patch 8.2.1640: Amiga: missing header for getgrgid()
patch 8.2.1639: options window cannot be translated
patch 8.2.1638: leaking memory when popup filter function can't be called
patch 8.2.1637: Vim9: :put ={expr} does not work inside :def function
patch 8.2.1636: get stuck if a popup filter causes an error
patch 8.2.1635: no digraph for 0x2022 BULLET
Update runtime files.
patch 8.2.1634: loop to handle keys for the command line is too long
patch 8.2.1633: some error messages are internal but do not use iemsg()
patch 8.2.1632: not checking the context of test_fails()
patch 8.2.1631: test_fails() does not check the context of the line number
patch 8.2.1630: terminal test fails
patch 8.2.1629: test fails without terminal feature
patch 8.2.1628: Vim9: cannot pass "true" to timer_paused()
patch 8.2.1627: Vim9: cannot pass "true" to submatch/term_gettty/term_start
patch 8.2.1626: test for strchars() fails with different error number
patch 8.2.1625: compiler warning for use of fptr_T
patch 8.2.1624: Vim9: cannot pass "true" to split(), str2nr() and strchars()
patch 8.2.1623: Vim9: using :call where it is not needed
patch 8.2.1622: loop to handle keys for the command line is too long
patch 8.2.1621: crash when using submatch(0, 1) in substitute()
patch 8.2.1620: searchcount() test fails
patch 8.2.1619: Vim9: cannot pass "true" to spellsuggest()
patch 8.2.1618: Vim9: cannot pass "true" to setloclist()
patch 8.2.1617: Vim9: cannot pass "true" to win_splitmove()
patch 8.2.1616: Vim9: cannot pass "true" to synID()
patch 8.2.1615: Vim9: cannot pass "true" to searchdecl()
patch 8.2.1614: Vim9: cannot pass "true" to searchcount()
patch 8.2.1613: Vim9: cannot pass "true" to prop_type_add()
patch 8.2.1612: Vim9: cannot pass "true" to prop_remove()
patch 8.2.1611: Vim9: cannot pass "true" to nr2char()
patch 8.2.1610: Vim9: cannot pass "true" to list2str() and str2list()
patch 8.2.1609: Vim9: test fails when build without +channel
patch 8.2.1608: Vim9: getchar() test fails with GUI
patch 8.2.1607: Vim9: getchar() test fails on MS-Windows
patch 8.2.1606: Vim9: cannot use "true" with has()
patch 8.2.1605: default maintainer on github is wrong
patch 8.2.1604: Vim9: cannot use "true" with getcompletion()
patch 8.2.1603: Vim9: cannot use "true" with getchar()
patch 8.2.1602: Vim9: cannot use 'true" with getbufinfo()
patch 8.2.1601: Vim9: cannot use 'true" with garbagecollect()
patch 8.2.1600: Vim9: cannot use "true" with deepcopy()
patch 8.2.1599: missing line end when skipping a long line with :cgetfile
patch 8.2.1598: starting a hidden terminal resizes the current window
patch 8.2.1597: the channel source file is too big
patch 8.2.1596: using win_screenpos('.') in tests works but is wrong
patch 8.2.1595: cannot easily see what Vim sends to the terminal
patch 8.2.1594: pull requests on github do not notify a maintainer
patch 8.2.1593: tests do not check the error number properly
patch 8.2.1592: Vim9: passing "true" to char2nr() fails
patch 8.2.1591: using winheight('.') in tests works but is wrong
patch 8.2.1590: Vim9: bufnr() doesn't take "true" argument
patch 8.2.1589: term_start() options for size are overruled by 'termwinsize'
patch 8.2.1588: cannot read back the prompt of a prompt buffer
patch 8.2.1587: loop for handling keys for the command line is too long
patch 8.2.1586: :resize command not fully tested
patch 8.2.1585: messages in globals.h not translated
patch 8.2.1584: Vim9: cannot use "true" for "skipstart" in prop_find()
patch 8.2.1583: MS-Windows: cannot easily measure code coverage
patch 8.2.1582: the channel log does not show typed text
patch 8.2.1581: using line() for global popup window doesn't work
patch 8.2.1580: wildmenu does not work properly
patch 8.2.1579: reports from asan are not optimal
patch 8.2.1578: Vim9: popup_clear() does not take "true" as argument
patch 8.2.1577: Vim9: hasmapto()/mapcheck()/maparg() do nottake "true" arg
patch 8.2.1576: Vim9: index() does not take "true" as argument
patch 8.2.1575: Vim9: globpath() doesnot take "true" as argument
patch 8.2.1574: Vim9: glob() doesnot take "true" as argument
patch 8.2.1573: Vim9: getreg() does not take "true" as argument
patch 8.2.1572: Vim9: expand() does not take "true" as argument
patch 8.2.1571: Vim9: count() third argument cannot be "true"
patch 8.2.1570: configure check for dirfd() does not work on HPUX
patch 8.2.1569: Vim9: fixes not tested; failure in getchangelist()
patch 8.2.1568: prop_find() skips properties in the same line
patch 8.2.1567: no example to use ubsan with clang
patch 8.2.1566: not all Bazel files are recognized
patch 8.2.1565: spellfile test sometimes fails
patch 8.2.1564: a few remaining errors from ubsan
patch 8.2.1563: Vim9: error when using '%" with setbufvar() r getbufvar()
patch 8.2.1562: Vim9: error when using "%" where a buffer is expected
patch 8.2.1561: using NULL pointers in fold code
patch 8.2.1560: using NULL pointers in some code
patch 8.2.1559: s390x tests work again
patch 8.2.1558: signs test fails
patch 8.2.1557: crash in :vimgrep when started as "vim -n"
patch 8.2.1556: cursorline highlighting always overrules sign highlighting
patch 8.2.1555: not all tests are executed on Github Actions
patch 8.2.1554: crash in normal test
patch 8.2.1553: crash in edit test
patch 8.2.1552: warnings from asan with clang-11
patch 8.2.1551: Vim9: error for argument type does not mention the number
patch 8.2.1550: Vim9: bufname('%') gives an error
patch 8.2.1549: "r" fails if 'esckeys' is off and modifyOtherKeys is used
patch 8.2.1548: cannot move position of "%%" in message translations
patch 8.2.1547: various comment problems
patch 8.2.1546: build rule for Vim.app is unused
patch 8.2.1545: ch_logfile() is unclear about closing when forking
Update runtime files.
patch 8.2.1544: cannot translate messages in a Vim script
patch 8.2.1543: Vim9: test with invalid SID is skipped in the GUI
patch 8.2.1542: Vim9: test with invalid SID does not work in the GUI
patch 8.2.1541: Vim9: cannot find function reference for s:Func
patch 8.2.1540: the user cannot try out emoji character widths
patch 8.2.1539: using invalid script ID causes a crash
patch 8.2.1538: Python: iteration over vim objects fails to keep reference
patch 8.2.1537: memory acccess error when using setcellwidths()
patch 8.2.1536: cannot get the class of a character; emoji widths are wrong
patch 8.2.1535: it is not possible to specify cell widths of characters
patch 8.2.1534: Vim9: type error for argument type is not at call position
patch 8.2.1533: Vim9: error when passing getreginfo() result to setreg()
patch 8.2.1532: compiler warning for conversion of size_t to long
patch 8.2.1531: Vim9: test still fails on MS-Windows
patch 8.2.1530: Vim9: test fails on MS-Windows
patch 8.2.1529: Vim9: :elseif may be compiled when not needed
patch 8.2.1528: Vim9: :endif not found after "if false"
patch 8.2.1527: Vim9: cannot use a function name at script level
patch 8.2.1526: line in testdir Makefile got commented out
patch 8.2.1525: messages from tests were not always displayed
patch 8.2.1524: no longer get an error for string concatenation with float
patch 8.2.1523: still not enough test coverage for the spell file handling
patch 8.2.1522: not enough test coverage for the spell file handling
patch 8.2.1521: reading past end of buffer when reading spellfile
patch 8.2.1520: Vim9: CTRL-] used in :def function does not work
patch 8.2.1519: Vim9: Ex command default range is not set
patch 8.2.1518: Vim9: cannot assign to local option
patch 8.2.1517: cannot easily get the character under the cursor
patch 8.2.1516: Vim9: error for :exe has wrong line number
patch 8.2.1515: Vim9: can create s:var in legacy script but cannot unlet
patch 8.2.1514: multibyte vertical separator is cleared when dragging popup
patch 8.2.1513: cannot interrupt shell used for filename expansion
patch 8.2.1512: failure after trinary expression fails
patch 8.2.1511: putting a string in Visual block mode ignores multi-byte
patch 8.2.1510: using "var" in :def function may refer to legacy script var
patch 8.2.1509: vertical separator is cleared when dragging a popup window
patch 8.2.1508: not all debugger commands covered by tests
patch 8.2.1507: using malloc() directly
patch 8.2.1506: Vim9: no error when using a number other than 0 or 1 as bool
patch 8.2.1505: not all file read and writecode is tested
patch 8.2.1504: Vim9: white space checks are only done for a :def function
patch 8.2.1503: Vim9: error for autocmd defined in :def in legacy script
patch 8.2.1502: Vim9: can use += with a :let command at script level
patch 8.2.1501: Vim9: concatenating to constant reverses order
patch 8.2.1500: Vim9: error when using address without a command
patch 8.2.1499: Vim9: error when using "$" with col()
patch 8.2.1498: on slow systems tests can be flaky
patch 8.2.1497: CursorHold test is flaky
patch 8.2.1496: Vim9: cannot use " #" in a mapping
patch 8.2.1495: "make clean" may delete too many files
patch 8.2.1494: missing change to calling eval_getline()
patch 8.2.1493: not enough test coverage for the spell file handling
patch 8.2.1492: build failures
patch 8.2.1491: Vim9: crash when compiling heredoc lines start with comment
patch 8.2.1490: Vim9: using /= with float and number doesn't work
patch 8.2.1489: Vim9: error when setting an option with setbufvar()
patch 8.2.1488: text does not scroll when inserting above first line
patch 8.2.1487: Travis: installing snd-dummy is not always useful
patch 8.2.1486: Vim9: readdir() expression doesn't accept bool
patch 8.2.1485: Vim9: readdirex() expression doesn't accept bool
patch 8.2.1484: flaky failure in assert_fails()
patch 8.2.1483: Vim9: error for using special as number
patch 8.2.1482: Vim9: crash when using a nested lambda
patch 8.2.1481: Vim9: line number reported with error may be wrong
patch 8.2.1480: Vim9: skip expression in search() gives error
patch 8.2.1479: Vim9: error for list index uses wrong line number
patch 8.2.1478: Vim9: cannot use "true" for some popup options
patch 8.2.1477: Vim9: error when using bufnr('%')
patch 8.2.1476: filetype test fails on MS-Windows
patch 8.2.1475: Vim9: can't use v:true for option flags
patch 8.2.1474: /usr/lib/udef/rules.d not recognized as udevrules
patch 8.2.1473: items in a list given to :const can still be modified
patch 8.2.1472: ":argdel" does not work like ":.argdel" as documented
patch 8.2.1471: :const only locks the variable, not the value
patch 8.2.1470: errors in spell file not tested
patch 8.2.1469: Vim9: cannot assign string to string option
patch 8.2.1468: Vim9: invalid error for missing white space
patch 8.2.1467: Vim9: :echomsg doesn't like a dict argument
patch 8.2.1466: Vim9: cannot index or slice a variable with type "any"
patch 8.2.1465: Vim9: subscript not handled properly
patch 8.2.1464: Vim9: build warning for unused variable
patch 8.2.1463: Vim9: list slice not supported yet
patch 8.2.1462: Vim9: string slice not supported yet
Update runtime files.
patch 8.2.1461: Vim9: string indexes are counted in bytes
patch 8.2.1460: error messages are spread out
patch 8.2.1459: Vim9: declaring script var in script does not infer the type
patch 8.2.1458: .gawk files not recognized
patch 8.2.1457: Vim9: the output of :disassemble cannot be interrupted
patch 8.2.1456: MS-Windows: test files are not deleted
patch 8.2.1455: Vim9: crash when using typecast before constant
patch 8.2.1454: Vim9: failure invoking lambda with wrong arguments
patch 8.2.1453: Vim9: failure to compile lambda not tested
patch 8.2.1452: Vim9: dead code in to_name_end()
patch 8.2.1451: Vim9: list type at script level only uses first item
patch 8.2.1450: Vim9: no check that script-local items don't become global
patch 8.2.1449: some test makefiles delete files that are not generated
patch 8.2.1448: test 77a for VMS depends on small.vim which does not exist
patch 8.2.1447: Vim9: return type of keys() is list<any>
patch 8.2.1446: Vim9: line number in error message is not correct
patch 8.2.1445: Vim9: function expanded name is cleared when sourcing again
patch 8.2.1444: error messages are spread out and names can be confusing
patch 8.2.1443: Vim9: crash when interrupting a nested :def function
patch 8.2.1442: outdated references to the Mac Carbon GUI
patch 8.2.1441: running tests in tiny version gives error for summarize.vim
patch 8.2.1440: debugger code insufficiently tested
patch 8.2.1439: tiny and small builds have no test coverage
patch 8.2.1438: missing tests for interrupting script execution from debugger
patch 8.2.1437: Vim9: 'statusline' is evaluated using Vim9 script syntax
patch 8.2.1436: function implementing :substitute has unexpected name
patch 8.2.1435: Vim9: always converting to string for ".." leads to mistakes
patch 8.2.1434: Vim9: crash when lambda uses outer function argument
patch 8.2.1433: Vim9: cannot mingle comments in multi-line lambda
patch 8.2.1432: various inconsistencies in test files
patch 8.2.1431: Vim9: no error for white space before comma in dict
patch 8.2.1430: Vim9: error for missing comma instead of extra white space
patch 8.2.1429: Vim9: no error for missing white after : in dict
patch 8.2.1428: Vim9: :def function does not abort on nested function error
patch 8.2.1427: Vim9: cannot use a range with marks in :def function
patch 8.2.1426: Vim9: cannot call autoload function in :def function
patch 8.2.1425: Vim9: cannot use call() without :call
patch 8.2.1424: Mac build fails
patch 8.2.1423: Vim9: find global function when looking for script-local
patch 8.2.1422: the Mac GUI implementation is outdated
patch 8.2.1421: Vim9: handling "+" and "-" before number differs from script
patch 8.2.1420: test 49 is old style
patch 8.2.1419: Vim9: not operator applied too early
patch 8.2.1418: Vim9: invalid error for missing white space
patch 8.2.1417: test 49 is old style
patch 8.2.1416: Vim9: boolean evaluation does not work as intended
patch 8.2.1415: closing a popup window with CTRL-C interrupts 'statusline'
patch 8.2.1414: popupwindow missing last couple of lines
patch 8.2.1413: previous tab page not usable from an Ex command
patch 8.2.1412: Vim: not operator does not result in boolean
patch 8.2.1411: when splitting a window localdir is copied but prevdir is not
patch 8.2.1410: adding compiler plugin requires test change
patch 8.2.1409: nmpmrc and php.ini filetypes not recognized
patch 8.2.1408: Vim9: type casting not supported
patch 8.2.1407: Vim9: type of list and dict only depends on first item
patch 8.2.1406: popupwindow lacks scrollbar if no "maxheight" is used
patch 8.2.1405: Vim9: vim9compile.c is getting too big
patch 8.2.1404: Vim9: script test fails in the GUI
patch 8.2.1403: Vim9: Vim highlighting may fail in cmdline window
patch 8.2.1402: s390x tests always fail
patch 8.2.1401: cannot jump to the last used tabpage
patch 8.2.1400: Vim9: test does not delete written files
patch 8.2.1399: Vim9: may find imported item in wrong script
patch 8.2.1398: autoload script sourced twice if sourced directly
patch 8.2.1397: Vim9: return type of maparg() not adjusted for fourth arg
patch 8.2.1396: Vim9: no error for unexpectedly returning a value
patch 8.2.1395: Vim9: no error if declaring a funcref with lower case letter
patch 8.2.1394: Vim9: compiling a function interferes with command modifiers
patch 8.2.1393: insufficient testing for script debugging
patch 8.2.1392: Vim9: line number incorrect after skipping over comment lines
patch 8.2.1391: Vim9: no error for shadowing a script function
patch 8.2.1390: Vim9: type error after storing an option value
patch 8.2.1389: file missing from the distribution
patch 8.2.1388: Vim9: += only works for numbers
Update runtime files.
patch 8.2.1387: Vim9: cannot assign to single letter variable with type
patch 8.2.1386: backslash not removed afer space with space in 'isfname'
patch 8.2.1385: no testing on ARM
patch 8.2.1384: no ATTENTION prompt for :vimgrep first match file
patch 8.2.1383: test 49 is old style
patch 8.2.1382: Vim9: using :import in filetype plugin gives an error
patch 8.2.1381: MS-Windows: crash with Python 3.5 when stdin is redirected
patch 8.2.1380: Vim9: return type of getreg() is always a string
patch 8.2.1379: curly braces expression ending in " }" does not work
patch 8.2.1378: cannot put space between function name and paren
patch 8.2.1377: triggering the ATTENTION prompt causes typeahead mess up
patch 8.2.1376: Vim9: expression mapping causes error for using :import
patch 8.2.1375: Vim9: method name with digit not accepted
patch 8.2.1374: Vim9: error for assigning empty list to script variable
patch 8.2.1373: Vim9: no error for assigning to non-existing script var
patch 8.2.1372: Vim9: no error for missing white space around operator
patch 8.2.1371: Vim9: no error for missing white space around operator
patch 8.2.1370: MS-Windows: warning for using fstat() with stat_T
patch 8.2.1369: MS-Windows: autocommand test sometimes fails
patch 8.2.1368: Vim9: no error for missing white space around operator
patch 8.2.1367: Vim9: no error for missing white space around operator
patch 8.2.1366: test 49 is old style
patch 8.2.1365: Vim9: no error for missing white space around operator
patch 8.2.1364: invalid memory access when searching for raw string
patch 8.2.1363: test trying to run terminal when it is not supported
patch 8.2.1362: last entry of ":set term=xxx" overwritten by error message
patch 8.2.1361: error for white space after expression in assignment
patch 8.2.1360: stray error for white space after expression
patch 8.2.1359: Vim9: cannot assign to / register in Vim9 script
patch 8.2.1358: Vim9: test fails with +dnd is not available
patch 8.2.1357: Vim9: cannot assign to / register
patch 8.2.1356: Vim9: cannot get the percent register
patch 8.2.1355: Vim9: no error using :let for options and registers
patch 8.2.1354: test 59 is old style
patch 8.2.1353: crash when drawing double-wide character in terminal window
patch 8.2.1352: Vim9: no error for shadowing a script-local function
patch 8.2.1351: Vim9: no proper error if using namespace for nested function
patch 8.2.1350: Vim9: no test for error message when redefining function
patch 8.2.1349: Vim9: can define a function with the name of an import
patch 8.2.1348: build failure without the eval feature
patch 8.2.1347: cannot easily get the script ID
patch 8.2.1346: small build fails
patch 8.2.1345: Redraw error when using visual block and scroll
patch 8.2.1344: Vim9: No test for trying to redefine global function
patch 8.2.1343: Vim9: cannot find global function when using g:
patch 8.2.1342: Vim9: accidentally using "t" gives a confusing error
patch 8.2.1341: build failures
patch 8.2.1340: some tests fail on Cirrus CI and/or with FreeBSD
patch 8.2.1339: Vim9: assigning to global dict variable doesn't work
patch 8.2.1338: Vim9: assigning to script-local variable doesn't check type
patch 8.2.1337: Vim9: cannot use empty key in dict assignment
patch 8.2.1336: build failure on non-Unix systems
patch 8.2.1335: CTRL-C in the GUI doesn't interrupt
patch 8.2.1334: Github workflow timeout needs tuning
patch 8.2.1333: Vim9: memory leak when using nested global function
patch 8.2.1332: Vim9: memory leak when using nested global function
patch 8.2.1331: Vim9: :echo with two lists doesn't work
patch 8.2.1330: Github workflow takes longer than needed
patch 8.2.1329: Vim9: cannot define global function inside :def function
patch 8.2.1328: no space allowed before comma in list
patch 8.2.1327: Mac: configure can't find Tcl libraries
patch 8.2.1326: Vim9: skipping over white space after list
patch 8.2.1325: Vim9: using Vim9 script for autaload not tested
patch 8.2.1324: Vim9: line break after "=" does not work
patch 8.2.1323: Vim9: invalid operators only rejected in :def function
patch 8.2.1322: Vim9: method on double quoted string doesn't work
patch 8.2.1321: GitHub CI also runs on tag push
patch 8.2.1320: Vim9: cannot declare some single letter variables
patch 8.2.1319: status badge for Github CI has wrong link
patch 8.2.1318: no status badge for Github CI
patch 8.2.1317: MS-Windows tests on AppVeyor are slow
patch 8.2.1316: test 42 is still old style
patch 8.2.1315: MS-Windows: test log contains escape sequences
patch 8.2.1314: Vim9: rule for comment after :function is confusing
patch 8.2.1313: Vim9 script: cannot assign to environment variable
patch 8.2.1312: MS-Windows: terminal test may fail if dir.exe exists
patch 8.2.1311: test failures with legacy Vim script
patch 8.2.1310: configure with Xcode 12 fails to check for tgetent
patch 8.2.1309: build failure with tiny version
patch 8.2.1308: Vim9: accidentally using "x" causes Vim to exit
patch 8.2.1307: popup window width does not include number of sign columns
patch 8.2.1306: checking for first character of dict key is inconsistent
patch 8.2.1305: some tests are still old style
patch 8.2.1304: debug backtrace isn't tested much
patch 8.2.1303: calling popup_setoptions() resets 'signcolumn'
patch 8.2.1302: Vim9: varargs arg after optional arg does not work
patch 8.2.1301: Vim9: varargs argument type not parsed properly
patch 8.2.1300: Vim9: optional argument type not parsed properly
Update runtime files.
patch 8.2.1299: compiler warning for using size_t for int and void pointer
patch 8.2.1298: compiler warning for unused argument in small version
patch 8.2.1297: when a test fails it's often not easy to see where
patch 8.2.1296: some part of using 'smarcase' was not tested
patch 8.2.1295: tests 44 and 99 are old style
patch 8.2.1294: Vim9: error when using vim9script in TextYankPost
patch 8.2.1293: Vim9: error when using vim9script in TextYankPost
patch 8.2.1292: AIDL filetype not recognized
patch 8.2.1291: Vim9: type of varargs items is not checked
patch 8.2.1290: Vim9: cannot replace a global function
patch 8.2.1289: crash when using a custom completion function
patch 8.2.1288: Vim9: cannot use mark in range
patch 8.2.1287: Vim9: crash when using an imported function
patch 8.2.1286: Vim9: No error when using a type to a window variable
patch 8.2.1285: Vim9: argument types are not checked on assignment
patch 8.2.1284: Vim9: skipping over type includes following white space
patch 8.2.1283: Vim9: error for misplaced -> lacks argument
patch 8.2.1282: Vim9: crash when using CheckScriptFailure()
patch 8.2.1281: the "trailing characters" error can be hard to understand
patch 8.2.1280: Ex command error cannot contain an argument
patch 8.2.1279: some tests on Travis have EXITFREE duplicated
patch 8.2.1278: Vim9: line break after "->" only allowed in :def function
patch 8.2.1277: tests on Travis do not run with EXITFREE
patch 8.2.1276: MS-Windows: system test may fail if more.exe is installed
patch 8.2.1275: Vim9: compiler warning for buffer size
patch 8.2.1274: Vim9: no error for missing white space at script level
patch 8.2.1273: MS-Windows: terminal test may leave file behind
patch 8.2.1272: Vim9: type not checked if declaration also assigns value
patch 8.2.1271: Vim9: Error for Funcref function argument type
patch 8.2.1270: Vim9: not skipping over function type declaration
patch 8.2.1269: language and locale code spread out
patch 8.2.1268: Vim9: no error for using double quote comment
patch 8.2.1267: MS-Windows: tests may fail due to $PROMPT value
patch 8.2.1266: Makefile preference were accidentally included
patch 8.2.1265: crash with EXITFREE when split() fails
patch 8.2.1264: terminal getwinpos() test is a bit flaky
patch 8.2.1263: Vim9: comperators use 'ignorecase' in Vim9 script
patch 8.2.1262: src/ex_cmds.c file is too big
patch 8.2.1261: Vim9: common type of function not tested
patch 8.2.1260: there is no good test for CursorHold
patch 8.2.1259: empty group in 'tabline' may cause using an invalid pointer
patch 8.2.1258: CursorHold does not work well
patch 8.2.1257: Vim9: list unpack doesn't work at the script level
patch 8.2.1256: Vim9: type wrong after getting dict item in lambda
patch 8.2.1255: cannot use a lambda with quickfix functions
patch 8.2.1254: MS-Windows: regexp test may fail if 'iskeyword' set wrongly
patch 8.2.1253: CTRL-K in Insert mode gets <CursorHold> inserted
patch 8.2.1252: ":marks" may show '< and '> mixed up
patch 8.2.1251: Vim9: warning for pointer usage, test failure undetected
patch 8.2.1250: Vim9: cannot use the g:, b:, t: and w: namespaces
patch 8.2.1249: Vim9: disassemble test fails
patch 8.2.1248: Netbeans test is flaky in the GUI
patch 8.2.1247: Vim9: cannot index a character in a string
patch 8.2.1246: Vim9: comment after assignment doesn't work
patch 8.2.1245: build failure in tiny version
patch 8.2.1244: Vim9: in lambda index assumes a list
patch 8.2.1243: Vim9: cannot have a comment line halfway a list
patch 8.2.1242: Vim9: no error if calling a function with wrong type
patch 8.2.1241: cannot use getbufinfo() as a method
patch 8.2.1240: GUI tests sometimes fail because of translations
patch 8.2.1239: "maxwidth" in 'completepopup' not obeyed
patch 8.2.1238: Vim9: a few remaining errors not caught by try/catch
patch 8.2.1237: changing 'completepopup' after opening popup has no effect
patch 8.2.1236: Vim9: a few errors not caught by try/catch
patch 8.2.1235: Not all mouse codes covered by tests
patch 8.2.1234: Lua build problem with old compiler
patch 8.2.1233: Vim9: various errors not caught by try/catch
patch 8.2.1232: MS-Windows GUI: Snap cancelled by split command
patch 8.2.1231: MS-Windows: GUI code can be cleaned up
patch 8.2.1230: Vim9: list index error not caught by try/catch
patch 8.2.1229: build error without the eval feature
patch 8.2.1228: scrollbars not flush against the window edges when maximised
patch 8.2.1227: Vim9: allowing both quoted and # comments is confusing
patch 8.2.1226: MS-Windows: windows positioning wrong depending on taskbar
patch 8.2.1225: linker errors when building with dynamic Python 3.9
patch 8.2.1224: Vim9: arguments from partial are not used
patch 8.2.1223: Vim9: invalid type error for function default value
patch 8.2.1222: using valgrind in Vim command started by test doesn't work
patch 8.2.1221: memory leak when updating popup window
patch 8.2.1220: memory access error when dragging a popup window
patch 8.2.1219: symlink not followed if dirname ends in //
patch 8.2.1218: Vim9: cannot use 'text'->func()
patch 8.2.1217: startup test depends on random source file
patch 8.2.1216: startup test fails
patch 8.2.1215: Atari MiNT support is outdated
patch 8.2.1214: MS-Windows: default _vimrc not correct in silent install mode
patch 8.2.1213: mouse codes not tested sufficiently
patch 8.2.1212: cannot build with Lua 5.4
patch 8.2.1211: removed more than dead code
patch 8.2.1210: using ht_used when looping through a hashtab is less reliable
patch 8.2.1209: Vim9: test failure
patch 8.2.1208: build failure
patch 8.2.1207: Vim9: crash in expr test when run in the GUI
patch 8.2.1206: Vim9: crash in expr test when run in the GUI
patch 8.2.1205: Vim9: && and || work different when not compiled
patch 8.2.1204: Vim9: true and false not recognized in Vim9 script
patch 8.2.1203: unused assignments in expression evaluation
patch 8.2.1202: Vim9: crash when calling a closure from a builtin function
patch 8.2.1201: Vim9: crash when passing number as dict key
patch 8.2.1200: Vim9: cannot disassemble a lambda function
patch 8.2.1199: not all assert functions are fully tested
patch 8.2.1198: terminal2 test sometimes hangs in the GUI on Travis
patch 8.2.1197: clientserver test still fails on MS-Windows
patch 8.2.1196: build failure with normal features
patch 8.2.1195: clientserver test fails on MS-Windows
patch 8.2.1194: test failure because shell prompt differs
patch 8.2.1193: terminal window not redrawn when dragging a popup window
patch 8.2.1192: Lua test fails with older Lua version
patch 8.2.1191: Vim9: crash when function calls itself
patch 8.2.1190: Vim9: checking for Vim9 syntax is spread out
patch 8.2.1189: Vim9: line continuation in lambda doesn't always work
patch 8.2.1188: memory leak with invalid json input
patch 8.2.1187: terminal2 test sometimes hangs in the GUI on Travis
patch 8.2.1186: with SGR mouse codes balloon doesn't show up after click
patch 8.2.1185: some other tests fail
patch 8.2.1184: some tests fail
patch 8.2.1183: assert_fails() checks the last error message
patch 8.2.1182: Vim9: no check for whitespace after comma in lambda
patch 8.2.1181: json code not fully tested
patch 8.2.1180: build failure in small version
patch 8.2.1179: Test_termwinscroll() sometimes hangs in the GUI
patch 8.2.1178: Vim9: filter function recognized as command modifier
patch 8.2.1177: terminal2 test sometimes hangs in the GUI
patch 8.2.1176: Vim9: not enough type checking in Vim9 script
Update runtime files
patch 8.2.1175: Vim9: cannot split a line before ".member"
patch 8.2.1174: no test for the "recording @x" message
patch 8.2.1173: tee doesn't build on some systems
patch 8.2.1172: error messages when doing "make clean" in doc or tee
patch 8.2.1171: possible crash when out of memory
patch 8.2.1170: cursor off by one with block paste while 'virtualedit' "all"
patch 8.2.1169: write NUL past allocated space using corrupted spell file
patch 8.2.1168: wrong method argument for appendbufline()
patch 8.2.1167: Vim9: builtin function method call only supports first arg
patch 8.2.1166: once mouse move events are enabled getchar() returns them
patch 8.2.1165: insufficient testing for the Tcl interface
patch 8.2.1164: text cleared by checking terminal properties not redrawn
patch 8.2.1163: build error
patch 8.2.1162: crash when using a lambda
patch 8.2.1161: Vim9: using freed memory
patch 8.2.1160: Vim9: memory leak in allocated types
patch 8.2.1159: Vim9: no error for missing space after a comma
patch 8.2.1158: build error
patch 8.2.1157: Vim9: dict.name is not recognized as an expression
patch 8.2.1156: Vim9: No error for invalid command in compiled function
patch 8.2.1155: Vim9: cannot handle line break inside lambda
patch 8.2.1154: Vim9: crash when using imported function
patch 8.2.1153: Vim9: script test fails on some systems
patch 8.2.1152: Vim9: function reference is missing script prefix
patch 8.2.1151: insufficient test coverage for Python
patch 8.2.1150: ml_get error when using Python
patch 8.2.1149: Vim9: :eval command not handled properly
patch 8.2.1148: warning for using int instead of size_t
patch 8.2.1147: :confirm may happen in cooked mode
patch 8.2.1146: not enough testing for Python
patch 8.2.1145: Vim9: "for" only accepts a list at compile time
patch 8.2.1144: Vim9: return type of reverse() is any
patch 8.2.1143: Vim9: return type of remove() is any
patch 8.2.1142: Vim9: return type of insert() is any
patch 8.2.1141: Vim9: return type of filter() is any
patch 8.2.1140: Vim9: return type of extend() is any
patch 8.2.1139: Vim9: test for silent echo fails in some environments
patch 8.2.1138: Vim9: return type of copy() and deepcopy() is any
patch 8.2.1137: Vim9: modifiers not cleared after compiling function
patch 8.2.1136: Vim9: return type of argv() is always any
patch 8.2.1135: Vim9: getting a dict member may not work
patch 8.2.1134: Vim9: getting a list member may not work
patch 8.2.1133: Vim9: return type of add() is not specific enough
patch 8.2.1132: Vim9: return type of repeat() is not specific enough
patch 8.2.1131: Vim9: error message for returning a value is not clear
patch 8.2.1130: Vim9: bar not recognized after function call
patch 8.2.1129: Vim9: bar not recognized after not compiled command
patch 8.2.1128: the write message mentions characters, but it's bytes
patch 8.2.1127: Vim9: getting a dict member may not work
patch 8.2.1126: Vim9: using :copen causes an error
patch 8.2.1125: Vim9: double quote can be a string or a comment
patch 8.2.1124: Vim9: no line break allowed in :import command
patch 8.2.1123: Python 3 test is old style
patch 8.2.1122: Vim9: line continuation in dict member not recognized
patch 8.2.1121: command completion not working after ++arg
patch 8.2.1120: Python code not tested properly
patch 8.2.1119: configure fails with Xcode 12 beta
patch 8.2.1118: condition can never be true, dead code
patch 8.2.1117: Coverity warns for unsing unitialized field
patch 8.2.1116: Vim9: parsing command checks for list twice
patch 8.2.1115: iminsert test fails when compiled with VIMDLL
patch 8.2.1114: terminal test sometimes times out
patch 8.2.1113: no test for verbose output of :call
patch 8.2.1112: Vim9: no line continuation allowed in method call
patch 8.2.1111: inconsistent naming of get_list_tv() and eval_dict()
patch 8.2.1110: Vim9: line continuation does not work in function arguments
patch 8.2.1109: still crashing when using s:variable
patch 8.2.1108: mouse left-right scroll is not supported in terminal window
patch 8.2.1107: 'imactivatefunc' and 'imstatusfunc' are not used in the GUI
patch 8.2.1106: crash when trying to use s: variable in typed command
patch 8.2.1105: insufficient test coverage for Lua
patch 8.2.1104: Coverity warnts for possible NULL pointer use
patch 8.2.1103: Coverity reports an unnecessary NULL check
patch 8.2.1102: Coverity gets confused by an unnecessary NULL check
patch 8.2.1101: no error when using wrong arguments for setqflist()
patch 8.2.1100: Vim9: cannot use line break in :execute argument
patch 8.2.1099: Vim9: cannot use line break in :cexpr argument
patch 8.2.1098: Vim9: cannot use line break in :throw argument
Runtime file updates
patch 8.2.1097: highlight code not sufficiently tested
patch 8.2.1096: Vim9: return type of getqflist() is wrong
patch 8.2.1095: may use pointer after freeing it
patch 8.2.1094: dead code in libvterm
patch 8.2.1093: Python: double free when adding item to dict fails
patch 8.2.1092: not checking if saving for undo succeeds
patch 8.2.1091: no check if opening a pty works
patch 8.2.1090: may use NULL pointer when skipping over name
patch 8.2.1089: Coverity warns for pointer computation
patch 8.2.1088: a very long translation might cause a buffer overflow
patch 8.2.1087: possible memory leak when file expansion fails
patch 8.2.1086: possibly using freed memory when text properties used
patch 8.2.1085: Coverity complains about ignoring dict_add() return value
patch 8.2.1084: Lua: registering function has useless code
patch 8.2.1083: crash when using reduce() on a NULL list
patch 8.2.1082: Coverity complains about ignoring dict_add() return value
patch 8.2.1081: Lua: cannot use table.insert() and table.remove()
patch 8.2.1080: Vim9: no line break allowed in a for loop
patch 8.2.1079: Vim9: no line break allowed in a while loop
patch 8.2.1078: highlight and match functionality together in one file
patch 8.2.1077: no enough test coverage for highlighting
patch 8.2.1076: Vim9: no line break allowed in :if expression
patch 8.2.1075: Vim9: no line break allowed in :echo expression
patch 8.2.1074: Vim9: no line break allowed after some operators
patch 8.2.1073: Vim9: no line break allowed in () expression
patch 8.2.1072: missing libvterm test
patch 8.2.1071: Vim9: no line break allowed inside a lambda
patch 8.2.1070: Vim9: leaking memory when lacking white space in dict
patch 8.2.1069: Vim9: fail to check for white space in list
patch 8.2.1068: Vim9: no line break allowed inside a dict
patch 8.2.1067: expression "!expr->func()" does not work
patch 8.2.1066: Lua arrays are zero based
patch 8.2.1065: Vim9: no line break allowed inside a list
patch 8.2.1064: Vim9: no line break allowed before comperators
patch 8.2.1063: Vim9: no line break allowed before || or &&
patch 8.2.1062: Vim9: no line break allowed inside "cond ? val1 : val2"
patch 8.2.1061: insufficient testing for src/window.c
patch 8.2.1060: not all elinks files are recognized
patch 8.2.1059: crash when using :tabonly in an autocommand
patch 8.2.1058: multiline conceal causes display errors
patch 8.2.1057: cannot build with dynamic Lua
patch 8.2.1056: wrong display when mixing match conceal and syntax conceal
patch 8.2.1055: no filetype set for pacman config files
patch 8.2.1054: not so easy to pass a lua function to Vim
patch 8.2.1053: insufficient testing for 'statusline' and 'tabline'
patch 8.2.1052: build failure with older compilers
patch 8.2.1051: crash when changing a list while using reduce() on it
patch 8.2.1050: missing change in struct
patch 8.2.1049: Vim9: leaking memory when using continuation line
patch 8.2.1048: build failure without the eval feature
patch 8.2.1047: Vim9: script cannot use line continuation like :def function
patch 8.2.1046: insufficient tests for src/buffer.c
patch 8.2.1045: Vim9: line break before operator does not work
patch 8.2.1044: not all systemd file types are recognized
patch 8.2.1043: %a item in 'statusline' not tested
patch 8.2.1042: Vim9: cannot put an operator on the next line
patch 8.2.1041: test summary is missing executed count
patch 8.2.1040: not enough testing for movement commands
patch 8.2.1039: cannot put NUL byte on clipboard
patch 8.2.1038: popupwin test fails
patch 8.2.1037: Vim9: crash when using line continuation inside :def
patch 8.2.1036: popupwin test fails sometimes
patch 8.2.1035: setreg() does not always clear the register
patch 8.2.1034: compiler warning for uninitialized variables
Update runtime files
patch 8.2.1033: not easy to read the test time in the test output
patch 8.2.1032: error message for declaring a variable cannot be translated
patch 8.2.1031: build failure with Perl5.32
patch 8.2.1030: reducing size of a terminal window may cause a crash
patch 8.2.1029: Vim9: cannot chain function calls with -> at line start
patch 8.2.1028: Vim9: no error for declaring buffer, window, etc. variable
patch 8.2.1027: GUI: multi-byte characters do not work in a terminal
patch 8.2.1026: Vim9: cannot break the line after "->"
patch 8.2.1025: tabpage menu and tabline not sufficiently tested
patch 8.2.1024: Vim9: no error for using "let g:var = val"
patch 8.2.1023: Vim9: redefining a function uses a new index every time
patch 8.2.1022: various parts of code not covered by tests
patch 8.2.1021: Ruby interface not tested enough
patch 8.2.1020: popupwin test fails in the GUI
patch 8.2.1019: mapping <M-S-a> does not work in the GUI
patch 8.2.1018: typo in enum value
patch 8.2.1017: Appveyor output doesn't show MinGW console features
patch 8.2.1016: Vim9: test fails when channel feature is missing
patch 8.2.1015: popup filter gets key with modifier prepended
patch 8.2.1014: using "name" for a string result is confusing
patch 8.2.1013: channel tests can be a bit flaky
patch 8.2.1012: Vim9: cannot declare single character script variables
patch 8.2.1011: Vim9: some code not tested
patch 8.2.1010: build failure in libvterm with debug enabled
patch 8.2.1009: Vim9: some failures not checked for
patch 8.2.1008: Vim9: no test for disassambling newly added instructions
patch 8.2.1007: completion doesn't work after ":r ++arg !"
patch 8.2.1006: Vim9: require unnecessary return statement
patch 8.2.1005: Vim9: using TRUE/FALSE/MAYBE for ctx_skip is confusing
patch 8.2.1004: line numbers below filler lines not always updated
patch 8.2.1003: Vim9: return type of sort() is too generic
patch 8.2.1002: test may fail when run directly
patch 8.2.1001: Vim9: crash with nested "if" and assignment
patch 8.2.1000: get error when leaving Ex mode with :visual
patch 8.2.0999: moving to next sentence gets stuck on quote
patch 8.2.0998: not all tag code is tested
patch 8.2.0997: cannot execute a register containing line continuation
patch 8.2.0996: using "aucmdwin" in win_gettype() is not ideal
patch 8.2.0995: insufficient testing for the readdir() sort option
patch 8.2.0994: Vim9: missing function causes compilation error
patch 8.2.0993: Vim9 script test fails with normal features
patch 8.2.0992: Vim9: crash when using :import in the Vim command
patch 8.2.0991: cannot get window type for autocmd and preview window
patch 8.2.0990: Using duplicate error number
patch 8.2.0989: crash after resizing a terminal window
patch 8.2.0988: getting directory contents is always case sorted
patch 8.2.0987: Vim9: cannot assign to [var; var]
patch 8.2.0986: MS-Windows: functions test fails
patch 8.2.0985: simplify() does not remove slashes from "///path"
patch 8.2.0984: not using previous window when closing a shell popup window
patch 8.2.0983: SConstruct file type not recognized
patch 8.2.0982: insufficient testing for reading/writing files
patch 8.2.0981: Vim9: cannot compile "[var, var] = list"
patch 8.2.0980: raku file extension not recognized
Update runtime files
patch 8.2.0979: a couple of screendump tests fail
patch 8.2.0978: leaking memory in termcodes test
patch 8.2.0977: t_8u is made empty for the wrong terminals
patch 8.2.0976: some 'cpoptions' not tested
patch 8.2.0975: Vim9: script variable does not accept optional s: prefix
patch 8.2.0974: Vim9: memory leak when script var has wrong type
patch 8.2.0973: Vim9: type is not checked when assigning to a script variable
patch 8.2.0972: Vim9 script variable declarations need a type
patch 8.2.0971: build with tiny features fails
patch 8.2.0970: terminal properties are not available in Vim script
patch 8.2.0969: assert_equal() output for dicts is hard to figure out
patch 8.2.0968: no proper testing of the 'cpoptions' flags
patch 8.2.0967: unnecessary type casts for vim_strnsave()
patch 8.2.0966: 'shortmess' flag "n" not used in two places
patch 8.2.0965: has_funcundefined() is not used
patch 8.2.0964: TextYankPost does not provide info about Visual selection
patch 8.2.0963: number increment/decrement does not work with 'virtualedit'
patch 8.2.0962: terminal test sometimes hangs on Travis
patch 8.2.0961: MS-Windows: no completion for locales
patch 8.2.0960: cannot use :import in legacy Vim script
patch 8.2.0959: using 'quickfixtextfunc' is a bit slow
patch 8.2.0958: not sufficient testing for buffer writing
patch 8.2.0957: compiler warning for uninitialized variable
patch 8.2.0956: spell test fails
patch 8.2.0955: build fails
patch 8.2.0954: not all desktop files are recognized
patch 8.2.0953: spell checking doesn't work for CamelCased words
patch 8.2.0952: no simple way to interrupt Vim
patch 8.2.0951: search stat test has leftover from debugging
patch 8.2.0950: tagjump test fails
patch 8.2.0949: strptime() does not use DST
patch 8.2.0948: spell test fails
patch 8.2.0947: readdirex() doesn't handle broken link properly
patch 8.2.0946: cannot use "q" to cancel a number prompt
patch 8.2.0945: cannot use "z=" when 'spell' is off
patch 8.2.0944: xxd test leaves file behind
patch 8.2.0943: displaying ^M or ^J depends on current buffer
patch 8.2.0942: expanding to local dir after homedir keeps "~/"
patch 8.2.0941: detecting terminal properties is unstructured
patch 8.2.0940: build failure with tiny features
patch 8.2.0939: checking for term escape sequences is long and confusing
patch 8.2.0938: NFA regexp uses tolower ()to compare ignore-case
patch 8.2.0937: asan failure in the flatten() test
patch 8.2.0936: some terminals misinterpret the code for getting cursor style
patch 8.2.0935: flattening a list with existing code is slow
patch 8.2.0934: lhelpgrep twice in help window doesn't jump to the help topic
patch 8.2.0933: 'quickfixtextfunc' does not get window ID of location list
patch 8.2.0932: missspelling spelllang
patch 8.2.0931: some remarks about BeOS remain
patch 8.2.0930: script filetype detection trips over env -S argument
patch 8.2.0929: v:register is not cleared after an operator was executed
Update runtime files
patch 8.2.0928: many type casts are used for vim_strnsave()
patch 8.2.0927: some sshconfig and ssdhconfig files are not recognized
patch 8.2.0926: cmdline test fails on Appveyor
patch 8.2.0925: getcompletion() does not return command line arguments
patch 8.2.0924: cannot save and restore a register properly
patch 8.2.0923: cmdline test is slow
patch 8.2.0922: search test fails
patch 8.2.0921: CTRL-W T in cmdline window causes trouble
patch 8.2.0920: writing viminfo fails with a circular reference
patch 8.2.0919: merging modifier for modifyOtherKeys is done twice
patch 8.2.0918: duplicate code for evaluating expression argument
patch 8.2.0917: quickfix entries do not suport a "note" type
patch 8.2.0916: mapping with partly modifyOtherKeys code does not work
patch 8.2.0915: search() cannot skip over matches like searchpair() can
patch 8.2.0914: MS-Windows: cannot specify a "modified by" text
patch 8.2.0913: code for resetting v:register is duplicated
patch 8.2.0912: a few test cases for CJK formatting are disabled
patch 8.2.0911: crash when opening a buffer for the cmdline window fails
Also fix the patch number.
patch 8.2.0910: Vim is not reproducibly buildable
patch 8.2.0909: cannot go back to the previous local directory
patch 8.2.0908: crash when changing the function table while listing it
patch 8.2.0907: when using :global clipboard isn't set correctly
patch 8.2.0906: when setting 'termguicolors' SpellBad is no longer red
patch 8.2.0905: test coverage could be better
patch 8.2.0904: assuming modifyOtherKeys for rhs of mapping
patch 8.2.0903: comparing WINVER does not work correctly
patch 8.2.0902: using searchcount() in 'statusline' causes an error
patch 8.2.0901: formatting CJK text isn't optimal
patch 8.2.0900: function list test fails on MS-Windows
patch 8.2.0899: assert_equalfile() does not give a hint about the difference
patch 8.2.0898: missing help for a function goes unnoticed
patch 8.2.0897: list of functions in patched version is outdated
patch 8.2.0896: crash when calling searchcount() with a string
patch 8.2.0895: :mkspell output does not mention the tree type
patch 8.2.0894: :mkspell can take very long if the word count is high
patch 8.2.0893: assert_equalfile() does not take a third argument
patch 8.2.0892: ubsan warns for undefined behavior
patch 8.2.0891: clang warns for invalid conversion
patch 8.2.0890: no color in terminal window when 'termguicolor' is set
patch 8.2.0889: using old style comments
patch 8.2.0888: readdirex() returns size -2 for a directory
patch 8.2.0887: searchcount().exact_match is 1 right after a match
patch 8.2.0886: cannot use octal numbers in scriptversion 4
patch 8.2.0885: "make shadow" does not link new lua test dir
patch 8.2.0884: searchcount() test fails on slower systems
patch 8.2.0883: memory leak in test 49
patch 8.2.0882: leaking memory when using reduce()
patch 8.2.0881: compiler warning for argument type
patch 8.2.0880: leaking memory when using searchcount()
patch 8.2.0879: compiler warning for unused function argument
patch 8.2.0878: no reduce() function
patch 8.2.0877: cannot get the search statistics
patch 8.2.0876: :pwd does not give a hint about the scope of the directory
patch 8.2.0875: getting attributes for directory entries is slow
patch 8.2.0874: signals test is a bit flaky
patch 8.2.0873: a .jl file can be sawfish (lisp) or Julia
patch 8.2.0872: XIM code is mixed with multi-byte code
patch 8.2.0871: cannot use getmarklist() as a method
patch 8.2.0870: MS-Windows: Control keys don't work in the GUI
patch 8.2.0869: it is not possible to customize the quickfix window contents
patch 8.2.0868: trim() always trims both ends
patch 8.2.0867: using \{xxx} for encoding a modifier is not nice
patch 8.2.0866: not enough tests for buffer writing
patch 8.2.0865: syntax foldlevel is taken from the start of the line
patch 8.2.0864: pragmas are indented all the way to the left
patch 8.2.0863: cannot set a separate color for underline/undercurl
patch 8.2.0862: ":term ++curwin" makes the current buffer hidden
patch 8.2.0861: cannot easily get all the current marks
patch 8.2.0860: cannot use CTRL-A and CTRL-X on unsigned numbers
patch 8.2.0859: no Turkish translation of the manual
patch 8.2.0858: not easy to require Lua modules
patch 8.2.0857: GTK cell height can be a pixel too much
patch 8.2.0856: CTRL-S stops output
patch 8.2.0855: GUI tests fail because the test doesn't use a modifier
patch 8.2.0854: xxd cannot show offset as a decimal number
patch 8.2.0853: ml_delete() often called with FALSE argument
patch 8.2.0852: cannot map CTRL-S on some systems
patch 8.2.0851: can't distinguish <M-a> from accented "a" in the GUI
patch 8.2.0850: MS-Windows: exepath() works different from cmd.exe
patch 8.2.0849: BeOS code is not maintained and probably unused
patch 8.2.0848: MS-Windows: the Windows terminal code has some flaws
patch 8.2.0847: typval related code is spread out
patch 8.2.0846: build failure with small features
patch 8.2.0845: text properties crossing lines not handled correctly
patch 8.2.0844: text properties crossing lines not handled correctly
patch 8.2.0843: filetype elm not detected
patch 8.2.0842: MS-Windows: channel tests fail
patch 8.2.0841: 'verbose' value 16 causes duplicate output
patch 8.2.0840: search match count wrong when only match is in fold
patch 8.2.0839: dropping modifier when putting a character back in typeahead
patch 8.2.0838: MS-Windows: compiler warning for uninitialized variables
patch 8.2.0837: compiler warning for value set but not used
patch 8.2.0836: not all :cdo output is visible
patch 8.2.0835: Motif: mapping <C-bslash> still doesn't work
patch 8.2.0834: :drop command in terminal popup causes problems
patch 8.2.0833: mapping <C-bslash> doesn't work in the GUI
patch 8.2.0832: compiler warning for uninitialized variable
patch 8.2.0831: compiler warnings for integer sizes
patch 8.2.0830: Motif: can't map "!"
Update runtime files
patch 8.2.0829: filter() may give misleading error message
patch 8.2.0828: Travis: regexp patttern doesn't work everywhere
patch 8.2.0827: Vim9: crash in :defcompile
patch 8.2.0826: Vim9: crash in :defcompile
patch 8.2.0825: def_function() may return pointer that was freed
patch 8.2.0824: still not enough memory allocated when converting string
patch 8.2.0823: Vim9: script reload test is disabled
patch 8.2.0822: Vim9: code left over from discovery phase
patch 8.2.0821: Vim9: memory leak in expr test
patch 8.2.0820: Vim9: function type isn't set until compiled
patch 8.2.0819: compiler warning for unused variable
patch 8.2.0818: Vim9: using a discovery phase doesn't work well
patch 8.2.0817: not enough memory allocated when converting string
patch 8.2.0816: terminal test fails when compiled with Athena
patch 8.2.0815: maparg() does not provide enough information for mapset()
patch 8.2.0814: clang warning for implicit conversion
patch 8.2.0813: libvterm code is slightly different from upstream
patch 8.2.0812: mapset() does not properly handle <> notation
patch 8.2.0811: terminal keycode test is flaky
patch 8.2.0810: error when appending "tagfile" to 'wildoptions'
patch 8.2.0809: build failure with small features
patch 8.2.0808: not enough testing for the terminal window
patch 8.2.0807: cannot easily restore a mapping
patch 8.2.0806: using "func!" after vim9script gives confusing error
patch 8.2.0805: terminal key codes test fails on some systems
patch 8.2.0804: libvterm code lags behind the upstream version
patch 8.2.0803: libvterm code lags behind the upstream version
patch 8.2.0802: libvterm code lags behind the upstream version
patch 8.2.0801: terminal test fails on Mac
patch 8.2.0800: errors from failing test are unclear
patch 8.2.0799: build fails if snprintf is not available
patch 8.2.0798: libvterm code lags behind the upstream version
patch 8.2.0797: MS-Windows: compiler still can't handle C99 construct
patch 8.2.0796: MS-Windows: compiler can't handle C99 construct in libvterm
patch 8.2.0795: libvterm code lags behind the upstream version
patch 8.2.0794: libvterm code lags behind the upstream version
patch 8.2.0793: MS-Windows: cannot build GUI with small features
patch 8.2.0792: build failure with small features
patch 8.2.0791: a second popup window with terminal causes trouble
patch 8.2.0790: Vim9: list index not well tested
patch 8.2.0789: Vim9: expression testing lost coverage using constants
patch 8.2.0788: memory leak in libvterm
patch 8.2.0787: libvterm code lags behind the upstream version
patch 8.2.0786: channel test is flaky on FreeBSD
patch 8.2.0785: libvterm code lags behind the upstream version
patch 8.2.0784: libvterm code lags behind the upstream version
patch 8.2.0783: libvterm code lags behind the upstream version
patch 8.2.0782: cannot build with Lua on MS-Windows
patch 8.2.0781: compiler warning for not using value in Lua
patch 8.2.0780: libvterm code lags behind the upstream version
patch 8.2.0779: tmode_T not used everywhere
patch 8.2.0778: libvterm code lags behind the upstream version
Update feature_request.md
patch 8.2.0777: terminal test fails
patch 8.2.0776: libvterm code lags behind the upstream version
patch 8.2.0775: not easy to call a Vim function from Lua
patch 8.2.0774: t_TI and t_TE are output when using 'visualbell'
patch 8.2.0773: switching to raw mode every time ":" is used
patch 8.2.0772: Vim9: some variable initializations not tested
patch 8.2.0771: Vim9: cannot call a compiled closure from not compiled code
patch 8.2.0770: cannot map CTRL-B when using the GUI
patch 8.2.0769: VimLeavePre not triggered when Vim is terminated
patch 8.2.0768: Vim9: memory leak in script test
patch 8.2.0767: modifyOtherKeys active when using a shell command in autocmd
patch 8.2.0766: display error when using 'number' and 'breakindent'
patch 8.2.0765: In the GUI can't use all the modifiers.
patch 8.2.0764: Vim9: assigning to option not fully tested
patch 8.2.0763: GUI test fails without the terminal feature
patch 8.2.0762: buffer is not considered modified after setting crypt key
patch 8.2.0761: Vim9: instructions not tested
patch 8.2.0760: Vim9: dict member errors not tested
patch 8.2.0759: Vim9: missing changes for performance improvements
patch 8.2.0758: Vim9: no test for STORELIST and STOREDICT
patch 8.2.0757: Vim9: no test for MEMBER instruction
patch 8.2.0756: MS-Windows: still a compiler warning
patch 8.2.0755: Vim9: No error when variable initializer is not a constant
patch 8.2.0754: Vim9: No test for forward declaration
patch 8.2.0753: Vim9: expressions are evaluated in the discovery phase
patch 8.2.0752: terminal in popup window test is a bit flaky
Update version.c for missing patch number
patch 8.2.0751: Vim9: performance can be improved
patch 8.2.0750: netbeans test is a bit flaky
patch 8.2.0749: TERM signal test fails on FreeBSD
patch 8.2.0748: cannot get a list of all popups
patch 8.2.0747: cannot forcefully close all popups
patch 8.2.0746: popup_clear() hangs when a popup can't be closed
patch 8.2.0745: crash on exit when not all popups are closed
Update runtime files
patch 8.2.0744: the name vim is not capatilized in a message
patch 8.2.0743: can move to another buffer from a terminal in popup window
patch 8.2.0742: handling of a TERM signal not tested
patch 8.2.0741: Python tests fail because of changed message
patch 8.2.0740: minor message mistakes
patch 8.2.0739: incomplete profiling when exiting because of a dealy signal
patch 8.2.0738: mouse handling in a terminal window not well tested
patch 8.2.0737: when shell doesn't support CTRL-Z Vim still handles it
patch 8.2.0736: some files not recognized as pamenv
patch 8.2.0735: Vim9: using unitialized memory
patch 8.2.0734: Vim9: leaking memory when using :finish
patch 8.2.0733: Vim9: assigning to dict or list argument does not work
patch 8.2.0732: Vim9: storing value in dict messes up stack
patch 8.2.0731: Vim9: parsing declarations continues after :finish
patch 8.2.0730: Vim9: Assignment to dict member does not work
patch 8.2.0729: Vim9: When reloading a script variables are not cleared
patch 8.2.0728: messages about a deadly signal are not left aligned
patch 8.2.0727: MS-Windows: new gcc compiler does not support scanf format
patch 8.2.0726: Vim9: leaking memory when calling not compiled :def function
patch 8.2.0725: Vim9: cannot call a function declared later in Vim9 script
patch 8.2.0724: Vim9: appending to buffer/window/tab variable not tested
patch 8.2.0723: Vim9: nested constant expression not evaluated compile time
patch 8.2.0722: Vim9: not handling constant expression for elseif
patch 8.2.0721: Vim9: leaking memory when skipping
patch 8.2.0720: occasional exit when encountering an X error
patch 8.2.0719: Vim9: more expressions can be evaluated at compile time
patch 8.2.0718: gcc warning for returning pointer to local variable
patch 8.2.0717: Vim9: postponed constant expressions does not scale
patch 8.2.0716: Vim9: another memory leak
patch 8.2.0715: Vim9: leaking memory
patch 8.2.0714: Vim9: handling constant expression does not scale
Update runtime files
patch 8.2.0713: the pam_environment file is not recognized
patch 8.2.0712: various code not fully tested
patch 8.2.0711: temp directory might be cleared
patch 8.2.0710: Netbeans test sometimes fails
patch 8.2.0709: MS-Windows: compiler warning for int vs size_t
patch 8.2.0708: Vim9: constant expressions are not simplified
patch 8.2.0707: Vim9 function test fails
patch 8.2.0706: Vim9: using assert_fails() causes function to finish
patch 8.2.0705: indent tests don't run on CI for FreeBSD
patch 8.2.0704: Vim9: memory leak in disassemble test
patch 8.2.0703: Vim9: closure cannot store value in outer context
patch 8.2.0702: running channel tests may leave running process behind
patch 8.2.0701: Vim9 test fails without job feature
patch 8.2.0700: Vim9: converting error message to exception not tested
patch 8.2.0699: Vim9: not all errors tested
patch 8.2.0698: insert mode completion not fully tested
patch 8.2.0697: Vim9: memory leak when using nested function
patch 8.2.0696: Vim9: nested function does not work properly
patch 8.2.0695: Vim9: cannot define a function inside a function
patch 8.2.0694: Haiku: channel and terminal do not work
patch 8.2.0693: closure using argument not tested
patch 8.2.0692: startup test fails on MS-Windows
patch 8.2.0691: startup test fails
patch 8.2.0690: line number of option set by modeline is wrong
patch 8.2.0689: when using getaddrinfo() the error message is unclear
patch 8.2.0688: output clobbered if setting 'verbose' to see shell commands
patch 8.2.0687: some tests do not work on FreeBSD
patch 8.2.0686: formatoptions not sufficiently tested
patch 8.2.0685: Build failure
patch 8.2.0684: Vim9: memory leak when using lambda
patch 8.2.0683: Vim9: parsing type does not always work
patch 8.2.0682: Vim9: parsing function argument type can get stuck
patch 8.2.0681: pattern for 'hlsearch' highlighting may leak
patch 8.2.0680: PTYGROUP and PTYMODE are unused
patch 8.2.0679: Vim9: incomplete support for closures
patch 8.2.0678: rare crash for popup menu
patch 8.2.0677: Vim9: no support for closures
patch 8.2.0676: pattern in list of distributed files does not match
Update runtime files
patch 8.2.0675: Vim9: no support for closures
patch 8.2.0674: some source files are too big
patch 8.2.0673: cannot build Haiku in shadow directory
patch 8.2.0672: heredoc in scripts does not accept lower case marker
patch 8.2.0671: Haiku: compiler warnings
patch 8.2.0670: cannot change window when evaluating 'completefunc'
patch 8.2.0669: MS-Windows: display in VTP is a bit slow
patch 8.2.0668: compiler warning for int/size_t usage
patch 8.2.0667: cannot install Haiku version from source
patch 8.2.0666: Ruby test fails on MS-Windows
patch 8.2.0665: wrongly assuming Python executable is called "python"
patch 8.2.0664: included undesired changes in Makefile
patch 8.2.0663: not all systemd temp files are recognized
patch 8.2.0662: cannot use input() in a channel callback
patch 8.2.0661: eval test is still old style
patch 8.2.0660: the search.c file is a bit big
patch 8.2.0659: Vim9: no test for equal func type
patch 8.2.0658: HP-UX build fails when setenv() is not defined
patch 8.2.0657: Vim9: no check if called variable is a FuncRef
patch 8.2.0656: MS-Windows: redrawing right screen edge may not be needed
patch 8.2.0655: search code not sufficiently tested
patch 8.2.0654: building with Python fails
patch 8.2.0653: using uninitialized pointer
patch 8.2.0652: compiler warning for char conversion
patch 8.2.0651: old style benchmark test still in list of distributed files
patch 8.2.0650: Vim9: script function can be deleted
patch 8.2.0649: undo problem whn an InsertLeave autocommand resets undo
patch 8.2.0648: semicolon search does not work in first line
patch 8.2.0647: MS-Windows: repeat count for events was not used
patch 8.2.0646: t_Co uses the value of $COLORS in the GUI
patch 8.2.0645: MS-Windows terminal: CTRL-C does not get to child job
patch 8.2.0644: insufficient testing for invalid function arguments
patch 8.2.0643: terminal uses brown instead of dark yellow
patch 8.2.0642: Vim9: using invalid index
patch 8.2.0641: Vim9:  not expanded in :hardcopy and syn-include
patch 8.2.0640: Vim9: expanding  does not work
patch 8.2.0639: MS-Windows: messages test still fails
patch 8.2.0638: MS-Windows: messages test fails
patch 8.2.0637: incsearch highlighting does not work for ":sort!"
patch 8.2.0636: :messages does not show the maintainer when $LANG is unset
patch 8.2.0635: when using 256 colors DarkYellow does not show expected color
patch 8.2.0634: crash with null partial and blob
patch 8.2.0633: crash when using null partial in filter()
patch 8.2.0632: crash when using Haiku
patch 8.2.0631: Haiku file formatted with wrong tabstop
patch 8.2.0630: "make tags" does not cover Haiku GUI file
patch 8.2.0629: setting a boolean option to v:false does not work
patch 8.2.0628: error in menu translations
patch 8.2.0627: Vim9: error message does not work
patch 8.2.0626: Vim9: wrong syntax of function in Vim9 script
patch 8.2.0625: Vim9: confusing error when calling unknown function
patch 8.2.0624: Vim9: no check for space before #comment
patch 8.2.0623: typo in test comment
patch 8.2.0622: Haiku: GUI does not compile
patch 8.2.0621: after running tests asan files may remain
patch 8.2.0620: error in menu translations
patch 8.2.0619: null dict is not handled like an empty dict
patch 8.2.0618: echoing a null list results in no output
patch 8.2.0617: new error check triggers in Swedish menu
patch 8.2.0616: build error when disabling the diff feature
patch 8.2.0615: regexp benchmark stest is old style
patch 8.2.0614: get ml_get error when deleting a line in 'completefunc'
patch 8.2.0613: Vim9: no check for space before #comment
Update runtime files
patch 8.2.0612: Vim9: no check for space before #comment
patch 8.2.0611: Vim9: no check for space before #comment
patch 8.2.0610: some tests are still old style
patch 8.2.0609: configure does not detect moonjit correctly
patch 8.2.0608: warning from clang when building message test
patch 8.2.0607: gcc warns for using uninitialized variable
patch 8.2.0606: several syntax HL errors not checked
patch 8.2.0605: Vim9: cannot unlet an environment variable
patch 8.2.0604: :startinsert in a terminal window used later
patch 8.2.0603: configure does not detect moonjit
patch 8.2.0602: :unlet $VAR does not work properly
patch 8.2.0601: Vim9: :unlet is not compiled
patch 8.2.0600: Vim9: cannot read or write w:, t: and b: variables
patch 8.2.0599: Netbeans interface insufficiently tested
patch 8.2.0598: test_eval_stuff fails in normal terminal
patch 8.2.0597: test_eval is old style
patch 8.2.0596: crash in test49
patch 8.2.0595: Vim9: not all commands using ends_excmd() tested
patch 8.2.0594: MS-Windows: cannot build with WINVER set to 0x0501
patch 8.2.0593: finding a user command is not optimal
patch 8.2.0592: MS-Windows with VTP: cursor is not made invisible
patch 8.2.0591: MS-Windows: should always support IPv6
patch 8.2.0590: no 'backspace' value allows ignoring the insertion point
patch 8.2.0589: .bsd file type not recognized
patch 8.2.0588: Putty does not use "sgr" 'ttymouse' by default
patch 8.2.0587: compiler warning for unused variable
patch 8.2.0586: Vim9: # comment not sufficiently tested
patch 8.2.0585: Vim9: # comment not recognized after :vim9script
patch 8.2.0584: viminfo file uses obsolete function file_readable()
patch 8.2.0583: Vim9: # comment not recognized in :def function
patch 8.2.0582: color ramp test does not show text colors
patch 8.2.0581: Win32 console: the cursor position is always top-left
patch 8.2.0580: window size wrong if 'ea' is off and 'splitright' is on
patch 8.2.0579: Coverity warns for unused value
patch 8.2.0578: heredoc for interfaces does not support "trim"
patch 8.2.0577: not all modifiers supported for :options
patch 8.2.0576: some errors are not covered by tests
patch 8.2.0575: :digraph! not tested
patch 8.2.0574: ipv6 feature not shown in :version output
patch 8.2.0573: using :version twice leaks memory
patch 8.2.0572: using two lines for free and reset
patch 8.2.0571: double free when passing invalid argument to job_start()
patch 8.2.0570: Vim9: no error when omitting type from argument
patch 8.2.0569: build failure with tiny version
patch 8.2.0568: the man filetype plugin overwrites the unnamed register
patch 8.2.0567: Vim9: cannot put comments halfway expressions
patch 8.2.0566: Vim9: variable can be used uninitialized
patch 8.2.0565: Vim9: tests contain superfluous line continuation
patch 8.2.0564: Vim9: calling a def function from non-vim9 may fail
patch 8.2.0563: Vim9: cannot split a function line
patch 8.2.0562: Vim9: cannot split an expression into multiple lines
patch 8.2.0561: Vim9: cannot split function call in multiple lines
patch 8.2.0560: compiler warning in tiny build
patch 8.2.0559: clearing a struct is verbose
patch 8.2.0558: Vim9: dict code not covered by tests
patch 8.2.0557: no IPv6 support for channels
patch 8.2.0556: Vim9: memory leak when finding common type
patch 8.2.0555: Vim9: line continuation is not always needed
patch 8.2.0554: the GUI doesn't set t_Co
patch 8.2.0553: error for unused argument
patch 8.2.0552: Vim9: some errors not covered by tests
patch 8.2.0551: not all code for options is tested
patch 8.2.0550: some changes in the libvterm upstream code
patch 8.2.0549: user systemd files not recognized
patch 8.2.0548: Vim9: not all possible func type errors tested
patch 8.2.0547: Win32: restoring screen not always done right
patch 8.2.0546: Vim9: varargs implementation is inefficient
patch 8.2.0545: unused arguments ignored in non-standard way
patch 8.2.0544: memory leak in search test
patch 8.2.0543: Vim9: function with varargs does not work properly
patch 8.2.0542: no test for E386
patch 8.2.0541: Travis CI does not give compiler warnings
patch 8.2.0540: regexp and other code not tested
Update runtime files
patch 8.2.0539: comparing two NULL list fails
patch 8.2.0538: Vim9: VAR_PARTIAL is not used during compilation
patch 8.2.0537: Vim9: no check for sandbox when setting v:var
patch 8.2.0536: Vim9: some compilation code not tested
patch 8.2.0535: regexp patterns not fully tested
patch 8.2.0534: client-server test fails under valgrind
patch 8.2.0533: tests using term_wait() can still be flaky
patch 8.2.0532: cannot use simplify() as a method
patch 8.2.0531: various errors not tested
patch 8.2.0530: test crashes on s390
patch 8.2.0529: Vim9: function argument with default not checked
patch 8.2.0528: Vim9: function arguments insufficiently tested
patch 8.2.0527: Vim9: function types insufficiently tested
patch 8.2.0526: Gcc 9 complains about empty statement
patch 8.2.0525: Win32: typo in assignment and misplaced paren
patch 8.2.0524: Win32: searching for file matches is slow
patch 8.2.0523: loops are repeated
patch 8.2.0522: several errors are not tested for
patch 8.2.0521: crash when reading a blob fails
patch 8.2.0520: tests are not listed in sorted order
patch 8.2.0519: Vim9: return type not properly checked
patch 8.2.0518: a terminal falls back to setting $TERM to "xterm"
patch 8.2.0517: Vim9: cannot separate "func" and "func(): void"
patch 8.2.0516: client-server code is spread out
patch 8.2.0515: some compilers cannot add to "void *"
patch 8.2.0514: several global functions are used in only one file
patch 8.2.0513: reading past allocate memory when using varargs
patch 8.2.0512: Vim9: no optional arguments in func type
patch 8.2.0511: Cscope code not fully tested
patch 8.2.0510: Coverity complains about using uninitialized variable
patch 8.2.0509: various code is not properly tested.
patch 8.2.0508: Vim9: func and partial types not done yet
patch 8.2.0507: getbufvar() may get the wrong dictionary
patch 8.2.0506: Coverity complains about ignoring return value
patch 8.2.0505: term_getty() not sufficiently tested
patch 8.2.0504: Vim9: leaking scope memory when compilation fails
patch 8.2.0503: Vim9: some code is not tested
patch 8.2.0502: Vim9: some code is not tested
patch 8.2.0501: Vim9: script test fails when channel feature is missing
patch 8.2.0500: using the same loop in many places
patch 8.2.0499: calling a lambda is slower than evaluating a string
patch 8.2.0498: Coverity complains about uninitialized field
patch 8.2.0497: too verbose output from the asan build in Travis
patch 8.2.0496: Vim9: disassemble test fails
patch 8.2.0495: Vim9: some code not tested
patch 8.2.0494: Vim9: asan error
patch 8.2.0493: Vim9: some error messages not tested
patch 8.2.0492: Vim9: some error messages not tested
patch 8.2.0491: cannot recognize a <script> mapping using maparg()
patch 8.2.0490: Win32: VTP doesn't respect 'restorescreen'
patch 8.2.0489: Vim9: memory leaks
patch 8.2.0488: Vim9: compiling can break when using a lambda inside :def
patch 8.2.0487: Vim9: compiling not sufficiently tested
patch 8.2.0486: Vim9: some code and error messages not tested
patch 8.2.0485: Vim9 script test fails
patch 8.2.0484: Vim9: some error messages not tested
patch 8.2.0483: Vim9: "let x = x + 1" does not give an error
patch 8.2.0482: channel and sandbox code not sufficiently tested
patch 8.2.0481: Travis is still using trusty
patch 8.2.0480: Vim9: some code is not tested
patch 8.2.0479: unloading shared libraries on exit has no purpose
patch 8.2.0478: new buffers are not added to the Buffers menu
patch 8.2.0477: Vim9: error messages not tested
patch 8.2.0476: terminal nasty callback test fails sometimes
patch 8.2.0475: channel out_cb test still fails sometimes on Mac
patch 8.2.0474: cannot use :write when using a plugin with BufWriteCmd
patch 8.2.0473: variables declared in an outer scope
patch 8.2.0472: terminal highlight name is set twice, leaking memory
patch 8.2.0471: missing change to compile_list()
patch 8.2.0470: Test_confirm_cmd_cancel() can fail on a slow system
patch 8.2.0469: Vim9: no error for missing ] after list
patch 8.2.0468: GUI: pixel dust with some fonts and characters
patch 8.2.0467: Vim9: some errors are not tested
patch 8.2.0466: not parsing messages recursively breaks the govim plugin
patch 8.2.0465: Vim9: dead code and wrong return type
Correct list of patch numbers
patch 8.2.0464: typos and other small problems
patch 8.2.0464: typos and other small problems
Update runtime files
patch 8.2.0462: previewwindow test fails on some systems
patch 8.2.0461: confirm test fails on amd64 system
patch 8.2.0460: build failure because of wrong feature name
patch 8.2.0459: cannot check if a function name is correct
patch 8.2.0458: missing feature check in test function
patch 8.2.0457: Test_quotestar() often fails when run under valgrind
patch 8.2.0456: Test_confirm_cmd is flaky
patch 8.2.0455: cannot set the highlight group for a specific terminal
patch 8.2.0454: some tests fail when the system is slow
patch 8.2.0453: trailing space in job_start() command causes empty argument
patch 8.2.0452: channel_parse_messages() fails when called recursively
patch 8.2.0451: Win32: double-width character displayed incorrectly
patch 8.2.0450: not enough testing for restricted mode and function calls
patch 8.2.0449: Vim9: crash if return type is invalid
patch 8.2.0448: various functions not properly tested
patch 8.2.0447: terminal scroll tests fails on some systems
patch 8.2.0446: listener with undo of deleting all lines not tested
patch 8.2.0445: png and xpm files not in MS-Windows zip file
patch 8.2.0444: swap file test fails on some systems
patch 8.2.0443: clipboard code is spread out
patch 8.2.0442: channel contents might be used after being freed
patch 8.2.0441: terminal noblock test is still failing on BSD
patch 8.2.0440: terminal noblock test is still very flaky on BSD
patch 8.2.0439: :disassemble has minor flaws
patch 8.2.0438: terminal noblock test is very flaky on BSD
patch 8.2.0437: MS-Windows installer contains old stuff
patch 8.2.0436: no warnings for incorrect printf arguments
patch 8.2.0435: channel contents might be freed twice
patch 8.2.0434: MS-Windows with VTP: Normal color not working
patch 8.2.0433: INT signal not properly tested
patch 8.2.0432: a few tests fail in a huge terminal
patch 8.2.0431: some compilers don't support using \e for Esc
patch 8.2.0430: window creation failure not properly tested
patch 8.2.0429: no warning when test checks for option that never exists
patch 8.2.0428: buffer name may leak
patch 8.2.0427: it is not possible to check for a typo in a feature name
patch 8.2.0426: some errors were not tested for
patch 8.2.0425: code for modeless selection not sufficiently tested
patch 8.2.0424: checking for wrong return value
patch 8.2.0423: in some environments a few tests are expected to fail
patch 8.2.0422: crash when passing popup window to win_splitmove()
patch 8.2.0421: interrupting with CTRL-C does not always work
patch 8.2.0420: Vim9: cannot interrupt a loop with CTRL-C
patch 8.2.0419: various memory leaks in Vim9 script code
patch 8.2.0418: code in eval.c not sufficiently covered by tests
patch 8.2.0417: Travis CI config can be improved
Update runtime files
patch 8.2.0416: test leaves file behind
patch 8.2.0415: bsdl filetype is not detected
patch 8.2.0414: channel connect_waittime() test is flaky
patch 8.2.0413: buffer menu does not handle special buffers properly
patch 8.2.0412: MS-Windows: cannot use vimtutor from the start menu
patch 8.2.0411: Mac: breakcheck is using a value from the stone ages
patch 8.2.0410: channel test fails too often on slow Mac
patch 8.2.0409: search test leaves file behind
patch 8.2.0408: delete() commented out for testing
patch 8.2.0407: no early check if :find and :sfind have an argument
patch 8.2.0406: FileReadCmd event not well tested
patch 8.2.0405: MSVC: build fails with some combination of features
patch 8.2.0404: writefile() error does not give a hint
patch 8.2.0403: when 'buftype' is "nofile" there is no overwrite check
patch 8.2.0402: setting local instead of global flag
patch 8.2.0401: not enough test coverage for evalvars.c
patch 8.2.0400: not all tests using a terminal are in the list of flaky tests
patch 8.2.0399: various memory leaks
patch 8.2.0398: profile test fails when two functions take same time
patch 8.2.0397: delayed screen update when using undo from Insert mode
patch 8.2.0396: cmdexpand.c insufficiently tested
patch 8.2.0395: build fails with FEAT_EVAL but without FEAT_MENU
patch 8.2.0394: Coverity complains about using NULL pointer
patch 8.2.0393: Coverity warns for not using return value
patch 8.2.0392: Coverity warns for using array index out of range
patch 8.2.0391: CI test coverage dropped
patch 8.2.0390: terminal postponed scrollback test is flaky
patch 8.2.0389: delayed redraw when shifting text from Insert mode
patch 8.2.0388: printmbcharset option not tested
patch 8.2.0387: error for possible NULL argument to qsort()
patch 8.2.0386: part from unfinished patch got included
patch 8.2.0385: menu functionality insufficiently tested
patch 8.2.0384: Travis CI has warnings
patch 8.2.0383: wrong feature check causes test not to be run
patch 8.2.0382: some tests fail when run under valgrind
patch 8.2.0381: using freed memory with :lvimgrep and autocommand
patch 8.2.0380: tiny popup when creating a terminal popup without minwidth
Update runtime files
patch 8.2.0379: gcc warns for ambiguous else
patch 8.2.0378: prop_find() does not find all props
patch 8.2.0377: no CI test for a big-endian system
patch 8.2.0376: nasty callback test fails on some systems
patch 8.2.0375: Coverity warning for not using return value
patch 8.2.0374: using wrong printf directive for jump location
patch 8.2.0373: type of term_sendkeys() is unknown
patch 8.2.0372: prop_find() may not find text property at start of the line
patch 8.2.0371: crash with combination of terminal popup and autocmd
patch 8.2.0370: the typebuf_was_filled flag is sometimes not reset
patch 8.2.0369: various Normal mode commands not fully tested
patch 8.2.0368: Vim9: import that redefines local variable does not fail
patch 8.2.0367: can use :pedit in a popup window
patch 8.2.0366: hardcopy command not tested enough
patch 8.2.0365: tag kind can't be a multi-byte character
patch 8.2.0364: printf test failing on Haiku
patch 8.2.0363: some Normal mode commands not tested
patch 8.2.0362: MS-Windows: channel test fails if grep is not available
patch 8.2.0361: internal error when using "0" for a callback
patch 8.2.0360: yaml files are only recognized by the file extension
patch 8.2.0359: popup_atcursor() may hang
patch 8.2.0358: insufficient testing for indent.c
patch 8.2.0357: cannot delete a text property matching both id and type
patch 8.2.0356: MS-Windows: feedkeys() with VIMDLL cannot handle CSI
patch 8.2.0355: Vim9: str_val is confusing, it's a number
patch 8.2.0354: Python 3.9 does not define _Py_DEC_REFTOTAL
patch 8.2.0353: Vim9: while loop not tested
patch 8.2.0352: FreeBSD: test for sourcing utf-8 is skipped
patch 8.2.0351: terminal in popup test is still a bit flaky
patch 8.2.0350: Vim9: expression tests don't use recognized constants
patch 8.2.0349: Vim9: constant expression not well tested
patch 8.2.0348: Vim9: not all code tested
patch 8.2.0347: various code not covered by tests
patch 8.2.0346: Vim9: finding common list type not tested
patch 8.2.0345: compiler warning when building without the float feature
patch 8.2.0344: ":def" not skipped properly
Update runtime files
patch 8.2.0343: Vim9: using wrong instruction, limited test coverage
patch 8.2.0342: some code in ex_getln.c not covered by tests
patch 8.2.0341: using ":for" in Vim9 script gives an error
patch 8.2.0340: Vim9: function and partial types not tested
patch 8.2.0339: Vim9: function return type may depend on arguments
patch 8.2.0338: build failure without the channel feature
patch 8.2.0337: build fails on a few systems
patch 8.2.0336: Vim9: insufficient test coverage for compiling
patch 8.2.0335: no completion for :disassemble
patch 8.2.0334: abort called when using test_void()
patch 8.2.0333: terminal in popup test is flaky
patch 8.2.0332: some code in ex_getln.c not covered by tests
patch 8.2.0331: internal error when using test_void() and test_unknown()
patch 8.2.0330: build error with popup window but without terminal
patch 8.2.0329: popup filter converts 0x80 bytes
patch 8.2.0328: no redraw when leaving term-normal mode in popup terminal
patch 8.2.0327: crash when opening and closing two popup terminal windows
patch 8.2.0326: compiler warning for using uninitialized variable
patch 8.2.0325: ex_getln.c code not covered by tests
patch 8.2.0324: text property not updated correctly when inserting/deleting
patch 8.2.0323: Vim9: calling a function that is defined later is slow
patch 8.2.0322: Vim9: error checks not tested
patch 8.2.0321: Vim9: ":execute" does not work yet
patch 8.2.0320: no Haiku support
patch 8.2.0319: file missing in distribution, comments outdated
Update runtime files.
patch 8.2.0318: Vim9: types not sufficiently tested
patch 8.2.0317: MSVC: _CRT_SECURE_NO_DEPRECATE not defined on DEBUG build
patch 8.2.0316: ex_getln.c code has insufficient test coverage
patch 8.2.0315: build failure on HP-UX system
patch 8.2.0314: short name not set for terminal buffer
patch 8.2.0313: Vim9: insufficient script tests
patch 8.2.0312: Vim9: insufficient script tests
patch 8.2.0311: Vim9: insufficient script tests
patch 8.2.0310: autocmd test fails on a slow system
patch 8.2.0309: window-local values have confusing name
patch 8.2.0308: 'showbreak' does not work for a very long line
patch 8.2.0307: Python 3 vim.eval not well tested
patch 8.2.0306: Vim9: :substitute(pat(repl does not work in Vim9 script
patch 8.2.0305: relativenumber test fails on some systems
patch 8.2.0304: terminal test if failing on some systems
patch 8.2.0303: TermChanged test fails in the GUI
patch 8.2.0302: setting 'term' may cause error in TermChanged autocommand
patch 8.2.0301: insufficient testing for exception handling
patch 8.2.0300: Vim9: expression test fails without channel support
patch 8.2.0299: Vim9: ISN_STORE with argument not tested
patch 8.2.0298: Vim9 script: cannot start command with a string constant
patch 8.2.0297: compiler warnings for the Ruby interface
patch 8.2.0296: mixing up "long long" and __int64 may cause problems
patch 8.2.0295: highlighting for :s wrong when using different separator
patch 8.2.0294: cannot use Ex command that is also a function name
patch 8.2.0293: various Ex commands not sufficiently tested
patch 8.2.0292: Vim9: CHECKNR and CHECKTYPE instructions not tested
patch 8.2.0291: Vim9: assigning [] to list<string> doesn't work
patch 8.2.0290: running individual test differs from all tests
patch 8.2.0289: Vim9: :echo did not clear the rest of the line
patch 8.2.0288: Vim9: some float and blob operators not tested
patch 8.2.0287: Vim9: return in try block not tested; catch not tested
patch 8.2.0286: cannot use popup_close() for a terminal popup
patch 8.2.0285: unused error message; cannot create s:var
patch 8.2.0284: Vim9: assignment test fails
patch 8.2.0283: Vim9: failing to load script var not tested
patch 8.2.0282: Vim9: setting number option not tested
patch 8.2.0281: two placed signs in the same line are not combined
patch 8.2.0280: Vim9: throw in :def function not caught higher up
patch 8.2.0279: Vim9: no test for deleted :def function
patch 8.2.0278: channel test is flaky on Mac
patch 8.2.0277: Vim9: not all instructions covered by tests
patch 8.2.0276: Vim9: not allowing space before ")" in function call
patch 8.2.0275: some Ex code not covered by tests
patch 8.2.0274: hang with combination of feedkeys(), Ex mode and :global
patch 8.2.0273: MS-Windows uninstall may delete wrong batch file
patch 8.2.0272: ":helptags ALL" gives error for some directories
patch 8.2.0271: the "num64" feature is available everywhere
patch 8.2.0270: some code not covered by tests
patch 8.2.0269: Vim9: operator after list index does not work
patch 8.2.0268: trycatch test fails
patch 8.2.0267: no check for a following cmd when calling a function fails
patch 8.2.0266: terminal in popup test sometimes fails on Mac
patch 8.2.0265: "eval" after "if 0" doesn't check for following command
patch 8.2.0264: fileformat test still fails on MS-Windows
patch 8.2.0263: a few new Vim9 messages are not localized
patch 8.2.0262: fileformat test fails on MS-Windows
patch 8.2.0261: some code not covered by tests
patch 8.2.0260: several lines of code are duplicated
Update runtime files.
patch 8.2.0259: terminal in popup test sometimes fails
patch 8.2.0258: modifyOtherKeys cannot be temporarily disabled
patch 8.2.0257: cannot recognize a terminal in a popup window
patch 8.2.0256: time and timer related code is spread out
patch 8.2.0255: VMS: missing files in build
patch 8.2.0254: compiler warning for checking size_t to be negative
patch 8.2.0253: crash when using :disassamble without argument
patch 8.2.0252: Windows compiler warns for using size_t
patch 8.2.0251: a couple of function return types can be more specific
patch 8.2.0250: test_clear_search_pat() is unused
patch 8.2.0249: MS-Windows: various warnings
patch 8.2.0248: MS-Windows: dealing with deprecation is too complicated
patch 8.2.0247: misleading comment in NSIS installer script
patch 8.2.0246: MSVC: deprecation warnings with Ruby
patch 8.2.0245: MSVC: error message if the auto directory already exists
patch 8.2.0244: compiler warning in Lua interface
patch 8.2.0243: insufficient code coverage for ex_docmd.c functions
patch 8.2.0242: preview popup window test fails with long directory name
patch 8.2.0241: crash when setting 'buftype' to "quickfix"
patch 8.2.0240: using memory after it was freed
patch 8.2.0239: MS-Windows: 'env' job option does not override existing vars
patch 8.2.0238: MS-Windows: job_stop() results in exit value zero
patch 8.2.0237: crash when setting 'wincolor' on finished terminal window
patch 8.2.0236: MS-Windows unintall doesn't delete vimtutur.bat
patch 8.2.0235: draw error when an empty group is removed from 'statusline'
patch 8.2.0234: message test fails on SunOS
patch 8.2.0233: crash when using garbagecollect() in between rand()
patch 8.2.0232: the :compiler command causes a crash
patch 8.2.0231: silent system command may clear the screen
patch 8.2.0230: terminal popup test is flaky
patch 8.2.0229: compare instructions not tested
patch 8.2.0228: configure does not recognize gcc version on BSD
patch 8.2.0227: compiling a few instructions not tested
patch 8.2.0226: compiling for loop not tested
patch 8.2.0225: compiling lambda not tested yet
patch 8.2.0224: compiling :elseif not tested yet
patch 8.2.0223: some instructions not yet tested
patch 8.2.0222: Vim9: optional function arguments don't work yet
patch 8.2.0221: no test for Vim9 += and ..=
patch 8.2.0220: terminal test did pass on Mac
patch 8.2.0219: terminal test still fails on Mac
patch 8.2.0218: several Vim9 instructions are not tested
patch 8.2.0217: terminal test fails on Mac
patch 8.2.0216: several Vim9 instructions are not tested
patch 8.2.0215: wrong file name shortening
patch 8.2.0214: a popup window with a terminal can be made hidden
patch 8.2.0213: configure does not recognize gcc 10.0 and later
patch 8.2.0212: missing search/substitute pattern hardly tested
patch 8.2.0211: test for ANSI colors fails without an "ls" command
patch 8.2.0210: Coverity complains about uninitialized field
Update runtime files.
patch 8.2.0209: function a bit far away from where it's used
patch 8.2.0208: fnamemodify() does not apply ":~" when followed by ":."
patch 8.2.0207: crash when missing member type on list argument
patch 8.2.0206: calling Vim9 function using default argument fails
patch 8.2.0205: error code E899 used twice
patch 8.2.0204: crash when using winnr('j') in a popup window
patch 8.2.0203: :helptags and some other functionality not tested
patch 8.2.0202: when 'lazyredraw' is set the window title may not be updated
patch 8.2.0201: cannot assign to an imported variable
patch 8.2.0200: Vim9 script commands not sufficiently tested
patch 8.2.0199: Vim9 script commands not sufficiently tested
patch 8.2.0198: no tests for y/n prompt
patch 8.2.0197: some Ex commands not sufficiently tested
patch 8.2.0196: blocking commands for a finished job in a popup window
patch 8.2.0195: some tests fail when run in the GUI
patch 8.2.0194: some commands can cause problems in terminal popup
patch 8.2.0193: still build failure without +terminal feature
patch 8.2.0192: build failure without +terminal feature
patch 8.2.0191: cannot put a terminal in a popup window
patch 8.2.0190: Kotlin files are not recognized
patch 8.2.0189: cd() with NULL argument crashes
patch 8.2.0188: Check commands don't work well with Vim9 script
patch 8.2.0187: reduntant code
patch 8.2.0186: a couple of tests may fail when features are missing
patch 8.2.0185: Vim9 script: cannot use "if has()" to skip lines
patch 8.2.0184: blob test fails
patch 8.2.0183: tests fail when the float feature is disabled
patch 8.2.0182: min() and max() materialize a range() list
patch 8.2.0181: problems parsing :term arguments
patch 8.2.0180: test for wrapmargin fails if terminal is not 80 columns
patch 8.2.0179: still a few places where range() does not work
patch 8.2.0178: with VTP the screen may not be restored properly
patch 8.2.0177: memory leak in get_tags()
patch 8.2.0176: generating os headers does not work for Swedish
patch 8.2.0175: crash when removing list element in map()
patch 8.2.0174: various commands not completely tested
patch 8.2.0173: build fails with old compiler
patch 8.2.0172: Coverity warning for not restoring character
patch 8.2.0171: Coverity warning for using uninitialized buffer
patch 8.2.0170: Coverity warning for ignoring return value
patch 8.2.0169: Coverity warning for dead code
patch 8.2.0168: Coverity warning for assigning NULL to an option
patch 8.2.0167: Coverity warning for ignoring return value
patch 8.2.0166: Coverity warning for using uninitialized variable
patch 8.2.0165: Coverity warning for using NULL pointer
patch 8.2.0164: test_alot takes too long
patch 8.2.0163: test hangs on MS-Windows console
patch 8.2.0162: balloon test fails in the GUI
patch 8.2.0161: not recognizing .gv file as dot filetype
patch 8.2.0160: range test fails
patch 8.2.0159: non-materialized range() list causes problems
patch 8.2.0158: triggering CompleteDone earlier is not backwards compatible
patch 8.2.0157: Vim9 script files not in list of distributed files
patch 8.2.0156: various typos in source files and tests
patch 8.2.0155: warnings from MinGW compiler; tests fail without +float
patch 8.2.0154: reallocating the list of scripts is inefficient
patch 8.2.0153: warning shows when listing version info
patch 8.2.0152: restoring ctrl_x_mode is not needed
patch 8.2.0151: detecting a script was already sourced is unreliable
patch 8.2.0150: cannot define python function when using :execute
patch 8.2.0149: maintaining a Vim9 branch separately is more work
Update runtime files.
patch 8.2.0148: mapping related function in wrong source file
patch 8.2.0147: block Visual mode operators not correct when 'linebreak' set
patch 8.2.0146: wrong indent when 'showbreak' and 'breakindent' are set
patch 8.2.0145: using #error for compilation errors should be OK now
patch 8.2.0144: some mapping code is not fully tested
patch 8.2.0143: Coverity warning for possible use of NULL pointer
patch 8.2.0142: possible to enter popup window with CTRL-W p
patch 8.2.0141: no swift filetype detection
Update runtime files.
patch 8.2.0140: CI does not test building doc tags
patch 8.2.0139: MS-Windows: default for IME is inconsistent
patch 8.2.0138: memory leak when starting a job fails
patch 8.2.0137: crash when using win_execute() from a new tab
patch 8.2.0136: stray ch_logfile() call
patch 8.2.0135: bracketed paste can still cause invalid memory access
patch 8.2.0134: some map functionality not covered by tests
patch 8.2.0133: invalid memory access with search command
patch 8.2.0132: script may be re-used when deleting and creating a new one
patch 8.2.0131: command line is not cleared when switching tabs
patch 8.2.0130: Python3 ranges are not tested
patch 8.2.0129: MS-Windows installer doesn't use Turkish translations
patch 8.2.0128: cannot list options one per line
patch 8.2.0127: some buffer commands work in a popup window
patch 8.2.0126: textprop test fails
patch 8.2.0125: :mode no longer works for any system
patch 8.2.0124: compiler warnings for variable types
patch 8.2.0123: complete_info() does not work when CompleteDone is triggered
patch 8.2.0122: readme files still mention MS-DOS
patch 8.2.0121: filter() and map() on blob don't work
patch 8.2.0120: virtcol() does not check arguments to be valid
patch 8.2.0119: message test fails on some platforms
patch 8.2.0118: crash when cycling to buffers involving popup window
Update runtime files.
patch 8.2.0117: crash when using gettabwinvar() with invalid arguments
patch 8.2.0116: BufEnter autocmd not triggered on ":tab drop"
patch 8.2.0115: byte2line() does not work correctly with text properties
patch 8.2.0114: info about sourced scripts is scattered
patch 8.2.0113: "make cmdidxs" fails
patch 8.2.0112: illegal memory access when using 'cindent'
patch 8.2.0111: VAR_SPECIAL is also used for booleans
patch 8.2.0110: prop_find() is not implemented
Update runtime files.
patch 8.2.0109: corrupted text properties when expanding spaces
patch 8.2.0108: when sign text is changed a manual redraw is needed
patch 8.2.0107: hgignore is out of sync from gitignore
patch 8.2.0106: printf formats are not exactly right
patch 8.2.0105: Vim license not easy to find on github
patch 8.2.0104: using channel or job with ":execute" has strange effects
patch 8.2.0103: using null object with execute() has strange effects
patch 8.2.0102: messages test fails in small version
patch 8.2.0101: crash when passing null object to ":echomsg"
patch 8.2.0100: macros for Ruby are too complicated
patch 8.2.0099: use of NULL pointer when out of memory
patch 8.2.0098: exe stack length can be wrong without being detected
patch 8.2.0097: crash with autocommand and spellfile
patch 8.2.0096: cannot create tiny popup window in last column
patch 8.2.0095: cannot specify exit code for :cquit
patch 8.2.0094: MS-Windows: cannot build with Strawberry Perl 5.30
patch 8.2.0093: win_splitmove() can make Vim hang
patch 8.2.0092: tags functionality insufficiently tested
patch 8.2.0091: compiler warnings for size_t / int types
patch 8.2.0090: generated files show up in git status
patch 8.2.0089: crash when running out of memory in :setfiletype completion
patch 8.2.0088: insufficient tests for tags; bug in using extra tag field
patch 8.2.0087: crash in command line expansion when out of memory
patch 8.2.0086: build error for small version
patch 8.2.0085: dead code in builtin functions
patch 8.2.0084: complete item "user_data" can only be a string
patch 8.2.0083: text properties wrong when tabs and spaces are exchanged
patch 8.2.0082: when reusing a buffer listeners are not cleared
patch 8.2.0081: MS-Windows also need the change to support INIT4()
patch 8.2.0080: globals using INIT4() are not in the tags file
Update a few runtime files.
patch 8.2.0079: Python 3 unicode test still fails on MS-Windows
patch 8.2.0078: expanding <sfile> works differently the second time
patch 8.2.0077: settagstack() cannot truncate at current index
patch 8.2.0076: Python 3 unicode test fails on MS-Windows
patch 8.2.0075: Python 3 unicode test still sometimes fails
patch 8.2.0074: Python 3 unicode test someitmes fails
patch 8.2.0073: initializing globals with COMMA is clumsy
patch 8.2.0072: memory test still fails on Cirrus CI
patch 8.2.0071: memory test often fails on Cirrus CI
patch 8.2.0070: crash when using Python 3 with "debug" encoding
patch 8.2.0069: ETYPE_ is used for two different enums
patch 8.2.0068: crash when using Python 3 with "utf32" encoding
patch 8.2.0067: ERROR_UNKNOWN clashes on some systems
patch 8.2.0066: some corners of vim_snprintf() are not tested
patch 8.2.0065: Amiga and alikes: autoopen only used on Amiga OS4
patch 8.2.0064: diffmode completion doesn't use per-window setting
patch 8.2.0063: wrong size argument to vim_snprintf()
patch 8.2.0062: memory test is flaky on FreeBSD
patch 8.2.0061: the execute stack can grow big and never shrinks
patch 8.2.0060: message test only runs with one encoding
patch 8.2.0059: compiler warnings for unused variables in small build
patch 8.2.0058: running tests changes ~/.viminfo
patch 8.2.0057: cannot build with small features
patch 8.2.0056: execution stack is incomplete and inefficient
patch 8.2.0055: cannot use ":gui" in vimrc with VIMDLL enabled
patch 8.2.0054: :diffget and :diffput don't have good completion
patch 8.2.0053: windowsversion() does not always return the right value
patch 8.2.0052: more-prompt not properly tested
patch 8.2.0051: command line completion test skipped
patch 8.2.0050: after deleting a file mark it is still in viminfo
patch 8.2.0049: command line completion not fully tested
patch 8.2.0048: another timers test is flaky on Travis for Mac
patch 8.2.0047: cannot skip tests for specific MS-Windows platform
Update runtime files.
patch 8.2.0046: tests for spell suggestions are slow
patch 8.2.0045: script test fails
patch 8.2.0044: expression type is used inconsistently
patch 8.2.0043: timers test is still flaky on Travis for Mac
patch 8.2.0042: clearing funccal values twice
patch 8.2.0041: leaking memory when selecting spell suggestion
patch 8.2.0040: timers test is still flaky on Travis for Mac
patch 8.2.0039: memory access error when "z=" has no suggestions
patch 8.2.0038: spell suggestions insufficiently tested
patch 8.2.0037: missing renamed message
patch 8.2.0036: not enough test coverage for match functions
patch 8.2.0035: saving and restoring called_emsg is clumsy
patch 8.2.0034: missing check for out of memory
patch 8.2.0033: crash when make_extmatch() runs out of memory
patch 8.2.0032: MS-Windows: test for blank job fails
patch 8.2.0031: MS-Windows: test for empty job fails
patch 8.2.0030: "gF" does not work on output of "verbose command"
patch 8.2.0029: MS-Windows: crash with empty job command
patch 8.2.0028: searchpairpos() is not tested
patch 8.2.0027: still some /* */ comments
patch 8.2.0026: still some /* */ comments
patch 8.2.0025: repeated word in comment
Update runtime files.
patch 8.2.0024: filetype Rego not recognized
patch 8.2.0023: command line editing not sufficiently tested
patch 8.2.0022: click in popup window doesn't close it in the GUI
patch 8.2.0021: timer test fails too often on Travis with MacOS
patch 8.2.0020: mouse clicks in the command line not tested
patch 8.2.0019: cannot number of lines of another buffer
patch 8.2.0018: :join does not add white space where it should
patch 8.2.0017: OS/2 and MS-DOS are still mentioned
patch 8.2.0016: test name used twice, option not restored properly
patch 8.2.0015: not all modeline variants are tested
patch 8.2.0014: test69 and test95 are old style
patch 8.2.0013: not using a typedef for condstack
patch 8.2.0012: some undo functionality is not tested
patch 8.2.0011: screen updating wrong when opeing preview window
patch 8.2.0010: test64 is old style
patch 8.2.0009: VMS: terminal version doesn't build
patch 8.2.0008: test72 is old style
patch 8.2.0007: popup menu positioned wrong with folding in two tabs
patch 8.2.0006: test using long file name may fail
patch 8.2.0005: duplication in version info
patch 8.2.0004: get E685 and E931 if buffer reload is interrupted
patch 8.2.0003: Build file dependencies are incomplete
patch 8.2.0002: "dj" only deletes first line of closed fold
patch 8.2.0001: #endif comments do reflect corresponding #ifdef
Vim 8.2 release
Minor runtime file updates.
patch 8.1.2424: MS-Windows: console buffer is resized unnecessarily
patch 8.1.2423: MS-Windows properties shows version as "8, 1, 0"
patch 8.1.2422: "make depend" does not work correctly for libvterm
patch 8.1.2421: test88 is old style
patch 8.1.2420: crash when calling popup_close() in win_execute()
patch 8.1.2419: with a long file name the hit-enter prompt appears
patch 8.1.2418: bufnr('$') is wrong after recycling popup buffer
patch 8.1.2417: MinGW/Cygwin build does not clean up all files
patch 8.1.2416: loading menus sets v:errmsg
patch 8.1.2415: popup menu flickers if an info popup is used
Update a few runtime files.
patch 8.1.2414: MS-Windows: properties dialog box shows wrong character
patch 8.1.2413: cannot update ex_cmdidxs.h on MS-Windows
patch 8.1.2412: crash when evaluating expression with error
patch 8.1.2411: function argument copied unnecessarily
Runtime file updates.
patch 8.1.2410: MS-Windows: test_iminsert fails without IME support
patch 8.1.2409: creating the distribution doesn't work as documented
patch 8.1.2408: syntax menu and build instructions outdated
patch 8.1.2407: proto files, dependencies and build instructions outdated
patch 8.1.2406: leaking memory in test_paste and test_registers
patch 8.1.2405: matchadd_conceal test fails under valgrind
patch 8.1.2404: channel test fails under valgrind
patch 8.1.2403: autocmd test fails under valgrind
Runtime file updates.
patch 8.1.2402: typos and other small things
patch 8.1.2401: :cexpr does not handle | in expression
patch 8.1.2400: test39 is old style
patch 8.1.2399: info popup on top of cursor if it doesn't fit
patch 8.1.2398: strptime() test fails on Japanese Mac
patch 8.1.2397: should not define __USE_XOPEN
Update runtime files.
patch 8.1.2396: using old C style comments
patch 8.1.2395: using old C style comments
patch 8.1.2394: using old C style comments
patch 8.1.2393: using old C style comments
patch 8.1.2392: using old C style comments
patch 8.1.2391: cannot build when __QNXNTO__ is defined
patch 8.1.2390: test94 is old style, fix 7.4.441 not tested
patch 8.1.2389: using old C style comments
patch 8.1.2388: using old C style comments
patch 8.1.2387: using old C style comments
Update version 8.2 notes and make syntax.
patch 8.1.2386: 'wincolor' is not used for 'listchars'
patch 8.1.2385: opening cmdline window with feedkeys() does not work
patch 8.1.2384: test 48 is old style
Update a few runtime files
patch 8.1.2383: using old C style comments
patch 8.1.2382: MS-Windows: When using VTP bold+inverse doesn't work
patch 8.1.2381: not all register related code is covered by tests
patch 8.1.2380: using old C style comments
patch 8.1.2379: using old C style comments
patch 8.1.2378: using old C style comments
patch 8.1.2377: GUI: when losing focus a pending operator is executed
patch 8.1.2376: preprocessor indents are incorrect
patch 8.1.2375: no suffucient testing for registers
patch 8.1.2374: unused parts of libvterm are included
patch 8.1.2373: cannot build with +popupwin but without +quickfix
patch 8.1.2372: VMS: failing realloc leaks memory
patch 8.1.2371: FEAT_TEXT_PROP is a confusing name
patch 8.1.2370: build problems on VMS
patch 8.1.2369: cannot build with quickfix and without text properties
patch 8.1.2368: using old C style comments
patch 8.1.2367: registers are not sufficiently tested
patch 8.1.2366: using old C style comments
patch 8.1.2365: missing tests for recent popupwin changes
Update runtime files.
patch 8.1.2364: termwinscroll test is flaky on FreeBSD
patch 8.1.2363: ml_get error when accessing Visual area in 'statusline'
patch 8.1.2362: cannot place signs in a popup window
patch 8.1.2361: MS-Windows: test failures related to VIMDLL
patch 8.1.2360: quickfix test coverage can still be improved
patch 8.1.2359: cannot build without FEAT_FLOAT
patch 8.1.2358: tests fail on Cirrus CI for FreeBSD
patch 8.1.2357: no test with wrong argument for rand()
patch 8.1.2356: rand() does not use the best algorithm
patch 8.1.2355: test with "man" fails on FreeBSD
patch 8.1.2354: Cirrus CI runs on another repository
patch 8.1.2353: build failure on FreeBSD
Revert "Cirrus CI: add a simple CI using BSD"
patch 8.1.2352: CI doesn't cover FreeBSD
Cirrus CI: add a simple CI using BSD
patch 8.1.2351: 'wincolor' not used for > for not fitting double width char
Update runtime files
patch 8.1.2350: other text for CTRL-V in Insert mode with modifyOtherKeys
patch 8.1.2349: :lockvar and :unlockvar cannot be followed by "| endif"
patch 8.1.2348: :const cannot be followed by "| endif"
patch 8.1.2347: MacOS: build fails
patch 8.1.2346: CTRL-R CTRL-R doesn't work with modifyOtherKeys
patch 8.1.2345: .cjs files are not recognized as Javascript
patch 8.1.2344: Cygwin: warning for using strptime()
patch 8.1.2343: using time() for srand() is not very random
patch 8.1.2342: random number generator in Vim script is slow
patch 8.1.2341: not so easy to interrupt a script programatically
patch 8.1.2340: quickfix test fails under valgrind and asan
patch 8.1.2339: insufficient testing for quickfix
patch 8.1.2338: using Visual mark sith :s gives E20 if not set
patch 8.1.2337: double-click time sometimes miscomputed
patch 8.1.2336: when an expr mapping moves the cursor it is not restored
patch 8.1.2335: error message for function arguments may use NULL pointer
patch 8.1.2334: possible NULL pointer dereference in popup_locate()
patch 8.1.2333: with modifyOtherKeys CTRL-^ doesn't work
patch 8.1.2332: missing file in refactoring
patch 8.1.2331: the option.c file is still very big
patch 8.1.2330: vi' does not always work when 'selection' is exclusive
patch 8.1.2329: mouse multiple click test is a bit flaky
patch 8.1.2328: a few hangul input pieces remain
patch 8.1.2327: cannot build with Hangul input
patch 8.1.2326: cannot parse a date/time string
patch 8.1.2325: crash when using balloon with empty line
patch 8.1.2324: with of scrollbar in popup menu not taken into account
Update runtime files.
patch 8.1.2323: Old MSVC version no longer tested.
patch 8.1.2322: quickfix test fails in very big terminal
patch 8.1.2321: cannot select all text with the mouse
patch 8.1.2320: insufficient test coverage for quickfix
patch 8.1.2319: compiler warning for int size
patch 8.1.2318: MS-Windows GUI: main background shows in toolbar
patch 8.1.2317: no test for spell affix file with flag on suffix
patch 8.1.2316: FORTIFY_SOURCE can also be present in CPPFLAGS
patch 8.1.2315: not always using the right window when jumping to an error
patch 8.1.2314: vi' sometimes does not select anything
patch 8.1.2313: debugging where a delay comes from is not easy
patch 8.1.2312: "line:" field in tags file not used
Update runtime files.
patch 8.1.2311: warning for missing function prototype
patch 8.1.2310: no proper test for directory changes in quickfix
patch 8.1.2309: compiler warning for argument type
patch 8.1.2308: deleting text before zero-width textprop removes it
patch 8.1.2307: positioning popup doesn't work for buffer-local textprop
patch 8.1.2306: double and triple clicks are not tested
patch 8.1.2305: no warning for wrong entry in translations
patch 8.1.2304: cannot get the mouse position when getting a mouse click
patch 8.1.2303: cursor in wrong position after horizontal scroll
patch 8.1.2302: :lockmarks does not work for '[ and ']
patch 8.1.2301: MS-Windows GUI: drawing error when background color changes
Update runtime files
patch 8.1.2300: redraw breaks going through list of popup windows
patch 8.1.2299: ConPTY in MS-Windows 1909 is still wrong
patch 8.1.2298: missing part of 8.1.2296
patch 8.1.2297: the ex_vimgrep() function is too long
patch 8.1.2296: text properties are not combined with syntax by default
patch 8.1.2295: if buffer of popup is in another window cursorline sign shows
patch 8.1.2294: cursor pos wrong with concealing and search causes a scroll
patch 8.1.2293: join adds trailing space when second line is empty
patch 8.1.2292: v:mouse_winid not set on click in popup window
patch 8.1.2291: memory leak when executing command in a terminal
Update runtime files
patch 8.1.2290: autocommand test fails
patch 8.1.2289: after :diffsplit closing the window does not disable diff
patch 8.1.2288: not using all space when popup with "topleft" flips to above
patch 8.1.2287: using EndOfBuffer highlight in popup does not look good
patch 8.1.2286: using border highlight in popup window leaks memory
patch 8.1.2285: padding in structures wastes memory
patch 8.1.2284: compiler warning for unused variable
patch 8.1.2283: missed on use of p_sbr
patch 8.1.2282: crash when passing many arguments through a partial
patch 8.1.2281: 'showbreak' cannot be set for one window
patch 8.1.2280: crash when passing partial to substitute()
patch 8.1.2279: computation of highlight attributes is too complicated
patch 8.1.2278: using "cd" with "exe" may fail
patch 8.1.2277: terminal window is not updated when info popup changes
patch 8.1.2276: MS-Windows: session test leaves files behind
patch 8.1.2275: using "seesion" looks like a mistake
patch 8.1.2274: newlines in 'balloonexpr' result only work in the GUI
patch 8.1.2273: wrong default when "pos" is changed with popup_atcursor()
patch 8.1.2272: test may hang at more prompt
patch 8.1.2271: build error if FEAT_TAG_BINS is not defined
patch 8.1.2270: "gf" is not tested in Visual mode
patch 8.1.2269: tags file with very long line stops using binary search
patch 8.1.2268: spell file flag zero is not recognized
patch 8.1.2267: compiler warning for uninitialized variable
patch 8.1.2266: position unknown for a mouse click in a popup window
patch 8.1.2265: when popup with "botleft" does not fit it flips incorrectly
patch 8.1.2264: there are two test files for :let
patch 8.1.2263: 'noesckeys' test fails in GUI
patch 8.1.2262: unpack assignment in function not recognized
patch 8.1.2261: with modifyOtherKeys set 'noesckeys' doesn't work
patch 8.1.2260: terminal test may fail on MS-Windows
patch 8.1.2259: running tests may leave XfakeHOME behind
patch 8.1.2258: may get hit-enter prompt after entering a number
patch 8.1.2257: MS-Windows GUI: scroll wheel always uses current window
patch 8.1.2256: test for ":term ++shell" fails on MS-Windows
patch 8.1.2255: ":term ++shell" does not work on MS-Windows
patch 8.1.2254: MS-Windows: mouse scroll wheel doesn't work in popup
patch 8.1.2253: using "which" to check for an executable is not reliable
patch 8.1.2252: compiler warning for int size
patch 8.1.2251: ":term command" may not work without a shell
patch 8.1.2250: CTRL-U and CTRL-D don't work in popup window
patch 8.1.2249: "make vimtags" does not print any message
patch 8.1.2248: CTRL-W dot does not work when modifyOtherKeys is enabled
patch 8.1.2247: "make vimtags" does not work in runtime/doc
patch 8.1.2246: some tests are still in old style
patch 8.1.2245: third character of 'listchars' tab shows in wrong place
patch 8.1.2244: 'wrapscan' is not used for "gn"
patch 8.1.2243: typos in comments
patch 8.1.2242: creating docs tags uses user preferences
patch 8.1.2241: match highlight does not combine with 'wincolor'
patch 8.1.2240: popup window width changes when scrolling
patch 8.1.2239: CI fails when running tests without building Vim
Update runtime files.
patch 8.1.2238: error in docs tags goes unnoticed
patch 8.1.2237: mode() result depends on whether CURSOR_SHAPE is defined
patch 8.1.2236: ml_get error if pattern matches beyond last line
patch 8.1.2235: "C" with 'virtualedit' set does not include multi-byte char
patch 8.1.2234: get_short_pathname() fails depending on encoding
patch 8.1.2233: cannot get the Vim command line arguments
patch 8.1.2231: not easy to move to the middle of a text line
patch 8.1.2230: MS-Windows: testing external commands can be improved
patch 8.1.2229: cannot color number column above/below cursor differently
patch 8.1.2228: screenpos() returns wrong values when 'number' is set
patch 8.1.2227: layout wrong if 'lines' changes while cmdline window is open
patch 8.1.2226: cannot use system copy/paste in non-xterm terminals
patch 8.1.2225: the "last used" info of a buffer is under used
patch 8.1.2224: cannot build Amiga version
patch 8.1.2223: cannot see what buffer an ml_get error is for
patch 8.1.2222: accessing invalid memory
Update runtime files
patch 8.1.2221: cannot filter :disp output
patch 8.1.2220: :cfile does not abort like other quickfix commands
patch 8.1.2219: no autocommand for open window with terminal
patch 8.1.2218: "gN" is off by one in Visual mode
patch 8.1.2217: compiler warning for unused variable
patch 8.1.2216: text property in wrong place after :substitute
patch 8.1.2215: unreachable code in adjusting text prop columns
patch 8.1.2214: too much is redrawn when 'cursorline' is set
patch 8.1.2213: popup_textprop tests fail
patch 8.1.2212: cannot see the selection type in :reg output
patch 8.1.2211: listener callback "added" argument is not the total
patch 8.1.2210: using negative offset for popup_create() does not work
patch 8.1.2209: LF in escape codes may be expanded to CR-LF
patch 8.1.2208: Unix: Tabs in output might be expanded to spaces
patch 8.1.2207: "gn" doesn't work quite right
patch 8.1.2206: no test for fixed issue #3893
patch 8.1.2205: sign entry structure has confusing name
patch 8.1.2204: crash on exit when closing terminals
patch 8.1.2203: running libvterm tests without the +terminal feature
patch 8.1.2202: MS-Windows: build failure with GUI and small features
patch 8.1.2201: cannot build with dynamically linked Python 3.8
patch 8.1.2200: crash when memory allocation fails
patch 8.1.2199: build failure when using normal features without GUI
patch 8.1.2198: crash when using :center in autocommand
patch 8.1.2197: ExitPre autocommand may cause accessing freed memory
patch 8.1.2196: MS-Windows: running tests with MSVC lacks updates
patch 8.1.2195: Vim does not exit when the terminal window is last window
patch 8.1.2194: modifyOtherKeys is not enabled by default
patch 8.1.2193: popup_setoptions(popup_getoptions()) does not work
patch 8.1.2192: cannot easily fill the info popup asynchronously
patch 8.1.2191: when using modifyOtherKeys CTRL-X mode may not work
patch 8.1.2190: syntax test fails on Mac
patch 8.1.2189: syntax highlighting wrong for tab
patch 8.1.2188: build error for missing define
patch 8.1.2187: error for bad regexp even though regexp is not used
patch 8.1.2186: error for bad regexp even though regexp is not used
patch 8.1.2185: syntax test fails
patch 8.1.2184: option context is not copied when splitting a window
patch 8.1.2183: running a test is a bit verbose
patch 8.1.2182: test42 seen as binary by git diff
patch 8.1.2181: highlighting wrong when item follows tab
patch 8.1.2180: Error E303 is not useful when 'directory' is empty
patch 8.1.2179: pressing "q" at the more prompt doesn't stop Python output
patch 8.1.2178: accessing uninitialized memory in test
patch 8.1.2177: Dart files are not recognized
patch 8.1.2176: syntax attributes not combined with Visual highlighting
patch 8.1.2175: meson files are not recognized
patch 8.1.2174: screen not recognized as supporting "sgr" mouse codes
patch 8.1.2173: searchit() has too many arguments
patch 8.1.2172: spell highlight is wrong at start of the line
patch 8.1.2171: mouse support not always available
patch 8.1.2170: cannot build without the +termresponse feature
patch 8.1.2169: terminal flags are never reset
patch 8.1.2168: heredoc assignment not skipped in if block
patch 8.1.2167: mapping test fails on MS-Windows
patch 8.1.2166: rubyeval() not tested as a method
Update runtime files.
patch 8.1.2165: mapping test fails on Mac
patch 8.1.2164: stuck when using "j" in a popupwin with popup_filter_menu
patch 8.1.2163: cannot build with +spell but without +syntax
patch 8.1.2162: popup resize test is flaky
patch 8.1.2161: mapping test fails
patch 8.1.2160: cannot build with +syntax but without +terminal
patch 8.1.2159: some mappings are listed twice
patch 8.1.2158: terminal attributes missing in Terminal-normal mode
patch 8.1.2157: libvterm source files missing from distribution
patch 8.1.2156: first character after Tab is not highlighted
patch 8.1.2155: in a terminal window 'cursorlineopt' does not work properly
patch 8.1.2154: quickfix window height wrong when there is a tabline
patch 8.1.2153: combining text property and syntax highlight is wrong
patch 8.1.2152: problems navigating tags file on MacOS Catalina
patch 8.1.2151: state test is a bit flaky
patch 8.1.2150: no test for 'ttymouse' set from xterm version response
patch 8.1.2149: crash when running out of memory very early
patch 8.1.2148: no test for right click extending Visual area
patch 8.1.2147: crash when allocating memory fails
patch 8.1.2146: build failure
patch 8.1.2145: cannot map <C-H> when modifyOtherKeys is enabled
patch 8.1.2144: side effects when using t_ti to enable modifyOtherKeys
patch 8.1.2143: cannot see each command even when 'verbose' is set
patch 8.1.2142: some key mappings do not work with modifyOtherKeys
patch 8.1.2141: :tselect has an extra hit-enter prompt
patch 8.1.2140: "gk" and "gj" do not work correctly in number column
patch 8.1.2139: the modifyOtherKeys codes are not tested
patch 8.1.2138: including the build number in the Win32 binary is confusing
patch 8.1.2137: parsing the termresponse is not tested
patch 8.1.2136: using freed memory with autocmd from fuzzer
patch 8.1.2135: with modifyOtherKeys Alt-a does not work properly
patch 8.1.2134: modifier keys are not always recognized
patch 8.1.2133: some tests fail when run as root
patch 8.1.2132: MS-Windows: screen mess when not recognizing insider build
patch 8.1.2131: MSVC tests fail
patch 8.1.2130: MSVC build fails
patch 8.1.2129: using hard coded executable path in test
patch 8.1.2128: renamed libvterm sources makes merging difficult
patch 8.1.2127: the indent.c file is a bit big
patch 8.1.2126: viminfo not sufficiently tested
patch 8.1.2125: fnamemodify() fails when repeating :e
patch 8.1.2124: ruler is not updated if win_execute() moves cursor
patch 8.1.2123: parsing CSI sequence is messy
patch 8.1.2122: cannot build without terminal feature
patch 8.1.2121: mode is not updated when switching to terminal
patch 8.1.2120: some MB_ macros are more complicated than necessary
patch 8.1.2119: memory access error for empty string
patch 8.1.2118: termcodes test fails when $TERM is "dumb"
patch 8.1.2117: CursorLine highlight used while 'cursorline' is off
patch 8.1.2116: no check for out of memory
patch 8.1.2115: MS-Windows: shell commands fail if &shell contains a space
patch 8.1.2114: when a popup is closed with CTRL-C the callback aborts
patch 8.1.2113: ":help expr-!~?" only works after searching
patch 8.1.2112: build number for ConPTY is outdated
patch 8.1.2111: viminfo file not sufficiently tested
patch 8.1.2110: CTRL-C closes two popups instead of one
patch 8.1.2109: popup_getoptions() hangs with tab-local popup
patch 8.1.2108: cannot close the cmdline window from CmdWinEnter
patch 8.1.2107: various memory leaks reported by asan
patch 8.1.2106: no tests for dragging the mouse beyond the window
patch 8.1.2105: MS-Windows: system() may crash
patch 8.1.2104: the normal.c file is too big
patch 8.1.2103: wrong error message if "termdebugger" is not executable
patch 8.1.2102: can't build with GTK and FEAT_GUI_GNOME
patch 8.1.2101: write_session_file() often defined but not used
patch 8.1.2100: :mksession is not sufficiently tested
patch 8.1.2099: state() test fails on some Mac systems
patch 8.1.2098: mksession test fails on MS-Windows
patch 8.1.2097: :mksession is not sufficiently tested
patch 8.1.2096: too many #ifdefs
patch 8.1.2095: leaking memory when getting item from dict
patch 8.1.2094: the fileio.c file is too big
patch 8.1.2093: MS-Windows: system() test fails
patch 8.1.2092: MS-Windows: redirect in system() does not work
patch 8.1.2091: double free when memory allocation fails
patch 8.1.2090: not clear why channel log file ends
patch 8.1.2089: do not get a hint that $TEST_FILTER was active
patch 8.1.2088: renamed libvterm mouse.c file not in distributed file list
Update runtime files.
patch 8.1.2087: cannot easily select one test function to execute
patch 8.1.2086: missing a few changes for the renamed files
patch 8.1.2085: MS-Windows: draw error moving cursor over double-cell char
patch 8.1.2084: Amiga: cannot get the user name
patch 8.1.2083: multi-byte chars do not work properly with "%.*S" in printf()
patch 8.1.2082: some files have a weird name to fit in 8.3 characters
patch 8.1.2081: the spell.c file is too big
patch 8.1.2080: the terminal API is limited and can't be disabled
patch 8.1.2079: popup window test fails without +terminal
patch 8.1.2078: build error with +textprop but without +terminal
patch 8.1.2077: the ops.c file is too big
patch 8.1.2076: crash when trying to put a terminal in a popup window
patch 8.1.2075: get many log messages when waiting for a typed character
patch 8.1.2074: test for SafeState autocommand is a bit flaky
patch 8.1.2073: when editing a buffer 'colorcolumn' may not work
patch 8.1.2072: "gk" moves to start of line instead of upwards
patch 8.1.2071: when 'wincolor' is set text property changes highlighting
patch 8.1.2070: mouse code is spread out
patch 8.1.2069: test for SafeStateAgain may still fail
patch 8.1.2068: test for SafeState and SafeStateAgain may fail
patch 8.1.2067: no tests for SafeState and SafeStateAgain
patch 8.1.2066: no tests for state()
patch 8.1.2065: compiler warning building non-GUI with MinGW.
patch 8.1.2064: MS-Windows: compiler warnings for unused arguments
patch 8.1.2063: some tests fail when +balloon_eval_term is missing
patch 8.1.2062: the mouse code is spread out
patch 8.1.2061: MS-Windows GUI: ":sh" crashes when trying to use a terminal
patch 8.1.2060: "precedes" in 'listchars' not used properly
Updte runtime files
patch 8.1.2059: fix for "x" deleting a fold has side effects
patch 8.1.2058: function for ex command is named inconsistently
patch 8.1.2057: the screen.c file is much too big
patch 8.1.2056: "make test" for indent files doesn't cause make to fail
patch 8.1.2055: not easy to jump to function line from profile
patch 8.1.2054: compiler test for Perl may fail
patch 8.1.2053: SafeStateAgain not triggered if callback uses feedkeys()
patch 8.1.2052: using "x" before a closed fold may delete that fold
patch 8.1.2051: double-click test is a bit flaky
patch 8.1.2050: popup window test fails in some configurations
patch 8.1.2049: cannot build tiny version
patch 8.1.2048: not clear why SafeState and SafeStateAgain are not triggered
patch 8.1.2047: cannot check the current state
patch 8.1.2046: SafeState may be triggered at the wrong moment
patch 8.1.2045: the option.c file is too big
patch 8.1.2044: no easy way to process postponed work
patch 8.1.2043: not sufficient testing for quoted numbers
patch 8.1.2042: the evalfunc.c file is too big
patch 8.1.2041: no test for diff mode with syntax highlighting
patch 8.1.2040: no highlighting of current line in quickfix window
patch 8.1.2039: character from 'showbreak' does not use 'wincolor'
patch 8.1.2038: has('vimscript-4') is always 0
patch 8.1.2037: can call win_gotoid() in cmdline window
patch 8.1.2036: the str2nr() tests fail
patch 8.1.2035: recognizing octal numbers is confusing
patch 8.1.2034: dark them of GTK 3 not supported
patch 8.1.2033: cannot build with tiny features
patch 8.1.2032: scrollbar thumb wrong in popup window
patch 8.1.2031: cursor position wrong when resizing and using conceal
patch 8.1.2030: tests fail when build with normal features and terminal
patch 8.1.2029: cannot control 'cursorline' highlighting well
patch 8.1.2028: options test script does not work
patch 8.1.2027: MS-Windows: problem with ambiwidth characters
patch 8.1.2026: possibly using uninitialized memory
patch 8.1.2025: MS-Windows: Including shlguid.h causes problems for msys2
patch 8.1.2024: delete call commented out for debugging
patch 8.1.2023: no test for synIDattr() returning "strikethrough"
patch 8.1.2022: the option.c file is too big
Update runtime files
patch 8.1.2021: some global functions can be local to the file
patch 8.1.2020: it is not easy to change the window layout
patch 8.1.2019: 'cursorline' always highlights the whole line
patch 8.1.2018: using freed memory when out of memory and displaying message
patch 8.1.2017: cannot execute commands after closing the cmdline window
patch 8.1.2016: terminal altscreen test now fails on MS-Windows
patch 8.1.2015: terminal altscreen test still fails sometimes
patch 8.1.2014: terminal altscreen test fails sometimes
patch 8.1.2013: more functions can be used as methods
patch 8.1.2012: more functions can be used as methods
patch 8.1.2011: more functions can be used as methods
patch 8.1.2010: new file uses old style comments
patch 8.1.2009: cursorline highlighting not updated in popup window
patch 8.1.2008: error for invalid range when using listener and undo
patch 8.1.2007: no test for what 8.1.1926 fixes
patch 8.1.2006: build failure with huge features but without channel feature
patch 8.1.2005: the regexp.c file is too big
patch 8.1.2004: more functions can be used as methods
Update runtime files
patch 8.1.2003: MS-Windows: code page 65001 is not recognized
patch 8.1.2002: version number 2000 missing
patch 8.1.2001: some source files are too big
patch 8.1.2000: plugin cannot get the current IME status
patch 8.1.1999: calling both PlaySoundW() and PlaySoundA()
patch 8.1.1998: redraw even when no popup window filter was invoked
patch 8.1.1997: no redraw after a popup window filter is invoked
patch 8.1.1996: more functions can be used as methods
patch 8.1.1995: more functions can be used as methods
patch 8.1.1994: MS-Windows: cannot build with eval but without cscope
patch 8.1.1993: more functions can be used as methods
patch 8.1.1992: the search stat moves when wrapping at the end of the buffer
patch 8.1.1991: still cannot build with eval but without cscope
patch 8.1.1990: cannot build with eval but without cscope
patch 8.1.1989: the evalfunc.c file is still too big
patch 8.1.1988: :startinsert! does not work the same way as "A"
patch 8.1.1987: more functions can be used as methods
patch 8.1.1986: more functions can be used as methods
patch 8.1.1985: code for dealing with paths is spread out
patch 8.1.1984: more functions can be used as methods
patch 8.1.1983: compiler nags for uninitialized variable and unused function
patch 8.1.1982: more functions can be used as methods
patch 8.1.1981: the evalfunc.c file is too big
patch 8.1.1980: fix for search stat not tested
patch 8.1.1979: code for handling file names is spread out
patch 8.1.1978: the eval.c file is too big
patch 8.1.1977: terminal debugger plugin may hang
patch 8.1.1976: Travis log always shows test output
patch 8.1.1975: MS-Windows GUI responds slowly to timer
patch 8.1.1974: Coverity warns for using pointer as array
patch 8.1.1973: cannot build without the quickfix feature
patch 8.1.1972: no proper test for getchar()
patch 8.1.1971: manually enabling features causes build errors
patch 8.1.1970: search stat space wrong, no test for 8.1.1965
patch 8.1.1969: popup window filter is used in all modes
patch 8.1.1968: crash when using nested map()
patch 8.1.1967: line() only works for the current window
patch 8.1.1966: some code in options.c fits better elsewhere
patch 8.1.1965: search count message is not displayed when using a mapping
patch 8.1.1964: crash when using nested map() and filter()
patch 8.1.1963: popup window filter may be called recursively
patch 8.1.1962: leaking memory when using tagfunc()
patch 8.1.1961: more functions can be used as a method
patch 8.1.1960: fold code is spread out
patch 8.1.1959: when using "firstline" in popup window text may jump
patch 8.1.1958: old style comments taking up space
patch 8.1.1957: more code can be moved to evalvars.c
patch 8.1.1956: screenshot tests may use a different encoding
patch 8.1.1955: tests contain typos
patch 8.1.1954: more functions can be used as a method
patch 8.1.1953: more functions can be used as a method
patch 8.1.1952: more functions can be used as a method
patch 8.1.1951: mouse double click test is a bit flaky
Runtime files update.
patch 8.1.1950: using NULL pointer after an out-of-memory
patch 8.1.1949: cannot scroll a popup window to the very bottom
patch 8.1.1948: mouse doesn't work in Linux console
patch 8.1.1947: when executing one test the report doesn't show it
patch 8.1.1946: memory error when profiling a function without a script ID
patch 8.1.1945: popup window "firstline" cannot be reset
patch 8.1.1944: leaking memory when using sound callback
patch 8.1.1943: more code can be moved to evalvars.c
patch 8.1.1942: shadow directory gets outdated when files are added
patch 8.1.1941: getftype() test fails on Mac
patch 8.1.1940: script tests fail
patch 8.1.1939: code for handling v: variables in generic eval file
patch 8.1.1938: may crash when out of memory
patch 8.1.1937: errors when using javascriptreact
patch 8.1.1936: not enough tests for text property popup window
patch 8.1.1935: test for text property popup window is flaky
patch 8.1.1934: not enough tests for text property popup window
patch 8.1.1933: the eval.c file is too big
patch 8.1.1932: ml_get errors after using append()
patch 8.1.1931: syntax test fails
patch 8.1.1930: cannot recognize .jsx and .tsx files
patch 8.1.1929: no tests for text property popup window
patch 8.1.1928: popup windows don't move with the text when making changes
patch 8.1.1927: code for dealing with script files is spread out
patch 8.1.1926: cursorline not redrawn when putting a line above the cursor
patch 8.1.1925: more functions can be used as methods
patch 8.1.1924: using empty string for current buffer is unexpected
patch 8.1.1923: some source files are not in a normal encoding
patch 8.1.1922: in diff mode global operations can be very slow
patch 8.1.1921: more functions can be used as methods
patch 8.1.1920: cannot always close a popup when filter consumes all events
patch 8.1.1919: using window options when passing a buffer to popup_create()
patch 8.1.1918: redrawing popups is inefficient
patch 8.1.1917: non-current window is not redrawn when moving popup
patch 8.1.1916: trying to allocate negative amount of memory closing popup
patch 8.1.1915: more functions can be used as methods
patch 8.1.1914: command line expansion code is spread out
patch 8.1.1913: not easy to compute the space on the command line
patch 8.1.1912: more functions can be used as methods
patch 8.1.1911: more functions can be used as methods
patch 8.1.1910: redrawing too much when toggling 'relativenumber'
patch 8.1.1909: more functions can be used as methods
patch 8.1.1908: every popup window consumes a buffer number
patch 8.1.1907: wrong position for info popup with scrollbar on the left
patch 8.1.1906: info popup size is sometimes incorrect
patch 8.1.1905: cannot set all properties of the info popup
patch 8.1.1904: cannot have an info popup align with the popup menu
patch 8.1.1903: cannot build without the +eval feature
patch 8.1.1902: cannot have an info popup without a border
patch 8.1.1901: the +insert_expand feature is not always available
patch 8.1.1900: sign test fails in the GUI
patch 8.1.1899: sign_place() does not work as documented
patch 8.1.1898: crash when out of memory during startup
patch 8.1.1897: may free memory twice when out of memory
patch 8.1.1896: compiler warning for unused variable
patch 8.1.1895: using NULL pointer when out of memory
patch 8.1.1894: not checking for out-of-memory of autoload_name()
patch 8.1.1893: script to summarize test results can be improved
patch 8.1.1892: missing index entry and option menu for 'completepopup'
patch 8.1.1891: functions used in one file are global
patch 8.1.1890: ml_get error when deleting fold marker
patch 8.1.1889: Coverity warns for using a NULL pointer
patch 8.1.1888: more functions can be used as methods
patch 8.1.1887: the +cmdline_compl feature is not in the tiny version
patch 8.1.1886: command line expansion code is spread out
patch 8.1.1885: comments in libvterm are inconsistent
patch 8.1.1884: cannot use mouse scroll wheel in popup in Insert mode
patch 8.1.1883: options test fails
patch 8.1.1882: cannot specify properties of the info popup window
patch 8.1.1881: popup window test fails in some configurations
patch 8.1.1880: cannot show extra info for completion in a popup window
patch 8.1.1879: more functions can be used as methods
patch 8.1.1878: negative float before method not parsed correctly
patch 8.1.1877: graduated features scattered
patch 8.1.1876: proto file missing from distribution
Update runtime files.
patch 8.1.1875: cannot get size and position of the popup menu
patch 8.1.1874: modeless selection in popup window overlaps scrollbar
patch 8.1.1873: cannot build tiny version
patch 8.1.1872: when Vim exits because of a signal, VimLeave is not triggered
patch 8.1.1871: modeless selection in GUI still not correct
patch 8.1.1870: using :pedit from a help file sets help filetype
patch 8.1.1869: code for the argument list is spread out
patch 8.1.1868: multi-byte chars in 'listchars' fail with 'linebreak' set
patch 8.1.1867: still a timer test that is flaky on Mac
patch 8.1.1866: modeless selection in GUI does not work properly
patch 8.1.1865: spellrare and spellrepall in the wrong order
patch 8.1.1864: still a timer test that is flaky on Mac
patch 8.1.1863: confusing error when using a builtin function as method
patch 8.1.1862: Coverity warns for not using return value
patch 8.1.1861: only some assert functions can be used as a method
patch 8.1.1860: map timeout test is flaky
patch 8.1.1859: timer test sometimes fails on Mac
patch 8.1.1858: test for multi-byte mapping fails on some systems
patch 8.1.1857: cannot use modifier with multi-byte character
patch 8.1.1856: popup preview test fails sometimes
patch 8.1.1855: another failing timer test
patch 8.1.1854: now another timer test is flaky
patch 8.1.1853: timers test is still flaky
patch 8.1.1852: timers test is flaky
patch 8.1.1851: crash when sound_playfile() callback plays sound
patch 8.1.1850: focus may remain in popup window
patch 8.1.1849
patch 8.1.1848: 'langmap' is not used for CTRL-W command in terminal
patch 8.1.1847: suspend test is failing
patch 8.1.1846: inconsistently using GetVimCommand() and v:progpath
patch 8.1.1845: may use NULL pointer when running out of memory
patch 8.1.1844: buffer no longer unloaded when adding text properties
patch 8.1.1843: might be freeing memory that was not allocated
patch 8.1.1842: test listed as flaky should no longer be flaky
patch 8.1.1841: no test for Ex shift commands
patch 8.1.1840: Testing: WorkingClipboard() is not accurate
patch 8.1.1839: insufficient info when test fails because of screen size
patch 8.1.1838: there is :spellwrong and :spellgood but not :spellrare
patch 8.1.1837: popup test fails if clipboard is supported but not working
patch 8.1.1836: inaccurate memory estimate for Amiga-like OS
patch 8.1.1835: cannot use printf() as a method
patch 8.1.1834: cannot use a lambda as a method
patch 8.1.1833: allocating a bit too much when there is no bad word.
patch 8.1.1832: win_execute() does not work in other tab
patch 8.1.1831: confusing skipped message
Update runtime files.
patch 8.1.1830: Travis does not report error when tests fail
patch 8.1.1829: difference in screenshots
patch 8.1.1828: not strict enough checking syntax of method invocation
patch 8.1.1827: allocating more memory than needed for extended structs
patch 8.1.1826: tests use hand coded feature and option checks
patch 8.1.1825: allocating more memory than needed for extended structs
patch 8.1.1824: crash when correctly spelled word is very long
patch 8.1.1823: command line history code is spread out
patch 8.1.1822: confusing error message when range is not allowed
patch 8.1.1821: no test for wrong number of method arguments
patch 8.1.1820: using expr->FuncRef() does not work
patch 8.1.1819: :pedit does not work with a popup preview window
patch 8.1.1818: unused variable
patch 8.1.1817: github contribution text is incomplete
patch 8.1.1816: cannot use a user defined function as a method
patch 8.1.1815: duplicating info for internal functions
patch 8.1.1814: a long title in a popup window overflows
patch 8.1.1813: ATTENTION prompt for a preview popup window
patch 8.1.1812: reading a truncted undo file hangs Vim
patch 8.1.1811: popup window color cannot be set to "Normal"
patch 8.1.1810: popup_getoptions() is missing an entry for "mapping"
patch 8.1.1809: more functions can be used as a method
patch 8.1.1808: build failure for tiny version
patch 8.1.1807: more functions can be used as a method
patch 8.1.1806: test for display updating doesn't check without statusline
patch 8.1.1805: au_did_filetype is declared twice
patch 8.1.1804: no test for display updating without a scroll region
patch 8.1.1803: all builtin functions are global
patch 8.1.1802: missing change to call_callback()
patch 8.1.1801: cannot build without the +eval feature
patch 8.1.1800: function call functions have too many arguments
patch 8.1.1799: cannot avoid mapping for a popup window
patch 8.1.1798: warning for unused variable in tiny version
patch 8.1.1797: the vgetorpeek() function is too long
patch 8.1.1796: :argdo is not tested
patch 8.1.1795: no syntax HL after splitting windows with :bufdo
patch 8.1.1794: tests are flaky
patch 8.1.1793: mixed comment style in globals
patch 8.1.1792: the vgetorpeek() function is too long
patch 8.1.1791: 'completeslash' also applies to globpath()
patch 8.1.1790: :mkvimrc is not tested
patch 8.1.1789: cannot see file name of preview popup window
patch 8.1.1788: missing changes in proto file
patch 8.1.1787: cannot resize a popup window
patch 8.1.1786: double click in popup scrollbar starts selection
patch 8.1.1785: map functionality mixed with character input
patch 8.1.1784: MS-Windows: resolve() does not work if serial nr duplicated
patch 8.1.1783: MS-Windows: compiler test may fail when using %:S
Update runtime files.
patch 8.1.1782: MS-Windows: system() has temp file error with 'noshelltemp'
patch 8.1.1781: Amiga: no builtin OS readable version info
patch 8.1.1780: warning for file no longer available is repeated
patch 8.1.1779: not showing the popup window right border is confusing
patch 8.1.1778: not showing the popup window right border is confusing
patch 8.1.1777: useless checks for job feature in channel test
patch 8.1.1776: text added with a job isn't displayed
patch 8.1.1775: error message may be empty in filetype test
patch 8.1.1774: test is silently skipped
patch 8.1.1773: the preview popup window may be too far to the right
patch 8.1.1772: options test still fails on MS-Windows
patch 8.1.1771: options test fails on MS-Windows
patch 8.1.1770: cannot get the window ID of the popup preview window
patch 8.1.1769: 'shellslash' is also used for completion
patch 8.1.1768: man plugin changes setting in current window
patch 8.1.1767: FEAT_SESSION defined separately
undo extra changes in src/Makefile
patch 8.1.1766: code for writing session file is spread out
patch 8.1.1765: get(func, dict, def) does not work properly
patch 8.1.1764: ":browse oldfiles" is not tested
patch 8.1.1763: evalfunc.c is still too big
patch 8.1.1762: some filetype rules are in the wrong place
patch 8.1.1761: filetype "vuejs" causes problems for some users
patch 8.1.1760: extra line break for wrapping output of :args
patch 8.1.1759: no mode char for terminal mapping from maparg()
patch 8.1.1758: count of g$ not used correctly when text is not wrapped
patch 8.1.1757: text added with appendbufline() isn't displayed
patch 8.1.1756: autocommand that splits window messes up window layout
patch 8.1.1755: leaking memory when using a popup window mask
patch 8.1.1754: build failure
patch 8.1.1753: use of popup window mask is inefficient
patch 8.1.1752: resizing hashtable is inefficient
patch 8.1.1751: when redrawing popups plines_win() may be called often
patch 8.1.1750: depending on the terminal width :version may miss a line break
patch 8.1.1749: Coverity warns for using negative index
patch 8.1.1748: :args output is not aligned
patch 8.1.1747: compiler warning for unused variables
patch 8.1.1746: ":dl" is seen as ":dlist" instead of ":delete"
patch 8.1.1745: compiler warning for unused argument
patch 8.1.1744: build error without the conceal feature
patch 8.1.1743: 'hlsearch' and match highlighting in the wrong place
patch 8.1.1742: still some match functions in evalfunc.c
patch 8.1.1741: cleared/added match highlighting not updated in other window
patch 8.1.1740: exepath() doesn't work for "bin/cat"
patch 8.1.1739: deleted match highlighting not updated in other window
patch 8.1.1738: testing lambda with timer is slow
patch 8.1.1737: :args command that outputs one line gives more prompt
patch 8.1.1736: viminfo support is spread out
patch 8.1.1735: can't build with tiny features
patch 8.1.1734: the evalfunc.c file is too big
patch 8.1.1733: the man ftplugin leaves an empty buffer behind
patch 8.1.1732: completion in cmdwin does not work for buffer-local commands
patch 8.1.1731: command line history not read from viminfo on startup
patch 8.1.1730: wrong place for mark viminfo support
patch 8.1.1729: heredoc with trim not properly handled in function
patch 8.1.1728: wrong place for command line history viminfo support
patch 8.1.1727: code for viminfo support is spread out
patch 8.1.1726: the eval.txt help file is too big
patch 8.1.1725: MS-Windows: E325 message may use incorrect date format
patch 8.1.1724: too much overhead checking for CTRL-C while processing text
patch 8.1.1723: heredoc assignment has no room for new features
patch 8.1.1722: error when scriptversion is 2 a making a dictionary access
patch 8.1.1721: build failure with normal features without netbeans interface
patch 8.1.1720: crash with very long %[] pattern
patch 8.1.1719: popup too wide when 'showbreak' is set
patch 8.1.1718: popup menu highlighting does not look good
patch 8.1.1717: last char in menu popup window highlighted
patch 8.1.1716: old style comments are wasting space
patch 8.1.1715: emoji characters are seen as word characters for spelling
Update runtime files
patch 8.1.1714: cannot preview a file in a popup window
patch 8.1.1713: highlighting cursor line only works with popup_menu()
patch 8.1.1712: signs in number column cause text to be misaligned
patch 8.1.1711: listener callback called at the wrong moment
patch 8.1.1710: Coverity found dead code
patch 8.1.1709: Coverity warns for possibly using a NULL pointer
patch 8.1.1708: Coverity warns for using uninitialized variable
patch 8.1.1707: Coverity warns for possibly using a NULL pointer
patch 8.1.1706: typo in #ifdef
patch 8.1.1705: using ~{} for a literal dict is not nice
patch 8.1.1704: C-R C-W does not work after C-G when using 'incsearch'
patch 8.1.1703: breaking out of loop by checking window pointer insufficient
patch 8.1.1702: compiler warning for uninitialized variable
patch 8.1.1701: Appveyor build with MSVC fails puts progress bar in log
patch 8.1.1700: listener callback called for the wrong buffer
patch 8.1.1699: highlight_ga can be local instead of global
patch 8.1.1698: Appveyor build with MSVC fails
patch 8.1.1697: cannot build with MSVC
patch 8.1.1696: MSVC: link command line is too long
patch 8.1.1695: Windows 10: crash when cursor is at bottom of terminal
patch 8.1.1694: the RUN_VIM variable is longer than needed
patch 8.1.1693: syntax coloring and highlighting is in one big file
patch 8.1.1692: using *{} for literal dict is not backwards compatible
patch 8.1.1691: diff test fails on some systems
patch 8.1.1690: default padding for popup window menu is too much
patch 8.1.1689: profiling code is spread out
patch 8.1.1688: old makefiles are no longer useful
patch 8.1.1687: the evalfunc.c file is too big
patch 8.1.1686: "*" of "*{" is recognized as multipy operator
patch 8.1.1685: missing file in distributed file list
Update runtime files
patch 8.1.1684: profiling functionality is spread out
patch 8.1.1683: dictionary with string keys is longer than needed
patch 8.1.1682: placing a larger number of signs is slow
patch 8.1.1681: insert stray "{" when listener gets buffer line
patch 8.1.1680: the command table is not well aligned
patch 8.1.1679: test using SwapExists autocommand file may fail
patch 8.1.1678: using popup_menu() does not scroll to show the selected line
patch 8.1.1677: tests get stuck when running into an existing swapfile
patch 8.1.1676: "maxwidth" of popup window does not always work properly
patch 8.1.1675: listener list not correctly updated on listener_remove()
patch 8.1.1674: script to check a colorscheme can be improved
patch 8.1.1673: cannot easily find the popup window at a certain position
patch 8.1.1672: "make cmdidxs" doesn't work
patch 8.1.1671: copying a blob may result in it being locked
patch 8.1.1670: sign column not always properly aligned
patch 8.1.1669: Travis: test results section is closed even when failed
patch 8.1.1668: popup window test is a bit flaky on some systems
patch 8.1.1667: flags for Ex commands may clash with other symbols
patch 8.1.1666: click in popup window scrollbar with border doesn't scroll
patch 8.1.1665: crash when popup window with mask is below the screen
patch 8.1.1664: GUI resize may cause changing Rows at a bad time
patch 8.1.1663: compiler warning for using size_t
patch 8.1.1662: cannot build uninstal.exe with some version of MinGW
patch 8.1.1661: cannot build with +textprop but without +balloon_eval
patch 8.1.1660: assert_fails() does not fail inside try/catch
patch 8.1.1659: popup window "mousemoved" values not correct
patch 8.1.1658: debug statements included in patch
patch 8.1.1657: Terminal: screen updates from 'balloonexpr' are not displayed
patch 8.1.1656: popup window width is wrong when using Tabs
patch 8.1.1655: popup window border drawn wrong with multi-byte char
patch 8.1.1654: GUI: screen updates from 'balloonexpr' are not displayed
patch 8.1.1653: ubsan warns for possibly passing NULL pointer
patch 8.1.1652: GUI: popup window doesn't close on mouse movement
patch 8.1.1651: suspend test is flaky on some systems
patch 8.1.1650: warning for using uninitialized variable
patch 8.1.1649: Illegal memory access when closing popup window
patch 8.1.1648: MS-Windows: build error with normal feaures
patch 8.1.1647: build error with GTK and hangulinput feature
patch 8.1.1646: build failure
patch 8.1.1645: cannot use a popup window for a balloon
patch 8.1.1644: sound test does not work on Travis
patch 8.1.1643: sign placement is wrong when 'foldcolumn' is set
patch 8.1.1642: may use uninitialized variable
patch 8.1.1641: garbage collection may run at a wrong moment
patch 8.1.1640: the CursorHold autocommand takes down a balloon
patch 8.1.1639: changing an autoload name into a file name is inefficient
patch 8.1.1638: running tests leaves some files behind
patch 8.1.1637: after running tests and clean the XfakeHOME directory remains
patch 8.1.1636: crash when popup has fitting scrollbar
patch 8.1.1635: warnings for unused variables in small version
patch 8.1.1634: terminal test fails when term_getansicolors() is missing
patch 8.1.1633: cannot generate prototypes with X11 but without GUI
patch 8.1.1632: build with EXITFREE but without +arabic fails
patch 8.1.1631: displaying signs is inefficient
patch 8.1.1630: various small problems
Update runtime files
patch 8.1.1629: terminal function help is in the wrong file
patch 8.1.1628: popup window functions not in list of functions
patch 8.1.1627: header file contains mixed comment style
patch 8.1.1626: no test for closing a popup window with a modified buffer
patch 8.1.1625: script line numbers are not exactly right
patch 8.1.1624: when testing in the GUI may try to run gvim in a terminal
patch 8.1.1623: display wrong with signs in narrow number column
patch 8.1.1622: wrong width if displaying a lot of lines in a popup window
patch 8.1.1621: Amiga: time.h included twice
patch 8.1.1620: no test for popup window with border and mask
patch 8.1.1619: tests are not run with GUI on Travis
patch 8.1.1618: Amiga-like systems quickly run out of stack
patch 8.1.1617: no test for popup window with mask and position fixed
patch 8.1.1616: build failure with gcc on Amiga
patch 8.1.1615: crash when passing buffer number to popup_create()
patch 8.1.1614: 'numberwidth' can only go up to 10
patch 8.1.1613: popup window test fails with Athena and Motif
patch 8.1.1612: cannot show an existing buffer in a popup window
patch 8.1.1611: bufadd() reuses existing buffer without a name
patch 8.1.1610: there is no way to add or load a buffer without side effects
patch 8.1.1609: the user cannot easily close a popup window
patch 8.1.1608: the evalfunc.c file is too big
patch 8.1.1608: the evalfunc.c file is too big
patch 8.1.1606: on a narrow screen ":hi" output is confusing
patch 8.1.1605: Vim may delay processing messages on a json channel
patch 8.1.1604: popup window scroll test is flaky
patch 8.1.1603: crash when using unknown highlighting in text property
patch 8.1.1602: popup window cannot overflow on the left or right
patch 8.1.1601: missing changes to popup window test file
patch 8.1.1600: cannot specify highlighting for popup window scrollbar
patch 8.1.1599: compiler warning for uninitialized variable
patch 8.1.1598: update to test file missing
patch 8.1.1597: cannot scroll a popup window with the mouse
patch 8.1.1596: when resizing the screen may draw popup in wrong position
patch 8.1.1595: MS-Windows with VIMDLL: colors wrong in console
patch 8.1.1594: may still start file dialog while exiting
patch 8.1.1593: filetype not detected for C++ header files without extension
patch 8.1.1592: may start file dialog while exiting
patch 8.1.1591: on error garbage collection may free memory in use
patch 8.1.1590: popup window test fails
patch 8.1.1589: popup window does not indicate scroll position
patch 8.1.1588: in :let-heredoc line continuation is recognized
patch 8.1.1587: redraw problem when sign icons in the number column
patch 8.1.1586: error number used in two places
patch 8.1.1585: :let-heredoc does not trim enough
patch 8.1.1584: the evalfunc.c file is getting too big
patch 8.1.1583: set_ref_in_list() only sets ref in items
patch 8.1.1582: cannot build with +textprop but without +timers
patch 8.1.1581: shared functions for testing are disorganised
patch 8.1.1580: cannot make part of a popup transparent
Update runtime files
patch 8.1.1579: dict and list could be GC'ed while displaying error
patch 8.1.1578: MS-Windows: pathdef.c should depend on build options
patch 8.1.1577: command line redrawn for +arabic without Arabic characters
patch 8.1.1576: compiler warning for unused argument
patch 8.1.1575: callbacks may be garbage collected
patch 8.1.1574: tabpage option not yet implemented for popup window
patch 8.1.1573: textprop test fails if screenhots do not work
patch 8.1.1572: compiler warnings with tiny build
patch 8.1.1571: textprop highlight starts too early if just after a tab
patch 8.1.1570: icon signs not displayed properly in the number column
patch 8.1.1569: cannot build with signs but without diff feature
patch 8.1.1568: strftime() test fails on MS-Windows
patch 8.1.1567: localtime_r() does not respond to $TZ changes
patch 8.1.1566: error message when terminal closes in another tab
patch 8.1.1565: MS-Windows: no sound support
patch 8.1.1564: sign column takes up space
patch 8.1.1563: crash when using closures
patch 8.1.1562: popup window not always redrawn after popup_setoptions()
patch 8.1.1561: popup_setoptions() is not implemented yet
patch 8.1.1560: popup window hidden option not implemented yet
patch 8.1.1559: popup window title property not implemented yet
patch 8.1.1558: popup_menu() and popup_filter_menu() are not implemented yet
patch 8.1.1557: compiler warning for unused variables in tiny version
patch 8.1.1556: command for failing screenshot does not include directory
patch 8.1.1555: NOT_IN_POPUP_WINDOW is confusing
patch 8.1.1554: docs and tests for :const can be improved
patch 8.1.1553: not easy to change the text in a popup window
patch 8.1.1552: cursor position is wrong after sign column changes
patch 8.1.1551: warning for shadowing popup_dragwin
patch 8.1.1550: when a popup has left padding text may be cut off
patch 8.1.1549: quickfix test fails
patch 8.1.1548: popup_dialog() is not implemented
patch 8.1.1547: functionality of bt_nofile() is confusing
patch 8.1.1546: in some tests 'tags' is set but not restored
patch 8.1.1545: when the screen is to small there is no message about that
patch 8.1.1544: some balloon tests don't run when they can
patch 8.1.1543: const test fails with small features
patch 8.1.1542: an OptionSet autocommand does not get enough info
patch 8.1.1541: check for ASAN is not reliable
patch 8.1.1540: cannot build without the +eval feature
patch 8.1.1539: not easy to define a variable and lock it
patch 8.1.1538: cannot specify highlighting for notifications
patch 8.1.1537: using "tab" for popup window can be confusing
patch 8.1.1536: popup select test still fails on Mac
patch 8.1.1535: popup select test fails on Mac
patch 8.1.1534: modeless selection in popup window selects too much
patch 8.1.1533: GUI build fails on Mac
patch 8.1.1532: build fails
patch 8.1.1531: clipboard type name is inconsistent
patch 8.1.1530: Travis config is not optimal
patch 8.1.1529: libcanberra is linked with even when not used
patch 8.1.1528: popup_any_visible() is unused
patch 8.1.1527: when moving popup window over the cmdline it is not redrawn
patch 8.1.1526: no numerical value for the patchlevel
patch 8.1.1525: cannot move a popup window with the mouse
patch 8.1.1524: tests are silently skipped
patch 8.1.1523: cannot show range of buffer lines in popup window
patch 8.1.1522: poup_notification() not implemented yet
patch 8.1.1521: when a popup window is closed the buffer remains
patch 8.1.1520: popup windows are ignored when dealing with mouse position
patch 8.1.1519: 'backupskip' may contain duplicates
patch 8.1.1518: crash when setting 'columns' while a popup is visible
Update runtime files
patch 8.1.1517: when a popup changes all windows are redrawn
patch 8.1.1516: time reported for a test measured wrong
patch 8.1.1515: memory leak reported for sound when build with EXITFREE
patch 8.1.1514: MS-Windows: wrong shell command with ! in 'guioptions'
patch 8.1.1513: all popup functionality is in functions, except :popupclear
patch 8.1.1512: ch_evalexpr() hangs when used recursively
patch 8.1.1511: matches in a popup window are not displayed properly
patch 8.1.1510: a plugin cannot easily expand a command like done internally
patch 8.1.1509: cmdline_row can become negative, causing a crash
patch 8.1.1508: sound keeps failing on Travis
patch 8.1.1507: sound test still fails on Travis
patch 8.1.1506: syntax error in Travis config
patch 8.1.1505: running "make clean" twice gives errors
patch 8.1.1504: sound test still fails on Travis
patch 8.1.1503: sound test fails on Travis
patch 8.1.1502: cannot play any sound
patch 8.1.1501: new behavior of b:changedtick not tested
patch 8.1.1500: wrong shell command when building with VIMDLL and "!" in 'go'
patch 8.1.1499: ruler not updated after popup window was removed
patch 8.1.1498: ":write" increments b:changedtick even though nothing changed
patch 8.1.1497: accessing memory beyond allocated space
patch 8.1.1496: popup window height is not recomputed
patch 8.1.1495: memory access error
patch 8.1.1494: build failure
patch 8.1.1493: redrawing with popups is slow and causes flicker
patch 8.1.1492: MS-Windows: when "!" is in 'guioptions' ":!start" fails
patch 8.1.1491: when skipping over code a function call may cause trouble
patch 8.1.1490: when a single test fails the exit code is not set
patch 8.1.1489: sign order wrong when priority was changed
patch 8.1.1488: summary of tests has incorrect failed count
patch 8.1.1487: older msgfmt cannot generate proper .desktop file
patch 8.1.1486: a listener change is merged even when it adds a line
Update runtime files - Add typescript syntax and indent.
patch 8.1.1485: double free when garbage_collect() is used in autocommand
patch 8.1.1484: some tests are slow
patch 8.1.1483: skipped tests are not properly listed
patch 8.1.1482: no test for wincol() depending on the 'number' option
patch 8.1.1481: length for two-digit rgb termresponse is off by one
patch 8.1.1480: desktop file check doesn't run on CI
patch 8.1.1479: change included for debugging only
patch 8.1.1478: still an error when running tests with the tiny version
patch 8.1.1477: test summary fails in the tiny version
patch 8.1.1476: no statistics displayed after running tests
patch 8.1.1475: search string not displayed when 'rightleft' is set
patch 8.1.1474: 'ttybuiltin' is not tested
patch 8.1.1473: new resolve() implementation causes problem for plugins
Update runtime files.
patch 8.1.1472: add_termcap_entry() is not tested
patch 8.1.1471: 'background' not correctly set for 2-digit rgb termresponse
patch 8.1.1470: new Unicode character U32FF missing from double-width table
patch 8.1.1469: no test for checking the cursor style response
patch 8.1.1468: the generated desktop files may be invalid
patch 8.1.1467: cscope test fails
patch 8.1.1466: not updating priority on existing sign
patch 8.1.1465: allocating wrong amount of memory
patch 8.1.1464: only 4-digit rgb termresponse is recognized
patch 8.1.1463: gcc warns for uninitialized variable
patch 8.1.1462: MS-Windows: using special character requires quoting
patch 8.1.1461: tests do not run or are not reliable on some systems
patch 8.1.1460: popup window border characters may be wrong
patch 8.1.1459: popup window border looks bad when 'ambiwidth' is "double"
patch 8.1.1458: crash when using gtags
patch 8.1.1457: cannot reuse a buffer when loading a screen dump
patch 8.1.1456: WinBar not redrawn after scrolling one line
patch 8.1.1455: popup_atcursor() not completely implemented
patch 8.1.1454: build failure without the conceal feature
patch 8.1.1453: popup window "moved" property not implemented yet
patch 8.1.1452: line and col property of popup windows not properly checked
patch 8.1.1451: CTRL-L does not clear screen with a popup window
patch 8.1.1450: popup window positioning wrong when using padding or borders
patch 8.1.1449: popup text truncated at end of screen
patch 8.1.1448: statusline is sometimes drawn on top of popup
patch 8.1.1447: not allowed to create an empty popup
patch 8.1.1446: popup window callback not implemented yet
patch 8.1.1445: popup window border highlight not implemented yet
patch 8.1.1444: not using double line characters for popup border
patch 8.1.1443: popup window padding and border not implemented yet
patch 8.1.1442: popup windows not considered when the Vim window is resized
patch 8.1.1441: popup window filter not yet implemented
patch 8.1.1440: win_execute() test fails
patch 8.1.1439: json_encode() is very slow for large results
patch 8.1.1438: some commands cause trouble in a popup window
patch 8.1.1437: code to handle callbacks is duplicated
Update runtime files.
patch 8.1.1436: writefile test fails when run under /tmp
patch 8.1.1435: memory usage test is a bit too flaky
patch 8.1.1434: test 3 is old style
patch 8.1.1433: win_execute() may leave popup window focused
patch 8.1.1432: can't build with eval feature
patch 8.1.1431: popup window listed as "Scratch"
patch 8.1.1430: popup window option "wrap" not supported
patch 8.1.1429: "pos" option of popup window not supported yet
patch 8.1.1428: popup_atcursor() not implemented yet
patch 8.1.1427: popup window screenshot test fails
patch 8.1.1426: no test for syntax highlight in popup window
patch 8.1.1425: win_execute() does not set window pointers properly
patch 8.1.1424: crash when popup menu is deleted while waiting for char
patch 8.1.1423: popup windows use options from current window and buffer
patch 8.1.1422: popup_getoptions() not implemented yet
patch 8.1.1421: drawing "~" line in popup window
patch 8.1.1420: popup window size only uses first line length
patch 8.1.1419: listener callbacks may be called recursively
patch 8.1.1418: win_execute() is not implemented yet
patch 8.1.1417: MS-Windows: resolve() does not resolve all components of path
patch 8.1.1416: popup_getposition() not implemented yet
patch 8.1.1415: build error in MS-Windows GUI
patch 8.1.1414: alloc() returning "char_u *" causes a lot of type casts
patch 8.1.1413: error when the drive of the swap file was disconnected
patch 8.1.1412: test 30 is old style
patch 8.1.1411: Coverity warns for divide by zero
patch 8.1.1410: popup_move() is not implemented yet
patch 8.1.1409: Coverity warns for using uninitialized memory
patch 8.1.1408: PFL_HIDDEN conflicts with system header file
patch 8.1.1407: popup_create() does not support text properties
patch 8.1.1406: popup_hide() and popup_show() not implemented yet
Update runtime files.
patch 8.1.1405: "highlight" option of popup windows not supported
patch 8.1.1404: cannot change the patch level when building with NSIS
patch 8.1.1403: cannot build without the timer feature
patch 8.1.1402: "timer" option of popup windows not supported
patch 8.1.1401: misspelled mkspellmem as makespellmem
patch 8.1.1400: using global pointer for tab-local popups is clumsy
patch 8.1.1399: popup windows not adjusted when switching tabs
patch 8.1.1398: duplicate line in MSVC build file
patch 8.1.1397: build fails in tiny version
patch 8.1.1396: 'wincolor' does not apply to lines below the buffer
patch 8.1.1395: saving for undo may access invalid memory
patch 8.1.1394: not restoring t_F2 in registers test
patch 8.1.1393: unnecessary type casts
patch 8.1.1392: build failure in tiny version
patch 8.1.1391: no popup window support
patch 8.1.1390: search stats are off when using count or offset
patch 8.1.1389: changes are not flushed when end and start overlap
patch 8.1.1388: errors when calling prop_remove() for an unloaded buffer
patch 8.1.1387: calling prop_add() in an empty buffer doesn't work
patch 8.1.1386: unessesary type casts for lalloc()
patch 8.1.1385: signed/unsigned compiler warning
patch 8.1.1384: using "int" for alloc() often results in compiler warnings
patch 8.1.1383: warning for size_t/int mixup
patch 8.1.1382: error when editing test file
patch 8.1.1381: MS-Windows: missing build dependency
patch 8.1.1380: MS-Windows building VIMDLL with MSVC: SUBSYSTEM is not set
patch 8.1.1379: filechanged test hangs
patch 8.1.1378: delete() can not handle a file name that looks like a pattern
patch 8.1.1377: MS-Windows GUI uses wrong shell command for bash
patch 8.1.1376: warnings for size_t/int mixups
patch 8.1.1375: without "TS" in 'shortmess' get a hit-enter prompt often
patch 8.1.1374: check for file changed triggers too often
patch 8.1.1373: "[p" in Visual mode puts in wrong line
patch 8.1.1372: when evaluating 'statusline' the current window is unknown
patch 8.1.1371: cannot recover from a swap file
patch 8.1.1370: not using the new github feature for donations
patch 8.1.1369: get E484 when using system() during GUI startup
patch 8.1.1368: modeline test fails with python but without pythonhome
patch 8.1.1367: can set 'modelineexpr' in modeline
patch 8.1.1366: using expressions in a modeline is unsafe
patch 8.1.1365: source command doesn't check for the sandbox
patch 8.1.1364: design for popup window support needs more details
patch 8.1.1363: ":vert options" does not make a vertical split
patch 8.1.1362: code and data in tests can be hard to read
patch 8.1.1361: Python setuptools don't work with Python 3
patch 8.1.1360: buffer left 'nomodifiable' after :substitute
patch 8.1.1359: text property wrong after :substitute with backslash
patch 8.1.1358: cannot enter character with a CSI byte
patch 8.1.1357: test 37 is old style
patch 8.1.1356: some text in heredoc assignment ends the text
patch 8.1.1355: obvious mistakes are accepted as valid expressions
patch 8.1.1354: getting a list of text lines is clumsy
patch 8.1.1353: undo test fails on Mac
patch 8.1.1352: undofile() reports wrong name
patch 8.1.1351: text property wrong after :substitute
patch 8.1.1350: "W" for wrapping not shown when more than 99 matches
patch 8.1.1349: if writing runs into conversion error backup file is deleted
patch 8.1.1348: running tests may cause the window to move
patch 8.1.1347: fractional scroll position not restored after closing window
patch 8.1.1346: error for Python exception does not show useful info
patch 8.1.1345: stuck in sandbox with ":s/../\=Function/gn"
patch 8.1.1344: Coverity complains about possibly using a NULL pointer
patch 8.1.1343: text properties not adjusted for Visual block mode delete
patch 8.1.1342: using freed memory when joining line with text property
patch 8.1.1341: text properties are lost when joining lines
patch 8.1.1340: attributes from 'cursorline' overwrite textprop
patch 8.1.1339: installer needs to product name et al.
patch 8.1.1338: hang when concealing the '>' shown for half of wide char
patch 8.1.1337: get empty text prop when splitting line just after text prop
patch 8.1.1336: some eval functionality is not covered by tests
patch 8.1.1335: listener callback is called after inserting text
patch 8.1.1334: when buffer is hidden "F" in 'shortmess' is not used
patch 8.1.1333: text properties don't always move after changes
patch 8.1.1332: cannot flush listeners without redrawing, mix of changes
patch 8.1.1331: test 29 is old style
patch 8.1.1330: using bold attribute in terminal changes the color
patch 8.1.1329: plans for popup window support are spread out
patch 8.1.1328: no test for listener with undo operation
patch 8.1.1327: unnecessary scroll after horizontal split
patch 8.1.1326: no test for listener with partial
patch 8.1.1325: cannot build with +eval but without +channel and +timers
patch 8.1.1324: stray comma in VMS makefile
patch 8.1.1323: 'mouse' option is reset when using GPM mouse
patch 8.1.1322: Cygwin makefile is not nicely indented
patch 8.1.1321: no docs or tests for listener functions
patch 8.1.1320: it is not possible to track changes to a buffer
patch 8.1.1319: computing function length name in many places
patch 8.1.1318: code for text changes is in a "misc" file
Add missing files from patch 8.1.1318
patch 8.1.1317: output from Travis can be improved
patch 8.1.1316: duplicated localtime() call
patch 8.1.1315: there is always a delay if a termrequest is never answered
patch 8.1.1314: MSVC makefile is not nicely indented
patch 8.1.1313: warnings for using localtime() and ctime()
patch 8.1.1312: Coverity warning for using uninitialized variable
patch 8.1.1311: aborting an autocmd with an exception is not tested
patch 8.1.1310: named function arguments are never optional
patch 8.1.1309: test for Normal highlight fails on MS-Windows GUI
patch 8.1.1308: the Normal highlight is not defined when compiled with GUI
Update runtime files
patch 8.1.1307: cannot reconnect to the X server after it restarted
patch 8.1.1306: Borland support is outdated and doesn't work
patch 8.1.1305: there is no easy way to manipulate environment variables
patch 8.1.1304: MS-Windows: compiler warning for unused value
patch 8.1.1303: not possible to hide a balloon
patch 8.1.1302: v:beval_text is not tested in Visual mode
patch 8.1.1301: when compiled with VIMDLL some messages are not shown
patch 8.1.1300: in a terminal 'ballooneval' does not work right away
patch 8.1.1299: "extends" from 'listchars' is used when 'list' is off
patch 8.1.1298: invalid argument test fails without X clipboard
patch 8.1.1297: invalid argument test fails without GTK
patch 8.1.1296: crash when using invalid command line argument
patch 8.1.1295: when vimrun.exe does not exist external command may fail
patch 8.1.1294: MS-Windows: Some fonts return wrong average char width
patch 8.1.1293: MSVC files are no longer useful
patch 8.1.1292: invalid command line arguments not tested
patch 8.1.1291: not easy to change directory and restore
patch 8.1.1290: .hgignore and .gitignore are either distributed or in git
patch 8.1.1289: may not have enough space to add "W" to search stats
patch 8.1.1288: search stats don't show for mapped command
patch 8.1.1287: cannot build with +eval but without +mouse
patch 8.1.1286: running tests leaves XTest_tabpage_cmdheight file behind
patch 8.1.1285: test17 is old style
patch 8.1.1284: detecting *.tmpl as htmlcheetah is outdated
patch 8.1.1283: delaying half a second after the top-bot message
patch 8.1.1282: running make in src/po leaves LINGUAS file behind
patch 8.1.1281: cannot specify a count with :chistory
patch 8.1.1280: remarks about functionality not in Vi clutters the help
patch 8.1.1279: cannot set 'spellang' to "sr@latin"
patch 8.1.1278: missing change for "combine" field
patch 8.1.1277: missing screenshot update
patch 8.1.1276: cannot combine text properties with syntax highlighting
patch 8.1.1275: cannot navigate to errors before/after the cursor
patch 8.1.1274: after :unmenu can still execute the menu with :emenu
patch 8.1.1273: compiler warning in direct write code
patch 8.1.1272: click on WinBar of other window not tested
patch 8.1.1271: compiler warnings for use of STRNCPY()
patch 8.1.1270: cannot see current match position
patch 8.1.1269: MS-Windows GUI: multibyte chars with a 0x80 byte do not work
patch 8.1.1268: map completion test fails in GUI
patch 8.1.1267: cannot check if GPM mouse support is working
patch 8.1.1266: winbar test doesn't test enough
patch 8.1.1265: when GPM mouse support is enabled double clicks do not work
patch 8.1.1264: crash when closing window from WinBar click
patch 8.1.1263: mouse clicks in WinBar not tested
patch 8.1.1262: cannot simulate a mouse click in a test
patch 8.1.1261: no error for quickfix commands with negative range
patch 8.1.1260: comparing with pointer instead of value
patch 8.1.1259: crash when exiting early
patch 8.1.1258: the "N files to edit" message can not be surpressed
patch 8.1.1257: MSVC: name of object directory now always right
patch 8.1.1256: cannot navigate through errors relative to the cursor
patch 8.1.1255: building desktop files fails on FreeBSD
patch 8.1.1254: mapping completion contains dead code
patch 8.1.1253: mapping completion test fails
patch 8.1.1252: not all mapping completion is tested
patch 8.1.1251: no test for completion of mapping keys
patch 8.1.1250: no test for netterm mouse
patch 8.1.1249: compiler warning for uninitialized variable
patch 8.1.1248: no test for dec mouse
patch 8.1.1247: urxvt mouse codes are not tested
patch 8.1.1246: cannot handle negative mouse coordinate from urxvt
patch 8.1.1245: ":copen 10" sets height in full-height window
patch 8.1.1244: no tests for CTRL-mouse-click
patch 8.1.1243: compiler warnings for incomplete switch statement
patch 8.1.1242: no cmdline redraw when tabpages have different 'cmdheight'
patch 8.1.1241: Ex command info contains confusing information
patch 8.1.1240: runtime desktop files are overwritten by build
patch 8.1.1239: key with byte sequence containing CSI does not work
patch 8.1.1238: MS-Windows: compiler warning for sprintf() format
patch 8.1.1237: error for using "compl", reserved word in C++
patch 8.1.1236: sjiscorr.c not found in shadow directory
Update .gitignore
patch 8.1.1235: compiler warnings for using STRLEN() value
patch 8.1.1234: swap file test fails on MS-Windows
patch 8.1.1233: cannot build tiny version
patch 8.1.1232: can't build on MS-Windows
patch 8.1.1231: asking about existing swap file unnecessarily
patch 8.1.1230: a lot of code is shared between vim.exe and gvim.exe
patch 8.1.1229: warning for posix_openpt() not declared
patch 8.1.1228: not possible to process tags with a function
patch 8.1.1227: duplicate entries in the generate .desktop files
patch 8.1.1226: {not in Vi} remarks get in the way of useful help text
patch 8.1.1225: cannot create a pty to use with :terminal on FreeBSD
patch 8.1.1224: MS-Windows: cannot specify font weight
patch 8.1.1223: middle mouse click test fails without a clipboard
patch 8.1.1222: build still fails on MS-Windows
patch 8.1.1221: filtering does not work when listing marks
patch 8.1.1220: build fails on MS-Windows
patch 8.1.1219: not checking for NULL return from alloc()
patch 8.1.1218: cannot set a directory for a tab page
patch 8.1.1217: MS-Windows: no space reserved for font quality name
patch 8.1.1216: mouse middle click is not tested
patch 8.1.1215: "make clean" does not remove generated src/po files
patch 8.1.1214: old style tests
patch 8.1.1213: "make clean" in top dir does not cleanup indent test output
patch 8.1.1212: signal PWR is not tested
patch 8.1.1211: not all user command code is tested
patch 8.1.1210: support for user commands is spread out
patch 8.1.1209: clever compiler warns for buffer being too small
patch 8.1.1208: links to repository use wrong file name
patch 8.1.1207: some compilers give warning messages
patch 8.1.1206: user command parsing and listing not properly tested
patch 8.1.1205: a BufReadPre autocommand may cause the cursor to move
patch 8.1.1204: output of :command with address completion is not nice
patch 8.1.1203: some autocmd tests are old style
patch 8.1.1202: always get regexp debugging logs when building with -DDEBUG
patch 8.1.1201: output of :command is hard to read
patch 8.1.1200: old style comments in debugger source
patch 8.1.1199: no test for :abclear
patch 8.1.1198: bracketed paste may remain active after Vim exists
patch 8.1.1197: when starting with multiple tabs file messages is confusing
patch 8.1.1196: parallel build may fail
patch 8.1.1195: Vim script debugger functionality needs cleanup
Update runtime files
patch 8.1.1194: typos and small problems in source files
patch 8.1.1193: typos and small problems in test files
patch 8.1.1192: mode is not cleared when leaving Insert mode with mapped Esc
patch 8.1.1191: not all debug commands are covered by a test
patch 8.1.1190: has('vimscript-3') does not work
patch 8.1.1189: mode is not cleared when leaving Insert mode
patch 8.1.1188: not all Vim variables require the v: prefix
patch 8.1.1187: cannot recognize Pipfile
patch 8.1.1186: readdir() allocates list twice
patch 8.1.1185: mapping for CTRL-X is inconsistent
patch 8.1.1184: undo file left behind after running test
patch 8.1.1183: typos in VisVim comments
patch 8.1.1182: some function prototypes are outdated
patch 8.1.1181: tests for mouse clicks are a bit flaky
patch 8.1.1180: Vim script debugger tests are old style
patch 8.1.1179: no test for mouse clicks in the fold column
patch 8.1.1178: when mouse click tests fails value of 'ttytype' is unknown
patch 8.1.1177: .ts files are recognized as xml, typescript is more common
patch 8.1.1176: test for dragging a tab is flaky
patch 8.1.1175: no test for dragging a tab and double click for new tab
patch 8.1.1174: cannot build with Ruby 1.8
patch 8.1.1173: suspend test has duplicated lines
patch 8.1.1172: cursor properties were not fully tested
patch 8.1.1171: statusline test could fail in large terminal
patch 8.1.1170: terminal ANSI color test does not cover all colors
patch 8.1.1169: writing coverage info in a separate dir is not needed
patch 8.1.1168: not all screen update code of terminal is executed in tests
patch 8.1.1167: no test for closing tab by click in tabline
patch 8.1.1166: gettitle test can still fail when another Vim is running
patch 8.1.1165: no test for mouse clicks in the terminal tabpage line
patch 8.1.1164: gettitle test is failing when server name differs
patch 8.1.1163: codecov does not report all the coverage information
patch 8.1.1162: incorrect coverage information; typo in color name
patch 8.1.1161: unreachable code
patch 8.1.1160: termcodes test would fail in a very big terminal
patch 8.1.1159: MS-Windows: with a silent (un)install $VIM/_vimrc is removed
patch 8.1.1158: json encoded string is sometimes missing the final NUL
patch 8.1.1157: Unicode tables are out of date
patch 8.1.1156: Unicode emoji and other image characters not recognized
patch 8.1.1155: termcodes tests can be improved
patch 8.1.1154: getting a newer msgfmt on Travis is too complicated
patch 8.1.1154
patch 8.1.1152: compiler warning with VS2019
patch 8.1.1151: build fails when using shadow directory
patch 8.1.1150: generating desktop files not tested on Travis
patch 8.1.1149: building desktop files fails with older msgfmt
patch 8.1.1148: CTRL-L with 'incsearch' does not pick up char under cursor
patch 8.1.1147: desktop file translations are requiring manual updates
patch 8.1.1146: in MS-Windows console colors in a terminal window are wrong
patch 8.1.1145: compiler warning for unused function
patch 8.1.1144: too strict checking of the 'spellfile' option
patch 8.1.1143: may pass weird strings to file name expansion
patch 8.1.1142: no test for dragging the window separators with the mouse
patch 8.1.1141: terminal winpos test fails with very large terminal
patch 8.1.1140: not easy to find out what neighbors a window has
patch 8.1.1139: no test for what is fixed in patch 8.1.0716
patch 8.1.1138: plugins don't get notified when the popup menu changes
Update runtime files.
patch 8.1.1137: xterm mouse wheel escape sequence is not tested
patch 8.1.1136: decoding of mouse click escape sequence is not tested
patch 8.1.1135: build failure for small version
patch 8.1.1134: buffer for quickfix window is reused for another file
patch 8.1.1133: compiler warning for uninitialized struct member
patch 8.1.1132: getwinpos() test fails on MS-Windows
patch 8.1.1131: getwinpos() does not work in the MS-Windows console
patch 8.1.1130: MS-Windows: warning for unused variable
patch 8.1.1129: when making a new screendump test have to create the file
patch 8.1.1128: getwinpos() test does not work on MS-Windows
patch 8.1.1127: getwinpos() doesn't work in terminal on MS-Windows console
patch 8.1.1126: build failure with +terminal but without tgetent
patch 8.1.1125: libvterm does not handle the window position report
patch 8.1.1124: insert completion flags are mixed up
patch 8.1.1123: no way to avoid filtering for autocomplete function
patch 8.1.1122: char2nr() does not handle composing characters
patch 8.1.1121: test for term_gettitle() was disabled
patch 8.1.1120: cannot easily get directory entry matches
patch 8.1.1119: no support for Windows on ARM64.
patch 8.1.1118: a couple of conditions are hard to understand
patch 8.1.1117: build failure without the +eval feature
patch 8.1.1116: cannot enforce a Vim script style
patch 8.1.1115: cannot build with older C compiler
patch 8.1.1114: confusing overloaded operator "." for string concatenation
patch 8.1.1113: making an autocommand trigger once is not so easy
patch 8.1.1112: duplicate code in quickfix file
patch 8.1.1111: it is not easy to check for infinity
patch 8.1.1110: composing chars on space wrong when 'listchars' is set
patch 8.1.1109: deleted file still in list of distributed files
Update runtime files.
patch 8.1.1108: test for 'visualbell' doesn't work
patch 8.1.1107: no test for 'visualbell'
patch 8.1.1106: no test for 'writedelay'
patch 8.1.1105: long escape sequences may be split up
patch 8.1.1104: MS-Windows: not all environment variables can be used
patch 8.1.1103: MS-Windows: old API calls are no longer needed
patch 8.1.1102: Win32 exe file contains unused code
patch 8.1.1101: signals test may fail in the GUI
patch 8.1.1100: tag file without trailing newline no longer works
patch 8.1.1099: the do_tag() function is too long
patch 8.1.1098: quickfix code duplication
patch 8.1.1097: Motif build fails
patch 8.1.1096: MS-Windows: cannot distinguish BS and CTRL-H
patch 8.1.1095: MS-Windows: executable() fails on very long filename
patch 8.1.1094: long line in tags file causes error
patch 8.1.1093: support for outdated tags format slows down tag parsing
patch 8.1.1092: setting 'guifont' when maximized resizes the Vim window
patch 8.1.1091: MS-Windows: cannot use multi-byte chars in environment var
patch 8.1.1090: MS-Windows: modify_fname() has problems with some 'encoding'
patch 8.1.1089: tutor does not check $LC_MESSAGES
patch 8.1.1088: height of quickfix window not retained with vertical split
patch 8.1.1087: tag stack is incorrect after CTRL-T and then :tag
patch 8.1.1086: too many curly braces
patch 8.1.1085: compiler warning for possibly uninitialized variable
patch 8.1.1084: cannot delete a match from another window
patch 8.1.1083: MS-Windows: hang when opening a file on network share
patch 8.1.1082: "Conceal" match is mixed up with 'hlsearch' match.
patch 8.1.1081: MS-Windows: cannot use some fonts
patch 8.1.1080: when a screendump test fails, moving the file is a hassle
patch 8.1.1079: no need for a separate ScreenLinesUtf8() test function
patch 8.1.1078: when 'listchars' is set a composing char on a space is wrong
patch 8.1.1077: reg_executing() is reset by calling input()
patch 8.1.1076: file for Insert mode is much too big
patch 8.1.1075: function reference count wrong in Python code
patch 8.1.1074: Python test doesn't wipe out hidden buffer
patch 8.1.1073: space in number column is on wrong side with 'rightleft' set
patch 8.1.1072: extending sign and foldcolumn below the text is confusing
patch 8.1.1071: cannot get composing characters from the screen
patch 8.1.1070: issue templates are not good enough
patch 8.1.1069: source README file doesn't look nice on github
patch 8.1.1068: cannot get all the information about current completion
patch 8.1.1067: issues added on github are unstructured
patch 8.1.1066: VIMDLL isn't actually used
patch 8.1.1065: no test for using and deleting menu in the GUI
patch 8.1.1064: no test for output conversion in the GTK GUI
patch 8.1.1063: insufficient testing for wildmenu completion
patch 8.1.1062: quickfix code is repeated
patch 8.1.1061: when substitute string throws error, substitute happens anyway
patch 8.1.1060: MS-Windows: get_cmd_args() is no longer needed
patch 8.1.1059: MS-Windows: PlatformId() is called unnecessarily
patch 8.1.1058: memory usage test may still fail on some systems
patch 8.1.1057: nsis config is too complicated
patch 8.1.1056: no eval function for Ruby
patch 8.1.1055: CTRL-G U in Insert mode doesn't work for shift-Left
patch 8.1.1054: not checking return value of ga_grow()
patch 8.1.1053: warning for missing return statement
patch 8.1.1052: test for CTRL-C message sometimes fails
patch 8.1.1051: not all ways to switch terminal mode are tested
patch 8.1.1050: blank srceen when DirectWrite failed
patch 8.1.1049: when user tries to exit with CTRL-C message is confusing
patch 8.1.1048: minor issues with tests
Update runtime files.
patch 8.1.1047: WINCH signal is not tested
patch 8.1.1046: the "secure" variable is used inconsistently
patch 8.1.1045: E315 ml_get error when using Python and hidden buffer
patch 8.1.1044: no way to check the reference count of objects
patch 8.1.1043: Lua interface does not support Blob
patch 8.1.1042: the paste test doesn't work properly in the Windows console
patch 8.1.1041: test for Arabic no longer needed
patch 8.1.1040: FEAT_TAG_ANYWHITE is not enabled in any build
patch 8.1.1039: MS-Windows build fails
patch 8.1.1038: Arabic support excludes Farsi
patch 8.1.1037: memory usage test may still fail on some systems
patch 8.1.1036: quickfix function arguments are inconsistent
patch 8.1.1035: prop_remove() second argument is not optional
patch 8.1.1034: too many #ifdefs
patch 8.1.1033: memory usage test may still fail on some systems
patch 8.1.1032: warnings from clang static analyzer
patch 8.1.1031: memory usage test may still fail
patch 8.1.1030: quickfix function arguments are inconsistent
patch 8.1.1029: DirectWrite doesn't take 'linespace' into account
patch 8.1.1028: MS-Windows: memory leak when creating terminal fails
patch 8.1.1027: memory usage test sometimes fails
patch 8.1.1026: unused condition
patch 8.1.1025: checking NULL pointer after addition
patch 8.1.1024: stray log calls in terminal code
patch 8.1.1023: may use NULL pointer when indexing a blob
patch 8.1.1022: may use NULL pointer when out of memory
patch 8.1.1021: pyeval() and py3eval() leak memory
patch 8.1.1020: compiler warning for Python3 interface
patch 8.1.1019: Lua: may garbage collect function reference in use
patch 8.1.1018: window cleared when entering Terminal-Normal twice
patch 8.1.1017: off-by-one error in filetype detection
Update runtime files.
patch 8.1.1016: MS-Windows: No color in shell when using "!" in 'guioptions
patch 8.1.1015: quickfix buffer shows up in list, can't get buffer number
patch 8.1.1014: MS-Windows: /analyze only defined for non-debug version
patch 8.1.1013: MS-Windows: Scrolling fails when dividing the screen
patch 8.1.1012: memory leak with E461
patch 8.1.1011: indent from autoindent not removed from blank line
patch 8.1.1010: Lua interface leaks memory
patch 8.1.1009: MS-Windows: some text is not baseline aligned
patch 8.1.1008: MS-Windows: HAVE_STDINT_H only defined for non-debug version
patch 8.1.1007: using closure may consume a lot of memory
patch 8.1.1006: repeated code in quickfix support
patch 8.1.1005: test fails because t_F2 is not set
patch 8.1.1004: function "luaV_setref()" not covered with tests
patch 8.1.1003: playing back recorded key sequence mistakes key code
patch 8.1.1002: "gf" does not always work when URL has a port number
patch 8.1.1001: Visual area not correct when using 'cursorline'
patch 8.1.1000: indenting is off
patch 8.1.0999: use register one too often and not properly tested
patch 8.1.0998: getcurpos() unexpectedly changes "curswant"
patch 8.1.0997: using GUI colors in vim.exe when 'termguicolors' is off
patch 8.1.0996: a few screendump tests fail because of scrolling
patch 8.1.0995: a getchar() call resets the reg_executing() result
patch 8.1.0994: relative cursor position is not calculated correctly
patch 8.1.0993: ch_read() may return garbage if terminating NL is missing
patch 8.1.0992: a :normal command resets the reg_executing() result
patch 8.1.0991: cannot build with a mix of features
patch 8.1.0990: floating point exception with "%= 0" and "/= 0"
patch 8.1.0989: various small code ugliness
patch 8.1.0988: deleting location list buffer breaks location list window
patch 8.1.0987: unnecessary condition in #ifdef
patch 8.1.0986: rename() is not propertly tested
patch 8.1.0985: crash with large number in regexp
patch 8.1.0984: unnecessary #ifdefs
patch 8.1.0983: checking __CYGWIN32__ unnecessarily
patch 8.1.0982: update_cursor() called twice in :shell
patch 8.1.0981: pasting in terminal insufficiently tested
patch 8.1.0980: extend() insufficiently tested
patch 8.1.0979: compiler warning for unused functions
patch 8.1.0978: blob not tested with Perl
patch 8.1.0977: blob not tested with Ruby
patch 8.1.0976: dosinstall still has buffer overflow problems
patch 8.1.0975: using STRNCPY() wrongly. Warning for uninitialized variable
patch 8.1.0974: cannot switch from terminal window to previous tabpage
patch 8.1.0973: pattern with syntax error gives threee error messages
patch 8.1.0972: cannot switch from terminal window to next tabpage
Update runtime files
patch 8.1.0971: failure for selecting quoted text object moves cursor
patch 8.1.0970: text properties test fails when 'encoding' is not utf-8
patch 8.1.0969: message written during startup is truncated
patch 8.1.0968: crash when using search pattern \%Ufffffc23
patch 8.1.0967: stray dependency in test Makefile
patch 8.1.0966: one terminal test is flaky
patch 8.1.0965: search test fails
patch 8.1.0964: cannot see in CI why a screenshot test failed
patch 8.1.0963: illegal memory access when using 'incsearch'
patch 8.1.0962: building with MinGW and static libs doesn't work
patch 8.1.0961: Mac: fsync may fail sometimes
patch 8.1.0960: when using ConPTY garbage collection has undefined behavior
patch 8.1.0959: sorting large numbers is not tested
patch 8.1.0958: compiling weird regexp pattern is very slow
patch 8.1.0957: Mac: fsync fails on network share
patch 8.1.0956: using context:0 in 'diffopt' does not work well
patch 8.1.0955: matchit autoload directory not in installer
patch 8.1.0954: arguments of semsg() and siemsg() are not checked
patch 8.1.0953: a very long file is truncated at 2^31 lines
patch 8.1.0952: compilation warnings when building the MS-Windows installer
patch 8.1.0951: using WIN64 even though it is never defined
patch 8.1.0950: using :python sets 'pyxversion' even when not executed
patch 8.1.0949: MS-windows defines GUI macros different than other systems
patch 8.1.0948: when built without +eval "Vim --clean" produces errors
patch 8.1.0947: using MSWIN before it is defined
Revert change accidentally included in runtime file updates.  Closes #3998.
patch 8.1.0946: Coveralls is not very useful
Update runtime files.
patch 8.1.0945: internal error when using pattern with NL in the range
patch 8.1.0944: format of nbdbg() arguments is not checked
patch 8.1.0943: still a trace of Farsi support
patch 8.1.0942: options window still checks for the multi_byte feature
patch 8.1.0941: macros for MS-Windows are inconsistent
patch 8.1.0940: MS-Windows console resizing not handled properly
patch 8.1.0939: no completion for sign group names
patch 8.1.0938: background color is wrong in MS-Windows console
patch 8.1.0937: invalid memory access in search pattern
patch 8.1.0936: may leak memory when using 'vartabstop'
patch 8.1.0935: old regexp engine may use invalid buffer
patch 8.1.0934: invalid memory access in search pattern
patch 8.1.0933: When using VTP scroll region isn't used properly
patch 8.1.0932: Farsi support is outdated and unused
patch 8.1.0931: vtp_working included in GUI build but unused
patch 8.1.0930: typo in Makefile
patch 8.1.0929: no error when requesting ConPTY but it's not available
patch 8.1.0928: stray log function call
patch 8.1.0927: USE_CR is never defined
patch 8.1.0926: no test for :wnext, :wNext and :wprevious
patch 8.1.0925: terminal scrollback test still still flaky
patch 8.1.0924: terminal scrollback test still flaky
patch 8.1.0923: terminal dump diff swap does not update file names
patch 8.1.0922: terminal scrollback test is flaky
patch 8.1.0921: terminal test sometimes fails; using memory after free
patch 8.1.0920: in Terminal-Normal mode job output messes up the window
patch 8.1.0919: compiler warnings
patch 8.1.0918: MS-Windows: startup messages are not converted
patch 8.1.0917: double free when running out of memory
patch 8.1.0916: with Python 3.7 "find_module" is not made available
patch 8.1.0915: fsync() may not work properly on Mac
patch 8.1.0914: code related to findfile() is spread out
patch 8.1.0913: CI crashes when running out of memory
patch 8.1.0912: MS-Windows: warning for signed/unsigned
patch 8.1.0911: tag line with Ex command cannot have extra fields
patch 8.1.0910: crash with tricky search pattern
patch 8.1.0909: MS-Windows: using ConPTY even though it is not stable
patch 8.1.0908: can't handle large value for %{nr}v in regexp
patch 8.1.0907: CI tests on AppVeyor are failing
patch 8.1.0906: using clumsy way to get console window handle
patch 8.1.0905: complicated regexp causes a crash
patch 8.1.0904: USE_LONG_FNAME never defined
patch 8.1.0903: struct uses more bytes than needed
patch 8.1.0902: incomplete set of assignment operators
patch 8.1.0901: index in getjumplist() may be wrong
patch 8.1.0900: ConPTY many crash with 32-bit build
patch 8.1.0899: no need to check restricted mode for setwinvar()
patch 8.1.0898: a messed up rgb.txt can crash Vim
patch 8.1.0897: can modify a:000 when using a reference
patch 8.1.0896: tests for restricted mode no run for MS-Windows GUI
patch 8.1.0895: MS-Windows: dealing with temp name encoding not quite right
patch 8.1.0894: MS-Windows: resolve() does not return a reparse point
patch 8.1.0893: terminal test is a bit flaky
patch 8.1.0892: failure when closing a window when location list is in use
patch 8.1.0891: substitute command inssuficiently tested
patch 8.1.0890: pty allocation wrong if using file for out channel
patch 8.1.0889: MS-Windows: a channel write may hang
patch 8.1.0888: the a: dict is not immutable as documented
patch 8.1.0887: the 'l' flag in :subsitute is sticky
patch 8.1.0886: compiler warning for NULL pointer and condition always true
patch 8.1.0885: test for restricted hangs on MS-Windows GUI
patch 8.1.0884: double check for bsd systems
patch 8.1.0883: missing some changes for Ex commands
patch 8.1.0882: checking for FEAT_MBYTE which doesn't exist anymore
patch 8.1.0881: can execute shell commands in rvim through interfaces
patch 8.1.0880: MS-Windows: inconsistent selection of winpty/conpty
patch 8.1.0879: MS-Windows: temp name encoding can be wrong
patch 8.1.0878: test for has('bsd') fails on some BSD systems
patch 8.1.0877: new buffer used every time the quickfix window is opened
patch 8.1.0876: completion match not displayed when popup menu is not shown
patch 8.1.0875: not all errors of marks and findfile()/finddir() are tested
Add missing matchit file.
patch 8.1.0874: using old style comments in new file
patch 8.1.0873: list if distributed files does not include matchit autoload
patch 8.1.0872: confusing condition
Update runtime files.
patch 8.1.0871: build error when building with Ruby 2.6.0
patch 8.1.0870: Vim doesn't use the new ConPTY support in Windows 10
patch 8.1.0869: Travis CI script is too complicated
patch 8.1.0868: crash if triggering garbage collector after a function call
patch 8.1.0867: cannot build Python interface with Python 2.4
patch 8.1.0866: build file dependencies are outdated
patch 8.1.0865: when 'listchars' only contains "nbsp:X" it does not work
patch 8.1.0864: cannot have a local value for 'scrolloff' and 'sidescrolloff'
patch 8.1.0863: cannot see what signal caused a job to end
patch 8.1.0862: no verbose version of character classes
patch 8.1.0861: building with MinGW and static libc doesn't work
patch 8.1.0860: debug lines left in the code
patch 8.1.0859: "%v" in 'errorformat' does handle multi-byte characters
patch 8.1.0858: 'indentkeys' and 'cinkeys' defaults are different
patch 8.1.0857: indent functionality is not separated
patch 8.1.0856: when scrolling a window the cursorline is not always updated
patch 8.1.0855: cannot build xxd with MSVC 10
patch 8.1.0854: xxd does not work with more than 32 bit addresses
patch 8.1.0853: options test fails on Mac
patch 8.1.0852: findfile() and finddir() are not properly tested
patch 8.1.0851: feedkeys() with "L" does not work properly
patch 8.1.0850: test for 'backupskip' is not correct
patch 8.1.0849: cursorline highlight is not always updated
patch 8.1.0848: cannot build with Ruby 1.8
patch 8.1.0847: may use terminal after it was cleaned up
patch 8.1.0846: not easy to recognize the system Vim runs on
patch 8.1.0845: having job_status() free the job causes problems
patch 8.1.0844: when timer fails test will hang forever
patch 8.1.0843: memory leak when running "make test_cd"
patch 8.1.0842: getchar_zero test fails on MS-Windows
patch 8.1.0841: travis config to get Lua on MacOS is too complicated
patch 8.1.0840: getchar(0) never returns a character in the terminal
patch 8.1.0839: when using VTP wrong colors after a color scheme change
patch 8.1.0838: compiler warning for type conversion
patch 8.1.0837: timer interrupting cursorhold and mapping not tested
patch 8.1.0836: user completion test can fail on MS-Windows
patch 8.1.0835: GUI build fails on MS-Windows
patch 8.1.0834: GUI may wait too long before dealing with messages
patch 8.1.0833: memory leak when jumps output is filtered
patch 8.1.0832: confirm() is not tested
patch 8.1.0831: xxd test fails if man page has dos fileformat
patch 8.1.0830: test leaves directory behind on MS-Windows
patch 8.1.0829: when 'hidden' is set session creates extra buffers
patch 8.1.0828: still using FEAT_VIRTUALEDIT
Updated runtime files.
patch 8.1.0827: missing dependency in Makefile
patch 8.1.0826: too many #ifdefs
patch 8.1.0825: code for autocommands is mixed with file I/O code
patch 8.1.0824: SunOS/Solaris has a problem with ttys
patch 8.1.0823: not sufficient testing of xxd
patch 8.1.0822: peeking and flushing output slows down execution
patch 8.1.0821: xxd "usage" output and other arguments not tested
patch 8.1.0820: test for sending large data over channel sometimes fails
patch 8.1.0819: a failed assert with a long string is hard to read
patch 8.1.0818: MS-Windows: cannot send large data with ch_sendraw()
patch 8.1.0817: ":=" command is not tested
patch 8.1.0816: test for 'runtimepath' in session fails on MS-Windows
patch 8.1.0815: dialog for file changed outside of Vim not tested
patch 8.1.0814: :mksession cannot handle a very long 'runtimepath'
patch 8.1.0813: FileChangedShell not sufficiently tested
patch 8.1.0812: Unicode 16 feature is not useful
patch 8.1.0811: too many #ifdefs
patch 8.1.0810: too many #ifdefs
patch 8.1.0809: too many #ifdefs
patch 8.1.0808: MS-Windows: build error with GUI
patch 8.1.0807: session test fails on MS-Windows
patch 8.1.0806: too many #ifdefs
patch 8.1.0805: too many #ifdefs
patch 8.1.0804: crash when setting v:errmsg to empty list
patch 8.1.0803: session file has problem with single quote in file name
patch 8.1.0802: negative index doesn't work for Blob
patch 8.1.0801: MinGW: no hint that tests fail because of small terminal
patch 8.1.0800: may use a lot of memory when a function refers itself
patch 8.1.0799: calling deleted function; test doesn't work on Mac
patch 8.1.0798: changing a blob while iterating over it works strangely
patch 8.1.0797: error E898 is used twice
patch 8.1.0796: MS-Windows 7: problem with named pipe on channel
patch 8.1.0795: cannot build without popup menu
patch 8.1.0794: white space before " -Ntabmove" causes problems
patch 8.1.0793: incorrect error messages for functions that take a Blob
patch 8.1.0792: bad display if opening cmdline window from Insert completion
patch 8.1.0791: a few compiler warnings on VMS
patch 8.1.0790: code for creating tabpages in session is too complex
patch 8.1.0789: sourcing a session sets v:errmsg
patch 8.1.0788: cannot build with tiny features
patch 8.1.0787: compiler warning for unused function
patch 8.1.0786: ml_get error when updating the status line
patch 8.1.0785: depending on the configuration some functions are unused
patch 8.1.0784: messy indent in if statement
patch 8.1.0783: compiler warning for signed/unsigned
patch 8.1.0782: Win32: cursor blinks when Vim is not active
patch 8.1.0781: build error when using if_xcmdsrv.c
patch 8.1.0780: terminal test fails on Mac
patch 8.1.0779: argument for message functions is inconsistent
patch 8.1.0778: terminal test fails on MS-Windows
patch 8.1.0777: Win32: using pipes for channel does not work well
patch 8.1.0776: Travis does not build a version without GUI on Linux
patch 8.1.0775: matching too many files as zsh
patch 8.1.0774: VMS build is missing the blob file
patch 8.1.0773: not all crypt code is tested
patch 8.1.0772: the sign_define_by_name() function is too long
patch 8.1.0771: some shell filetype patterns end in a star
patch 8.1.0770: inconsistent use of ELAPSED_FUNC
patch 8.1.0769: :stop is covered in two tests
patch 8.1.0768: updating completions may cause the popup menu to flicker
patch 8.1.0767: when deleting lines at the bottom signs are misplaced
patch 8.1.0766: various problems when using Vim on VMS
patch 8.1.0765: string format of a Blob can't be parsed back
patch 8.1.0764: list of distributed files is outdated
Update runtime files.
patch 8.1.0763: nobody is using the Sun Workshop support
patch 8.1.0762: compiler warning
patch 8.1.0761: default value for brief_wait is wrong
patch 8.1.0760: no proper test for using 'termencoding'
patch 8.1.0759: showing two characters for tab is limited
patch 8.1.0758: font number is always one instead of the actual
patch 8.1.0757: not enough documentation for Blobs
patch 8.1.0756: copy() does not make a copy of a Blob
patch 8.1.0755: error message for get() on a Blob with invalid index
patch 8.1.0754: preferred column is lost when setting 'cursorcolumn'
patch 8.1.0753: printf format not checked for semsg()
patch 8.1.0752: one more compiler warning for signed/unsigned string
patch 8.1.0751: some regexp errors are not tested
patch 8.1.0750: when the last sign is deleted the signcolumn may remain
patch 8.1.0749: error message contains garbage
patch 8.1.0748: using sprintf() instead of semsg()
patch 8.1.0747: map() with a bad expression doesn't give an error
patch 8.1.0746: highlighting not updated with conceal and 'cursorline'
patch 8.1.0745: compiler warnings for signed/unsigned string
patch 8.1.0744: compiler warnings for signed/unsigned strings
patch 8.1.0743: giving error messages is not flexible
patch 8.1.0742: not all Blob operations are tested
patch 8.1.0741: viminfo with Blob is not tested
patch 8.1.0740: Tcl test fails
patch 8.1.0739: text objects in not sufficiently tested
patch 8.1.0738: using freed memory, for loop over blob leaks memory
patch 8.1.0737: compiler warning for uninitialized variable
patch 8.1.0736: code for Blob not sufficiently tested
patch 8.1.0735: cannot handle binary data
patch 8.1.0734: the hlsearch state is not stored in a session file
patch 8.1.0733: too many #ifdefs for the multi-byte feature
patch 8.1.0732: cannot build without the eval feature
patch 8.1.0731: JS encoding does not handle negative infinity
patch 8.1.0730: compiler warning for get_buf_arg() unused
patch 8.1.0729: there is a SourcePre autocommand event but not a SourcePost
patch 8.1.0728: cannot avoid breaking after a single space.
patch 8.1.0727: compiler warning for sprintf() argument
patch 8.1.0726: redrawing specifically for conceal feature
patch 8.1.0725: conceal mode is not completely tested
patch 8.1.0724: build for MinGW fails
patch 8.1.0723: cannot easily run specific test when in src/testdir
patch 8.1.0722: cannot build without the virtualedit feature
patch 8.1.0721: conceal mode is not sufficiently tested
patch 8.1.0720: cannot easily change the current quickfx list index
patch 8.1.0719: too many #ifdefs
patch 8.1.0718: a couple compiler warnings
patch 8.1.0717: there is no function for the ":sign jump" command
patch 8.1.0716: get warning message when 'completefunc' returns nothing
patch 8.1.0715: superfluous call to redraw_win_later()
patch 8.1.0714: unessesary #if lines in GTK code
patch 8.1.0713: images for NSIS take up too much space
patch 8.1.0712: MS-Windows build instructions are a bit outdated
patch 8.1.0711: test files still use function!
patch 8.1.0710: when using timers may wait for job exit quite long
patch 8.1.0709: windows are updated for every added/deleted sign
patch 8.1.0708: third argument for redrawWinline() is always FALSE
patch 8.1.0707: text property columns are not adjusted for changed indent
patch 8.1.0706: tabline is not always redrawn
patch 8.1.0705: :colorscheme isn't tested enough
patch 8.1.0704: building with Ruby 2.6 gives compiler warnings
patch 8.1.0703: compiler warnings with 64-bit compiler
patch 8.1.0702: ":sign place" only uses the current buffer
patch 8.1.0701: sign message not translated and inconsistent spacing
patch 8.1.0700: using "gt" sometimes does not redraw a tab
patch 8.1.0699: compiler warning for uninitialized variable
patch 8.1.0698: clearing the window is used too often
patch 8.1.0697: ":sign place" requires the buffer argument
patch 8.1.0696: when test_edit fails 'insertmode' may not be reset
patch 8.1.0695: internal error when using :popup
patch 8.1.0694: when using text props may free memory that is not allocated
patch 8.1.0693: channel test fails sometimes
patch 8.1.0692: if a buffer was deleted a channel can't write to it
patch 8.1.0691: text properties are not adjusted for :substitute
patch 8.1.0690: setline() and setbufline() do not clear text properties
patch 8.1.0689: undo with text properties not tested
patch 8.1.0688: text properties are not restored by undo
patch 8.1.0687: sentence text object in Visual mode is not tested
patch 8.1.0686: when 'y' is in 'cpoptions' yanking for the clipboard changes redo
patch 8.1.0685: get_buf_tv() is named inconsistently
patch 8.1.0684: warnings from 64-bit compiler
patch 8.1.0683: spell highlighting does not always end
patch 8.1.0682: text properties not adjusted when backspacing replaced text
patch 8.1.0681: text properties as not adjusted for deleted text
patch 8.1.0680: not easy to see what features are unavailable
patch 8.1.0679: sign functions do not take buffer argument as documented
patch 8.1.0678: text properties as not adjusted for inserted text
patch 8.1.0677: look-behind match may use the wrong line number
patch 8.1.0676: textprop screendump test fails
patch 8.1.0675: text property column in screen columns is not practical
Update runtime files
patch 8.1.0674: leaking memory when updating a single line
patch 8.1.0673: functionality for signs is spread out over several files
patch 8.1.0672: the Lua interface doesn't know about v:null
patch 8.1.0671: cursor in the wrong column after auto-formatting
patch 8.1.0670: macro for popup menu width is unused
patch 8.1.0669: the ex_sign() function is too long
patch 8.1.0668: no test for overstrike mode in the command line
patch 8.1.0667: textprop test leaves file behind
patch 8.1.0666: text property test fails
patch 8.1.0665: text property display wrong when 'spell' is set
patch 8.1.0664: configure "fail-if-missing" does not apply to enable-gui
patch 8.1.0663: text property display wrong when 'number' is set
patch 8.1.0662: needlessly searching for tilde in string
patch 8.1.0661: clipboard regexp might be used recursively
patch 8.1.0660: sign_cleanup() may leak memory
patch 8.1.0659: build failure without the sign feature
patch 8.1.0658: deleting signs and completion for :sign is insufficient
patch 8.1.0657: get error for using regexp recursively
patch 8.1.0656: trying to reconnect to X server may cause problems
patch 8.1.0655: when appending a line text property flags are not added
patch 8.1.0654: when deleting a line text property flags are not adjusted
patch 8.1.0653: arglist test fails on MS-windows
patch 8.1.0652: freeing memory for balloon eval too early
patch 8.1.0651: :args \"foo works like :args without argument
patch 8.1.0650: command line argument -q [errorfile] is not tested
patch 8.1.0649: setjmp() variables defined globally are used in one file
Update runtime files.
patch 8.1.0648: custom operators can't act upon a forced motion
patch 8.1.0647: MS-Windows: balloon_show() does not handle wide characters
patch 8.1.0646: cannot build with Ruby 2.6.0
patch 8.1.0645: Coverity warns for possible use of NULL pointer
patch 8.1.0644: finding next sign ID is inefficient
patch 8.1.0643: computing byte offset wrong
patch 8.1.0642: swapinfo() leaks memory
patch 8.1.0641: no check for out-of-memory when converting regexp
patch 8.1.0640: get E14 while typing command :tab with 'incsearch' set
patch 8.1.0639: text properties test fails on MS-Windows
patch 8.1.0638: text property highlighting is off by one column
patch 8.1.0637: nsis file no longer used
patch 8.1.0636: line2byte() gives wrong values with text properties
patch 8.1.0635: Coverity complains about null pointer use
patch 8.1.0634: text properties cannot cross line boundaries
patch 8.1.0633: crash when out of memory while opening a terminal window
patch 8.1.0632: using sign group names is inefficient
patch 8.1.0631: test for :stop fails on Arch
patch 8.1.0630: "wincmd p" does not work after using an autocmd window
patch 8.1.0629: "gn" selects the wrong text with a multi-line match
Ignore output files from indent tests.
patch 8.1.0628: Compiler warning on MS-Windows.
patch 8.1.0627: Python cannot handle function name of script-local function
patch 8.1.0626: MS-Windows: no resize to fit parent when using --windowid
patch 8.1.0625: MS-Windows: terminal test fails in white console
patch 8.1.0624: overuling CONF_ARGS from the environment still does not work
patch 8.1.0623: iterating through window frames is repeated
patch 8.1.0622: adding quickfix items marks items as valid errors
patch 8.1.0621: terminal debugger does not handle unexpected debugger exit
patch 8.1.0620: overuling CONF_ARGS from the environment no longer works
patch 8.1.0619: :echomsg and :echoerr do not handle List and Dict
patch 8.1.0618: term_getjob() does not return v:null as documented
patch 8.1.0617: NSIS installer gets two files from the wrong directory
patch 8.1.0616: NSIS installer is outdated
patch 8.1.0615: get_tv function names are not consistent
patch 8.1.0614: placing signs can be complicated
patch 8.1.0613: when executing an insecure function the secure flag is stuck
patch 8.1.0612: cannot use two global runtime dirs with configure
patch 8.1.0611: crash when using terminal with long composing characters
patch 8.1.0610: MS-Windows ctags file list differs from Unix
patch 8.1.0609: MS-Windows: unused variable, depending on the Ruby version
patch 8.1.0608: coverals is not updating
patch 8.1.0607: proto files are not in sync with the source code
Update runtime files.
patch 8.1.0606: 'cryptmethod' defaults to a very old method
patch 8.1.0605: running make in the top directory echoes a comment
patch 8.1.0604: autocommand test fails on MS-Windows
patch 8.1.0603: the :stop command is not tested
patch 8.1.0602: DirChanged is also triggered when directory didn't change
patch 8.1.0601: a few compiler warnings
patch 8.1.0600: channel test is flaky
patch 8.1.0599: without the +eval feature the indent tests don't work
patch 8.1.0598: indent tests may use the wrong Vim binary
patch 8.1.0597: cannot run test_libvterm from the top directory
patch 8.1.0596: not all parts of printf() are tested
patch 8.1.0595: libvterm tests are not run with coverage
patch 8.1.0594: libvterm tests fail to run on Mac
patch 8.1.0593: illegal memory access in libvterm test
patch 8.1.0592: the libvterm tests are not run as part of Vim tests
patch 8.1.0591: channel sort test is flaky
patch 8.1.0590: when a job ends the closed channels are not handled
patch 8.1.0589: compilation error in gvimext.cpp
patch 8.1.0588: cannot define a sign with space in the text
patch 8.1.0587: GvimExt: realloc() failing is not handled properly
patch 8.1.0586: :digraph output is not easy to read
patch 8.1.0585: undo test may fail on MS-Windows
patch 8.1.0584: with search CTRL-L does not pick up composing characters
patch 8.1.0583: using illogical name for get_dict_number()/get_dict_string()
patch 8.1.0582: text properties are not enabled
patch 8.1.0581: double free without the text properties feature
patch 8.1.0580: invalid memory access when using text properties
patch 8.1.0579: cannot attach properties to text
patch 8.1.0578: cannot disable arabic, rightleft and farsi in configure
patch 8.1.0577: tabpage right-click menu never shows "Close tab"
patch 8.1.0576: indent script tests pick up installed scripts
Update runtime files.
patch 8.1.0575: Termdebug: clearing multi-breakpoint does not work
patch 8.1.0574: 'commentstring' not used when adding fold marker in C
patch 8.1.0573: cannot redefine user command without ! in same script
patch 8.1.0572: stopping a job does not work properly on OpenBSD
patch 8.1.0571: non-silent execute() resets display column to zero
patch 8.1.0570: 'commentstring' not used when adding fold marker
patch 8.1.0569: execute() always resets display column to zero
patch 8.1.0568: error message for NUL byte in ScreenLines breaks Travis CI
patch 8.1.0567: error for NUL byte in ScreenLines goes unnoticed
patch 8.1.0566: SGR not enabled for mintty because $TERM is "xterm"
patch 8.1.0565: asan complains about reading before allocated block
patch 8.1.0564: setting v:errors to wrong type still possible
patch 8.1.0563: setting v:errors to a string give confusing error
patch 8.1.0562: parsing of 'diffopt' is slightly wrong
patch 8.1.0561: MSCV error format has changed
patch 8.1.0560: cannot use address type "other" with with user command
patch 8.1.0559: command line completion not sufficiently tested
patch 8.1.0558: some MS-Windows instructions are outdated
patch 8.1.0557: Termdebug: gdb may use X.Y for breakpoint number
patch 8.1.0556: saving/restoring search patterns share saved last_idx
patch 8.1.0555: crash when last search pat is set but not last substitute pat
patch 8.1.0554: popup menu overlaps with preview window
patch 8.1.0553: it is not easy to edit a script that was sourced
patch 8.1.0552: saved last search pattern may not be restored
patch 8.1.0551: expression evaluation may repeat an error message
patch 8.1.0550: expression evaluation may repeat an error message
patch 8.1.0549: netbeans test depends on README.txt contents
patch 8.1.0548: crash when job callback unloads a buffer
patch 8.1.0547: modeline test with keymap still fails
patch 8.1.0546: modeline test with keymap fails
patch 8.1.0545: when executing indent tests user preferences interfere
Update runtime files
patch 8.1.0544: setting 'filetype' in a modeline causes an error
patch 8.1.0543: Coverity warns for leaking memory and using wrong struct
patch 8.1.0542: shiftwidth() does not take 'vartabstop' into account
patch 8.1.0541: help message in dosinst.c is outdated
patch 8.1.0540: may evaluate insecure value when appending to option
patch 8.1.0539: cannot build without the sandbox
patch 8.1.0538: evaluating a modeline might invoke using a shell command
patch 8.1.0537: ui_breakcheck() may be called recursively
patch 8.1.0536: file time test fails when using NFS
patch 8.1.0535: increment/decrement might get interrupted by updating folds
patch 8.1.0534: MS-Windows installer uses different $HOME than Vim
patch 8.1.0533: screendump tests can be flaky
patch 8.1.0532: cannot distinguish between quickfix and location list
patch 8.1.0531: flaky tests often fail with a common error message
patch 8.1.0530: channel and terminal tests that start a server can be flaky
patch 8.1.0529: flaky test sometimes fails in different ways
patch 8.1.0528: various typos in comments
Update runtime files.
patch 8.1.0527: using 'shiftwidth' from wrong buffer for folding
patch 8.1.0526: running out of signal stack in RealWaitForChar
patch 8.1.0525: terminal test skips part on Windows
patch 8.1.0524: terminal test fails on Windows
patch 8.1.0523: opening window from quickfix leaves empty buffer behind
patch 8.1.0522: :terminal does not show trailing empty lines
patch 8.1.0521: cannot build with +eval but without +quickfix
patch 8.1.0520: screen diff test sometimes fails
patch 8.1.0519: cannot save and restore the tag stack
patch 8.1.0518: Test_window_split_edit_bufnr() fails on AppVeyor
patch 8.1.0517: Test_window_split_edit_alternate() fails on AppVeyor
patch 8.1.0516: :move command marks buffer modified when nothing changed
patch 8.1.0515: reloading a script gives errors for existing functions
patch 8.1.0514: CTRL-W ^ does not work when alternate buffer has no name
patch 8.1.0513: no error for set diffopt+=algorithm:
patch 8.1.0512: 'helplang' default is inconsistent for C and C.UTF-8
patch 8.1.0511: ml_get error when calling a function with a range
Update runtime files
patch 8.1.0510: filter test fails when $LANG is C.UTF-8
patch 8.1.0509: checking cwd not accessible fails for root
patch 8.1.0508: suspend test fails when run by root
patch 8.1.0507: .raml files not properly detected
patch 8.1.0506: modeline test fails when run by root
patch 8.1.0505: filter command test may fail if helplang is not set
patch 8.1.0504: when CTRL-C is mapped it triggers InsertLeave
patch 8.1.0503: missing change to diff test
patch 8.1.0502: internal diff fails when diffing a context diff
patch 8.1.0501: cppcheck warns for using array index before bounds check
patch 8.1.0500: cleaning up in src/tee may not always work
patch 8.1.0499: :2vimgrep causes an ml_get error
patch 8.1.0498: /etc/gitconfig not recognized at a gitconfig file
patch 8.1.0497: :%diffput changes order of lines
patch 8.1.0496: no tests for indent files
patch 8.1.0495: :filter only supports some commands
patch 8.1.0494: functions do not check for a window ID in other tabs
patch 8.1.0493: argv() and argc() only work on the current argument list
patch 8.1.0492: "Edit with existing Vim" list can get long
patch 8.1.0491: if a terminal dump has CR it is considered corrupt
patch 8.1.0490: MS-Windows: doesn't handle missing glibwinpthread-1.dll
patch 8.1.0489: crash when autocmd clears vimpgrep location list
patch 8.1.0488: using freed memory in quickfix code
patch 8.1.0487: no menus specifically for the terminal window
patch 8.1.0486: can't build in MS-Windows
patch 8.1.0485: term_start() does not check if directory is accessible
patch 8.1.0484: some file types are not recognized
Update runtime files
patch 8.1.0483: MinGW does not build tee.exe
patch 8.1.0482: MinGW "make clean" deletes all .exe files
patch 8.1.0481: when "Terminal" highlight is reverted cursor doesn't show
patch 8.1.0480: MinGW build file uses different -I flags than MVC
patch 8.1.0479: failure when setting 'varsofttabstop' to end in a comma
patch 8.1.0478: cannot build with perl using MinGW
patch 8.1.0477: tiny build fails
patch 8.1.0476: memory leaks in test_escaped_glob
patch 8.1.0475: memory not freed on exit when quit in autocmd
patch 8.1.0474: directory where if_perl.c is written is inconsistent
patch 8.1.0473: user doesn't notice file does not exist when swap file does
patch 8.1.0472: dosinst command has a few flaws
patch 8.1.0471: some tests are flaky or fail on some systems
patch 8.1.0470: pointer ownership around fname_expand() is unclear
patch 8.1.0469: too often indexing in qf_lists[]
patch 8.1.0468: MS-Windows: filter command with pipe character fails
patch 8.1.0467: cannot build with Mac OS X 10.5
patch 8.1.0466: autocmd test fails
patch 8.1.0465: client-server test fails
patch 8.1.0464: MS-Windows: job_info() has cmd without backslashes
patch 8.1.0463: "simalt ~x" in .vimrc blocks swap file prompt
patch 8.1.0462: when using ConPTY Vim can be a child process
patch 8.1.0461: quickfix code uses too many /* */ comments
patch 8.1.0460: assert_fails() does not take a message argument
patch 8.1.0459: Test_executable fails when there is a dog in the system
patch 8.1.0458: ml_get error and crash when using "do"
patch 8.1.0457: win32 console: key mappings don't work
patch 8.1.0456: running test hangs when the input file is being edited
patch 8.1.0455: checking for empty quickfix stack is not consistent
patch 8.1.0454: resolve() was not tested with a symlink cycle
patch 8.1.0453: MS-Windows: executable() is not reliable
patch 8.1.0452: MS-Windows: not finding intl.dll
patch 8.1.0451: Win32 console: keypad keys don't work
patch 8.1.0450: build failure without the +fold feature
patch 8.1.0449: when 'rnu' is set folded lines are not displayed correctly
patch 8.1.0448: cursorline not removed when using 'cursorbind'
patch 8.1.0447: GUI scrollbar test fails with Athena and Motif
patch 8.1.0446: options test fails in the GUI
patch 8.1.0445: setting 'term' does not store location for termcap options
patch 8.1.0444: unnecessary check for NULL pointer
Update runtime files.
patch 8.1.0443: unnecessary static function prototypes
patch 8.1.0442: GUI: cursor not drawn after ":redraw | sleep"
patch 8.1.0441: build failure without command line history
patch 8.1.0440: remove() with a range not sufficiently tested
patch 8.1.0439: recursive use of getcmdline() still not protected
patch 8.1.0438: the ex_make() function is too long
patch 8.1.0437: may access freed memory when syntax HL times out
patch 8.1.0436: can get the text of inputsecret() with getcmdline()
patch 8.1.0435: cursorline highlight not removed in some situation
patch 8.1.0434: copy_loclist() is too long
patch 8.1.0433: mapping can obtain text from inputsecret()
patch 8.1.0432: compiler warning for signed/unsigned
patch 8.1.0431: the qf_jump() function is too long
patch 8.1.0430: Xargadd file left behind after running test
patch 8.1.0429: no test for :lcd with 'shellslash'
patch 8.1.0428: the :suspend command is not tested
patch 8.1.0427: MS-Windows GUI: using invalid encoded file name
patch 8.1.0426: accessing invalid memory in SmcOpenConnection()
patch 8.1.0425: ml_get error and crash with appendbufline()
patch 8.1.0424: test output is very verbose, loading CI log is slow
patch 8.1.0423: MS-Windows: using dup-close for flushing a file
patch 8.1.0422: cannot create map file with MinGW
patch 8.1.0421: MS-Windows: Ruby path is wrong for Ruby 1.9 and later
patch 8.1.0420: generating vim.lib when using ActivePerl 5.20.3 or later
patch 8.1.0419: Cygwin: running cproto fails with -O2
patch 8.1.0418: MS-Windows: cannot separate Lua include and library dirs
patch 8.1.0417: several command line arguments are not tested
patch 8.1.0416: sort doesn't report deleted lines
patch 8.1.0415: not actually using 16 colors with vtp
patch 8.1.0414: v:option_old is cleared when using :set in OptionSet autocmd
patch 8.1.0413: test output is duplicated or missing
patch 8.1.0412: cannot build with GTK 2.4
patch 8.1.0411: renamed file missing from distribution
patch 8.1.0410: the ex_copen() function is too long
patch 8.1.0409: startup test fails on MS-Windows
patch 8.1.0408: MSVC: cannot use the "x64" native compiler option
patch 8.1.0407: quickfix code mixes using the stack and a list pointer
patch 8.1.0406: several command line arguments are not tested
patch 8.1.0405: too many #ifdefs for GTK
patch 8.1.0404: accessing invalid memory with long argument name
patch 8.1.0403: header file missing from distribution
patch 8.1.0402: the DiffUpdate event isn't triggered for :diffput
patch 8.1.0401: can't get swap name of another buffer
patch 8.1.0400: using freed memory with :diffget
patch 8.1.0399: 'hlsearch' highlight remains in other window
patch 8.1.0398: no test for -o and -O command line arguments
patch 8.1.0397: no event triggered after updating diffs
patch 8.1.0396: another compiler warning on 64-bit MS-Windows
patch 8.1.0395: compiler warning on 64-bit MS-Windows
patch 8.1.0394: diffs are not always updated correctly
patch 8.1.0393: not all white space difference options available
patch 8.1.0392: error while typing :/foo/s// with 'incsearch' enabled
patch 8.1.0391: building in a shadow directory fails
patch 8.1.0390: scrollbars are not tested
patch 8.1.0389: :behave command is not tested
patch 8.1.0388: Coverity complains about possible NULL pointer use
patch 8.1.0387: no test for 'ambiwidth' detection
patch 8.1.0386: cannot test with non-default option value
patch 8.1.0385: Coveralls badge doesn't update
patch 8.1.0384: sign ordering depends on +netbeans feature
patch 8.1.0383: missing source file rename
patch 8.1.0382: some make programs can't handle "xdiff/../"
patch 8.1.0381: variable declaration not at start of block
patch 8.1.0380: "make proto" doesn't work well
patch 8.1.0379: build dependencies are incomplete
patch 8.1.0378: CI build failure
patch 8.1.0377: xdiff doesn't use the Vim memory allocation functions
patch 8.1.0376: compiler warning for uninitialized variable
patch 8.1.0375: cannot use diff mode with Cygwin diff.exe
patch 8.1.0374: moving the cursor is slow when 'relativenumber' is set
patch 8.1.0373: screen updating still slow when 'cursorline' is set
patch 8.1.0372: screen updating slow when 'cursorline' is set
patch 8.1.0371: argument types for select() may be wrong
patch 8.1.0370: not using internal diff if 'diffopt' is not changed
patch 8.1.0369: continuation lines cannot contain comments
patch 8.1.0368: GTK code has too many #ifdefs and GTK 2.10 building fails
patch 8.1.0367: getchar(1) no longer processes pending messages
patch 8.1.0366: pieces of the xdiff code are not used
patch 8.1.0365: function profile doesn't specify where it was defined
patch 8.1.0364: compiler warning in xdiff code
patch 8.1.0363: internal diff isn't used by default as advertised
patch 8.1.0362: cannot get the script line number when executing a function
patch 8.1.0361: remote user not used for completion
patch 8.1.0360: using an external diff program is slow and inflexible
Update runtime files.
patch 8.1.0359: no clue what test failed when using a screendump twice
patch 8.1.0358: crash when using term_dumpwrite() after the job finished
patch 8.1.0357: instructions for tests are outdated
patch 8.1.0356: using :s with 'incsearch' prevents CTRL-R CTRL-W
patch 8.1.0355: incorrect adjusting the popup menu for the preview window
patch 8.1.0354: packadd test fails on MS-Windows
patch 8.1.0353: an "after" directory of a package is appended to 'rtp'
patch 8.1.0352: browsing compressed tar files does not always work
patch 8.1.0351: 'incsearch' for :/foo/s//<Esc> changes last search pattern
patch 8.1.0350: Vim may block on ch_sendraw()
patch 8.1.0349: crash when wiping buffer in a callback
patch 8.1.0348: on Travis the slowest build is run last
patch 8.1.0347: some tests fail on Solaris
Update runtime files.
patch 8.1.0346: building with Aap is outdated and unused
patch 8.1.0345: cannot get the window id associated with the location list
patch 8.1.0344: 'hlsearch' highlighting has a gap after /$
patch 8.1.0343: 'shellslash' is not used for getcwd() with local directory
patch 8.1.0342: crash when a callback deletes a window that is being used
patch 8.1.0341: :argadd in empty buffer changes the buffer name
patch 8.1.0340: no test for :spellinfo
patch 8.1.0339: wrong highlight when 'incsearch' set and cancelling :s
patch 8.1.0338: MS-Windows: VTP doesn't work properly with Powershell
patch 8.1.0337: :file fails in quickfix command
patch 8.1.0336: mkview test still fails on CI
patch 8.1.0335: mkview test fails on CI
patch 8.1.0334: 'autowrite' takes effect when buffer is not to be written
patch 8.1.0333: :mkview does not restore cursor properly after "$"
patch 8.1.0332: get Gdk-Critical error on first balloon show
Update runtime files.
patch 8.1.0331: insufficient test coverage for :mkview and :loadview
patch 8.1.0330: the qf_add_entries() function is too long
patch 8.1.0329: using inputlist() during startup results in garbage
patch 8.1.0328: inputlist() doesn't work with a timer
patch 8.1.0327: the "g CTRL-G" command isn't tested much
patch 8.1.0326: screen dump does not consider NUL and space equal
patch 8.1.0325: strings in swap file may not be NUL terminated
patch 8.1.0324: off-by-one error in cmdidx check
patch 8.1.0323: reverse order of VTP calls only needed the first time
patch 8.1.0322: Test_copy_winopt() does not restore 'hidden'
patch 8.1.0321: 'incsearch' regression: /\v highlights everything
patch 8.1.0320: too much 'incsearch' highlight for pat matching everything
patch 8.1.0319: bzero() function prototype doesn't work for Android
patch 8.1.0318: the getftype() test may fail for char devices
patch 8.1.0317: Cscope test fails when using shadow directory
patch 8.1.0316: swapinfo() test fails on Travis
patch 8.1.0315: helpgrep with language doesn't work properly
patch 8.1.0314: build failure without the +eval feature
patch 8.1.0313: information about a swap file is unavailable
patch 8.1.0312: wrong type for flags used in signal handlers
patch 8.1.0311: filtering entries in a quickfix list is not easy
patch 8.1.0310: file info msg not always suppressed with 'F' in 'shortmess'
patch 8.1.0309: profiling does not show a count for condition lines
patch 8.1.0308: a quick undo shows "1 seconds ago"
patch 8.1.0307: there is no good way to get the window layout
patch 8.1.0306: plural messages are not translated properly
patch 8.1.0305: missing support for Lua 5.4 32 bits on Unix
patch 8.1.0304: no redraw when using a STOP signal on Vim and then CONT
patch 8.1.0303: line2byte() is wrong for last line with 'noeol'
patch 8.1.0302: crash when using :suspend and "fg"
patch 8.1.0301: GTK: input method popup displayed on wrong screen.
patch 8.1.0300: the old window title might be freed twice
patch 8.1.0299: misplaced comment
patch 8.1.0298: window resize test sometimes fails on Mac
patch 8.1.0297: MS-Windows: tests fail, Vim crashes
patch 8.1.0296: command parsing for 'incsearch' is a bit ugly
patch 8.1.0295: no 'incsearch' highlighting for :vimgrep and similar
patch 8.1.0294: MS-Windows: sometimes uses short directory name
patch 8.1.0293: checks for type of stack is cryptic
patch 8.1.0292: MS-Windows: the text "self-installing" confuses some users
patch 8.1.0291: 'incsearch' highlighting not used for :sort
patch 8.1.0290: "cit" on an empty HTML tag changes the whole tag
patch 8.1.0289: cursor moves to wrong column after quickfix jump
patch 8.1.0288: quickfix code uses cmdidx too often
patch 8.1.0287: MAX is not defined everywhere
patch 8.1.0286: 'incsearch' does not apply to :smagic and :snomagic
patch 8.1.0285: compiler warning for conversion
patch 8.1.0284: 'cursorline' highlighting wrong with 'incsearch'
patch 8.1.0283: missing test dump
patch 8.1.0282: 'incsearch' does not work with command modifiers
patch 8.1.0281: parsing command modifiers is not separated
patch 8.1.0280: 'incsearch' highlighting does not work for ":g!/"
patch 8.1.0279: 'incsearch' highlighting does not skip white space
patch 8.1.0278: 'incsearch' highlighting does not accept reverse range
patch 8.1.0277: 'incsearch' highlighting wrong in a few cases
patch 8.1.0276: no test for 'incsearch' highlighting with :s
patch 8.1.0275: 'incsearch' with :s doesn't start at cursor line
patch 8.1.0274: 'incsearch' triggers on ":source"
patch 8.1.0273: invalid memory access when using 'incsearch'
Update runtime files.
patch 8.1.0272: options test fails if temp var ends in slash
patch 8.1.0271: 'incsearch' doesn't work for :s, :g or :v
patch 8.1.0270: checking for a Tab in a line could be faster
patch 8.1.0269: Ruby Kernel.#p method always returns nil
patch 8.1.0268: file type checking has too many #ifdef
patch 8.1.0267: no good check if restoring quickfix list worked
patch 8.1.0266: parsing Ex address range is not a separate function
patch 8.1.0265: the getcmdline() function is way too big
patch 8.1.0264: backup tests fail when CWD is in /tmp
patch 8.1.0263: channel log doesn't show part of channel
patch 8.1.0262: not enough testing for getftype()
patch 8.1.0261: Coverity complains about a negative array index
patch 8.1.0260: no LGTM logo in README file
patch 8.1.0259: no test for fixed quickfix issue
patch 8.1.0258: not enough testing for the CompleteDone event
patch 8.1.0257: no test for pathshorten()
patch 8.1.0256: using setline() in TextChangedI splits undo
patch 8.1.0255: backup test fails when using shadow directory
patch 8.1.0254: cannot build on MS-Windows; unused macro HAVE_HANDLE_DROP
patch 8.1.0253: saving and restoring window title does not always work
patch 8.1.0252: quickfix functions are too long
patch 8.1.0251: using full path is not supported for 'backupdir'
patch 8.1.0250: MS-Windows using VTP: windows size change incorrect
patch 8.1.0249: GTK: when screen DPI changes Vim does not handle it
patch 8.1.0248: duplicated quickfix code
patch 8.1.0247: Python: error message for failing import is incorrect
patch 8.1.0246: build failure without the +eval feature
patch 8.1.0245: calling setline() in TextChangedI autocmd breaks undo
patch 8.1.0244: no redraw when using a STOP signal on Vim and then CONT
patch 8.1.0243: using :term ++close ++hidden closes a window
patch 8.1.0242: Insert mode completion may use an invalid buffer pointer
patch 8.1.0241: effect of ":tabmove N" is not clear
patch 8.1.0240: g:actual_curbuf set in wrong scope
patch 8.1.0239: now Ruby build fails on other systems
patch 8.1.0238: 'buftype' is cleared when using ":term ++hidden cat"
patch 8.1.0237: Ruby on Cygwin doesn't always work
patch 8.1.0236: Ruby build fails when ruby_intern is missing
patch 8.1.0235: more help tags that jump to the wrong location
patch 8.1.0234: incorrect reference counting in Perl interface
patch 8.1.0233: "safe" argument of call_vim_function() is always FALSE
patch 8.1.0232: Ruby error does not include backtrace
patch 8.1.0231: :help -? goes to help for -+
patch 8.1.0230: directly checking 'buftype' value
Update runtime files.
patch 8.1.0229: crash when dumping profiling data
patch 8.1.0228: dropping files is ignored while Vim is busy
patch 8.1.0227: spaces instead of tabs in makefile
patch 8.1.0226: too many #ifdefs
patch 8.1.0225: mode() does not indicate using CTRL-O from Insert mode
Update runtime files.
patch 8.1.0224: hang in bracketed paste mode when t_PE not encountered
patch 8.1.0223: completing shell command finds sub-directories in $PATH
patch 8.1.0222: errors are reported for "make install"
patch 8.1.0221: not enough testing for the Ruby interface
patch 8.1.0220: Ruby converts v:true and v:false to a number
patch 8.1.0219: expanding ## fails to escape backtick
patch 8.1.0218: cannot add matches to another window
patch 8.1.0217: compiler warning for variable set but not used
patch 8.1.0216: part of file not indented properly
patch 8.1.0215: no error if configure --with-x cannot configure X
patch 8.1.0214: +autochdir feature not reported by has() or :version
patch 8.1.0213: CTRL-W CR does not work properly in a quickfix window
patch 8.1.0212: preferred cursor column not set in interfaces
patch 8.1.0211: expanding a file name "~" results in $HOME
patch 8.1.0210: still a few K&R function declarations
patch 8.1.0209: stderr output from Ruby messes up display
patch 8.1.0208: file left behind after running individual test
patch 8.1.0207: need many menu translation files to cover regions
patch 8.1.0206: duplicate test function name
patch 8.1.0205: invalid memory access with invalid modeline
patch 8.1.0204: inputlist() is not tested
patch 8.1.0203: building with Perl 5.28 fails on Windows
patch 8.1.0202: :version always shows +packages
patch 8.1.0201: newer Python uses "importlib" instead of "imp"
Update runtime files.
patch 8.1.0200: spellbadword() not tested
patch 8.1.0199: spellbadword() does not check for caps error
patch 8.1.0198: there is no hint that syntax is disabled for 'redrawtime'
patch 8.1.0197: Windows GUI: title for search/replace is wrong
patch 8.1.0196: terminal debugger error with .gdbinit file
patch 8.1.0195: terminal debugger commands don't always work
patch 8.1.0194: possibly use of NULL pointer
patch 8.1.0193: terminal debugger buttons don't always work
patch 8.1.0192: executing regexp recursively fails with a crash
patch 8.1.0191: Perl test fails in 24 line terminal
patch 8.1.0190: Perl refcounts are wrong
patch 8.1.0189: function defined in sandbox not tested
Update runtime files.
patch 8.1.0188: no test for ":cscope add"
patch 8.1.0187: getwininfo() and win_screenpos() return different numbers
patch 8.1.0186: test for getwininfo() fails in GUI
patch 8.1.0185: running tests writes lua.vim even though it is not used
patch 8.1.0184: not easy to figure out the window layout
patch 8.1.0183: Lua API changed, breaking the build
patch 8.1.0182: Unicode standard was updated
patch 8.1.0181: memory leak with trailing characters in skip expression
patch 8.1.0180: static analysis errors in Lua interface
patch 8.1.0179: redundant condition for boundary check
patch 8.1.0178: warning for passing pointer to non-pointer argument
patch 8.1.0177: defining function in sandbox is inconsistent
patch 8.1.0176: overlapping string argument for strcpy()
patch 8.1.0175: marks test fails in very wide window
patch 8.1.0174: after paging up and down fold line is wrong
patch 8.1.0173: compiler warning on MS-Windows
patch 8.1.0172: 'viminfofile' option does not behave like a file name
patch 8.1.0171: typing CTRL-W n in a terminal window causes ml_get error
patch 8.1.0170: invalid memory use with complicated pattern
patch 8.1.0169: calling message_filtered() a bit too often
patch 8.1.0168: output of :marks is too short with multi-byte chars
patch 8.1.0167: lock flag in new dictitem is reset in many places
patch 8.1.0166: using dict_add_nr_str() is clumsy
patch 8.1.0165: :clist output can be very long
Update runtime files, add Danish translations.
patch 8.1.0164: luaeval('vim.buffer().name') returns an error
patch 8.1.0163: insufficient testing for Tcl
patch 8.1.0162: Danish and German man pages are not installed
patch 8.1.0161: buffer not updated with 'autoread' set if file was deleted
patch 8.1.0160: no Danish manual translations
patch 8.1.0159: completion for user names does not work for a prefix.
patch 8.1.0158: GUI: input() fails if CTRL-C was pressed before
patch 8.1.0157: old iTerm2 is not recognized, resulting in stray output
patch 8.1.0156: MS-Windows compiler warning
patch 8.1.0155: evim.man missing from the distribution
patch 8.1.0154: crash with "set smarttab shiftwidth=0 softtabstop=-1"
patch 8.1.0153: build with SHADOWDIR fails
patch 8.1.0152: cannot easily run individual tests on MS-Windows
patch 8.1.0151: mksession test fails on MS-Windows
patch 8.1.0150: insufficient test coverage for Tcl
patch 8.1.0149: session is wrong with multiple tabs when :lcd was used
patch 8.1.0148: memory leak when using :tcl expr command
patch 8.1.0147: compiler warning when building with Python 3.7
patch 8.1.0146: when $LANG is set the compiler test may fail
patch 8.1.0145: test with grep is failing on MS-Windows
patch 8.1.0144: the :cd command does not have good test coverage
patch 8.1.0143: matchit and matchparen don't handle E363
patch 8.1.0142: xterm and vt320 builtin termcap missing keypad keys
patch 8.1.0141: :cexpr no longer jumps to the first error
Updated runtime and language files.
patch 8.1.0140: recording into a register has focus events
patch 8.1.0139: Lua tests fail on some platforms
patch 8.1.0138: negative value of 'softtabstop' not used correctly
patch 8.1.0137: CI does not run with TCL
patch 8.1.0136: Lua tests don't cover new features
patch 8.1.0135: undo message delays screen update for CTRL-O u
patch 8.1.0134: Lua interface does not support funcref
patch 8.1.0133: tagfiles() can have duplicate entries
patch 8.1.0132: lua tests are old style
patch 8.1.0131: :profdel is not tested
patch 8.1.0130: ":profdel func" does not work if func was called already
patch 8.1.0129: still some xterm-like terminals get a stray "p"
patch 8.1.0128: building with MinGW does not work out-of-the-box
patch 8.1.0127: build failure when disabling the session feature
patch 8.1.0126: various problems with 'vartabstop'
patch 8.1.0125: virtual edit replace with multi-byte fails at end of line
patch 8.1.0124: has('vcon') returns true even for non-win32 terminal
patch 8.1.0123: MS-Windows: colors are wrong after setting 'notgc'
patch 8.1.0122: translators don't always understand the maintainer message
patch 8.1.0121: crash when using ballooneval related to 'vartabstop'
patch 8.1.0120: buffer 'modified' set even when :sort has no changes
patch 8.1.0119: failing test goes unnoticed because messages is not written
patch 8.1.0118: duplicate error message for put command
patch 8.1.0117: URL in install program still points to SourceForge
patch 8.1.0116: display problem with 'vartabstop' and 'linebreak'
patch 8.1.0115: the matchparen plugin may throw an error
patch 8.1.0114: confusing variable name
Update runtime files.
patch 8.1.0113: compiler warning for unused variable
patch 8.1.0112: no error when using bad arguments with searchpair()
patch 8.1.0111: .po files do not use recommended names
patch 8.1.0110: file name not displayed with ":file"
patch 8.1.0109: new po makefile missing from distribution
patch 8.1.0108: no Danish translations
patch 8.1.0107: Python: getting buffer option clears message
patch 8.1.0106: build fails when HAVE_DATE_TIME is undefined
patch 8.1.0105: all tab stops are the same
patch 8.1.0104: can't build without the +eval feature
patch 8.1.0103: long version string cannot be translated
patch 8.1.0102: cannot build without syntax highlighting
patch 8.1.0101: no test for getcmdwintype()
patch 8.1.0100: terminal debugger: error when setting a watch point
patch 8.1.0099: exclamation mark in error message not needed
patch 8.1.0098: segfault when pattern with \z() is very slow
patch 8.1.0097: superfluous space before exclamation mark
patch 8.1.0096: inconsistent use of the word autocommands
patch 8.1.0095: dialog for ":browse tabnew" says "new window"
patch 8.1.0094: help text "usage:" is not capatalized
patch 8.1.0093: non-MS-Windows: Cannot interrupt gdb when program is running
patch 8.1.0092: prompt buffer test fails
patch 8.1.0091: MS-Windows: Cannot interrupt gdb when program is running
patch 8.1.0090: "..." used inconsistently in a message
patch 8.1.0089: error when ending the terminal debugger
patch 8.1.0088: terminal test for stdout and stderr is a bit flaky
patch 8.1.0087: v:shell_error is always zero when using terminal for "!cmd"
patch 8.1.0086: no tests for libcall() and libcallnr()
patch 8.1.0085: no test for completing user name and language
patch 8.1.0084: user name completion does not work on MS-Windows
patch 8.1.0083: "is" and "as" have trouble with quoted punctuation
patch 8.1.0082: in terminal window, typing : at more prompt, inserts ':'
patch 8.1.0081: the terminal debugger doesn't adjust to changed 'background'
patch 8.1.0080: can't see the breakpoint number in the terminal debugger
patch 8.1.0079: superfluous space in messages
Update runtime files.
patch 8.1.0078: "..." used inconsistently in messages
patch 8.1.0077: header of README file is not nice
patch 8.1.0076: command getting cleared with CTRL-W : in a terminal window
patch 8.1.0075: no Vim logo in README file
patch 8.1.0074: crash when running quickfix tests
patch 8.1.0073: crash when autocommands call setloclist()
patch 8.1.0072: use of 'termwinkey' is inconsistent
patch 8.1.0071: terminal debugger only works with the terminal feature
patch 8.1.0070: missing part of the changes for prompt_setinterrupt()
patch 8.1.0069: cannot handle pressing CTRL-C in a prompt buffer
patch 8.1.0068: nasty autocommands can still cause using freed memory
patch 8.1.0067: syntax highlighting not working when re-entering a buffer
patch 8.1.0066: nasty autocommand causes using freed memory
patch 8.1.0065: balloon displayed at the wrong position
patch 8.1.0064: typing CTRL-W in a prompt buffer shows mode "-- --"
patch 8.1.0063: Mac: NSStringPboardType is deprecated
patch 8.1.0062: popup menu broken if a callback changes the window layout
patch 8.1.0061: window title is wrong after resetting and setting 'title'
patch 8.1.0060: crash when autocommands delete the current buffer
patch 8.1.0059: displayed digraph for "ga" wrong with 'encoding' "cp1251"
patch 8.1.0058: display problem with margins and scrolling
patch 8.1.0057: popup menu displayed wrong when using autocmd
patch 8.1.0056: crash when using :hardcopy with illegal byte
patch 8.1.0055: complete test has wrong order of arguments
patch 8.1.0054: compiler warning for using %ld for "long long"
patch 8.1.0053: first argument of 'completefunc' has inconsistent type
patch 8.1.0052: when mapping to <Nop> times out the next mapping is skipped
patch 8.1.0051: MS-Windows: missing #endif
patch 8.1.0050: $VIM_TERMINAL is also set when not in a terminal window
patch 8.1.0049: shell cannot tell running in a terminal window
patch 8.1.0048: vim_str2nr() does not handle numbers close to the maximum
patch 8.1.0047: no completion for :unlet $VAR
patch 8.1.0046: loading a session file fails if 'winheight' is big
patch 8.1.0045: popup test isn't run completely
patch 8.1.0044: if a test function exists Vim this may go unnoticed
patch 8.1.0043: ++bad argument of :edit does not work properly
patch 8.1.0042: if omni completion opens a window Insert mode is stopped
patch 8.1.0041: attribute "width" missing from python window attribute list
patch 8.1.0040: warnings from 64-bit compiler
patch 8.1.0039: cannot easily delete lines in another buffer
patch 8.1.0038: popup test causes Vim to exit
patch 8.1.0037: cannot easily append lines to another buffer
patch 8.1.0036: not restoring Insert mode if leaving prompt buffer with mouse
patch 8.1.0035: not easy to switch between prompt buffer and other windows
patch 8.1.0034: cursor not restored with ":edit #"
patch 8.1.0033: keys to stop Vim in terminal are wrong
patch 8.1.0032: BS in prompt buffer starts new line
patch 8.1.0031: terminal test aucmd_on_close if flaky
patch 8.1.0030: stoping Vim running in a terminal may not work
patch 8.1.0029: terminal test fails on MS-Windows when "wc" exists
patch 8.1.0028: prompt buffer test fails on MS-Windows
patch 8.1.0027: difficult to make a plugin that feeds a line to a job
patch 8.1.0026: terminal test fails with very tall terminal
patch 8.1.0025: no test for the undofile() function
patch 8.1.0024: % command not testded on #ifdef and comment
patch 8.1.0023: gcc 8.1 warns for use of strncpy()
patch 8.1.0022: repeating put from expression register fails
patch 8.1.0021: clang warns for undefined behavior
Update runtime files.
patch 8.1.0020: cannot tell whether a register is executing or recording
patch 8.1.0019: error when defining a Lambda with index of a function result
patch 8.1.0018: using "gn" may select wrong text when wrapping
patch 8.1.0017: shell command completion has duplicates
patch 8.1.0016: possible crash in term_wait()
patch 8.1.0015: cursor color wrong when closing a terminal window
patch 8.1.0014: qf_init_ext() is too long
patch 8.1.0013: using freed memory when changing terminal cursor color
patch 8.1.0012: misplaced #endif
patch 8.1.0011: maparg() and mapcheck() confuse empty and non-existing
patch 8.1.0010: efm_to_regpat() is too long
patch 8.1.0009: tabpages insufficiently tested
patch 8.1.0008: no test for strwidth()
patch 8.1.0007: no test for "o" and "O" in Visual block mode
patch 8.1.0006: syn_id2cterm_bg() may be undefined
patch 8.1.0005: test for :compiler command fails on MS-Windows
patch 8.1.0004: test for :compiler command sometimes fails
patch 8.1.0003: the :compiler command is not tested
patch 8.1.0002: :stopinsert changes the message position
Runtime file and translation updates.
patch 8.1.0001: the netrw plugin does not work
Vim 8.1 release
patch 8.0.1850: todo items in source code not visible for users
Updated runtime files.
patch 8.0.1849: compiler warning for unused arguments, missing prototype
patch 8.0.1848: 'termwinscroll' does not work properly
patch 8.0.1847: some build options don't have an example
patch 8.0.1846: Python interface is incompatible with lldb
patch 8.0.1845: various comment updates needed, missing white space
patch 8.0.1844: superfluous quickfix code, missing examples
patch 8.0.1843: entry for 'wrap' in options window is wrong
patch 8.0.1842: popup menu inside terminal window isn't cleared
patch 8.0.1841: HP-UX does not have setenv()
patch 8.0.1840: getwinpos() is not tested
patch 8.0.1839: script to check .po file doesn't check for plural header
Updated runtime files
patch 8.0.1838: cursor in wrong pos when switching to Terminal-Normal mode
patch 8.0.1837: one character cmdline abbreviation not triggered after '<,'>
patch 8.0.1836: buffer-local window options may not be recent
patch 8.0.1835: print document name does not support multi-byte
patch 8.0.1834: GUI: find/replace dialog does not handle some chars
patch 8.0.1833: X11: ":echo 3.14" gives E806
patch 8.0.1832: cannot use :unlet for an environment variable
patch 8.0.1831: sometimes the quickfix title is incorrectly prefixed with ':'
patch 8.0.1830: switching to Terminal-Normal mode does not redraw
patch 8.0.1829: MS-Windows: script for vimdiff can't handle ! chars
patch 8.0.1828: get no clue why :gui does not fork
patch 8.0.1827: compiler warning for signed/unsigned char pointers
Update runtime files.
patch 8.0.1826: configure uses old compiler flag
patch 8.0.1825: might use NULL pointer when out of memory
patch 8.0.1824: Coverity warns for variable that may be uninitialized
patch 8.0.1823: test for terminal stdout redirection is flaky
patch 8.0.1822: make uninstall does not remove colors/tools
patch 8.0.1821: cursor in terminal window moves when pressing CTRL-W
patch 8.0.1820: terminal window redirecting stdout does not show stderr
patch 8.0.1819: swap file warning for file with non-existing directory
patch 8.0.1818: lines remove from wrong buffer when using terminal window
patch 8.0.1817: a timer may change v:count unexpectedly
patch 8.0.1816: no test for setcmdpos()
patch 8.0.1815: crash with terminal window and with 'lazyredraw' set
patch 8.0.1814: crash with terminal window and with 'lazyredraw' set
patch 8.0.1813: Windows installer doesn't install terminal debugger
patch 8.0.1812: the qf_jump_to_usable_window() function is too long
patch 8.0.1811: no test for winrestcmd()
patch 8.0.1810: buffer of a terminal only updated in Terminal-Normal mode
patch 8.0.1809: various typos
patch 8.0.1808: can't build without TGETENT
patch 8.0.1807: function to set terminal name is too long
patch 8.0.1806: InsertCharPre causes problems for autocomplete
patch 8.0.1805: qf_parse_line() is too long
patch 8.0.1804: using :normal in terminal window causes problems
patch 8.0.1803: warning for uninitialized variable
patch 8.0.1802: MS-Windows: terminal test fails
patch 8.0.1801: MS-Windows: redirecting terminal output does not work
patch 8.0.1800: X11: getting color is slow
Update runtime files.
patch 8.0.1799: no test for :registers command
patch 8.0.1798: MS-Windows: file considered read-only too often
patch 8.0.1797: terminal window is redrawn too often
patch 8.0.1796: GUI: click on tab fails when the focus is in a terminal
patch 8.0.1795: lose contact with jobs when :gui forks
patch 8.0.1794: duplicate term options after renaming
patch 8.0.1793: no test for "vim -g"
patch 8.0.1792: MS-Windows users expect -? to work like --help
patch 8.0.1791: using uint8_t does not work everywhere
patch 8.0.1790: 'winfixwidth' is not always respected by :close
patch 8.0.1789: BufWinEnter does not work well for a terminal window
patch 8.0.1788: tool to check a color scheme is not installed
patch 8.0.1787: cannot insert the whole cursor line
patch 8.0.1786: no test for 'termwinkey'
patch 8.0.1785: missing symbol in Win32 small build
patch 8.0.1784: gvim test gets stuck in dialog
patch 8.0.1783: cannot use 256 colors in a MS-Windows console
patch 8.0.1782: no simple way to label quickfix entries
patch 8.0.1781: file names in quickfix window are not shortened
Update runtime files and translations
patch 8.0.1780: test fails because Vim in a terminal uses wrong 'encoding'
patch 8.0.1779: deleting in a block selection causes problems
patch 8.0.1778: script to check translations does not always work
patch 8.0.1777: cannot cleanup before loading another colorscheme
patch 8.0.1776: in tests, when WaitFor() fails it doesn't say why
patch 8.0.1775: MS-Windows: warning for unused variable
patch 8.0.1774: reading very long lines can be slow
patch 8.0.1773: dialog messages are not translated
patch 8.0.1772: quickfix: mixup of FALSE and FAIL, returning -1
patch 8.0.1771: in tests, when WaitFor() fails it doesn't say why
patch 8.0.1770: assert functions don't return anything
patch 8.0.1769: repeated saving and restoring viewstate for 'incsearch'
patch 8.0.1768: SET_NO_HLSEARCH() used in a wrong way
patch 8.0.1767: with 'incsearch' text may jump up and down
patch 8.0.1766: expanding abbreviation doesn't work
patch 8.0.1765: CTRL-G j in Insert mode is incorrect when 'virtualedit' set
patch 8.0.1764: lgtm considers tutor.es to be EcmaScript
patch 8.0.1763: :argedit does not reuse an empty unnamed buffer
patch 8.0.1762: terminal debug logging is a bit complicated
patch 8.0.1761: job in terminal window with no output channel is killed
patch 8.0.1760: wrong number of arguments to vms_read()
patch 8.0.1759: memory leak from duplicate options
patch 8.0.1758: open_line() returns TRUE/FALSE for success/failure
patch 8.0.1757: unnecessary changes in libvterm
patch 8.0.1756: GUI: after prompting for a number the mouse shape is wrong
patch 8.0.1755: MS-Windows: high unicode char received as two utf-16 words
patch 8.0.1754: ex_helpgrep() is too long
patch 8.0.1753: various warnings from a static analyser
patch 8.0.1752: qf_set_properties() is to long
patch 8.0.1751: #ifdef causes bad highlighting
patch 8.0.1750: crash when clearing loccation list in autocommand
patch 8.0.1749: VMS: 100% CPU use, redefining mch_open() fails
patch 8.0.1748: CmdlineEnter command uses backslash instead of slash
patch 8.0.1747: MS-Windows: term_start() does not set job_info() cmd
patch 8.0.1746: MS-Windows: channel tests fail
patch 8.0.1745: build failure on MS-Windows
patch 8.0.1744: on some systems /dev/stdout isn't writable
patch 8.0.1743: terminal window options are named inconsistently
patch 8.0.1742: cannot get a list of all the jobs
patch 8.0.1741: MS-Windows with msys2 cannot build Ruby statically
patch 8.0.1740: warning for signed-unsigned incompatibility
Update runtime files.
patch 8.0.1739: MS-Windows with msys2 cannot build Ruby statically
patch 8.0.1738: ":args" output is hard to read
patch 8.0.1737: fchown() used when it is not supported
patch 8.0.1736: check for C99 features is incomplete
patch 8.0.1735: flexible array member feature not supported by HP-UX
patch 8.0.1734: package directory not added to 'rtp' if prefix matches
patch 8.0.1733: incomplete testing for completion fix
patch 8.0.1732: crash when terminal API call deletes the buffer
patch 8.0.1731: characters deleted on completion
patch 8.0.1730: no configure check for the used C99 features
patch 8.0.1729: no comma after last enum item
patch 8.0.1728: condition always false, useless code
patch 8.0.1727: qf_get_properties() function is too long
patch 8.0.1726: older MSVC doesn't support declarations halfway a block
patch 8.0.1725: terminal debugger doesn't handle command arguments
patch 8.0.1724: declarations cannot be halfway a block
patch 8.0.1723: using one item array size declaration is misleading
patch 8.0.1722: cannot specify a minimal size for a terminal window
patch 8.0.1721: no test for using the 'termsize' option
patch 8.0.1720: when a timer is running a terminal window may not close
patch 8.0.1719: cannot specify which Python executable configure should use
patch 8.0.1718: terminal scrollback test fails on MS-Windows
patch 8.0.1717: C89 check causes too much trouble
patch 8.0.1716: test for term_setsize() does not give a good error message
patch 8.0.1715: terminal buffer can be 1 more than 'terminalscroll' lines
patch 8.0.1714: term_setsize() does not give an error in a normal buffer
patch 8.0.1713: terminal debugger doesn't handle arguments
patch 8.0.1712: terminal scrollback is not limited
patch 8.0.1711: term_setsize() is not implemented yet
patch 8.0.1710: building with Ruby fails
patch 8.0.1709: some non-C89 code may slip through
patch 8.0.1708: mkdir with 'p' flag fails on existing directory
patch 8.0.1707: when 'wfh' is set ":bel 10new" scrolls window
patch 8.0.1706: cannot sent CTRL-\ to a terminal window
patch 8.0.1705: when making a vertical split the mode message isn't updated
patch 8.0.1704: 'backupskip' default doesn't work for Mac
patch 8.0.1703: in the tutor 'showcmd' is not set
patch 8.0.1702: leaking memory when autocommands make quickfix list invalid
patch 8.0.1701: can disable COLOR_EMOJI with MSVC but not MinGW
patch 8.0.1700: coverage statistics still don't work on coveralls
patch 8.0.1699: leftover stuff for Python 1.4
patch 8.0.1698: coverage statistics don't work on coveralls
patch 8.0.1697: various tests are still a bit flaky
patch 8.0.1696: coverage statistics don't work
patch 8.0.1695: xxd test not run on MS-Windows
patch 8.0.1694: terminal API test is a bit flaky
patch 8.0.1693: xxd is excluded from coverage statistics
patch 8.0.1692: Python may not work when using statically linked library
patch 8.0.1691: xxd test sometimes fails
patch 8.0.1690: not easy to run one test with gvim instead of vim
patch 8.0.1689: no tests for xxd
patch 8.0.1688: some macros are used without a semicolon
patch 8.0.1687: 64 bit compiler warnings
patch 8.0.1686: Python does not work when configuring with specific dir
patch 8.0.1685: can't set ANSI colors of a terminal window
patch 8.0.1684: ml_get errors when using terminal window for shell command
patch 8.0.1683: Python upgrade breaks Vim when defining PYTHON_HOME
patch 8.0.1682: auto indenting breaks inserting a block
patch 8.0.1681: the format attribute fails with MinGW
patch 8.0.1680: memory allocated by libvterm is not profiled
patch 8.0.1679: compiler warning for printf format
patch 8.0.1678: errorformat "%r" implies "%>"
patch 8.0.1677: no compiler warning for wrong format in vim_snprintf()
patch 8.0.1676: no compiler warning for wrong printf format
patch 8.0.1675: unused macro argument in libvterm
patch 8.0.1674: libvterm can't handle an OSC string split
patch 8.0.1673: terminal window tests are still a bit flaky
patch 8.0.1672: error during completion causes command to be cancelled
patch 8.0.1671: crash when passing non-dict argument as env to job_start()
patch 8.0.1670: terminal window tests are still a bit flaky
patch 8.0.1669: :vimgrep may add entries to the wrong quickfix list
patch 8.0.1668: terminal debugger: can't re-open source code window
patch 8.0.1667: terminal window tests are flaky
Update runtime files
patch 8.0.1666: % argument in ch_log() causes trouble
patch 8.0.1665: when running a terminal from the GUI 'term' is not useful
patch 8.0.1664: test failure because of not allocating enough space
patch 8.0.1663: cannot build without multi-byte feature
patch 8.0.1662: showing dump diff doesn't mention both file names
patch 8.0.1661: warnings from 64 bit compiler
patch 8.0.1660: the terminal API "drop" command doesn't support options
patch 8.0.1659: scroll events not recognized for some xterm emulators
patch 8.0.1658: capitalize argument not available in long form
patch 8.0.1657: crash when reading a channel
patch 8.0.1656: no option to have xxd produce upper case variable names
Small runtime update
patch 8.0.1655: outdated gdb message in terminal debugger unclear
Update runtime files
patch 8.0.1654: warnings for conversion of void to function pointer
patch 8.0.1653: screen dump is made too soon
patch 8.0.1652: term_dumpwrite() does not output composing characters
patch 8.0.1651: cannot filter :ls output for terminal buffers
patch 8.0.1650: too many #ifdefs
patch 8.0.1649: no completion for argument list commands
patch 8.0.1648: resource fork tool doesn't work on Python 3
patch 8.0.1647: terminal API may call any user function
patch 8.0.1646: MS-Windows: executable contains unreferenced functions
patch 8.0.1645: test for terminal response to escape sequence may fail
patch 8.0.1644: terminal API tests still fail
patch 8.0.1643: terminal API tests fail
patch 8.0.1642: running Vim in terminal fails with two windows
patch 8.0.1641: job in terminal can't communicate with Vim
patch 8.0.1640: Test_cwd() is flaky
patch 8.0.1639: libvterm code lags behind master
patch 8.0.1638: popup test fails depending on environment variable
patch 8.0.1637: no test for term_dumpdiff() options argument
patch 8.0.1636: no test for term_dumpload() and term_dumpdiff()
patch 8.0.1635: undefining _POSIX_THREADS causes problems with Python 3
patch 8.0.1634: the ex_vimgrep() function is too long
patch 8.0.1633: a TextChanged autocmd triggers when it is defined
patch 8.0.1632: in a terminal dump NUL and space are different
patch 8.0.1631: testing with Vim running in terminal is a bit flaky
patch 8.0.1630: trimming white space is not that easy
patch 8.0.1629: Mac: getpagesize() is deprecated
patch 8.0.1628: channel log doesn't mention exiting
patch 8.0.1627: compiler warning for visibility attribute not supported
patch 8.0.1626: compiler warning for possible loss of data
patch 8.0.1625: test_quotestar is flaky when run in GTK GUI
patch 8.0.1624: options for term_dumpdiff() and term_dumpload() not implemented
patch 8.0.1623: terminal kill tests are flaky
patch 8.0.1622: possible NULL pointer dereference
patch 8.0.1621: using invalid default value for highlight attribute
patch 8.0.1620: reading spell file has no good EOF detection
patch 8.0.1619: Win32 GUI: crash when winpty is not installed
patch 8.0.1618: color Grey50 is missing in the compiled-in table
patch 8.0.1617: Win32: :shell command in the GUI crashes
patch 8.0.1616: Win32: shell commands in the GUI open a new console
patch 8.0.1615: term_dumpload() does not use the right colors
Update runtime files. Convert a couple of help files to utf-8.
patch 8.0.1614: "make tags" doesn't include libvterm
patch 8.0.1613: warning for unused variable in tiny build
patch 8.0.1612: need to close terminal after shell stopped
patch 8.0.1611: CTRL-W in system terminal does not go to job
patch 8.0.1610: cannot build without GUI
patch 8.0.1609: shell commands in the GUI use a dumb terminal
patch 8.0.1608: Win32: directx not enabled by default
patch 8.0.1607: --clean loads user settings from .gvimrc
patch 8.0.1606: singular/plural variants not translated
patch 8.0.1605: terminal test is a bit flaky
patch 8.0.1604: paste test may fail if $DISPLAY is not set
patch 8.0.1603: cannot build with +terminal but without +menu
patch 8.0.1602: crash in parsing JSON
patch 8.0.1601: highlight test fails on Win32
patch 8.0.1600: crash when setting t_Co to zero when 'termguicolors' is set
patch 8.0.1599: no error message when gdb does not support debugger
patch 8.0.1598: cannot select text in a terminal with the mouse
patch 8.0.1597: autocommand events are not sorted
patch 8.0.1596: no autocommand specifically for opening a terminal window
patch 8.0.1595: no autocommand triggered before exiting
patch 8.0.1594: :conform qall not tested with active terminal window
patch 8.0.1593: :qall never exits with an active terminal window
Update runtime files.
patch 8.0.1592: terminal windows in a session are not properly restored
patch 8.0.1591: MS-Windows: when reparsing the arguments 'wildignore' matters
patch 8.0.1590: padding in list type wastes memory
patch 8.0.1589: error for setting 'modifiable' when resetting it
patch 8.0.1588: popup menu hangs after typing CTRL-C
patch 8.0.1587: inserting from the clipboard doesn't work literally
patch 8.0.1586: imactivatefunc does not work on non-GUI Mac
patch 8.0.1585: enabling beval_term feature in Win32 GUI
patch 8.0.1584: using C99 in Mac file gives compiler warning messages
patch 8.0.1583: using C99 comment
patch 8.0.1582: in the MS-Windows console mouse movement is not used
patch 8.0.1581: cannot build Win32 GUI without +eval
patch 8.0.1580: FEAT_CURSORBIND and FEAT_SCROLLBIND are unused
patch 8.0.1579: virtual replace test fails in GUI
patch 8.0.1578: no test for :popup in terminal
patch 8.0.1577: virtual replace test fails on MS-Windows
patch 8.0.1576: Perl VIM::Buffers() does not find every buffer
patch 8.0.1575: crash when using virtual replace
patch 8.0.1574: show cursor in wrong place when using popup menu
patch 8.0.1573: getwinpos(1) may cause response to be handled as command
patch 8.0.1572: Mac: getting memory size doesn't work everywhere
patch 8.0.1571: can't build without GUI
patch 8.0.1570: can't use :popup for a menu in the terminal
patch 8.0.1569: warning for uninitialized variable from gcc
patch 8.0.1568: can't build on older Mac, header file is missing
patch 8.0.1567: cannot build Win32 GUI without IME
patch 8.0.1566: too many #ifdefs
patch 8.0.1565: can't build Mac version without GUI
patch 8.0.1564: too many #ifdefs
patch 8.0.1563: timeout of getwinposx() can be too short
patch 8.0.1562: the terminal debugger can't set a breakpoint with the mouse
patch 8.0.1561: crash with rust syntax highligting
patch 8.0.1560: build failure without GUI on MS-Windows
patch 8.0.1559: build failure without GUI
patch 8.0.1558: no right-click menu in a terminal
patch 8.0.1557: printf() does not work with only one argument
patch 8.0.1556: may not parse the t_RS response correctly
patch 8.0.1555: build error for some combination of features
patch 8.0.1554: custom plugins loaded with --clean
patch 8.0.1553: cannot see what digraph is used to insert a character
patch 8.0.1552: may leak file descriptors when executing job
patch 8.0.1551: on Mac 'maxmemtot' is set to a weird value
patch 8.0.1550: various small problems in source files
patch 8.0.1549: various small problems in test files
Include Serbian spell input files
patch 8.0.1548: screen dump test script not included in distribution
patch 8.0.1547: undo in the options window makes it empty
patch 8.0.1546: using feedkeys() in a terminal may trigger mappings
patch 8.0.1545: screen dumps not included in distribution
Updated runtime files.
patch 8.0.1544: when using 'termguicolors' SpellBad doesn't show
patch 8.0.1543: with 'termguicolors' Normal color doesn't work correctly
patch 8.0.1542: terminal screen dump does not include cursor position
patch 8.0.1541: synpat_T is taking too much memory
patch 8.0.1540: popup menu positioning fails with longer string
patch 8.0.1539: no test for the popup menu positioning
patch 8.0.1538: popupmenu is too far left when completion is long
patch 8.0.1537: xxd does not skip NUL lines when using ebcdic
patch 8.0.1536: quotestar test is flaky when using the GUI
patch 8.0.1535: C syntax test still fails when using gvim
patch 8.0.1534: C syntax test fails when using gvim
patch 8.0.1533: libterm doesn't support requesting fg and bg color
patch 8.0.1532: compiler warnings without termguicolors feature
patch 8.0.1531: cannot use 24 bit colors in MS-Windows console
patch 8.0.1530: dump test fails when using a shadow directory
patch 8.0.1529: assert_equalfile() does not close file descriptors
patch 8.0.1528: dead code found
patch 8.0.1527: screen dump test fails on MS-Windows
patch 8.0.1526: no test using a screen dump yet
patch 8.0.1525: using :wqa exits even if a job runs in a terminal window
patch 8.0.1524: compiler warnings for uninitialized variables
patch 8.0.1523: cannot write and read terminal screendumps
patch 8.0.1522: popup menu is positioned in the wrong place
patch 8.0.1521: Shift-Tab does not work in a terminal window
patch 8.0.1520: cursor in wrong line when using a WinBar in Terminal window
patch 8.0.1519: getchangelist() does not use argument as bufname()
patch 8.0.1518: error messages suppressed after ":silent! try"
patch 8.0.1517: invalid memory acces with pattern using look-behind match
patch 8.0.1516: errors for job options are not very specific
patch 8.0.1515: BufWinEnter event fired when opening hidden terminal
patch 8.0.1514: getting the list of changes is not easy
patch 8.0.1513: the jumplist is not always properly cleaned up
patch 8.0.1512: warning for possibly using NULL pointer
patch 8.0.1511: some code for the debugger watch expression is clumsy
patch 8.0.1510: cannot test if a command causes a beep
patch 8.0.1509: test for failing drag-n-drop command no longer fails
patch 8.0.1508: the :drop command is not always available
patch 8.0.1507: timer test is a bit flaky
patch 8.0.1506: new version of HP NonStop (Tandem) doesn't like a header
patch 8.0.1505: debugger can't break on a condition
patch 8.0.1504: Win32: the screen may be cleared on startup
patch 8.0.1503: access memory beyond end of string
patch 8.0.1502: in out-of-memory situation character is not restored
patch 8.0.1501: out-of-memory situation not correctly handled
patch 8.0.1500: possible NULL pointer dereference
patch 8.0.1499: out-of-memory situation not correctly handled
patch 8.0.1498: getjumplist() returns duplicate entries
patch 8.0.1497: getting the jump list requires parsing the output of :jumps
patch 8.0.1496: clearing a pointer takes two lines
patch 8.0.1495: having 'pumwidth' default to zero has no merit
patch 8.0.1494: no autocmd triggered in Insert mode with visible popup menu
patch 8.0.1493: completion items cannot be annotated
patch 8.0.1492: memory leak in balloon_split()
patch 8.0.1491: the minimum width of the popup menu is hard coded
patch 8.0.1490: number of spell regions is spread out through the code
Update runtime files.
patch 8.0.1489: there is no easy way to get the global directory
patch 8.0.1488: emacs tags no longer work
patch 8.0.1487: test 14 fails
patch 8.0.1486: accessing invalid memory with "it"
patch 8.0.1485: weird autocmd may cause arglist to be changed recursively
patch 8.0.1484: reduntant conditions
patch 8.0.1483: searchpair() might return an invalid value on timeout
patch 8.0.1482: using feedkeys() does not work to test completion
patch 8.0.1481: clearing a pointer takes two lines
patch 8.0.1480: patch missing change
patch 8.0.1479: insert mode completion state is confusing
patch 8.0.1478: unnecessary condition
patch 8.0.1477: redraw flicker when moving the mouse outside of terminal window
patch 8.0.1476: screen isn't always updated right away
patch 8.0.1475: invalid memory access in read_redo()
patch 8.0.1474: Visual C 2017 has multiple MSVCVER numbers
patch 8.0.1473: MS-Windows: D&D fails between 32 and 64 bit apps
patch 8.0.1472: MS-Windows: nsis installer is a bit slow
patch 8.0.1471: on MS-Windows CursorIM highlighting no longer works
patch 8.0.1470: integer overflow when using regexp pattern
patch 8.0.1469: when package path is a symlink 'runtimepath' is wrong
patch 8.0.1468: illegal memory access in del_bytes()
patch 8.0.1467: libvterm doesn't handle illegal byte sequence correctly
patch 8.0.1466: older GTK versions don't have gtk_entry_get_text_length()
patch 8.0.1465: python2 and python3 detection not tested
patch 8.0.1464: completing directory after :find does not add slash
patch 8.0.1463: test fails without 'autochdir' option
patch 8.0.1462: missing yet another file in patch
patch 8.0.1461: missing another file in patch
patch 8.0.1460: missing file in patch
patch 8.0.1459: cannot handle change of directory
patch 8.0.1458: filetype detection test does not check all scripts
patch 8.0.1457: clojure now supports a shebang line
patch 8.0.1456: timer test on travis Mac is still flaky
patch 8.0.1455: if $SHELL contains a space then 'shell' is incorrect
patch 8.0.1454: when in silent mode too much output is buffered
patch 8.0.1453: terminal test fails on some slow terminals
patch 8.0.1452: terminal test fails on some systems
patch 8.0.1451: difficult to set the python home directories properly
patch 8.0.1450: GUI: endless loop when stopping cursor blinking
patch 8.0.1449: slow redrawing with DirectX
patch 8.0.1448: segfault with exception inside :rubyfile command
patch 8.0.1447: still too many old style tests
patch 8.0.1446: acessing freed memory after window command in auto command
patch 8.0.1445: cannot act on edits in the command line
patch 8.0.1444: missing -D_FILE_OFFSET_BITS=64 may cause problems
patch 8.0.1443: compiler complains about uninitialized variable
patch 8.0.1442: using pointer before it is set
patch 8.0.1441: using ":undo 0" leaves undo in wrong state
patch 8.0.1440: terminal window: some vterm responses are delayed
patch 8.0.1439: if cscope fails a search Vim may hang
patch 8.0.1438: filetype detection test not updated for change
patch 8.0.1437: pkg-config doesn't work with cross compiling
Update runtime files.
patch 8.0.1436: not enough information about what Python version may work
patch 8.0.1435: memory leak in test_arabic
patch 8.0.1434: GTK: :promtfind does not put focus on text input
patch 8.0.1433: illegal memory access after undo
patch 8.0.1432: after ":copen" can't get the window-ID of the quickfix window
patch 8.0.1431: MS-Windows: vimtutor fails if %TMP% has special chars
patch 8.0.1430: crash when term_start() fails
patch 8.0.1429: crash when calling term_start() with empty argument
patch 8.0.1428: compiler warning on 64 bit MS-Windows system
patch 8.0.1427: the :leftabove modifier doesn't work for :copen
patch 8.0.1426: "gf" and <cfile> don't accept ? and & in URL
patch 8.0.1425: execute() does not work in completion of user command
update a few runtime files
patch 8.0.1424: the timer_pause test is flaky on Travis
patch 8.0.1423: error in return not caught by try/catch
patch 8.0.1422: no fallback to underline when undercurl is not set
patch 8.0.1421: accessing invalid memory with overlong byte sequence
patch 8.0.1420: accessing freed memory in vimgrep
patch 8.0.1419: cursor column is not updated after ]s
patch 8.0.1418: no test for expanding backticks
patch 8.0.1417: test doesn't search for a sentence
patch 8.0.1416: crash when searching for a sentence
patch 8.0.1415: warning for unused function without timers feature
patch 8.0.1414: accessing freed memory in :lfile.
patch 8.0.1413: accessing freed memory in :cbuffer
patch 8.0.1412: using free memory using setloclist()
patch 8.0.1411: reading invalid memory with CTRL-W :
patch 8.0.1410: hang when using count() with an empty string
patch 8.0.1409: buffer overflow in :tags command
patch 8.0.1408: crash in setqflist()
patch 8.0.1407: GUI: CursorHold may trigger before 'updatetime'
patch 8.0.1406: difficult to track changes to a quickfix list
patch 8.0.1405: duplicated code for getting a typed character
patch 8.0.1404: invalid memory access on exit
patch 8.0.1403: using freed buffer in grep command
patch 8.0.1402: crash with nasty autocommand
patch 8.0.1401: cannot build with GTK but without XIM
Update runtime files
patch 8.0.1400: color scheme check script shows up as color scheme
patch 8.0.1399: warnings and errors when building tiny version
patch 8.0.1398: :packadd does not load packages from the "start" directory
patch 8.0.1397: pattern with \& following nothing gives an error
patch 8.0.1396: memory leak when CTRL-G in search command line fails
patch 8.0.1395: it is not easy to see if a colorscheme is well written
patch 8.0.1394: cannot intercept a yank command
patch 8.0.1393: too much highlighting with 'hlsearch' and 'incsearch' set
patch 8.0.1392: build fails with --with-features=huge --disable-channel
patch 8.0.1391: encoding empty string to JSON sometimes gives "null"
move netrw back to the previous version
patch 8.0.1390: DirectX scrolling can be slow, vertical positioning is off
patch 8.0.1389: getqflist() items are missing if not set
patch 8.0.1388: char not overwritten with ambiguous width char
patch 8.0.1387: wordcount test is old style
patch 8.0.1386: cannot select modified buffers with getbufinfo()
patch 8.0.1385: Python 3.5 is getting old
patch 8.0.1384: not enough quickfix help; confusing winid
patch 8.0.1383: local additions in help skips some files
patch 8.0.1382: get "no write since last change" message if terminal is open
patch 8.0.1381: ch_readraw() waits for NL if channel mode is NL
patch 8.0.1380: using "vim -r swapfile" the hit-enter prompt is misplaced.
patch 8.0.1379: configure check for selinux does not check for header file
patch 8.0.1378: autoload script sources itself when defining function
patch 8.0.1377: cannot call a dict function in autoloaded dict
patch 8.0.1376: cursor in terminal not always updated
patch 8.0.1375: window size wrong after maximizing with WinBar
patch 8.0.1374: CTRL-A does not work with an empty line
patch 8.0.1373: no error when settting 'renderoptions' before starting GUI
patch 8.0.1372: profile log may be truncated halfway a character
patch 8.0.1371: Shift-Insert doesn't always work in MS-Windows console
patch 8.0.1370: channel test for callback is flaky
patch 8.0.1369: MS-Windows: drawing underline slow, mFallbackDC not updated
patch 8.0.1368: cannot drag status or separator of new terminal window
patch 8.0.1367: terminal test hangs, executing abcde
patch 8.0.1367
patch 8.0.1365: when one channel test fails others fail as well
patch 8.0.1364: there is no easy way to get the window position
patch 8.0.1363: recovering does not work when swap file ends in .stz
patch 8.0.1362: terminal window colors wrong when using Terminal highlighting
patch 8.0.1361: some users don't want to diff with hidden buffers
patch 8.0.1360: the Terminal highlighting doesn't work in a terminal
Update runtime files
patch 8.0.1359: libvterm ANSI colors can not always be recognized
patch 8.0.1358: undercurl is not used in the terminal
patch 8.0.1357: startup test fails on OpenBSD
patch 8.0.1356: using simalt in a GUIEnter autocommand inserts characters
patch 8.0.1355: cursor keys don't work in MS-Windows console
patch 8.0.1354: Shift-Insert doesn't always work in MS-Windows console
patch 8.0.1352: dead URLs in the help go unnoticed
patch 8.0.1351: warning for unused variables building with MinGW
patch 8.0.1350: cannot build with +eval and -multi_byte
patch 8.0.1349: options test fails when using Motif or GTK GUI
patch 8.0.1348: make testclean deletes script file on MS-Windows
patch 8.0.1347: MS-Windows: build broken by misplaced curly
patch 8.0.1346: crash when passing 50 char string to balloon_split()
patch 8.0.1345: race condition between stat() and open() for viminfo
patch 8.0.1344: using 'imactivatefunc' in the GUI does not work
patch 8.0.1343: MS-Windows: does not show colored emojis
patch 8.0.1342: cannot build with Motif and multi-byte
patch 8.0.1341: 'imactivatefunc' test fails on MS-Windows
patch 8.0.1340: MS-Windows: cannot build GUI without IME
patch 8.0.1339: no test for what 8.0.1335 fixes
patch 8.0.1338: USE_IM_CONTROL is confusing and incomplete
patch 8.0.1337: typo in #ifdef
patch 8.0.1336: cannot use imactivatefunc() unless compiled with +xim
patch 8.0.1335: writefile() using fsync() may give an error.
patch 8.0.1334: splitting a window with a WinBar damages window layout
patch 8.0.1333: some tests are run twice
patch 8.0.1332: highlighting in quickfix window could be better
patch 8.0.1331: possible crash when window can be zero lines high
Update runtime files.
patch 8.0.1330: MS-Windows: job in terminal can't get back to Vim
patch 8.0.1329: when a flaky test fails it also often fails the second time
patch 8.0.1328: trouble when using ":term ++close" with autocmd
patch 8.0.1327: new proto file missing from distribution
patch 8.0.1326: largefile test fails on CI, glob test on MS-Windows
patch 8.0.1325: more tests are not run
patch 8.0.1324: some xterm sends different mouse move codes
patch 8.0.1323: mouse events in a terminal window may cause endless loop
patch 8.0.1322: textformat test isn't run
patch 8.0.1321: can't build huge version with Athena
patch 8.0.1320: popup test fails on GUI-only build
patch 8.0.1319: can't build GUI on MS-Windows
patch 8.0.1318: terminal balloon only shows one line
patch 8.0.1317: accessing freed memory in term_wait()
patch 8.0.1316: build still still fails on Mac
patch 8.0.1315: build still fails on Mac
patch 8.0.1314: build fails on Mac
patch 8.0.1313: missing dependencies cause parallel make to fail
patch 8.0.1312: balloon_show() only works in terminal when compiled with GUI
patch 8.0.1311: no test for strpart()
patch 8.0.1310: cproto generates errors because of missing type
patch 8.0.1309: cannot use 'balloonexpr' in a terminal
patch 8.0.1308: the "Reading from stdin" message may be undesired
patch 8.0.1307: compiler warning for ignoring return value
patch 8.0.1306: ASAN error stack trace is not useful
patch 8.0.1305: writefile() never calls fsync()
patch 8.0.1304: CTRL-G/CTRL-T don't work with incsearch and empty pattern
patch 8.0.1303: 'ttymouse' is not set to "sgr" for Terminal.app and Iterm2
patch 8.0.1302: still too many old style tests
patch 8.0.1301: generated license file for NSIS has a modeline
patch 8.0.1300: file permissions may end up wrong when writing
patch 8.0.1299: bracketed paste does not work well in terminal window
patch 8.0.1298: missing test file
patch 8.0.1297: +autoservername does not show enabled on MS-Windows
patch 8.0.1296: checking the same condition twice
patch 8.0.1295: cannot automatically get a server name in a terminal
patch 8.0.1294: GUI: get stuck when splitting a terminal window
patch 8.0.1293: setting a breakpoint in the terminal debugger sometimes fails
patch 8.0.1292: quick clicks in the WinBar start Visual mode
patch 8.0.1291: C indent wrong when * immediately follows comment
patch 8.0.1290: seq_cur of undotree() wrong after undo
Update runtime files.
patch 8.0.1289: mkview always includes the local directory
patch 8.0.1288: GUI: cannot drag the statusline of a terminal window
patch 8.0.1287: temp file used for viminfo may have wrong permissions
patch 8.0.1286: occasional crash when using a channel
patch 8.0.1285: occasional crash when using a channel
patch 8.0.1284: loading file type detection slows down startup
patch 8.0.1283: test 86 fails under ASAN
patch 8.0.1282: script-local variable defined in the wrong script
patch 8.0.1281: loading file type detection slows down startup
patch 8.0.1280: Python None cannot be converted to a Vim type
patch 8.0.1279: initializing menus can be slow
patch 8.0.1278: GUI window always resizes when adding scrollbar
patch 8.0.1277: terminal window CR-NL conversions may cause problems
patch 8.0.1276: key lost when window closed in exit callback
patch 8.0.1275: CmdlineLeave autocmd prevents fold from opening
patch 8.0.1274: setbufline() fails when using folding
patch 8.0.1273: old test file remaining
patch 8.0.1272: warnings for unused variables in tiny build
patch 8.0.1271: still too many old style tests
patch 8.0.1270: mismatching file name with Filelist
Update runtime files.
patch 8.0.1269: effect of autocommands on marks is not tested
patch 8.0.1268: PC install instructions are incomplete
patch 8.0.1267: Test_swap_group may leave file behind
patch 8.0.1266: Test_swap_directory was commented out
patch 8.0.1265: swap test not skipped when there is one group
patch 8.0.1264: terminal debugger gets stuck in small window
patch 8.0.1263: others can read the swap file if a user is careless
patch 8.0.1262: terminal redir test is flaky
patch 8.0.1261: program in terminal window gets NL instead of CR
patch 8.0.1260: using global variables for WaitFor()
patch 8.0.1259: search test can be flaky
patch 8.0.1258: 'ttymouse' is set to "sgr" even though it's not supported
patch 8.0.1257: no test for fix of undefined behavior
patch 8.0.1256: typo in configure variable vim_cv_tgent
Long overdue runtime update.
patch 8.0.1255: duplicate badge README file
patch 8.0.1254: undefined left shift in gethexchrs()
patch 8.0.1253: still too many old style tests
patch 8.0.1252: incomplete translations makefile for MinGW/Cygwin
patch 8.0.1251: invalid expressin passed to WaitFor()
patch 8.0.1250: 'hlsearch' highlighting not removed after incsearch
patch 8.0.1249: no error when WaitFor() gets an invalid wrong expression
patch 8.0.1248: stray + in README file
patch 8.0.1247: not easy to find Debian build info
patch 8.0.1246: popup test has an arbitrary delay
patch 8.0.1245: when WaitFor() has a wrong expression it just waits a second
patch 8.0.1244: search test does not work correctly on MS-Windows
patch 8.0.1243: no test for what 8.0.1227 fixes
patch 8.0.1242: function argument with only dash is seen as number zero
patch 8.0.1241: popup test is flaky
patch 8.0.1240: MS-Windows: term_start() does not support environment
patch 8.0.1239: cannot use a lambda for the skip argument to searchpair()
patch 8.0.1238: incremental search only shows one match
patch 8.0.1237: ":set scroll&" often gives an error
patch 8.0.1236: Mac features are confusing
patch 8.0.1235: cannot disable the terminal feature in a huge build
patch 8.0.1234: MS-Windows: composing chars are not shown properly
patch 8.0.1233: typo in dos installer
patch 8.0.1232: MS-Windows users are confused about default mappings
patch 8.0.1231: expanding file name drops dash
patch 8.0.1230: CTRL-A in Visual mode uses character after selection
patch 8.0.1229: condition in vim_str2nr() is always true
patch 8.0.1228: invalid memory access in GUI test
patch 8.0.1227: undefined left shift in readfile()
patch 8.0.1226: edit and popup tests failing
patch 8.0.1225: no check for spell region being zero
patch 8.0.1224: still interference between test functions
patch 8.0.1223: crash when using autocomplete and tab pages
patch 8.0.1222: test functions interfere with each other
patch 8.0.1221: still too many old style tests
patch 8.0.1220: skipping empty statusline groups is not correct
patch 8.0.1219: terminal test is flaky
patch 8.0.1218: writing to freed memory in autocmd
patch 8.0.1217: can't use remote eval to inspect vars in debug mode
patch 8.0.1216: tabline is not always updated for :file command
patch 8.0.1215: newer gcc warns for implicit fallthrough
patch 8.0.1214: accessing freed memory when EXITFREE is set
patch 8.0.1213: setting 'mzschemedll' has no effect
patch 8.0.1212: MS-Windows: tear-off menu does not work on 64 bit
patch 8.0.1211: cannot reorder tab pages with drag & drop
patch 8.0.1210: CTRL-G and CTRL-T are ignored with typeahead
patch 8.0.1209: still too many old style tests
patch 8.0.1208: 'statusline' drops empty group with highlight change
patch 8.0.1207: profiling skips the first and last script line
patch 8.0.1206: no autocmd for entering or leaving the command line
patch 8.0.1205: it is possible to unload a changed buffer
patch 8.0.1204: a QuitPre autocommand may get the wrong file name
patch 8.0.1203: terminal window mistreats composing characters
patch 8.0.1202: :wall gives an errof for a terminal window
patch 8.0.1201: "yL" is affected by 'scrolloff'
patch 8.0.1200: tests switch the bell off twice
patch 8.0.1199: when 'clipboard' is "autoselectplus" star register is set
patch 8.0.1198: older compilers don't know uint8_t
patch 8.0.1197: MS-Windows build instructions are not up to date
patch 8.0.1196: crash when t_RF is not set
patch 8.0.1195: can't build on MS-Windows
patch 8.0.1194: actual fg and bg colors of terminal are unknown
patch 8.0.1193: crash when wiping out a buffer after using getbufinfo()
patch 8.0.1192: MS-Windows: terminal feature not enabled by default
patch 8.0.1191: MS-Windows: missing 32 and 64 bit files in installer
patch 8.0.1190: unusable after opening new window in BufWritePre event
patch 8.0.1189: E172 is not actually useful
patch 8.0.1188: autocmd test fails on MS-Windows
patch 8.0.1187: building with lua fails for OSX on Travis
patch 8.0.1186: still quite a few old style tests
patch 8.0.1185: Ruby library includes minor version number
patch 8.0.1184: the :marks command is not tested
patch 8.0.1183: MS-Windows build instructions are outdated
patch 8.0.1182: cannot see or change mzscheme dll name
patch 8.0.1181: tests using Vim command fail on MS-Windows
patch 8.0.1180: MS-Windows testclean target deletes the color script
patch 8.0.1179: Test_popup_and_window_resize() does not always pass
patch 8.0.1178: using old compiler on MS-Windows
patch 8.0.1177: in a terminal window the popup menu is not cleared
patch 8.0.1176: job_start() does not handle quote and backslash correctly
patch 8.0.1175: build failure without +termresponse
patch 8.0.1174: Mac Terminal.app has wrong color for white
patch 8.0.1173: terminal window is not redrawn after CTRL-L
patch 8.0.1172: when E734 is given option is still set
patch 8.0.1171: popup test is still a bit flaky
patch 8.0.1170: using termdebug results in 100% CPU time
patch 8.0.1169: highlignting one char too many with 'list' and 'cul'
patch 8.0.1168: wrong highlighting with combination of match and 'cursorline'
patch 8.0.1167: Motif: typing in terminal window is slow
patch 8.0.1166: :terminal doesn't work on Mac High Sierra
patch 8.0.1165: popup test is still flaky
patch 8.0.1164: changing StatusLine highlight does not always work
patch 8.0.1163: popup test is flaky
patch 8.0.1162: shared script for tests cannot be included twice
patch 8.0.1161: popup menu drawing problem when resizing terminal
patch 8.0.1160: getting tab-local variable fails after closing window
patch 8.0.1159: typo in #ifdef
patch 8.0.1158: still old style tests
Update runtime files
patch 8.0.1157: compiler warning on MS-Windows
patch 8.0.1156: trouble from removing one -W argument from Perl CFLAGS
patch 8.0.1155: Ruby command triggers a warning
patch 8.0.1154: 'indentkeys' does not work properly
patch 8.0.1153: no tests for diff_hlID() and diff_filler()
patch 8.0.1152: encoding of error message wrong in Cygwin terminal
patch 8.0.1151: "vim -c startinsert!" doesn't append
patch 8.0.1150: MS-Windows GUI: dialog font size is incorrect
patch 8.0.1149: libvterm colors differ from xterm
patch 8.0.1148: gN doesn't work on last match with 'wrapscan' off
patch 8.0.1147: fail to build with tiny features
patch 8.0.1146: redraw when highlight is set with same names
patch 8.0.1145: warning when compiling with Perl
patch 8.0.1144: using wrong #ifdef for computing length
patch 8.0.1143: macros always expand to the same thing
patch 8.0.1142: window toolbar menu gets a tear-off item
patch 8.0.1141: MS-Windows build dependencies are incomplete
patch 8.0.1140: still old style tests
patch 8.0.1139: using window toolbar changes state
patch 8.0.1138: click in window toolbar starts Visual mode
patch 8.0.1137: cannot build with Ruby
patch 8.0.1136: W_WIDTH() is always the same
patch 8.0.1135: W_WINCOL() is always the same
patch 8.0.1134: superfluous call to syn_get_final_id()
patch 8.0.1133: syntax timeout not used correctly
Missing part of 8.0.1131.
patch 8.0.1132: #if condition is not portable
patch 8.0.1131: not easy to trigger an autocommand for new terminal window
patch 8.0.1130: the qf_jump() function is still too long
Add back terminal.c
patch 8.0.1129: window toolbar missing a part of the patch
Update runtime files.
patch 8.0.1128: old xterm sends CTRL-X in response to t_RS
patch 8.0.1127: Test_peek_and_get_char fails on 32 bit system
patch 8.0.1126: endless resize when terminal showing in two buffers
patch 8.0.1125: wrong window height when splitting window with window toolbar
patch 8.0.1124: use of MZSCHEME_VER is unclear
patch 8.0.1123: cannot define a toolbar for a window
patch 8.0.1122: vimtutor.bat doesn't work well with vim.bat
patch 8.0.1121: can uncheck executables in MS-Windows installer
patch 8.0.1120: :tm means :tmap instead of :tmenu
patch 8.0.1119: quitting a split terminal window kills the job
patch 8.0.1118: FEAT_WINDOWS adds a lot of #ifdefs
patch 8.0.1117: Test_terminal_no_cmd hangs on MS-Windows with GUI
patch 8.0.1116: terminal test fails on MS-Windows
patch 8.0.1115: crash when using foldtextresult() recursively
patch 8.0.1114: default for 'iminsert' is annoying
patch 8.0.1113: can go to Insert mode from Terminal-Normal mode
patch 8.0.1112: can't get size or current index from quickfix list
patch 8.0.1111: syntax error in configure when using Perl
patch 8.0.1110: FORTIFY_SOURCE from Perl causes problems
patch 8.0.1109: timer causes error on exit from Ex mode
patch 8.0.1108: cannot specify mappings for the terminal window
patch 8.0.1107: terminal debugger jumps to non-existing file
patch 8.0.1106: terminal colors wrong on an MS-Windows console
patch 8.0.1105: match() and matchend() are not tested
patch 8.0.1104: the qf_jump() function is too long
patch 8.0.1103: converting cterm color fails for grey ramp
patch 8.0.1102: terminal window does not use Normal colors
patch 8.0.1101: channel write fails if writing to log fails
patch 8.0.1100: stuck in redraw loop when 'lazyredraw' is set
patch 8.0.1099: warnings for GDK calls
patch 8.0.1098: build failure if libvterm installed
patch 8.0.1097: background color wrong if job changes background color
patch 8.0.1096: terminal window in Normal mode has wrong background
patch 8.0.1095: terminal multibyte escrape test is flaky
patch 8.0.1094: using ssh from Terminal.app runs into xterm incompatibility
patch 8.0.1093: various small quickfix issues
patch 8.0.1092: terminal debugger can't evaluate expressions
patch 8.0.1091: test for <cexpr> fails without +balloon_eval feature
patch 8.0.1090: cannot get the text under the cursor like v:beval_text
patch 8.0.1089: cannot get range count in user command
patch 8.0.1088: occasional memory use after free
patch 8.0.1087: Test_terminal_cwd is flaky
patch 8.0.1086: can't build with GTK 3
patch 8.0.1085: terminal debugger can't set breakpoints
patch 8.0.1084: GTK build has compiler warnings
patch 8.0.1083: leaking memory in input part of channel
patch 8.0.1082: tests fail when run under valgrind
patch 8.0.1081: memory leak for the channel write queue
patch 8.0.1080: memory leak for eof_chars terminal option and buffer name
patch 8.0.1079: memory leak when remote_foreground() fails
patch 8.0.1078: using freed memory with ":hi Normal"
patch 8.0.1077: no debugger making use of the terminal window
patch 8.0.1076: term_start() does not take callbacks
patch 8.0.1075: MS-Windows: mouse does not work in terminal
patch 8.0.1074: ":term NONE" does not work on MS-Windows
patch 8.0.1073: may get an endless loop if 'statusline' changes a highlight
patch 8.0.1072: :highlight command causes a redraw even when nothing changed
patch 8.0.1071: putty-color and cygwin-color are not recognized
patch 8.0.1070: terminal test is flaky on Mac
patch 8.0.1069: still get CTRL-X sometimes
patch 8.0.1068: vandyke SecureCRT terminal can't handle cursor mode request
patch 8.0.1067: try/catch in timer does not prevent it from being stopped
patch 8.0.1066: some terminals can't handle requesting cursor mode
patch 8.0.1065: not all macro examples are included
patch 8.0.1064: Coverity warns for leaking resource
patch 8.0.1063: Coverity warns for NULL check and array use
patch 8.0.1062: Coverity warnings in libvterm
patch 8.0.1061: Coverity: no check for NULL command
patch 8.0.1060: when imstyle is one, mapping <Left> breaks preediting
patch 8.0.1059: older Gnome terminal returns smaller version number
patch 8.0.1058: terminal redirection test is flaky
patch 8.0.1057: terminal scrape test waits too long
patch 8.0.1056: cannot build with +diff but without +multi_byte
patch 8.0.1055: bufline test hangs on MS-Windows
patch 8.0.1054: terminal test fails on MS-Windows
patch 8.0.1053: setline() does not work on startup
patch 8.0.1052: term_start() does not allow in_io, out_io and err_io options
patch 8.0.1051: cannot run terminal with spaces in argument
patch 8.0.1050: terminal window feature not included by default
patch 8.0.1049: shell on Mac can't handle long text
patch 8.0.1048: no test for what 8.0.1020 fixes
patch 8.0.1047: buffer overflow in Ruby
patch 8.0.1046: code duplication in diff mode
patch 8.0.1045: running tests may pollute shell history
patch 8.0.1044: warning for uninitialized variable
patch 8.0.1043: warning for uninitialized variable
patch 8.0.1042: without the syntax feature highlighting doesn't work
patch 8.0.1041: bogus characters when indenting during visual-block append
patch 8.0.1040: cannot use another error format in getqflist()
patch 8.0.1039: cannot change a line in not current buffer
patch 8.0.1038: strike-through text not supported
patch 8.0.1037: "icase" of 'diffopt' is not used for highlighting
patch 8.0.1036: ++eof argument for terminal only available on MS-Windows
patch 8.0.1035: sending buffer lines to terminal doesn't work on MS-Windows
patch 8.0.1034: sending buffer lines to terminal doesn't work on MS-Windows
patch 8.0.1033: detecting background color does not work in screen
patch 8.0.1032: "make tags" doesn't work well on MS-Windows
patch 8.0.1031: "text" argument for getqflist() is confusing
patch 8.0.1030: MS-Windows: wrong size computation in is_cygpty()
patch 8.0.1029: return value of getqflist() is inconsistent
patch 8.0.1028: MS-Windows: viminfo uses $VIM/_viminfo if $HOME not set
patch 8.0.1027: more terminals can't handle requesting cursor mode
patch 8.0.1026: GTK on-the-spot input has problems
patch 8.0.1025: stray copy command in test
patch 8.0.1024: folds lost when session file has a buffer in two windows
patch 8.0.1023: it is not easy to identify a quickfix list
patch 8.0.1022: test 80 is old style
patch 8.0.1021: older Gnome terminal still echoes t_RC
patch 8.0.1020: when a timer calls getchar(1) input is overwritten
patch 8.0.1019: pasting in virtual edit happens in the wrong place
patch 8.0.1018: warnings from 64-bit compiler
patch 8.0.1017: test for MS-Windows $HOME always passes
patch 8.0.1016: gnome terminal echoes t_RC
patch 8.0.1015: missing update to terminal test
patch 8.0.1014: old compiler doesn't know uint32_t
patch 8.0.1013: terminal window behaves different from a buffer with changes
patch 8.0.1012: MS-Windows: problem with $HOME when is was set internally
patch 8.0.1011: terminal test fails with Athena and Motif
patch 8.0.1010: build failure without termresponse feature
patch 8.0.1009: Xterm cursor blinking status may be inverted
patch 8.0.1008: slow updating of terminal window in Motif
patch 8.0.1007: no test for filetype detection for scripts
Update runtime files
patch 8.0.1006: quickfix list changes when parsing text with 'erroformat'
patch 8.0.1005: terminal without job updates slowly in GUI
patch 8.0.1004: matchstrpos() without a match returns too many items
patch 8.0.1003: 64 bit compiler warning
patch 8.0.1002: unnecessarily updating screen after timer callback
patch 8.0.1001: setting 'encoding' makes 'printheader' invalid
patch 8.0.1000: cannot open a terminal without running a job in it
patch 8.0.0999: indenting raw C++ strings is wrong
patch 8.0.0998: strange error when using K while only spaces are selected
patch 8.0.0997 Problem:    Libvterm and Terminal.app not regognized from termresponse. Solution:   Adjust string compare.
patch 8.0.0996: Mac: t_RS is echoed on the screne in Terminal.app
patch 8.0.0995: terminal tests fail on Mac
patch 8.0.0994: MS-Windows: cursor in terminal blinks undesirably
patch 8.0.0993: sometimes an xterm sends an extra CTRL-X
patch 8.0.0992: terminal title is wrong when 'encoding' is DBCS
patch 8.0.0991: using wrong character conversion for DBCS
patch 8.0.0990: with DBCS 'encoding' wrong pasting register into terminal
patch 8.0.0989: ActiveTcl dll name has changed in 8.6.6
patch 8.0.0988: warning from Covscan about using NULL pointer
patch 8.0.0987: terminal: second byte of double-byte char wrong
patch 8.0.0986: terminal feature always requires multi-byte feature
patch 8.0.0985: libvterm has its own idea of character width
patch 8.0.0984: terminal blinking cursor not correct in the GUI
patch 8.0.0983: unnecessary check for NULL pointer
patch 8.0.0982: cannot use a terminal when 'encoding' is non-utf8 multi-byte
patch 8.0.0981: cursor in terminal window blinks by default
patch 8.0.0980: Coverity warning for failing to open /dev/null
patch 8.0.0979: terminal noblock test fails on MS-Windows
patch 8.0.0978: writing to terminal job is not tested
patch 8.0.0977: cannot send lines to a terminal job on MS-Windows
patch 8.0.0976: cannot send lines to a terminal job
patch 8.0.0975: using freed memory when setting 'backspace'
patch 8.0.0974: resetting a string option does not trigger OptionSet
patch 8.0.0973: initial info about blinking cursor is wrong
patch 8.0.0972: compiler warnings for unused variables
patch 8.0.0971: 'winptydll' missing from :options
patch 8.0.0970: passing invalid highlight id
patch 8.0.0969: Coverity warning for unused return value
patch 8.0.0968: crash when switching terminal modes
patch 8.0.0967: using a terminal may cause the cursor to blink
patch 8.0.0966: build failure without terminal feature
patch 8.0.0965: not restoring cursor shape after it was set in a terminal
patch 8.0.0964: channel write buffer does not work with poll()
patch 8.0.0963: terminal test fails on MacOS
patch 8.0.0962: crash with virtualedit and joining lines
patch 8.0.0961: the script to build the installer does not include winpty
patch 8.0.0960: job in terminal does not get CTRL-C
patch 8.0.0959: build failure on MS-Windows
patch 8.0.0958: terminal test fails on Windows when winpty dll is missing
patch 8.0.0957: a terminal job can deadlock when sending many keys
patch 8.0.0956: scrolling in a terminal window has flicker
patch 8.0.0955: Test_existent_file() fails on some file systems
patch 8.0.0954: /proc/self/exe might be a relative path
patch 8.0.0953: get "no write since last change" error in terminal window
patch 8.0.0952: has('terminal') does not check existence of dll file
patch 8.0.0951: another wrong #ifdef
patch 8.0.0950: MS-Windows: wrong #ifdef, compiler warnings
patch 8.0.0949: winpty.dll name is fixed
patch 8.0.0948: crash if timer closes window while dragging status line
patch 8.0.0947: entering terminal using C-O C-W C-W goes to Insert mode
patch 8.0.0946: using PATH_MAX does not work well on some systems
patch 8.0.0945: 64-bit compiler warnings
patch 8.0.0944: test_profile is a little bit flaky
patch 8.0.0943: MS-Windows: Test_terminal_scrape_multibyte may fail
patch 8.0.0942: using freed memory with ":terminal"
patch 8.0.0941: existing color schemes don't like StatusLineTerm
patch 8.0.0940: Test_terminal_scrape_multibyte is flaky
patch 8.0.0939: Test_terminal_env is flaky
patch 8.0.0938: scrolling in terminal window is inefficient
patch 8.0.0937: user highlight groups not adjusted for terminal
patch 8.0.0936: mode() returns wrong value for a terminal window
patch 8.0.0935: cannot recognize a terminal buffer in :ls output
patch 8.0.0934: change to struts.h missing in patch
patch 8.0.0933: terminal test tries to start GUI when it's not possible
patch 8.0.0932: terminal may not use right characters for BS and Enter
patch 8.0.0931: getwininfo() does not indicate a terminal window
patch 8.0.0930: terminal buffers are stored in the viminfo file
patch 8.0.0929: :term without argument does not work
patch 8.0.0928: MS-Windows: passing arglist to job has escaping problems
patch 8.0.0927: if a terminal job sends a blank title "running" is not shown
patch 8.0.0926: when job in terminal window ends topline is wrong
patch 8.0.0925: MS-Windows GUI: channel I/O not handled right away
patch 8.0.0924: terminal window not updated after using term_sendkeys()
patch 8.0.0923: crash in GUI when terminal job exits
patch 8.0.0922: quickfix list always added after current one
patch 8.0.0921: terminal window cursor shape not supported in the GUI
patch 8.0.0920: cursor wrong after switching altscreen in terminal
patch 8.0.0919: cursor color isn't set on startup
patch 8.0.0918: cannot get terminal window cursor shape or attributes
patch 8.0.0917: MS-Windows:CTRL-C handling in terminal window is wrong
patch 8.0.0916: cannot specify properties of window for terminal open
patch 8.0.0915: wrong initialisation of global
patch 8.0.0914: highlight attributes are always combined
patch 8.0.0913: MS-Windows: CTRL-C kills shell in terminal window
patch 8.0.0912: cannot run a job in a hidden terminal
patch 8.0.0911: terminal test takes too long
patch 8.0.0910: cannot create a terminal in the current window
patch 8.0.0909: channel test fails
patch 8.0.0908: cannot set terminal size with options
patch 8.0.0907: with cp932 font names might be misinterpreted
patch 8.0.0906: don't recognize Couchbase files
patch 8.0.0905: MS-Windows: broken multi-byte characters in the console
patch 8.0.0904: cannot set a location list from text
patch 8.0.0903: early return from test function
Update runtime files.
patch 8.0.0902: cannot specify directory or environment for a job
patch 8.0.0901: asan suppress file missing from distribution
patch 8.0.0900: :tab options doesn't open a new tab page
patch 8.0.0899: function name mch_stop_job() is confusing
patch 8.0.0898: can't use the alternate screen in a terminal window
patch 8.0.0897: wrong error message for invalid term_finish value
patch 8.0.0896: cannot close a terminal window when the job ends
patch 8.0.0895: filetype test fails on MS-Windows
patch 8.0.0894: there is no test for runtime filetype detection
patch 8.0.0893: cannot get the scroll count of a terminal window
patch 8.0.0892: when opening a terminal the pty size doesn't always match
patch 8.0.0891: uninitialized memory use with empty line in terminal
patch 8.0.0890: still many old style tests
patch 8.0.0889: gcc gives warnings for uninitialized variables
patch 8.0.0888: compiler warnings with 64 bit build
patch 8.0.0887: can create a logfile in the sandbox
patch 8.0.0886: crash when using ":term ls"
patch 8.0.0885: terminal window scrollback is stored inefficiently
patch 8.0.0884: can't specify the wait time for term_wait()
patch 8.0.0883: invalid memory access with nonsensical script
patch 8.0.0882: term_scrape() and term_getline() require two arguments
patch 8.0.0881: win32.mak no longer included in Windows SDK
patch 8.0.0880: Travis uses an old Ubuntu version
patch 8.0.0879: crash when shifting with huge number
patch 8.0.0878: no completion for :mapclear
patch 8.0.0877: using CTRL-\ CTRL-N in terminal is inconsistent
patch 8.0.0876: backslashes and wildcards in backticks don't work
patch 8.0.0875: crash with weird command sequence
patch 8.0.0874: can't build with terminal feature
patch 8.0.0873: in terminal cannot use CTRL-\ CTRL-N to start Visual mode
patch 8.0.0872: no mouse scroll with a terminal window
patch 8.0.0871: status line for a terminal window always has "[+]".
patch 8.0.0870: mouse escape codes sent to terminal unintentionally
patch 8.0.0869: job output is sometimes not displayed in a terminal
patch 8.0.0868: cannot specify the terminal size on the command line
patch 8.0.0867: job and channel in a dict value not quoted
patch 8.0.0866: Solaris also doesn't have MIN and MAX
patch 8.0.0865: cannot build with channel but without terminal feature
patch 8.0.0864: cannot specify the name of a terminal
patch 8.0.0863: a remote command does not work in the terminal window
patch 8.0.0862: file size test fails on MS-Windows
patch 8.0.0861: still many old style tests
patch 8.0.0860: side effects when channel appends to a buffer
patch 8.0.0859: NULL pointer access when term_free_vterm called twice
patch 8.0.0858: can exit while a terminal is still running a job
patch 8.0.0857: terminal test fails on MS-Windows
patch 8.0.0856: MS-Windows: terminal job doesn't take options
patch 8.0.0855: MS-Windows: can't get tty name of terminal
patch 8.0.0854: no redraw after terminal was closed
patch 8.0.0853: crash when running terminal with unknown command
patch 8.0.0852: MS-Windows: possible crash when giving a message on startup
patch 8.0.0851: 'smartindent' is used even when 'indentexpr' is set
patch 8.0.0850: MS-Windows: error message while starting up may be broken
patch 8.0.0849: crash when job exit callback wipes the terminal
patch 8.0.0848: using multiple ch_log functions is clumsy
patch 8.0.0847: :argadd without argument can't handle space in file name
patch 8.0.0846: cannot get the name of the pty of a job
patch 8.0.0845: MS-Windows: missing semicolon in terminal code
patch 8.0.0844: wrong function prototype because of missing static
patch 8.0.0843: MS-Windows: compiler warning for signed/unsigned
patch 8.0.0842: using slave pty after closing it
patch 8.0.0841: term_getline() may cause a crash
patch 8.0.0840: MS-Windows: fopen() and open() prototypes are wrong
patch 8.0.0839: cannot kill a job in a terminal with CTRL-C
patch 8.0.0838: buffer hangs around whem terminal window is closed
patch 8.0.0837: signs can be drawn on top of console messages
Updated runtime files
patch 8.0.0836: can abandon a terminal buffer after making a change
patch 8.0.0835: translations check with msgfmt does not work
patch 8.0.0834: can't build without the client-server feature
patch 8.0.0833: terminal test fails
patch 8.0.0832: terminal function arguments are not consistent
patch 8.0.0831: with 8 colors the bold attribute is not set properly
patch 8.0.0830: translating messages is not ideal
patch 8.0.0829: job running in terminal can't communicate with Vim
patch 8.0.0828: Coverity: may dereference NULL pointer
patch 8.0.0827: Coverity: could leak pty file descriptor
patch 8.0.0826: cannot use text objects in Terminal mode
patch 8.0.0825: not easy to see that a window is a terminal window
patch 8.0.0824: in Terminal mode the cursor and screen gets redrawn
patch 8.0.0823: cannot paste text into a terminal window
patch 8.0.0822: Test_with_partial_callback is a tiny bit flaky
patch 8.0.0821: cannot get the title and status of a terminal window
patch 8.0.0820: GUI: cursor in terminal window lags behind
patch 8.0.0819: cursor not positioned in terminal window
patch 8.0.0818: cannot get the cursor position of a terminal
patch 8.0.0817: cannot get the terminal line at the cursor
patch 8.0.0816: crash when using invalid buffer number
patch 8.0.0815: terminal window not correctly updated
patch 8.0.0814: file in Filelist does not exist
patch 8.0.0813: cannot use a terminal window while the job is running
patch 8.0.0812: terminal window colors shift when 'number' is set
patch 8.0.0811: MS-Windows: test_expand_dllpath fails
patch 8.0.0810: MS-Windows: tests still hang
patch 8.0.0809: MS-Windows: tests hang
patch 8.0.0808: cannot build with terminal feature and DEBUG defined
patch 8.0.0807: terminal window can't handle mouse buttons
patch 8.0.0806: tests may try to create XfakeHOME twice
patch 8.0.0805: GUI test fails with gnome2
patch 8.0.0804: running tests fails when stdin is /dev/null
patch 8.0.0804: terminal window functions not yet implemented
patch 8.0.0802: last line of terminal window has no color
patch 8.0.0801: terminal window title says "running" after job exits
patch 8.0.0799: missing semicolon
patch 8.0.0798: no highlighting in a terminal window with a finished job
patch 8.0.0797: finished job in terminal window is not handled
patch 8.0.0796: no coverage on Travis with clang
patch 8.0.0795: terminal feature does not build with older MSVC
patch 8.0.0794: checking translations fails with multiple NL
patch 8.0.0793: using wrong terminal name for terminal window
patch 8.0.0792: spell test leaves files behind
patch 8.0.0791: terminal colors depend on the system
patch 8.0.0790: MSVC compiler warning for strncpy in libvterm
patch 8.0.0789: splitting terminal window has resizing problems
patch 8.0.0788: MS-Windows: cannot build with terminal feature
patch 8.0.0787: cannot send CTRL-W command to terminal job
patch 8.0.0786: build failures on Travis
Do not run coverage with clang, currently fails.
Do not invoke rvm reset
Remove ruby-dev from travis config.
Switch travis back to precise temporarily
patch 8.0.0785: wildcards are not expanded for :terminal
patch 8.0.0784: job of terminal may be garbage collected
patch 8.0.0783: job of terminal may be freed too early
patch 8.0.0782: using freed memory in quickfix code
patch 8.0.0781: MS-Windows: memory leak when using :terminal
patch 8.0.0780: build failure on Travis
patch 8.0.0779: :term without an argument uses empty buffer name
patch 8.0.0778: in a terminal the cursor may be hidden
patch 8.0.0777: compiler warnings with 64 bit compiler
patch 8.0.0776: function prototypes missing without the quickfix feature
patch 8.0.0775: in a terminal the cursor is updated too often
patch 8.0.0774: build failure without the multi-byte feature
patch 8.0.0773: mixing 32 and 64 bit libvterm builds fails
patch 8.0.0772: other stdbool.h dependencies in libvterm
patch 8.0.0771: cursor in terminal window not always updated in GUI
patch 8.0.0770: compiler warning for missing field initializer
patch 8.0.0769: build problems with terminal on MS-Windows
patch 8.0.0768: terminal window status shows "[Scratch]"
patch 8.0.0767: build failure with Athena and Motif
patch 8.0.0766: option test fails with +terminal feature
patch 8.0.0765: build fails with tiny features
patch 8.0.0764: 'termkey' does not work yet
Documentation updates.
patch 8.0.0763: libvterm can be improved
patch 8.0.0762: ml_get error with :psearch in buffer without a name
patch 8.0.0761: options not set properly for a terminal buffer
patch 8.0.0760: terminal window colors wrong with 'termguicolors'
patch 8.0.0759: MS-Windows: terminal does not adjust size
patch 8.0.0758: possible crash when using a terminal window
patch 8.0.0757: libvterm MSVC Makefile not included in the distribution
patch 8.0.0756: cannot build libvterm with MSVC
patch 8.0.0755: terminal window does not have colors in the GUI
patch 8.0.0754: terminal window does not support colors
patch 8.0.0753: no size reports to a job running in a terminal
patch 8.0.0752: build fails on MS-Windows
patch 8.0.0751: OpenPTY missing with some combination of features
patch 8.0.0750: OpenPTY missing in non-GUI build
patch 8.0.0749: some unicode digraphs are hard to remember
patch 8.0.0748: running Vim in terminal window doesn't use the right colors
patch 8.0.0747: :terminal without an argument doesn't work
patch 8.0.0746: when :term fails the job is not properly cleaned up
patch 8.0.0745: multi-byte characters in a terminal don't display well
patch 8.0.0744: terminal window does not use a pty
patch 8.0.0743: the 'termsize' option can be set to an invalid value
patch 8.0.0742: terminal feature does not work on MS-Windows
patch 8.0.0741: cannot build with HPUX
patch 8.0.0740: cannot resize a terminal window by the command
patch 8.0.0739: terminal resizing doesn't work well.
patch 8.0.0738: cannot use the mouse to resize a terminal window
patch 8.0.0737: crash when X11 selection is very big
patch 8.0.0736: OptionSet not triggered when entering diff mode
patch 8.0.0735: no indication that the quickfix window/buffer changed
Update translations.
patch 8.0.0734: the script to check translations can be improved
patch 8.0.0733: can only add entries to one list in the quickfix stack
patch 8.0.0732: when updating a buffer modeless selection is lost
patch 8.0.0731: cannot build the terminal feature on MS-Windows
patch 8.0.0730: terminal feature only supports Unix-like systems
patch 8.0.0729: the help for the terminal configure option is wrong
patch 8.0.0728: the terminal structure is never freed
patch 8.0.0727: message about what register to yank into is not translated
patch 8.0.0726: translations cleanup script is too conservative
patch 8.0.0725: a terminal window does not handle keyboard input
patch 8.0.0724: the message for yanking doesn't indicate the register
patch 8.0.0723: arglist test fails if file name case is ignored
patch 8.0.0722: screen is messed by timer up at inputlist() prompt
patch 8.0.0721: :argedit can only have one argument
patch 8.0.0720: unfinished mapping not displayed when running timer
patch 8.0.0719: build failure without +terminal feature
patch 8.0.0718: output of job in terminal is not displayed
patch 8.0.0717: terminal feature precence unclear
patch 8.0.0716: not easy to start Vim cleanly
patch 8.0.0714: when a timer causes a command line redraw " goes missing
patch 8.0.0713: 'termkey' option not fully implemented
patch 8.0.0712: the terminal implementation is incomplete
Updated runtime files and translations.
patch 8.0.0711: cannot build without the wildmenu feature
patch 8.0.0710: a job that writes to a buffer clears completion
patch 8.0.0709: libvterm cannot use vsnprintf()
patch 8.0.0708: some tests are old style
patch 8.0.0707: freeing wrong memory with certain autocommands
patch 8.0.0706: crash when cancelling the cmdline window in Ex mode
patch 8.0.0705: crash when there is an error in a timer callback
patch 8.0.0704: problems with autocommands when opening help
patch 8.0.0703: illegal memory access with empty :doau command
patch 8.0.0702: an error in a timer can make Vim unusable
patch 8.0.0701: system test failing when using X11 forwarding
patch 8.0.0700: segfault with QuitPre autocommand closes the window
patch 8.0.0699: checksum tests are not actually run
patch 8.0.0698: crash on exit when using Python function in timer.
patch 8.0.0697: recorded key sequences may become invalid
patch 8.0.0696: .inc files missing in git
patch 8.0.0695: missing dependencies breaks parallel make
patch 8.0.0694: building in shadow directory does not work
patch 8.0.0693: no terminal emulator support
patch 8.0.0692: CTRL-G with 'incsearch' and ? goes in the wrong direction
patch 8.0.0691: compiler warning without the linebreak feature
patch 8.0.0690: compiler warning on non-Unix system
patch 8.0.0689: ~ character not escaped when extending search pattern
patch 8.0.0688: cannot resize the window in a FileType autocommand
patch 8.0.0687: minor issues related to quickfix
patch 8.0.0686: extra redraw when using CTRL-L in second window
patch 8.0.0685: when conversion fails written file may be truncated
patch 8.0.0684: old style tests are not nice
patch 8.0.0683: visual bell flashes too quickly
patch 8.0.0682: no test for synIDtrans()
patch 8.0.0681: unnamed register only contains the last deleted text
patch 8.0.0680: plugins in start packages are sourced twice
patch 8.0.0679: using freed memory
patch 8.0.0678: closing a window does not trigger resizing
patch 8.0.0677: setting 'filetype' may switch buffers
patch 8.0.0676: crash when closing quickfix window in autocmd
patch 8.0.0675: 'colorcolumn' has a higher priority than 'hlsearch'
patch 8.0.0674: cannot build with eval but without timers
patch 8.0.0673: build failure without conceal feature
patch 8.0.0672: third item of synconcealed() changes too often
patch 8.0.0671: hang when typing CTRL-C in confirm() in timer
patch 8.0.0670: can't use input() in a timer callback
patch 8.0.0669: CTRL-N at start of the buffer does not work correctly
patch 8.0.0668: nsis installer script does not work
patch 8.0.0667: memory access error when command follows :endfunc
patch 8.0.0666: dead for loop
patch 8.0.0665: warning for uninitialized variable
patch 8.0.0664: mouse does not work in tmux
patch 8.0.0663: unexpected error message only when 'verbose' is set
patch 8.0.0662: stray FIXME for fixed problem
patch 8.0.0661: recognizing urxvt mouse codes does not work well
patch 8.0.0660: silent install on MS-Windows shows dialog
patch 8.0.0659: no test for conceal mode
patch 8.0.0658: spell test is old style
patch 8.0.0657: cannot get and set quickfix list items
patch 8.0.0656: cannot use ! after some user commands
patch 8.0.0655: not easy to make sure a function does not exist
patch 8.0.0654: no warning for text after :endfunction
patch 8.0.0652: unicode information is outdated
patch 8.0.0651: build failure without the auto command feature
patch 8.0.0650: for extra help files the filetype is set more than once
patch 8.0.0649: when opening a help file the filetype is set several times
patch 8.0.0648: possible use of NULL pointer
patch 8.0.0647: syntax highlighting can make cause a freeze
patch 8.0.0646: the hlsearch test fails on fast systems
patch 8.0.0645: no error for illegal back reference in NFA engine
patch 8.0.0644: the timeout for 'hlsearch' is not tested
patch 8.0.0643: when a pattern search is slow Vim becomes unusable
patch 8.0.0642: writefile() continues after detecting an error
Update runtime files.
patch 8.0.0641: cannot set a separate highlighting for the quickfix line
patch 8.0.0640: mismatch between help and actual message
patch 8.0.0639: the cursor position is set when editing a new commit message
patch 8.0.0638: cannot build with new MSVC version
patch 8.0.0637: crash when using some version of GTK 3
patch 8.0.0636: when reading the undo file fails may use uninitialized data
patch 8.0.0635: when 'ignorecase' is set script detection is inaccurate
patch 8.0.0634: cannot easily get to the last quickfix list
patch 8.0.0633: the client-server test is still a bit flaky
patch 8.0.0632: the quotestar test is still a bit flaky
patch 8.0.0631: can't build with Perl 5.26
patch 8.0.0630: it is not easy to work on lines without a match
patch 8.0.0629: checking for ambigous width is not working
patch 8.0.0628: cursor disappears after silent mapping
patch 8.0.0627: "gn" selects only one character with 'nowrapscan'
patch 8.0.0626: in the GUI the cursor may flicker
patch 8.0.0625: shellescape() always escapes a newline
patch 8.0.0624: warning for unused variable in tiny build
patch 8.0.0623: error for invalid regexp is not very informative
patch 8.0.0622: selecting quoted text fails with 'selection' "exclusive"
patch 8.0.0621: :stag does not respect 'switchbuf'
patch 8.0.0620: checking for HAVE_GTK_MULTIHEAD is not needed
Update runtime files.
patch 8.0.0619: GUI gets stuck if timer uses feedkeys()
patch 8.0.0618: NFA regex engine handles [0-z] incorrectly
patch 8.0.0617: hardcopy test hangs on MS-Windows
patch 8.0.0616: not always setting 'background' correctly after :hi Normal
patch 8.0.0615: using % with :hardcopy wrongly escapes spaces
patch 8.0.0614: float2nr() is not exactly right
patch 8.0.0613: the conf filetype is used before ftdetect from packages
patch 8.0.0612: pack dirs are added to 'runtimepath' too late
patch 8.0.0611: the screen is not redrawn after sending t_u7
patch 8.0.0610: the screen is redrawn when default 'background' is detected
patch 8.0.0609: some people still don't know how to quit
patch 8.0.0608: cannot manipulate other than the current quickfix list
patch 8.0.0607: after :bwipe + :new bufref might still be valid
patch 8.0.0606: cannot set the context for a specified quickfix list
patch 8.0.0605: the quickfix cached buffer may become invalid
Update runtime files.
patch 8.0.0604: gF test fails still on MS-Windows
patch 8.0.0603: gF test fails on MS-Windows
patch 8.0.0602: when gF fails to edit the file the cursor still moves
patch 8.0.0601: no test coverage for :spellrepall
patch 8.0.0600: test_recover fails on some systems
patch 8.0.0599: diff mode is insufficiently tested
patch 8.0.0598: building with gcc 7.1 yields new warnings
patch 8.0.0597: off-by-one error in size computation
patch 8.0.0596: crash when complete() called after complete_add()
patch 8.0.0595: Coverity warning for not checking return value
patch 8.0.0594: build failure when windows feature is missing
patch 8.0.0593: duplication of code for adding a list or dict return value
patch 8.0.0592: if a job writes to a buffer screen is not updated
patch 8.0.0591: changes to eval functionality not documented
patch 8.0.0590: cannot add a context to locations
patch 8.0.0589: :simalt still does not work
patch 8.0.0588: job_stop() often assumes the channel will be closed
Runtime file updates
patch 8.0.0587: configure check for return value of tgetent skipped
patch 8.0.0586: no test for mapping timing out
patch 8.0.0585: test_options fails when run in the GUI
Updated runtime files.
patch 8.0.0584: memory leak when executing quickfix tests
patch 8.0.0583: fold test hangs on MS-Windows
patch 8.0.0582: illegal memory access with z= command
patch 8.0.0581: moving folded text is sometimes not correct
patch 8.0.0580: cannot set the valid flag with setqflist()
patch 8.0.0579: duplicate test case for quickfix
patch 8.0.0578: :simalt on MS-Windows does not work properly
patch 8.0.0577: warning for uninitialized variable
patch 8.0.0576: can't build when configure choses "install-sh"
patch 8.0.0575: using freed memory when resetting 'indentexpr'
patch 8.0.0574: get only one quickfix list after :caddbuf
patch 8.0.0573: running parallel make after distclean fails
patch 8.0.0572: building the command table requires Perl
patch 8.0.0571: negative line number when using :z^ in an empty buffer
patch 8.0.0570: can't run make with several jobs
patch 8.0.0569: bracketed paste is still enabled in a shell command
patch 8.0.0568: 1gd may hang
patch 8.0.0567: call for requesting color and ambiwidth is too early
patch 8.0.0566: setting nocompatible for the tiny version moves the cursor
patch 8.0.0565: using freed memory in :caddbuf
patch 8.0.0564: cannot detect Bazel BUILD files on some systems
patch 8.0.0563: crash when getting the window position in tmux
patch 8.0.0562: not enough test coverage for syntax commands
patch 8.0.0561: undefined behavior when using backslash after empty line
patch 8.0.0560: :windo allows for ! but it's not supported
patch 8.0.0559: setting ttytype to xxx does not always fail
Update runtime files.
patch 8.0.0558: :ownsyntax is not tested
patch 8.0.0557: GTK: using static gravities is not useful
patch 8.0.0556: getting window position fails if GUI and term possible
patch 8.0.0555: toupper/tolower test fails on OSX without Darwin
patch 8.0.0554: toupper and tolower don't work properly for Turkish
patch 8.0.0553: toupper/tolower test fails on Mac
patch 8.0.0552: toupper and tolower don't work properly for Turkish
patch 8.0.0551: the typeahead buffer is reallocated too often
patch 8.0.0550: cannot parse some etags format tags file
patch 8.0.0549: no test for the 8g8 command
patch 8.0.0548: saving the redo buffer only works one time
patch 8.0.0547: extra line break in verbosefile
patch 8.0.0546: swap file exists briefly when opening the command window
patch 8.0.0545: edit test may fail on some systems
patch 8.0.0544: cppcheck warnings
patch 8.0.0543: test_edit causes older xfce4-terminal to close
patch 8.0.0542: getpos() can return a negative line number
patch 8.0.0541: compiler warning on MS-Windows
patch 8.0.0540: building unit tests fails
patch 8.0.0539: startup test fails on Mac
patch 8.0.0538: no test for falling back to default term value
patch 8.0.0537: illegal memory access with :z and large count
patch 8.0.0536: quickfix window not updated when freeing quickfix stack
patch 8.0.0535: memory leak when exiting from within a user function
patch 8.0.0534: defaults.vim does not work well with tiny features
patch 8.0.0533: abbreviation doesn't work after backspacing newline
patch 8.0.0532: test with long directory name fails on Mac
patch 8.0.0531: test with long directory name fails on non-unix systems
patch 8.0.0530: buffer overflow when 'columns' is very big
patch 8.0.0529: line in test commented out
patch 8.0.0528: highlight wrong text when 'wim' includes "longest"
patch 8.0.0527: leftover file from RISC OS
patch 8.0.0526: Coverity complains about possible negative value
patch 8.0.0525: completion for user command argument not tested
patch 8.0.0524: folds messed up
patch 8.0.0523: dv} deletes part of a multi-byte character.
patch 8.0.0522: Win32: when 'clipboard' is "unnamed" yyp does not work
patch 8.0.0521: GtkForm handling is outdated
patch 8.0.0520: using a function pointer while the function is known
patch 8.0.0519: character classes are not well tested
patch 8.0.0518: bad fold text when a multi-byte char has a zero byte
patch 8.0.0517: there is no way to remove quickfix lists
Update runtime files.
patch 8.0.0516: a large count on a normal command causes trouble
patch 8.0.0515: ml_get errors in silent Ex mode
patch 8.0.0514: script for creating cmdidxs can be improved
patch 8.0.0513: getting name of cleared highlight group is wrong
patch 8.0.0512: check for available characters takes too long
patch 8.0.0511: message for skipping client-server tests is unclear
patch 8.0.0510: typo in link to codecov.io results
patch 8.0.0509: no link to codecov.io results
patch 8.0.0508: Coveralls no longer shows per-file coverage
patch 8.0.0507: client-server tests fail when $DISPLAY is not set
patch 8.0.0506: can't build with ANSI C
patch 8.0.0505: failed window split for :stag not handled
patch 8.0.0504: looking up an Ex command is a bit slow
patch 8.0.0503: endless loop in updating folds with 32 bit ints
patch 8.0.0502: Coverity complains about possible NULL pointer
patch 8.0.0501: on MS-Windows ":!start" does not work as expected
Update runtime files.  Add Rust support.
patch 8.0.0500: quotestar test is still a bit flaky
patch 8.0.0499: taglist() does not prioritize tags for a buffer
patch 8.0.0498: two autocmd tests are skipped on MS-Windows
patch 8.0.0497: arabic support is not fully tested
patch 8.0.0496: insufficient testing for folding
patch 8.0.0495: quotestar test uses timer instead of timeout
patch 8.0.0494: build failure with older compiler on MS-Windows
patch 8.0.0493: crash with cd command with very long argument
patch 8.0.0492: a failing client-server request can make Vim hang
patch 8.0.0491: quotestar test fails when features are missing
patch 8.0.0490: vertical split makes 'winfixwidth' window smaller
patch 8.0.0489: clipboard and "* register is not tested
patch 8.0.0488: running tests leaves an "xxx" file behind
patch 8.0.0487: the autocmd test hangs on MS-Windows
patch 8.0.0486: crash and endless loop when closing windows in autocmd
patch 8.0.0485: not all windows commands are tested
patch 8.0.0484: :lhelpgrep does not fail after a successful one
patch 8.0.0483: illegal memory access when using :all
patch 8.0.0482: the setbufvar() function may mess up the window layout
patch 8.0.0481: unnecessary if statement
patch 8.0.0480: the remote_peek() test fails on MS-Windows
patch 8.0.0479: remote_peek() is not tested
patch 8.0.0478: tests use assert_true(0) and assert_false(1) to report errors
patch 8.0.0477: the client-server test may hang when failing
patch 8.0.0476: missing change to main.c
patch 8.0.0475: not enough testing for the client-server feature
patch 8.0.0474: the client-server feature is not tested
patch 8.0.0473: no test covering arg_all()
patch 8.0.0472: when a test fails another test may also fail
patch 8.0.0471: exit callback test sometimes fails
patch 8.0.0470: not enough testing for help commands
patch 8.0.0469: compiler warnings on MS-Windows
patch 8.0.0468: after aborting an Ex command g< does not work
patch 8.0.0467: using g< after :for does not show the right output
Update runtime files.
patch 8.0.0466: still macros that should be all-caps
patch 8.0.0465: off-by-one error in using :move with folding
patch 8.0.0464: can't find executable name on Solaris and FreeBSD
patch 8.0.0463: side effects from resetting 'compatible' in defaults.vim
patch 8.0.0462: failure of an MS-Windows test may go unnoticed
patch 8.0.0461: test 45 hangs on MS-Windows
patch 8.0.0460: can't build on HPUX
patch 8.0.0459: old fix for :move and folding no longer needed
patch 8.0.0458: potential crash if adding list or dict to dict fails
patch 8.0.0457: using :move messes up manual folds
patch 8.0.0456: typo in MinGW test makefile
patch 8.0.0455: the mode test may hang
patch 8.0.0454: compiler warnings for "always true" comparison
patch 8.0.0453: adding fold marker creates new comment
patch 8.0.0452: some macros are in lower case
patch 8.0.0451: some macros are in lower case
patch 8.0.0450: v:progpath is not reliably set
patch 8.0.0449: part of fold patch accidentally included
patch 8.0.0448: some macros are in lower case
patch 8.0.0447: getting font name does not work on X11
patch 8.0.0446: the ";" command does not work after some characters
patch 8.0.0445: getpgid is not supported on all systems
patch 8.0.0444: diffpatch fails when the file name has a quote
patch 8.0.0443: terminal width is set to 80 in test3
patch 8.0.0442: patch shell command not well escaped
patch 8.0.0441: dead code in #ifdef
patch 8.0.0440: not enough test coverage in Insert mode
patch 8.0.0439: ":%argdel" gives an error for an empty arglist
patch 8.0.0438: the fnamemodify test may cause later tests to fail
patch 8.0.0437: packadd test does not fully work
patch 8.0.0436: running the options test sometimes resizes the terminal
patch 8.0.0435: some functions are not tested
patch 8.0.0434: clang version not correctly detected
patch 8.0.0433: beeps when running tests
patch 8.0.0432: "make shadow" creates an invalid link
patch 8.0.0431: 'cinoptions' cannot set indent for extern block
patch 8.0.0430: options test fails or hangs on MS-Windows
patch 8.0.0429: options test does not always test everything
patch 8.0.0428: git and hg see new files after running tests
patch 8.0.0427: 'makeencoding' missing from the options window
patch 8.0.0426: insufficient testing for statusline
patch 8.0.0425: build errors when building without folding
patch 8.0.0424: compiler warnings on MS-Windows
patch 8.0.0423: changing 'cinoptions' does not always work
patch 8.0.0422: Python test fails with Python 3.6
patch 8.0.0421: diff mode wrong when adding line at end of buffer
patch 8.0.0420: text garbled when the system encoding differs from 'encoding'
Runtime file updates.
patch 8.0.0419: test for v:progpath fails on MS-Windows
patch 8.0.0418: ASAN logs are disabled
patch 8.0.0417: test for the clipboard fails sometimes
patch 8.0.0416: setting v:progpath is not quite right
patch 8.0.0415: balloon test fails on MS-Windows
patch 8.0.0414: balloon eval is not tested
patch 8.0.0413: menu test fails on MS-Windows using gvim
patch 8.0.0412: menu test fails on MS-Windows
patch 8.0.0411: menu translations don't match when case is changed.
patch 8.0.0410: newer gettext/iconv library has extra dll file
patch 8.0.0409: set_progpath is defined but not always used
patch 8.0.0408: updating folds does not always work properly
patch 8.0.0407: filtering folds with marker method not tested
patch 8.0.0406: arabic shaping code is verbose
patch 8.0.0405: v:progpath may become invalid after :cd
patch 8.0.0404: not enough testing for quickfix
patch 8.0.0403: GUI tests may fail
patch 8.0.0402: :map completion does not have <special>
patch 8.0.0401: test fails with missing balloon feature
patch 8.0.0400: some tests have a one second delay
patch 8.0.0399: crash when using balloon_show() when not supported
patch 8.0.0398: illegal memory access with "t"
patch 8.0.0397: can't build with +viminfo but without +eval
patch 8.0.0396: 'balloonexpr' only works synchronously
patch 8.0.0395: testing the + register fails with Motif
patch 8.0.0394: tabs are not aligned when scrolling horizontally
patch 8.0.0393: order of duplicate tags is not preserved
patch 8.0.0392: GUI test fails with Athena and Motif
patch 8.0.0391: arabic support is verbose and not well tested
patch 8.0.0390: when the window scrolls the popup menu may be garbled
patch 8.0.0389: test for arabic does not check what is displayed
patch 8.0.0388: filtering lines changes folds
patch 8.0.0387: compiler warnings
patch 8.0.0386: tiny build has a problem with generating the options test
patch 8.0.0385: no tests for arabic
patch 8.0.0384: timer test failed for no apparent reason
patch 8.0.0383: misplaced #ifdef
patch 8.0.0382: warning in tiny build for unused variable
patch 8.0.0381: diff mode is not sufficiently tested
patch 8.0.0380: with 'linebreak' double wide char wraps badly
patch 8.0.0379: CTRL-Z and mouse click use CTRL-O unnecessary
patch 8.0.0378: possible overflow when reading corrupted undo file
patch 8.0.0377: possible overflow when reading corrupted undo file
patch 8.0.0376: size computations in spell file reading are off
patch 8.0.0375: the "+ register is not tested
patch 8.0.0374: invalid memory access when using :sc in Ex mode
patch 8.0.0373: build fails without +folding
patch 8.0.0372: more options are not always defined
patch 8.0.0371: leaking memory when setting v:completed_item
patch 8.0.0370: invalid memory access when setting wildchar empty
patch 8.0.0369: a few options are not defined, depending on features
patch 8.0.0368: not all options are tested with a range of values
patch 8.0.0367: types in include files may be inconsistent
patch 8.0.0366: build fails with tiny features
patch 8.0.0365: might free a dict item that wasn't allocated
patch 8.0.0364: ]s does not move cursor with two spell errors in one line
patch 8.0.0363: Travis is too slow to keep up with patches
patch 8.0.0362: tests fail on MS-Windows
patch 8.0.0361: GUI initialisation is not sufficiently tested
patch 8.0.0360: sometimes VimL is used instead of "Vim script"
patch 8.0.0359: 'number' and 'relativenumber' are not properly tested
patch 8.0.0358: invalid memory access in C-indent code
patch 8.0.0357: crash when setting 'guicursor' to weird value
patch 8.0.0356: leaking memory when setting 'ttytype'
patch 8.0.0355: using uninitialized memory when 'isfname' is empty
patch 8.0.0354: test to check that setting termcap key fails sometimes
patch 8.0.0353: if [RO] is translated it may be truncated
patch 8.0.0352: not easy to see when a typval needs to be cleared
patch 8.0.0351: no test for concatenating an empty string
patch 8.0.0350: not enough test coverage for Perl
patch 8.0.0349: redrawing errors with GTK 3
patch 8.0.0348: using shadow dir on Mac lack +clipboard
patch 8.0.0347: when using completion comment leader wont work
patch 8.0.0346: Vim relies on limits.h to be included indirectly
patch 8.0.0345: islocked('d.changedtick') does not work
patch 8.0.0344: unlet command leaks memory
patch 8.0.0343: b:changedtick can be unlocked
patch 8.0.0342: double free with EXITFREE and setting 'ttytype'
patch 8.0.0341: undo does not work properly when using completion
patch 8.0.0340: not checking return valud of dict_add()
patch 8.0.0339: illegal memory access with vi'
patch 8.0.0338: :recover test fails on MS-Windows
patch 8.0.0337: invalid memory access in :recover command
Updated runtime files.
patch 8.0.0336: flags of :substitute not sufficiently tested
patch 8.0.0335: functions test fails
patch 8.0.0334: can't access b:changedtick from a dict reference
patch 8.0.0333: illegal memory access when 'complete' ends in a backslash
patch 8.0.0332: GUI test fails on some systems
patch 8.0.0331: restoring help snapshot accesses freed memory
patch 8.0.0330: illegal memory access after "vapo"
patch 8.0.0329: xfontset and guifontwide are not tested
patch 8.0.0328: the "zero count" error doesn't have a number
patch 8.0.0327: error message in cmdline window is not translated
patch 8.0.0326: packadd test uses wrong directory name
patch 8.0.0325: packadd test does not clean up symlink
patch 8.0.0324: illegal memory access with a wrong yank range
patch 8.0.0323: one second pause when running cmdline test
patch 8.0.0322: possible overflow with corrupted spell file
patch 8.0.0321: errors when trying to use scripts in tiny version
patch 8.0.0320: warning for unused variable with small build
patch 8.0.0319: insert mode completion does not respect 'backspace'
patch 8.0.0318: small mistake in 7x13 font name
patch 8.0.0317: no test for setting 'guifont'
patch 8.0.0316: :help z? does not work
patch 8.0.0315: :help :[range] does not work
patch 8.0.0314: getcmd*() functions are not tested
patch 8.0.0313: not enough testing for GUI functionality
patch 8.0.0312: failure when a channel receives a split json message
patch 8.0.0311: linebreak tests are old style
patch 8.0.0310: not enough testing for GUI functionality
patch 8.0.0309: cannot use an empty key in json
patch 8.0.0308: 'runtimepath' not update correctly when using symbolic link
patch 8.0.0307: asan detects a memory error when EXITFREE is defined
patch 8.0.0306: mode() not sufficiently tested
patch 8.0.0305: invalid memory access when option has duplicate flag
patch 8.0.0304: assign test fails in the GUI
patch 8.0.0303: bracketed paste does not work in Visual mode
patch 8.0.0302: cannot set terminal key codes with :let
patch 8.0.0301: not enough testing for setting options
patch 8.0.0300: cannot stop diffing hidden buffers
patch 8.0.0299: a window resize is sometimes not taking effect
patch 8.0.0298: Ex command range with repeated search does not work
patch 8.0.0297: double free on exit when using a closure
patch 8.0.0296: bracketed paste can only append, not insert
patch 8.0.0295: test_viml hangs
patch 8.0.0294: argument list is not stored correctly in a session file
patch 8.0.0293: some tests have a one or three second wait
patch 8.0.0292: the stat test is a bit slow
patch 8.0.0291: Visual block insertion does not insert in all lines
patch 8.0.0290: cursor positioning wrong if wide character wraps
patch 8.0.0289: no test for "ga" and :ascii
patch 8.0.0288: errors reported while running tests
patch 8.0.0287: debug mode: cannot access function arguments
patch 8.0.0286: not always redrawing after screen resize
patch 8.0.0285: tests fail with tiny build on Unix
patch 8.0.0284: collapse buffers test failed once
patch 8.0.0283: mode() does not indicate Insert mode completion
patch 8.0.0282: need to use CTRL-O twice when in Visual-Insert mode
patch 8.0.0281: some files are still using ARGSUSED instead of UNUSED
patch 8.0.0280: problem setting multi-byte environment var on MS-Windows
patch 8.0.0279: MSVC 2015 uses a different dll name
patch 8.0.0278: GUI test fails on MS-Windows
patch 8.0.0277: the GUI test may trigger fontconfig and take a long time
patch 8.0.0276: unnecessary #ifdefs
patch 8.0.0275: the screen may be updated at the wrong time
patch 8.0.0274: possible recursive screen updating causes trouble
patch 8.0.0273: dead code detected by Coverity
patch 8.0.0272: crash on exit is not detected when running tests
patch 8.0.0271: may get ml_get error when :tcldo deletes lines
patch 8.0.0270: may get ml_get error when :rubydo deletes lines
patch 8.0.0269: may get ml_get error when :perldo deletes lines
patch 8.0.0268: may get ml_get error when :luado deletes lines
patch 8.0.0267: channel test sometimes fails on Mac
patch 8.0.0266: compiler warning for using uninitialized variable
patch 8.0.0265: may get ml_get error when :pydo deletes lines
patch 8.0.0264: memory error reported by ubsan
patch 8.0.0263: Farsi support is not tested enough
patch 8.0.0262: Farsi support is barely tested
patch 8.0.0261: not enough test coverage for eval functions
patch 8.0.0260: build fails with tiny features
patch 8.0.0259: tab commands do not handle count correctly
patch 8.0.0258: mksession test leaves file behind
patch 8.0.0257: test file missing in distribution
Update runtime files.
patch 8.0.0256: missing changes to one file breaks test
patch 8.0.0255: setpos() does not use the buffer argument for all marks
patch 8.0.0254: error message of assert functions is sometimes incomplete
patch 8.0.0253: error when loading session if winminheight is 2
patch 8.0.0252: not properly recognizing word characters between 128 and 255
patch 8.0.0251: not easy to select Python 2 or 3
patch 8.0.0250: virtcol() does not work well for multi-byte characters
patch 8.0.0249: CI failure when a submit is close to previous one
patch 8.0.0248: vim_strcat() cannot handle overlapping arguments
patch 8.0.0247: need to type Ctrl-N twice to select a completion
patch 8.0.0246: compiler warnings for int to pointer conversion
patch 8.0.0245: zh_CN.cp936.po has a conversion error
patch 8.0.0244: making t_BE empty only has an effect before startup
patch 8.0.0243: tolower() does not work if the byte count changes
patch 8.0.0242: no tests for user command completion
patch 8.0.0241: fallback implementation of mch_memmove is unused
patch 8.0.0240: failure with one build on CI
patch 8.0.0239: no CI with an address sanitizer
patch 8.0.0238: bracketed paste does not disable autoindent
patch 8.0.0237: when 'wildoptions' is "tagfile" completion may not work
patch 8.0.0236: gcc complains about uninitialized variable
patch 8.0.0235: memory leak in diff mode
patch 8.0.0234: crash when using put in Visual mode
patch 8.0.0233: paste test fails in the GUI
patch 8.0.0232: paste does not work when 'esckeys' is off
patch 8.0.0231: bracketed paste mode is not tested
patch 8.0.0230: bracketed paste does not support line breaks
patch 8.0.0229: local 'formatprg' option value leaks
patch 8.0.0228: pasting in xterm on the command line has PasteStart
patch 8.0.0227: crash with ff=dos when first line in file has no CR
patch 8.0.0226: test for patch 8.0.0224 missing CR characters
patch 8.0.0225: put in Visual block mode terminates early
patch 8.0.0224: change to 'fileformats' from autocmd does not take effect
patch 8.0.0223: Coverity warns for an uninitialized variable
patch 8.0.0222: blockwise put on multi-byte character misplaced
patch 8.0.0221: unnecessary condition on PROTO
patch 8.0.0220: completion of highlight names misses a few values
patch 8.0.0219: ubsan reports errors for overflow
patch 8.0.0218: no completion for :cexpr and similar commands
patch 8.0.0217: build fails without cscope feature
patch 8.0.0216: decoding js style json may fail
patch 8.0.0215: NULL pointer use if cscope line looks like emacs tag
patch 8.0.0214: leaking memory when syntax cluster id is unknown
patch 8.0.0213: Netbeans specialKeys command does not check argument length
patch 8.0.0212: buffer for key name may be too small
patch 8.0.0211: cannot build without the multi-byte feature
patch 8.0.0210: no support for bracketed paste
patch 8.0.0209: cursor binding does not work with :substitute
patch 8.0.0208: internally used commands end up in history
patch 8.0.0207: leaking file descriptor when system() fails
patch 8.0.0206: test coverage for :retab insufficient
patch 8.0.0205: wrong behavior after :undojoin
patch 8.0.0204: compiler warns for uninitialized variable
patch 8.0.0203: order of complication flags is sometimes wrong
patch 8.0.0202: no test for invalid syntax group name
patch 8.0.0201: completion of highlight groups includes cleared names
patch 8.0.0200: some syntax arguments are not tested
patch 8.0.0199: compiler warnings for libcall
patch 8.0.0198: some syntax arguments take effect even after "if 0"
Update runtime files.
patch 8.0.0197: system() test skips some parts for MS-Windows
patch 8.0.0196: profile test is slo and does not work on MS-Windows
patch 8.0.0195: fail to jump to static tag in current file
patch 8.0.0194: profile tests fails if total and self time are equal
patch 8.0.0193: accidentally removed #ifdef
patch 8.0.0192: cannot build with tiny features
patch 8.0.0191: can't build with Ruby on some systems
patch 8.0.0190: finding duplicate tags uses a slow linear search
patch 8.0.0189: profile commands are not tested
patch 8.0.0188: redrawing for 'cursorbind' is inefficient
patch 8.0.0187: cant build with new Ruby version
patch 8.0.0186: confusing error message from assert_notequal()
patch 8.0.0185: system() test fails on MS-Windows
patch 8.0.0184: when an error is caught Vim still exits with non-zero result
patch 8.0.0183: ubsan warns for unaligned address
patch 8.0.0182: cursor ilne not update when 'cursorbind' is set
patch 8.0.0181: with cursorbind set cursor column highlighting is off
patch 8.0.0180: error E937 is used twice
patch 8.0.0179: cannot have a local value for 'formatprg'
patch 8.0.0178: command count test fails on MS-Windows
patch 8.0.0177: BufEnter autocommand not fired for a directory
patch 8.0.0176: cannot use :change inside a function definition
patch 8.0.0175: setting language on MS-Windows does not always work
patch 8.0.0174: executing "locale -a" on MS-Windows needlessly
patch 8.0.0173: build fails with EBCDIC defined
patch 8.0.0172: command line window does not work
patch 8.0.0171: JS style JSON does not support single quotes
patch 8.0.0170: crash in channel test
patch 8.0.0169: json_decode() may run out of stack space
patch 8.0.0168: not all float functionality is tested
patch 8.0.0167: str2nr()/str2float() fail with negative values
patch 8.0.0166: JSON with a duplicate key gives an internal error
patch 8.0.0165: ubsan warns for integer overflow
patch 8.0.0164: outdated and misplaced comments
Updated runtime files.
patch 8.0.0163: cannot build with Ruby 2.4
patch 8.0.0162: build error on Fedora 23
patch 8.0.0161: can't build with small features
patch 8.0.0160: EMSG() is sometimes used where it should be IEMSG()
patch 8.0.0159: crash on startup when updating tabline
patch 8.0.0158: float funcion test fails on MS-Windows
patch 8.0.0157: no completion for :syntax spell and :syntax sync
patch 8.0.0156: not enough test coverage for float functions
patch 8.0.0155: ubsan complains about NULL pointer
patch 8.0.0154: system() test fails on OS/X
patch 8.0.0153: system() test fails on MS-Windows
patch 8.0.0152: stray channellog created when running tests
patch 8.0.0151: passing buffer content to system() is clumsy
patch 8.0.0150: completion for :filter does not skip the pattern
patch 8.0.0149: :earlier does not work after reading the undo file
patch 8.0.0148: wrong indent in C preprocessor with line continuation
patch 8.0.0147: searchpair() fails when 'magic' is off
patch 8.0.0146: termguicolors uses wrong colors on MS-Windows with ConEmu
patch 8.0.0145: running tests on MS-Windows is noisy
Only install coveralls when used.
Better solution to make coveralls work again.
Tune travis config for coverage with gcc only.
Another attempt to make coveralls work.
Attempt to make coverage working again.
patch 8.0.0144: when using MSVC the GvimExt directory is cleaned twice
patch 8.0.0143: line number of current buffer in getbufinfo() is wrong
patch 8.0.0142 Problem:    Normal colors are wrong with 'termguicolors'. Solution:   Initialize to INVALCOLOR instead of zero. (Ben Jackson, closes             #1344)
Updated runtime files.
patch 8.0.0141 Problem:    Nested function test fails on AppVeyor. Solution:   Disable the test on Windows for now.
patch 8.0.0140 Problem:    Pasting inserted text in Visual mode does not work properly.             (Matthew Malcomson) Solution:   Stop Visual mode before stuffing the inserted text. (Christian             Brabandt, from neovim #5709)
patch 8.0.0139 Problem:    Warning for unused argument. Solution:   Add UNUSED.
patch 8.0.0138 Problem:    Small build fails. Solution:   Add #ifdef.
patch 8.0.0137 Problem:    When 'maxfuncdepth' is set above 200 the nesting is limited to             200. (Brett Stahlman) Solution:   Allow for Ex command recursion depending on 'maxfuncdepth'.
patch 8.0.0136 Problem:    When using indent folding and changing indent the wrong fold is             opened. (Jonathan Fudger) Solution:   Open the fold under the cursor a bit later. (Christian Brabandt)
patch 8.0.0135 Problem:    An address relative to the current line, ":.,+3y", does not work             properly on a closed fold. (Efraim Yawitz) Solution:   Correct for including the closed fold. (Christian Brabandt)
patch 8.0.0134 Problem:    Null pointer access reported by UBsan. Solution:   Check curwin->w_buffer is not NULL. (Yegappan Lakshmanan)
patch 8.0.0133 Problem:    "2;'(" causes ml_get errors in an empty buffer.  (Dominique Pelle) Solution:   Check the cursor line earlier.
patch 8.0.0132 Problem:    Test fails because of using :finish. Solution:   Change to return.
patch 8.0.0131 Problem:    Not enough test coverage for syntax commands. Solution:   Add more tests. (Dominique Pelle)
patch 8.0.0130 Problem:    Configure uses "ushort" while the Vim code doesn't. Solution:   Use "unsigned short" instead. (Fredrik Fornwall, closes #1314)
patch 8.0.0129 Problem:    Parallel make still doesn't work. (Lewis Muir) Solution:   Define OBJ_MAIN.
patch 8.0.0128 Problem:    Display test fails on MS-Windows. Solution:   Set 'isprint' to "@".
patch 8.0.0127 Problem:    Cancelling completion still inserts text when formatting is done             for 'textwidth'. (lacygoill) Solution:   Don't format when CTRL-E was typed. (Hirohito Higashi,             closes #1312)
patch 8.0.0126 Problem:    Display problem with 'foldcolumn' and a wide character.             (esiegerman) Solution:   Don't use "extra" but an allocated buffer. (Christian Brabandt,             closes #1310)
patch 8.0.0125 Problem:    Not enough testing for entering Ex commands. Solution:   Add test for CTRL-\ e {expr}. (Dominique Pelle)
patch 8.0.0124 Problem:    Internal error for assert_inrange(1, 1). Solution:   Adjust number of allowed arguments. (Dominique Pelle)
patch 8.0.0123 Problem:    Modern Sun compilers define "__sun" instead of "sun". Solution:   Use __sun. (closes #1296)
patch 8.0.0122 Problem:    Channel test is still flaky on OS X. Solution:   Add a short sleep.
patch 8.0.0121 Problem:    Setting 'cursorline' changes the curswant column. (Daniel Hahler) Solution:   Add the P_RWINONLY flag. (closes #1297)
patch 8.0.0120 Problem:    Channel test is still flaky on OS X. Solution:   Set the drop argument to "never".
patch 8.0.0119 Problem:    No test for using CTRL-R on the command line. Solution:   Add a test. (Dominique Pelle) And some more.
Add objects dirstamp to gitignore.
patch 8.0.0118 Problem:    "make proto" adds extra function prototype. Solution:   Add #ifdef.
Updated runtime files.
patch 8.0.0117 Problem:    Parallel make fails. (J. Lewis Muir) Solution:   Make sure the objects directory exists. (closes #1259)
patch 8.0.0116 Problem:    When reading English help and using CTRl-] the language from             'helplang' is used. Solution:   Make help tag jumps keep the language. (Tatsuki, test by Hirohito             Higashi, closes #1249)
patch 8.0.0115 Problem:    When building with Cygwin libwinpthread isn't found. Solution:   Link winpthread statically. (jmmerz, closes #1255, closes #1256)
patch 8.0.0114 Problem:    Coding style not optimal. Solution:   Add spaces. (Ken Takata)
patch 8.0.0113 Problem:    MS-Windows: message box to prompt for saving changes may appear on             the wrong monitor. Solution:   Adjust the CenterWindow function. (Ken Takata)
patch 8.0.0112 Problem:    Tests 92 and 93 are old style. Solution:   Make test92 and test93 new style. (Hirohito Higashi, closes #1289)
patch 8.0.0111 Problem:    The :history command is not tested. Solution:   Add tests. (Dominique Pelle)
patch 8.0.0110 Problem:    Drop command doesn't use existing window. Solution:   Check the window width properly. (Hirohito Higashi)
patch 8.0.0109 Problem:    Still checking if memcmp() exists while every system should have             it now. Solution:   Remove vim_memcmp().  (James McCoy, closes #1295)
patch 8.0.0108 Problem:    The channel "drop" option is not tested. Solution:   Add a test.
patch 8.0.0107 Problem:    When reading channel output in a timer, messages may go missing.             (Skywind) Solution:   Add the "drop" option.  Write error messages in the channel log.             Don't have ch_canread() check for the channel being open.
patch 8.0.0106 Problem:    Cannot use a semicolon in 'backupext'. (Jeff) Solution:   Allow for a few more characters when "secure" isn't set.
patch 8.0.0105 Problem:    When using ch_read() with zero timeout, can't tell the difference             between reading an empty line and nothing available. Solution:   Add ch_canread().
patch 8.0.0104 Problem:    Value of 'thesaurus' option not checked properly. Solution:   Add P_NDNAME flag. (Daisuke Suzuki)
patch 8.0.0103 Problem:    May not process channel readahead. (skywind) Solution:   If there is readahead don't block on input.
patch 8.0.0102 Problem:    Cannot set 'dictionary' to a path. Solution:   Allow for slash and backslash.  Add a test (partly by Daisuke             Suzuki, closes #1279, closes #1284)
patch 8.0.0101 Problem:    Some options are not strictly checked. Solution:   Add flags for strickter checks.
patch 8.0.0100 Problem:    Options that are a file name may contain non-filename characters. Solution:   Check for more invalid characters.
patch 8.0.0099 Problem:    Popup menu always appears above the cursor when it is in the lower             half of the screen. (Matt Gardner) Solution:   Compute the available space better. (Hirohito Higashi,             closes #1241)
patch 8.0.0098 Problem:    Can't build on MS-Windows. Solution:   Add missing parenthesis.
patch 8.0.0097 Problem:    When a channel callback consumes a lot of time Vim becomes             unresponsive. (skywind) Solution:   Bail out of checking channel readahead after 100 msec.
patch 8.0.0096 Problem:    When the input or output is not a tty Vim appears to hang. Solution:   Add the --ttyfail argument.  Also add the "ttyin" and "ttyout"             features to be able to check in Vim script.
patch 8.0.0095 Problem:    Problems with GTK 3.22.2 fixed in 3.22.4. Solution:   Adjust the #ifdefs. (Kazunobu Kuriyama)
patch 8.0.0094 Problem:    When vimrun.exe is not found the error message is not properly             encoded. Solution:   Use utf-16 and MessageBoxW(). (Ken Takata)
patch 8.0.0093 Problem:    Not using multiprocess build feature. Solution:   Enable multiprocess build with MSVC 10. (Ken Takata)
patch 8.0.0092 Problem:    C indenting does not support nested namespaces that C++ 17 has. Solution:   Add check that passes double colon inside a name. (Pauli, closes             #1214)
patch 8.0.0091 Problem:    Test_help_complete sometimes fails in MS-Windows console. Solution:   Use getcompletion() instead of feedkeys() and command line             completion. (Hirohito Higashi)
patch 8.0.0090 Problem:    Test_help_complete sometimes fails in MS-Windows console. Solution:   Use getcompletion() instead of feedkeys() and command line             completion. (Hirohito Higashi)
patch 8.0.0088 Problem:    When a test fails in Setup or Teardown the problem is not reported. Solution:   Add a try/catch. (Hirohito Higashi)
patch 8.0.0087 Problem:    When the channel callback gets job info the job may already have             been deleted. (lifepillar) Solution:   Do not delete the job when the channel is still useful. (ichizok,             closes #1242, closes #1245)
Updated runtime files.
patch 8.0.0086 Problem:    Cannot add a comment after ":hide". (Norio Takagi) Solution:   Make it work, add a test. (Hirohito Higashi)
patch 8.0.0085 Problem:    Using freed memory with recursive function call. (Dominique Pelle) Solution:   Make a copy of the function name.
patch 8.0.0084 Problem:    Using freed memory when adding to a quickfix list. (Domenique             Pelle) Solution:   Clear the directory name.
patch 8.0.0083 Problem:    Using freed memory with win_getid(). (Domenique Pelle) Solution:   For the current tab use curwin.
patch 8.0.0082 Problem:    Extension for configure should be ".ac". Solution:   Rename configure.in to configure.ac. (James McCoy, closes #1173)
patch 8.0.0081 Problem:    Inconsistent function names. Solution:   Rename do_cscope to ex_cscope.  Clean up comments.
patch 8.0.0080 Problem:    The OS X build fails on Travis. Solution:   Skip the virtual framebuffer on OS X.
patch 8.0.0079 Problem:    Accessing freed memory in quickfix. (Domenique Pelle) Solution:   Do not free the current list when adding to it.
patch 8.0.0078 Problem:    Accessing freed memory in quickfix. Solution:   Reset pointer when freeing 'errorformat'. (Domenique Pelle)
patch 8.0.0077 Problem:    The GUI code is not tested by Travis. Solution:   Install the virtual framebuffer.
patch 8.0.0076 Problem:    Channel log has double parens ()(). Solution:   Remove () for write_buf_line. (Yasuhiro Matsumoto)
patch 8.0.0075 Problem:    Using number for exception type lacks type checking. Solution:   Use an enum.
patch 8.0.0074 Problem:    Cannot make Vim fail on an internal error. Solution:   Add IEMSG() and IEMSG2(). (Domenique Pelle)  Avoid reporting an             internal error without mentioning where.
patch 8.0.0073 Problem:    More comparisons between firstwin and lastwin. Solution:   Use ONE_WINDOW for consistency. (Hirohito Higashi)
patch 8.0.0071 Problem:    Exit value from a shell command is wrong. (Hexchain Tong) Solution:   Do not check for ended jobs while waiting for a shell command.             (ichizok, closes #1196)
patch 8.0.0070 Problem:    Tests referred in Makefile that no longer exist. Solution:   Remove test71 and test74 entries. (Michael Soyka)
patch 8.0.0069 Problem:    Compiler warning for self-comparison. Solution:   Define ONE_WINDOW and add #ifdef.
Updated runtime files.
patch 8.0.0068 Problem:    Checking did_throw after executing autocommands is wrong. (Daniel             Hahler) Solution:   Call aborting() instead, and only when autocommands were executed.
patch 8.0.0067 Problem:    VMS has a problem with infinity. Solution:   Avoid an overflow. (Zoltan Arpadffy)
patch 8.0.0066 Problem:    when calling an operator function when 'linebreak' is set, it is             internally reset before calling the operator function. Solution:   Restore 'linebreak' before calling op_function(). (Christian             Brabandt)
patch 8.0.0065 Problem:    Compiler warning for unused function in tiny build. (Tony             Mechelynck) Solution:   Add #ifdef.
patch 8.0.0064 Problem:    Normal test fails on MS-Windows. Solution:   Don't try using an illegal file name.
patch 8.0.0063 Problem:    Compiler warning for comparing with unsigned. (Zoltan Arpadffy) Solution:   Change <= to ==.
patch 8.0.0062 Problem:    No digraph for HORIZONTAL ELLIPSIS. Solution:   Use ",.". (Hans Ginzel, closes #1226)
patch 8.0.0061 Problem:    Compiler warning for unused variable. Solution:   Add #ifdef. (John Marriott)
patch 8.0.0060 Problem:    When using an Ex command for 'keywordprg' it is escaped as with a             shell command. (Romain Lafourcade) Solution:   Escape for an Ex command. (closes #1175)
patch 8.0.0059 Problem:    Vim does not build on VMS systems. Solution:   Various changes for VMS. (Zoltan Arpadffy)
patch 8.0.0058 Problem:    Positioning of the popup menu is not good. Solution:   Position it better. (Hirohito Higashi)
patch 8.0.0057 Problem:    Tests fail without the 'keymap' features. Solution:   Check for feature in test.
patch 8.0.0056 Problem:    When setting 'filetype' there is no check for a valid name. Solution:   Only allow valid characters in 'filetype', 'syntax' and 'keymap'.
patch 8.0.0055 Problem:    Minor comment and style deficiencies. Solution:   Update comments and fix style.
Runtime file updates.
patch 8.0.0054 Problem:    On Windows job_stop() stops cmd.exe, not the processes it runs.             (Linwei) Solution:   Iterate over all processes and terminate the one where the parent             is the job process. Now only when there is no job object.             (Yasuhiro Matsumoto, closes #1203)
patch 8.0.0053 Problem:    No test for what 8.0.0047 fixes. Solution:   Add a test. (Hirohito Higashi)
patch 8.0.0052 Problem:    Conceal test passes even without the bug fix. Solution:   Add a redraw command. (Christian Brabandt)
patch 8.0.0051 Problem:    New code for job_stop() breaks channel test on AppVeyor. Solution:   Revert the change.
patch 8.0.0050 Problem:    An exiting job is detected with a large latency. Solution:   Check for pending job more often. (Ozaki Kiichi)  Change the             double loop in mch_inchar() into one.
patch 8.0.0049 Problem:    When a match ends in part of concealed text highlighting, it might             mess up concealing by resetting prev_syntax_id. Solution:   Do not reset prev_syntax_id and add a test to verify. (Christian             Brabandt, closes #1092)
Updated runtime files.
patch 8.0.0048 Problem:    On Windows job_stop() stops cmd.exe, not the processes it runs.             (Linwei) Solution:   Iterate over all processes and terminate the one where the parent             is the job process. (Yasuhiro Matsumoto, closes #1184)
patch 8.0.0047 Problem:    Crash when using the preview window from an unnamed buffer.             (lifepillar) Solution:   Do not clear the wrong buffer. (closes #1200)
Updated runtime files.
patch 8.0.0046 Problem:    Using NUL instead of NULL. Solution:   Change to NULL. (Dominique Pelle)
patch 8.0.0045 Problem:    Calling job_stop() right after job_start() does not work. Solution:   Block signals while fork is still busy. (Ozaki Kiichi, closes             #1155)
patch 8.0.0044 Problem:    In diff mode the cursor may end up below the last line, resulting             in an ml_get error. Solution:   Check the line to be valid.
patch 8.0.0043 Problem:    When using Insert mode completion with 'completeopt' containing             "noinsert" with CTRL-N the change is not saved for undo.  (Tommy             Allen) Solution:   Call stop_arrow() before inserting for any key.
patch 8.0.0042 Problem:    When using Insert mode completion with 'completeopt' containing             "noinsert" change is not saved for undo.  (Tommy Allen) Solution:   Call stop_arrow() before inserting for pressing Enter.
patch 8.0.0041 Problem:    When using Insert mode completion but not actually inserting             anything an undo item is still created. (Tommy Allen) Solution:   Do not call stop_arrow() when not inserting anything.
patch 8.0.0040 Problem:    Whole line highlighting with matchaddpos() does not work. Solution:   Check for zero length. (Hirohito Higashi)
patch 8.0.0039 Problem:    When Vim 8 reads an old viminfo and exits, the next time marks are             not read from viminfo. (Ned Batchelder) Solution:   Set a mark when it wasn't set before, even when the timestamp is             zero. (closes #1170)
patch 8.0.0038 Problem:    OPEN_CHR_FILES not defined for FreeBSD using Debian userland             files. Solution:   Check for __FreeBSD_kernel__. (James McCoy, closes #1166)
patch 8.0.0037 Problem:    Get E924 when switching tabs. () Solution:   Use win_valid_any_tab() instead of win_valid(). (Martin Vuille,             closes #1167, closes #1171)
patch 8.0.0036 Problem:    Detecting that a job has finished may take a while. Solution:   Check for a finished job more often (Ozaki Kiichi)
patch 8.0.0035 Problem:    Order of matches for 'omnifunc' is messed up. (Danny Su) Solution:   Do not set compl_curr_match when called from complete_check().             (closes #1168)
patch 8.0.0034 Problem:    No completion for ":messages". Solution:   Complete "clear" argument. (Hirohito Higashi)
patch 8.0.0033 Problem:    Cannot use overlapping positions with matchaddpos(). Solution:   Check end of match. (Ozaki Kiichi) Add a test (Hirohito Higashi)
Updated runtime files.
patch 8.0.0032 Problem:    Tests may change the input file when something goes wrong. Solution:   Avoid writing the input file.
patch 8.0.0031 Problem:    After ":bwipeout" 'fileformat' is not set to the right default. Solution:   Get the default from 'fileformats'. (Mike Williams)
patch 8.0.0030 Problem:    Mouse mode is not automatically detected for tmux. Solution:   Check for 'term' to be "tmux". (Michael Henry)
patch 8.0.0029 Problem:    Code for MS-Windows is complicated because of the exceptions for             old systems. Solution:   Drop support for MS-Windows older than Windows XP. (Ken Takata)
patch 8.0.0028 Problem:    Superfluous semicolons. Solution:   Remove them. (Ozaki Kiichi)
Updated runtime files.
patch 8.0.0027 Problem:    A channel is closed when reading on stderr or stdout fails, but             there may still be something to read on another part. Solution:   Turn ch_to_be_closed into a bitfield. (Ozaki Kiichi)
patch 8.0.0026 Problem:    Error format with %W, %C and %Z does not work. (Gerd Wachsmuth) Solution:   Skip code when qf_multiignore is set. (Lcd)
patch 8.0.0025 Problem:    Inconsistent use of spaces vs tabs in gd test. Solution:   Use tabs. (Anton Lindqvist)
patch 8.0.0024 Problem:    When the netbeans channel closes, "DETACH" is put in the output             part. (Ozaki Kiichi) Solution:   Write "DETACH" in the socket part.
patch 8.0.0023 Problem:    "gd" and "gD" may find a match in a comment or string. Solution:   Ignore matches in comments and strings. (Anton Lindqvist)
patch 8.0.0022 Problem:    If a channel in NL mode is missing the NL at the end the remaining             characters are dropped. Solution:   When the channel is closed use the remaining text. (Ozaki Kiichi)
patch 8.0.0021 Problem:    In the GUI when redrawing the cursor it may be on the second half             of a double byte character. Solution:   Correct the cursor column. (Yasuhiro Matsumoto)
patch 8.0.0020 Problem:    The regexp engines are not reentrant. Solution:   Add regexec_T and save/restore the state when needed.
Updated runtime files.
patch 8.0.0019 Problem:    Test_command_count is old style. Solution:   Turn it into a new style test. (Naruhiko Nishino)             Use more assert functions.
patch 8.0.0018 Problem:    When using ":sleep" channel input is not handled. Solution:   When there is a channel check for input also when not in raw mode.             Check every 100 msec.
Missing part of patch 8.0.0014
patch 8.0.0017 Problem:    Cannot get the number of the current quickfix or location list. Solution:   Use the current list if "nr" in "what" is zero. (Yegappan             Lakshmanan)  Remove debug command from test.
patch 8.0.0016 Problem:    Build fails. Solution:   Include missing change.
patch 8.0.0015 Problem:    Can't tell which part of a channel has "buffered" status. Solution:   Add an optional argument to ch_status().  Let ch_info() also             return "buffered" for out_status and err_status.
patch 8.0.0014 Problem:    Crypt tests are old style. Solution:   Convert to new style.
patch 8.0.0013 Problem:    Missing comma in list. Solution:   Add the comma.
Updated runtime files.
patch 8.0.0012 Problem:    Typos in comments. Solution:   Change "its" to "it's". (Matthew Brener, closes #1088)
patch 8.0.0011 Problem:    On OSX Test_pipe_through_sort_all() sometimes fails. Solution:   Add the test to the list of flaky tests.
patch 8.0.0010 Problem:    Crash when editing file that starts with crypt yeader. (igor2x) Solution:   Check for length of text. (Christian Brabandt) Add a test.
patch 8.0.0009 Problem:    Unecessary workround for AppVeyor. Solution:   Revert patch 7.4.990. (Christian Brabandt)
Updated runtime files.
patch 8.0.0008 Problem:    Popup complete test is disabled. Solution:   Enable the test and change the assert. (Hirohito Higashi)
patch 8.0.0007 Problem:    Vim 7.4 is still mentioned in a few places. Solution:   Update to Vim 8.  (Uncle Bill, closes #1094)
patch 8.0.0006 Problem:    ":lb" is interpreted as ":lbottom" while the documentation says it             means ":lbuffer". Solution:   Adjust the order of the commands. (haya14busa, closes #1093)
Updated runtime files.
patch 8.0.0005 Problem:    Netbeans test fails with Python 3. (Jonathonf) Solution:   Encode the string before sending it. (closes #1070)
patch 8.0.0004 Problem:    A string argument for function() that is not a function name             results in an error message with NULL. (Christian Brabandt) Solution:   Use the argument for the error message.
patch 8.0.0003 Problem:    getwinvar() returns wrong Value of boolean and number options,             especially non big endian systems. (James McCoy) Solution:   Cast the pointer to long or int. (closes #1060)
Update translations for intro page.
patch 8.0.0002 Problem:    The netrw plugin does not work. Solution:   Make it accept version 8.0.
patch 8.0.0001 Problem:    Intro screen still mentions version7. (Paul) Solution:   Change it to version8.
Vim 8.0 release
patch 7.4.2367 Problem:    Test runner misses a comma. Solution:   Add the comma.
patch 7.4.2366 Problem:    MS-Windows gvim.exe does not have DirectX support. Solution:   Add the DIRECTX to the script.
patch 7.4.2365 Problem:    Needless line break. Confusing directory name. Solution:   Remove line break.  Prepend "../" to "tools".
A few more runtime updates.
patch 7.4.2364 Problem:    Sort test sometimes fails. Solution:   Add it to the list of flaky tests.
patch 7.4.2363 Problem:    Superfluous function prototypes. Solution:   Remove them.
Updated runtime files, Japanese translations.
patch 7.4.2362 Problem:    Illegal memory access with ":1@". (Dominique Pelle) Solution:   Correct cursor column after setting the line number.  Also avoid             calling end_visual_mode() when not in Visual mode.
patch 7.4.2361 Problem:    Checking for last_timer_id to overflow is not reliable. (Ozaki             Kiichi) Solution:   Check for the number not going up.
patch 7.4.2360 Problem:    Invalid memory access when formatting. (Dominique Pelle) Solution:   Make sure cursor line and column are associated.
patch 7.4.2359 Problem:    Memory leak in timer_start(). Solution:   Check the right field to be NULL.
patch 7.4.2358 Problem:    Compiler warnings with Solaris Studio when using GTK3. Solution:   Define FUNC2GENERIC depending on the system. (Kazunobu Kuriyama)
patch 7.4.2357 Problem:    Attempt to read history entry while not initialized. Solution:   Skip when the index is negative.
patch 7.4.2356 Problem:    Reading past end of line when using previous substitute pattern.             (Dominique Pelle) Solution:   Don't set "pat" only set "searchstr".
patch 7.4.2355 Problem:    Regexp fails to match when using "\>\)\?". (Ramel) Solution:   When a state is already in the list, but addstate_here() is used             and the existing state comes later, add the new state anyway.
patch 7.4.2354 Problem:    The example that explains nested backreferences does not work             properly with the new regexp engine. (Harm te Hennepe) Solution:   Also save the end position when adding a state. (closes #990)
patch 7.4.2353 Problem:    Not enough test coverage for Normal mode commands. Solution:   Add more tests. (Christian Brabandt)
patch 7.4.2352 Problem:    Netbeans test fails in shadow directory. Solution:   Also copy README.txt to the shadow directory.
patch 7.4.2351 Problem:    Netbeans test fails when run from unpacked MS-Windows sources. Solution:   Open README.txt instead of Makefile.
patch 7.4.2350 Problem:    Test 86 and 87 fail with some version of Python. Solution:   Unify "can't" and "cannot".  Unify quotes.
patch 7.4.2349 Problem:    Valgrind reports using uninitialzed memory. (Dominique Pelle) Solution:   Check the length before checking for a NUL.
patch 7.4.2348 Problem:    Crash on exit when EXITFREE is defined. (Dominique Pelle) Solution:   Don't access curwin when exiting.
patch 7.4.2347 Problem:    Crash when closing a buffer while Visual mode is active.             (Dominique Pelle) Solution:   Adjust the position before computing the number of lines.             When closing the current buffer stop Visual mode.
Updated runtime files
patch 7.4.2346 Problem:    Autocommand test fails when run directly, passes when run as part             of test_alot. Solution:   Add command to make the cursor move.  Close a tab page.
patch 7.4.2345 Problem:    For MinGW RUBY_API_VER_LONG isn't set correctly.  Many default             version numbers are outdated. Solution:   Set RUBY_API_VER_LONG to RUBY_VER_LONG. Use latest stable releases             for defaults. (Ken Takata)
patch 7.4.2344 Problem:    The "Reading from channel output..." message can be unwanted.             Appending to a buffer leaves an empty first line behind. Solution:   Add the "out_msg" and "err_msg" options. Writing the first line             overwrites the first, empty line.
patch 7.4.2343 Problem:    Too many old file tests. Solution:   Turn several into new style tests. (Yegappan Lakshmanan)
patch 7.4.2342 Problem:    Typo in MS-Windows build script. Solution:   change "w2" to "22".
patch 7.4.2341 Problem:    Tiny things.  Test doesn't clean up properly. Solution:   Adjust comment and white space. Restore option value.
Updated runtime files.
patch 7.4.2340 Problem:    MS-Windows: Building with Ruby uses old version. Solution:   Update to 2.2.X. Use clearer name for the API version. (Ken             Takata)
patch 7.4.2339 Problem:    Tab page test fails when run as fake root. Solution:   Check 'buftype' instead of 'filetype'. (James McCoy, closes #1042)
patch 7.4.2338 Problem:    Can't build with small features. (John Marriott) Solution:   Nearly always define FEAT_TAG_BINS.
patch 7.4.2337 Problem:    taglist() is still slow. (Luc Hermitte) Solution:   Check for CTRL-C less often when finding duplicates.
patch 7.4.2336 Problem:    Running normal mode tests leave a couple of files behind.             (Yegappan Lakshmanan) Solution:   Delete the files. (Christian Brabandt)
patch 7.4.2335 Problem:    taglist() is slow. (Luc Hermitte) Solution:   Check for CTRL-C less often when doing a linear search. (closes             #1044)
patch 7.4.2334 Problem:    On MS-Windows test_getcwd leaves Xtopdir behind. Solution:   Set 'noswapfile'. (Michael Soyka)
patch 7.4.2333 Problem:    Outdated comments in test. Solution:   Cleanup normal mode test. (Christian Brabandt)
patch 7.4.2332 Problem:    Crash when stop_timer() is called in a callback of a callback.             Vim hangs when the timer callback uses too much time. Solution:   Set tr_id to -1 when a timer is to be deleted. Don't keep calling             callbacks forever. (Ozaki Kiichi)
patch 7.4.2331 Problem:    Using CTRL-X CTRL-V to complete a command line from Insert mode             does not work after entering an expression on the command line. Solution:   Don't use "ccline" when not actually using a command line. (test             by Hirohito Higashi)
patch 7.4.2330 Problem:    Coverity complains about not checking curwin to be NULL. Solution:   Use firstwin to avoid the warning.
patch 7.4.2329 Problem:    Error for min() and max() contains %s. (Nikolay Pavlov) Solution:   Pass the function name. (closes #1040)
patch 7.4.2328 Problem:    Crash when BufWinLeave autocmd goes to another tab page. (Hirohito             Higashi) Solution:   Make close_buffer() go back to the right window.
patch 7.4.2327 Problem:    Freeing a variable that is on the stack. Solution:   Don't free res_tv or err_tv. (Ozaki Kiichi)
patch 7.4.2326 Problem:    Illegal memory access when Visual selection starts in invalid             position. (Dominique Pelle) Solution:   Correct position when needed.
patch 7.4.2325 Problem:    Tiny build fails. Solution:   Add #ifdef.
patch 7.4.2324 Problem:    Crash when editing a new buffer and BufUnload autocommand wipes             out the new buffer. (Norio Takagi) Solution:   Don't allow wiping out this buffer. (partly by Hirohito Higashi)             Move old style test13 into test_autocmd. Avoid ml_get error when             editing a file.
patch 7.4.2323 Problem:    Using freed memory when using 'formatexpr'. (Dominique Pelle) Solution:   Make a copy of 'formatexpr' before evaluating it.
patch 7.4.2322 Problem:    Access memory beyond the end of the line. (Dominique Pelle) Solution:   Adjust the cursor column.
patch 7.4.2321 Problem:    When a test is commented out we forget about it. Solution:   Let a test throw an exception with "Skipped" and list skipped test             functions. (Christian Brabandt)
patch 7.4.2319 Problem:    No way for a system wide vimrc to stop loading defaults.vim.             (Christian Hesse) Solution:   Bail out of defaults.vim if skip_defaults_vim was set.
patch 7.4.2318 Problem:    When 'incsearch' is not set CTRL-T and CTRL-G are not inserted as             before. Solution:   Move #ifdef and don't use goto.
patch 7.4.2317 Problem:    Normal mode tests fail on MS-Windows. Solution:   Do some tests only on Unix.  Set 'fileformat' to "unix".
patch 7.4.2316 Problem:    Channel sort test is flaky. Solution:   Add a check the output has been read.
patch 7.4.2315 Problem:    Insufficient testing for Normal mode commands. Solution:   Add a big test. (Christian Brabandt, closes #1029)
patch 7.4.2314 Problem:    No error when deleting an augroup while it's the current one. Solution:   Disallow deleting an augroup when it's the current one.
patch 7.4.2313 Problem:    Crash when deleting an augroup and listing an autocommand.             (Dominique Pelle) Solution:   Make sure deleted_augroup is valid.
patch 7.4.2312 Problem:    Crash when autocommand moves to another tab. (Dominique Pelle) Solution:   When navigating to another window halfway the :edit command go             back to the right window.
patch 7.4.2311 Problem:    Appveyor 64 bit build still using Python 3.4 Solution:   Switch to Python 3.5. (Ken Takata, closes #1032)
patch 7.4.2310 Problem:    Accessing freed memory when a timer does not repeat. Solution:   Free after removing it. (Dominique Pelle)
patch 7.4.2309 Problem:    Crash when doing tabnext in a BufUnload autocmd. (Dominique Pelle) Solution:   When detecting that the tab page changed, don't just abort but             delete the window where w_buffer is NULL.
patch 7.4.2308 Problem:    Old charsearch test still listed in Makefile. Solution:   Remove the line.
patch 7.4.2307 Problem:    Several tests are old style. Solution:   Turn them into new style tests. (Yegappan Lakshmanan)
patch 7.4.2306 Problem:    Default value for 'langremap' is wrong. Solution:   Set the right value. (Jürgen Krämer)  Add a test.
patch 7.4.2305 Problem:    Marks, writefile and nested function tests are old style. Solution:   Turn them into new style tests. (Yegappan Lakshmanan)
patch 7.4.2304 Problem:    In a timer callback the timer itself can't be found or stopped.             (Thinca) Solution:   Do not remove the timer from the list, remember whether it was             freed.
patch 7.4.2303 Problem:    When using "is" the mode isn't always updated. Solution:   Redraw the command line. (Christian Brabandt)
patch 7.4.2302 Problem:    Default interface versions for MS-Windows are outdated. Solution:   Use Active Perl 5.24, Python 3.5.2.  Could only make it work with             Ruby 1.9.2.
patch 7.4.2301 Problem:    MS-Windows: some files remain after testing. Solution:   Close the channel output file.  Wait for the file handle to be             closed before deleting the file.
patch 7.4.2300 Problem:    Get warning for deleting autocommand group when the autocommand             using the group is scheduled for deletion. (Pavol Juhas) Solution:   Check for deleted autocommand.
patch 7.4.2298 Problem:    It is not possible to close the "in" part of a channel. Solution:   Add ch_close_in().
patch 7.4.2297 Problem:    When starting a job that reads from a buffer and reaching the end,             the job hangs. Solution:   Close the pipe or socket when all lines were read.
Updated runtime files.  Remove HiLink commands.
patch 7.4.2296 Problem:    No tests for :undolist and "U" command. Solution:   Add tests. (Dominique Pelle)
Updated runtime files.  Remove version checks for Vim older than 6.0.
patch 7.4.2295 Problem:    Cscope test fails. Solution:   Avoid checking for specific line and column numbers.
patch 7.4.2294 Problem:    Sign test fails on MS-Windows when using the distributed zip             archives. Solution:   Create dummy files instead of relying on files in the pixmaps             directory.
patch 7.4.2293 Problem:    Modelines in source code are inconsistant. Solution:   Use the same line in most files.  Add 'noet'.  (Naruhiko Nishino)
patch 7.4.2292 Problem:    Not all systems understand %F in printf(). Solution:   Use %f.
patch 7.4.2290 Problem:    Compiler warning in tiny build. (Tony Mechelynck) Solution:   Add #ifdef around infinity_str().
patch 7.4.2289 Problem:    When installing and $DESTDIR is set the icons probably won't be             installed. Solution:   Create the icon directories if $DESTDIR is not empty. (Danek             Duvall)
patch 7.4.2287 Problem:    The callback passed to ch_sendraw() is not used. Solution:   Pass the read part, not the send part. (haya14busa, closes #1019)
patch 7.4.2286 Problem:    The tee program isn't included.  Makefile contains build             instructions that don't work. Solution:   Update the Filelist and build instructions. Remove build             instructions for DOS and old Windows.  Add the tee program.
Updated runtime files.
patch 7.4.2285 Problem:    Generated files are outdated. Solution:   Generate the files.  Avoid errors when generating prototypes.
patch 7.4.2284 Problem:    Comment in scope header file is outdated. (KillTheMule) Solution:   Point to the help instead. (closes #1017)
patch 7.4.2283 Problem:    Part of ":oldfiles" command isn't cleared. (Lifepillar) Solution:   Clear the rest of the line. (closes 1018)
patch 7.4.2282 Problem:    When a child process is very fast waiting 10 msec for it is             noticeable. (Ramel Eshed) Solution:   Start waiting for 1 msec and gradually increase.
patch 7.4.2281 Problem:    Timer test fails sometimes. Solution:   Reduce minimum time by 1 msec.
patch 7.4.2280 Problem:    printf() doesn't handle infinity float values correctly. Solution:   Add a table with possible infinity values. (Dominique Pelle)
patch 7.4.2279 Problem:    Starting diff mode with the cursor in the last line might end up             only showing one closed fold. (John Beckett) Solution:   Scroll the window to show the same relative cursor position.
patch 7.4.2278 Problem:    New users have no idea of the 'scrolloff' option. Solution:   Set 'scrolloff' in defaults.vim.
patch 7.4.2277 Problem:    Memory leak in getbufinfo() when there is a sign. (Dominique             Pelle) Solution:   Remove extra vim_strsave().
patch 7.4.2276 Problem:    Command line test fails on Windows when run twice. Solution:   Wipe the buffer so that the directory can be deleted.
patch 7.4.2275 Problem:    ":diffoff!" does not remove filler lines. Solution:   Force a redraw and invalidate the cursor. (closes #1014)
Updated runtime files and translations.
patch 7.4.2274 Problem:    Command line completion on "find **/filename" drops sub-directory. Solution:   Handle this case separately. (Harm te Hennepe, closes #932, closes             #939)
patch 7.4.2273 Problem:    getwininfo() and getbufinfo() are inefficient. Solution:   Do not make a copy of all window/buffer-local options.  Make it             possible to get them with gettabwinvar() or getbufvar().
patch 7.4.2272 Problem:    getbufinfo(), getwininfo() and gettabinfo() are inefficient. Solution:   Instead of making a copy of the variables dictionary, use a             reference.
patch 7.4.2271 Problem:    Netbeans test doesn't read settings from file. Solution:   Use "-Xnbauth".
patch 7.4.2270 Problem:    Insufficient testing for NUL bytes on a raw channel. Solution:   Add a test for writing and reading.
patch 7.4.2269 Problem:    Using 'hlsearch' highlighting instead of matchpos if there is no             search match. Solution:   Pass NULL as last item to next_search_hl() when searching for             'hlsearch' match. (Shane Harper, closes #1013)
patch 7.4.2268 Problem:    Using CTRL-N and CTRL-P for incsearch shadows completion keys. Solution:   Use CTRL-T and CTRL-G instead.
patch 7.4.2267 Problem:    Build fails on MS-Windows. Solution:   Add define to get isinf().
patch 7.4.2266 Problem:    printf() test fails on Windows. "-inf" is not used. Solution:   Check for Windows-specific values for "nan".  Add sign to "inf"             when appropriate.
patch 7.4.2265 Problem:    printf() isn't tested much. Solution:   Add more tests for printf(). (Dominique Pelle)
patch 7.4.2264 Problem:    When adding entries to an empty quickfix list the title is reset. Solution:   Improve handling of the title. (Yegappan Lakshmanan)
patch 7.4.2263 Problem:    :filter does not work for many commands.  Can only get matching             messages. Solution:   Make :filter work for :command, :map, :list, :number and :print.             Make ":filter!" show non-matching lines.
patch 7.4.2262 Problem:    Fail to read register content from viminfo if it is 438 characters             long. (John Chen) Solution:   Adjust the check for line wrapping. (closes #1010)
patch 7.4.2261 Problem:    Build fails with small features. Solution:   Move "else" inside the #ifdef.
Updated runtime files.  Add Scala files.
patch 7.4.2260 Problem:    Channel test is flaky. Solution:   Add a newline to separate JSON messages.
patch 7.4.2259 Problem:    With 'incsearch' can only see the next match. Solution:   Make CTRL-N/CTRL-P move to the previous/next match. (Christian             Brabandt)
patch 7.4.2258 Problem:    Two JSON messages are sent without a separator. Solution:   Separate messages with a NL. (closes #1001)
patch 7.4.2257 Problem:    Coverity complains about not checking for NULL. Solution:   Check for out of memory.
patch 7.4.2256 Problem:    Coverity complains about null pointer check. Solution:   Remove wrong and superfluous error check.
patch 7.4.2255 Problem:    The script that checks translations can't handle plurals. Solution:   Check for plural msgid and msgstr entries.  Leave the cursor on             the first error.
patch 7.4.2254 Problem:    Compiler warnings in MzScheme code. Solution:   Add UNUSED.  Remove unreachable code.
patch 7.4.2253 Problem:    Check for Windows 3.1 will always return false.  (Christian             Brabandt) Solution:   Remove the dead code.
patch 7.4.2252 Problem:    Compiler warnings for signed/unsigned in expression. Solution:   Remove type cast. (Dominique Pelle)
patch 7.4.2251 Problem:    In rare cases diffing 4 buffers is not enough. Solution:   Raise the limit to 8. (closes #1000)
patch 7.4.2250 Problem:    Some error message cannot be translated. Solution:   Enclose them in _() and N_(). (Dominique Pelle)
patch 7.4.2249 Problem:    Missing colon in error message. Solution:   Add the colon. (Dominique Pelle)
patch 7.4.2248 Problem:    When cancelling the :ptjump prompt a preview window is opened for             a following command. Solution:   Reset g_do_tagpreview. (Hirohito Higashi)  Add a test.  Avoid that             the test runner gets stuck in trying to close a window.
patch 7.4.2247 Problem:    Tiny build fails. (Tony Mechelynck) Solution:   Remove #ifdef.
patch 7.4.2246 Problem:    Oldfiles test fails. Solution:   Include missing changes.
patch 7.4.2245 Problem:    Filter test fails. Solution:   Include missing changes.
patch 7.4.2244 Problem:    Adding pattern to ":oldfiles" is not a generic solution. Solution:   Add the ":filter /pat/ cmd" command modifier.  Only works for some             commands right now.
patch 7.4.2243 Problem:    Warning for assigning negative value to unsigned. (Danek Duvall) Solution:   Make cterm_normal_fg_gui_color and _bg_ guicolor_T, cast to long_u             only when an unsigned is needed.
patch 7.4.2242 Problem:    Timer test sometimes fails. Solution:   Increase the maximum time for callback timer test.
patch 7.4.2241 Problem:    Timer test sometimes fails. Solution:   Increase the maximum time for repeating timer.
patch 7.4.2240 Problem:    Tests using the sleep time can be flaky. Solution:   Use reltime() if available. (Partly by Shane Harper)
patch 7.4.2239 Problem:    Warning for missing declaration of skip_vimgrep_pat(). (John             Marriott) Solution:   Move it to another file.
patch 7.4.2238 Problem:    With SGR mouse reporting (suckless terminal) the mouse release and             scroll up/down is confused. Solution:   Don't see a release as a scroll up/down. (Ralph Eastwood)
patch 7.4.2237 Problem:    Can't use "." and "$" with ":tab". Solution:   Support a range for ":tab". (Hirohito Higashi)
patch 7.4.2236 Problem:    The 'langnoremap' option leads to double negatives.  And it does             not work for the last character of a mapping. Solution:   Add 'langremap' with the opposite value.  Keep 'langnoremap' for             backwards compatibility.  Make it work for the last character of a             mapping.  Make the test work.
patch 7.4.2235 Problem:    submatch() does not check for a valid argument. Solution:   Give an error if the argument is out of range. (Dominique Pelle)
patch 7.4.2234 Problem:    Can't build with +eval but without +quickfix. (John Marriott) Solution:   Move skip_vimgrep_pat() to separate #ifdef block.
patch 7.4.2233 Problem:    Crash when using funcref() with invalid name. (Dominique Pelle) Solution:   Check for NULL translated name.
patch 7.4.2232 Problem:    The default ttimeoutlen is very long. Solution:   Use "100". (Hirohito Higashi)
patch 7.4.2231 Problem:    ":oldfiles" output is a very long list. Solution:   Add a pattern argument. (Coot, closes #575)
patch 7.4.2230 Problem:    There is no equivalent of 'smartcase' for a tag search. Solution:   Add value "followscs" and "smart" to 'tagcase'. (Christian             Brabandt, closes #712) Turn tagcase test into new style.
patch 7.4.2229 Problem:    Startup test fails on Solaris. Solution:   Recognize a character device. (Danek Duvall)
patch 7.4.2228 Problem:    Test files have inconsistant modelines. Solution:   Don't set 'tabstop' to 2, use 'sts' and 'sw'.
Updated runtime files.
patch 7.4.2227 Problem:    Tab page tests are old style. Solution:   Change into new style tests. (Hirohito Higashi)
patch 7.4.2226 Problem:    The field names used by getbufinfo(), gettabinfo() and             getwininfo() are not consistent. Solution:   Use bufnr, winnr and tabnr. (Yegappan Lakshmanan)
patch 7.4.2225 Problem:    Crash when placing a sign in a deleted buffer. Solution:   Check for missing buffer name. (Dominique Pelle). Add a test.
patch 7.4.2224 Problem:    Compiler warnings with older compiler and 64 bit numbers. Solution:   Add "LL" to large values. (Mike Williams)
patch 7.4.2223 Problem:    Buffer overflow when using latin1 character with feedkeys(). Solution:   Check for an illegal character.  Add a test.
patch 7.4.2222 Problem:    Sourcing a script where a character has 0x80 as a second byte does             not work. (Filipe L B Correia) Solution:   Turn 0x80 into K_SPECIAL KS_SPECIAL KE_FILLER. (Christian             Brabandt, closes #728)  Add a test case.
patch 7.4.2221 Problem:    printf() does not support binary format. Solution:   Add %b and %B. (Ozaki Kiichi)
patch 7.4.2220 Problem:    printf() gives an error when the argument for %s is not a string.             (Ozaki Kiichi) Solution:   Behave like invoking string() on the argument. (Ken Takata)
patch 7.4.2219 Problem:    Recursive call to substitute gets stuck in sandbox. (Nikolai             Pavlov) Solution:   Handle the recursive call. (Christian Brabandt, closes #950)             Add a test.
patch 7.4.2218 Problem:    Can't build with +timers when +digraph is not included. Solution:   Change #ifdef for e_number_exp. (Damien)
Updated runtime files.
patch 7.4.2217 Problem:    When using matchaddpos() a character after the end of the line can             be highlighted. Solution:   Only highlight existing characters. (Hirohito Higashi)
patch 7.4.2216 Problem:    Test fails without the +sign feature. Solution:   Only check for signcolumn with the +sign feature.
patch 7.4.2215 Problem:    It's not easy to find out if a window is a quickfix or location             list window. Solution:   Add "loclist" and "quickfix" entries to the dict returnec by             getwininfo(). (Yegappan Lakshmanan)
patch 7.4.2214 Problem:    A font that uses ligatures messes up the screen display. Solution:   Put spaces between characters when building the glyph table.             (based on a patch from Manuel Schiller)
patch 7.4.2213 Problem:    Cannot highlight the "~" lines at the end of a window differently. Solution:   Add the EndOfBuffer highlighting. (Marco Hinz, James McCoy)
patch 7.4.2212 Problem:    Mark " is not set when closing a window in another tab. (Guraga) Solution:   Check all tabs for the window to be valid. (based on patch by             Hirohito Higashi, closes #974)
patch 7.4.2211 Problem:    Mouse support is not automatically enabled with simple term. Solution:   Recognize "st" and other names. (Manuel Schiller, closes #963)
patch 7.4.2210 Problem:    On OSX configure mixes up a Python framework and the Unix layout. Solution:   Make configure check properly. (Tim D. Smith, closes #980)
patch 7.4.2209 Problem:    Cannot map <M-">. (Stephen Riehm) Solution:   Solve the memory access problem in another way. (Dominique Pelle)             Allow for using <M-\"> in a string.
patch 7.4.2208 Problem:    Test for mappings is old style. Solution:   Convert the test to new style.
patch 7.4.2207 Problem:    The +xpm feature is not sorted properly in :version output. Solution:   Move it up. (Tony Mechelynck)
patch 7.4.2206 Problem:    Warning for unused function. Solution:   Put the function inside #ifdef. (John Marriott)
patch 7.4.2205 Problem:    'wildignore' always applies to getcompletion(). Solution:   Add an option to use 'wildignore' or not. (Yegappan Lakshmanan)
Updated runtime files.
patch 7.4.2204 Problem:    It is not easy to get information about buffers, windows and             tabpages. Solution:   Add getbufinfo(), getwininfo() and gettabinfo(). (Yegappan             Lakshmanan)
patch 7.4.2203 Problem:    Test fails with normal features. Solution:   Check is signs are supported.
patch 7.4.2202 Problem:    Build fails with small features. Solution:   Correct option initialization.
patch 7.4.2201 Problem:    The sign column disappears when the last sign is deleted. Solution:   Add the 'signcolumn' option. (Christian Brabandt)
patch 7.4.2200 Problem:    Cannot get all information about a quickfix list. Solution:   Add an optional argument to get/set loc/qf list(). (Yegappan             Lakshmanan)
patch 7.4.2199 Problem:    In the GUI the cursor is hidden when redrawing any window,             causing flicker. Solution:   Only undraw the cursor when updating the window it's in.
patch 7.4.2198 Problem:    Test alot sometimes fails under valgrind. (Dominique Pelle) Solution:   Avoid passing a callback with the wrong number of arguments.
patch 7.4.2197 Problem:    All functions are freed on exit, which may hide leaks. Solution:   Only free named functions, not reference counted ones.
patch 7.4.2196 Problem:    glob2regpat test doesn't test everything on MS-Windows. Solution:   Add patterns with backslash handling.
patch 7.4.2195 Problem:    MS-Windows: The vimrun program does not support Unicode. Solution:   Use GetCommandLineW().  Cleanup old #ifdefs. (Ken Takata)
patch 7.4.2194 Problem:    Sign tests don't cover enough. Solution:   Add more test cases. (Dominique Pelle)
patch 7.4.2193 Problem:    With Gnome when the GUI can't start test_startup hangs. Solution:   Call gui_mch_early_init_check(). (Hirohito Higashi)
patch 7.4.2192 Problem:    Generating prototypes with Cygwin doesn't work well. Solution:   Change #ifdefs. (Ken Takata)
patch 7.4.2191 Problem:    No automatic prototype for vim_main2(). Solution:   Move the #endif. (Ken Takata)
patch 7.4.2190 Problem:    When startup test fails it's not easy to find out why.             GUI test fails with Gnome. Solution:   Add the help entry matches to a list an assert that.             Set $HOME for Gnome to create .gnome2 directory.
patch 7.4.2189 Problem:    Cannot detect encoding in a fifo. Solution:   Extend the stdin way of detecting encoding to fifo.  Add a test             for detecting encoding on stdin and fifo. (Ken Takata)
patch 7.4.2188 Problem:    Completion does not work properly with some plugins. Solution:   Revert the part related to typing CTRL-E. (closes #972)
patch 7.4.2187 Problem:    glob2regpat test fails on Windows. Solution:   Remove the checks that use backslashes.
patch 7.4.2186 Problem:    Timers test is flaky. Solution:   Relax the sleep time check.
patch 7.4.2185 Problem:    Test glob2regpat does not test much. Solution:   Add a few more test cases. (Dominique Pelle)
patch 7.4.2184 Problem:    Tests that use RunVim() do not actually perform the test. Solution:   Use "return" instead of "call". (Ken Takata)
patch 7.4.2183 Problem:    Sign tests are old style. Solution:   Turn them into new style tests. (Dominique Pelle)
patch 7.4.2182 Problem:    Color Grey40 used in startup but not in the short list. Solution:   Add Grey40 to the builtin colors.
patch 7.4.2181 Problem:    Compiler warning for unused variable. Solution:   Remove it. (Dominique Pelle)
patch 7.4.2180 Problem:    There is no easy way to stop all timers.  There is no way to             temporary pause a timer. Solution:   Add timer_stopall() and timer_pause().
patch 7.4.2179 Problem:    Reading from stdin test fails on MS-Windows. Solution:   Strip the extra space.
patch 7.4.2178 Problem:    No test for reading from stdin. Solution:   Add a test.
patch 7.4.2177 Problem:    No testing for -C and -N command line flags, file arguments,             startuptime. Solution:   Add tests.
patch 7.4.2176 Problem:    #ifdefs in main() are complicated. Solution:   Always define vim_main2().  Move params to the file level.             (suggested by Ken Takata)
patch 7.4.2175 Problem:    Insufficient testing of cscope. Solution:   Add more tests. (Dominique Pelle)
patch 7.4.2174 Problem:    Adding duplicate flags to 'whichwrap' leaves commas behind. Solution:   Also remove the commas. (Naruhiko Nishino)
patch 7.4.2173 Problem:    Can't test help on MS-Windows. Solution:   Skip the test.
patch 7.4.2172 Problem:    No test for "vim --help". Solution:   Add a test.
patch 7.4.2171 Problem:    MS-Windows build fails. Solution:   Add QueryPerformanceCounter().
patch 7.4.2170 Problem:    Cannot get information about timers. Solution:   Add timer_info().
patch 7.4.2169 Problem:    Startup test gets stuck on MS-Windows. Solution:   Use double quotes.
patch 7.4.2168 Problem:    Not running the startup test on MS-Windows. Solution:   Write vimcmd.
patch 7.4.2167 Problem:    Small build can't run tests. Solution:   Don't try setting 'packpath'.
patch 7.4.2166 Problem:    Small build can't run startup test. Solution:   Skip the test.
patch 7.4.2165 Problem:    Startup test fails on MS-Windows. Solution:   Don't check output if RunVim() returns zero.
patch 7.4.2164 Problem:    It is not possible to use plugins in an "after" directory to tune             the behavior of a package. Solution:   First load plugins from non-after directories, then packages and             finally plugins in after directories.             Reset 'loadplugins' before executing --cmd arguments.
patch 7.4.2163 Problem:    match() and related functions tested with old style test. Solution:   Convert to new style test. (Hirohito Higashi)
patch 7.4.2162 Problem:    Result of getcompletion('', 'sign') depends on previous             completion. Solution:   Call set_context_in_sign_cmd(). (Dominique Pelle)
patch 7.4.2161 Problem:    Expression test fails without conceal feature. Solution:   Only check "conceal" with the conceal feature.
patch 7.4.2160 Problem:    setmatches() mixes up values. (Nikolai Pavlov) Solution:   Save the string instead of reusing a shared buffer.
patch 7.4.2159 Problem:    Insufficient testing for cscope. Solution:   Add more tests. (Dominique Pelle)
patch 7.4.2158 Problem:    Result of getcompletion('', 'cscope') depends on previous             completion. (Christian Brabandt) Solution:   Call set_context_in_cscope_cmd().
patch 7.4.2157 Problem:    Test_job_start_fails() is expected to report memory leaks, making             it hard to see other leaks in test_partial. Solution:   Move Test_job_start_fails() to a separate test file.
patch 7.4.2156 Problem:    Compiler warning. Solution:   Add type cast. (Ken Takata, Mike Williams)
patch 7.4.2155 Problem:    Quotes make GUI test fail on MS-Windows. Solution:   Remove quotes, strip white space.
patch 7.4.2154 Problem:    Test_communicate() fails sometimes. Solution:   Add it to the flaky tests.
patch 7.4.2153 Problem:    GUI test isn't testing much. Solution:   Turn into a new style test.  Execute a shell command.
patch 7.4.2152 Problem:    No proper translation of messages with a count. Solution:   Use ngettext(). (Sergey Alyoshin)
patch 7.4.2151 Problem:    Quickfix test fails on MS-Windows. Solution:   Close the help window. (Christian Brabandt)
patch 7.4.2150 Problem:    Warning with MinGW 64. (John Marriott) Solution:   Change return type. (Ken Takata)
patch 7.4.2149 Problem:    If a test leaves a window open a following test may fail. Solution:   Always close extra windows after running a test.
patch 7.4.2148 Problem:    Not much testing for cscope. Solution:   Add a test that uses the cscope program. (Christian Brabandt)
patch 7.4.2147 Problem:    test_alot fails. Solution:   Close window.
patch 7.4.2146 Problem:    Not enough testing for popup menu.  CTRL-E does not always work             properly. Solution:   Add more tests.  When using CTRL-E check if the popup menu is             visible. (Christian Brabandt)
patch 7.4.2145 Problem:    Win32: Using CreateThread/ExitThread is not safe. Solution:   Use _beginthreadex and return from the thread. (Ken Takata)
patch 7.4.2144 Problem:    On MS-Windows quickix does not handle a line with 1023 bytes             ending in CR-LF properly. Solution:   Don't consider CR a line break. (Ken Takata)
Updated runtime files.
patch 7.4.2143 Problem:    A funccal is garbage collected while it can still be used. Solution:   Set copyID in all referenced functions.  Do not list lambda             functions with ":function".
patch 7.4.2142 Problem:    Leaking memory when redefining a function. Solution:   Don't increment the function reference count when it's found by             name. Don't remove the wrong function from the hashtab.  More             reference counting fixes.
patch 7.4.2141 Problem:    Coverity reports bogus NULL check. Solution:   When checking for a variable in the funccal scope don't pass the             varname.
patch 7.4.2140 Problem:    Tiny build fails. Solution:   Add dummy typedefs.
patch 7.4.2139 Problem:    :delfunction causes illegal memory access. Solution:   Correct logic when deciding to free a function.
patch 7.4.2138 Problem:    Test 86 and 87 fail. Solution:   Call func_ref() also for regular functions.
patch 7.4.2136 Problem:    Closure function fails. Solution:   Don't reset uf_scoped when it points to another funccal.
patch 7.4.2135 Problem:    Various tiny issues. Solution:   Update comments, white space, etc.
patch 7.4.2134 Problem:    No error for using function() badly. Solution:   Check for passing wrong function name. (Ken Takata)
patch 7.4.2133 Problem:    Can't build with tiny features. Solution:   Add #ifdef.
patch 7.4.2132 Problem:    test_partial has memory leaks reported. Solution:   Add a note about why this happens.
patch 7.4.2131 Problem:    More memory leaks when using partial, e.g. for "exit-cb". Solution:   Don't copy the callback when using a partial.
patch 7.4.2130 Problem:    Pending timers cause false memory leak reports. Solution:   Free all timers on exit.
patch 7.4.2129 Problem:    Memory leak when using timer_start(). (Dominique Pelle) Solution:   Don't copy the callback when using a partial.
patch 7.4.2128 Problem:    Memory leak when saving for undo fails. Solution:   Free allocated memory. (Hirohito Higashi)
patch 7.4.2127 Problem:    The short form of ":noswapfile" is ":noswap" instead of ":now".             (Kent Sibilev) Solution:   Only require three characters.  Add a test for the short forms.
patch 7.4.2126 Problem:    No tests for :diffget and :diffput Solution:   Add tests.
Add OSX build to Travis CI. (Christian Brabandt)
patch 7.4.2125 Problem:    Compiler warning for loss of data. Solution:   Add a type cast. (Christian Brabandt)
patch 7.4.2124 Problem:    diffmode test leaves files behind, breaking another test. Solution:   Delete the files.
patch 7.4.2123 Problem:    No new style test for diff mode. Solution:   Add a test.  Check that folds are in sync.
patch 7.4.2122 Problem:    Mac: don't get +clipboard in huge build. Solution:   Move #define down below including featureh.h
patch 7.4.2121 Problem:    No easy way to check if lambda and closure are supported. Solution:   Add the +lambda feature.
patch 7.4.2120 Problem:    User defined functions can't be a closure. Solution:   Add the "closure" argument. Allow using :unlet on a bound             variable. (Yasuhiro Matsumoto, Ken Takata)
patch 7.4.2119 Problem:    Closures are not supported. Solution:   Capture variables in lambdas from the outer scope. (Yasuhiro             Matsumoto, Ken Takata)
patch 7.4.2118 Problem:    Mac: can't build with tiny features. Solution:   Don't define FEAT_CLIPBOARD unconditionally. (Kazunobu Kuriyama)
patch 7.4.2117 Problem:    Deleting an augroup that still has autocmds does not give a             warning.  The next defined augroup takes its place. Solution:   Give a warning and prevent the index being used for another group             name.
patch 7.4.2116 Problem:    The default vimrc for Windows is very conservative. Solution:   Use the defaults.vim in the Windows installer.
patch 7.4.2115 Problem:    Loading defaults.vim with -C argument. Solution:   Don't load the defaults script with -C argument.  Test sourcing             the defaults script.  Set 'display' to "truncate".
patch 7.4.2114 Problem:    Tiny build fails. Solution:   Always include vim_time().
patch 7.4.2113 Problem:    Test for undo is flaky. Solution:   Turn it into a new style test.  Use test_settime() to avoid             flakyness.
patch 7.4.2112 Problem:    getcompletion(.., 'dir') returns a match with trailing "*" when             there are no matches. (Chdiza) Solution:   Return an empty list when there are no matches.  Add a trailing             slash to directories. (Yegappan Lakshmanan)  Add tests for no             matches. (closes #947)
Update gitignore for new test binary.  (Oyvind Holm, closes #954)
patch 7.4.2111 Problem:    Defaults are very conservative. Solution:   Move settings from vimrc_example.vim to defaults.vim.  Load             defaults.vim if no .vimrc was found.
patch 7.4.2110 Problem:    When there is an CmdUndefined autocmd then the error for a missing             command is E464 instead of E492. (Manuel Ortega) Solution:   Don't let the pointer be NULL.
patch 7.4.2109 Problem:    Setting 'display' to "lastline" is a drastic change, while             omitting it results in lots of "@" lines. Solution:   Add "truncate" to show "@@@" for a truncated line.
patch 7.4.2108 Problem:    Netbeans test is flaky. Solution:   Wait for the cursor to be positioned.
patch 7.4.2107 Problem:    Misplaced equal sign. Solution:   Remove it.
patch 7.4.2106 Problem:    Clang warns about missing field in initializer. Solution:   Define COMMA and use it.  (Kazunobu Kuriyama)
patch 7.4.2105 Problem:    Configure reports default features to be "normal" while it is             "huge". Solution:   Change the default text.
patch 7.4.2104 Problem:    Code duplication when unreferencing a function. Solution:   De-duplicate.
patch 7.4.2103 Problem:    Can't have "augroup END" right after ":au!". Solution:   Check for the bar character before the command argument.
patch 7.4.2102 Problem:    Tiny build with GUI fails. Solution:   Revert one FOR_ALL_ change.
patch 7.4.2101 Problem:    Looping over windows, buffers and tab pages is inconsistant. Solution:   Use FOR_ALL_ macros everywhere. (Yegappan Lakshmanan)
patch 7.4.2100 Problem:    "cgn" and "dgn" do not work correctly with a single character             match and the replacement includes the searched pattern. (John             Beckett) Solution:   If the match is found in the wrong column try in the next column.             Turn the test into new style. (Christian Brabandt)
patch 7.4.2099 Problem:    When a keymap is active only "(lang)" is displayed. (Ilya             Dogolazky) Solution:   Show the keymap name. (Dmitri Vereshchagin, closes #933)
Updated runtime files.
patch 7.4.2098 Problem:    Text object tests are old style. Solution:   Turn them into new style tests. (James McCoy, closes #941)
patch 7.4.2097 Problem:    Warning from 64 bit compiler. Solution:   use size_t instead of int. (Mike Williams)
patch 7.4.2096 Problem:    Lambda functions show up with completion. Solution:   Don't show lambda functions. (Ken Takata)
patch 7.4.2095 Problem:    Man test fails when run with the GUI. Solution:   Adjust for different behavior of GUI.  Add assert_inrange().
patch 7.4.2094 Problem:    The color allocation in X11 is overly complicated. Solution:   Remove find_closest_color(), XAllocColor() already does this.             (Kazunobu Kuriyama)
patch 7.4.2093 Problem:    Netbeans test fails once in a while.  Leaving log file behind. Solution:   Add it to the list of flaky tests.  Disable logfile.
patch 7.4.2092 Problem:    GTK 3 build fails with older GTK version. Solution:   Check the pango version. (Kazunobu Kuriyama)
patch 7.4.2091 Problem:    Coverity reports a resource leak when out of memory. Solution:   Close the file before returning.
patch 7.4.2089 Problem:    Color handling of X11 GUIs is too complicated. Solution:   Simplify the code.  Use RGBA where appropriate. (Kazunobu             Kuriyama)
patch 7.4.2088 Problem:    Keymap test fails with normal features. Solution:   Bail out if the keymap feature is not supported.
patch 7.4.2087 Problem:    Digraph code test coverage is still low. Solution:   Add more tests. (Christian Brabandt)
patch 7.4.2086 Problem:    Using the system default encoding makes tests unpredictable. Solution:   Always use utf-8 or latin1 in the new style tests.  Remove setting             encoding and scriptencoding where it is not needed.
patch 7.4.2085 Problem:    Digraph tests fails on some systems. Solution:   Run it separately and set 'encoding' early.
patch 7.4.2084 Problem:    New digraph test makes testing hang. Solution:   Don't set "nocp".
patch 7.4.2083 Problem:    Coverity complains about not restoring a value. Solution:   Restore the value, although it's not really needed.  Change return             to jump to cleanup, might leak memory.
patch 7.4.2082 Problem:    Not much test coverage for digraphs. Solution:   Add a new style digraph test. (Christian Brabandt)
patch 7.4.2081 Problem:    Line numbers in the error list are not always adjusted. Solution:   Set b_has_qf_entry properly. (Yegappan Lakshmanan)
patch 7.4.2080 Problem:    When using PERROR() on some systems assert_fails() does not see             the error. Solution:   Make PERROR() always report the error.
patch 7.4.2079 Problem:    Netbeans test fails on non-Unix systems. Solution:   Only do the permission check on Unix systems.
patch 7.4.2078 Problem:    Running checks in po diretory fails. Solution:   Add colors used in syntax.c to the builtiin color table.
patch 7.4.2077 Problem:    Cannot update 'tabline' when a tab was closed. Solution:   Add the TabClosed autocmd event. (partly by Felipe Morales)
patch 7.4.2076 Problem:    Syntax error when dict has '>' key. Solution:   Check for endchar. (Ken Takata)
patch 7.4.2075 Problem:    No autocommand event to initialize a window or tab page. Solution:   Add WinNew and TabNew events. (partly by Felipe Morales)
patch 7.4.2074 Problem:    One more place using a dummy variable. Solution:   Use offsetof(). (Ken Takata)
patch 7.4.2073 Problem:    rgb.txt is read for every color name. Solution:   Load rgb.txt once. (Christian Brabandt)  Add a test.
patch 7.4.2072 Problem:    substitute() does not support a Funcref argument. Solution:   Support a Funcref like it supports  a string starting with "\=".
patch 7.4.2071 Problem:    The return value of type() is difficult to use. Solution:   Define v:t_ constants. (Ken Takata)
patch 7.4.2070 Problem:    Missing change to include file. Solution:   Include the spell header file.
patch 7.4.2069 Problem:    spell.c is too big. Solution:   Split it in spell file handling and spell checking.
patch 7.4.2067 Problem:    Compiler warning for char/char_u conversion. (Tony Mechelynck)             Inefficient code. Solution:   Use more lines to fill with spaces. (Nikolai Pavlov) Add type cast.
patch 7.4.2066 Problem:    getcompletion() not well tested. Solution:   Add more testing.
patch 7.4.2065 Problem:    Compiler warns for uninitialzed variable. (John Marriott) Solution:   Set lnum to the right value.
patch 7.4.2064 Problem:    Coverity warns for possible buffer overflow. Solution:   Use vim_strcat() instead of strcat().
patch 7.4.2063 Problem:    eval.c is still too big. Solution:   Split off internal functions to evalfunc.c.
patch 7.4.2062 Problem:    Using dummy variable to compute struct member offset. Solution:   Use offsetof().
patch 7.4.2061 Problem:    qf_init_ext() is too big. Solution:   Move code to qf_parse_line() (Yegappan Lakshmanan)
patch 7.4.2059 Problem:    Non-Unix builds fail. Solution:   Update Makefiles for new files.
patch 7.4.2058 Problem:    eval.c is too big. Solution:   Move user functions to userfunc.c
patch 7.4.2057 Problem:    eval.c is too big. Solution:   Move List functions to list.c
patch 7.4.2056 Problem:    Build fails. Solution:   Add missing changes.
patch 7.4.2055 Problem:    eval.c is too big. Solution:   Move Dictionary functions to dict.c.
Update runtime files.
Put building with interfaces on the right target.
patch 7.4.2054 Problem:    Wrong part of #ifdef removed. Solution:   Use the right part. (Hirohito Higashi)
Correct build condition.
Add missing "then".
Add a separate build target for the unittests. Hopefully the coverage will be merged then.
Run unittests before scripttests.  Hopefully does not mess up coverage.
patch 7.4.2053 Problem:    Can't run scripttests in the top directory. Solution:   Add targets to the top Makefile.
patch 7.4.2052 Problem:    Coverage report is messed up by the unittests. Solution:   Add a separate test target for script tests.  Use that when             collecting coverage information.
patch 7.4.2051 Problem:    No proper testing of trunc_string(). Solution:   Add a unittest for message.c.
patch 7.4.2050 Problem:    When using ":vimgrep" may end up with duplicate buffers. Solution:   When adding an error list entry pass the buffer number if possible.
patch 7.4.2049 Problem:    There is no way to get a list of the error lists. Solution:   Add ":chistory" and ":lhistory".
patch 7.4.2048 Problem:    There is still code and help for unsupported systems. Solution:   Remove the code and text. (Hirohito Higashi)
patch 7.4.2047 Problem:    Compiler warning for initializing a struct. Solution:   Initialize in another way. (Anton Lindqvist)
Updated runtime files.
patch 7.4.2046 Problem:    The qf_init_ext() function is too big. Solution:   Refactor it. (Yegappan Lakshmanan)
patch 7.4.2045 Problem:    Memory leak when using a function callback. Solution:   Don't save the function name when it's in the partial.
patch 7.4.2044 Problem:    filter() and map() either require a string or defining a function. Solution:   Support lambda, a short way to define a function that evaluates an             expression. (Yasuhiro Matsumoto, Ken Takata)
patch 7.4.2043 Problem:    setbuvfar() causes a screen redraw. Solution:   Only use aucmd_prepbuf() for options.
patch 7.4.2042 Problem:    GTK: display updating is not done properly and can be slow. Solution:   Use gdk_display_flush() instead of gdk_display_sync(). Don't call             gdk_window_process_updates().  (Kazunobu Kuriyama)
patch 7.4.2041 Problem:    Netbeans file authentication not tested. Solution:   Add a test.
patch 7.4.2040 Problem:    New files missing from distribution. Solution:   Add new test scripts.
patch 7.4.2039 Problem:    The Netbeans integration is not tested. Solution:   Add a first Netbeans test.
patch 7.4.2038 Problem:    Small build still fails. Solution:   Adjust more #ifdefs.
patch 7.4.2037 Problem:    Small build fails. Solution:   Adjust #ifdefs.
patch 7.4.2036 Problem:    Looking up a buffer by number is slow if there are many. Solution:   Use a hashtab.
patch 7.4.2035 Problem:    On Solaris with ZFS the ACL may get removed. Solution:   Always restore the ACL for Solaris ZFS. (Danek Duvall)
patch 7.4.2034 Problem:    Build fails with some version of MinGW. (illusorypan) Solution:   Recognize mingw32. (Ken Takata, closes #921)
patch 7.4.2033 Problem:    'cscopequickfix' option does not accept new value "a". Solution:   Adjust list of command characters. (Ken Takata)
patch 7.4.2032 Problem:    Build fails with 64 bit MinGW. (Axel Bender) Solution:   Handle dash vs. underscore. (Ken Takata, Hirohito Higashi)
patch 7.4.2031 Problem:    The list_lbr_utf8 test fails if ~/.vim/syntax/c.vim sets             'textwidth' to a non-zero value. (Oyvind A. Holm) Solution:   Add a setup.vim file that sets 'runtimepath' and $HOME to a safe             value. (partly by Christian Brabandt, closes #912)
patch 7.4.2030 Problem:    ARCH must be set properly when using MinGW. Solution:   Detect the default value of ARCH from the current compiler. (Ken             Takata)
patch 7.4.2029 Problem:    printf() does not work with 64 bit numbers. Solution:   use the "L" length modifier. (Ken Takata)
patch 7.4.2028 Problem:    cppcheck warns for using index before limits check. Solution:   Swap the expressions. (Dominique Pelle)
patch 7.4.2027 Problem:    Can't build with +eval but without +menu. Solution:   Add #ifdef. (John Marriott)
patch 7.4.2025 Problem:    The cursor blinking stops or is irregular when receiving date over             a channel and writing it in a buffer, and when updating the status             line. (Ramel Eshed) Solution:   Make it a bit better by flushing GUI output.  Don't redraw the             cursor after updating the screen if the blink state is off.
patch 7.4.2024 Problem:    More buf_valid() calls can be optimized. Solution:   Use bufref_valid() instead.
patch 7.4.2023 Problem:    buflist_findname_stat() may find a dummy buffer. Solution:   Set the BF_DUMMY flag after loading a dummy buffer.  Start             finding buffers from the end of the list.
patch 7.4.2022 Problem:    Warnings from 64 bit compiler. Solution:   Add type casts. (Mike Williams)
patch 7.4.2021 Problem:    Still too many buf_valid() calls. Solution:   Make au_new_curbuf a bufref.  Use bufref_valid() in more places.
patch 7.4.2020 Problem:    Can't build without +autocmd feature. Solution:   Adjust #ifdefs.
patch 7.4.2019 Problem:    When ignoring case utf_fold() may consume a lot of time. Solution:   Optimize for ASCII.
patch 7.4.2018 Problem:    buf_valid() can be slow when there are many buffers. Solution:   Add bufref_valid(), only go through the buffer list when a buffer             was freed.
patch 7.4.2017 Problem:    When there are many errors adding them to the quickfix list takes             a long time. Solution:   Add BLN_NOOPT.  Don't call buf_valid() in buf_copy_options().             Remember the last file name used.  When going through the buffer             list start from the end of the list.  Only call buf_valid() when             autocommands were executed.
patch 7.4.2016 Problem:    Warning from MinGW about _WIN32_WINNT redefined. (John Marriott) Solution:   First undefine it. (Ken Takata)
patch 7.4.2015 Problem:    When a file gets a name when writing it 'acd' is not effective.             (Dan Church) Solution:   Invoke DO_AUTOCHDIR after writing the file. (Allen Haim, closes             #777, closes #803)  Add test_autochdir() to enable 'acd' before             "starting" is reset.
patch 7.4.2014 Problem:    Using "noinsert" in 'completeopt' does not insert match. Solution:   Set compl_enter_selects. (Shougo, closes #875)
patch 7.4.2013 Problem:    Using "noinsert" in 'completeopt' breaks redo. Solution:   Set compl_curr_match. (Shougo, closes #874)
Updated runtime files.
patch 7.4.2012 Problem:    Test for getcompletion() does not pass on all systems. Solution:   Only test what is supported.
patch 7.4.2011 Problem:    It is not easy to get a list of command arguments. Solution:   Add getcompletion(). (Yegappan Lakshmanan)
patch 7.4.2010 Problem:    There is a :cbottom command but no :lbottom command. Solution:   Add :lbottom. (Yegappan Lakshmanan)
patch 7.4.2009 Problem:    Messages test fails. Solution:   Don't set redir_execute before returning.
patch 7.4.2008 Problem:    evalcmd() has a confusing name. Solution:   Rename to execute().  Make silent optional.  Support a list of             commands.
patch 7.4.2007 Problem:    Running the tests leaves a viminfo file behind. Solution:   Make the viminfo option empty.
patch 7.4.2006 Problem:    Crash when using tabnext in BufUnload autocmd. (Norio Takagi) Solution:   First check that the current buffer is the right one. (Hirohito             Higashi)
patch 7.4.2005 Problem:    After using evalcmd() message output is in the wrong position.             (Christian Brabandt) Solution:   Reset msg_col.
patch 7.4.2004 Problem:    GUI: cursor displayed in the wrong position. Solution:   Correct screen_cur_col and screen_cur_row.
patch 7.4.2003 Problem:    Still cursor flickering when a callback updates the screen. (David             Samvelyan) Solution:   Put the cursor in the right position after updating the screen.
patch 7.4.2002 Problem:    Crash when passing number to filter() or map(). Solution:   Convert to a string. (Ozaki Kiichi)
patch 7.4.2001 Problem:    Tiny build fails. (Tony Mechelynck) Solution:   Add #ifdef.
patch 7.4.2000 Problem:    Evalcmd test fails. Solution:   Add missing piece.
patch 7.4.1999 Problem:    evalcmd() doesn't work recursively. Solution:   Use redir_evalcmd instead of redir_vname.
patch 7.4.1998 Problem:    When writing buffer lines to a job there is no NL to NUL             conversion. Solution:   Make it work symmetrical with writing lines from a job into a             buffer.
patch 7.4.1997 Problem:    Cannot easily scroll the quickfix window. Solution:   Add ":cbottom".
patch 7.4.1996 Problem:    Capturing the output of a command takes a few commands. Solution:   Add evalcmd().
patch 7.4.1995 Problem:    GUI: cursor drawn in wrong place if a timer callback causes a             screen update. (David Samvelyan) Solution:   Also redraw the cursor when it's blinking and on.
patch 7.4.1994 Problem:    True-false test fails. Solution:   Filter the dict to only keep the value that matters.
patch 7.4.1993 Problem:    Not all TRUE and FALSE arguments are tested. Solution:   Add a few more tests.
patch 7.4.1992 Problem:    Values for true and false can be confusing. Solution:   Update the documentation.  Add a test.  Make v:true evaluate to             TRUE for a non-zero-arg.
patch 7.4.1991 Problem:    glob() does not add a symbolic link when there are no wildcards. Solution:   Remove the call to mch_getperm().
patch 7.4.1990 Problem:    Cscope items are not sorted. Solution:   Put the new "a" command first. (Ken Takata)
patch 7.4.1989 Problem:    filter() and map() only accept a string argument. Solution:   Implement using a Funcref argument (Yasuhiro Matsumoto, Ken             Takata)
patch 7.4.1988 Problem:    When updating viminfo with file marks there is no time order. Solution:   Remember the time when a buffer was last used, store marks for             the most recently used buffers.
patch 7.4.1987 Problem:    When copying unrecognized lines for viminfo, end up with useless             continuation lines. Solution:   Skip continuation lines.
patch 7.4.1986 Problem:    Compiler warns for loss of data. Solution:   Use size_t instead of int. (Christian Brabandt)
patch 7.4.1985 Problem:    Missing changes in VMS build file. Solution:   Use the right file name.
Updated runtime files.
patch 7.4.1984 Problem:    Not all quickfix features are tested. Solution:   Add a few more tests. (Yegappan Lakshmanan)
patch 7.4.1983 Problem:    farsi.c and arabic.c are included in a strange way. Solution:   Build them like other files.
patch 7.4.1982 Problem:    Viminfo file contains duplicate change marks. Solution:   Drop duplicate marks.
patch 7.4.1981 Problem:    No testing for Farsi code. Solution:   Add a minimal test.  Clean up Farsi code.
patch 7.4.1980 Problem:    'errorformat' is parsed for every call to ":caddexpr".  Can't add             to two location lists asynchronously. Solution:   Keep the previously parsed data when appropriate. (mostly by             Yegappan Lakshmanan)
patch 7.4.1978 Problem:    Large file test does not delete its output. Solution:   Delete the output. Check size properly when possible. (Ken Takata)
patch 7.4.1977 Problem:    With 64 bit changes don't need three calls to sprintf(). Solution:   Simplify the code, use vim_snprintf(). (Ken Takata)
patch 7.4.1976 Problem:    Number variables are not 64 bits while they could be. Solution:   Add the num64 feature. (Ken Takata)
patch 7.4.1975 Problem:    On MS-Windows large files (> 2Gbyte) cause problems. Solution:   Use "off_T" instead of "off_t".  Use "stat_T" instead of "struct             stat".  Use 64 bit system functions if available.  (Ken Takata)
patch 7.4.1974 Problem:    GUI has a problem with some termcodes. Solution:   Handle negative numbers. (Kazunobu Kuriyama)
patch 7.4.1973 Problem:    On MS-Windows the package directory may be added at the end             because of forward/backward slash differences. (Matthew             Desjardins) Solution:   Ignore slash differences.
patch 7.4.1972 Problem:    On Solaris select() does not work as expected when there is             typeahead. Solution:   Add ICANON when sleeping. (Ozaki Kiichi)
patch 7.4.1971 Problem:    It is not easy to see unrecognized error lines below the current             error position. Solution:   Add ":clist +count".
patch 7.4.1970 Problem:    Using ":insert" in an empty buffer sets the jump mark. (Ingo             Karkat) Solution:   Don't adjust marks when replacing the empty line in an empty             buffer. (closes #892)
patch 7.4.1969 Problem:    When the netbeans channel is closed consuming the buffer may cause             a crash. Solution:   Check for nb_channel not to be NULL. (Xavier de Gaye)
patch 7.4.1968 Problem:    Invalid memory access with "\<C-">. Solution:   Do not recognize this as a special character. (Dominique Pelle)
patch 7.4.1967 Problem:    Falling back from NFA to old regexp engine does not work properly.             (fritzophrenic) Solution:   Do not restore nfa_match. (Christian Brabandt, closes #867)
patch 7.4.1966 Problem:    Coverity reports a resource leak. Solution:   Close "fd" also when bailing out.
patch 7.4.1965 Problem:    When using a job in raw mode to append to a buffer garbage             characters are added. Solution:   Do not replace the trailing NUL with a NL. (Ozaki Kiichi)
patch 7.4.1964 Problem:    The quickfix init function is too big. Solution:   Factor out parsing 'errorformat' to a separate function. (Yegappan             Lakshmanan)
patch 7.4.1963 Problem:    Running Win32 Vim in mintty does not work. Solution:   Detect mintty and give a helpful error message. (Ken Takata)
patch 7.4.1962 Problem:    Two test files for increment/decrement. Solution:   Move the old style test into the new style test. (Hirohito             Higashi, closes #881)
patch 7.4.1961 Problem:    When 'insertmode' is reset while doing completion the popup menu             remains even though Vim is in Normal mode. Solution:   Ignore stop_insert_mode when the popup menu is visible.  Don't set             stop_insert_mode when 'insertmode' was already off. (Christian             Brabandt)
patch 7.4.1960 Problem:    Unicode standard 9 was released. Solution:   Update the character property tables. (Christian Brabandt)
patch 7.4.1959 Problem:    Crash when running test_channel.vim on Windows. Solution:   Check for NULL pointer result from FormatMessage(). (Christian             Brabandt)
patch 7.4.1958 Problem:    Perl interface preprocessor statements not nicely indented. Solution:   Improve the indenting. (Ken Takata)
patch 7.4.1957 Problem:    Perl interface has obsolete workaround. Solution:   Remove the workaround added by 7.3.623. (Ken Takata)
patch 7.4.1956 Problem:    When using CTRL-W f and pressing "q" at the ATTENTION dialog the             newly opened window is not closed. Solution:   Close the window and go back to the original one. (Norio Takagi,             Hirohito Higashi)
patch 7.4.1955 Problem:    Using 32-bit Perl with 64-bit time_t causes memory corruption.             (Christian Brabandt) Solution:   Use time_T instead of time_t for global variables. (Ken Takata)
patch 7.4.1954 Problem:    No test for what 7.4.1948 fixes. Solution:   Add a test. (Hirohito Higashi, closes #880)
Updated runtime files.
patch 7.4.1953 Problem:    Not all parts of the quickfix code are tested. Solution:   Add more tests. (Yegappan Lakshmanan)
patch 7.4.1952 Problem:    Cscope interface does not support finding assignments. Solution:   Add the "a" command. (ppettina, closes #882)
patch 7.4.1951 Problem:    Ruby test is old style. Solution:   Convert to a new style test. (Ken Takata)
patch 7.4.1950 Problem:    Quickfix long lines test not executed for buffer. Solution:   Call the function to test long lines. (Yegappan Lakshmanan)
patch 7.4.1948 Problem:    Using Ctrl-A with double-byte encoding may result in garbled text. Solution:   Skip to the start of a character. (Hirohito Higashi)
patch 7.4.1947 Problem:    Viminfo continuation line with wrong length isn't skipped. (Marius             Gedminas) Solution:   Skip a line when encountering an error, but not two lines.
patch 7.4.1946 Problem:    File list does not include new XPM libraries. Solution:   Add the file list entries.
patch 7.4.1945 Problem:    The Man plugin doesn't work that well. Solution:   Use "g:ft_man_open_mode" to be able open man pages in vert split             or separate tab. Set nomodifiable for buffer with man content. Add             a test. (Andrey Starodubtsev, closes #873)
patch 7.4.1944 Problem:    Win32: Cannot compile with XPM feature using VC2015 Solution:   Add XPM libraries compiled with VC2015, and enable to build             gvim.exe which supports XPM using VC2015. (Ken Takata)
patch 7.4.1943 Problem:    Coverity warns for unreachable code. Solution:   Remove the code that won't do anything.
patch 7.4.1942 Problem:    Background is not drawn properly when 'termguicolors' is set. Solution:   Check cterm_normal_bg_color. (Jacob Niehus, closes #805)
Updated runtime files.
patch 7.4.1941 Problem:    Not all quickfix tests are also done  with the location lists. Solution:   Test more quickfix code.  Use user commands instead of "exe".             (Yegappan Lakshmanan)
patch 7.4.1940 Problem:    "gd" hangs in some situations. (Eric Biggers) Solution:   Remove the SEARCH_START flag when looping.  Add a test.
patch 7.4.1939 Problem:    Memory access error when reading viminfo. (Dominique Pelle) Solution:   Correct index in jumplist when at the end.
patch 7.4.1938 Problem:    When writing viminfo numbered marks were duplicated. Solution:   Check for duplicates between current numbered marks and the ones             read from viminfo.
patch 7.4.1937 Problem:    No test for directory stack in quickfix. Solution:   Add a test. (Yegappan Lakshmanan)
patch 7.4.1936 Problem:    Off-by-one error in bounds check. (Coverity) Solution:   Check register number properly.
patch 7.4.1935 Problem:    When using the GUI search/replace a second match right after the             replacement is skipped. Solution:   Add the SEARCH_START flag. (Mleddy)
patch 7.4.1934 Problem:    New style tests not executed with MinGW compiler. Solution:   Add new style test support. (Yegappan Lakshmanan)
patch 7.4.1933 Problem:    Compiler warning about uninitialzed variable. (Yegappan) Solution:   Give it a dummy value.
patch 7.4.1931 Problem:    Using both old and new style file mark lines from viminfo. Solution:   Skip the old style lines if the viminfo file was written with a             Vim version that supports the new style.
patch 7.4.1930 Problem:    Can't build without +spell but with +quickfix. (Charles) Solution:   Add better #ifdef around ml_append_buf(). (closes #864)
patch 7.4.1928 Problem:    Overwriting pointer argument. Solution:   Assign to what it points to. (Dominique Pelle)
patch 7.4.1927 Problem:    Compiler warning for signed/unsigned. Solution:   Add type cast.
patch 7.4.1926 Problem:    Possible crash with many history items. Solution:   Avoid the index going past the last item.
Updated runtime files.
patch 7.4.1925 Problem:    Viminfo does not merge file marks properly. Solution:   Use a timestamp.  Add the :clearjumps command.
patch 7.4.1924 Problem:    Missing "void" for functions without argument. Solution:   Add "void". (Hirohito Higashi)
patch 7.4.1923 Problem:    Command line editing is not tested much. Solution:   Add tests for expanding the file name and 'wildmenu'.
patch 7.4.1921 Problem:    vim_time() not included when needed. Solution:   Adjust #ifdef.
patch 7.4.1920 Problem:    Missing test changes. Solution:   Update viminfo test.
patch 7.4.1919 Problem:    Register contents is not merged when writing viminfo. Solution:   Use timestamps for register contents.
patch 7.4.1917 Problem:    History lines read from viminfo in different encoding than when             writing are not converted. Solution:   Convert the history lines.
patch 7.4.1916 Problem:    No proper test for what 7.4.1906 fixes. Solution:   Add a test for reading many lines.
patch 7.4.1915 Problem:    The effect of the PopupMenu autocommand isn't directly visible. Solution:   Call gui_update_menus() before displaying the popup menu. (Shane             Harper, closs #855)
patch 7.4.1914 Problem:    Executing autocommands while using the signal stack has a high             chance of crashing Vim. Solution:   Don't invoke autocommands when on the signal stack.
patch 7.4.1913 Problem:    When ":doautocmd" is used modelines are used even when no             autocommands were executed. (Daniel Hahler) Solution:   Skip processing modelines. (closes #854)
patch 7.4.1912 Problem:    No test for using setqflist() on an older quickfix list. Solution:   Add a couple of tests.
patch 7.4.1910 Problem:    Tests using external command to delete directory. Solution:   Use delete().
patch 7.4.1909 Problem:    Doubled semicolons. Solution:   Reduce to one. (Dominique Pelle)
patch 7.4.1908 Problem:    Netbeans uses uninitialzed pointer and freed memory. Solution:   Set "buffer" at the right place (hint by Ken Takata)
patch 7.4.1907 Problem:    Warnings from 64 bit compiler. Solution:   Change type to size_t. (Mike Williams)
patch 7.4.1906 Problem:    Collapsing channel buffers and searching for NL does not work             properly. (Xavier de Gary, Ramel Eshed) Solution:   Do not assume the buffer contains a NUL or not.  Change NUL bytes             to NL to avoid the string is truncated.
patch 7.4.1905 Problem:    Some compilers can't handle a double semicolon. Solution:   Remove one semicolon.
patch 7.4.1904 Problem:    Build fails. Solution:   Add missing changes.
patch 7.4.1903 Problem:    When writing viminfo merging current history with history in             viminfo may drop recent history entries. Solution:   Add new format for viminfo lines, use it for history entries.  Use             a timestamp for ordering the entries. Add test_settime().             Add the viminfo version.  Does not do merging on timestamp yet.
patch 7.4.1902 Problem:    No test for collapsing buffers for a channel.  Some text is lost. Solution:   Add a simple test.  Set rq_buflen correctly.
patch 7.4.1901 Problem:    Win32: the "Disabled" menu items would appear enabled. Solution:   Use submenu_id if there is a parent. (Shane Harper, closes #834)
patch 7.4.1900 Problem:    Using CTRL-] in the help on "{address}." doesn't work. Solution:   Recognize an item in {}. (Hirohito Higashi, closes #814)
patch 7.4.1899 Problem:    GTK 3: cursor blinking doesn't work well. Solution:   Instead of gui_gtk_window_clear() use gui_mch_clear_block().             (Kazunobu Kuriyama)
patch 7.4.1898 Problem:    User commands don't support modifiers. Solution:   Add the <mods> item. (Yegappan Lakshmanan, closes #829)
Updated runtime files.
patch 7.4.1896 Problem:    Invoking mark_adjust() when adding a new line below the last line             is pointless. Solution:   Skip calling mark_adjust() when appending below the last line.
patch 7.4.1895 Problem:    Cannot use a window ID where a window number is expected. Solution:   Add LOWEST_WIN_ID, so that the window ID can be used where a             number is expected.
patch 7.4.1894 Problem:    Cannot get the window ID for a mouse click. Solution:   Add v:mouse_winid.
patch 7.4.1893 Problem:    Cannot easily get the window ID for a buffer. Solution:   Add bufwinid().
patch 7.4.1892 Problem:    balloon eval only gets the window number, not the ID. Solution:   Add v:beval_winid.
patch 7.4.1891 Problem:    Channel reading very long lines is slow. Solution:   Collapse multiple buffers until a NL is found.
patch 7.4.1890 Problem:    GUI: When channel data is received the cursor blinking is             interrupted.  (Ramel Eshed) Solution:   Don't update the cursor when it is blinking.
patch 7.4.1889 Problem:    When umask is set to 0177 Vim can't create temp files. (Lcd) Solution:   Also correct umask when using mkdtemp().
patch 7.4.1888 Problem:    Wrong computation of remaining wait time in RealWaitForChar() Solution:   Remember the original waiting time.
patch 7.4.1887 Problem:    When receiving channel data 'updatetime' is not respected. Solution:   Recompute the waiting time after being interrupted.
patch 7.4.1886 Problem:    When waiting for a character is interrupted by receiving channel             data and the first character of a mapping was typed, the mapping             times out. (Ramel Eshed) Solution:   When dealing with channel data don't return from mch_inchar().
patch 7.4.1885 Problem:    MinGW console build defaults to not having +channel. Solution:   Include the channel feature if building with huge features. (Ken             Takata)
patch 7.4.1884 Problem:    Updating marks in a quickfix list is very slow when the list is             long. Solution:   Only update marks if the buffer has a quickfix entry.
patch 7.4.1883 Problem:    Cppcheck found 2 incorrect printf formats. Solution:   Use %ld and %lx. (Dominique Pelle)
patch 7.4.1882 Problem:    Check for line break at end of line wrong. (Dominique Pelle) Solution:   Correct the logic.
patch 7.4.1881 Problem:    Appending to a long quickfix list is slow. Solution:   Add qf_last.
patch 7.4.1880 Problem:    MS-Windows console build defaults to not having +channel. Solution:   Include the channel feature if building with huge features.
patch 7.4.1879 Problem:    Channel test is flaky. Solution:   Wait for close_cb to be invoked.
patch 7.4.1878 Problem:    Whether a job has exited isn't detected until a character is             typed.  After calling exit_cb the cursor is in the wrong place. Solution:   Don't wait forever for a character to be typed when there is a             pending job.  Update the screen if neede after calling exit_cb.
patch 7.4.1877 Problem:    No test for invoking "close_cb" when writing to a buffer. Solution:   Add using close_cb to a test case.
patch 7.4.1876 Problem:    Typing "k" at the hit-enter prompt has no effect. Solution:   Don't assume recursive use of the prompt if a character was typed.             (Hirohito Higashi)
patch 7.4.1875 Problem:    Comparing functions and partials doesn't work well. Solution:   Add tests. (Nikolai Pavlov)  Compare the dict and arguments in the             partial. (closes #813)
patch 7.4.1874 Problem:    Unused variable in Win32 code. Solution:   Remove it. (Mike Williams)
patch 7.4.1873 Problem:    When a callback adds a timer the GUI doesn't use it until later.             (Ramel Eshed) Solution:   Return early if a callback adds a timer.
patch 7.4.1872 Problem:    Still build problem with old version of Perl. Solution:   Also define SvREFCNT_inc_void_NN if needed. (Ken Takata)
patch 7.4.1871 Problem:    Appending to the quickfix list while the quickfix window is open             is very slow. Solution:   Do not delete all the lines, only append the new ones.  Avoid             using a window while updating the list. (closes #841)
patch 7.4.1870 Problem:    One more Win64 compiler warning. Solution:   Change declared argument type. (Ken Takata)
patch 7.4.1869 Problem:    Can't build with old version of Perl. Solution:   Define PERLIO_FUNCS_DECL. (Tom G. Christensen)
patch 7.4.1868 Problem:    Setting really_exiting causes memory leaks to be reported. Solution:   Add the in_free_all_mem flag.
patch 7.4.1867 Problem:    Memory leak in test_matchstrpos. Solution:   Free the string before overwriting. (Yegappan Lakshmanan)
patch 7.4.1866 Problem:    Invalid memory access when exiting with EXITFREE defined.             (Dominique Pelle) Solution:   Set "really_exiting" and skip error messages.
patch 7.4.1865 Problem:    Memory leaks in tet49. (Dominique Pelle) Solution:   Use NULL instead of an empty string.
patch 7.4.1864 Problem:    Python: encoding error with Python 2. Solution:   Use "getcwdu" instead of "getcwd". (Ken Takata)
patch 7.4.1863 Problem:    Compiler warnings on Win64. Solution:   Adjust types, add type casts. (Ken Takata)
patch 7.4.1862 Problem:    string() with repeated argument does not give a result usable by             eval(). Solution:   Refactor echo_striong and tv2string(), moving the common part to             echo_string_core(). (Ken Takata)
patch 7.4.1861 Problem:    Compiler warnings with 64 bit compiler. Solution:   Change int to size_t. (Mike William)
patch 7.4.1860 Problem:    Using a partial for timer_start() may cause a crash. Solution:   Set the copyID in timer objects. (Ozaki Kiichi)
patch 7.4.1859 Problem:    Cannot use a function reference for "exit_cb". Solution:   Use get_callback(). (Yegappan Lakshmanan)
patch 7.4.1858 Problem:    When a channel writes to a buffer it doesn't find a buffer by the             short name but re-uses it anyway. Solution:   Find buffer also by the short name.
patch 7.4.1857 Problem:    When a channel appends to a buffer that is 'nomodifiable' there is             an error but appending is done anyway. Solution:   Add the 'modifiable' option.  Refuse to write to a 'nomodifiable'             when the value is 1.
patch 7.4.1856 Problem:    failing job test fails on MS-Windows. Solution:   Expect "fail" status instead of "dead".
patch 7.4.1855 Problem:    Valgrind reports memory leak for job that is not freed. Solution:   Free all jobs on exit.  Add test for failing job.
patch 7.4.1854 Problem:    When setting 'termguicolors' the Ignore highlighting doesn't work.             (Charles Campbell) Solution:   Handle the color names "fg" and "bg" when the GUI isn't running             and no colors are speficied, fall back to black and white.
patch 7.4.1853 Problem:    Crash when job and channel are in the same dict while using             partials. (Luc Hermitte) Solution:   Do not decrement the channel reference count too early.
patch 7.4.1852 Problem:    Unix: Cannot run all tests with the GUI. Solution:   Add the "testgui" target.
patch 7.4.1851 Problem:    test_syn_attr failes when using the GUI. (Dominique Pelle) Solution:   Escape the font name properly.
patch 7.4.1850 Problem:    GUI freezes when using a job. (Shougo) Solution:   Unregister the channel when there is an input error.
patch 7.4.1849 Problem:    Still trying to read from channel that is going to be closed.             (Ramel Eshed) Solution:   Check if ch_to_be_closed is set.
patch 7.4.1848 Problem:    Can't build with Strawberry Perl 5.24. Solution:   Define S_SvREFCNT_dec() if needed. (Damien, Ken Takata)
patch 7.4.1847 Problem:    Getting an item from a NULL dict crashes.  Setting a register to a             NULL list crashes. (Nikolai Pavlov, issue #768)  Comparing a NULL             dict with a NULL dict fails. Solution:   Properly check for NULL.
patch 7.4.1846 Problem:    Ubsan detects a multiplication overflow. Solution:   Don't use orig_mouse_time when it's zero. (Dominique Pelle)
patch 7.4.1845 Problem:    Mentioning NetBeans when reading from channel. (Ramel Eshed) Solution:   Make the text more generic.
patch 7.4.1844 Problem:    Using old function name in comment.  More functions should start             with test_. Solution:   Rename function in comment. (Higashi Higashi) Rename             disable_char_avail_for_testing() to test_disable_char_avail().             And alloc_fail() to test_alloc_fail().
patch 7.4.1843 Problem:    Tests involving Python are flaky. Solution:   Set the pt_auto field.  Add tests. (Nikolai Pavlov)
patch 7.4.1842 Problem:    get() works for Partial but not for Funcref. Solution:   Accept Funcref.  Also return the function itself. (Nikolai Pavlov)
Update runtime files.
patch 7.4.1841 Problem:    The code to reallocate the buffer used for quickfix is repeated. Solution:   Move the code to a function. (Yegappan Lakshmanan, closes #831)
patch 7.4.1840 Problem:    When using packages an "after" directory cannot be used. Solution:   Add the "after" directory of the package to 'runtimepath' if it             exists.
patch 7.4.1839 Problem:    Cannot get the items stored in a partial. Solution:   Support using get() on a partial.
patch 7.4.1838 Problem:    Functions specifically for testing do not sort together. Solution:   Rename garbagecollect_for_testing() to test_garbagecollect_now().             Add test_null_list(), test_null_dict(), etc.
patch 7.4.1837 Problem:    The BufUnload event is triggered twice, when :bunload is used with              set to  or . Solution:   Do not trigger the event when ml_mfp is NULL. (Hirohito Higashi)
patch 7.4.1836 Problem:    When using a partial on a dictionary it always gets bound to that             dictionary. Solution:   Make a difference between binding a function to a dictionary             explicitly or automatically.
patch 7.4.1835 Problem:    When splitting and closing a window the status height changes. Solution:   Compute the frame height correctly. (Hirohito Higashi)
patch 7.4.1834 Problem:    Possible crash when conceal is active. Solution:   Check for the screen to be valid when redrawing a line.
patch 7.4.1833 Problem:    Cannot use an Ex command for 'keywordprg'. Solution:   Accept an Ex command. (Nelo-Thara Wallus)
Updated runtime files.
patch 7.4.1832 Problem:    Memory leak in debug commands. Solution:   Free memory before overwriting the pointer. (hint by Justin Keyes)
patch 7.4.1831 Problem:    When timer_stop() is called with a string there is no proper error             message. Solution:   Require getting a number. (Bjorn Linse)
patch 7.4.1830 Problem:    non-antialiased misnamed. Solution:   Use NONANTIALIASED and NONANTIALIASED_QUALITY. (Kim Brouer,             closes #793)
patch 7.4.1829 Problem:    No message on channel log when buffer was freed. Solution:   Log a message.
patch 7.4.1828 Problem:    May try to access buffer that's already freed. Solution:   When freeing a buffer remove it from any channel.
patch 7.4.1827 Problem:    No error when invoking a callback when it's not safe. Solution:   Add an error message.  Avoid the error when freeing a channel.
patch 7.4.1826 Problem:    Callbacks are invoked when it's not safe. (Andrew Stewart) Solution:   When a channel is to be closed don't invoke callbacks right away,             wait for a safe moment.
patch 7.4.1825 Problem:    When job writes to buffer nothing is written. (Nicola) Solution:   Do not discard a channel before writing is done.
patch 7.4.1824 Problem:    When a job is no longer referenced and does not have an exit             callback the process may hang around in defunc state. (Nicola) Solution:   Call job_status() if the job is running and won't get freed             because it might still be useful.
patch 7.4.1823 Problem:    Warning from 64 bit compiler. Solution:   Add type cast. (Mike Williams)
Updated runtime files.
patch 7.4.1822 Problem:    Redirecting stdout of a channel to "null" doesn't work. (Nicola) Solution:   Correct the file descriptor number.
patch 7.4.1821 Problem:    Test fails on MS-Windows. Solution:   Sort the completion results.
patch 7.4.1820 Problem:    Removing language from help tags too often. Solution:   Only remove @en when not needed. (Hirohito Higashi)
patch 7.4.1819 Problem:    Compiler warnings when sprintf() is a macro. Solution:   Don't interrupt sprintf() with an #ifdef. (Michael Jarvis,             closes #788)
patch 7.4.1818 Problem:    Help completion adds @en to all matches except the first one. Solution:   Remove "break", go over all items.
patch 7.4.1817 Problem:    The screen is not updated if a callback is invoked when closing a             channel. Solution:   Invoke redraw_after_callback().
patch 7.4.1816 Problem:    Looping over a null list throws an error. Solution:   Skip over the for loop.
patch 7.4.1815 Problem:    Compiler warnings for unused variables. (Ajit Thakkar) Solution:   Add a dummy initialization. (Yasuhiro Matsumoto)
patch 7.4.1814 Problem:    A channel may be garbage collected while it's still being used by             a job. (James McCoy) Solution:   Mark the channel as used if the job is still used.  Do the same             for channels that are still used.
patch 7.4.1813 Problem:    Memory access error when running test_quickfix. Solution:   Allocate one more byte. (Yegappan Lakshmanan)
patch 7.4.1812 Problem:    Failure on startup with Athena and Motif. Solution:   Check for INVALCOLOR. (Kazunobu Kuriyama)
patch 7.4.1811 Problem:    Netbeans channel gets garbage collected. Solution:   Set reference in nb_channel.
patch 7.4.1810 Problem:    Sending DETACH after a channel was closed isn't useful. Solution:   Only add DETACH for a netbeans channel.
patch 7.4.1809 Problem:    Using wrong short option name for 'termguicolors'. Solution:   Use the option name.
patch 7.4.1808 Problem:    Using wrong feature name to check for 'termguicolors'. Solution:   Use the right feature name. (Ken Takata)
patch 7.4.1807 Problem:    Test_out_close_cb sometimes fails. Solution:   Always write DETACH to out, not err.
patch 7.4.1806 Problem:    'termguicolors' option missing from the options window. Solution:   Add the entry.
Update runtime files.
patch 7.4.1805 Problem:    Running tests in shadow dir fails. Solution:   Link the samples directory
patch 7.4.1804 Problem:    Can't use Vim as MANPAGER. Solution:   Add manpager.vim. (Enno Nagel, closes #491)
patch 7.4.1803 Problem:    GTK3 doesn't handle menu separaters properly. Solution:   Use gtk_separator_menu_item_new(). (Kazunobu Kuriyama)
patch 7.4.1802 Problem:    Quickfix doesn't handle long lines well, they are split. Solution:   Drop characters after a limit. (Anton Lindqvist)
patch 7.4.1801 Problem:    Make uninstall leaves file behind. Solution:   Delete rgb.txt. (Kazunobu Kuriyama)
patch 7.4.1800 Problem:    Unnecessary #ifdef. Solution:   Just use USE_24BIT. (Ken Takata)
patch 7.4.1799 Problem:    'guicolors' is a confusing option name. Solution:   Use 'termguicolors' instead. (Hirohito Higashi)
patch 7.4.1798 Problem:    Still compiler warning for unused return value. (Charles Campbell) Solution:   Assign to ignoredp.
patch 7.4.1797 Problem:    Warning from Windows 64 bit compiler. Solution:   Change int to size_t. (Mike Williams)
patch 7.4.1796 Problem:    Colors are wrong on MS-Windows. (Christian Robinson) Solution:   Use existing RGB macro if it exists. (Ken Takata)
patch 7.4.1795 Problem:    Compiler warning for redefining RGB. (John Marriott) Solution:   Rename it to TORGB.
patch 7.4.1794 Problem:    Can't build on MS-Windows. Solution:   Add missing declaration.
patch 7.4.1793 Problem:    Some character classes may differ between systems.  On OS/X the             regexp test fails. Solution:   Make this less dependent on the system. (idea by Kazunobu Kuriyama)
patch 7.4.1792 Problem:    Color name decoding is implemented several times. Solution:   Move it to term.c. (Christian Brabandt)
patch 7.4.1791 Problem:    Channel could be garbage collected too early. Solution:   Don't free a channel or remove it from a job when it is still             useful.
patch 7.4.1790 Problem:    Leading white space in a job command matters. (Andrew Stewart) Solution:   Skip leading white space.
patch 7.4.1789 Problem:    Cannot use ch_read() in the close callback. Solution:   Do not discard the channel if there is readahead.  Do not discard             readahead if there is a close callback.
patch 7.4.1788 Problem:    NSIS script is missing packages. Solution:   Add the missing directories. (Ken Takata)
patch 7.4.1787 Problem:    When a job ends the close callback is invoked before other             callbacks. On Windows the close callback is not called. Solution:   First invoke out/err callbacks before the close callback.             Make the close callback work on Windows.
patch 7.4.1786 Problem:    Compiled-in colors do not match rgb.txt. Solution:   Use the rgb.txt colors. (Kazunobu Kuriyama)
patch 7.4.1785 Problem:    Regexp test fails on windows. Solution:   set 'isprint' to the right value for testing.
patch 7.4.1784 Problem:    The termtruecolor feature is enabled differently from many other             features. Solution:   Enable the termtruecolor feature for the big build, not through             configure.
patch 7.4.1783 Problem:    The old regexp engine doesn't handle character classes correctly.             (Manuel Ortega) Solution:   Use regmbc() instead of regc().  Add a test.
patch 7.4.1782 Problem:    strcharpart() does not work properly with some multi-byte             characters. Solution:   Use mb_cptr2len() instead of mb_char2len(). (Hirohito Higashi)
patch 7.4.1781 Problem:    synIDattr() does not respect 'guicolors'. Solution:   Change the conditition for the mode. (Christian Brabandt)
patch 7.4.1779 Problem:    Using negative index in strcharpart(). (Yegappan Lakshmanan) Solution:   Assume single byte when using a negative iindex.
patch 7.4.1778 Problem:    When using the term truecolor feature, the t_8f and t_8b termcap             options are not set by default. Solution:   Move the values to before BT_EXTRA_KEYS. (Christian Brabandt)
patch 7.4.1777 Problem:    Newly added features can escape the sandbox. Solution:   Add checks for restricted and secure. (Yasuhiro Matsumoto)
patch 7.4.1776 Problem:    Using wrong buffer length. Solution:   use the right name. (Kazunobu Kuriyama)
patch 7.4.1775 Problem:    The rgb.txt file is not installed. Solution:   Install the file. (Christian Brabandt)
patch 7.4.1774 Problem:    Cterm true color feature has warnings. Solution:   Add type casts.
patch 7.4.1773 Problem:    Compiler warnings. (Dominique Pelle) Solution:   Add UNUSED. Add type cast. Avoid a buffer overflow.
patch 7.4.1772 Problem:    Installation fails when $GTK_UPDATE_ICON_CACHE is empty. Solution:   Add quotes. (Kazunobu Kuriyama)
patch 7.4.1771 Problem:    Warning for unused variable. Solution:   Add #ifdef. (John Marriott)
patch 7.4.1770 Problem:    Cannot use true color in the terminal. Solution:   Add the 'guicolors' option. (Nikolai Pavlov)
patch 7.4.1769 Problem:    No "closed", "errors" and "encoding" attribute on Python output. Solution:   Add attributes and more tests. (Roland Puntaier, closes #622)
patch 7.4.1768 Problem:    Arguments of setqflist() are not checked properly. Solution:   Add better checks, add a test. (Nikolai Pavlov, Hirohito Higashi,             closes #661)
patch 7.4.1767 Problem:    When installing Vim on a GTK system the icon cache is not updated. Solution:   Update the GTK icon cache when possible. (Kazunobu Kuriyama)
updated runtime files.  Add avra syntax.
patch 7.4.1766 Problem:    Building instructions for MS-Windows are outdated. Solution:   Mention setting SDK_INCLUDE_DIR. (Ben Franklin, closes #771)  Move             outdated instructions further down.
patch 7.4.1765 Problem:    Undo options are not together in the options window. Solution:   Put them together.  (Gary Johnson)
patch 7.4.1763 Problem:    Coverity: useless assignment. Solution:   Add #if 0.
patch 7.4.1762 Problem:    Coverity: useless assignments. Solution:   Remove them.
patch 7.4.1761 Problem:    Coverity complains about ignoring return value. Solution:   Add "(void)" to get rid of the warning.
Updated runtime files.
patch 7.4.1760 Problem:    Compiler warning for unused variable. Solution:   Add #ifdef. (John Marriott)
patch 7.4.1759 Problem:    When using feedkeys() in a timer the inserted characters are not             used right away. Solution:   Break the wait loop when characters have been added to typebuf.             use this for testing CursorHoldI.
patch 7.4.1758 Problem:    Triggering CursorHoldI when in CTRL-X mode causes problems. Solution:   Do not trigger CursorHoldI in CTRL-X mode. Add "!" flag to             feedkeys() (test with that didn't work though).
patch 7.4.1757 Problem:    When using complete() it may set 'modified' even though nothing             was inserted. Solution:   Use Down/Up instead of Next/Previous match. (Shougo, closes #745)
patch 7.4.1756 Problem:    "dll" options are not expanded. Solution:   Expand environment variables. (Ozaki Kiichi)
patch 7.4.1755 Problem:    When using getreg() on a non-existing register a NULL list is             returned. (Bjorn Linse) Solution:   Allocate an empty list. Add a test.
patch 7.4.1754 Problem:    When 'filetype' was set and reloading a buffer which does not             cause it to be set, the syntax isn't loaded. (KillTheMule) Solution:   Remember whether the FileType event was fired and fire it if not.             (Anton Lindqvist, closes #747)
patch 7.4.1753 Problem:    "noinsert" in 'completeopt' is sometimes ignored. Solution:   Set the variables when the 'completeopt' was set. (Ozaki Kiichi)
Add missing test file.
patch 7.4.1752 Problem:    When adding to the quickfix list the current position is reset. Solution:   Do not reset the position when not needed. (Yegappan Lakshmanan)
patch 7.4.1750 Problem:    When a buffer gets updated while in command line mode, the screen             may be messed up. Solution:   Postpone the redraw when the screen is scrolled.
patch 7.4.1749 Problem:    When using GTK 3.20 there are a few warnings. Solution:   Use new functions when available. (Kazunobu Kuriyama)
Add missing test file.
patch 7.4.1748 Problem:    "gD" does not find match in first column of first line. (Gary             Johnson) Solution:   Accept match at the cursor.
patch 7.4.1747 Problem:    Coverity: missing check for NULL pointer. Solution:   Check for out of memory.
patch 7.4.1746 Problem:    Memory leak in Perl. Solution:   Decrement the reference count.  Add a test. (Damien)
patch 7.4.1745 Problem:    README file is not clear about where to get Vim. Solution:   Add links to github, releases and the Windows installer.             (Suggested by Christian Brabandt)
patch 7.4.1744 Problem:    Python: Converting a sequence may leak memory. Solution:   Decrement a reference. (Nikolay Pavlov)
patch 7.4.1743 Problem:    Clang warns for uninitialzed variable. (Michael Jarvis) Solution:   Initialize it.
patch 7.4.1742 Problem:    strgetchar() does not work correctly. Solution:   use mb_cptr2len().  Add a test. (Naruhiko Nishino)
patch 7.4.1741 Problem:    Not testing utf-8 characters. Solution:   Move the right asserts to the test_expr_utf8 test.
patch 7.4.1740 Problem:    syn-cchar defined with matchadd() does not appear if there are no             other syntax definitions which matches buffer text. Solution:   Check for startcol. (Ozaki Kiichi, haya14busa, closes #757)
patch 7.4.1739 Problem:    Messages test fails on MS-Windows. Solution:   Adjust the asserts.  Skip the "messages maintainer" line if not             showing all messages.
patch 7.4.1738 Problem:    Count for ":messages" depends on number of lines. Solution:   Add ADDR_OTHER address type.
patch 7.4.1737 Problem:    Argument marked as unused is used. Solution:   Remove UNUSED.
patch 7.4.1736 Problem:    Unused variable. Solution:   Remove it. (Yasuhiro Matsumoto)
patch 7.4.1735 Problem:    It is not possible to only see part of the message history.  It is             not possible to clear messages. Solution:   Add a count to ":messages" and a clear argument. (Yasuhiro             Matsumoto)
patch 7.4.1734 Problem:    Test fails when not using utf-8. Solution:   Split test in regularand utf-8 part.
patch 7.4.1733 Problem:    "make install" doesn't know about cross-compiling. (Christian             Neukirchen) Solution:   Add CROSS_COMPILING. (closes #740)
patch 7.4.1732 Problem:    Folds may close when using autocomplete. (Anmol Sethi) Solution:   Increment/decrement disable_fold. (Christian Brabandt, closes             #643)
patch 7.4.1731 Problem:    Python: turns partial into simple funcref. Solution:   Use partials like partials. (Nikolai Pavlov, closes #734)
patch 7.4.1730 Problem:    It is not easy to get a character out of a string. Solution:   Add strgetchar() and strcharpart().
patch 7.4.1729 Problem:    The Perl interface cannot use 'print' operator for writing             directly in standard IO. Solution:   Add a minimal implementation of PerlIO Layer feature and try to             use it for STDOUT/STDERR. (Damien)
patch 7.4.1728 Problem:    The help for functions require a space after the "(". Solution:   Make CTRL-] on a function name ignore the arguments. (Hirohito             Higashi)
patch 7.4.1727 Problem:    Cannot detect a crash in tests when caused by garbagecollect(). Solution:   Add garbagecollect_for_testing().  Do not free a job if is still             useful.
patch 7.4.1726 Problem:    ANSI compiler complains about string length. Solution:   Split long string in two parts. (Michael Jarvis)
patch 7.4.1725 Problem:    Compiler errors for non-ANSI compilers. Solution:   Remove // comment.  Remove comma at end of enum. (Michael Jarvis)
Updated runtime files.
patch 7.4.1724 Problem:    Tabline test fails in GUI. Solution:   Remove 'e' from 'guioptions'.
patch 7.4.1723 Problem:    When using try/catch in 'tabline' it is still considered an             error and the tabline will be disabled. Solution:   Check did_emsg instead of called_emsg. (haya14busa, closes #746)
patch 7.4.1722 Problem:    Crash when calling garbagecollect() after starting a job. Solution:   Set the copyID on job and channel. (Hirohito Higashi, Ozaki             Kiichi)
Updated runtime files.
patch 7.4.1721 Problem:    The vimtbar files are unused. Solution:   Remove them. (Ken Takata)
patch 7.4.1720 Problem:    Tests fail without the job feature. Solution:   Skip tests when the job feature is not present.
patch 7.4.1719 Problem:    Leaking memory when there is a cycle involving a job and a             partial. Solution:   Add a copyID to job and channel.  Set references in items referred             by them.  Go through all jobs and channels to find unreferenced             items.  Also, decrement reference counts when garbage collecting.
patch 7.4.1718 Problem:    Coverity: not using return value of set_ref_in_item(). Solution:   Use the return value.
patch 7.4.1717 Problem:    Leaking memory when opening a channel fails. Solution:   Unreference partials in job options.
patch 7.4.1716 Problem:    'autochdir' doesn't work for the first file. (Rob Hoelz) Solution:   Call DO_AUTOCHDIR after startup. (Christian Brabandt, closes #704)
patch 7.4.1715 Problem:    Double free when a partial is in a cycle with a list or dict.             (Nikolai Pavlov) Solution:   Do not free a nested list or dict used by the partial.
patch 7.4.1714 Problem:    Non-GUI specific settings in the gvimrc_example file. Solution:   Move some settings to the vimrc_example file.  Remove setting             'hlsearch' again. (suggested by Hirohito Higashi)
patch 7.4.1713 Problem:    GTK GUI doesn't work on Wayland. Solution:   Specify that only the X11 backend is allowed. (Simon McVittie)
patch 7.4.1712 Problem:    For plugins in packages, plugin authors need to take care of all             dependencies. Solution:   When loading "start" packages and for :packloadall, first add all             directories to 'runtimepath' before sourcing plugins.
patch 7.4.1711 Problem:    When using try/catch in 'statusline' it is still considered an             error and the status line will be disabled. Solution:   Check did_emsg instead of called_emsg. (haya14busa, closes #729)
patch 7.4.1710 Problem:    Not all output of an external command is read. Solution:   Avoid timing out when the process has exited. (closes #681)
patch 7.4.1709 Problem:    Mistake in #ifdef. Solution:   Change PROOF_QUALITY to DRAFT_QUALITY. (Ken Takata)
patch 7.4.1708 Problem:    New regexp engine does not work properly with EBCDIC. Solution:   Define equivalence class characters. (Owen Leibman)
patch 7.4.1707 Problem:    Cannot use empty dictionary key, even though it can be useful. Solution:   Allow using an empty dictionary key.
patch 7.4.1706 Problem:    Old style function declaration breaks build. Solution:   Remove __ARGS().
patch 7.4.1705 Problem:    The 'guifont' option does not allow for a quality setting. Solution:   Add the "q" item, supported on MS-Windows. (Yasuhiro Matsumoto)
patch 7.4.1704 Problem:    Using freed memory with "wincmd p". (Dominique Pelle) Solution:   Also clear "prevwin" in other tab pages.
patch 7.4.1703 Problem:    Can't assert for not equal and not matching. Solution:   Add assert_notmatch() and assert_notequal().
patch 7.4.1702 Problem:    Using freed memory when parsing 'printoptions' fails. Solution:   Save the old options and restore them in case of an error.             (Dominique)
patch 7.4.1701 Problem:    Equivalence classes still tested in old style tests. Solution:   Remove the duplicate.
patch 7.4.1699 Problem:    :packadd does not work the same when used early or late. Solution:   Always load plugins matching "plugin/**/*.vim".
patch 7.4.1698 Problem:    Two tests fail when running tests with MinGW. (Michael Soyka) Solution:   Convert test_getcwd.ok test_wordcount.ok to unix fileformat.
patch 7.4.1697 Problem:    Display problems when the 'ambiwidth' and 'emoji' options are not             set properly or the terminal doesn't behave as expected. Solution:   After drawing an ambiguous width character always position the             cursor.
patch 7.4.1696 Problem:    When using :stopinsert in a silent mapping the "INSERT" message             isn't cleared. (Coacher) Solution:   Always clear the message. (Christian Brabandt, closes #718)
patch 7.4.1695 Problem:    ":syn reset" clears the effect ":syn iskeyword". (James McCoy) Solution:   Remove clearing the syntax keywords.
patch 7.4.1694 Problem:    Win32 gvim doesn't work with "dvorakj" input method. Solution:   Wait for QS_ALLINPUT instead of QS_ALLEVENTS. (Yukihiro Nakadaira)
Add json_test to gitignore (Hirohito Higashi)
patch 7.4.1693 Problem:    Building the Perl interface gives compiler warnings. Solution:   Remove a pragma. Add noreturn attributes. (Damien)
patch 7.4.1692 Problem:    feedkeys('i', 'x') gets stuck, waits for a character to be typed. Solution:   Behave like ":normal". (Yasuhiro Matsumoto)
patch 7.4.1691 Problem:    When switching to a new buffer and an autocommand applies syntax             highlighting an ml_get error may occur. Solution:   Check "syn_buf" against the buffer in the window. (Alexander von             Buddenbrock, closes #676)
patch 7.4.1690 Problem:    Can't compile with the conceal feature but without multi-byte. Solution:   Adjust #ifdef. (Owen Leibman)
patch 7.4.1688 Problem:    MzScheme does not support partial. Solution:   Add minimal partial support. (Ken Takata)
patch 7.4.1687 Problem:    The channel close_cb option does not work. Solution:   Use jo_close_partial instead of jo_err_partial. (Damien)
patch 7.4.1686 Problem:    When running tests $HOME/.viminfo is written. (James McCoy) Solution:   Add 'nviminfo' to the 'viminfo' option. (closes #722)
Updated runtime files.
patch 7.4.1685 Problem:    There is no easy way to get all the information about a match. Solution:   Add matchstrpos(). (Ozaki Kiichi)
patch 7.4.1684 Problem:    README text is slightly outdated. Solution:   Mention the READMEdir directory.
patch 7.4.1683 Problem:    Generated .bat files do not support --nofork. Solution:   Add check for --nofork.  Also add "setlocal". (Kevin Cantú,             closes #659)
patch 7.4.1682 Problem:    Coverity: no check for NULL. Solution:   Add check for invalid argument to assert_match().
patch 7.4.1681 Problem:    Coverity warns for fixed size buffer length (false positive). Solution:   Add a check for the name length.
patch 7.4.1680 Problem:    Coverity warns for not checking name length (false positive). Solution:   Only copy the characters we know are there.
patch 7.4.1679 Problem:    Coverity: copying value of v_lock without initializing it. Solution:   Init v_lock in rettv_list_alloc() and rettv_dict_alloc().
patch 7.4.1678 Problem:    Warning for unused argument. Solution:   Add UNUSED. (Dominique Pelle)
patch 7.4.1677 Problem:    A reference to the removed file_select plugin remains. Solution:   Remove it.
patch 7.4.1676 Problem:    The shellmenu plugin has to be copied or sourced to be used. Solution:   Turn it into a package.
patch 7.4.1675 Problem:    The swapmous plugin has to be copied or sourced to be used. Solution:   Turn it into the swapmouse package.
patch 7.4.1674 Problem:    The editexisting plugin has to be copied or sourced to be used. Solution:   Turn it into a package.
patch 7.4.1673 Problem:    The justify plugin has to be copied or sourced to be used. Solution:   Turn it into a package.
patch 7.4.1672 Problem:    The Dvorak support is a bit difficult to install. Solution:   Turn it into an optional package.
patch 7.4.1671 Problem:    When help exists in multiple languages, adding @ab while "ab" is             the default help language is unnecessary. Solution:   Leave out "@ab" when not needed. (Ken Takata)
patch 7.4.1670 Problem:    Completion doesn't work well for a variable containing "#". Solution:   Recognize the "#". (Watiko)
patch 7.4.1669 Problem:    When writing buffer lines to a pipe Vim may block. Solution:   Avoid blocking, write more lines later.
patch 7.4.1668 Problem:    channel_get_all() does multiple allocations. Solution:   Compute the size and allocate once.
patch 7.4.1667 Problem:    Win32: waiting on a pipe with fixed sleep time. Solution:   Start with a short delay and increase it when looping.
patch 7.4.1666 Problem:    When reading JSON from a channel all readahead is used. Solution:   Use the fill function to reduce overhead.
patch 7.4.1665 Problem:    Crash when calling job_start() with a NULL string. (Dominique) Solution:   Check for an invalid argument.
patch 7.4.1664 Problem:    Crash in :cgetexpr. Solution:   Check for NULL pointer. (Dominique) Add a test.
patch 7.4.1663 Problem:    In tests it's often useful to check if a pattern matches. Solution:   Add assert_match().
Updated runtime files.
patch 7.4.1662 Problem:    No test for an invalid Ex command on a channel. Solution:   Test handling an invalid command gracefully.  Avoid getting an             error message, do write it to the channel log.
patch 7.4.1661 Problem:    No test for special characters in channel eval command. Solution:   Testing sending and receiving text with special characters.
patch 7.4.1659 Problem:    Compiler warning for argument type. (Manuel Ortega) Solution:   Remove "&".
patch 7.4.1658 Problem:    A plugin does not know when VimEnter autocommands were already             triggered. Solution:   Add the v:vim_did_enter variable.
patch 7.4.1657 Problem:    On Unix in a terminal: channel messages are not handled right away.             (Jackson Alves de Aquino) Solution:   Break the loop for timers when something was received.
patch 7.4.1656 Problem:    Crash when using partial with a timer. Solution:   Increment partial reference count. (Hirohito Higashi)
patch 7.4.1655 Problem:    remote_expr() hangs. (Ramel) Solution:   Check for messages in the waiting loop.
patch 7.4.1654 Problem:    Crash when using expand('%:S') in a buffer without a name. Solution:   Don't set a NUL. (James McCoy, closes #714)
patch 7.4.1653 Problem:    Users who loaded matchit.vim manually have to change their             startup. (Gary Johnson) Solution:   Add a file in the old location that loads the package.
patch 7.4.1652 Problem:    Old style test for fnamemodify(). Solution:   Turn it into a new style test.
patch 7.4.1651 Problem:    Some dead (MSDOS) code remains. Solution:   Remove the unused lines. (Ken Takata)
patch 7.4.1650 Problem:    Quickfix test fails. Solution:   Accept any number of matches.
patch 7.4.1649 Problem:    The matchit plugin needs to be copied to be used. Solution:   Put the matchit plugin in an optional package.
patch 7.4.1648 Problem:    Compiler has a problem copying a string into di_key[]. (Yegappan             Lakshmanan) Solution:   Add dictitem16_T.
patch 7.4.1647 Problem:    Using freed memory after setqflist() and ":caddbuffer".  (Dominique) Solution:   Set qf_ptr when adding the first item to the quickfix list.
patch 7.4.1646 Problem:    Using Python vim.bindeval() on a partial doesn't work. (Nikolai             Pavlov) Solution:   Add VAR_PARTIAL support in Python.
patch 7.4.1645 Problem:    When a dict contains a partial it can't be redefined as a             function. (Nikolai Pavlov) Solution:   Remove the partial when overwriting with a function.
patch 7.4.1644 Problem:    Using string() on a partial that exists in the dictionary it binds             results in an error. (Nikolai Pavlov) Solution:   Make string() not fail on a recursively nested structure. (Ken             Takta)
patch 7.4.1643 Problem:    Terminating file name has side effects. Solution:   Restore the character. (mostly by James McCoy, closes #713)
patch 7.4.1642 Problem:    Handling emoji characters as full width has problems with             backwards compatibility. Solution:   Only put characters in the 1f000 range in the emoji table.
patch 7.4.1641 Problem:    Using unterminated string. Solution:   Add NUL before calling vim_strsave_shellescape(). (James McCoy)
patch 7.4.1640 Problem:    Crash when an autocommand changes a quickfix list. (Dominique) Solution:   Check wether an entry is still valid. (Yegappan Lakshmanan,             Hirohito Higashi)
patch 7.4.1639 Problem:    Invoking garbage collection may cause a double free. Solution:   Don't free the dict in a partial when recursive is FALSE.
patch 7.4.1638 Problem:    When binding a function to a dict the reference count is wrong. Solution:   Decrement dict reference count, only reference the function when             actually making a copy. (Ken Takata)
patch 7.4.1637 Problem:    Can't build with older MinGW compiler. Solution:   Change option from c++11 to gnu++11. (Ken Takata)
patch 7.4.1636 Problem:    When 'F' is in 'shortmess' the prompt for the encryption key isn't             displayed. (Toothpik) Solution:   Reset msg_silent.
patch 7.4.1635 Problem:    Channel test is a bit flaky. Solution:   Remove 'DETACH' if it's there.
patch 7.4.1634 Problem:    Vertical movement after CTRL-A ends up in the wrong column.             (Urtica Dioica) Solution:   Set curswant when appropriate. (Hirohito Higashi)
patch 7.4.1633 Problem:    If the help tags file was removed "make install" fails. (Tony             Mechelynck) Solution:   Only try moving the file if it exists.
patch 7.4.1632 Problem:    List of test targets is outdated. Solution:   Update to current list of test targets.
patch 7.4.1631 Problem:    Compiler doesn't understand switch on all enum values. (Tony             Mechelynck) Solution:   Initialize variable.
patch 7.4.1630 Problem:    Unicode table for double width is outdated. Solution:   Update to the latest Unicode standard.
patch 7.4.1629 Problem:    Handling emoji characters as full width has problems with             backwards compatibility. Solution:   Remove ambiguous and double width characters from the emoji table.             Use a separate table for the character class.             (partly by Yasuhiro Matsumoto)
patch 7.4.1628 Problem:    64-bit Compiler warning. Solution:   Change type of variable. (Mike Williams)
patch 7.4.1627 Problem:    Channel out_cb and err_cb are not tested. Solution:   Add a test.
patch 7.4.1626 Problem:    Missing changes to structs. Solution:   Include the changes.
Updated runtime files.
patch 7.4.1625 Problem:    Trying to close file descriptor that isn't open. Solution:   Check for negative number.
patch 7.4.1624 Problem:    Can't get info about a channel. Solution:   Add ch_info().
patch 7.4.1623 Problem:    All Channels share the message ID, it keeps getting bigger. Solution:   Use a message ID per channel.
patch 7.4.1622 Problem:    Channel demo doesn't work with Python 2.6. Solution:   Add number in formatting placeholder
patch 7.4.1621 Problem:    Channel test doesn't work with Python 2.6. Solution:   Add number in formatting placeholder. (Wiredool)
patch 7.4.1620 Problem:    Emoji characters are not considered as a kind of word character. Solution:   Give emoji characters a word class number. (Yasuhiro Matsumoto)
patch 7.4.1619 Problem:    When 'fileformats' is set in the vimrc it applies to new buffers             but not the initial buffer. Solution:   Set 'fileformat' when starting up. (Mike Williams)
patch 7.4.1618 Problem:    Starting job with output to buffer changes options in the current             buffer. Solution:   Set "curbuf" earlier. (Yasuhiro Matsumoto)
patch 7.4.1617 Problem:    When a JSON message is split it isn't decoded. Solution:   Wait a short time for the rest of the message to arrive.
patch 7.4.1616 Problem:    Malformed channel request causes a hang. Solution:   Drop malformed message. (Damien)
patch 7.4.1615 Problem:    Build fails with tiny features. Solution:   Adjust #ifdefs.
patch 7.4.1614 Problem:    Still quickfix test in old style. Solution:   Turn test 10 into a new style test.
patch 7.4.1613 Problem:    Still can't build with small features. Solution:   Adjust #ifdefs.
patch 7.4.1612 Problem:    Can't build with small features. Solution:   Move code and #ifdefs.
patch 7.4.1611 Problem:    The versplit feature makes the code uneccessary complicated. Solution:   Remove FEAT_VERTSPLIT, always support vertical splits when             FEAT_WINDOWS is defined.
patch 7.4.1610 Problem:    Compiler warnings for non-virtual destructor. Solution:   Mark the classe final. (Ken Takata)
patch 7.4.1609 Problem:    Contents file is only for Amiga distro. Solution:   Move it to "READMEdir".  Update some info.
patch 7.4.1608 Problem:    string() doesn't handle a partial. Solution:   Make a string from a partial.
patch 7.4.1607 Problem:    Comparing a function that exists on two dicts is not backwards             compatible. (Thinca) Solution:   Only compare the function, not what the partial adds.
patch 7.4.1606 Problem:    Having type() handle a Funcref that is or isn't a partial             differently causes problems for existing scripts. Solution:   Make type() return the same value. (Thinca)
patch 7.4.1605 Problem:    Catching exception that won't be thrown. Solution:   Remove try/catch.
patch 7.4.1604 Problem:    Although emoji characters are ambiguous width, best is to treat             them as full width. Solution:   Update the Unicode character tables. Add the 'emoji' options.             (Yasuhiro Matsumoto)
patch 7.4.1603 Problem:    Timer with an ":echo" command messes up display. Solution:   Redraw depending on the mode. (Hirohito Higashi)  Avoid the more             prompt being used recursively.
patch 7.4.1602 Problem:    Info files take space in the top directory. Solution:   Move them to "READMEdir".
patch 7.4.1601 Problem:    README files take a lot of space in the top directory. Solution:   Move most of them to "READMEdir".
patch 7.4.1600 Problem:    libs directory is not useful. Solution:   Remove arp.library, it was only for very old Amiga versions.
patch 7.4.1599 Problem:    No link to Coverity. Solution:   Add Coverity badge in README.
patch 7.4.1598 Problem:    When starting the GUI fails a swap file is left behind. (Joerg             Plate) Solution:   Preserve files before exiting. (closes #692)
patch 7.4.1597 Problem:    Memory leak when out of memory. (Coverity) Solution:   Free the name.
patch 7.4.1596 Problem:    Memory leak. (Coverity) Solution:   Free the pattern.
patch 7.4.1595 Problem:    Not checking for failed open(). (Coverity) Solution:   Check file descriptor not being negative.
patch 7.4.1594 Problem:    Timers don't work on Unix. Solution:   Add missing code.
patch 7.4.1593 Problem:    Using channel timeout instead of request timeout. (Coverity) Solution:   Remove the extra assignment.
patch 7.4.1592 Problem:    Quickfix code using memory after being freed. (Dominique Pelle) Solution:   Detect that the window was closed. (Hirohito Higashi)
patch 7.4.1591 Problem:    The quickfix title is truncated. Solution:   Save the command before it is truncated. (Anton Lindqvist)
patch 7.4.1590 Problem:    Warning for shadowed variable. (Christian Brabandt) Solution:   Move the variable into a local block.
patch 7.4.1589 Problem:    Combining dict and args with partial doesn't always work. Solution:   Use the arguments from the partial.
patch 7.4.1588 Problem:    Old style test for quickfix. Solution:   Turn test 96 into a new style test.
patch 7.4.1587 Problem:    Compiler warnings with 64 bit compiler. Solution:   Add type casts. (Mike Williams)
patch 7.4.1586 Problem:    Nesting partials doesn't work. Solution:   Append arguments. (Ken Takata)
patch 7.4.1585 Problem:    Partial is not recognized everywhere. Solution:   Check for partial in trans_function_name(). (Yasuhiro Matsumoto)             Add a test.
patch 7.4.1584 Problem:    Timers don't work for Win32 console. Solution:   Add check_due_timer() in WaitForChar().
patch 7.4.1583 Problem:    Warning for unitinialized variable. Solution:   Initialize it. (Dominique)
patch 7.4.1582 Problem:    Get E923 when using function(dict.func, [], dict). (Kent Sibilev)             Storing a function with a dict in a variable drops the dict if the             function is script-local. Solution:   Translate the function name.  Use dict arg if present.
patch 7.4.1581 Problem:    Using ":call dict.func()" where the function is a partial does             not work.  Using "dict.func()" where the function does not take a             Dictionary does not work. Solution:   Handle partial properly in ":call". (Yasuhiro Matsumoto)
patch 7.4.1580 Problem:    Crash when using function reference. (Luchr) Solution:   Set initial refcount. (Ken Takata, closes #690)
patch 7.4.1579 Problem:    Missing changes in channel.c Solution:   Include the changes.
patch 7.4.1578 Problem:    There is no way to invoke a function later or periodically. Solution:   Add timer support.
patch 7.4.1577 Problem:    Cannot pass "dict.Myfunc" around as a partial. Solution:   Create a partial when expected.
patch 7.4.1576 Problem:    Write error of viminfo file is not handled properly. (Christian             Neukirchen) Solution:   Check the return value of fclose(). (closes #682)
patch 7.4.1575 Problem:    Using wrong size for struct. Solution:   Use the size for wide API. (Ken Takata)
Add missing test file.
patch 7.4.1574 Problem:    ":undo 0" does not work. (Florent Fayolle) Solution:   Make it undo all the way. (closes #688)
patch 7.4.1573 Problem:    Tests get stuck at the more prompt. Solution:   Move the backspace test out of test_alot.
patch 7.4.1572 Problem:    Setting 'compatible' in test influences following tests. Solution:   Turn 'compatible' off again.
patch 7.4.1571 Problem:    No test for ":help". Solution:   Add a test for what 7.4.1568 fixed. (Higashi Higashi)
patch 7.4.1570 Problem:    There is no way to avoid the message when editing a file. Solution:   Add the "F" flag to 'shortmess'. (Shougo, closes #686)
patch 7.4.1569 Problem:    Using old style tests for quickfix. Solution:   Change them to new style tests. (Yegappan Lakshmanan)
patch 7.4.1568 Problem:    Using CTRL-] in help on option in parentheses doesn't work. Solution:   Skip the "(" in "('". (Hirohito Higashi)
patch 7.4.1567 Problem:    Crash in assert_fails(). Solution:   Check for NULL. (Dominique Pelle)  Add a test.
patch 7.4.1566 Problem:    Compiler warning for shadowed variable. (Kazunobu Kuriyama) Solution:   Remove the inner one.
patch 7.4.1565 Problem:    Crash when assert_equal() runs into a NULL string. Solution:   Check for NULL. (Dominique) Add a test.
patch 7.4.1564 Problem:    An empty list in function() causes an error. Solution:   Handle an empty list like there is no list of arguments.
patch 7.4.1563 Problem:    Partial test fails on windows. Solution:   Return 1 or -1 from compare function.
patch 7.4.1562 Problem:    ":helptags ALL" crashes. (Lcd) Solution:   Don't free twice.
patch 7.4.1561 Problem:    Missing update to proto file. Solution:   Change the proto file.
patch 7.4.1560 Problem:    Dict options with a dash are more difficult to use. Solution:   Use an underscore, so that dict.err_io can be used.
patch 7.4.1559 Problem:    Passing cookie to a callback is clumsy. Solution:   Change function() to take arguments and return a partial.
patch 7.4.1558 Problem:    It is not easy to find out what windows display a buffer. Solution:   Add win_findbuf().
patch 7.4.1557 Problem:    Windows cannot be identified. Solution:   Add a unique window number to each window and functions to use it.
patch 7.4.1556 Problem:    "make install" changes the help tags file, causing it to differ             from the repository. Solution:   Move it aside and restore it.
patch 7.4.1555 Problem:    List of test targets incomplete. Solution:   Add newly added tests.
patch 7.4.1554 Problem:    Completion for :colorscheme does not use 'packpath'. Solution:   Make it work, add a test. (Hirohito Higashi)
patch 7.4.1553 Problem:    ":runtime" does not use 'packpath'. Solution:   Add "what" argument.
patch 7.4.1552 Problem:    ":colorscheme" does not use 'packpath'. Solution:   Also use in "start" and "opt" directories in 'packpath'.
patch 7.4.1551 Problem:    Cannot generate help tags in all doc directories. Solution:   Make ":helptags ALL" work.
patch 7.4.1550 Problem:    Cannot load packages early. Solution:   Add the ":packloadall" command.
patch 7.4.1549 Problem:    Test for syntax attributes fails in Win32 GUI. Solution:   Use an existing font name.
patch 7.4.1548 Problem:    Two tests fail. Solution:   Adjust the expected error number. Remove check for type.
patch 7.4.1547 Problem:    Getting a cterm highlight attribute that is not set results in the             string "-1". Solution:   Return an empty string. (Taro Muraoka)
patch 7.4.1546 Problem:    Sticky type checking is more annoying than useful. Solution:   Remove the error for changing a variable type.
patch 7.4.1545 Problem:    GTK3: horizontal cursor movement in Visual selection not good. Solution:   Make it work better. (Kazunobu Kuriyama)
patch 7.4.1544 Problem:    On Win32 escaping the command does not work properly. Solution:   Reset 'ssl' when escaping the command. (Yasuhiro Matsumoto)
patch 7.4.1543 Problem:    Channel log methods are not tested. Solution:   Log job activity and check it.
patch 7.4.1542 Problem:    job_start() with a list is not tested. Solution:   Call job_start() with a list.
patch 7.4.1541 Problem:    Missing job_info(). Solution:   Implement it.
patch 7.4.1540 Problem:    Channel test is a bit flaky. Solution:   Increase expected wait time.
patch 7.4.1539 Problem:    Too much code in eval.c. Solution:   Move job and channel code to channel.c.
Updated runtime files.
patch 7.4.1538 Problem:    Selection with the mouse does not work in command line mode. Solution:   Use cairo functions. (Kazunobu Kuriyama)
patch 7.4.1537 Problem:    Too many feature flags for pipes, jobs and channels. Solution:   Only use FEAT_JOB_CHANNEL.
patch 7.4.1536 Problem:    Cannot re-use a channel for another job. Solution:   Add the "channel" option to job_start().
patch 7.4.1535 Problem:    The feedkeys test has a one second delay. Solution:   Avoid need_wait_return() to delay. (Hirohito Higashi)
patch 7.4.1534 Problem:    Compiler warning for shadowed variable. (Kazunobu Kuriyama) Solution:   Rename it.
patch 7.4.1533 Problem:    Using feedkeys() with an empty string disregards 'x' option. Solution:   Make 'x' work with an empty string. (Thinca)
patch 7.4.1532 Problem:    MS-Windows channel leaks file descriptor. Solution:   Use CreateFile with the right options. (Yasuhiro Matsumoto)
patch 7.4.1531 Problem:    Compiler warning for unitinialized variable. (Dominique Pelle) Solution:   Always give the variable a value.
patch 7.4.1530 Problem:    MS-Windows job_start() closes wrong handle. Solution:   Close hThread on the process info. (Ken Takata)
patch 7.4.1529 Problem:    Specifying buffer number for channel not implemented yet. Solution:   Implement passing a buffer number.
patch 7.4.1528 Problem:    Using "ever" for packages is confusing. Solution:   Use "start", as it's related to startup.
patch 7.4.1527 Problem:    Channel test is flaky on MS-Windows. Solution:   Limit the select() timeout to 50 msec and try with a new socket if             it fails.
patch 7.4.1526 Problem:    Writing to file and not connecting a channel doesn't work for             MS-Windows. Solution:   Make it work. (Yasuhiro Matsumoto)
patch 7.4.1525 Problem:    On a high resolution screen the toolbar icons are too small. Solution:   Add "huge" and "giant" to 'toolbariconsize'. (Brian Gix)
patch 7.4.1524 Problem:    Channel test fails on BSD. Solution:   Break out of the loop when connect() succeeds. (Ozaki Kiichi)
patch 7.4.1523 Problem:    Writing channel to a file fails on MS-Windows. Solution:   Disable it for now.
patch 7.4.1522 Problem:    Cannot write channel err to a buffer. Solution:   Implement it.
patch 7.4.1521 Problem:    File permission test fails on MS-Windows. Solution:   Expect a different permission.
patch 7.4.1520 Problem:    Channel test: Waiting for a file to appear doesn't work. Solution:   In waitFor() ignore errors.
patch 7.4.1519 Problem:    Channel output to file not implemented for MS-Windows. Solution:   Implement it. (Yasuhiro Matsumoto)
patch 7.4.1518 Problem:    Channel with disconnected in/out/err is not supported. Solution:   Implement it for Unix.
patch 7.4.1517 Problem:    Compiler warning with 64bit compiler. Solution:   Add typecast. (Mike Williams)
patch 7.4.1516 Problem:    Cannot change file permissions. Solution:   Add setfperm().
patch 7.4.1515 Problem:    Channel test is a bit flaky. Solution:   Instead of a fixed sleep time wait until an expression evaluates             to true.
patch 7.4.1514 Problem:    Channel output to file not implemented yet. Solution:   Implement it for Unix.
patch 7.4.1513 Problem:    "J" fails if there are not enough lines. (Christian Neukirchen) Solution:   Reduce the count, only fail on the last line.
patch 7.4.1512 Problem:    Channel input from file not supported on MS-Windows. Solution:   Implement it. (Yasuhiro Matsumoto)
patch 7.4.1511 Problem:    Statusline highlighting is sometimes wrong. Solution:   Check for Highlight type. (Christian Brabandt)
Update runtime files.
patch 7.4.1510 Problem:    Channel test fails on AppVeyor. Solution:   Wait longer than 10 msec if needed.
patch 7.4.1509 Problem:    Keeping both a variable for a job and the channel it refers to is             a hassle. Solution:   Allow passing the job where a channel is expected. (Damien)
patch 7.4.1508 Problem:    Can't build GvimExt with MingW. Solution:   Adjust the makefile. (Ben Fritz)
patch 7.4.1507 Problem:    Crash when starting a job fails. Solution:   Check for the channel to be NULL.  (idea by Yasuhiro Matsumoto)
patch 7.4.1506 Problem:    Job cannot read from a file. Solution:   Implement reading from a file for Unix.
patch 7.4.1505 Problem:    When channel log is enabled get too many "looking for messages"             log entries. Solution:   Only give the message after another message.
patch 7.4.1504 Problem:    No test for reading last-but-one line. Solution:   Add a test.
patch 7.4.1503 Problem:    Crash when using ch_getjob(). (Damien) Solution:   Check for a NULL job.
patch 7.4.1501 Problem:    Garbage collection with an option channel is not tested. Solution:   Call garbagecollect() in the test.
patch 7.4.1500 Problem:    Should_free flag set to FALSE. Solution:   Set it to TRUE. (Neovim 4415)
patch 7.4.1499 Problem:    No error message when :packadd does not find anything. Solution:   Add an error message. (Hirohito Higashi)
patch 7.4.1498 Problem:    Error for locked item when using json_decode(). (Shougo) Solution:   Initialize v_lock.
patch 7.4.1497 Problem:    Cursor drawing problem with GTK 3. Solution:   Handle blinking differently. (Kazunobu Kuriyama)
patch 7.4.1496 Problem:    Crash when built with GUI but it's not active. (Dominique Pelle) Solution:   Check gui.in_use.
patch 7.4.1495 Problem:    Compiler warnings when building on Unix with the job feature but             without the channel feature. Solution:   Move #ifdefs. (Dominique Pelle)
patch 7.4.1494 Problem:    clr_history() does not work properly. Solution:   Increment hisptr. Add a test. (Yegappan Lakshmanan)
patch 7.4.1493 Problem:    Wrong callback invoked for zero-id messages. Solution:   Don't use the first one-time callback when the sequence number             doesn't match.
patch 7.4.1492 Problem:    No command line completion for ":packadd". Solution:   Implement completion. (Hirohito Higashi)
Add new test file.
patch 7.4.1491 Problem:    Visual-block shift breaks multi-byte characters. Solution:   Compute column differently. (Yasuhiro Matsumoto) Add a test.
patch 7.4.1490 Problem:    Compiler warning for unused function. Solution:   Add #ifdef. (Dominique Pelle)
patch 7.4.1489 Problem:    "inline" is not supported by old MSVC. Solution:   use "__inline". (Ken Takata)
patch 7.4.1488 Problem:    Not using key when result from hangul_string_convert() is NULL. Solution:   Fall back to not converted string.
Update runtime files.
patch 7.4.1487 Problem:    For WIN32 isinf() is defined as a macro. Solution:   Define it as an inline function. (ZyX)
patch 7.4.1486 Problem:    ":loadplugin" is not optimal, some people find it confusing. Solution:   Only use ":packadd" with an optional "!".
patch 7.4.1485 Problem:    Job input from buffer is not implemented. Solution:   Implement it.  Add "in-top" and "in-bot" options.
patch 7.4.1484 Problem:    Channel "err-io" value "out" is not supported. Solution:   Connect stderr to stdout if wanted.
patch 7.4.1483 Problem:    A one-time callback is not used for a raw channel. Solution:   Use a one-time callback when it exists.
patch 7.4.1482 Problem:    "timeout" option not supported on ch_send*() and ch_eval*(). Solution:   Get and use the timeout option from the argument.
patch 7.4.1481 Problem:    Can't build with small features. Solution:   Add #ifdef.
patch 7.4.1480 Problem:    Cannot add a pack direcory without loading a plugin. Solution:   Add the :packadd command.
patch 7.4.1478 Problem:    ":loadplugin" doesn't take care of ftdetect files. Solution:   Also load ftdetect scripts when appropriate.
patch 7.4.1477 Problem:    Test_reltime is flaky, it depends on timing. Solution:   When it fails run it a second time.
patch 7.4.1476 Problem:    Function arguments marked as unused while they are not. Solution:   Remove UNUSED. (Yegappan Lakshmanan)
patch 7.4.1475 Problem:    When using hangulinput with utf-8 a CSI character is             misintepreted. Solution:   Convert CSI to K_CSI. (SungHyun Nam)
patch 7.4.1474 Problem:    Compiler warnings without the float feature. Solution:   Move #ifdefs. (John Marriott)
patch 7.4.1473 Problem:    Can't build without the autocommand feature. Solution:   Add #ifdefs. (Yegappan Lakshmanan)
patch 7.4.1472 Problem:    Coverity warning for not using return value. Solution:   Add "(void)".
patch 7.4.1471 Problem:    Missing out-of-memory check.  And Coverity warning. Solution:   Bail out when msg is NULL.
patch 7.4.1470 Problem:    Coverity reports missing restore. Solution:   Move json_encode() call up.
patch 7.4.1469 Problem:    Channel test sometimes fails, especially on OS/X. (Kazunobu             Kuriyama) Solution:   Change the && into ||, call getsockopt() in more situations.             (Ozaki Kiichi)
patch 7.4.1468 Problem:    Sort test doesn't test with "1" argument. Solution:   Also test ignore-case sorting. (Yasuhiro Matsumoto)
patch 7.4.1467 Problem:    Can't build without the float feature. Solution:   Add #ifdefs. (Nick Owens, closes #667)
patch 7.4.1466 Problem:    Coverity reports dead code. Solution:   Remove the two lines.
patch 7.4.1465 Problem:    Coverity reported possible use of NULL pointer when using buffer             output with JSON mode. Solution:   Make it actually possible to use JSON mode with a buffer.             Re-encode the JSON to append it to the buffer.
patch 7.4.1464 Problem:    When the argument of sort() is zero or empty it fails. Solution:   Make zero work as documented. (suggested by Yasuhiro Matsumoto)
patch 7.4.1463 Problem:    Configure doesn't find isinf() and isnan() on some systems. Solution:   Use a configure check that includes math.h.
patch 7.4.1462 Problem:    Two more rarily used functions with errors. Solution:   Add proper argument types. (Dominique Pelle)
patch 7.4.1461 Problem:    When starting job on MS-Windows all parts of the command are put             in quotes. Solution:   Only use quotes when needed. (Yasuhiro Matsumoto)
patch 7.4.1459 Problem:    MS-Windows doesn't know socklen_t. Solution:   Use previous method for WIN32.
patch 7.4.1458 Problem:    When a JSON channel has a callback it may never be cleared. Solution:   Do not write "DETACH" into a JS or JSON channel.
patch 7.4.1457 Problem:    Opening a channel with select() is not done properly. Solution:   Also used read-fds. Use getsockopt() to check for errors. (Ozaki             Kiichi)
patch 7.4.1456 Problem:    Test 87 fails with Python 3.5. Solution:   Work around difference. (Taro Muraoka)
patch 7.4.1455 Problem:    JSON decoding test for surrogate pairs is in the wrong place. Solution:   Move the test lines. (Ken Takata)
patch 7.4.1454 Problem:    The exit callback test is flaky. Solution:   Loop to wait for a short time up to a second.
patch 7.4.1453 Problem:    Missing --not-a-term. Solution:   Add the argument.
patch 7.4.1452 Problem:    When a callback adds a syntax item either the redraw doesn't             happen right away or in the GUI the cursor is in the wrong             position for a moment. (Jakson Alves de Aquino) Solution:   Redraw after the callback was invoked.
patch 7.4.1451 Problem:    Vim hangs when a channel has a callback but isn't referenced. Solution:   Have channel_unref() only return TRUE when the channel was             actually freed.
patch 7.4.1450 Problem:    Json encoding still fails when encoding is not utf-8. Solution:   Set 'encoding' before :scriptencoding.  Run the json test             separately to avoid affecting other tests.
patch 7.4.1449 Problem:    Build fails with job feature but without channel feature. Solution:   Add #ifdef.
patch 7.4.1448 Problem:    JSON tests fail if 'encoding' is not utf-8. Solution:   Force encoding to utf-8.
patch 7.4.1447 Problem:    Memory leak when using ch_read(). (Dominique Pelle)             No log message when stopping a job and a few other situations.             Too many "Nothing to read" messages.  Channels are not freed. Solution:   Free the listtv.  Add more log messages. Remove "Nothing to read"             message.  Remove the channel from the job when its refcount             becomes zero.
patch 7.4.1446 Problem:    Crash when using json_decode(). Solution:   Terminate string with a NUL byte.
patch 7.4.1445 Problem:    Memory corruption when 'encoding' is not utf-8. Solution:   Convert decoded string later.
Updated runtime files
patch 7.4.1442 Problem:    MS-Windows: more compilation warnings for destructor. Solution:   Add "virtual". (Ken Takata)
patch 7.4.1441 Problem:    Using empty name instead of no name for channel buffer. Solution:   Remove the empty name.
patch 7.4.1440 Problem:    Can't build on Windows. Solution:   Change #ifdefs.  Only define isnan when used.
patch 7.4.1439 Problem:    Using uninitialzed variable. Solution:   Initialize vc_type.
patch 7.4.1438 Problem:    Can't get buffer number of a channel. Solution:   Add ch_getbufnr().
patch 7.4.1437 Problem:    Old system doesn't have isinf() and NAN. (Ben Fritz) Solution:   Adjust #ifdefs.  Detect isnan() and isinf() functions with             configure. Use a replacement when missing. (Kazunobu Kuriyama)
patch 7.4.1436 Problem:    Sniff files still referenced in distribution. Solution:   Remove sniff files from distribution.
patch 7.4.1435 Problem:    It is confusing that ch_sendexpr() and ch_sendraw() wait for a             response. Solution:   Add ch_evalexpr() and ch_evalraw().
patch 7.4.1434 Problem:    JSON encoding doesn't hanel surrogate pair. Solution:   Improve multi-byte handling of JSON. (Yasuhiro Matsumoto)
patch 7.4.1433 Problem:    The Sniff interface is no longer useful, the tool has not been             available for may years. Solution:   Delete the Sniff interface and related code.
patch 7.4.1431 Problem:    Including header files twice. Solution:   Remove the extra includes.
patch 7.4.1430 Problem:    When encoding JSON, turning NaN and Infinity into null without             giving an error is not useful. Solution:   Pass NaN and Infinity on.  If the receiver can't handle them it             will generate the error.
patch 7.4.1428 Problem:    Compiler warning for non-virtual destructor. Solution:   Make it virtual. (Yasuhiro Matsumoto)
patch 7.4.1427 Problem:    Trailing comma in enums is not ANSI C. Solution:   Remove the trailing commas.
patch 7.4.1426 Problem:    The "out-io" option for jobs is not implemented yet. Solution:   Implement the "buffer" value: append job output to a buffer.
patch 7.4.1425 Problem:    There are still references to MS-DOS support. Solution:   Remove most of the help txt and install instructions. (Ken Takata)
patch 7.4.1424 Problem:    Not using --not-a-term when running tests on MS-Windows. Solution:   Use NO_PLUGIN. (Christian Brabandt)
patch 7.4.1423 Problem:    Channel test fails on MS-Windows. Solution:   Do not give an error message when reading fails, assume the other             end exited.
patch 7.4.1422 Problem:    Error when reading fails uses wrong errno.  Keeping channel open             after job stops results in test failing. Solution:   Move the error up.  Add ch_job_killed.
patch 7.4.1421 Problem:    May free a channel when a callback may need to be invoked. Solution:   Keep the channel when refcount is zero.
patch 7.4.1420 Problem:    Missing makefile. Solution:   Type the path correctly.
patch 7.4.1419 Problem:    Tests slowed down because of the "not a terminal" warning. Solution:   Add the --not-a-term command line argument.
patch 7.4.1418 Problem:    job_stop() on MS-Windows does not really stop the job. Solution:   Make the default to stop the job forcefully. (Ken Takata)             Make MS-Windows and Unix more similar.
patch 7.4.1417 Problem:    Missing appveyor.bat from the distribution. Solution:   Add it to the list of files.
patch 7.4.1416 Problem:    Using "u_char" intead of "char_u", which doesn't work everywhere.             (Jörg Plate) Solution:   Use "char_u" always.
Updated runtime files.
patch 7.4.1415 Problem:    Dropped the skip-tags setting. Solution:   Put it back.
patch 7.4.1414 Problem:    Appveyor only builds one feature set. Solution:   Build a combination of features and GUI/console. (Christian             Brabandt)
patch 7.4.1413 Problem:    When calling ch_close() the close callback is invoked, even though             the docs say it isn't. (Christian J. Robinson) Solution:   Don't call the close callback.
patch 7.4.1411 Problem:    Compiler warning for indent. (Ajit Thakkar) Solution:   Indent normally.
patch 7.4.1410 Problem:    Leaking memory in cscope interface. Solution:   Free memory when no tab is found. (Christian Brabandt)
patch 7.4.1409 Problem:    Configure includes GUI despite --disable-gui flag. Solution:   Add SKIP_GTK3. (Kazunobu Kuriyama)
patch 7.4.1408 Problem:    MS-Windows doesn't have isnan() and isinf(). Solution:   Use _isnan() and _isinf().
patch 7.4.1407 Problem:    json_encode() does not handle NaN and inf properly. (David             Barnett) Solution:   For JSON turn them into "null".  For JS use "NaN" and "Infinity".             Add isnan().
patch 7.4.1406 Problem:    Leaking memory in cs_print_tags_priv(). Solution:   Free tbuf. (idea by Forrest Fleming)
patch 7.4.1405 Problem:    Completion menu flickers. Solution:   Delay showing the popup menu. (Shougo, Justin M. Keyes, closes             #656)
patch 7.4.1404 Problem:    ch_read() doesn't time out on MS-Windows. Solution:   Instead of WM_NETBEANS use select(). (Yukihiro Nakadaira)
patch 7.4.1403 Problem:    Can't build without the quickfix feature. Solution:   Add #ifdefs. Call ex_ni() for unimplemented commands. (Yegappan             Lakshmanan)
patch 7.4.1402 Problem:    GTK 3 is not supported. Solution:   Add GTK 3 support. (Kazunobu Kuriyama)
patch 7.4.1401 Problem:    Having 'autochdir' set during startup and using diff mode doesn't             work. (Axel Bender) Solution:   Don't use 'autochdir' while still starting up. (Christian             Brabandt)
patch 7.4.1400 Problem:    Perl eval doesn't work properly on 64-bit big-endian machine. Solution:   Use 32 bit type for the key. (Danek Duvall)
patch 7.4.1399 Problem:    The MS-DOS code does not build. Solution:   Remove the old MS-DOS code.
patch 7.4.1398 Problem:    The close-cb option is not implemented yet. Solution:   Implemente close-cb. (Yasuhiro Matsumoto)
patch 7.4.1397 Problem:    Sort test fails on MS-Windows. Solution:   Correct the compare function.
patch 7.4.1396 Problem:    Compiler warnings for conversions. Solution:   Add type cast.
patch 7.4.1395 Problem:    Using DETACH in quotes is not compatible with the Netbeans             interface. (Xavier de Gaye) Solution:   Remove the quotes, only use them for JSON and JS mode.
patch 7.4.1394 Problem:    Can't sort inside a sort function. Solution:   Use a struct to store the sort parameters. (Jacob Niehus)
patch 7.4.1393 Problem:    Starting a job hangs in the GUI. (Takuya Fujiwara) Solution:   Don't check if ch_job is NULL when checking for an error.             (Yasuhiro Matsumoto)
patch 7.4.1392 Problem:    Some tests fail for Win32 console version. Solution:   Move the tests to SCRIPTS_MORE2.  Pass VIMRUNTIME. (Christian             Brabandt)
patch 7.4.1391 Problem:    Warning for uninitialzed variable. Solution:   Set it to zero. (Christian Brabandt)
patch 7.4.1390 Problem:    When building with GTK and glib-compile-resources cannot be found             building Vim fails. (Michael Gehring) Solution:   Make GLIB_COMPILE_RESOURCES empty instead of leaving it at "no".             (nuko8, closes #655)
patch 7.4.1389 Problem:    Incomplete function declaration. Solution:   Add "void". (Yasuhiro Matsumoto)
patch 7.4.1388 Problem:    Compiler warning. (Cesar Romani) Solution:   Initialize variable.
patch 7.4.1387 Problem:    Win16 docs still referenced. Solution:   Remove Win16 files from the docs Makefile. (Kenichi Ito)
patch 7.4.1386 Problem:    When the Job exit callback is invoked, the job may be freed too             soon. (Yasuhiro Matsumoto) Solution:   Increase refcount.
patch 7.4.1385 Problem:    Compiler warning for using array. Solution:   Use the right member name. (Yegappan Lakshmanan)
patch 7.4.1384 Problem:    It is not easy to use a set of plugins and their dependencies. Solution:   Add packages, ":loadopt", 'packpath'.
patch 7.4.1383 Problem:    GvimExt only loads the old libintl.dll. Solution:   Also try loading libint-8.dll. (Ken Takata, closes #608)
patch 7.4.1382 Problem:    Can't get the job of a channel. Solution:   Add ch_getjob().
patch 7.4.1381 Problem:    Exit value not available on MS-Windows. Solution:   Set the exit value.
patch 7.4.1380 Problem:    The job exit callback is not implemented. Solution:   Add the "exit-cb" option.
patch 7.4.1379 Problem:    Channel test fails on Win32 console. Solution:   Don't sleep when timeout is zero. Call channel_wait() before             channel_read(). Channels are not polled during ":sleep". (Yukihiro             Nakadaira)
patch 7.4.1378 Problem:    Can't change job settings after it started. Solution:   Add job_setoptions() with the "stoponexit" flag.
patch 7.4.1377 Problem:    Test_connect_waittime() is flaky. Solution:   Ignore the "Connection reset by peer" error.
Update channel.txt
patch 7.4.1376 Problem:    ch_setoptions() cannot set all options. Solution:   Support more options.
patch 7.4.1375 Problem:    Still some Win16 code. Solution:   Remove FEAT_GUI_W16.(Hirohito Higashi)
patch 7.4.1374 Problem:    Channel test hangs on MS-Windows. Solution:   Disable the ch_read() that is supposed to time out.
patch 7.4.1373 Problem:    Calling a Vim function over a channel requires turning the             arguments into a string. Solution:   Add the "call" command. (Damien)  Also merge "expr" and "eval"             into one.
patch 7.4.1372 Problem:    channel read implementation is incomplete. Solution:   Add ch_read() and options for ch_readraw().
patch 7.4.1371 Problem:    X11 GUI callbacks don't specify the part of the channel. Solution:   Pass the fd instead of the channel ID.
patch 7.4.1370 Problem:    The Python test script may keep on running. Solution:   Join the threads. (Yasuhiro Matsumoto)
patch 7.4.1369 Problem:    Channels don't have a queue for stderr. Solution:   Have a queue for each part of the channel.
patch 7.4.1368 Problem:    One more Win16 file remains. Solution:   Delete it.
Updated runtime files.
patch 7.4.1367 Problem:    Compiler warning for unreachable code. Solution:   Remove a "break". (Danek Duvall)
patch 7.4.1365 Problem:    Cannot execute a single test function. Solution:   Add an argument to filter the functions with. (Yasuhiro Matsumoto)
patch 7.4.1364 Problem:    The Win 16 code is not maintained and unused. Solution:   Remove the Win 16 support.
patch 7.4.1363 Problem:    Compiler warnings with tiny build. Solution:   Add #ifdefs.
patch 7.4.1362 Problem:    Using unitinialized value. Solution:   Initialize jo_set.
patch 7.4.1361 Problem:    Channel test fails on Solaris. Solution:   Use the 1 msec waittime for all systems.
patch 7.4.1360 Problem:    Can't remove a callback with ch_setoptions(). Solution:   When passing zero or an empty string remove the callback.
patch 7.4.1359 Problem:    Channel test ch_sendexpr() times out. Solution:   Increase the timeout
patch 7.4.1358 Problem:    Compiler warning when not building with +crypt. Solution:   Add #ifdef. (John Marriott)
patch 7.4.1357 Problem:    Error for returning value from void function. Solution:   Don't do that.
patch 7.4.1356 Problem:    Job and channel options parsing is scattered. Solution:   Move all option value parsing to get_job_options();
patch 7.4.1355 Problem:    Win32 console and GUI handle channels differently. Solution:   Consolidate code between Win32 console and GUI.
patch 7.4.1354 Problem:    MS-Windows: Mismatch between default compile options and what the             code expects. Solution:   Change the default WINVER from 0x0500 to 0x0501. (Ken Takata)
patch 7.4.1353 Problem:    Test_connect_waittime is skipped for MS-Windows. Solution:   Add the test back, it works now.
patch 7.4.1352 Problem:    The test script lists all functions before executing them. Solution:   Only list the function currently being executed.
patch 7.4.1351 Problem:    When the port isn't opened yet when ch_open() is called it may             fail instead of waiting for the specified time. Solution:   Loop when select() succeeds but when connect() failed. Also use             channel logging for jobs.  Add ch_log().
patch 7.4.1350 Problem:    When the test server fails to start Vim hangs. Solution:   Check that there is actually something to read from the tty fd.
patch 7.4.1349 Problem:    And some more MingW compiler warnings. (Cesar Romani) Solution:   Add type casts.
patch 7.4.1348 Problem:    More compiler warnings. (John Marriott) Solution:   Add type casts, remove unused variable.
patch 7.4.1347 Problem:    When there is any error Vim will use a non-zero exit code. Solution:   When using ":silent!" do not set the exit code. (Yasuhiro             Matsumoto)
patch 7.4.1346 Problem:    Compiler warnings in build with -O2. Solution:   Add inintializations.
patch 7.4.1345 Problem:    A few more compiler warnings. (Axel Bender) Solution:   Add type casts.
patch 7.4.1344 Problem:    Can't compile Win32 GUI with tiny features. Solution:   Add #ifdef. (Christian Brabandt)
patch 7.4.1343 Problem:    Can't compile with +job but without +channel. (Andrei Olsen) Solution:   Move get_job_options up and adjust #ifdef.
patch 7.4.1342 Problem:    On Mac OS/X the waittime must be > 0 for connect to work. Solution:   Use select() in a different way. (partly by Kazunobu Kuriyama)             Always use a waittime of 1 or more.
patch 7.4.1341 Problem:    It's difficult to add more arguments to ch_sendraw() and             ch_sendexpr(). Solution:   Make the third option a dictionary.
patch 7.4.1339 Problem:    Warnings when building the GUI with MingW. (Cesar Romani) Solution:   Add type cats. (Yasuhiro Matsumoto)
patch 7.4.1338 Problem:    Another part of the change is missing. Solution:   Type os_unix.c right this time.
patch 7.4.1337 Problem:    Part of the change is missing. Solution:   Add changes to eval.c
patch 7.4.1336 Problem:    Channel NL mode is not supported yet. Solution:   Add NL mode support to channels.
patch 7.4.1335 Problem:    Can't build on MS-Windows with +job but without +channel. (Cesar             Romani) Solution:   Add #ifdefs. (Yasuhiro Matsumoto)
patch 7.4.1334 Problem:    Many compiler warnings with MingW. Solution:   Add type casts. (Yasuhiro Matsumoto)
patch 7.4.1333 Problem:    Channel test fails on non-darwin builds. Solution:   Add the "osx" feature and test for that. (Kazunobu Kuriyama)
patch 7.4.1332 Problem:    Problem using Python3 when compiled with MingW. Solution:   Define PYTHON3_HOME as a wide character string. (Yasuhiro             Matsumoto)
patch 7.4.1331 Problem:    Crash when closing the channel in a callback. (Christian J.             Robinson) Solution:   Take the callback out of the list before invoking it.
patch 7.4.1330 Problem:    fd_read() has an unused argument. Solution:   Remove the timeout. (Yasuhiro Matsumoto)
patch 7.4.1329 Problem:    Crash when using channel that failed to open. Solution:   Check for NULL.  Update messages. (Yukihiro Nakadaira)
patch 7.4.1328 Problem:    Can't compile with +job but without +channel. (John Marriott) Solution:   Add more #ifdefs.
patch 7.4.1327 Problem:    Channel test doesn't work if Python executable is python.exe. Solution:   Find py.exe or python.exe. (Ken Takata)
patch 7.4.1326 Problem:    Build rules are bit too complicated. Solution:   Remove -lwsock32 from Netbeans, it's already added for the channel             feature that it depends on. (Tony Mechelynck)
patch 7.4.1325 Problem:    Channel test fails on difference between Unix and DOS line endings. Solution:   Strip off CR.  Make assert show difference better.
Update runtime files.
patch 7.4.1324 Problem:    Channels with pipes don't work on MS-Windows. Solution:   Add pipe I/O support. (Yasuhiro Matsumoto)
patch 7.4.1323 Problem:    Do not get warnings when building with MingW. Solution:   Remove the -w flag. (Ken Takata)
patch 7.4.1322 Problem:    Crash when unletting the variable that holds the channel in a             callback function.  (Christian Robinson) Solution:   Increase the reference count while invoking the callback.
patch 7.4.1321 Problem:    Compiler complains about missing statement. Solution:   Add an empty statement. (Andrei Olsen)
patch 7.4.1320 Problem:    Building with Cygwin or MingW with channel but without Netbeans             doesn't work. Solution:   Set NETBEANS to "no" when not used.
patch 7.4.1318 Problem:    Channel with pipes doesn't work in GUI. Solution:   Register input handlers for pipes.
patch 7.4.1317 Problem:    MS-Windows: channel test fails. Solution:   Temporarily disable Test_connect_waittime().
patch 7.4.1316 Problem:    Can't build MS-Windows console version. (Tux) Solution:   Add #ifdefs.
patch 7.4.1315 Problem:    Using a channel handle does not allow for freeing it when unused. Solution:   Add the Channel variable type.
patch 7.4.1314 Problem:    Warning for uninitialzed variable. Solution:   Initialize it. (Dominique Pelle)
patch 7.4.1313 Problem:    MS-Windows: Using socket after it was closed causes an exception. Solution:   Don't give an error when handling WM_NETBEANS.  Re-enable tests             for MS-Windows.
patch 7.4.1312 Problem:    sock_T is not defined without the +channel feature. Solution:   Always define it.
patch 7.4.1311 Problem:    sock_T is defined too late. Solution:   Move it up.
patch 7.4.1310 Problem:    Jobs don't open a channel. Solution:   Create pipes and add them to the channel.  Add ch_logfile().             Only Unix for now.
patch 7.4.1309 Problem:    When a test fails not all relevant info is listed. Solution:   Add the errors to the messages.
patch 7.4.1308 Problem:    Typo in test. Solution:   Change endf to endif.
patch 7.4.1307 Problem:    Some channel tests fail on MS-Windows. Solution:   Disable the failing tests temporarily.
patch 7.4.1306 Problem:    Job control doesn't work well on MS-Windows. Solution:   Various fixes. (Ken Takata, Ozaki Kiichi , Yukihiro Nakadaira,             Yasuhiro Matsumoto)
patch 7.4.1305 Problem:    "\%1l^#.*" does not match on a line starting with "#". Solution:   Do not clear the start-of-line flag. (Christian Brabandt)
patch 7.4.1304 Problem:    Function names are difficult to read. Solution:   Rename jsonencode to json_encode, jsondecode to json_decode,             jsencode to js_encode and jsdecode to js_decode.
patch 7.4.1303 Problem:    A Funcref is not accepted as a callback. Solution:   Make a Funcref work. (Damien)
patch 7.4.1302 Problem:    Typo in struct field name. (Ken Takata) Solution:   Rename jf_pi to jv_pi.
patch 7.4.1301 Problem:    Missing options in ch_open(). Solution:   Add s:chopt like in the other calls. (Ozaki Kiichi)
patch 7.4.1300 Problem:    Cannot test CursorMovedI because there is typeahead. Solution:   Add disable_char_avail_for_testing().
patch 7.4.1299 Problem:    When the server sends a message with ID zero the channel handler             is not invoked. (Christian J.  Robinson) Solution:   Recognize zero value for the request ID.  Add a test for invoking             the channel handler.
patch 7.4.1298 Problem:    When the channel test fails in an unexpected way the server keeps             running. Solution:   Use try/catch. (Ozaki Kiichi)
patch 7.4.1297 Problem:    On Mac test_channel leaves python instances running. Solution:   Use a small waittime to make ch_open() work. (Ozaki Kiichi)
patch 7.4.1296 Problem:    Cursor changes column with up motion when the matchparen plugin             saves and restores the cursor position. (Martin Kunev) Solution:   Make sure curswant is updated before invoking the autocommand.
patch 7.4.1295 Problem:    string(job) doesn't work well on MS-Windows. Solution:   Use the process ID. (Yasuhiro Matsumoto)
patch 7.4.1294 Problem:    job_stop() only kills the started process. Solution:   Send the signal to the process group. (Olaf Dabrunz)
patch 7.4.1293 Problem:    Sometimes a channel may hang waiting for a message that was             already discarded. (Ken Takata) Solution:   Store the ID of the message blocking on in the channel.
patch 7.4.1292 Problem:    Some compilers complain about uninitialzed variable, even though             all possible cases are handled. (Dominique Pelle) Solution:   Add a default initialization.
patch 7.4.1291 Problem:    On MS-Windows the channel test server doesn't quit. Solution:   Use return instead of break. (Ken Takata)
Updated runtime files.
patch 7.4.1290 Problem:    Coverity complains about uneccessary check for NULL. Solution:   Remove the check.
patch 7.4.1289 Problem:    Channel test fails on MS-Windows, connect() takes too long. Solution:   Adjust the test for MS-Windows using "waittime".
patch 7.4.1288 Problem:    ch_sendexpr() does not use JS encoding. Solution:   Use the encoding that fits the channel mode.  Refuse using             ch_sendexpr() on a raw channel.
patch 7.4.1287 Problem:    Channel test fails. Solution:   Use reltimefloat().
patch 7.4.1286 Problem:    ch_open() with a timeout doesn't work correctly. Solution:   Change how select() is used.  Don't give an error on timeout.             Add a test for ch_open() failing.
Add missing test file.
patch 7.4.1285 Problem:    Cannot measure elapsed time. Solution:   Add reltimefloat().
patch 7.4.1284 Problem:    Test 49 fails. Solution:   Check for a different error message.
patch 7.4.1282 Problem:    Crash when evaluating the pattern of ":catch" causes an error.             (Dominique Pelle) Solution:   Block error messages at this point.
patch 7.4.1281 Problem:    No test for skipping over code that isn't evaluated. Solution:   Add a test with code that would fail when not skipped.
patch 7.4.1280 Problem:    Missing case value. Solution:   Add VAR_JOB.
patch 7.4.1279 Problem:    jsonencode() is not producing strict JSON. Solution:   Add jsencode() and jsdecode().  Make jsonencode() and jsondecode()             strict.
patch 7.4.1278 Problem:    When jsonencode() fails it still returns something. Solution:   Return an empty string on failure.
patch 7.4.1277 Problem:    Compiler can complain about missing enum value in switch with some             combination of features. Solution:   Remove #ifdefs around case statements.
patch 7.4.1276 Problem:    Warning for not using return value of fcntl(). Solution:   Explicitly ignore the return value.
patch 7.4.1274 Problem:    Cannot run a job. Solution:   Add job_start(), job_status() and job_stop(). Currently only works             for Unix.
patch 7.4.1272 Problem:    Using future enum value. Solution:   Remove it.
patch 7.4.1271 Problem:    assert_false(v:false) reports an error. (Nikolai Pavlov) Solution:   Recognize v:true and v:false. (Closes #625)
patch 7.4.1270 Problem:    Warnings for missing values in switch. Solution:   Change switch to if-else or add values.
patch 7.4.1269 Problem:    Encoding {'key':} to JSON doesn't give an error (Tyru) Solution:   Give an error.
patch 7.4.1268 Problem:    Waittime is used as seconds instead of milliseconds. (Hirohito             Higashi) Solution:   Divide by 1000.
patch 7.4.1267 Problem:    Easy to miss handling all types of variables. Solution:   Change the variable type into an enum.
patch 7.4.1266 Problem:    A BufAdd autocommand may cause an ml_get error (Christian             Brabandt) Solution:   Increment RedrawingDisabled earlier.
patch 7.4.1265 Problem:    Not all channel commands are tested. Solution:   Add a test for "normal", "expr" and "redraw".
patch 7.4.1264 Problem:    Crash when receiving an empty array. Solution:   Check for array with wrong number of arguments. (Damien)
patch 7.4.1263 Problem:    ch_open() hangs when the server isn't running. Solution:   Add a timeout. Use a dict to pass arguments. (Yasuhiro Matsumoto)
patch 7.4.1262 Problem:    The channel callback is not invoked. Solution:   Make a list of pending callbacks.
patch 7.4.1261 Problem:    Pending channel messages are garbage collected. Leaking memory in             ch_sendexpr().  Leaking memory for a decoded JSON string. Solution:   Mark the message list as used. Free the encoded JSON.  Don't save             the JSON string.
patch 7.4.1260 Problem:    The channel feature doesn't work on Win32 GUI. Solution:   Use WSAGetLastError(). (Ken Takata)
patch 7.4.1259 Problem:    No test for what patch 7.3.414 fixed. Solution:   Add a test. (Elias Diem)
patch 7.4.1258 Problem:    The channel test can fail if messages arrive later. Solution:   Add a short sleep. (Jun T.)
Update runtime files.
patch 7.4.1257 Problem:    Channel test fails in some configurations. Solution:   Add check for the +channel feature.
patch 7.4.1256 Problem:    On Mac sys.exit(0) doesn't kill the test server. Solution:   Use self.server.shutdown(). (Jun Takimoto)
patch 7.4.1255 Problem:    Crash for channel "eval" command without third argument. Solution:   Check for missing argument.
patch 7.4.1254 Problem:    Opening a second channel causes a crash. (Ken Takata) Solution:   Don't re-allocate the array with channels.
patch 7.4.1253 Problem:    Python test server not displaying second of two commands.             Solaris doesn't have "pkill --full". Solution:   Also echo the second command. Use "pkill -f".
patch 7.4.1252 Problem:    The channel test server may receive two messages concatenated. Solution:   Split the messages.
patch 7.4.1251 Problem:    New test file missing from distribution. Solution:   Add src/testdir/*.py.
patch 7.4.1250 Problem:    Running tests in shadow directory fails. Solution:   Also link testdir/*.py
patch 7.4.1249 Problem:    Crash when the process a channel is connected to exits. Solution:   Use the file descriptor properly.  Add a test. (Damien)             Also add a test for eval().
patch 7.4.1248 Problem:    Can't reliably stop the channel test server.  Can't start the             server if the python file is not executable. Solution:   Use "pkill" instead of "killall".  Run the python file as an             argument instead of as an executable.
patch 7.4.1247 Problem:    The channel test doesn't run on MS-Windows. Solution:   Make it work on the MS-Windows console. (Ken Takata)
Make the python script executable.
patch 7.4.1246 Problem:    The channel functionality isn't tested. Solution:   Add a test using a Python test server.
patch 7.4.1245 Problem:    File missing from distribution. Solution:   Add json_test.c.
patch 7.4.1244 Problem:    The channel functions don't sort together. Solution:   Use a common "ch_" prefix.
patch 7.4.1243 Problem:    Compiler warning for uninitialized variable. Solution:   Initialize it. (Elias Diem)
patch 7.4.1242 Problem:    json_test fails without the eval feature. Solution:   Add #ifdef.
patch 7.4.1241 Problem:    Missing change in Makefile due to diff mismatch Solution:   Update the list of object files.
patch 7.4.1240 Problem:    Visual studio tools are noisy. Solution:   Suppress startup info. (Mike Williams)
patch 7.4.1239 Problem:    JSON message after the first one is dropped. Solution:   Put remainder of message back in the queue.
patch 7.4.1238 Problem:    Can't handle two messages right after each other. Solution:   Find the end of the JSON.  Read more when incomplete.  Add a C             test for the JSON decoding.
patch 7.4.1237 Problem:    Can't translate message without adding a line break. Solution:   Join the two parts of the message.
patch 7.4.1236 Problem:    When "syntax manual" was used switching between buffers removes             the highlighting. Solution:   Set the syntax option without changing the value. (Anton             Lindqvist)
patch 7.4.1235 Problem:    Missing change to eval.c. Solution:   Include that change.
Updated runtime files and translations.
patch 7.4.1234 Problem:    Demo server only runs with Python 2. Solution:   Make it run with Python 3 as well. (Ken Takata)
patch 7.4.1233 Problem:    Channel command may cause a crash. Solution:   Check for NULL argument. (Damien)
patch 7.4.1232 Problem:    Compiler warnings when the Sniff feature is enabled. Solution:   Add UNUSED.
patch 7.4.1231 Problem:    JSON messages are not parsed properly. Solution:   Queue received messages.
patch 7.4.1230 Problem:    Win32: opening a channel may hang.  Not checking for messages             while waiting for characters. Solution:   Add a zero timeout.  Call parse_queued_messages(). (Yasuhiro             Matsumoto)
patch 7.4.1229 Problem:    "eval" and "expr" channel commands don't work yet. Solution:   Implement them.  Update the error numbers.  Also add "redraw".
patch 7.4.1228 Problem:    copy() and deepcopy() fail with special variables. (Nikolai             Pavlov) Solution:   Make it work.  Add a test.  Closes #614.
patch 7.4.1227 Problem:    Compiler warnings. Solution:   Add UNUSED.  Add type cast. (Yegappan Lakshmanan)
patch 7.4.1226 Problem:    GRESOURCE_HDR is unused. Solution:   Remove it. (Kazunobu Kuriyama)
patch 7.4.1225 Problem:    Still a few old style function declarations. Solution:   Make them new style. (Hirohito Higashi)
patch 7.4.1224 Problem:    Build problems with GTK on BSD. (Mike Williams) Solution:   Don't use "$<". Skip building gui_gtk_gresources.h when it doesn't             work. (Kazunobu Kuriyama)
patch 7.4.1223 Problem:    Crash when setting v:errors to a number. Solution:   Free the typval without assuming its type. (Yasuhiro Matsumoto)
patch 7.4.1222 Problem:    ":normal" command and others missing in tiny build. Solution:   Graduate FEAT_EX_EXTRA.
patch 7.4.1221 Problem:    Including netbeans and channel support in small and tiny builds.             Build fails with some interfaces. Solution:   Only include these features in small build and above.  Let             configure fail if trying to enable an interface that won't build.
patch 7.4.1220 Problem:    Warnings for unused variables in tiny build. (Tony Mechelynck) Solution:   Move declarations inside #ifdef. (Hirohito Higashi)
patch 7.4.1219 Problem:    Build fails with +channel but without +float. Solution:   Add #ifdef.
patch 7.4.1218 Problem:    Missing change in configure.  More changes for function style. Solution:   Avoid the typos.
patch 7.4.1217 Problem:    Execution of command on channel doesn't work yet. Solution:   Implement the "ex" and "normal" commands.
patch 7.4.1216 Problem:    Still using HAVE_STDARG_H. Solution:   Assume it's always defined.
patch 7.4.1215 Problem:    Using old style function declarations. Solution:   Change to new style function declarations. (script by Hirohito             Higashi)
patch 7.4.1214 Problem:    Using old style function declarations. Solution:   Change to new style function declarations. (script by Hirohito             Higashi)
patch 7.4.1213 Problem:    Using old style function declarations. Solution:   Change to new style function declarations. (script by Hirohito             Higashi)
patch 7.4.1211 Problem:    Using old style function declarations. Solution:   Change to new style function declarations. (script by Hirohito             Higashi)
patch 7.4.1210 Problem:    Using old style function declarations. Solution:   Change to new style function declarations. (script by Hirohito             Higashi)
patch 7.4.1208 Problem:    Using old style function declarations. Solution:   Change to new style function declarations. (script by Hirohito             Higashi)
patch 7.4.1207 Problem:    Using old style function declarations. Solution:   Change to new style function declarations. (script by Hirohito             Higashi)
patch 7.4.1206 Problem:    Using old style function declarations. Solution:   Change to new style function declarations. (script by Hirohito             Higashi)
patch 7.4.1205 Problem:    Using old style function declarations. Solution:   Change to new style function declarations. (script by Hirohito             Higashi)
patch 7.4.1204 Problem:    Latin1 characters cause encoding conversion. Solution:   Remove the characters.
patch 7.4.1203 Problem:    Still more files still using __ARGS. Solution:   Remove __ARGS in really the last files.
patch 7.4.1202 Problem:    Still one more file still using __ARGS. Solution:   Remove __ARGS in the last file. (script by Hirohito Higashi)             (closes #612)
patch 7.4.1201 Problem:    One more file still using __ARGS. Solution:   Remove __ARGS in the last file. (script by Hirohito Higashi)
patch 7.4.1200 Problem:    Still using __ARGS. Solution:   Remove __ARGS in several files. (script by Hirohito Higashi)
patch 7.4.1199 Problem:    Still using __ARGS. Solution:   Remove __ARGS in several files. (script by Hirohito Higashi)
patch 7.4.1198 Problem:    Still using __ARGS. Solution:   Remove __ARGS in several files. (script by Hirohito Higashi)             Also remove use of HAVE_STDARG_H.
patch 7.4.1197 Problem:    Still using __ARGS. Solution:   Remove __ARGS in several files. (script by Hirohito Higashi)
patch 7.4.1196 Problem:    Still using __ARGS. Solution:   Remove __ARGS in several files. (script by Hirohito Higashi)
patch 7.4.1195 Problem:    The channel feature does not work in the MS-Windows console. Solution:   Add win32 console support. (Yasuhiro Matsumoto)
patch 7.4.1194 Problem:    Compiler warning for not using return value of fwrite(). Solution:   Return OK/FAIL. (Charles Campbell)
patch 7.4.1193 Problem:    Can't build the channel feature on MS-Windows. Solution:   Add #ifdef HAVE_POLL.
patch 7.4.1192 Problem:    Can't build with FEAT_EVAL but without FEAT_MBYTE. (John             Marriott) Solution:   Add #ifdef for FEAT_MBYTE.
Update runtime files.
patch 7.4.1191 Problem:    The channel feature isn't working yet. Solution:   Add the connect(), disconnect(), sendexpr() and sendraw()             functions.  Add initial documentation.  Add a demo server.
patch 7.4.1190 Problem:    On OSX the default flag for dlopen() is different. Solution:   Add RTLD_LOCAL in the configure check. (sv99, closes #604)
patch 7.4.1189 Problem:    Using another language on MS-Windows does not work. (Yongwei Wu) Solution:   Undo the change to try loading libintl-8.dll first.
patch 7.4.1188 Problem:    Using older JSON standard. Solution:   Update the link.  Adjust the text a bit.
patch 7.4.1187 Problem:    MS-Windows channel code only supports one channel.  Doesn't build             without netbeans support. Solution:   Get the channel index from the socket in the message. Closes #600.
patch 7.4.1186 Problem:    Error messages for security context are hard to translate. Solution:   Use one string with %s. (Ken Takata)
patch 7.4.1185 Problem:    Can't build with TCL on some systems. Solution:   Rename the channel_ functions.
patch 7.4.1184 Problem:    MS-Windows build is still broken. Solution:   Change nbsock to ch_fd.
patch 7.4.1183 Problem:    MS-Windows build is broken. Solution:   Remove init in wrong place.
patch 7.4.1182 Problem:    Still socket code intertwined with netbeans. Solution:   Move code from netbeans.c to channel.c
patch 7.4.1181 Problem:    free_tv() can't handle special variables. (Damien) Solution:   Add the variable type.
add missing test file
patch 7.4.1180 Problem:    Crash with invalid argument to glob2regpat(). Solution:   Check for NULL. (Justin M. Keyes, closes #596)  Add a test.
patch 7.4.1179 Problem:    test_writefile and test_viml do not delete the tempfile. Solution:   Delete the tempfile. (Charles Cooper)  Add DeleteTheScript().
patch 7.4.1178 Problem:    empty() doesn't work for the new special variables. Solution:   Make empty() work. (Damien)
patch 7.4.1177 Problem:    The +channel feature is not in :version output. (Tony Mechelynck) Solution:   Add the feature string.
patch 7.4.1176 Problem:    Missing change to proto file. Solution:   Update the proto file. (Charles Cooper)
patch 7.4.1175 Problem:    Can't build with Mingw and Cygwin. Solution:   Remove extra "endif". (Christian J. Robinson)
patch 7.4.1174 Problem:    Netbeans contains dead code insde #ifdef. Solution:   Remove the dead code.
patch 7.4.1173 Problem:    No test for new behavior of v:true et al. Solution:   Add a test.
patch 7.4.1172 Problem:    Configure is overly positive. Solution:   Insert "test".
patch 7.4.1171 Problem:    Makefile dependencies are outdated. Solution:   Run "make depend". Add GTK resource dependencies.
patch 7.4.1170 Problem:    Missing changes in src/Makefile, Filelist. Solution:   Add the missing changes.
patch 7.4.1169 Problem:    The socket I/O is intertwined with the netbeans code. Solution:   Start refactoring the netbeans communication to split off the             socket I/O.  Add the +channel feature.
Update a few runtime files.
patch 7.4.1168 Problem:    This doesn't give the right result: eval(string(v:true)). (Nikolay             Pavlov) Solution:   Make the string "v:true" instead of "true".
patch 7.4.1167 Problem:    No tests for "is" and "isnot" with the new variables. Solution:   Add tests.
patch 7.4.1166 Problem:    Can't encode a Funcref into JSON.  jsonencode() doesn't handle the             same list or dict twice properly.  (Nikolay Pavlov) Solution:   Give an error.  Reset copyID when the list or dict is finished.
patch 7.4.1165 Problem:    When defining DYNAMIC_ICONV_DLL in the makefile, the build fails. Solution:   Add #ifdef's. (Taro Muraoka)  Try the newer version first.
patch 7.4.1164 Problem:    No tests for comparing special variables.  Error in jsondecode()             not reported.  test_json does not work Japanse system. Solution:   Set scriptencoding. (Ken Takata) Add a few more tests. Add error.
patch 7.4.1163 Problem:    Expressions "0 + v:true" and "'' . v:true" cause an error. Solution:   Return something sensible when using a special variable as a             number or as a string. (suggested by Damien)
patch 7.4.1162 Problem:    Missing error number in MzScheme. (Dominique Pelle) Solution:   Add a proper error number.
patch 7.4.1161 Problem:    ":argadd" without argument is supposed to add the current buffer             name to the arglist. Solution:   Make it work as documented. (Coot, closes #577)
patch 7.4.1160 Problem:    No error for jsondecode('"'). Solution:   Give an error message for missing double quote.
patch 7.4.1159 Problem:    Automatically generated function prototypes use __ARGS. Solution:   Remove __ARGS from osdef.sh.
patch 7.4.1158 Problem:    Still using __ARGS(). Solution:   Remove __ARGS() from eval.c
patch 7.4.1157 Problem:    type() does not work for v:true, v:none, etc. Solution:   Add new type numbers.
patch 7.4.1156 Problem:    Coverity warns for NULL pointer and ignoring return value. Solution:   Check for NULL pointer. When dict_add() returns FAIL free the item.
patch 7.4.1155 Problem:    Build with normal features fails. Solution:   Always deinfe dict_lookup().
patch 7.4.1154 Problem:    No support for JSON. Solution:   Add jsonencode() and jsondecode().  Also add v:false, v:true,             v:null and v:none.
patch 7.4.1153 Problem:    Autocommands triggered by quickfix cannot always get the current             title value. Solution:   Call qf_fill_buffer() later. (Christian Brabandt)
patch 7.4.1152 Problem:    Langmap test fails with normal build. Solution:   Check for +langmap feature.
Update runtime files
patch 7.4.1151 Problem:    Missing change to eval.c Solution:   Also change feedkeys().
patch 7.4.1150 Problem:    'langmap' applies to the first character typed in Select mode.             (David Watson) Solution:   Check for SELECTMODE. (Christian Brabandt, closes #572)             Add the 'x' flag to feedkeys().
patch 7.4.1149 Problem:    Using the local value of 'errorformat' causes more problems than             it solves. Solution:   Revert 7.4.1013.
patch 7.4.1148 Problem:    Default for MingW and Cygwin is still "normal". Solution:   Use "huge" as default. (Ken Takata)
patch 7.4.1147 Problem:    Conflict for "chartab". (Kazunobu Kuriyama) Solution:   Rename the global one to something less obvious.  Move it into             src/chartab.c.
patch 7.4.1146 Problem:    Can't build with Python 3 interface using MingW. Solution:   Update the Makefile. (Yasuhiro Matsumoto, Ken Takata)
patch 7.4.1145 Problem:    Default features are conservative. Solution:   Make the default feature set for most of todays systems "huge".
patch 7.4.1144 Problem:    Can't build on several systems. Solution:   Include float.h. (Christian Robinson, closes #570 #571)
patch 7.4.1143 Problem:    Can't sort on floating point numbers. Solution:   Add the "f" flag to ":sort".  (Alex Jakushev)  Also add the "f"             flag to sort().
patch 7.4.1142 Problem:    Cannot define keyword characters for a syntax file. Solution:   Add the ":syn iskeyword" command. (Christian Brabandt)
patch 7.4.1141 Problem:    Using searchpair() with a skip expression that uses syntax             highlighting sometimes doesn't work. (David Fishburn) Solution:   Reset next_match_idx. (Christian Brabandt)
patch 7.4.1140 Problem:    Recognizing <sid> does not work when the language is Turkish.             (Christian Brabandt) Solution:   Use MB_STNICMP() instead of STNICMP().
patch 7.4.1139 Problem:    MS-Windows: getftype() returns "file for symlink to directory. Solution:   Make it return "dir". (Ken Takata)
patch 7.4.1138 Problem:    When running gvim in the foreground some icons are missing.             (Taylor Venable) Solution:   Move the call to gui_gtk_register_resource(). (Kazunobu Kuriyama)
patch 7.4.1137 Problem:    Illegal memory access when using :copen and :cclose. Solution:   Avoid that curbuf is invalid. (suggestion by Justin M. Keyes)             Add a test.
patch 7.4.1136 Problem:    Wrong argument to assert_exception() causes a crash. (reported by             Coverity) Solution:   Check for NULL pointer.  Add a test.
patch 7.4.1135 Problem:    One more arglist test fails on MS-Windows. Solution:   Don't edit "Y" after editing "y".
patch 7.4.1134 Problem:    The arglist test fails on MS-Windows. Solution:   Only check for failure of argedit on Unix.
patch 7.4.1133 Problem:    Generated function prototypes still have __ARGS(). Solution:   Generate function prototypes without __ARGS().
patch 7.4.1132 Problem:    Old style tests for the argument list. Solution:   Add more new style tests. (Yegappan Lakshmanan)
patch 7.4.1130 Problem:    Memory leak in :vimgrep. Solution:   Call FreeWild(). (Yegappan Lakshmanan)
patch 7.4.1129 Problem:    Python None value can't be converted to a Vim value. Solution:   Just use zero. (Damien)
Update help files.
patch 7.4.1128 Problem:    MS-Windows: delete() does not recognize junctions. Solution:   Add mch_isrealdir() for MS-Windows. Update mch_is_symbolic_link().             (Ken Takata)
patch 7.4.1126 Problem:    Can only get the directory of the current window. Solution:   Add window and tab arguments to getcwd() and haslocaldir().             (Thinca, Hirohito Higashi)
patch 7.4.1125 Problem:    There is no perleval(). Solution:   Add perleval(). (Damien)
patch 7.4.1124 Problem:    MS-Windows: dead key behavior is not ideal. Solution:   Handle dead keys differently when not in Insert or Select mode.             (John Wellesz, closes #399)
patch 7.4.1123 Problem:    Using ":argadd" when there are no arguments results in the second             argument to be the current one. (Yegappan Lakshmanan) Solution:   Correct the w_arg_idx value.
patch 7.4.1122 Problem:    Test 92 and 93 fail when using gvim on a system with a non utf-8             locale. Solution:   Avoid using .gvimrc by adding -U NONE. (Yukihiro Nakadaira)
patch 7.4.1121 Problem:    test_expand leaves files behind. Solution:   Edit another file before deleting, otherwise the swap file             remains.
patch 7.4.1120 Problem:    delete(x, 'rf') fails if a directory is empty. (Lcd) Solution:   Ignore not finding matches in an empty directory.
patch 7.4.1119 Problem:    argidx() has a wrong value after ":%argdelete". (Yegappan             Lakshmanan) Solution:   Correct the value of w_arg_idx.  Add a test.
patch 7.4.1118 Problem:    Tests hang in 24 line terminal. Solution:   Set the 'more' option off.
patch 7.4.1117 Problem:    No longer get "." and ".." in directory list. Solution:   Do not skip "." and ".." unless EW_DODOT is set.
patch 7.4.1116 Problem:    delete(x, 'rf') does not delete files starting with a dot. Solution:   Also delete files starting with a dot.
patch 7.4.1115 Problem:    MS-Windows: make clean in testdir doesn't clean everything. Solution:   Add command to delete X* directories. (Ken Takata)
patch 7.4.1114 Problem:    delete() does not work well with symbolic links. Solution:   Recognize symbolik links.
patch 7.4.1112 Problem:    When using ":next" with an illegal file name no error is reported. Solution:   Give an error message.
patch 7.4.1111 Problem:    test_expand fails on MS-Windows. Solution:   Always use forward slashes.  Remove references to test27.
patch 7.4.1110 Problem:    Test 108 fails when language is French. Solution:   Force English messages. (Dominique Pelle)
patch 7.4.1109 Problem:    MS-Windows doesn't have rmdir(). Solution:   Add mch_rmdir().
patch 7.4.1108 Problem:    Expanding "~" halfway a file name. Solution:   Handle the file name as one name. (Marco Hinz)  Add a test.             Closes #564.
patch 7.4.1107 Problem:    Vim can create a directory but not delete it. Solution:   Add an argument to delete() to make it possible to delete a             directory, also recursively.
patch 7.4.1106 Problem:    The nsis script can't be used from the appveyor build. Solution:   Add "ifndef" to allow for variables to be set from the command             line. Remove duplicate SetCompressor command. Support using other             gettext binaries. (Ken Takata)  Update build instructions to use             libintl-8.dll.
patch 7.4.1105 Problem:    When using slices there is a mixup of variable name and namespace. Solution:   Recognize variables that can't be a namespace. (Hirohito Higashi)
patch 7.4.1104 Problem:    Various problems building with MzScheme/Racket. Solution:   Make it work with new versions of Racket. (Yukihiro Nakadaira, Ken             Takata)
patch 7.4.1103 Problem:    Removed file still in distribution. Solution:   Remove Make_cyg.mak from the list of files.
patch 7.4.1102 Problem:    Debugger has no stack backtrace support. Solution:   Add "backtrace", "frame", "up" and "down" commands. (Alberto             Fanjul, closes #433)
patch 7.4.1101 Problem:    With 'rightleft' and concealing the cursor may move to the wrong             position. Solution:   Compute the column differently when 'rightleft' is set. (Hirohito             Higashi)
patch 7.4.1100 Problem:    Cygwin makefiles are unused. Solution:   Remove them.
patch 7.4.1099 Problem:    It's not easy to know if Vim supports blowfish. (Smu Johnson) Solution:   Add has('crypt-blowfish') and has('crypt-blowfish2').
patch 7.4.1098 Problem:    Still using old style C function declarations. Solution:   Always define __ARGS() to include types.  Turn a few functions             into ANSI style to find out if this causes problems for anyone.
Update runtime files
patch 7.4.1096 Problem:    Need several lines to verify a command produces an error. Solution:   Add assert_fails(). (suggested by Nikolay Pavlov)             Make the quickfix alloc test actually work.
patch 7.4.1095 Problem:    Can't build GvimExt with SDK 7.1. Solution:   Support using setenv.bat instead of vcvars32.bat. (Ken Takata)
Add missing test file.
patch 7.4.1094 Problem:    Test for :hardcopy fails on MS-Windows. Solution:   Check for the +postscript feature.
patch 7.4.1092 Problem:    It is not simple to test for an exception and give a proper error             message. Solution:   Add assert_exception().
patch 7.4.1091 Problem:    When making a change while need_wait_return is set there is a two             second delay. Solution:   Do not assume the ATTENTION prompt was given when need_wait_return             was set already.
patch 7.4.1090 Problem:    No tests for :hardcopy and related options. Solution:   Add test_hardcopy.
patch 7.4.1089 Problem:    Repeating CTRL-A doesn't work. Solution:   Call prep_redo_cmd(). (Hirohito Higashi)
patch 7.4.1088 Problem:    Coverity warns for uninitialized variables.  Only one is an actual             problem. Solution:   Move the conditions.  Don't use endpos if handling an error.
patch 7.4.1087 Problem:    CTRL-A and CTRL-X do not work properly with blockwise visual             selection if there is a mix of Tab and spaces. Solution:   Add OP_NR_ADD and OP_NR_SUB. (Hirohito Higashi)
patch 7.4.1086 Problem:    Crash with an extremely long buffer name. Solution:   Limit the return value of vim_snprintf(). (Dominique Pelle)
patch 7.4.1085 Problem:    The CTRL-A and CTRL-X commands do not update the '[ and '] marks. Solution:   (Yukihiro Nakadaira)
patch 7.4.1084 Problem:    Using "." to repeat CTRL-A in Visual mode increments the wrong             numbers. Solution:   Append right size to the redo buffer. (Ozaki Kiichi)
patch 7.4.1083 Problem:    Building GvimExt with VS2015 may fail. Solution:   Adjust the makefile. (Mike Williams)
patch 7.4.1082 Problem:    The Tcl interface is always skipping memory free on exit. Solution:   Only skip for dynamically loaded Tcl.
patch 7.4.1081 Problem:    No test for what previously caused a crash. Solution:   Add test for unletting errmsg.
patch 7.4.1080 Problem:    VS2015 has a function HandleToLong() that is shadowed by the macro             that Vim defines. Solution:   Do not define HandleToLong() for MSVC version 1400 and later.             (Mike Williams)
patch 7.4.1079 Problem:    New include file missing from distribution.  Missing changes to             quickfix code. Solution:   Add alloc.h to the list of distributed files. Use the enum in             quickfix code.
Updated runtime files.
patch 7.4.1078 Problem:    MSVC: "make clean" doesn't cleanup in the tee directory. Solution:   Add the commands to cleanup tee. (Erich Ritz)
patch 7.4.1077 Problem:    The build instructions for MS-Windows are incomplete. Solution:   Add explanations for how to build with various interfaces. (Ken             Takata)
patch 7.4.1076 Problem:    CTRL-A does not work well in right-left mode. Solution:   Remove reversing the line, add a test. (Hirohito Higashi)
patch 7.4.1074 Problem:    Warning from VX2015 compiler. Solution:   Add a type cast. (Mike Williams)
patch 7.4.1073 Problem:    Alloc_id depends on numbers, may use the same one twice.  It's not             clear from the number what it's for. Solution:   Use an enum.  Add a function to lookup the enum value from the             name.
add missing test file
patch 7.4.1072 Problem:    Increment test is old style. Solution:   Make the increment test a new style test. (Hirohito Higashi)
patch 7.4.1070 Problem:    The Tcl interface can't be loaded dynamically on Unix. Solution:   Make it possible to load it dynamically. (Ken Takata)
patch 7.4.1069 Problem:    Compiler warning for unused argument. Solution:   Add UNUSED.
patch 7.4.1068 Problem:    Wrong way to check for unletting internal variables. Solution:   Use a better way. (Olaf Dabrunz)
patch 7.4.1067 Problem:    Can't build with MingW and Python on MS-Windows. Solution:   Move the build flags to CFLAGS.
patch 7.4.1066 Problem:    Build fails on MS-Windows. Solution:   Adjust the #ifdefs for "dll" options.
patch 7.4.1065 Problem:    Cannot use the "dll" options on MS-Windows. Solution:   Support the options on all platforms.  Use the built-in name as             the default, so that it's clear what Vim is looking for.
patch 7.4.1064 Problem:    When a spell file has single letter compounding creating             suggestions takes an awful long time. Solution:   Add th eNOCOMPOUNDSUGS flag.
Update to newer English spell files,
patch 7.4.1063 Problem:    TCL_VER_LONG and DYNAMIC_TCL_VER are not set when building with             Cygwin and MingW. Solution:   Add TCL_VER_LONG and DYNAMIC_TCL_VER to the makefile.
patch 7.4.1062 Problem:    Building with Ruby on MS-Windows requires a lot of arguments. Solution:   Make it simpler. (Ken Takata)
patch 7.4.1061 Problem:    Compiler warning for ignoring return value of fwrite(). Solution:   Do use the return value. (idea: Charles Campbell)
patch 7.4.1060 Problem:    Instructions for writing tests are outdated. Solution:   Mention Make_all.mak.  Add steps for new style tests.
patch 7.4.1059 Problem:    Code will never be executed. Solution:   Remove the code.
patch 7.4.1058 Problem:    It is not possible to test code that is only reached when memory             allocation fails. Solution:   Add the alloc_fail() function.  Try it out with :vimgrep.
patch 7.4.1056 Problem:    Don't know why finding spell suggestions is slow. Solution:   Add some code to gather profiling information.
Revert English spell file update
patch 7.4.1055 Problem:    Running "make newtests" in src/testdir has no output. Solution:   List the messages file when a test fails. (Christian Brabandt)             Update the list of tests.
patch 7.4.1054 Problem:    Illegal memory access. Solution:   Check for missing pattern. (Dominique Pelle)
patch 7.4.1053 Problem:    Insufficient testing for quickfix commands. Solution:   Add a new style quickfix test. (Yegappan Lakshmanan)
patch 7.4.1052 Problem:    Illegal memory access with weird syntax command. (Dominique Pelle) Solution:   Check for column past end of line.
patch 7.4.1051 Problem:    Segfault when unletting "count". Solution:   Check for readonly and locked first. (Dominique Pelle)             Add a test.
patch 7.4.1050 Problem:    Warning for unused var with tiny features. (Tony Mechelynck) Solution:   Add #ifdef.  Use vim_snprintf().  Reduce number of statemements.
patch 7.4.1049 Problem:    Wordcount test still still fails on MS-Windows. Solution:   Set 'fileformats' to "unix".
patch 7.4.1048 Problem:    Wordcount test still fail on MS-Windows. Solution:   Set 'fileformat' to "unix".
patch 7.4.1047 Problem:    Tests fail on MS-Windows. Solution:   Set 'selection' to inclusive.
patch 7.4.1046 Problem:    No test coverage for menus. Solution:   Load the standard menus and check there is no error.
patch 7.4.1045 Problem:    Having shadow and coverage on the same build results in the source             files not being available in the coverage view. Solution:   Move using shadow to the normal build.
patch 7.4.1044 Problem:    Can't build without the +eval feature. Solution:   Add #ifdef.
patch 7.4.1043 Problem:    Another small thing. Solution:   Now really update the Mac install text.
patch 7.4.1042 Problem:    g-CTRL-G shows the word count, but there is no way to get the word             count in a script. Solution:   Add the wordcount() function. (Christian Brabandt)
Updated runtime files.
patch 7.4.1040 Problem:    The tee command is not available on MS-Windows. Solution:   Adjust tee.c for MSVC and add a makefile. (Yasuhiro Matsumoto)
patch 7.4.1039 Problem:    Test 31 fails with small build. Solution:   Bail out for small build. (Hirohito Higashi)
patch 7.4.1038 Problem:    Still get a warning for a deprecated function with gdk-pixbuf             2.31. Solution:   Change minimum minor version from 32 to 31.
patch 7.4.1037 Problem:    Using "q!" when there is a modified hidden buffer does not unload             the current buffer, resulting in the need to abandon it again. Solution:   When using "q!" unload the current buffer when needed. (Yasuhiro             Matsumoto, Hirohito Higashi)
patch 7.4.1036 Problem:    Only terminals with up to 256 colors work properly. Solution:   Use the 256 color behavior for all terminals with 256 or more             colors. (Robert de Bath, closes #504)
patch 7.4.1035 Problem:    An Ex range gets adjusted for folded lines even when the range is             not using line numbers. Solution:   Only adjust line numbers for folding. (Christian Brabandt)
Add new file left out from patch 7.4.1034.
patch 7.4.1034 Problem:    There is no test for the 'backspace' option behavior. Solution:   Add a test. (Hirohito Higashi)
patch 7.4.1033 Problem:    Memory use on MS-Windows is very conservative. Solution:   Use the global memory status to estimate amount of memory.             (Mike Williams)
patch 7.4.1032 Problem:    message from assert_false() does not look nice. Solution:   Handle missing sourcing_name. Use right number of spaces. (Watiko)             Don't use line number if it's zero.
patch 7.4.1031 Problem:    Can't build with Python interface using MingW. Solution:   Update the Makefile. (Yasuhiro Matsumoto)
patch 7.4.1030 Problem:    test49 is still slow. Solution:   Move more tests from old to new style.
patch 7.4.1029 Problem:    test_increment fails on systems with 32 bit long. Solution:   Only test with 32 bits.
patch 7.4.1028 Problem:    Nsis version file missing from the distribution. Solution:   Add the file to the list.
Update ignored files.  Delete file that should have been deleted by patch 7.4.1016.
patch 7.4.1027 Problem:    No support for binary numbers. Solution:   Add "bin" to nrformats. (Jason Schulz)
patch 7.4.1026 Problem:    When using MingW the tests do not clean up all files.  E.g. test             17 leaves Xdir1 behind. (Michael Soyka) Solution:   Also delete directories, like Make_dos.mak.  Delete files after             directories to reduce warnings.
patch 7.4.1025 Problem:    Version in installer needs to be updated manually. Solution:   Generate a file with the version number. (Guopeng Wen)
patch 7.4.1024 Problem:    Interfaces for MS-Windows are outdated. Solution:   Use Python 2.7.10, Python 3.4.4, Perl 5.22, TCL 8.6.
patch 7.4.1023 Problem:    The distribution files for MS-Windows use CR-LF, which is             inconsistent with what one gets from github. Solution:   Use LF in the distribution files.
patch 7.4.1022 Problem:    The README file contains some outdated information. Solution:   Update the information about supported systems.
patch 7.4.1021 Problem:    Some makefiles are outdated. Solution:   Add a note to warn developers.
patch 7.4.1020 Problem:    On MS-Windows there is no target to run tests with gvim. Solution:   Add the testgvim target.
Update gitignore for files created when running tests.
patch 7.4.1019 Problem:    Directory listing of "src" is too long. Solution:   Rename the resources file to make it shorter.
patch 7.4.1018 Problem:    Failure running tests. Solution:   Add missing change to list of old style tests.
patch 7.4.1017 Problem:    When there is a backslash in an option ":set -=" doesn't work. Solution:   Handle a backslash better. (Jacob Niehus)  Add a new test, merge             in old test.
patch 7.4.1016 Problem:    Still a few OS/2 pieces remain. Solution:   Delete more.
patch 7.4.1015 Problem:    The column is not restored properly when the matchparen plugin is             used in Insert mode and the cursor is after the end of the line. Solution:   Set the curswant flag. (Christian Brabandt).  Also fix             highlighting the match of the character before the cursor.
patch 7.4.1014 Problem:    fnamemodify('.', ':.') returns an empty string in Cygwin. Solution:   Use CCP_RELATIVE in the call to cygwin_conv_path. (Jacob Niehus,             closes #505)
patch 7.4.1013 Problem:    The local value of 'errorformat' is not used for ":lexpr" and             ":cexpr". Solution:   Use the local value if it exists. (Christian Brabandt) Adjust the             help for this.
patch 7.4.1012 Problem:    Vim overwrites the value of $PYTHONHOME. Solution:   Do not set $PYTHONHOME if it is already set. (Kazuki Sakamoto,             closes #500)
patch 7.4.1011 Problem:    Can't build with Strawberry Perl. Solution:   Include stdbool.h. (Ken Takata, closes #328)
patch 7.4.1010 Problem:    Some developers are unhappy while running tests. Solution:   Add a test and some color.
patch 7.4.1009 Problem:    There are still #ifdefs for ARCHIE. Solution:   Remove references to ARCHIE, the code was removed in Vim 5.
patch 7.4.1008 Problem:    The OS/2 code pollutes the source while nobody uses it these days. Solution:   Drop the support for OS/2.
patch 7.4.1007 Problem:    When a symbolic link points to a file in the root directory, the             swapfile is not correct. Solution:   Do not try getting the full name of a file in the root directory.             (Milly, closes #501)
patch 7.4.1006 Problem:    The fix in patch 7.3.192 is not tested. Solution:   Add a test, one for each regexp engine. (Elias Diem)
patch 7.4.1005 Problem:    Vim users are not always happy. Solution:   Make them happy.
Update English spell files.
patch 7.4.1004 Problem:    Using Makefile when auto/config.mk does not exists results in             warnings. Solution:   Use default values for essential variables.
patch 7.4.1003 Problem:    Travis could check a few more things. Solution:   Run autoconf on one of the builds. (James McCoy, closes #510)             Also build with normal features.
patch 7.4.1002 Problem:    Cannot run an individual test on MS-Windows. Solution:   Move the rule to run test1 downwards. (Ken Takata)
patch 7.4.1001 Problem:    test_viml isn't run. Solution:   Include change in makefile.
patch 7.4.1000 Problem:    Test 49 is slow and doesn't work on MS-Windows. Solution:   Start moving parts of test 49 to test_viml.
patch 7.4.999 Problem:    "make shadow" creates a broken link. (Tony Mechelynck) Solution:   Remove vimrc.unix from the list.
patch 7.4.998 Problem:    Running tests in shadow directory fails.  Test 49 fails. Solution:   Link more files for the shadow directory. Make test 49 end up in             the right buffer.
patch 7.4.997 Problem:    "make shadow" was sometimes broken. Solution:   Add a test for it. (James McCoy, closes #520)
Updated runtime files.
patch 7.4.996 Problem:    New GDK files and testdir/Make_all.mak missing from distribution.             PC build instructions are outdated. Solution:   Add the file to the list.  Update PC build instructions.
patch 7.4.995 Problem:    gdk_pixbuf_new_from_inline() is deprecated. Solution:   Generate auto/gui_gtk_gresources.c. (Kazunobu Kazunobu,             closes #507)
patch 7.4.994 Problem:    New style tests are not run on MS-Windows. Solution:   Add the new style tests.
patch 7.4.993 Problem:    Test 87 is flaky on AppVeyor. Solution:   Reduce the minimum background thread count.
patch 7.4.992 Problem:    Makefiles for MS-Windows in src/po are outdated. Solution:   Make them work. (Ken Takata, Taro Muraoka)
patch 7.4.991 Problem:    When running new style tests the output is not visible. Solution:   Add the testdir/messages file and show it.  Update the list of             test names.
patch 7.4.990 Problem:    Test 86 fails on AppVeyor. Solution:   Do some registry magic. (Ken Takata)
patch 7.4.989 Problem:    Leaking memory when hash_add() fails. Coverity error 99126. Solution:   When hash_add() fails free the memory.
patch 7.4.988 Problem:    Default test target is test49.out. Solution:   Add a build rule before including Make_all.mak.
patch 7.4.987 Problem:    Can't build with Ruby 1.9.2. Solution:   Require Rub 2.0 for defining USE_TYPEDDATA.
patch 7.4.986 Problem:    Test49 doesn't work on MS-Windows.  test70 is listed twice. Solution:   Move test49 to the group not used on Amiga and MS-Windows.             Remove test70 from SCRIPTS_WIN32.
patch 7.4.985 Problem:    Can't build with Ruby 2.3.0. Solution:   Use the new TypedData_XXX macro family instead of Data_XXX. Use             TypedData. (Ken Takata)
patch 7.4.984 Problem:    searchpos() always starts searching in the first column, which is             not what some people expect. (Brett Stahlman) Solution:   Add the 'z' flag: start at the specified column.
patch 7.4.983 Problem:    Executing one test after "make testclean" doesn't work. Solution:   Add a dependency on test1.out.
patch 7.4.982 Problem:    Keeping the list of tests updated is a hassle. Solution:   Move the list to a separate file, so that it only needs to be             udpated in one place.
patch 7.4.981 Problem:    An error in a test script goes unnoticed. Solution:   Source the test script inside try/catch. (Hirohito Higashi)
patch 7.4.980 Problem:    Tests for :cdo, :ldo, etc. are outdated. Solution:   Add new style tests for these commands. (Yegappan Lakshmanan)
patch 7.4.979 Problem:    When changing the crypt key the blocks read from disk are not             decrypted. Solution:   Also call ml_decrypt_data() when mf_old_key is set. (Ken Takata)
patch 7.4.978 Problem:    test_cdo fails when using another language than English. Solution:   Set the language to C. (Dominique Pelle)
patch 7.4.977 Problem:    'linebreak' does not work properly when using "space" in             'listchars'. Solution:   (Hirohito Higashi, Christian Brabandt)
patch 7.4.976 Problem:    When compiling Vim for MSYS2 (linked with msys-2.0.dll), the Win32             clipboard is not enabled. Solution:   Recognize MSYS like CYGWIN. (Ken Takata)
patch 7.4.975 Problem:    Using ":sort" on a very big file sometimes causes text to be             corrupted. (John Beckett) Solution:   Copy the line into a buffer before calling ml_append().
patch 7.4.974 Problem:    When using :diffsplit the cursor jumps to the first line. Solution:   Put the cursor on the line related to where the cursor was before             the split.
patch 7.4.973 Problem:    When pasting on the command line line breaks result in literal             <CR> characters. This makes pasting a long file name difficult. Solution:   Skip the characters.
patch 7.4.972 Problem:    Memory leak when there is an error in setting an option. Solution:   Free the saved value (Christian Brabandt)
patch 7.4.971 Problem:    The asin() function can't be used. Solution:   Sort the function table properly. (Watiko)
patch 7.4.970 Problem:    Rare crash in getvcol(). (Timo Mihaljov) Solution:   Check for the buffer being NULL in init_preedit_start_col.             (Hirohito Higashi, Christian Brabandt)
patch 7.4.969 Problem:    Compiler warnings on Windowx x64 build. Solution:   Add type casts. (Mike Williams)
patch 7.4.968 Problem:    test86 and test87 are flaky in Appveyor. Solution:   Reduce the count from 8 to 7. (suggested by ZyX)
patch 7.4.967 Problem:    Cross compilation on MS-windows doesn't work well. Solution:   Tidy up cross compilation across architectures with Visual Studio.             (Mike Williams)
patch 7.4.966 Problem:    Configure doesn't work with a space in a path. Solution:   Put paths in quotes. (James McCoy, close #525)
patch 7.4.965 Problem:    On FreeBSD /dev/fd/ files are special. Solution:   Use is_dev_fd_file() also for FreeBSD. (Derek Schrock, closes #521)
patch 7.4.964 Problem:    Test 87 doesn't work in a shadow directory. Solution:   Handle the extra subdirectory. (James McCoy, closes #515)
patch 7.4.963 Problem:    test_listlbr_utf8 sometimes fails. Solution:   Don't use a literal multibyte character but <C-V>uXXXX. Do not             dump the screen highlighting. (Christian Brabandt, closes #518)
Updated runtime files.
patch 7.4.962 Problem:    Cannot run the tests with gvim.  Cannot run individual new stests. Solution:   Add the -f flag. Add new test targets in Makefile.
patch 7.4.961 Problem:    Test107 fails in some circunstances. Solution:   When using "zt", "zb" and "z=" recompute the fraction.
patch 7.4.960 Problem:    Detecting every version of nmake is clumsy. Solution:   Use a tiny C program to get the version of _MSC_VER. (Ken Takata)
patch 7.4.959 Problem:    When setting 'term' the clipboard ownership is lost. Solution:   Do not call clip_init(). (James McCoy)
patch 7.4.958 Problem:    Vim checks if the directory "$TMPDIR" exists. Solution:   Do not check if the name starts with "$".
patch 7.4.957 Problem:    Test_tagcase fails when using another language than English. Solution:   Set the messages language to C. (Kenichi Ito)
patch 7.4.956 Problem:    A few more file name extensions not recognized. Solution:   Add .asciidoc, .bzl, .gradle, etc.
patch 7.4.955 Problem:    Vim doesn't recognize .pl6 and .pod6 files. Solution:   Recognize them as perl6 and pod6. (Mike Eve, closes #511)
patch 7.4.954 Problem:    When using Lua there may be a crash. (issue #468) Solution:   Avoid using an unitialized tv. (Yukihiro Nakadaira)
patch 7.4.953 Problem:    When a test script navigates to another buffer the .res file is             created with the wrong name. Solution:   Use the "testname" for the .res file. (Damien)
patch 7.4.952 Problem:    'lispwords' is tested in the old way. Solution:   Make a new style test for 'lispwords'.
patch 7.4.951 Problem:    Sorting number strings does not work as expected. (Luc Hermitte) Solution:   Add the 'N" argument to sort()
patch 7.4.950 Problem:    v:errors is not initialized. Solution:   Initialze it to an empty list. (Thinca)
patch 7.4.949 Problem:    When using 'colorcolumn' and there is a sign with a fullwidth             character the highlighting is wrong. (Andrew Stewart) Solution:   Only increment vcol when in the right state. (Christian Brabandt)
patch 7.4.948 Problem:    Can't build when the insert_expand feature is disabled. Solution:   Add #ifdefs. (Dan Pasanen, closes #499)
patch 7.4.947 Problem:    Test_listchars fails with MingW. (Michael Soyka) Solution:   Add the test to the ones that need the fileformat fixed.             (Christian Brabandt)
patch 7.4.946 Problem:    Missing changes in source file. Solution:   Include changes to the eval.c file.
patch 7.4.945 Problem:    New style testing is incomplete. Solution:   Add the runtest script to the list of distributed files.             Add the new functions to the function overview.             Rename the functions to match Vim function style.             Move undolevels testing into a new style test script.
patch 7.4.944 Problem:    Writing tests for Vim script is hard. Solution:   Add assertEqual(), assertFalse() and assertTrue() functions.  Add             the v:errors variable.  Add the runtest script. Add a first new             style test script.
patch 7.4.943 Problem:    Tests are not run. Solution:   Add test_writefile to makefiles. (Ken Takata)
patch 7.4.942 Problem:    test_tagcase breaks for small builds. Solution:   Bail out of the test early. (Hirohito Higashi)
Update runtime files.
patch 7.4.941 Problem:    There is no way to ignore case only for tag searches. Solution:   Add the 'tagcase' option. (Gary Johnson)
patch 7.4.940 Problem:    vt52 terminal codes are not correct. Solution:   Move entries outside of #if. (Random)  Adjustments based on             documented codes.
patch 7.4.939 Problem:    Memory leak when encountering a syntax error. Solution:   Free the memory. (Dominique Pelle)
patch 7.4.938 Problem:    X11 and GTK have moure mouse buttons than Vim supports. Solution:   Recognize more mouse buttons. (Benoit Pierre, closes #498)
patch 7.4.937 Problem:    Segfault reading unitialized memory. Solution:   Do not read match \z0, it does not exist. (Marius Gedminas, closes             #497)
patch 7.4.936 Problem:    Crash when dragging with the mouse. Solution:   Add safety check for NULL pointer. Check mouse position for valid             value. (Hirohito Higashi)
patch 7.4.935 Problem:    test_utf8 fails on MS-Windows when executed with gvim. Solution:   Use the insert flag on feedkeys() to put the string before the             ":" that was already read when checking for available chars.
patch 7.4.934 Problem:    Appveyor also builds on a tag push. Solution:   Add a skip_tags line. (Kenichi Ito, closes #489)
patch 7.4.932 Problem:    test_utf8 has confusing dummy command. Solution:   Use a real command instead of a colon.
patch 7.4.931 Problem:    Test 94 fails on some systems. Solution:   Set 'encoding' to utf-8.
Update runtime files.
patch 7.4.930 Problem:    MS-Windows: Most users appear not to like the window border. Solution:   Remove WS_EX_CLIENTEDGE. (Ian Halliday)
patch 7.4.929 Problem:    "gv" after paste selects one character less if 'selection' is             "exclusive". Solution:   Increment the end position. (Christian Brabandt)
patch 7.4.928 Problem:    A clientserver message interrupts handling keys of a mapping. Solution:   Have mch_inchar() send control back to WaitForChar when it is             interrupted by server message. (James Kolb)
patch 7.4.927 Problem:    Ruby crashes when there is a runtime error. Solution:   Use ruby_options() instead of ruby_process_options(). (Damien)
patch 7.4.926 Problem:    Completing the longest match doesn't work properly with multi-byte             characters. Solution:   When using multi-byte characters use another way to find the             longest match. (Hirohito Higashi)
patch 7.4.925 Problem:    User may yank or put using the register being recorded in. Solution:   Add the recording register in the message. (Christian Brabandt,             closes #470)
patch 7.4.924 Problem:    DEVELOPER_DIR gets reset by configure. Solution:   Do not reset DEVELOPER_DIR when there is no --with-developer-dir             argument. (Kazuki Sakamoto, closes #482)
patch 7.4.923 Problem:    Prototypes not always generated. Solution:   Change #if to OR with PROTO.
Updated runtime files.
patch 7.4.922 Problem:    Leaking memory with ":helpt {dir-not-exists}". Solution:   Free dirname. (Dominique Pelle)
patch 7.4.921 Problem:    Missing proto file update. (Randall W. Morris) Solution:   Add the missing line for mch_ishidden.
patch 7.4.920 Problem:    The rubydll option is not in the options window. Solution:   Add the rubydll option.
patch 7.4.919 Problem:    The dll options are not in the options window. Solution:   Add the dll options.  And other fixes.
patch 7.4.918 Problem:    A digit in an option name has problems. Solution:   Rename 'python3dll' to 'pythonthreedll'.
patch 7.4.917 Problem:    Compiler warning for comparing signed and unsigned. Solution:   Add a type cast.
patch 7.4.916 Problem:    When running out of memory while copying a dict memory may be             freed twice. (ZyX) Solution:   Do not call the garbage collector when running out of memory.
patch 7.4.914 Problem:    New compiler warning: logical-not-parentheses Solution:   Silence the warning.
patch 7.4.913 Problem:    No utf-8 support for the hangul input feature. Solution:   Add utf-8 support. (Namsh)
patch 7.4.912 Problem:    Wrong indenting for C++ constructor. Solution:   Recognize ::.  (Anhong)
patch 7.4.911 Problem:    t_Ce and t_Cs are documented but not supported. (Hirohito Higashi) Solution:   Define the options.
patch 7.4.910 Problem:    Compiler complains about type punned pointer. Solution:   Use another way to increment the ref count.
patch 7.4.909 Problem:    "make install" fails. Solution:   Only try installing desktop files if the destination directory             exists.
patch 7.4.908 Problem:    Build error with MingW compiler. (Cesar Romani) Solution:   Change #if into #ifdef.
patch 7.4.907 Problem:    Libraries for dynamically loading interfaces can only be defined             at compile time. Solution:   Add options to specify the dll names. (Kazuki Sakamoto,             closes #452)
patch 7.4.906 Problem:    On MS-Windows the viminfo file is (always) given the hidden             attribute. (raulnac) Solution:   Check the hidden attribute in a different way. (Ken Takata)
Add files in patch 7.4.904 missing from commit.
patch 7.4.905 Problem:    Python interface can produce error "vim.message' object has no             attribute 'isatty'". Solution:   Add dummy isatty(), readable(), etc. (closes #464)
patch 7.4.904 Problem:    Vim does not provide .desktop files. Solution:   Include and install .desktop files. (James McCoy, closes #455)
Updated runtime files.
patch 7.4.903 Problem:    MS-Windows: When 'encoding' differs from the current code page,             expandinig wildcards may cause illegal memory access. Solution:   Allocate a longer buffer. (Ken Takata)
patch 7.4.902 Problem:    Problems with using the MS-Windows console. Solution:   Revert patches 7.4.851, 7.4.876 and 7.4.886 until we find a better             solution. (suggested by Ken Takata)
Update runtime files.
patch 7.4.901 Problem:    When a BufLeave autocommand changes folding in a way it syncs             undo, undo can be corrupted. Solution:   Prevent undo sync. (Jacob Niehus)
patch 7.4.900 Problem:    README file can still be improved Solution:   Add a couple of links. (Christian Brabandt)
patch 7.4.899 Problem:    README file is not optimal. Solution:   Move buttons, update some text. (closes #460)
Update runtime files.
patch 7.4.898 Problem:    The 'fixendofline' option is set on with ":edit". Solution:   Don't set the option when clearing a buffer. (Yasuhiro Matsumoto)
patch 7.4.897 Problem:    Freeze and crash when there is a sleep in a remote command.             (Karl Yngve Lervåg) Solution:   Remove a message from the queue before dealing with it. (James             Kolb)
patch 7.4.896 Problem:    Editing a URL, which netrw should handle, doesn't work. Solution:   Avoid changing slashes to backslashes. (Yasuhiro Matsumoto)
patch 7.4.895 Problem:    Custom command line completion does not work for a command             containing digits. Solution:   Skip over the digits. (suggested by Yasuhiro Matsumoto)
patch 7.4.894 Problem:    vimrun.exe is picky about the number of spaces before -s. Solution:   Skip all spaces. (Cam Sinclair)
patch 7.4.893 Problem:    C indenting is wrong below a "case (foo):" because it is             recognized as a C++ base class construct.  Issue #38. Solution:   Check for the case keyword.
patch 7.4.892 Problem:    On MS-Windows the iconv DLL may have a different name. Solution:   Also try libiconv2.dll and libiconv-2.dll. (Yasuhiro Matsumoto)
patch 7.4.891 Problem:    Indentation of array initializer is wrong. Solution:   Avoid that calling find_start_rawstring() changes the position             returned by find_start_comment(), add a test. (Hirohito Higashi)
patch 7.4.890 Problem:    Build failure when using dynamic python but not python3. Solution:   Adjust the #if to also include DYNAMIC_PYTHON3 and UNIX.
patch 7.4.889 Problem:    Triggering OptionSet from setwinvar() isn't tested. Solution:   Add a test. (Christian Brabandt)
patch 7.4.888 Problem:    The OptionSet autocommands are not triggered from setwinvar(). Solution:   Do not use switch_win() when not needed. (Hirohito Higashi)
patch 7.4.887 Problem:    Using uninitialized memory for regexp with back reference.             (Dominique Pelle) Solution:   Initialize end_lnum.
patch 7.4.886 Problem:    Windows7: Switching screen buffer causes flicker when using             system(). Solution:   Instead of actually switching screen buffer, duplicate the handle.             (Yasuhiro Matsumoto)
Update various runtime files.
patch 7.4.884 Problem:    Travis also builds on a tag push. Solution:   Filter out tag pushes. (Kenichi Ito)
patch 7.4.883 Problem:    Block-mode replace works characterwise instead of blockwise after             column 147. (Issue #422) Solution:   Set Visual mode. (Christian Brabandt)
patch 7.4.882 Problem:    When leaving the command line window with CTRL-C while a             completion menu is displayed the menu isn't removed. Solution:   Force a screen update. (Hirohito Higashi)
patch 7.4.881 Problem:    Test 49 fails. Solution:   Add line number to check of call stack.
patch 7.4.880 Problem:    No build and coverage status. Solution:   Add links to the README file. (Christian Brabandt)
patch 7.4.879 Problem:    Can't see line numbers in nested function calls. Solution:   Add line number to the file name. (Alberto Fanjul)
patch 7.4.878 Problem:    Coverity error for clearing only one byte of struct. Solution:   Clear the whole struct. (Dominique Pelle)
patch 7.4.877 Problem:    ":find" sometimes fails. (Excanoe) Solution:   Compare current characters instead of previous ones.
patch 7.4.876 Problem:    Windows7: when using vim.exe with msys or msys2, conhost.exe             (console window provider on Windows7) will freeze or crash. Solution:   Make original screen buffer active, before executing external             program.  And when the program is finished, revert to vim's one.             (Taro Muraoka)
patch 7.4.875 Problem:    Not obvious how to contribute. Solution:   Add a remark about CONTRIBUTING.md to README.md
patch 7.4.874 Problem:    MS-Windows: When Vim runs inside another application, the size             isn't right. Solution:   When in child mode compute the size differently. (Agorgianitis             Loukas)
patch 7.4.873 Problem:    Compiler warning for unused variable. (Tony Mechelynck) Solution:   Remove the variable.  Also fix int vs long_u mixup.
patch 7.4.872 Problem:    Not using CI services available. Solution:   Add configuration files for travis and appveyor. (PR #401)
patch 7.4.871 Problem:    Vim leaks memory, when 'wildignore' filters out all matches. Solution:   Free the files array when it becomes empty.
patch 7.4.870 Problem:    May get into an invalid state when using getchar() in an             expression mapping. Solution:   Anticipate mod_mask to change. (idea by Yukihiro Nakadaira)
patch 7.4.869 Problem:    MS-Windows: scrolling may cause text to disappear when using an             Intel GPU. Solution:   Call GetPixel(). (Yohei Endo)
patch 7.4.868 Problem:    'smarttab' is also effective when 'paste' is enabled. (Alexander             Monakov) Solution:   Disable 'smarttab' when 'paste' is set. (Christian Brabandt)             Do the same for 'expandtab'.
patch 7.4.867 Problem:    Can't build on MS-Windows. (Taro Muraoka) Solution:   Adjust #ifdef.
patch 7.4.866 Problem:    Crash when changing the 'tags' option from a remote command.             (Benjamin Fritz) Solution:   Instead of executing messages immediately, use a queue, like for             netbeans. (James Kolb)
patch 7.4.865 Problem:    Compiler warning for uninitialized variable. Solution:   Initialize.
patch 7.4.864 Problem:    Tiny build fails. Solution:   Put qf_ items inside #ifdef.
patch 7.4.863 Problem:    plines_nofill() used without the diff feature. Solution:   Define PLINES_NOFILL().
patch 7.4.862 Problem:    Still problems with pango_shape_full() not available. Solution:   Change AC_TRY_COMPILE to AC_TRY_LINK.
Update documentation and syntax files.
patch 7.4.861 Problem:    pango_shape_full() is not always available. Solution:   Add a configure check.
patch 7.4.860 Problem:    Filetype detection is outdated. Solution:   Include all recent and not-so-recent changes.
patch 7.4.859 Problem:    Vim doesn't recognize all htmldjango files. Solution:   Recognize a comment. (Daniel Hahler, PR #410)
patch 7.4.858 Problem:    It's a bit clumsy to execute a command on a list of matches. Solution:   Add the ":ldo", ":lfdo", ":cdo" and ":cfdo" commands. (Yegappan             Lakshmanan)
patch 7.4.857 Problem:    Dragging the current tab with the mouse doesn't work properly. Solution:   Take the current tabpage index into account. (Hirohito Higashi)
patch 7.4.856 Problem:    "zt" still doesn't work well with filler lines. (Gary Johnson) Solution:   Check for filler lines above the cursor. (Christian Brabandt)
patch 7.4.855 Problem:    GTK: font glitches for combining characters Solution:   Use pango_shape_full() instead of pango_shape(). (luchr, PR #393)
patch 7.4.854 Problem:    Missing information about runtime files. Solution:   Add section about runtime files. (Christian Brabandt)
patch 7.4.853 Problem:    "zt" in diff mode does not always work properly. (Gary Johnson) Solution:   Don't count filler lines twice. (Christian Brabandt)
patch 7.4.852 Problem:    On MS-Windows console Vim uses ANSI APIs for keyboard input and             console output, it cannot input/output Unicode characters. Solution:   Use Unicode APIs for console I/O. (Ken Takata, Yasuhiro Matsumoto)
patch 7.4.851 Problem:    Saving and restoring the console buffer does not work properly. Solution:   Instead of ReadConsoleOutputA/WriteConsoleOutputA use             CreateConsoleScreenBuffer and SetConsoleActiveScreenBuffer.             (Ken Takata)
patch 7.4.850 Problem:    <Esc> does not show up. Solution:   Use &gt; and &lt;. (Kazunobu Kuriyama)
patch 7.4.849 Problem:    Moving the cursor in Insert mode starts new undo sequence. Solution:   Add CTRL-G U to keep the undo sequence for the following cursor             movement command. (Christian Brabandt)
patch 7.4.848 Problem:    CTRL-A on hex number in Visual block mode is incorrect. Solution:   Account for the "0x". (Hirohito Higashi)
patch 7.4.847 Problem:    "vi)d" may leave a character behind. Solution:   Skip over multi-byte character. (Christian Brabandt)
patch 7.4.846 Problem:    Some GitHub users don't know how to use issues. Solution:   Add a file that explains the basics of contributing.
patch 7.4.845 Problem:    Compiler warning for possible loss of data. Solution:   Add a type cast. (Erich Ritz)
patch 7.4.844 Problem:    When '#' is in 'isident' the is# comparator doesn't work. Solution:   Don't use vim_isIDc(). (Yasuhiro Matsumoto)
patch 7.4.843 Problem:    Still possible to go beyond the end of a string. Solution:   Check for NUL also in second string. (Dominique Pelle)
patch 7.4.842 Problem:    Sending too many messages to close the balloon. Solution:   Only send a WM_CLOSE message. (Jurgen Kramer)
patch 7.4.841 Problem:    Can't compile without the multi-byte feature. (John Marriott) Solution:   Add more #ifdef's.
patch 7.4.840 Problem:    Tooltip window stays open. Solution:   Send a WM_CLOSE message. (Jurgen Kramer)
patch 7.4.839 Problem:    Compiler warning on 64-bit system. Solution:   Add cast to int. (Mike Williams)
patch 7.4.838 Problem:    Can't compile without the crypt feature. (John Marriott) Solution:   Add #ifdef.
Updated runtime files and Italian messages.
patch 7.4.837 Problem:    Compiler warning with MSVC compiler when using +sniff. Solution:   Use Sleep() instead of _sleep(). (Tux)
patch 7.4.836 Problem:    Accessing unitinialized memory. Solution:   Add missing calls to init_tv(). (Dominique Pelle)
patch 7.4.835 Problem:    Comparing utf-8 sequences does not handle different byte sizes             correctly. Solution:   Get the byte size of each character. (Dominique Pelle)
patch 7.4.834 Problem:    gettabvar() doesn't work after Vim start. (Szymon Wrozynski) Solution:   Handle first window in tab still being NULL. (Christian Brabandt)
patch 7.4.833 Problem:    More side effects of ":set all&" are missing. (Björn Linse) Solution:   Call didset_options() and add didset_options2() to collect more             side effects to take care of.  Still not everything...
patch 7.4.832 Problem:    $HOME in  is expanded too early. Solution:   Skip over  when expanding environment names.
patch 7.4.831 Problem:    When expanding  on the command line and encountering an             error, the command is executed anyway. Solution:   Bail out when an error is detected.
patch 7.4.830 Problem:    Resetting 'encoding' when doing ":set all&" causes problems.             (Bjorn Linse) Display is not updated. Solution:   Do not reset 'encoding'. Do a full redraw.
patch 7.4.829 Problem:    Crash when clicking in beval balloon. (Travis Lebsock) Solution:   Use PostMessage() instead of DestroyWindow(). (Raymond Ko, PR 298)
patch 7.4.828 Problem:    Crash when using "syn keyword x c". (Dominique Pelle) Solution:   Initialize the keyword tabble. (Raymond Ko, PR 397)
patch 7.4.827 Problem:    Not all test targets are in the Makefile. Solution:   Add the missing targets.
patch 7.4.826 Problem:    Compiler warnings and errors. Solution:   Make it build properly without the multi-byte feature.
patch 7.4.825 Problem:    Invalid memory access for ":syn keyword x a[". Solution:   Do not skip over the NUL. (Dominique Pelle)
patch 7.4.824 Problem:    Can't compile without the multi-byte feature. (John Marriott) Solution:   Add #ifdef.
Update runtime files.
patch 7.4.823 Problem:    Cursor moves after CTRL-A on alphabetic character. Solution:   (Hirohito Higashi, test by Christian Brabandt)
patch 7.4.822 Problem:    More problems reported by coverity. Solution:   Avoid the warnings. (Christian Brabandt)
patch 7.4.821 Problem:    Coverity reports a few problems. Solution:   Avoid the warnings. (Christian Brabandt)
patch 7.4.820 Problem:    Invalid memory access in file_pat_to_reg_pat. Solution:   Avoid looking before the start of a string. (Dominique Pelle)
patch 7.4.818 Problem:    'linebreak' breaks c% if the last Visual selection was block.             (Chris Morganiser, Issue 389) Solution:   Handle Visual block mode differently. (Christian Brabandt)
patch 7.4.817 Problem:    Invalid memory access in file_pat_to_reg_pat(). Solution:   Use vim_isspace() instead of checking for a space only. (Dominique             Pelle)
patch 7.4.816 Problem:    Invalid memory access when doing ":fun X(". Solution:   Check for missing ')'. (Dominique Pelle)
patch 7.4.815 Problem:    Invalid memory access when doing ":call g:". Solution:   Check for an empty name. (Dominique Pelle)
patch 7.4.814 Problem:    Illegal memory access with "sy match a fold". Solution:   Check for empty string. (Dominique Pelle)
patch 7.4.813 Problem:    It is not possible to save and restore character search state. Solution:   Add getcharsearch() and setcharsearch().  (James McCoy)
patch 7.4.812 Problem:    Gcc sanitizer complains about using a NULL pointer to memmove(). Solution:   Only call memmove when there is something to move. (Vittorio             Zecca)
patch 7.4.811 Problem:    Invalid memory access when using "exe 'sc'". Solution:   Avoid going over the end of the string. (Dominique Pelle)
patch 7.4.810 Problem:    With a sequence of commands using buffers in diff mode E749 is             given. (itchyny) Solution:   Skip unloaded buffer. (Hirohito Higashi)
patch 7.4.809 Problem:    Test is duplicated. Solution:   Roll back 7.4.802.
patch 7.4.808 Problem:    On MS-Windows 8 IME input doen't work correctly. Solution:   Read console input before calling MsgWaitForMultipleObjects().             (vim-jp, Nobuhiro Takasaki)
patch 7.4.807 Problem:    After CTRL-V CTRL-A mode isn't updated. (Hirohito Higashi) Solution:   Clear the command line or update the displayed command.
patch 7.4.806 Problem:    CTRL-A in Visual mode doesn't work properly with "alpha" in             'nrformat'. Solution:   Make it work. (Christian Brabandt)
patch 7.4.805 Problem:    The ruler shows "Bot" even when there are only filler lines             missing. (Gary Johnson) Solution:   Use "All" when the first line and one filler line are visible.
patch 7.4.804 Problem:    Xxd doesn't have a license notice. Solution:   Add license as indicated by Juergen.
patch 7.4.803 Problem:    C indent does not support C11 raw strings. (Mark Lodato) Solution:   Do not change indent inside the raw string.
patch 7.4.802 Problem:    Using "A" in Visual mode while 'linebreak' is set is not tested. Solution:   Add a test for this, verifies the problem is fixed. (Ingo Karkat)
patch 7.4.801 Problem:    Test for ":diffoff" doesn't catch all potential problems. Solution:   Add a :diffthis and a :diffoff command. (Olaf Dabrunz)
patch 7.4.800 Problem:    Using freed memory when triggering CmdUndefined autocommands. Solution:   Set pointer to NULL. (Dominique Pelle)
patch 7.4.799 Problem:    Accessing memory before an allocated block. Solution:   Check for not going before the start of a pattern. (Dominique             Pelle)
patch 7.4.798 Problem:    Repeating a change in Visual mode does not work as expected.             (Urtica Dioica) Solution:   Make redo in Visual mode work better. (Christian Brabandt)
patch 7.4.797 Problem:    Crash when using more lines for the command line than             'maxcombine'. Solution:   Use the correct array index.  Also, do not try redrawing when             exiting.  And use screen_Columns instead of Columns.
patch 7.4.796 Problem:    Warning from 64 bit compiler. Solution:   Add type cast. (Mike Williams)
Correct optwin script, update PHP complete.
patch 7.4.795 Problem:    The 'fixeol' option is not copied to a new window. Solution:   Copy the option value. (Yasuhiro Matsumoto)
patch 7.4.794 Problem:    Visual Studio 2015 is not recognized. Solution:   Add the version numbers to the makefile. (Taro Muraoka)
Updated and new runtime files.
patch 7.4.793 Problem:    Can't specify when not to ring the bell. Solution:   Add the 'belloff' option. (Christian Brabandt)
patch 7.4.792 Problem:    Can only conceal text by defining syntax items. Solution:   Use matchadd() to define concealing. (Christian Brabandt)
patch 7.4.791 Problem:    The buffer list can be very long. Solution:   Add an argument to ":ls" to specify the type of buffer to list.             (Marcin Szamotulski)
patch 7.4.790 Problem:    Test fails when the autochdir feature is not available.  Test             output contains the test script. Solution:   Check for the autochdir feature. (Kazunobu Kuriyama)  Only write             the relevant test output.
patch 7.4.789 Problem:    Using freed memory and crash. (Dominique Pellej) Solution:   Correct use of pointers. (Hirohito Higashi)
patch 7.4.788 Problem:    Can't build without the crypt feature. (John Marriott) Solution:   Add #ifdef's.
patch 7.4.787 Problem:    snprintf() isn't available everywhere. Solution:   Use vim_snprintf(). (Ken Takata)
patch 7.4.786 Problem:    It is not possible for a plugin to adjust to a changed setting. Solution:   Add the OptionSet autocommand event. (Christian Brabandt)
patch 7.4.785 Problem:    On some systems automatically adding the missing EOL causes             problems. Setting 'binary' has too many side effects. Solution:   Add the 'fixeol' option, default on. (Pavel Samarkin)
patch 7.4.784 Problem:    Using both "noinsert" and "noselect" in 'completeopt' does not             work properly. Solution:   Change the ins_complete() calls. (Ozaki Kiichi)
patch 7.4.783 Problem:    copy_chars() and copy_spaces() are inefficient. Solution:   Use memset() instead. (Dominique Pelle)
patch 7.4.781 Problem:    line2byte() returns one less when 'bin' and 'noeol' are set. Solution:   Only adjust the size for the last line. (Rob Wu)
patch 7.4.780 Problem:    Compiler complains about uninitialized variable and clobbered             variables. Solution:   Add Initialization.  Make variables static.
patch 7.4.779 Problem:    Using CTRL-A in a line without a number moves the cursor. May             cause a crash when at the start of the line. (Urtica Dioica) Solution:   Do not move the cursor if no number was changed.
patch 7.4.778 Problem:    Coverity warns for uninitialized variable. Solution:   Change condition of assignment.
Updated runtime files.
patch 7.4.777 Problem:    The README file doesn't look nice on github. Solution:   Add a markdown version of the README file.
Add files missing from patch 7.4.771.
patch 7.4.775 Problem:    It is not possible to avoid using the first item of completion. Solution:   Add the "noinsert" and "noselect" values to 'completeopt'. (Shougo             Matsu)
patch 7.4.774 Problem:    When using the CompleteDone autocommand event it's difficult to             get to the completed items. Solution:   Add the v:completed_items variable. (Shougo Matsu)
patch 7.4.773 Problem:    'langmap' is used in command-line mode when checking for mappings.             Issue 376. Solution:   Do not use 'langmap' in command-line mode. (Larry Velazquez)
patch 7.4.772 Problem:    Racket 6.2 is not supported on MS-Windows. Solution:   Check for the "racket" subdirectory. (Weiyong Mao)
patch 7.4.771 Problem:    Search does not handle multi-byte character at the start position             correctly. Solution:   Take byte size of character into account. (Yukihiro Nakadaira)
patch 7.4.770 Problem:    Background color response with transparency is not ignored. Solution:   Change the way escape sequences are recognized. (partly by             Hirohito Higashi)
patch 7.4.769 Problem:    Behavior of :diffoff is not tested. Solution:   Add a bit of testing. (Olaf Dabrunz)
patch 7.4.768 Problem:    :diffoff only works properly once. Solution:   Also make :diffoff work when used a second time. (Olaf Dabrunz)
patch 7.4.767 Problem:    --remote-tab-silent can fail on MS-Windows. Solution:   Use single quotes to avoid problems with backslashes. (Idea by             Weiyong Mao)
patch 7.4.766 Problem:    Background color check does not work on Tera Term. Solution:   Also recognize ST as a termination character. (Hirohito Higashi)
patch 7.4.765 Problem:    CTRL-A and CTRL-X in Visual mode do not always work well. Solution:   Improvements for increment and decrement. (Christian Brabandt)
patch 7.4.764 Problem:    test_increment fails on MS-Windows. (Ken Takata) Solution:   Clear Visual mappings. (Taro Muraoka)
patch 7.4.763 Problem:    Building with Lua 5.1 doesn't work. Solution:   Define lua_replace and lua_remove. (KF Leong)
patch 7.4.762 Problem:    Comment for may_req_bg_color() is wrong. (Christ van Willegen) Solution:   Rewrite the comment.
Update help files.
patch 7.4.761 Problem:    The request-background termcode implementation is incomplete. Solution:   Add the missing pieces.
patch 7.4.760 Problem:    Spelling mistakes are not displayed after ":syn spell". Solution:   Force a redraw after ":syn spell" command. (Christian Brabandt)
patch 7.4.759 Problem:    Building with Lua 5.3 doesn't work, symbols have changed. Solution:   Use the new names for the new version. (Felix Schnizlein)
patch 7.4.758 Problem:    When 'conceallevel' is 1 and quitting the command-line window with             CTRL-C the first character ':' is erased. Solution:   Reset 'conceallevel' in the command-line window. (Hirohito             Higashi)
patch 7.4.757 Problem:    Cannot detect the background color of a terminal. Solution:   Add T_RBG to request the background color if possible. (Lubomir             Rintel)
patch 7.4.756 Problem:    Can't use strawberry Perl 5.22 x64 on MS-Windows. Solution:   Add new defines and #if. (Ken Takata)
patch 7.4.755 Problem:    It is not easy to count the number of characters. Solution:   Add the skipcc argument to strchars(). (Hirohito Higashi, Ken             Takata)
patch 7.4.754 Problem:    Using CTRL-A in Visual mode does not work well. (Gary Johnson) Solution:   Make it increment all numbers in the Visual area. (Christian             Brabandt)
patch 7.4.753 Problem:    Appending in Visual mode with 'linebreak' set does not work             properly.  Also when 'selection' is "exclusive". (Ingo Karkat) Solution:   Recalculate virtual columns. (Christian Brabandt)
patch 7.4.752 Problem:    Unicode 8.0 not supported. Solution:   Update tables for Unicode 8.0.  Avoid E36 when running the script.             (James McCoy)
patch 7.4.751 Problem:    It is not obvious how to enable the address sanitizer. Solution:   Add commented-out flags in the Makefile. (Dominique Pelle)             Also add missing test targets.
patch 7.4.750 Problem:    Cannot build with clang 3.5 on Cygwin with perl enabled. Solution:   Strip "-fdebug-prefix-map" in configure. (Ken Takata)
patch 7.4.749 Problem:    For some options two consecutive commas are OK. (Nikolay Pavlov) Solution:   Add the P_ONECOMMA flag.
patch 7.4.748 Problem:    Buffer overflow. Solution:   Make the buffer larger. (Kazunobu Kuriyama)
Add the logiPat plugin to the distribution.
patch 7.4.747 Problem:    ":cnext" may jump to the wrong column when setting             'virtualedit=all' (cs86661) Solution:   Reset the coladd field. (Hirohito Higashi)
patch 7.4.746 Problem:    ":[count]tag" is not always working. (cs86661) Solution:   Set cur_match a bit later. (Hirohito Higashi)
patch 7.4.744 Problem:    No tests for Ruby and Perl. Solution:   Add minimal tests. (Ken Takata)
patch 7.4.743 Problem:    "p" in Visual mode causes an unexpected line split. Solution:   Advance the cursor first. (Yukihiro Nakadaira)
patch 7.4.742 Problem:    Cannot specify a vertical split when loading a buffer for a             quickfix command. Solution:   Add the "vsplit" value to 'switchbuf'. (Brook Hong)
patch 7.4.741 Problem:    When using += with ":set" a trailing comma is not recognized.             (Issue 365) Solution:   Don't add a second comma. Add a test. (partly by Christian             Brabandt)
Updated runtime files.
patch 7.4.740 Problem:    ":1quit" works like ":.quit". (Bohr Shaw) Solution:   Don't exit Vim when a range is specified. (Christian Brabandt)
patch 7.4.739 Problem:    In a string "\U" only takes 4 digits, while after CTRL-V U eight             digits can be used. Solution:   Make "\U" also take eight digits. (Christian Brabandt)
patch 7.4.738 Problem:    Can't compile without the syntax highlighting feature. Solution:   Add #ifdef around use of w_p_cul. (Hirohito Higashi)
patch 7.4.737 Problem:    On MS-Windows vimgrep over arglist doesn't work (Issue 361) Solution:   Only escape backslashes in ## expansion when it is not used as the             path separator. (James McCoy)
patch 7.4.736 Problem:    Invalid memory access. Solution:   Avoid going over the end of a NUL terminated string. (Dominique             Pelle)
patch 7.4.735 Problem:    Wrong argument for sizeof(). Solution:   Use a pointer argument. (Chris Hall)
patch 7.4.734 Problem:    ml_get error when using "p" in a Visual selection in the last             line. Solution:   Change the behavior at the last line. (Yukihiro Nakadaira)
patch 7.4.733 Problem:    test_listchars breaks on MS-Windows. (Kenichi Ito) Solution:   Set fileformat to "unix". (Christian Brabandt)
Updated runtime files.
patch 7.4.732 Problem:    The cursor line is not always updated for the "O" command. Solution:   Reset the VALID_CROW flag. (Christian Brabandt)
patch 7.4.731 Problem:    The tab menu shows "Close tab" even when it doesn't work. Solution:   Don't show "Close tab" for the last tab. (John Marriott)
patch 7.4.730 Problem:    When setting the crypt key and using a swap file, text may be             encrypted twice or unencrypted text remains in the swap file.             (Issue 369) Solution:   Call ml_preserve() before re-encrypting.  Set correct index for             next pointer block.
patch 7.4.728 Problem:    Can't build with some version of Visual Studio 2015. Solution:   Recognize another version 14 number. (Sinan)
patch 7.4.727 Problem:    Cannot build GvimExt with MingW. Solution:   Add -lgdi32.  (KF Leong)
patch 7.4.726 Problem:    Cannot build GvimExt. Solution:   Set APPVER to 5.0.  (KF Leong)
patch 7.4.725 Problem:    ":call setreg('"', [])" reports an internal error. Solution:   Make the register empty. (Yasuhiro Matsumoto)
patch 7.4.724 Problem:    Vim icon does not show in Windows context menu. (issue 249) Solution:   Load the icon in GvimExt.
patch 7.4.723 Problem:    For indenting, finding the C++ baseclass can be slow. Solution:   Cache the result. (Hirohito Higashi)
patch 7.4.722 Problem:    0x202f is not recognized as a non-breaking space character. Solution:   Add 0x202f to the list. (Christian Brabandt)
patch 7.4.721 Problem:    When 'list' is set Visual mode does not highlight anything in             empty lines. (mgaleski) Solution:   Check the value of lcs_eol in another place. (Christian Brabandt)
patch 7.4.720 Problem:    Can't build with Visual Studio 2015. Solution:   Recognize the "version 14" numbers and omit /nodefaultlib when             appropriate. (Paul Moore)
patch 7.4.719 Problem:    Overflow when adding MAXCOL to a pointer. Solution:   Subtract pointers instead. (James McCoy)
patch 7.4.718 Problem:    Autocommands triggered by quickfix cannot get the current title             value. Solution:   Set w:quickfix_title earlier. (Yannick)             Also move the check for a title into the function.
patch 7.4.717 Problem:    ":let list += list" can change a locked list. Solution:   Check for the lock earlier. (Olaf Dabrunz)
patch 7.4.716 Problem:    When using the 'c' flag of ":substitute" and selecting "a" or "l"             at the prompt the flags are not remembered for ":&&". (Ingo             Karkat) Solution:   Save the flag values and restore them. (Hirohito Higashi)
patch 7.4.715 Problem:    Invalid memory access when there are illegal bytes. Solution:   Get the length from the text, not from the character. (Dominique             Pelle)
patch 7.4.714 Problem:    Illegal memory access when there are illegal bytes. Solution:   Check the byte length of the character. (Dominique Pelle)
patch 7.4.713 Problem:    Wrong condition for #ifdef. Solution:   Change USR_EXRC_FILE2 to USR_VIMRC_FILE2. (Mikael Fourrier)
patch 7.4.712 Problem:    Missing change in another file. Solution:   Also change message.c
patch 7.4.711 Problem:    Missing change in one file. Solution:   Also change option.c
patch 7.4.710 Problem:    It is not possible to make spaces visibible in list mode. Solution:   Add the "space" item to 'listchars'. (David Bürgin, issue 350)
patch 7.4.709 Problem:    ":tabmove" does not work as documented. Solution:   Make it work consistently.  Update documentation and add tests.             (Hirohito Higashi)
patch 7.4.708 Problem:    gettext() is called too often. Solution:   Do not call gettext() for messages until they are actually used.             (idea by Yasuhiro Matsumoto)
patch 7.4.707 Problem:    Undo files can have their executable bit set. Solution:   Strip of the executable bit. (Mikael Berthe)
patch 7.4.706 Problem:    Window drawn wrong when 'laststatus' is zero and there is a             command-line window. (Yclept Nemo) Solution:   Set the status height a bit later. (Christian Brabandt)
patch 7.4.705 Problem:    Can't build with Ruby 2.2. Solution:   Add #ifdefs to handle the incompatible change. (Andrei Olsen)
patch 7.4.703 Problem:    Compiler warning for start_dir unused when building unittests. Solution:   Move start_dir inside the #ifdef.
patch 7.4.702 Problem:    Joining an empty list does uneccessary work. Solution:   Let join() return early. (Marco Hinz)
patch 7.4.701 Problem:    Compiler warning for using uninitialized variable. (Yasuhiro             Matsumoto) Solution:   Initialize it.
Remove local-additions entries from help.txt.
Updated runtime files.
patch 7.4.700 Problem:    Fold can't be opened after ":move". (Ein Brown) Solution:   Delete the folding information and update it afterwards.             (Christian Brabandt)
patch 7.4.699 Problem:    E315 when trying to delete a fold. (Yutao Yuan) Solution:   Make sure the fold doesn't go beyond the last buffer line.             (Christian Brabandt)
patch 7.4.698 Problem:    Various problems with locked and fixed lists and dictionaries. Solution:   Disallow changing locked items, fix a crash, add tests. (Olaf             Dabrunz)
patch 7.4.697 Problem:    The filename used for ":profile" must be given literally. Solution:   Expand "~" and environment variables. (Marco Hinz)
patch 7.4.696 Problem:    Not freeing memory when encountering an error. Solution:   Free the stack before returning. (Eliseo Martínez)
patch 7.4.695 Problem:    Out-of-bounds read, dectected by Coverity. Solution:   Remember the value of cmap for the first matching encoding.  Reset             cmap to that value if first matching encoding is going to be used.             (Eliseo Martínez)
More updated runtime files.
patch 7.4.694 Problem:    Running tests changes the .viminfo file. Solution:   Disable viminfo in the text objects test.
Updated runtime files.
patch 7.4.693 Problem:    Session file is not correct when there are multiple tab pages. Solution:   Reset the current window number for each tab page. (Jacob Niehus)
patch 7.4.692 for Problem: Defining SOLARIS for no good reason. (Danek Duvall) Solution:   Remove it.
patch 7.4.691 for Problem: Can't build with MzScheme. Solution:   Change "cwd" into the global variable "start_dir".
patch 7.4.690 for Problem: Memory access errors when changing indent in Ex mode. Also missing             redraw when using CTRL-U. (Knil Ino) Solution:   Update pointers after calling ga_grow().
updated for version 7.4.689 Problem:    On MS-Windows, when 'autochdir' is set, diff mode with files in             different directories does not work. (Axel Bender) Solution:   Remember the current directory and use it where needed. (Christian             Brabandt)
updated for version 7.4.688 Problem:    When "$" is in 'cpo' the popup menu isn't undrawn correctly.             (Issue 166) Solution:   When using the popup menu remove the "$".
updated for version 7.4.687 Problem:    There is no way to use a different in Replace mode for a terminal. Solution:   Add t_SR. (Omar Sandoval)
updated for version 7.4.686 Problem:    "zr" and "zm" do not take a count. Solution:   Implement the count, restrict the fold level to the maximum             nesting depth.  (Marcin Szamotulski)
updated for version 7.4.685 Problem:    When there are illegal utf-8 characters the old regexp engine may             go past the end of a string. Solution:   Only advance to the end of the string. (Dominique Pelle)
updated for version 7.4.684 Problem:    When starting several Vim instances in diff mode, the temp files             used may not be unique. (Issue 353) Solution:   Add an argument to vim_tempname() to keep the file.
updated for version 7.4.682 Problem:    The search highlighting and match highlighting replaces the             cursorline highlighting, this doesn't look good. Solution:   Combine the highlighting. (Yasuhiro Matsumoto)
Add test files for patch 7.4.680.
updated for version 7.4.681 Problem:    MS-Windows: When Vim is minimized the window height is computed             incorrectly. Solution:   When minimized use the previously computed size. (Ingo Karkat)
updated for version 7.4.680 Problem:    CTRL-W in Insert mode does not work well for multi-byte             characters. Solution:   Use mb_get_class(). (Yasuhiro Matsumoto)
updated for version 7.4.679 Problem:    Color values greater than 255 cause problems on MS-Windows. Solution:   Truncate to 255 colors. (Yasuhiro Matsumoto)
updated for version 7.4.678 Problem:    When using --remote the directory may end up being wrong. Solution:   Use localdir() to find out what to do. (Xaizek)
updated for version 7.4.677 Problem:    Configure fails when specifying a python-config-dir. (Lcd) Solution:   Check if PYTHONFRAMEWORKPREFIX is set.
updated for version 7.4.676 Problem:    On Mac, when not using the default Python framework configure             doesn't do the right thing. Solution:   Use a linker search path. (Kazunobu Kuriyama)
updated for version 7.4.675 Problem:    When a FileReadPost autocommand moves the cursor inside a line it             gets moved back. Solution:   When checking whether an autocommand moved the cursor store the             column as well. (Christian Brabandt)
updated for version 7.4.674 Problem:    Missing changes in one file. Solution:   Also change the win32 file.
updated for version 7.4.673 Problem:    The first syntax entry gets sequence number zero, which doesn't             work. (Clinton McKay) Solution:   Start at number one. (Bjorn Linse)
Update runtime files.
updated for version 7.4.672 Problem:    When completing a shell command, directories in the current             directory are not listed. Solution:   When "." is not in $PATH also look in the current directory for             directories.
updated for version 7.4.671 Problem:    Warning for shadowing a variable. Solution:   Rename off to mb_off. (Kazunobu Kuriyama)
updated for version 7.4.670 Problem:    Using 'cindent' for Javascript is less than perfect. Solution:   Improve indenting of continuation lines. (Hirohito Higashi)
updated for version 7.4.669 Problem:    When netbeans is active the sign column always shows up. Solution:   Only show the sign column once a sign has been added. (Xavier de             Gaye)
updated for version 7.4.668 Problem:    Can't use a glob pattern as a regexp pattern. Solution:   Add glob2regpat(). (Christian Brabandt)
updated for version 7.4.667 Problem:    'colorcolumn' isn't drawn in a closed fold while 'cursorcolumn'             is. (Carlos Pita) Solution:   Make it consistent. (Christian Brabandt)
updated for version 7.4.666 Problem:    There is a chance that Vim may lock up. Solution:   Handle timer events differently. (Aaron Burrow)
updated for version 7.4.665 Problem:    'linebreak' does not work properly with multi-byte characters. Solution:   Compute the pointer offset with mb_head_off().  (Yasuhiro             Matsumoto)
updated for version 7.4.664 Problem:    When 'compatible' is reset 'numberwidth' is set to 4, but the             effect doesn't show until a change is made. Solution:   Check if 'numberwidth' changed. (Christian Brabandt)
updated for version 7.4.663 Problem:    When using netbeans a buffer is not found in another tab. Solution:   When 'switchbuf' is set to "usetab" then switch to another tab             when possible. (Xavier de Gaye)
updated for version 7.4.662 Problem:    When 'M' is in the 'cpo' option then selecting a text object in             parenthesis does not work correctly. Solution:   Keep 'M' in 'cpo' when finding a match. (Hirohito Higashi)
updated for version 7.4.661 Problem:    Using "0 CTRL-D" in Insert mode may have CursorHoldI interfere.             (Gary Johnson) Solution:   Don't store K_CURSORHOLD as the last character. (Christian             Brabandt)
updated for version 7.4.660 Problem:    Using freed memory when g:colors_name is changed in the colors             script. (oni-link) Solution:   Make a copy of the variable value.
updated for version 7.4.659 Problem:    When 'ruler' is set the preferred column is reset. (Issue 339) Solution:   Don't set curswant when redrawing the status lines.
updated for version 7.4.658 Problem:    'formatexpr' is evaluated too often. Solution:   Only invoke it when beyond the 'textwidth' column, as it is             documented. (James McCoy)
updated for version 7.4.657 Problem:    Compiler warnings for pointer mismatch. Solution:   Add a typecast. (John Marriott)
updated for version 7.4.656 Problem:    Missing changes for glob() in one file. Solution:   Add the missing changes.
updated for version 7.4.655 Problem:    Text deleted by "dit" depends on indent of closing tag.             (Jan Parthey) Solution:   Do not adjust oap->end in do_pending_operator(). (Christian             Brabandt)
updated for version 7.4.654 Problem:    glob() and globpath() cannot include links to non-existing files.             (Charles Campbell) Solution:   Add an argument to include all links with glob(). (James McCoy)             Also for globpath().
updated for version 7.4.653 Problem:    Insert mode completion with complete() may have CTRL-L work like             CTRL-P. Solution:   Handle completion with complete() differently. (Yasuhiro             Matsumoto, Christian Brabandt, Hirohito Higashi)
updated for version 7.4.652 Problem:    Xxd lacks a few features. Solution:   Use 8 characters for the file position.  Add the -e and -o             arguments. (Vadim Vygonets)
updated for version 7.4.651 Problem:    Can't match "%>80v" properly for multi-byte characters. Solution:   Multiply the character number by the maximum number of bytes in a             character. (Yasuhiro Matsumoto)
updated for version 7.4.650 Problem:    Configure check may fail because the dl library is not used. Solution:   Put "-ldl" in LIBS rather than LDFLAGS. (Oazki Kiichi)
updated for version 7.4.649 Problem:    Compiler complains about ignoring return value of fwrite().             (Michael Jarvis) Solution:   Add (void).
Update a few runtime files.
Updated runtime files.
updated for version 7.4.648 Problem:    Tests broken on MS-Windows. Solution:   Delete wrong copy line. (Ken Takata)
updated for version 7.4.647 Problem:    After running the tests on MS-Windows many files differ from their             originals as they were checked out. Solution:   Use a temp directory for executing the tests. (Ken Takata, Taro             Muraoka)
updated for version 7.4.646 Problem:    ":bufdo" may start at a deleted buffer. Solution:   Find the first not deleted buffer. (Shane Harper)
updated for version 7.4.645 Problem:    When splitting the window in a BufAdd autocommand while still in             the first, empty buffer the window count is wrong. Solution:   Do not reset b_nwindows to zero and don't increment it.
updated for version 7.4.644 Problem:    Stratus VOS doesn't have sync(). Solution:   Use fflush(). (Karli Aurelia)
updated for version 7.4.643 Problem:    Using the default file format for Mac files. (Issue 77) Solution:   Reset the try_mac counter in the right place. (Oswald)
updated for version 7.4.642 Problem:    When using "gf" escaped spaces are not handled. Solution:   Recognize escaped spaces.
updated for version 7.4.641 Problem:    The tabline menu was using ":999tabnew" which is now invalid. Solution:   Use ":$tabnew" instead. (Florian Degner)
updated for version 7.4.640 Problem:    After deleting characters in Insert mode such that lines are             joined undo does not work properly. (issue 324) Solution:   Use Insstart instead of Insstart_orig. (Christian Brabandt)
updated for version 7.4.638 Problem:    Can't build with Lua 5.3 on Windows. Solution:   use luaL_optinteger() instead of LuaL_optlong(). (Ken Takata)
updated for version 7.4.637 Problem:    Incorrectly read the number of buffer for which an autocommand             should be registered. Solution:   Reverse check for "<buffer=abuf>". (Lech Lorens)
Add missing test files from 7.4.634 to the repository.
updated for version 7.4.636 Problem:    A search with end offset gets stuck at end of file. (Gary Johnson) Solution:   When a search doesn't move the cursor repeat it with a higher             count. (Christian Brabandt)
updated for version 7.4.635 Problem:    If no NL or CR is found in the first block of a file then the             'fileformat' may be set to "mac". (Issue 77) Solution:   Check if a CR was found. (eswald)
updated for version 7.4.633 Problem:    After 7.4.630 the problem persists. Solution:   Also skip redo when calling a user function.
updated for version 7.4.632 Problem:    7.4.592 breaks the netrw plugin, because the autocommands are             skipped. Solution:   Roll back the change.
updated for version 7.4.631 Problem:    The default conceal character is documented to be a space but it's             initially a dash. (Christian Brabandt) Solution:   Make the intial value a space.
updated for version 7.4.630 Problem:    When using Insert mode completion combined with autocommands the             redo command may not work. Solution:   Do not save the redo buffer when executing autocommands. (Yasuhiro             Matsumoto)
updated for version 7.4.629 Problem:    Coverity warning for Out-of-bounds read. Solution:   Increase MAXWLEN to 254. (Eliseo Martínez)
updated for version 7.4.628 Problem:    Compiler warning for variable might be clobbered by longjmp. Solution:   Add volatile. (Michael Jarvis)
updated for version 7.4.627 Problem:    The last screen cell is not updated. Solution:   Respect the "tn" termcap feature. (Hayaki Saito)
updated for version 7.4.626 Problem:    MSVC with W4 gives useless warnings. Solution:   Disable more warnings. (Mike Williams)
updated for version 7.4.625 Problem:    Possible NULL pointer dereference. Solution:   Check for NULL before using it. (Mike Williams)
updated for version 7.4.624 Problem:    May leak memory or crash when vim_realloc() returns NULL. Solution:   Handle a NULL value properly. (Mike Williams)
updated for version 7.4.623 Problem:    Crash with pattern: \(\)\{80000}  (Dominique Pelle) Solution:   When the max limit is large fall back to the old engine.
updated for version 7.4.622 Problem:    Compiler warning for unused argument. Solution:   Add UNUSED.
updated for version 7.4.621 Problem:    Returning 1 in the wrong function. (Raymond Ko) Solution:   Return 1 in the right function (hopefully).
updated for version 7.4.620 Problem:    Compiler warning for unitinialized variable. (Tony Mechelynck) Solution:   Initialize "did_free". (Ben Fritz)
updated for version 7.4.619 Problem:    luaV_setref() not returning the correct value. Solution:   Return one.
updated for version 7.4.618 Problem:    luaV_setref() is missing a return statement. (Ozaki Kiichi) Solution:   Put the return statement back.
Update runtime files.
updated for version 7.4.617 Problem:    Wrong ":argdo" range does not cause an error. Solution:   Reset "cmd" to NULL. (Marcin Szamotulski, Ingo Karkat)
updated for version 7.4.616 Problem:    Cannot insert a tab in front of a block. Solution:   Correctly compute aop->start. (Christian Brabandt)
updated for version 7.4.615 Problem:    Vim hangs when freeing a lot of objects. Solution:   Do not go back to the start of the list every time.  (Yasuhiro             Matsumoto and Ariya Mizutani)
updated for version 7.4.614 Problem:    There is no test for what patch 7.4.601 fixes. Solution:   Add a test. (Christian Brabandt)
updated for version 7.4.613 Problem:    The NFA engine does not implement the 'redrawtime' time limit. Solution:   Implement the time limit.
updated for version 7.4.612 Problem:    test_eval fails on Mac. Solution:   Use the * register instead of the + register. (Jun Takimoto)
updated for version 7.4.611 Problem:    Syntax error. Solution:   Change statement to return.
updated for version 7.4.610 Problem:    Some function headers may be missing from generated .pro files. Solution:   Add PROTO to the #ifdef.
updated for version 7.4.609 Problem:    For complicated list and dict use the garbage collector can run             out of stack space. Solution:   Use a stack of dicts and lists to be marked, thus making it             iterative instead of recursive. (Ben Fritz)
updated for version 7.4.608 Problem:    test_eval fails when the clipboard feature is missing. Solution:   Skip part of the test. Reduce the text used.
updated for version 7.4.607 Problem:    Compiler warnings for unused variables. Solution:   Move them inside #ifdef. (Kazunobu Kuriyama)
updated for version 7.4.606 Problem:    May crash when using a small window. Solution:   Avoid dividing by zero. (Christian Brabandt)
updated for version 7.4.605 Problem:    The # register is not writable, it cannot be restored after             jumping around. Solution:   Make the # register writable. (Marcin Szamotulski)
updated for version 7.4.604 Problem:    Running tests changes viminfo. Solution:   Disable viminfo.
updated for version 7.4.603 Problem:    'foldcolumn' may be set such that it fills the whole window, not             leaving space for text. Solution:   Reduce the foldcolumn width when there is not sufficient room.             (idea by Christian Brabandt)
updated for version 7.4.602 Problem:    ":set" does not accept hex numbers as documented. Solution:   Use vim_str2nr(). (ZyX)
updated for version 7.4.601 Problem:    It is not possible to have feedkeys() insert characters. Solution:   Add the 'i' flag.
updated for version 7.4.600 Problem:    Memory wasted in struct because of aligning. Solution:   Split pos in lnum and col. (Dominique Pelle)
updated for version 7.4.599 Problem:    Out-of-memory error. Solution:   Avoid trying to allocate a negative amount of memory, use size_t             instead of int. (Dominique Pelle)
updated for version 7.4.598 Problem:    ":tabdo windo echo 'hi'" causes "* register not to be changed.             (Salman Halim) Solution:   Change how clip_did_set_selection is used and add             clipboard_needs_update and global_change_count.  (Christian             Brabandt)
updated for version 7.4.597 Problem:    Cannot change the result of systemlist(). Solution:   Initialize v_lock. (Yukihiro Nakadaira)
updated for version 7.4.596 Problem:    Tiny build doesn't compile.  (Ike Devolder) Solution:   Add #ifdef.
updated for version 7.4.595 Problem:    The test_command_count test fails when using Japanese. Solution:   Force the language to C. (Hirohito Higashi)
updated for version 7.4.594 Problem:    Using a block delete while 'breakindent' is set does not work             properly. Solution:   Use "line" instead of "prev_pend" as the first argument to             lbr_chartabsize_adv().  (Hirohito Higashi)
updated for version 7.4.593 Problem:    Crash when searching for "x\{0,90000}". (Dominique Pelle) Solution:   Bail out from the NFA engine when the max limit is much higher             than the min limit.
updated for version 7.4.592 Problem:    When doing ":e foobar" when already editing "foobar" and 'buftype'             is "nofile" the buffer is cleared. (Xavier de Gaye) Solution:   Do no clear the buffer.
Update runtime files.
updated for version 7.4.591 Problem:    test_listlbr_utf8 fails when the conceal feature is not available. Solution:   Check for the conceal feature. (Kazunobu Kuriyama)
updated for version 7.4.590 Problem:    Using ctrl_x_mode as if it contains flags. Solution:   Don't use AND with CTRL_X_OMNI. (Hirohito Higashi)
updated for version 7.4.589 Problem:    In the MS-Windows console Vim can't handle greek characters when             encoding is utf-8. Solution:   Escape K_NUL. (Yasuhiro Matsumoto)
updated for version 7.4.588 Problem:    ":0argedit foo" puts the new argument in the second place instead             of the first. Solution:   Adjust the range type. (Ingo Karkat)
updated for version 7.4.587 Problem:    Conceal does not work properly with 'linebreak'. (cs86661) Solution:   Save and restore boguscols. (Christian Brabandt)
updated for version 7.4.586 Problem:    Parallel building of the documentation html files is not reliable. Solution:   Remove a cyclic dependency. (Reiner Herrmann)
updated for version 7.4.585 Problem:    Range for :bdelete does not work. (Ronald Schild) Solution:   Also allow unloaded buffers.
updated for version 7.4.584 Problem:    With tiny features test_command_count may fail. Solution:   Source small.vim. (Christian Brabandt)
updated for version 7.4.583 Problem:    With tiny features test 16 may fail. Solution:   Source small.vim. (Christian Brabandt)
updated for version 7.4.582 Problem:    Can't match "%>80v" properly. (Axel Bender) Solution:   Correctly handle ">". (Christian Brabandt)
updated for version 7.4.581 Problem:    Compiler warnings for unitinialized variables. (John Little) Solution:   Initialize the variables.
updated for version 7.4.580 Problem:    ":52wincmd v" still gives an invalid range error. (Charles             Campbell) Solution:   Skip over white space.
Updated runtime files.
updated for version 7.4.579 Problem:    Wrong cursor positioning when 'linebreak' is set and lines wrap. Solution:   (Christian Brabandt)
updated for version 7.4.578 Problem:    Using getcurpos() after "$" in an empty line returns a negative             number. Solution:   Don't add one when this would overflow. (Hirohito Higashi)
updated for version 7.4.577 Problem:    Matching with a virtual column has a lot of overhead on very long             lines. (Issue 310) Solution:   Bail out early if there can't be a match. (Christian Brabandt)             Also check for CTRL-C at every position.
updated for version 7.4.576 Problem:    Redrawing problem with 'relativenumber' and 'linebreak'. Solution:   Temporarily reset 'linebreak' and restore it in more places.             (Christian Brabandt)
updated for version 7.4.575 Problem:    Unicode character properties are outdated. Solution:   Update the tables with the latest version.
updated for version 7.4.574 Problem:    No error for eval('$'). Solution:   Check for empty name. (Yasuhiro Matsumoto)
updated for version 7.4.573 Problem:    Mapping CTRL-C in Visual mode doesn't work. (Ingo Karkat) Solution:   Call get_real_state() instead of using State directly.
updated for version 7.4.572 Problem:    Address type of :wincmd depends on the argument. Solution:   Check the argument.
updated for version 7.4.571 Problem:    Can't build with tiny features. (Ike Devolder) Solution:   Add #ifdef.
updated for version 7.4.570 Problem:    Building with dynamic library does not work for Ruby 2.2.0 Solution:   Change #ifdefs and #defines. (Ken Takata)
Updated runtime files.
updated for version 7.4.569 Problem:    Having CTRL-C interrupt or not does not check the mode of the             mapping. (Ingo Karkat) Solution:   Use a bitmask with the map mode. (Christian Brabandt)
updated for version 7.4.568 Problem:    Giving an error for ":0wincmd w" is a problem for some plugins. Solution:   Allow the zero in the range. (Marcin Szamotulski)
Updated syntax files.
updated for version 7.4.567 Problem:    Non-ascii vertical separater characters are always redrawn. Solution:   Compare only the one byte that's stored. (Thiago Padilha)
Update runtime files.
updated for version 7.4.566 Problem:    :argdo, :bufdo, :windo and :tabdo don't take a range. Solution:   Support the range. (Marcin Szamotulski)
updated for version 7.4.565 Problem:    Ranges for arguments, buffers, tabs, etc. are not checked to be             valid but limited to the maximum.  This can cause the wrong thing             to happen. Solution:   Give an error for an invalid value. (Marcin Szamotulski)             Use windows range for ":wincmd".
updated for version 7.4.564 Problem:    FEAT_OSFILETYPE is used even though it's never defined. Solution:   Remove the code. (Christian Brabandt)
updated for version 7.4.563 Problem:    No test for replacing on a tab in Virtual replace mode. Solution:   Add a test. (Elias Diem)
updated for version 7.4.562 Problem:    Segfault with wide screen and error in 'rulerformat'. (Ingo Karkat) Solution:   Check there is enough space. (Christian Brabandt)
updated for version 7.4.561 Problem:    Ex range handling is wrong for buffer-local user commands. Solution:   Check for CMD_USER_BUF. (Marcin Szamotulski)
updated for version 7.4.560 Problem:    Memory leak using :wviminfo. Issue 296. Solution:   Free memory when needed. (idea by Christian Brabandt)
updated for version 7.4.559 Problem:    Appending a block in the middle of a tab does not work correctly             when virtualedit is set. Solution:   Decrement spaces and count, don't reset them. (James McCoy)
updated for version 7.4.558 Problem:    When the X server restarts Vim may get stuck. Solution:   Destroy the application context and create it again.  (Issue 203)
updated for version 7.4.557 Problem:    One more small issue. Solution:   Update function proto.
updated for version 7.4.556 Problem:    Failed commands in Python interface not handled correctly. Solution:   Restore window and buffer on failure.
updated for version 7.4.555 Problem:    test_close_count may fail for some combination of features. Solution:   Require normal features.
updated for version 7.4.554 Problem:    Missing part of patch 7.4.519. Solution:   Copy back regprog after calling vim_regexec.
Updated runtime files.
updated for version 7.4.552 Problem:    Langmap applies to Insert mode expression mappings. Solution:   Check for Insert mode. (Daniel Hahler)
updated for version 7.4.551 Problem:    "ygn" may yank too much. (Fritzophrenic)  Issue 295. Solution:   Check the width of the next match. (Christian Brabandt)
updated for version 7.4.550 Problem:    curs_rows() function is always called with the second argument             false. Solution:   Remove the argument. (Christian Brabandt)             validate_botline_win() can then also be removed.
Add new files for 7.4.549.
updated for version 7.4.549 Problem:    Function name not recognized correctly when inside a function. Solution:   Don't check for an alpha character.
updated for version 7.4.548 Problem:    Function name not recognized correctly when inside a function. Solution:   Don't check for an alpha character.
updated for version 7.4.547 Problem:    Using "vit" does not select a multi-byte character at the end             correctly. Solution:   Advance the cursor over the multi-byte character. (Christian             Brabandt)
updated for version 7.4.546 Problem:    Repeated use of vim_snprintf() with a number. Solution:   Move these vim_snprintf() calls into a function.
updated for version 7.4.545 Problem:    Highlighting for multi-line matches is not correct. Solution:   Stop highlight at the end of the match. (Hirohito Higashi)
updated for version 7.4.544 Problem:    Warnings for unused arguments when compiling with a combination of             features. Solution:   Add "UNUSED".
updated for version 7.4.543 Problem:    Since patch 7.4.232 "1,3s/\n//" joins two lines instead of three.             (Eliseo Martínez)  Issue 287 Solution:   Correct the line count. (Christian Brabandt)             Also set the last used search pattern.
updated for version 7.4.541 Problem:    Crash when doing a range assign. Solution:   Check for NULL poiter. (Yukihiro Nakadaira)
Update runtime files.
updated for version 7.4.540 Problem:    Cannot build with tiny and small features. (Taro Muraoka) Solution:   Add #ifdef around CMD_USER.
updated for version 7.4.539 Problem:    Crash when computing buffer count.  Problem with range for user             commands.  Line range wrong in Visual area. Solution:   Avoid segfault in compute_buffer_local_count().  Check for             CMD_USER when checking type of range. (Marcin Szamotulski)
updated for version 7.4.538 Problem:    Tests fail with small features plus Python. Solution:   Disallow weird combination of options.  Do not set "fdm" when             folding is disabled.
updated for version 7.4.537 Problem:    Value of v:hlsearch reflects an internal variable. Solution:   Make the value reflect whether search highlighting is actually             displayed. (Christian Brabandt)
updated for version 7.4.536 Problem:    Test 63 fails when using a black&white terminal. Solution:   Add attributes for a non-color terminal. (Christian Brabandt)
updated for version 7.4.535 Problem:    Can't build with tiny features. Solution:   Add #ifdefs and skip a test.
Add files added by patch 7.4.530 to the repository.
updated for version 7.4.534 Problem:    Warnings when compiling if_ruby.c. Solution:   Avoid the warnings. (Ken Takata)
updated for version 7.4.533 Problem:    ":hardcopy" leaks memory in case of errors. Solution:   Free memory in all code paths. (Christian Brabandt)
updated for version 7.4.532 Problem:    When using 'incsearch' "2/pattern/e" highlights the first match. Solution:   Move the code to set extra_col inside the loop for count.  (Ozaki             Kiichi)
updated for version 7.4.531 Problem:    Comments about parsing an Ex command are wrong. Solution:   Correct the steop numbers.
updated for version 7.4.530 Problem:    Many commands take a count or range that is not using line             numbers. Solution:   For each command specify what kind of count it uses.  For windows,             buffers and arguments have "$" and "." have a relevant meaning.             (Marcin Szamotulski)
updated for version 7.4.529 Problem:    No test for what 7.4.517 fixes. Solution:   Adjust the tests for breakindent. (Christian Brabandt)
updated for version 7.4.528 Problem:    Crash when using matchadd() (Yasuhiro Matsumoto) Solution:   Copy the match regprog.
updated for version 7.4.527 Problem:    Still confusing regexp failure and NFA_TOO_EXPENSIVE. Solution:   NFA changes equivalent of 7.4.526.
updated for version 7.4.526 Problem:    matchstr() fails on long text. Daniel Hahler) Solution:   Return NFA_TOO_EXPENSIVE from regexec_nl(). (Christian Brabandt)
updated for version 7.4.525 Problem:    map() leaks memory when there is an error in the expression. Solution:   Call clear_tv(). (Christian Brabandt)
updated for version 7.4.524 Problem:    When using ":ownsyntax" spell checking is messed up. (Issue 78) Solution:   Use the window-local option values. (Christian Brabandt)
Update runtime files.
updated for version 7.4.523 Problem:    When the X11 server is stopped and restarted, while Vim is kept in             the background, copy/paste no longer works. (Issue 203) Solution:   Setup the clipboard again. (Christian Brabandt)
updated for version 7.4.522 Problem:    Specifying wrong buffer size for GetLongPathName(). Solution:   Use the actual size. (Ken Takata)
updated for version 7.4.521 Problem:    When using "vep" a mark is moved to the next line. (Maxi Padulo,             Issue 283) Solution:   Decrement the line number. (Christian Brabandt)
updated for version 7.4.520 Problem:    Sun PCK locale is not recognzed. Solution:   Add PCK in the table. (Keiichi Oono)
updated for version 7.4.519 Problem:    Crash when using syntax highlighting. Solution:   When regprog is freed and replaced, store the result.
updated for version 7.4.518 Problem:    Using status line height in width computations. Solution:   Use one instead. (Hirohito Higashi)
updated for version 7.4.517 Problem:    With a wrapping line the cursor may not end up in the right place.             (Nazri Ramliy) Solution:   Adjust n_extra for a Tab that wraps. (Christian Brabandt)
Update translations.
Update runtime files.
updated for version 7.4.516 Problem:    Completing a function name containing a # does not work.  Issue             253. Solution:   Recognize the # character. (Christian Brabandt)
updated for version 7.4.515 Problem:    In a help buffer the global 'foldmethod' is used.  (Paul Marshall) Solution:   Reset 'foldmethod' when starting to edit a help file.  Move the             code to a separate function.
updated for version 7.4.514 Problem:    Memory access error. (Dominique Pelle) Solution:   Update tpos. (Christian Brabandt)
updated for version 7.4.513 Problem:    Crash because reference count is wrong for list returned by             getreg(). Solution:   Increment the reference count. (Kimmy Lindvall)
updated for version 7.4.512 Problem:    Cannot generate prototypes for Win32 files and VMS. Solution:   Add typedefs and #ifdef
updated for version 7.4.511 Problem:    Generating proto for if_ruby.c uses type not defined elsewhere. Solution:   Do not generate a prototype for             rb_gc_writebarrier_unprotect_promoted()
updated for version 7.4.510 Problem:    "-fwrapv" argument breaks use of cproto. Solution:   Remove the alphabetic arguments in a drastic way.
updated for version 7.4.509 Problem:    Users are not aware their encryption is weak. Solution:   Give a warning when prompting for the key.
updated for version 7.4.508 Problem:    When generating ja.sjis.po the header is not correctly adjusted. Solution:   Check for the right header string. (Ken Takata)
updated for version 7.4.507 Problem:    Building with MingW and Perl. Solution:   Remove quotes. (Ken Takata)
updated for version 7.4.505 Problem:    On MS-Windows when 'encoding' is a double-byte encoding a file             name longer than MAX_PATH bytes but shorter than that in             characters causes problems. Solution:   Fail on file names longer than MAX_PATH bytes. (Ken Takata)
updated for version 7.4.504 Problem:    Restriction of the MS-Windows installer that the path must end in             "Vim" prevents installing more than one version. Solution:   Remove the restriction. (Tim Lebedkov)
updated for version 7.4.503 Problem:    Cannot append a list of lines to a file. Solution:   Add the append option to writefile(). (Yasuhiro Matsumoto)
updated for version 7.4.502 Problem:    Language mapping also applies to mapped characters. Solution:   Add the 'langnoremap' option, when on 'langmap' does not apply to             mapped characters. (Christian Brabandt)
updated for version 7.4.501 Problem:    Typo in file pattern. Solution:   Insert a slash and remove a dot.
Update runtime files.
updated for version 7.4.500 Problem:    Test 72 still fails once in a while. Solution:   Don't set 'fileformat' to unix, reset it. (Ken Takata)
updated for version 7.4.499 Problem:    substitute() can be slow with long strings. Solution:   Store a pointer to the end, instead of calling strlen() every             time. (Ozaki Kiichi)
updated for version 7.4.498 Problem:    Typo in DOS makefile. Solution:   Change exists to exist. (Ken Takata)
updated for version 7.4.497 Problem:    With some regexp patterns the NFA engine uses many states and             becomes very slow.  To the user it looks like Vim freezes. Solution:   When the number of states reaches a limit fall back to the old             engine. (Christian Brabandt)
updated for version 7.4.496 Problem:    Many lines are both in Make_cyg.mak and Make_ming.mak Solution:   Move the common parts to one file. (Ken Takata)
updated for version 7.4.495 Problem:    XPM isn't used correctly in the Cygwin Makefile. Solution:   Include the rules like in Make_ming.mak. (Ken Takata)
updated for version 7.4.494 Problem:    Cursor shape is wrong after a CompleteDone autocommand. Solution:   Update the cursor and mouse shape after ":normal" restores the             state. (Jacob Niehus)
updated for version 7.4.493 Problem:    A TextChanged autocommand is triggered when saving a file.             (William Gardner) Solution:   Update last_changedtick after calling unchanged(). (Christian             Brabandt)
updated for version 7.4.492 Problem:    In Insert mode, after inserting a newline that inserts a comment             leader, CTRL-O moves to the right. (ZyX) Issue 57. Solution:   Correct the condition for moving the cursor back to the NUL.             (Christian Brabandt)
updated for version 7.4.491 Problem:    When winrestview() has a negative "topline" value there are             display errors. Solution:   Correct a negative value to 1. (Hirohito Higashi)
updated for version 7.4.490 Problem:    Cannot specify the buffer to use for "do" and "dp", making them             useless for three-way diff. Solution:   Use the count as the buffer number. (James McCoy)
updated for version 7.4.489 Problem:    Cursor movement still wrong when 'lbr' is set and there is a             number column. (Hirohito Higashi) Solution:   Add correction for number column. (Hiroyuki Takagi)
updated for version 7.4.488 Problem:    test_mapping fails for some people. Solution:   Set the 'encoding' option. (Ken Takata)
Add the missing test files.
updated for version 7.4.487 Problem:    ":sign jump" may use another window even though the file is             already edited in the current window. Solution:   First check if the file is in the current window. (James McCoy)
updated for version 7.4.486 Problem:    Check for writing to a yank register is wrong. Solution:   Negate the check. (Zyx).  Also clean up the #ifdefs.
updated for version 7.4.485 Problem:    Abbreviations don't work. (Toothpik) Solution:   Move the length computation inside the for loop.  Compare against             the unescaped key.
updated for version 7.4.484 Problem:    Compiler warning on MS-Windows. (Ken Takata) Solution:   Add type cast.
updated for version 7.4.483 Problem:    A 0x80 byte is not handled correctly in abbreviations. Solution:   Unescape special characters. Add a test. (Christian Brabandt)
updated for version 7.4.482 Problem:    When 'balloonexpr' results in a list, the text has a trailing             newline. (Lcd) Solution:   Remove one trailing newline.
updated for version 7.4.481 Problem:    Compiler warning on MS-Windows. Solution:   Add type casts. (Ken Takata)
updated for version 7.4.480 Problem:    MS-Windows: Can't build. Solution:   Remove goto, use a flag instead.
Update runtime files and translations.
updated for version 7.4.479 Problem:    MS-Windows: The console title can be wrong. Solution:   Take the encoding into account. When restoring the title use the             right function. (Yasuhiro Matsumoto)
updated for version 7.4.478 Problem:    Using byte length instead of character length for 'showbreak'. Solution:   Compute the character length. (Marco Hinz)
updated for version 7.4.477 Problem:    When using ":%diffput" and the other file is empty an extra empty             line remains. Solution:   Set the buf_empty flag.
updated for version 7.4.476 Problem:    MingW: compiling with "XPM=no" doesn't work. Solution:   Check for the "no" value. (KF Leong)  Also for Cygwin. (Ken             Takata)
updated for version 7.4.475 Problem:    Can't compile on a system where Xutf8SetWMProperties() is not in             the X11 library.  Issue 265. Solution:   Add a configure check.
updated for version 7.4.474 Problem:    AIX compiler can't handle // comment.  Issue 265. Solution:   Remove that line.
updated for version 7.4.473 Problem:    Cursor movement is incorrect when there is a number             column/sign/fold column and 'sbr' is displayed. Solution:   Adjust the column for 'sbr'. (Christian Brabandt)
updated for version 7.4.472 Problem:    The "precedes" entry in 'listchar' will be drawn when 'showbreak             is set and list is not. Solution:   Only draw this character when 'list' is on. (Christian Brabandt)
updated for version 7.4.471 Problem:    MS-Windows: When printer name contains multi-byte, the name is             displayed as ???. Solution:   Convert the printer name from the active codepage to 'encoding'.             (Yasuhiro Matsumoto)
updated for version 7.4.470 Problem:    Test 11 and 100 do not work properly on Windows. Solution:   Avoid using feedkeys(). (Ken Takata)
updated for version 7.4.469 Problem:    Can't build with MSVC. (Ken Takata) Solution:   Move the assignment after the declarations.
updated for version 7.4.468 Problem:    Issue 26: CTRL-C does not interrupt after it was mapped and then             unmapped. Solution:   Reset mapped_ctrl_c. (Christian Brabandt)
updated for version 7.4.467
updated for version 7.4.466 Problem:    CTRL-W } does not open preview window. (Erik Falor) Solution:   Don't set g_do_tagpreview for CTRL-W }.
updated for version 7.4.465 Problem:    Crash when expanding a very long string. Solution:   Use wsncpy() instead of wcscpy(). (Ken Takata)
updated for version 7.4.464 Problem:    Compiler warning. Solution:   Add type cast. (Ken Takata)
Update runtime files.
updated for version 7.4.463 Problem:    Test 86 and 87 may hang on MS-Windows. Solution:   Call inputrestore() after inputsave(). (Ken Takata)
updated for version 7.4.462 Problem:    Setting the local value of 'backupcopy' empty gives an error.             (Peter Mattern) Solution:   When using an empty value set the flags to zero. (Hirohito             Higashi)
updated for version 7.4.461 Problem:    MS-Windows: When collate is on the number of copies is too high. Solution:   Only set the collated/uncollated count when collate is on.             (Yasuhiro Matsumoto)
updated for version 7.4.460 Problem:    Can't build without the quickfix feature. (Erik Falor) Solution:   Add a #ifdef.
updated for version 7.4.459 Problem:    Can't change the icon after building Vim. Solution:   Load the icon from a file on startup. (Yasuhiro Matsumoto)
updated for version 7.4.458 Problem:    Issue 252: Cursor moves in a zero-height window. Solution:   Check for zero height. (idea by Christian Brabandt)
updated for version 7.4.457 Problem:    Using getchar() in an expression mapping may result in             K_CURSORHOLD, which can't be recognized. Solution:   Add the <CursorHold> key.  (Hirohito Higashi)
updated for version 7.4.456 Problem:    'backupcopy' is global, cannot write only some files in a             different way. Solution:   Make 'backupcopy' global-local. (Christian Brabandt)
updated for version 7.4.455 Problem:    Completion for :buf does not use 'wildignorecase'. (Akshay H) Solution:   Pass the 'wildignorecase' flag around.
updated for version 7.4.454 Problem:    When using a Visual selection of multiple words and doing CTRL-W_]             it jumps to the tag matching the word under the cursor, not the             selected text.  (Patrick hemmer) Solution:   Do not reset Visual mode. (idea by Christian Brabandt)
Updated runtime files.
updated for version 7.4.453 Problem:    Still can't build with tiny features. Solution:   Add #ifdef.
updated for version 7.4.452 Problem:    Can't build with tiny features. (Tony Mechelynck) Solution:   Use "return" instead of "break".
updated for version 7.4.451 Problem:    Calling system() with empty input gives an error for writing the             temp file. Solution:   Do not try writing if the string length is zero. (Olaf Dabrunz)
updated for version 7.4.450 Problem:    Not all commands that edit another buffer support the +cmd             argument. Solution:   Add the +cmd argument to relevant commands. (Marcin Szamotulski)
updated for version 7.4.449 Problem:    Can't easily close the help window. (Chris Gaal) Solution:   Add ":helpclose". (Christian Brabandt)
updated for version 7.4.448 Problem:    Using ETO_IGNORELANGUAGE causes problems. Solution:   Remove this flag. (Paul Moore)
updated for version 7.4.447 Problem:    Spell files from Hunspell may generate a lot of errors. Solution:   Add the IGNOREEXTRA flag.
updated for version 7.4.446 Problem:    In some situations, when setting up an environment to trigger an             autocommand, the environment is not properly restored. Solution:   Check the return value of switch_win() and call restore_win()             always.  (Daniel Hahler)
updated for version 7.4.445 Problem:    Clipboard may be cleared on startup. Solution:   Set clip_did_set_selection to -1 during startup. (Christian             Brabandt)
updated for version 7.4.444 Problem:    Reversed question mark not recognized as punctuation. (Issue 258) Solution:   Add the Supplemental Punctuation range.
updated for version 7.4.443 Problem:    Error reported by ubsan when running test 72. Solution:   Add type cast to unsigned. (Dominique Pelle)
updated for version 7.4.442 Problem:    Using unitinialized variable. Solution:   Pass the first window of the tabpage.
Update runtime files.
updated for version 7.4.441 Problem:    Endless loop and other problems when 'cedit' is set to CTRL-C. Solution:   Do not call ex_window() when ex_normal_busy or got_int was set.             (Yasuhiro Matsumoto)
updated for version 7.4.440 Problem:    Omni complete popup drawn incorrectly. Solution:   Call validate_cursor() instead of check_cursor(). (Hirohito             Higashi)
updated for version 7.4.439 Problem:    Duplicate message in message history.  Some quickfix messages             appear twice. (Gary Johnson) Solution:   Do not reset keep_msg too early. (Hirohito Higashi)
updated for version 7.4.438 Problem:    Cached values for 'cino' not reset for ":set all&". Solution:   Call parse_cino(). (Yukihiro Nakadaira)
updated for version 7.4.437 Problem:    New and old regexp engine are not consistent. Solution:   Also give an error for "\ze*" for the old regexp engine.
updated for version 7.4.436 Problem:    ml_get error for autocommand that moves the cursor of the current             window. Solution:   Check the cursor position after switching back to the current             buffer.  (Christian Brabandt)
updated for version 7.4.435 Problem:    Line formatting behaves differently when 'linebreak' is set.             (mvxxc) Solution:   Disable 'linebreak' temporarily. (Christian Brabandt)
updated for version 7.4.434 Problem:    gettabvar() is not consistent with getwinvar() and getbufvar(). Solution:   Return a dict with all variables when the varname is empty.             (Yasuhiro Matsumoto)
updated for version 7.4.433 Problem:    Test 75 fails on MS-Windows. Solution:   Use ":normal" instead of feedkeys(). (Michael Soyka)
updated for version 7.4.432 Problem:    When the startup code expands command line arguments, setting             'encoding' will not properly convert the arguments. Solution:   Call get_cmd_argsW() early in main(). (Yasuhiro Matsumoto)
updated for version 7.4.431 Problem:    Compiler warning. Solution:   Add type cast. (Mike Williams)
updated for version 7.4.430 Problem:    test_listlbr fails when compiled with normal features. Solution:   Check for the +conceal feature.
updated for version 7.4.429 Problem:    Build fails with fewer features. (Elimar Riesebieter) Solution:   Add #ifdef.
updated for version 7.4.428 Problem:    executable() may return a wrong result on MS-Windows. Solution:   Change the way SearchPath() is called. (Yasuhiro Matsumoto, Ken             Takata)
updated for version 7.4.427 Problem:    When an InsertCharPre autocommand executes system() typeahead may             be echoed and messes up the display. (Jacob Niehus) Solution:   Do not set cooked mode when invoked from ":silent".
updated for version 7.4.426 Problem:    README File missing from list of files. Solution:   Update the list of files.
Update runtime files.
updated for version 7.4.425 Problem:    When 'showbreak' is used "gj" may move to the wrong position.             (Nazri Ramliy) Solution:   Adjust virtcol when 'showbreak' is set. (Christian Brabandt)
updated for version 7.4.424 Problem:    Get ml_get error when using Python to delete lines in a buffer             that is not in a window.  issue 248. Solution:   Do not try adjusting the cursor for a different buffer.
updated for version 7.4.423 Problem:    expand("$shell") does not work as documented. Solution:   Do not escape the $ when expanding environment variables.
updated for version 7.4.422 Problem:    When using conceal with linebreak some text is not displayed             correctly. (Grüner Gimpel) Solution:   Check for conceal mode when using linebreak. (Christian Brabandt)
updated for version 7.4.421 Problem:    Crash when searching for "\ze*". (Urtica Dioica) Solution:   Disallow a multi after \ze and \zs.
updated for version 7.4.420 Problem:    It's not obvious how to add a new test. Solution:   Add a README file. (Christian Brabandt)
updated for version 7.4.419 Problem:    Whan part of a list is locked it's possible to make changes. Solution:   Check if any of the list items is locked before make a change.             (ZyX)
updated for version 7.4.418 Problem:    When leaving ":append" the cursor shape is like in Insert mode.             (Jacob Niehus) Solution:   Do not have State set to INSERT when calling getline().
updated for version 7.4.417 Problem:    After splitting a window and setting 'breakindent' the default             minimum with is not respected. Solution:   Call briopt_check() when copying options to a new window.
updated for version 7.4.416 Problem:    Problem with breakindent/showbreak and tabs. Solution:   Handle tabs differently. (Christian Brabandt)
Runtime file updates.
Update version number to 7.4.415
updated for version 7.4.415 Problem:    Cannot build.  Warning for shadowed variable. (John Little) Solution:   Add missing change.  Remove declaration.
updated for version 7.4.414 Problem:    Cannot define a command only when it's used. Solution:   Add the CmdUndefined autocommand event. (partly by Yasuhiro             Matsumoto)
Updated runtime files.
updated for version 7.4.413 Problem:    MS-Windows: Using US international keyboard layout, inserting dead             key by pressing space does not always work.  Issue 250. Solution:   Let MS-Windows translate the message. (John Wellesz)
updated for version 7.4.412 Problem:    Can't build on Windows XP with MSVC. Solution:   Add SUBSYSTEM_VER to the Makefile. (Yongwei Wu)
updated for version 7.4.411 Problem:    "foo bar" sorts before "foo" with sort(). (John Little) Solution:   Avoid putting quotes around strings before comparing them.
updated for version 7.4.410 Problem:    Fold does not open after search when there is a CmdwinLeave             autocommand. Solution:   Restore KeyTyped. (Jacob Niehus)
updated for version 7.4.409 Problem:    Can't build with Perl on Fedora 20. Solution:   Find xsubpp in another directory. (Michael Henry)
Add files missing from 7.4.408.
updated for version 7.4.408 Problem:    Visual block insert breaks a multi-byte character. Solution:   Calculate the position properly. (Yasuhiro Matsumoto)
updated for version 7.4.407 Problem:    Inserting text for Visual block mode, with cursor movement,             repeats the wrong text. (Aleksandar Ivanov) Solution:   Reset the update_Insstart_orig flag. (Christian Brabandt)
updated for version 7.4.406 Problem:    Test 72 and 100 fail on MS-Windows. Solution:   Set fileformat to unix in the tests. (Taro Muraoka)
updated for version 7.4.405 Problem:    Screen updating is slow when using matches. Solution:   Do not use the ">=" as in patch 7.4.362, check the lnum.
updated for version 7.4.404 Problem:    Windows 64 bit compiler warnings. Solution:   Add type casts. (Mike Williams)
updated for version 7.4.403 Problem:    Valgrind reports errors when running test 72. (Dominique Pelle) Solution:   Reset the local 'cryptmethod' option before storing the seed.             Set the seed in the memfile even when there is no block0 yet.
updated for version 7.4.402 Problem:    Test 72 crashes under certain conditions. (Kazunobu Kuriyama) Solution:   Clear the whole bufinfo_T early.
updated for version 7.4.401 Problem:    Can't build on MS-Windows. Solution:   Include the new files in all the Makefiles.
updated for version 7.4.400 Problem:    List of distributed files is incomplete. Solution:   Add recently added files.
updated for version 7.4.399 Problem:    Encryption implementation is messy.  Blowfish encryption has a             weakness. Solution:   Refactor the encryption, store the state in an allocated struct             instead of using a save/restore mechanism.  Introduce the             "blowfish2" method, which does not have the weakness and encrypts             the whole undo file. (largely by David Leadbeater)
updated for version 7.4.398 Problem:    Gcc error for the argument of InterlockedIncrement() and             InterlockedDecrement(). (Axel Bender) Solution:   Remove "unsigned" from the cRefCount_ declaration.
updated for version 7.4.397 Problem:    Matchparen only uses the topmost syntax item. Solution:   Go through the syntax stack to find items. (James McCoy)             Also use getcurpos() when possible.
updated for version 7.4.396 Problem:    When 'clipboard' is "unnamed", :g/pat/d is very slow. (Praful) Solution:   Only set the clipboard after the last delete. (Christian Brabandt)
updated for version 7.4.395 Problem:    C indent is wrong below an if with wrapped condition followed by             curly braces. (Trevor Powell) Solution:   Make a copy of tryposBrace.
updated for version 7.4.394 Problem:    When using DirectX last italic character is incomplete. Solution:   Add one to the number of cells. (Ken Takata)
updated for version 7.4.393 Problem:    Text drawing on newer MS-Windows systems is suboptimal.  Some             multi-byte characters are not displayed, even though the same font             in Notepad can display them. (Srinath Avadhanula) Solution:   Add the 'renderoptions' option to enable Direct-X drawing. (Taro             Muraoka)
updated for version 7.4.392 Problem:    Not easy to detect type of command line window. Solution:   Add the getcmdwintype() function. (Jacob Niehus)
updated for version 7.4.391 Problem:    No 'cursorline' highlighting when the cursor is on a line with             diff highlighting. (Benjamin Fritz) Solution:   Combine the highlight attributes. (Christian Brabandt)
updated for version 7.4.390 Problem:    Advancing pointer over end of a string. Solution:   Init quote character to -1 instead of zero. (Dominique Pelle)
updated for version 7.4.389 Problem:    Still sometimes Vim enters Replace mode when starting up. Solution:   Use a different solution in detecting the termresponse and             location response. (Hayaki Saito)
updated for version 7.4.388 Problem:    With 'linebreak' set and 'list' unset a Tab is not counted             properly. (Kent Sibilev) Solution:   Check the 'list' option. (Christian Brabandt)
updated for version 7.4.387 Problem:    "4gro" replaces one character then executes "ooo". (Urtica Dioica) Solution:   Write the ESC in the second stuff buffer.
updated for version 7.4.386 Problem:    When splitting a window the changelist position is wrong. Solution:   Copy the changelist position. (Jacob Niehus)
updated for version 7.4.385 Problem:    When building with tiny or small features building the .mo files             fails. Solution:   In autoconf do not setup for building the .mo files when it would             fail.
updated for version 7.4.384 Problem:    Test 102 fails when compiled with small features. Solution:   Source small.vim. (Jacob Niehus)
Update runtime files.  Add vroom file support.
updated for version 7.4.383 Problem:    Bad interaction between preview window and omnifunc. Solution:   Avoid redrawing the status line. (Hirohito Higashi)
updated for version 7.4.381 Problem:    Get u_undo error when backspacing in Insert mode deletes more than             one line break. (Ayberk Ozgur) Solution:   Also decrement Insstart.lnum.
updated for version 7.4.380 Problem:    Loading python may cause Vim to exit. Solution:   Avoid loading the "site" module. (Taro Muraoka)
updated for version 7.4.379 Problem:    Accessing freed memory after using setqflist(list, 'r'). (Lcd) Solution:   Reset qf_index.
updated for version 7.4.378 Problem:    Title of quickfist list is not kept for setqflist(list, 'r'). Solution:   Keep the title.  Add a test. (Lcd)
updated for version 7.4.377 Problem:    When 'equalalways' is set a split may report "no room" even though             there is plenty of room. Solution:   Compute the available room properly. (Yukihiro Nakadaira)
updated for version 7.4.376 Problem:    Popup menu flickers too much. Solution:   Remove the forced redraw. (Hirohito Higashi)
updated for version 7.4.375 Problem:    Test 63 fails when run with GUI-only Vim. Solution:   Add guibg attributes. (suggested by Mike Soyka)
updated for version 7.4.374 Problem:    Character after "fb" command not mapped if it might be a composing             character. Solution:   Don't disable mapping when looking for a composing character.             (Jacob Niehus)
Update runtime files.  Make matchparen plugin backwards compatible. Add json filetype.
updated for version 7.4.373 Problem:    Compiler warning for unused argument and unused variable. Solution:   Add UNUSED.  Move variable inside #ifdef.
updated for version 7.4.372 Problem:    When 'winminheight' is zero there might not be one line for the             current window. Solution:   Change the size computations. (Yukihiro Nakadaira)
updated for version 7.4.371 Problem:    When 'linebreak' is set control characters are not correctly             displayed. (Kimmy Lindvall) Solution:   Set n_extra. (Christian Brabandt)
updated for version 7.4.370 Problem:    Linebreak test fails when encoding is not utf-8. (Danek Duvall) Solution:   Split the test in a single byte one and a utf-8 one. (Christian             Brabandt)
updated for version 7.4.369 Problem:    Using freed memory when exiting while compiled with EXITFREE. Solution:   Set curwin to NULL and check for that. (Dominique Pelle)
updated for version 7.4.368 Problem:    Restoring the window sizes after closing the command line window             doesn't work properly if there are nested splits. Solution:   Restore the sizes twice. (Hirohito Higashi)
updated for version 7.4.367 Problem:    Other solution for redrawing after completion. Solution:   Schedule a window redraw instead of just clearing the command             line. (Jacob Niehus)
updated for version 7.4.365 Problem:    Crash when using ":botright split" when there isn't much space. Solution:   Add a check for the minimum width/height. (Yukihiro Nakadaira)
Updated runtime files.
updated for version 7.4.364 Problem:    When the viminfo file can't be renamed there is no error message.             (Vladimir Berezhnoy) Solution:   Check for the rename to fail.
updated for version 7.4.363 Problem:    In Windows console typing 0xCE does not work. Solution:   Convert 0xCE to K_NUL 3. (Nobuhiro Takasaki et al.)
updated for version 7.4.362 Problem:    When matchaddpos() uses a length smaller than the number of bytes             in the (last) character the highlight continues until the end of             the line. Solution:   Change condition from equal to larger-or-equal.
updated for version 7.4.361 Problem:    Lots of flickering when filling the preview window for 'omnifunc'. Solution:   Disable redrawing. (Hirohito Higashi)
updated for version 7.4.360 Problem:    In a regexp pattern a "$" followed by \v or \V is not seen as the             end-of-line. Solution:   Handle the situation. (Ozaki Kiichi)
updated for version 7.4.359 Problem:    When 'ttymouse' is set to 'uxterm' the xterm version is not             requested. (Tomas Janousek) Solution:   Do not mark uxterm as a conflict mouse and add             resume_get_esc_sequence().
updated for version 7.4.358 Problem:    Sort is not always stable. Solution:   Add an index instead of relying on the pointer to remain the same.             Idea by Jun Takimoto.
updated for version 7.4.357 Problem:    After completion some characters are not redrawn. Solution:   Clear the command line unconditionally. (Jacob Niehus)
updated for version 7.4.356 Problem:    Mercurial does not ignore memfile_test. (Daniel Hahler) Solution:   Add memfile_test to ignored files, remove trailing spaces.
Updated runtime files.  Overhauled HTML indent script.
updated for version 7.4.355 Problem:    Several problems with Javascript indenting. Solution:   Improve Javascript indenting.
updated for version 7.4.354 Problem:    Compiler warning. Solution:   Change NUL to NULL. (Ken Takata)
updated for version 7.4.353 Problem:    'breakindent' doesn't work with the 'list' option. Solution:   Make it work. (Christian Brabandt)
updated for version 7.4.352 Problem:    With 'linebreak' a tab causes a missing line break. Solution:   Count a tab for what it's worth also for shorter lines.             (Christian Brabandt)
updated for version 7.4.351 Problem:    sort() is not stable. Solution:   When the items are identical, compare the pointers.
updated for version 7.4.350 Problem:    Using C indenting for Javascript does not work well for a {} block             inside parenthesis. Solution:   When looking for a matching paren ignore one that is before the             start of a {} block.
updated for version 7.4.349 Problem:    When there are matches to highlight the whole window is redrawn,             which is slow. Solution:   Only redraw everything when lines were inserted or deleted.             Reset b_mod_xlines when needed.  (Alexey Radkov)
updated for version 7.4.347 Problem:    test55 fails on some systems. Solution:   Remove the elements that all result in zero and can end up in an             arbitrary position.
updated for version 7.4.346 Problem:    Indent is not updated when changing 'breakindentopt'. (itchyny) Solution:   Do not cache "brishift". (Christian Brabandt)
updated for version 7.4.345 Problem:    Indent is not updated when deleting indent. Solution:   Remember changedtick.
Updated runtime files.
updated for version 7.4.344 Problem:    Unessecary initializations and other things related to             matchaddpos(). Solution:   Code cleanup. (Alexey Radkov)
updated for version 7.4.342 Problem:    Clang gives warnings. Solution:   Add an else block. (Dominique Pelle)
updated for version 7.4.341 Problem:    sort() doesn't handle numbers well. Solution:   Add an argument to specify sorting on numbers. (Christian Brabandt)
updated for version 7.4.340 Problem:    Error from sed about illegal bytes when installing Vim. Solution:   Prepend LC_ALL=C. (Itchyny)
updated for version 7.4.339 Problem:    Local function is available globally. Solution:   Add "static".
updated for version 7.4.338 Problem:    Cannot wrap lines taking indent into account. Solution:   Add the 'breakindent' option. (many authors, final improvements by             Christian Brabandt)
updated for version 7.4.337 Problem:    When there is an error preparing to edit the command line, the             command won't be executed. (Hirohito Higashi) Solution:   Reset did_emsg before editing.
updated for version 7.4.336 Problem:    Setting 'history' to a big value causes out-of-memory errors. Solution:   Limit the value to 10000. (Hirohito Higashi)
updated for version 7.4.335 Problem:    No digraph for the new rouble sign. Solution:   Add the digraphs =R and =P.
updated for version 7.4.334 Problem:    Unitialized variables, causing some problems. Solution:   Initialize the variables. (Dominique Pelle)
updated for version 7.4.333 Problem:    Compiler warning for unused function. Solution:   Put the function inside the #ifdef.
updated for version 7.4.332 Problem:    GTK: When a sign icon doesn't fit exactly there can be ugly gaps. Solution:   Scale the sign to fit when the aspect ratio is not too far off.             (Christian Brabandt)
updated for version 7.4.331 Problem:    Relative numbering not updated after a linewise yank.  Issue 235. Solution:   Redraw after the yank. (Christian Brabandt)
updated for version 7.4.330 Problem:    Using a regexp pattern to highlight a specific position can be             slow. Solution:   Add matchaddpos() to highlight specific positions efficiently.             (Alexey Radkov)
updated for version 7.4.329 Problem:    When moving the cursor and then switching to another window the             previous window isn't scrolled. (Yukihiro Nakadaira) Solution:   Call update_topline() before leaving the window. (Christian             Brabandt)
updated for version 7.4.328 Problem:    Selection of inner block is inconsistent. Solution:   Skip indent not only for '}' but all parens. (Tom McDonald)
updated for version 7.4.327 Problem:    When 'verbose' is set to display the return value of a function,             may get E724 repeatedly. Solution:   Do not give an error for verbose messages. Abort conversion to             string after an error.
updated for version 7.4.326 Problem:    Can't build Tiny version. (Elimar Riesebieter) Solution:   Add #ifdef.
updated for version 7.4.325 Problem:    When starting the gui and changing the window size the status line             may not be drawn correctly. Solution:   Catch new_win_height() being called recursively. (Christian             Brabandt)
Update runtime files.
updated for version 7.4.324 Problem:    In Ex mode, cyrillic characters are not handled. (Stas Malavin) Solution:   Support multi-byte characters in Ex mode. (Yukihiro Nakadaira)
updated for version 7.4.323 Problem:    Substitute() with zero width pattern breaks multi-byte character. Solution:   Take multi-byte character size into account. (Yukihiro Nakadaira)
updated for version 7.4.322 Problem:    Using "msgfmt" is hard coded, cannot use "gmsgfmt". Solution:   Use the msgfmt command found by configure. (Danek Duvall)
updated for version 7.4.321 Problem:    Can't build with strawberry perl 5.20 + mingw-w64-4.9.0. Solution:   Define save_strlen. (Ken Takata)
updated for version 7.4.320 Problem:    Possible crash when an BufLeave autocommand deletes the buffer. Solution:   Check for the window pointer being valid.  Postpone freeing the             window until autocommands are done. (Yasuhiro Matsumoto)
updated for version 7.4.319 Problem:    Crash when putting zero bytes on the clipboard. Solution:   Do not support the utf8_atom target when not using an Unicode             encoding. (Naofumi Honda)
updated for version 7.4.318 Problem:    Check for whether a highlight group has settings ignores fg and bg             color settings. Solution:   Also check cterm and GUI color settings. (Christian Brabandt)
updated for version 7.4.317 Problem:    Crash when starting gvim.  Issue 230. Solution:   Check for a pointer to be NULL. (Christian Brabandt)
updated for version 7.4.316 Problem:    Warning from 64-bit compiler. Solution:   Add type cast. (Mike Williams)
updated for version 7.4.314 Problem:    Completion messages can get in the way of a plugin. Solution:   Add 'c' flag to 'shortmess' option. (Shougo Matsu)
updated for version 7.4.313 Problem:    Changing the return value of getpos() causes an error. (Jie Zhu) Solution:   Revert getpos() and add getcurpos().
updated for version 7.4.312 Problem:    Cannot figure out what argument list is being used for a window. Solution:   Add the arglistid() function. (Marcin Szamotulski)
updated for version 7.4.311 Problem:    Can't use winrestview to only restore part of the view. Solution:   Handle missing items in the dict. (Christian Brabandt)
updated for version 7.4.310 Problem:    getpos()/setpos() don't include curswant. Solution:   Add a fifth number when getting/setting the cursor.
updated for version 7.4.309 Problem:    When increasing the size of the lower window, the upper window             jumps back to the top. (Ron Aaron) Solution:   Change setting the topline. (Nobuhiro Takasaki)
updated for version 7.4.308 Problem:    When using ":diffsplit" on an empty file the cursor is displayed             on the command line. Solution:   Limit the value of w_topfill.
updated for version 7.4.307 Problem:    Can't build without the +termresponse feature. Solution:   Add proper #ifdefs.
updated for version 7.4.306 Problem:    getchar(0) does not return Esc. Solution:   Do not wait for an Esc sequence to be complete.  (Yasuhiro             Matsumoto)
Runtime file updates.
updated for version 7.4.305 Problem:    Making 'ttymouse' empty after the xterm version was requested             causes problems. (Elijah Griffin) Solution:   Do not check for DEC mouse sequences when the xterm version was             requested.  Also don't request the xterm version when DEC mouse             was enabled.
updated for version 7.4.304 Problem:    Cannot always use Python with Vim. Solution:   Add the manifest to the executable. (Jacques Germishuys)
updated for version 7.4.303 Problem:    When using double-width characters the text displayed on the             command line is sometimes truncated. Solution:   Reset the string lenght. (Nobuhiro Takasaki)
updated for version 7.4.302 Problem:    Signs placed with 'foldcolumn' set don't show up after filler             lines. Solution:   Take filler lines into account. (Olaf Dabrunz)
updated for version 7.4.300 Problem:    The way config.cache is removed doesn't always work. Solution:   Always remove config.cache. (Ken Takata)
updated for version 7.4.299 Problem:    When running configure twice DYNAMIC_PYTHON_DLL may become empty. Solution:   Use AC_CACHE_VAL. (Ken Takata)
updated for version 7.4.298 Problem:    Can't have a funcref start with "t:". Solution:   Add "t" to the list of accepted names. (Yukihiro Nakadaira)
updated for version 7.4.297 Problem:    Memory leak from result of get_isolated_shell_name(). Solution:   Free the memory. (Dominique Pelle)
updated for version 7.4.296 Problem:    Can't run tests on Solaris. Solution:   Change the way VIMRUNTIME is set. (Laurent Blume)
Update runtime files.
Update translations for changed error message.
updated for version 7.4.294 Problem:    Test files missing from patch. Solution:   Patch the test files.
updated for version 7.4.293 Problem:    It is not possible to ignore composing characters at a specific             point in a pattern. Solution:   Add the %C item.
updated for version 7.4.292 Problem:    Searching for "a" does not match accented "a" with new regexp             engine, does match with old engine. (David Bürgin)             "ca" does not match "ca" with accented "a" with either engine. Solution:   Change the old engine, check for following composing character             also for single-byte patterns.
updated for version 7.4.291 Problem:    Compiler warning for int to pointer of different size when DEBUG             is defined. Solution:   use smsg() instead of EMSG3().
updated for version 7.4.290 Problem:    A non-greedy match followed by a branch is too greedy. (Ingo             Karkat) Solution:   Add NFA_MATCH when it is already in the state list if the position             differs.
updated for version 7.4.289 Problem:    Pattern with repeated backreference does not match with new regexp             engine. (Urtica Dioica) Solution:   Also check the end of a submatch when deciding to put a state in             the state list.
updated for version 7.4.288 Problem:    When 'spellfile' is set the screen is not redrawn. Solution:   Redraw when updating the spelling info. (Christian Brabandt)
updated for version 7.4.287 Problem:    Patches for .hgignore don't work, since the file is not in the             distribution. Solution:   Add .hgignore to the distribution.  Will be effective with the             next version.
updated for version 7.4.286 Problem:    Error messages are inconsistant. (ZyX) Solution:   Change "Lists" to "list".
updated for version 7.4.285 Problem:    When 'relativenumber' is set and deleting lines or undoing that,             line numbers are not always updated. (Robert Arkwright) Solution:   (Christian Brabandt)
updated for version 7.4.284 Problem:    Setting 'langmap' in the modeline can cause trouble.  E.g. mapping             ":" breaks many commands. (Jens-Wolfhard Schicke-Uffmann) Solution:   Disallow setting 'langmap' from the modeline.
updated for version 7.4.283 Problem:    Compiler warning about unused variable. (Charles Cooper) Solution:   Move the variable inside the #if block.
updated for version 7.4.282 Problem:    Test 97 fails on Mac. Solution:   Do not ignore case in file names. (Jun Takimoto)
updated for version 7.4.281 Problem:    When a session file has more than one tabpage and 'showtabline' is             one the positions may be slightly off. Solution:   Set 'showtabline' to two while positioning windows.
updated for version 7.4.280 Problem:    When using a session file the relative position of the cursor is             not restored if there is another tab. (Nobuhiro Takasaki) Solution:   Update w_wrow before calculating the fraction.
updated for version 7.4.279 Problem:    globpath() returns a string, making it difficult to get a list of             matches. (Greg Novack) Solution:   Add an optional argument like with glob(). (Adnan Zafar)
updated for version 7.4.278 Problem:    list_remove() conflicts with function defined in Sun header file. Solution:   Rename the function. (Richard Palo)
updated for version 7.4.277 Problem:    Using ":sign unplace *" may leave the cursor in the wrong position             (Christian Brabandt) Solution:   Update the cursor position when removing all signs.
updated for version 7.4.276 Problem:    The fish shell is not supported. Solution:   Use begin/end instead of () for fish. (Andy Russell)
updated for version 7.4.275 Problem:    When changing the type of a sign that hasn't been placed ther is             no error message. Solution:   Add an error message. (Christian Brabandt)
updated for version 7.4.274 Problem:    When doing ":update" just before running an external command that             changes the file, the timestamp may be unchanged and the file             is not reloaded. Solution:   Also check the file size.
Runtime file updates.
updated for version 7.4.273 Problem:    "make autoconf" and "make reconfig" may first run configure and             then remove the output. Solution:   Add these targets to the exceptions. (Ken Takata)
updated for version 7.4.272 Problem:    Using just "$" does not cause an error message. Solution:   Check for empty environment variable name. (Christian Brabandt)
updated for version 7.4.271 Problem:    Compiler warning on 64 bit windows. Solution:   Add type cast. (Mike Williams)
updated for version 7.4.270 Problem:    Comparing pointers instead of the string they point to. Solution:   Use strcmp(). (Ken Takata)
updated for version 7.4.269 Problem:    CTRL-U in Insert mode does not work after using a cursor key.             (Pine Wu) Solution:   Use the original insert start position. (Christian Brabandt)
updated for version 7.4.268 Problem:    Using exists() on a funcref for a script-local function does not             work. Solution:   Translate <SNR> to the special byte sequence.  Add a test.
updated for version 7.4.267 Problem:    The '[ mark is in the wrong position after "gq". (Ingo Karkat) Solution:   Add the setmark argument to do_join(). (Christian Brabandt)
updated for version 7.4.266 Problem:    Test 62 fails. Solution:   Set the language to C. (Christian Brabandt)
updated for version 7.4.265 Problem:    Can't call a global function with "g:" in an expression. Solution:   Skip the "g:" when looking up the function.
updated for version 7.4.264 Problem:    Can't define a function starting with "g:".  Can't assign a             funcref to a buffer-local variable. Solution:   Skip "g:" at the start of a function name.  Don't check for colons             when assigning to a variable.
updated for version 7.4.263 Problem:    GCC 4.8 compiler warning for hiding a declaration (Francois Gannaz) Solution:   Remove the second declaration.
updated for version 7.4.262 Problem:    Duplicate code in regexec(). Solution:   Add line_lbr flag to regexec_nl().
updated for version 7.4.261 Problem:    When updating the window involves a regexp pattern, an interactive             substitute to replace a "\n" with a line break fails. (Ingo             Karkat) Solution:   Set reg_line_lbr in vim_regsub() and vim_regsub_multi().
updated for version 7.4.260 Problem:    It is possible to define a function with a colon in the name.  It             is possible to define a function with a lower case character if a             "#" appears after the name. Solution:   Disallow using a colon other than with "s:".  Ignore "#" after the             name.
updated for version 7.4.259 Problem:    Warning for misplaced "const". Solution:   Move the "const". (Yukihiro Nakadaira)
updated for version 7.4.258 Problem:    Configure fails if $CC contains options. Solution:   Remove quotes around $CC. (Paul Barker)
updated for version 7.4.257 Problem:    Compiler warning, possibly for mismatch in parameter name. Solution:   Rename the parameter in the declaration.
updated for version 7.4.256 Problem:    Using systemlist() may cause a crash and does not handle NUL             characters properly. Solution:   Increase the reference count, allocate memory by length. (Yasuhiro             Matsumoto)
updated for version 7.4.255 Problem:    Configure check for smack doesn't work with all shells. (David             Larson) Solution:   Remove spaces in set command.
updated for version 7.4.254 Problem:    Smack support detection is incomplete. Solution:   Check for attr/xattr.h and specific macro.
updated for version 7.4.253 Problem:    Crash when using cpp syntax file with pattern using external             match. (Havard Garnes) Solution:   Discard match when end column is before start column.
updated for version 7.4.252 Problem:    Critical error in GTK, removing timer twice. Solution:   Clear the timer after removing it. (James McCoy)
updated for version 7.4.251 Problem:    Crash when BufAdd autocommand wipes out the buffer. Solution:   Check for buffer to still be valid. Postpone freeing the buffer             structure. (Hirohito Higashi)
Updated runtime files.
Updated runtime files.
updated for version 7.4.250 Problem:    Some test files missing from distribution. Solution:   Add pattern for newly added tests.
updated for version 7.4.249 Problem:    Using setreg() with a list of numbers does not work. Solution:   Use a separate buffer for numbers. (ZyX)
updated for version 7.4.248 Problem:    Cannot distinguish between NL and NUL in output of system(). Solution:   Add systemlist(). (ZyX)
updated for version 7.4.247 Problem:    When passing input to system() there is no way to keep NUL and             NL characters separate. Solution:   Optionally use a list for the system() input. (ZyX)
updated for version 7.4.246 Problem:    Configure message for detecting smack are out of sequence. Solution:   Put the messages in the right place. (Kazunobu Kuriyama)
updated for version 7.4.245 Problem:    Crash for "vim -u NONE -N  -c '&&'". Solution:   Check for the pattern to be NULL. (Dominique Pelle)
updated for version 7.4.244 Problem:    The smack feature causes stray error messages. Solution:   Remove the error messages.
updated for version 7.4.243 Problem:    Cannot use setreg() to add text that includes a NUL. Solution:   Make setreg() accept a list.
updated for version 7.4.242 Problem:    getreg() does not distinguish between a NL used for a line break             and a NL used for a NUL character. Solution:   Add another argument to return a list. (ZyX)
updated for version 7.4.241 Problem:    The string returned by submatch() does not distinguish between a             NL from a line break and a NL that stands for a NUL character. Solution:   Add a second argument to return a list. (ZyX)
updated for version 7.4.240 Problem:    ":tjump" shows "\n" as "\\n". Solution:   Skip over "\" that escapes a backslash. (Gary Johnson)
updated for version 7.4.239 Problem:    ":e +" does not position cursor at end of the file. Solution:   Check for "+" being the last character (ZyX)
updated for version 7.4.238 Problem:    Vim does not support the smack library. Solution:   Add smack support (Jose Bollo)
updated for version 7.4.237 Problem:    When some patches was not included has("patch-7.4.123") may return             true falsely. Solution:   Check for the specific patch number.
updated for version 7.4.236 Problem:    It's not that easy to check the Vim patch version. Solution:   Make has("patch-7.4.123") work. (partly by Marc Weber)
updated for version 7.4.235 Problem:    It is not easy to get the full path of a command. Solution:   Add the exepath() function.
updated for version 7.4.234 Problem:    Can't get the command that was used to start Vim. Solution:   Add v:progpath. (Viktor Kojouharov)
updated for version 7.4.233 Problem:    Escaping special characters for using "%" with a shell command is             inconsistant, parenthesis are escaped but spaces are not. Solution:   Only escape "!". (Gary Johnson)
updated for version 7.4.232 Problem:    ":%s/\n//" uses a lot of memory. (Aidan Marlin) Solution:   Turn this into a join command. (Christian Brabandt)
updated for version 7.4.231 Problem:    An error in ":options" is not caught by the tests. Solution:   Add a test for ":options".  Set $VIMRUNTIME for the tests so that             it uses the current runtime files instead of the installed ones.
updated for version 7.4.229 Problem:    Using ":let" for listing variables and the second one is a curly             braces expression may fail. Solution:   Check for an "=" in a better way. (ZyX)
updated for version 7.4.228 Problem:    Compiler warnings when building with Python 3.2. Solution:   Make type cast depend on Python version. (Ken Takata)
updated for version 7.4.227 Problem:    Can't build with Ruby 1.8. Solution:   Do include a check for the Ruby version. (Ken Takata)
updated for version 7.4.226 Problem:    Cursurline highlighting not redrawn when scrolling. (John             Marriott) Solution:   Check for required redraw in two places.
Update runtime files.
updated for version 7.4.225 Problem:    Dynamic Ruby doesn't work on Solaris. Solution:   Always use the stubs. (Danek Duvall, Yukihiro Nakadaira)
updated for version 7.4.224 Problem:    /usr/bin/grep on Solaris does not support -F. Solution:   Add configure check to find a good grep. (Danek Duvall)
updated for version 7.4.223 Problem:    Still using an older autoconf version. Solution:   Switch to autoconf 2.69.
updated for version 7.4.222 Problem:    The Ruby directory is constructed from parts. Solution:   Use 'rubyarchhdrdir' if it exists. (James McCoy)
updated for version 7.4.221 Problem:    Quickfix doesn't resize on ":copen 20". (issue 199) Solution:   Resize the window when requested. (Christian Brabandt)
updated for version 7.4.220 Problem:    Test 105 does not work in a shadow dir. (James McCoy) Solution:   Omit "src/" from the checked path.
updated for version 7.4.219 Problem:    When 'relativenumber' or 'cursorline' are set the window is             redrawn much to often. (Patrick Hemmer, Dominique Pelle) Solution:   Check the VALID_CROW flag instead of VALID_WROW.
updated for version 7.4.218 Problem:    It's not easy to remove duplicates from a list. Solution:   Add the uniq() function. (LCD)
updated for version 7.4.217 Problem:    When src/auto/configure was updated, "make clean" would run             configure pointlessly. Solution:   Do not run configure for "make clean" and "make distclean" when             the make program supports $MAKECMDGOALS. (Ken Takata)
updated for version 7.4.216 Problem:    Compiler warnings. (Tony Mechelynck) Solution:   Initialize variables, add #ifdef.
updated for version 7.4.215 Problem:    Inconsistency: ":sp foo" does not reload "foo", unless "foo" is             the current buffer. (Liang Li) Solution:   Do not reload the current buffer on a split command.
updated for version 7.4.214 Problem:    Compilation problems on HP_nonStop (Tandem). Solution:   Add #defines. (Joachim Schmitz)
updated for version 7.4.213 Problem:    It's not possible to open a new buffer without creating a swap             file. Solution:   Add the ":noswapfile" modifier. (Christian Brabandt)
updated for version 7.4.212 Problem:    Now that the +visual feature is always enabled the #ifdefs for it             are not useful. Solution:   Remove the checks for FEAT_VISUAL.
Updated runtime files.
updated for version 7.4.211 Problem:    ":lu" is an abbreviation for ":lua", but it should be ":lunmap".             (ZyX) Solution:   Move "lunmap" to above "lua".
updated for version 7.4.210 Problem:    Visual block mode plus virtual edit doesn't work well with tabs.             (Liang Li) Solution:   Take coladd into account. (Christian Brabandt)
updated for version 7.4.209 Problem:    When repeating a filter command "%" and "#" are expanded. Solution:   Escape the command when storing for redo. (Christian Brabandt)
updated for version 7.4.208 Problem:    Mercurial picks up some files that are not distributed. Solution:   Add patterns to the ignore list. (Cade Forester)
updated for version 7.4.207 Problem:    The cursor report sequence is sometimes not recognized and results             in entering replace mode. Solution:   Also check for the cursor report when not asked for.
updated for version 7.4.206 Problem:    Compiler warnings on 64 bit Windows. Solution:   Add type casts. (Mike Williams)
updated for version 7.4.205 Problem:    ":mksession" writes command to move to second argument while it             does not exist.  When it does exist the order might be wrong. Solution:   Use ":argadd" for each argument instead of using ":args" with a             list of names. (Nobuhiro Takasaki)
updated for version 7.4.204 Problem:    A mapping where the second byte is 0x80 doesn't work. Solution:   Unescape before checking for incomplete multi-byte char. (Nobuhiro             Takasaki)
updated for version 7.4.203 Problem:    Parsing 'errorformat' is not correct. Solution:   Reset "multiignore" at the start of a multi-line message. (Lcd)
updated for version 7.4.202 Problem:    MS-Windows: non-ASCII font names don't work. Solution:   Convert between the current code page and 'encoding'. (Ken Takata)
updated for version 7.4.201 Problem:    'lispwords' is a global option. Solution:   Make 'lispwords' global-local. (Sung Pae)
updated for version 7.4.200 Problem:    Too many #ifdefs in the code. Solution:   Enable FEAT_VISUAL always, await any complaints
updated for version 7.4.199 Problem:    (issue 197) ]P doesn't paste over Visual selection. Solution:   Handle Visual mode specifically. (Christian Brabandt)
updated for version 7.4.198 Problem:    Can't build Vim with Perl when -Dusethreads is not specified for             building Perl, and building Vim with --enable-perlinterp=dynamic. Solution:   Adjust #ifdefs. (Yasuhiro Matsumoto)
updated for version 7.4.196 Problem:    Tests fail on Solaris 9 and 10. Solution:   Use "test -f" instead of "test -e".  (Laurent Blume)
updated for version 7.4.195 Problem:    Python tests fail. Solution:   Change "then" to "than" in more places. (Dominique Pelle, Taro             Muraoka)
updated for version 7.4.194 Problem:    Can't build for Android. Solution:   Add #if condition. (Fredrik Fornwall)
Updated runtime files.
updated for version 7.4.193 Problem:    Typos in messages. Solution:   "then" -> "than". (Dominique Pelle)
updated for version 7.4.192 Problem:    Memory leak when giving E853. Solution:   Free the argument. (Dominique Pelle)
Update runtime files.  Add Euphoria syntax files.
updated for version 7.4.191 Problem:    Escaping a file name for shell commands can't be done without a             function. Solution:   Add the :S file name modifier.
updated for version 7.4.190 Problem:    Compiler warning for using %lld for off_t. Solution:   Add type cast.
updated for version 7.4.189 Problem:    Compiler warning for unused argument. Solution:   Add UNUSED.
updated for version 7.4.188 Problem:    SIZEOF_LONG clashes with similar defines in header files. Solution:   Rename to a name starting with VIM_.  Also for SIZEOF_INT.
updated for version 7.4.187 Problem:    Delete that crosses line break splits multi-byte character. Solution:   Advance a character instead of a byte. (Cade Foster)
updated for version 7.4.186 Problem:    Insert in Visual mode sometimes gives incorrect results.             (Dominique Pelle) Solution:   Remember the original insert start position. (Christian Brabandt,             Dominique Pelle)
updated for version 7.4.185 Problem:    Clang gives warnings. Solution:   Adjust how bigness is set. (Dominique Pelle)
updated for version 7.4.184 Problem:    match() does not work properly with a {count} argument. Solution:   Compute the length once and update it.  Quit the loop when at the             end. (Hirohito Higashi)
updated for version 7.4.183 Problem:    MSVC Visual Studio update not supported. Solution:   Add version number. (Mike William)
updated for version 7.4.182 Problem:    Building with mzscheme and racket does not work. (David Chimay) Solution:   Adjust autoconf. (Sergey Khorev)
updated for version 7.4.181 Problem:    When using 'pastetoggle' the status lines are not updated. (Samuel             Ferencik, Jan Christoph Ebersbach) Solution:   Update the status lines. (Nobuhiro Takasaki)
updated for version 7.4.180 Problem:    Older Python versions don't support %ld. Solution:   Use %d instead. (ZyX)
updated for version 7.4.179 Problem:    Warning for type-punned pointer. (Tony Mechelynck) Solution:   Use intermediate variable.
updated for version 7.4.178 Problem:    The J command does not update '[ and '] marks. (William Gardner) Solution:   Set the marks. (Christian Brabandt)
Update runtime files.  Add support for systemverilog.
updated for version 7.4.177 Problem:    Compiler warning for unused variable. (Tony Mechelynck) Solution:   Add #ifdef.
updated for version 7.4.176 Problem:    Dictionary.update() thows an error when used without arguments.             Python programmers don't expect that. Solution:   Make Dictionary.update() without arguments do nothing. (ZyX)
updated for version 7.4.175 Problem:    When a wide library function fails, falling back to the non-wide             function may do the wrong thing. Solution:   Check the platform, when the wide function is supported don't fall             back to the non-wide function. (Ken Takata)
updated for version 7.4.174 Problem:    Compiler warnings for Python interface. (Tony Mechelynck) Solution:   Add type casts, initialize variable.
updated for version 7.4.173 Problem:    When using scrollbind the cursor can end up below the last line.             (mvxxc) Solution:   Reset w_botfill when scrolling up. (Christian Brabandt)
updated for version 7.4.172 Problem:    The blowfish code mentions output feedback, but the code is             actually doing cipher feedback. Solution:   Adjust names and comments.
updated for version 7.4.171 Problem:    Redo does not set v:count and v:count1. Solution:   Use a separate buffer for redo, so that we can set the counts when             performing redo.
updated for version 7.4.170 Problem:    Some help tags don't work with ":help". (Tim Chase) Solution:   Add exceptions.
updated for version 7.4.169 Problem:    ":sleep" puts cursor in the wrong column. (Liang Li) Solution:   Add the window offset. (Christian Brabandt)
updated for version 7.4.168 Problem:    Can't compile with Ruby 2.1.0. Solution:   Add support for new GC. (Kohei Suzuki)
updated for version 7.4.166 Problem:    Auto-loading a function for code that won't be executed. Solution:   Do not auto-load when evaluation is off. (Yasuhiro Matsumoto)
updated for version 7.4.165 Problem:    By default, after closing a buffer changes can't be undone. Solution:   In the example vimrc file set 'undofile'.
updated for version 7.4.164 Problem:    Problem with event handling on Windows 8. Solution:   Ignore duplicate WINDOW_BUFFER_SIZE_EVENTs. (Nobuhiro Takasaki)
updated for version 7.4.163 Problem:    MS-Windows input doesn't work properly on Windows 7 and earlier. Solution:   Add a check for Windows 8. (Yasuhiro Matsumoto)
updated for version 7.4.162 Problem:    Running tests in shadow dir doesn't work. Solution:   Add testdir/sautest to the shadow target. (James McCoy)
updated for version 7.4.161 Problem:    Crash in Python exception handling. Solution:   Only use exception variables if did_throw is set. (ZyX)
updated for version 7.4.160 Problem:    Win32: Crash when executing external command. Solution:   Only close the handle when it was created. (Yasuhiro Matsumoto)
updated for version 7.4.159 Problem:    Completion hangs when scanning the current buffer after doing             keywords. (Christian Brabandt) Solution:   Set the first match position when starting to scan the current             buffer.
updated for version 7.4.158 Problem:    Pattern containing \zs is not handled correctly by substitute(). Solution:   Change how an empty match is skipped. (Yukihiro Nakadaira)
updated for version 7.4.157 Problem:    Error number used twice. (Yukihiro Nakadaira) Solution:   Change the one not referred in the docs.
updated for version 7.4.156 Problem:    Test file missing from distribution. Solution:   Add new directory to file list.
Updated runtime files.
updated for version 7.4.155 Problem:    ":keeppatterns /pat" does not keep search pattern offset. Solution:   Restore the offset after doing the search.
updated for version 7.4.154 Problem:    Still a problem with auto-loading. Solution:   Pass no_autoload to deref_func_name(). (Yukihiro Nakadaira)
updated for version 7.4.153 Problem:    Compiler warning for pointer type. Solution:   Add type cast.
updated for version 7.4.152 Problem:    Python: Cannot iterate over options. Solution:   Add options iterator. (ZyX)
updated for version 7.4.151 Problem:    Python: slices with steps are not supported. Solution:   Support slices in Python vim.List. (ZyX)
updated for version 7.4.150 Problem:    :keeppatterns is not respected for :s. Solution:   Check the keeppatterns flag. (Yasuhiro Matsumoto)
updated for version 7.4.149 Problem:    Get E685 error when assigning a function to an autoload variable.             (Yukihiro Nakadaira) Solution:   Instead of having a global no_autoload variable, pass an autoload             flag down to where it is used. (ZyX)
updated for version 7.4.148 Problem:    Cannot build with Cygwin and X11. Solution:   Include Xwindows.h instead of windows.h. (Lech Lorens)
updated for version 7.4.147 Problem:    Cursor moves to wrong position when using "gj" after "$" and             virtual editing is active. Solution:   Make "gj" behave differently when virtual editing is active.             (Hirohito Higashi)
updated for version 7.4.146 Problem:    When starting Vim with "-u NONE" v:oldfiles is NULL. Solution:   Set v:oldfiles to an empty list. (Yasuhiro Matsumoto)
updated for version 7.4.145 Problem:    getregtype() does not return zero for unknown register. Solution:   Adjust documention: return empty string for unknown register.             Check the register name to be valid. (Yukihiro Nakadaira)
updated for version 7.4.144 Problem:    MingW also supports intptr_t for OPEN_OH_ARGTYPE. Solution:   Adjust #ifdef. (Ken Takata)
updated for version 7.4.143 Problem:    TextChangedI is not triggered. Solution:   Reverse check for "ready". (lilydjwg)
updated for version 7.4.142 Problem:    On MS-Windows 8 IME input doen't work correctly. Solution:   Work around the problem. (Nobuhiro Takasaki)
updated for version 7.4.140 Problem:    Crash when wiping out buffer triggers autocommand that wipes out             only other buffer. Solution:   Do not delete the last buffer, make it empty. (Hirohito Higashi)
updated for version 7.4.139 Problem:    Crash when using :cd in autocommand. (François Ingelrest) Solution:   Set w_localdir to NULL after freeing it. (Dominique Pelle)
updated for version 7.4.137 Problem:    Cannot use IME with Windows 8 console. Solution:   Change the user of ReadConsoleInput() and PeekConsoleInput().             (Yasuhiro Matsumoto)
updated for version 7.4.136 Problem:    MS-Windows: When saving a file with a UNC path the file becomes             read-only. Solution:   Don't mix up Win32 attributes and Unix attributes. (Ken Takata)
Updated runtime files.
updated for version 7.4.135 Problem:    Missing dot in MingW test Makefile. Solution:   Add the dot. (Michael Soyka)
updated for version 7.4.134 Problem:    Spurious space in MingW Makefile. Solution:   Remove the space. (Michael Soyka)
updated for version 7.4.133 Problem:    Clang warns for using NUL. Solution:   Change NUL to NULL. (Dominique Pelle)
updated for version 7.4.132 Problem:    Win32: flags and inherit_handles arguments mixed up. Solution:   Swap the argument. (cs86661)
Runtime file updates.
updated for version 7.4.131 Problem:    Syncbind causes E315 errors in some situations. (Liang Li) Solution:   Set and restore curbuf in ex_syncbind(). (Christian Brabandt)
updated for version 7.4.130 Problem:    Relative line numbers mix up windows when using folds. Solution:   Use hasFoldingWin() instead of hasFolding(). (Lech Lorens)
updated for version 7.4.129 Problem:    getline(-1) returns zero. (mvxxc) Solution:   Return an empty string.
updated for version 7.4.128 Problem:    Perl 5.18 for MSVC doesn't work. Solution:   Add check in makefile and define __inline. (Ken Takata)
updated for version 7.4.127 Problem:    Perl 5.18 on Unix doesn't work. Solution:   Move workaround to after including vim.h. (Ken Takata)
updated for version 7.4.126 Problem:    Compiler warnings for "const" and incompatible types. Solution:   Remove "const", add type cast. (Ken Takata)
Updated runtime files.
updated for version 7.4.125 Problem:    Win32: Dealing with messages may not work for multi-byte chars. Solution:   Use pDispatchMessage(). (Ken Takata)
updated for version 7.4.124 Problem:    Win32: Getting host name does not use wide function. Solution:   Use GetComputerNameW() if possible. (Ken Takata)
updated for version 7.4.123 Problem:    Win32: Getting user name does not use wide function. Solution:   Use GetUserNameW() if possible. (Ken Takata)
updated for version 7.4.122 Problem:    Win32: When 'encoding' is set to "utf-8" and the active codepage             is cp932 then ":grep" and other commands don't work for multi-byte             characters. Solution:   (Yasuhiro Matsumoto)
updated for version 7.4.121 Problem:    Completion doesn't work for ":py3d" and ":py3f". (Bohr Shaw) Solution:   Skip over letters after ":py3".
updated for version 7.4.120 Problem:    Can't build with Perl 5.18 on Linux. (Lcd 47) Solution:   Add #ifdef. (Ken Takata)
updated for version 7.4.118 Problem:    It's possible that redrawing the status lines causes             win_redr_custom() to be called recursively. Solution:   Protect against recursiveness. (Yasuhiro Matsumoto)
updated for version 7.4.117 Problem:    Can't build with Cygwin/MingW and Perl 5.18. Solution:   Add a linker argument for the Perl library. (Cesar Romani)             Adjust CFLAGS and LIB. (Cesar Romani)             Move including inline.h further down. (Ken Takata)
updated for version 7.4.116 Problem:    When a mapping starts with a space, the typed space does not show             up for 'showcmd'. Solution:   Show "<20>". (Brook Hong)
updated for version 7.4.115 Problem:    When using Zsh expanding ~abc doesn't work when the result             contains a space. Solution:   Off-by-one error in detecting the NUL. (Pavol Juhas)
updated for version 7.4.114 Problem:    New GNU make outputs messages about changing directory in another             format. Solution:   Recognize the new format.
updated for version 7.4.113 Problem:    MSVC static analysis gives warnings. Solution:   Avoid the warnings and avoid possible bugs. (Ken Takata)
updated for version 7.4.112 Problem:    The defaults for 'directory' and 'backupdir' on MS-Windows do not             include a directory that exists. Solution:   Use $TEMP.
updated for version 7.4.111 Problem:    Memory leak in Python OptionsAssItem. (Ken Takata) Solution:   Call Py_XDECREF() where needed. (ZyX)
updated for version 7.4.110 Problem:    "gUgn" cannot be repeeated. (Dimitar Dimitrov) Solution:   Don't put "gn" in a different order in the redo buffer.  Restore             'wrapscan' when the pattern isn't found. (Christian Wellenbrock)
updated for version 7.4.109 Problem:    ColorScheme autocommand matches with the current buffer name. Solution:   Match with the colorscheme name. (Christian Brabandt)
updated for version 7.4.108 Problem:    "zG" and "zW" leave temp files around on MS-Windows. Solution:   Delete the temp files when exiting. (Ken Takata)
updated for version 7.4.107 Problem:    Python: When vim.eval() encounters a Vim error, a try/catch in the             Python code doesn't catch it. (Yggdroot Chen) Solution:   Throw exceptions on errors in vim.eval(). (ZyX)
updated for version 7.4.105 Problem:    Completing a tag pattern may give an error for invalid pattern. Solution:   Suppress the error, just return no matches.
updated for version 7.4.104 Problem:    ":help s/\_" reports an internal error. (John Beckett) Solution:   Check for NUL and invalid character classes.
Updated runtime files.
updated for version 7.4.103 Problem:    Dos installer uses an old way to escape spaces in the diff             command. Solution:   Adjust the quoting to the new default shellxquote. (Ben Fritz)
updated for version 7.4.102 Problem:    Crash when interrupting "z=". Solution:   Add safety check for word length. (Christian Brabandt, Dominique             Pelle)
updated for version 7.4.101 Problem:    Using \1 in pattern goes one line too far. (Bohr Shaw, John Little) Solution:   Only advance the match end for the matched characters in the last             line.
updated for version 7.4.100 Problem:    NFA regexp doesn't handle backreference correctly. (Ryuichi             Hayashida, Urtica Dioica) Solution:   Always add NFA_SKIP, also when it already exists at the start             position.
updated for version 7.4.099 Problem:    Append in blockwise Visual mode with "$" is wrong. Solution:   After "$" don't use the code that checks if the cursor was moved.             (Hirohito Higashi, Ken Takata)
updated for version 7.4.098 Problem:    When using ":'<,'>del" errors may be given for the visual line             numbers being out of range. Solution:   Reset Visual mode in ":del". (Lech Lorens)
updated for version 7.4.097 Problem:    Unexpected behavior change related to 'virtualedit'. (Ingo Karkat) Solution:   Update the valid cursor position. (Christian Brabandt)
updated for version 7.4.096 Problem:    Can't change directory to an UNC path. Solution:   Use win32_getattrs() in mch_getperm(). (Christian Brabandt)
updated for version 7.4.095 Problem:    Regexp for LuaJIT version doesn't work on BSD. Solution:   Use "*" instead of "\+" and "\?". (Ozaki)
updated for version 7.4.094 Problem:    Configure may not find that -lint is needed for gettext(). Solution:   Check for gettext() with empty $LIBS.  (Thomas De Schampheleire)
updated for version 7.4.093 Problem:    Configure can't use LuaJIT on ubuntu 12.04. Solution:   Adjust the configure regexp that locates the version number.             (Charles Strahan)
Update runtime files.
updated for version 7.4.092 Problem:    Can't build small version. Solution:   Add #ifdef where the b_cjk flag is used. (Ken Takata)
updated for version 7.4.091 Problem:    Missing semicolon. Solution:   Add the semicolon.
updated for version 7.4.090 Problem:    Win32: When a directory name contains an exclamation mark,             completion doesn't complete the contents of the directory. Solution:   Escape the exclamation mark. (Jan Stocker)
updated for version 7.4.089 Problem:    When editing a file in a directory mounted through sshfs Vim             doesn't set the security context on a renamed file. Solution:   Add mch_copy_sec() to vim_rename(). (Peter Backes)
updated for version 7.4.088 Problem:    When spell checking is enabled Asian characters are always marked             as error. Solution:   When 'spelllang' contains "cjk" do not mark Asian characters as             error. (Ken Takata)
updated for version 7.4.086 Problem:    Skipping over an expression when not evaluating it does not work             properly for dict members. Solution:   Skip over unrecognized expression. (ZyX)
updated for version 7.4.085 Problem:    When inserting text in Visual block mode and moving the cursor the             wrong text gets repeated in other lines. Solution:   Use the '[ mark to find the start of the actually inserted text.             (Christian Brabandt)
updated for version 7.4.084 Problem:    Python: interrupt not being properly discarded. (Yggdroot Chen) Solution:   Discard interrupt in VimTryEnd. (ZyX)
updated for version 7.4.083 Problem:    It's hard to avoid adding a used pattern to the search history. Solution:   Add the ":keeppatterns" modifier. (Christian Brabandt)
Updated runtime files.
updated for version 7.4.082 Problem:    Using "gf" in a changed buffer suggests adding "!", which is not             possible. (Tim Chase) Solution:   Pass a flag to check_changed() wether adding ! make sense.
updated for version 7.4.081 Problem:    Wrong logic when ANALYZE is "yes". Solution:   Use or instead of and. (KF Leong)
updated for version 7.4.080 Problem:    Missing documentation for v:hlsearch. Solution:   Include the right file in the patch.
updated for version 7.4.079 Problem:    A script cannot detect whether 'hlsearch' highlighting is actually             displayed. Solution:   Add the "v:hlsearch" variable. (ZyX)
updated for version 7.4.078 Problem:    MSVC 2013 is not supported. Solution:   Recognize and support MSVC 2013. (Ed Brown)
updated for version 7.4.077 Problem:    DOS installer creates shortcut without a path, resulting in the             current directory to be C:\Windows\system32. Solution:   Use environment variables.
updated for version 7.4.076 Problem:    "cgn" does not wrap around the end of the file. (Dimitrov             Dimitrov) Solution:   Restore 'wrapscan' earlier. (Christian Brabandt)
updated for version 7.4.075 Problem:    Locally setting 'undolevels' is not tested. Solution:   Add a test. (Christian Brabandt)
updated for version 7.4.074 Problem:    When undo'ing all changes and creating a new change the undo             structure is incorrect. (Christian Brabandt) Solution:   When deleting the branch starting at the old header, delete the             whole branch, not just the first entry.
updated for version 7.4.073 Problem:    Setting undolevels for one buffer changes undo in another. Solution:   Make 'undolevels' a global-local option. (Christian Brabandt)
updated for version 7.4.072 Problem:    Crash when using Insert mode completion. Solution:   Avoid going past the end of pum_array. (idea by Fransisco Lopes)
updated for version 7.4.071 Problem:    Passing limits around too often. Solution:   Use limits from buffer.
updated for version 7.4.070 Problem:    Can't compile with tiny features. (Tony Mechelynck) Solution:   Add #ifdef.
updated for version 7.4.069 Problem:    Cannot right shift lines starting with #. Solution:   Allow the right shift when 'cino' contains #N with N > 0.             (Christian Brabandt)             Refactor parsing 'cino', store the values in the buffer.
updated for version 7.4.068 Problem:    Cannot build Vim on Mac with non-Apple compilers. Solution:   Remove the -no-cpp-precomp flag. (Misty De Meo)
updated for version 7.4.067 Problem:    After inserting comment leader, CTRL-\ CTRL-O does move the             cursor. (Wiktor Ruben) Solution:   Avoid moving the cursor. (Christian Brabandt)
updated for version 7.4.066 Problem:    MS-Windows: When there is a colon in the file name (sub-stream             feature) the swap file name is wrong. Solution:   Change the colon to "%". (Yasuhiro Matsumoto)
updated for version 7.4.065 Problem:    When recording, the character typed at the hit-enter prompt is             recorded twice. (Urtica Dioica) Solution:   Avoid recording the character twice. (Christian Brabandt)
updated for version 7.4.064 Problem:    When replacing a character in Visual block mode, entering a CR             does not cause a repeated line break. Solution:   Recognize the situation and repeat the line break. (Christian             Brabandt)
updated for version 7.4.063 Problem:    Crash when using invalid key in Python dictionary. Solution:   Check for object to be NULL.  Add tests. (ZyX)
Update runtime files.
updated for version 7.4.062 Problem:    Configure check for AvailabilityMacros.h is wrong. Solution:   Use AC_CHECK_HEADERS().
updated for version 7.4.061 Problem:    Availability macros configure check in wrong place. Solution:   Also check when not using Darwin. Remove version check.
updated for version 7.4.060 Problem:    Declaration has wrong return type for PyObject_SetAttrString(). Solution:   Use int instead of PyObject. (Andreas Schwab)
updated for version 7.4.059 Problem:    set_last_cursor() may encounter w_buffer being NULL.  (Matt             Mkaniaris) Solution:   Check for NULL.
updated for version 7.4.058 Problem:    Warnings on 64 bit Windows. Solution:   Add type casts. (Mike Williams)
updated for version 7.4.057 Problem:    byteidx() does not work for composing characters. Solution:   Add byteidxcomp().
updated for version 7.4.056 Problem:    Mac: Compilation problem with OS X 10.9 Mavericks. Solution:   Include AvailabilityMacros.h when available. (Kazunobu Kuriyama)
updated for version 7.4.055 Problem:    Mac: Where availability macros are defined depends on the system. Solution:   Add a configure check. (Felix Bünemann)
updated for version 7.4.054 Problem:    Reading past end of the 'stl' string. Solution:   Don't increment pointer when already at the NUL. (Christian             Brabandt)
updated for version 7.4.052 Problem:    With 'fo' set to "a2" inserting a space in the first column may             cause the cursor to jump to the previous line. Solution:   Handle the case when there is no comment leader properly. (Tor             Perkins)  Also fix that cursor is in the wrong place when spaces             get replaced with a Tab.
updated for version 7.4.051 Problem:    Syntax highlighting a Yaml file causes a crash. (Blake Preston) Solution:   Copy the pim structure before calling addstate() to avoid it             becoming invalide when the state list is reallocated.
Runtime file updates.
updated for version 7.4.050 Problem:    "gn" selects too much for the pattern "\d" when there are two             lines with a single digit. (Ryan Carney) Solution:   Adjust the logic of is_one_char(). (Christian Brabandt)
updated for version 7.4.049 Problem:    In Ex mode, when line numbers are enabled the substitute prompt is             wrong. Solution:   Adjust for the line number size. (Benoit Pierre)
updated for version 7.4.048 Problem:    Recent clang version complains about -fno-strength-reduce. Solution:   Add a configure check for the clang version. (Kazunobu Kuriyama)
updated for version 7.4.047 Problem:    When using input() in a function invoked by a mapping it doesn't             work. Solution:   Temporarily reset ex_normal_busy. (Yasuhiro Matsumoto)
updated for version 7.4.046 Problem:    Can't use Tcl 8.6. Solution:   Change how Tcl_FindExecutable is called. (Jan Nijtmans)
updated for version 7.4.045 Problem:    substitute() does not work properly when the pattern starts with             "\ze". Solution:   Detect an empty match. (Christian Brabandt)
updated for version 7.4.044 Problem:    Can't build with old MSVC. (Wang Shoulin) Solution:   Define OPEN_OH_ARGTYPE instead of using intptr_t directly.
updated for version 7.4.043 Problem:    VMS can't handle long function names. Solution:   Shorten may_req_ambiguous_character_width. (Samuel Ferencik)
updated for version 7.4.042 Problem:    When using ":setlocal" for 'spell' and 'spellang' then :spelldump             doesn't work. (Dimitar Dimitrov) Solution:   Copy the option variables to the new window used to show the dump.             (Christian Brabandt)
updated for version 7.4.041 Problem:    Visual selection does not remain after being copied over. (Axel             Bender) Solution:   Move when VIsual_active is reset. (Christian Brabandt)
updated for version 7.4.040 Problem:    Valgrind error on exit when a script-local variable holds a             reference to the scope of another script. Solution:   First clear all variables, then free the scopes. (ZyX)
updated for version 7.4.039 Problem:    MS-Windows: MSCV10 and earlier can't handle symlinks to a             directory properly. Solution:   Add stat_symlink_aware() and wstat_symlink_aware(). (Ken Takata)
updated for version 7.4.038 Problem:    Using "zw" and "zg" when 'spell' is off give a confusing error             message. (Gary Johnson) Solution:   Ignore the error when locating the word.  Explicitly mention what             word was added. (Christian Brabandt)
updated for version 7.4.037 Problem:    Using "\ze" in a sub-pattern does not result in the end of the             match to be set. (Axel Bender) Solution:   Copy the end of match position when a recursive match was             successful.
updated for version 7.4.036 Problem:    NFA engine does not capture group correctly when using \@>. (ZyX) Solution:   Copy submatches before doing the recursive match.
updated for version 7.4.035 Problem:    MS-Windows: The mouse pointer flickers when going from command             line mode to Normal mode. Solution:   Check for WM_NCMOUSEMOVE. (Ken Takata)
updated for version 7.4.034 Problem:    Using "p" in Visual block mode only changes the first line. Solution:   Repeat the put in all text in the block. (Christian Brabandt)
updated for version 7.4.033 Problem:    When the terminal has only 20 lines test 92 and 93 overwrite the             input file. Solution:   Explicitly write test.out. Check that the terminal is large enough             to run the tests.  (Hirohito Higashi)
Update runtime files.  Add support for J.
updated for version 7.4.032 Problem:    NFA engine does not match the NUL character. (Jonathon Merz) Solution:   Ues 0x0a instead of NUL. (Christian Brabandt)
updated for version 7.4.031 Problem:    ":diffoff!" resets options even when 'diff' is not set. (Charles             Cooper) Solution:   Only resets related options in a window where 'diff' is set.
updated for version 7.4.030 Problem:    The -mno-cygwin argument is no longer supported by Cygwin. Solution:   Remove the arguments. (Steve Hall)
Add files missing from 7.4.028.
updated for version 7.4.029 Problem:    An error in a pattern is reported twice. Solution:   Remove the retry with the backtracking engine, it won't work.
updated for version 7.4.028 Problem:    Equivalence classes are not working for multi-byte characters. Solution:   Copy the rules from the old to the new regexp engine. Add a test             to check both engines.
updated for version 7.4.027 Problem:    Another valgrind error when using CTRL-X CTRL-F at the start of             the line. (Dominique Pelle) Solution:   Don't call mb_ptr_back() at the start of the line.  Add a test.
updated for version 7.4.026 Problem:    Clang warning for int shift overflow. Solution:   Use unsigned and cast back to int. (Dominique Pelle)
updated for version 7.4.025 Problem:    Reading before start of a string. Solution:   Do not call mb_ptr_back() at start of a string. (Dominique Pelle)
updated for version 7.4.024 Problem:    When root edits a file the undo file is owned by root while the             edited file may be owned by another user, which is not allowed.             (cac2s) Solution:   Accept an undo file owned by the current user.
updated for version 7.4.023 Problem:    Compiler warning on 64 bit windows. Solution:   Add type cast. (Mike Williams)
Updated runtime files.
updated for version 7.4.022 Problem:    Deadlock while exiting, because of allocating memory. Solution:   Do not use gettext() in deathtrap(). (James McCoy)
updated for version 7.4.021 Problem:    NFA regexp: Using \ze in one branch which doesn't match may cause             end of another branch to be wrong. (William Fugh) Solution:   Set end position if it wasn't set yet.
updated for version 7.4.020 Problem:    NFA engine matches too much with \@>. (John McGowan) Solution:   When a whole pattern match is found stop searching.
updated for version 7.4.019 Problem:    MS-Windows: File name completion doesn't work properly with             Chinese characters. (Yue Wu) Solution:   Take care of multi-byte characters when looking for the start of             the file name. (Ken Takata)
updated for version 7.4.018 Problem:    When completing item becomes unselected. (Shougo Matsu) Solution:   Revert patch 7.3.1269.
updated for version 7.4.017 Problem:    ":help !!" does not find the "!!" tag in the help file. (Ben             Fritz) Solution:   When reading the start of the tags file do parse lines that are             not header lines.
updated for version 7.4.016 Problem:    MS-Windows: File name completion doesn't work properly with             Chinese characters. (Yue Wu) Solution:   Add fname_casew(). (Ken Takata)
updated for version 7.4.015 Problem:    MS-Windows: Detecting node type does not work for multi-byte             characters. Solution:   Use wide character function when needed. (Ken Takata)
updated for version 7.4.013 Problem:    File name buffer too small for utf-8. Solution:   Use character count instead of byte count. (Ken Takata)
updated for version 7.4.012 Problem:    MS-Windows: resolving shortcut does not work properly with             multi-byte characters. Solution:   Use wide system functions. (Ken Takata)
updated for version 7.4.011 Problem:    Cannot find out if "acl" and "xpm" features are supported. Solution:   Add "acl" and "xpm" to the list of features. (Ken Takata)
updated for version 7.4.010 Problem:    Crash with invalid argument to mkdir(). Solution:   Check for empty string. (lcd47)
updated for version 7.4.009 Problem:    When a file was not decrypted (yet), writing it may destroy the             contents. Solution:   Mark the file as readonly until decryption was done. (Christian             Brabandt)
updated for version 7.4.008 Problem:    New regexp engine can't be interrupted. Solution:   Check for CTRL-C pressed. (Yasuhiro Matsumoto)
updated for version 7.4.007 Problem:    Creating a preview window on startup leaves the screen layout in a             messed up state. (Marius Gedminas) Solution:   Don't change firstwin. (Christian Brabandt)
updated for version 7.4.006 Problem:    mkdir("foo/bar/", "p") gives an error message. (David Barnett) Solution:   Remove the trailing slash. (lcd)
updated for version 7.4.005 Problem:    Using "vaB" while 'virtualedit' is set selects the wrong area.             (Dimitar Dimitrov) Solution:   Reset coladd when finding a match.
updated for version 7.4.004 Problem:    When closing a window fails ":bwipe" may hang. Solution:   Let win_close() return FAIL and break out of the loop.
updated for version 7.4.003 Problem:    Memory access error in Ruby syntax highlighting. (Christopher Chow) Solution:   Refresh stale pointer. (James McCoy)
updated for version 7.4.002 Problem:    Pattern with two alternative look-behind matches does not match.             (Amadeus Demarzi) Solution:   When comparing PIMs also compare their state ID to see if they are             different.
updated for version 7.4.001 Problem:    Character classes such as [a-z] to not react to 'ignorecase'.             Breaks man page highlighting. (Mario Grgic) Solution:   Add separate items for classes that react to 'ignorecase'.  Clean             up logic handling character classes.  Add more tests.
release version 7.4
updated for version 7.4b.022 Problem:    Not waiting for a character when the tick count overflows. Solution:   Subtract the unsigned numbers and cast to int. (Ken Takata)
updated for version 7.4b.021 Problem:    Pressing "u" after an external command results in multiple             press-enter messages. (glts) Solution:   Don't call hit_return_msg() when we have K_IGNORE. (Christian             Brabandt)
updated for version 7.4b.020 Problem:    "g~ap" changes first character of next paragraph. (Manuel Ortega) Solution:   Avoid subtracting (0 - 1) from todo.  (Mike Williams)
updated for version 7.4b.019 Problem:    Tabline is not updated properly when closing a tab on Win32. Solution:   Only reduce flickering when adding a tab. (Ken Takata)
updated for version 7.4b.018 Problem:    Win32: Dialog can still be too big. Solution:   Move the check for height further down. (Andrei Olsen)
updated for version 7.4b.017 Problem:    ":he \^x" gives a strange error message. (glts) Solution:   Do not translate \^x to \_CTRL-x.
updated for version 7.4b.016 Problem:    Ruby detection fails on Fedora 19. Solution:   Use one way to get the Ruby version. (Michael Henry)
updated for version 7.4b.015 Problem:    Can't compile without the 'acd' feature. Solution:   Add #ifdefs. (Kazunobu Kuriyama)
Update runtime files.
updated for version 7.4b.014 Problem:    Stupid mistake. Solution:   Changle "len" to "i".
updated for version 7.4b.013 Problem:    Install dir for JP man pages is wrong. Solution:   Remove ".UTF-8" from the directory name. (Ken Takata)
updated for version 7.4b.012 Problem:    Output from a shell command is truncated at a NUL. (lcd 47) Solution:   Change every NUL into an SOH.
updated for version 7.4b.011 Problem:    ":he \%(\)" does not work. (ZyX) Solution:   Add an exception to the list.
updated for version 7.4b.010 Problem:    Win32: Tcl library load does not use standard mechanism. Solution:   Call vimLoadLib() instead of LoadLibraryEx(). (Ken Takata)
updated for version 7.4b.009 Problem:    When setting the Visual area manually and 'selection' is             exclusive, a yank includes one character too much. (Ingo Karkat) Solution:   Default the Visual operation to "v". (Christian Brabandt)
updated for version 7.4b.008 Problem:    'autochdir' causes setbufvar() to change the current directory.             (Ben Fritz) Solution:   When disabling autocommands also reset 'acd' temporarily.             (Christian Brabandt)
updated for version 7.4b.007 Problem:    On 32 bit MS-Windows :perldo does not work. Solution:   Make sure time_t uses 32 bits. (Ken Takata)
updated for version 7.4b.006 Problem:    Using \{n,m} in an autocommand pattern no longer works.             Specifically, mutt temp files are not recognized. (Gary Johnson) Solution:   Make \\\{n,m\} work.
updated for version 7.4b.005 Problem:    Finding %s in shellpipe and shellredir does not ignore %%s. Solution:   Skip over %%. (lcd 47)
updated for version 7.4b.004 Problem:    Regexp crash on pattern "@\%[\w\-]*". (Axel Kielhorn) Solution:   Add \%(\) around \%[] internally.
updated for version 7.4b.003 Problem:    Regexp code is not nicely aligned. Solution:   Adjust white space. (Ken Takata)
updated for version 7.4b.002 Problem:    Crash searching for \%(\%(\|\d\|-\|\.\)*\|\*\). (Marcin             Szamotulski)  Also for \(\)*. Solution:   Do add a state for opening parenthesis, so that we can check if it             was added before at the same position.
updated for version 7.4b.001 Problem:    Win32: dialog may extend off-screen. Solution:   Reduce the size, use correct borders. (Andrei Olsen)
Update files for the 7.4b BETA release.
updated for version 7.4a.047 Problem:    Some comments are not so nice. Solution:   Change the comments.
Updated runtime files.
updated for version 7.4a.046 Problem:    Can't build without mbyte feature. Solution:   Add #ifdefs.
updated for version 7.4a.045 Problem:    Configure does not always find the right library for Lua.  Missing             support for LuaJit. Solution:   Improve the configure detection of Lua. (Hiroshi Shirosaki)
Updated runtime files.
updated for version 7.4a.044 Problem:    Test 96 sometimes fails. Solution:   Clear window from b_wininfo in win_free().  (Suggestion by             Yukihiro Nakadaira)
updated for version 7.4a.043 Problem:    More ml_get errors when adding or deleting lines from Python.             (Vlad Irnov) Solution:   Switch to a window with the buffer when possible.
updated for version 7.4a.042 Problem:    Crash when BufUnload autocommands close all buffers. (Andrew             Pimlott) Solution:   Set curwin->w_buffer to curbuf to avoid NULL.
updated for version 7.4a.041 Problem:    When using ":new ++ff=unix" and "dos" is first in 'fileformats'             then 'ff' is set to "dos" instead of "unix". (Ingo Karkat) Solution:   Create set_file_options() and invoke it from do_ecmd().
updated for version 7.4a.040 Problem:    Win32: using uninitialized variable. Solution:   (Yukihiro Nakadaira)
updated for version 7.4a.039 Problem:    New regexp engine doesn't match pattern. (Ingo Karkat) Solution:   When adding a state also check for different PIM if the list of             states has any state with a PIM.
updated for version 7.4a.038 Problem:    When using MSVC 2012 there are various issues, including GUI size             computations. Solution:   Use SM_CXPADDEDBORDER. (Mike Williams)
updated for version 7.4a.037 Problem:    Win32: When mouse is hidden and in the toolbar, moving it won't             make it appear. (Sami Salonen) Solution:   Add tabline_wndproc() and toolbar_wndproc(). (Ken Takata)
updated for version 7.4a.036 Problem:    "\p" in a regexp does not match double-width characters.             (Yukihiro Nakadaira) Solution:   Don't count display cells, use vim_isprintc().
Updated runtime files.
updated for version 7.4a.034 Problem:    The tabline may flicker when opening a new tab after 7.3.759 on             Win32. Solution:   Move call to TabCtrl_SetCurSel(). (Ken Takata)
updated for version 7.4a.033 Problem:    Test 98 always passes. Solution:   Include test98a.in in test98.in, execute the crucial command in             one line. (Yukihiro Nakadaira)
updated for version 7.4a.032 Problem:    New regexp engine: Does not match shorter alternative. (Ingo             Karkat) Solution:   Do not drop a new state when the PIM info is different.
updated for version 7.4a.031 Problem:    Compiler warnings. (Charles Campbell) Solution:   Initialize variables even when not needed.
updated for version 7.4a.030 Problem:    Missing find_win_for_buf(). (toothpik) Solution:   Add missing changes.
updated for version 7.4a.029 Problem:    Can't build with MzScheme on Ubuntu 13.04. Solution:   Add configure check for the "ffi" library.
updated for version 7.4a.028 Problem:    Crash when spell checking in new buffer. Solution:   Set the b_p_key field.  (Mike Williams)
updated for version 7.4a.027 Problem:    When Python adds lines to another buffer the cursor position is             wrong, it might be below the last line causing ml_get errors.             (Vlad Irnov) Solution:   Temporarily change the current window, so that marks are corrected             properly.
updated for version 7.4a.026 Problem:    ":diffoff" does not remove folds. (Ramel) Solution:   Do not restore 'foldenable' when 'foldmethod' is "manual".
updated for version 7.4a.025 Problem:    Get the press-Enter prompt even after using :redraw. Solution:   Clear need_wait_return when executing :redraw.
updated for version 7.4a.024 Problem:    X11 GUI: Checking icon height twice. Solution:   Check height and width. (Dominique Pelle)
updated for version 7.4a.023 Problem:    Still another superfluous parenthesis. (ZyX) Solution:   Remove it.
updated for version 7.4a.022 Problem:    Using "d2g$" does not delete the last character. (ZyX) Solution:   Set the "inclusive" flag properly.
updated for version 7.4a.021 Problem:    Using feedkeys() doesn't always work. Solution:   Omit feedkeys(). (Ken Takata)
updated for version 7.4a.020 Problem:    Superfluous mb_ptr_adv(). Solution:   Remove the call. (Dominique Pelle)
updated for version 7.4a.019 Problem:    Invalid closing parenthesis in test 62. Command truncated at             double quote. Solution:   Remove the parenthesis. Change double quote to ''. (ZyX)
updated for version 7.4a.018 Problem:    Compiler warning for code unreachable. (Charles Campbell) Solution:   Use "while" instead of endless loop.  Change break to continue.
updated for version 7.4a.017 Problem:    When 'foldmethod' is "indent", using ">>" on a line just above a             fold makes the cursor line folded. (Evan Laforge) Solution:   Call foldOpenCursor(). (Christian Brabandt)
updated for version 7.4a.016 Problem:    Features enabled in Makefile. Solution:   Undo accidental changes.
updated for version 7.4a.015 Problem:    No Japanese man pages. Solution:   Add Japanese translations of man pages. (Ken Takata, Yukihiro             Nakadaira, et al.)
updated for version 7.4a.014 Problem:    Test 86 and 89 have a problem with using a shadow dir. Solution:   Adjust for the different directory structure. (James McCoy)
updated for version 7.4a.013 Problem:    Setting/resetting 'lbr' in the main help file changes alignment             after a Tab. (Dimitar Dimitrov) Solution:   Also use the code for conceal mode where n_extra is computed for             'lbr'.
updated for version 7.4a.012 Problem:    "make test" fails when using a shadow directory. Solution:   Create links for files in src/po. (James McCoy)
updated for version 7.4a.011 Problem:    Configure check for Python 3 config name isn't right. Solution:   Always include vi_cv_var_python3_version. (Tim Harder)
updated for version 7.4a.010 Problem:    Test 86 and 97 fail when building with Python or Python 3 and             using a static library. Solution:   Add configure check to add -fPIE compiler flag.
updated for version 7.4a.009 Problem:    Compiler warnings for function prototypes. Solution:   Add "void".  Move list_features() prototype. (Ken Takata)
updated for version 7.4a.008 Problem:    Python 3 doesn't handle multibyte characters prooperly when             'encoding' is not utf-8. Solution:   Use PyUnicode_Decode() instead of PyUnicode_FromString(). (Ken             Takata)
updated for version 7.4a.007 Problem:    After "g$" with 'virtualedit' set, "k" moves to a different             column.  (Dimitar Dimitrov) Solution:   Set w_curswant. (Christian Brabandt)
updated for version 7.4a.006 Problem:    Failure in po file check goes unnoticed. Solution:   Fail "make test" if the po file check fails.
updated for version 7.4a.005 Problem:    Scroll binding causes unexpected scroll. Solution:   Store the topline after updating scroll binding.  Add a test.             (Lech Lorens)
updated for version 7.4a.004 Problem:    MSVC 2012 Update 3 is not recognized. Solution:   Add the version number. (Raymond Ko)
updated for version 7.4a.003 Problem:    Copyright year is oudated. Solution:   Only use the first year.
updated for version 7.4a.002 Problem:    Valgrind errors in test 89. (Simon Ruderich) Solution:   Allocate one more byte. (Dominique Pelle)
updated for version 7.4a.001 Problem:    Script to update syntax menu is oudated. Solution:   Add the missing items. (only changing the version, file was already updated)
Vim 7.4a BETA release.
Update runtime files.
updated for version 7.3.1314 Problem:    Test 87 fails with Python 3.3. Solution:   Filter the error messages. (Taro Muraoka)
updated for version 7.3.1313 Problem:    :py and :py3 don't work when compiled with Cygwin or MingW with 64             bit. Solution:   Add -DMS_WIN64 to the build command. (Ken Takata)
updated for version 7.3.1312 Problem:    Not giving correct error messages for SystemExit(). Solution:   Move E858 into an else. (Ken Takata)
A few updated runtime files.
updated for version 7.3.1311 Problem:    Compiler warnings on Cygwin. Solution:   Add type casts. Add windows include files. (Ken Takata)
updated for version 7.3.1309 Problem:    When a script defines a function the flag to wait for the user to             hit enter is reset. Solution:   Restore the flag. (Yasuhiro Matsumoto)  Except when the user was             typing the function.
updated for version 7.3.1308 Problem:    Typos in MS-Windows build settings and README. Solution:   Minor changes to MS-Windows files.
updated for version 7.3.1307 Problem:    MS-Windows build instructions are outdated. Solution:   Adjust for building on Windows 7.  Drop Windows 95/98/ME support.
updated for version 7.3.1306 Problem:    When redrawing the screen during startup the intro message may be             cleared. Solution:   Redisplay the intro message when appropriate.
updated for version 7.3.1305 Problem:    Warnings from 64 bit compiler. Solution:   Add type casts.
updated for version 7.3.1304 Problem:    Test 89 still fails on MS-Windows. Solution:   Set 'shellslash'. (Taro Muraoka)
updated for version 7.3.1303 Problem:    Undo is synced whenever CTRL-R = is called, breaking some plugins. Solution:   Only break undo when calling setline() or append().
updated for version 7.3.1300 Problem:    Mac: tiny and small build fails. Solution:   Don't include os_macosx.m in tiny build. Include mouse support in             small build. (Kazunobu Kuriyama)
updated for version 7.3.1299 Problem:    Errors when doing "make proto".  Didn't do "make depend" for a             while. Solution:   Add #ifdefs.  Update dependencies.  Update proto files.
updated for version 7.3.1298 Problem:    Crash. Solution:   Use STRCPY() instead of STRCAT() and allocate one more byte.
updated for version 7.3.1297 Problem:    findfile() directory matching does not work when a star follows             text. (Markus Braun) Solution:   Make a wildcard work properly. (Christian Brabandt)
updated for version 7.3.1296 Problem:    Only MS-Windows limits the GUI window size to what fits on the             monitor. Solution:   Limit the size for all systems. (Daniel Harding)
updated for version 7.3.1295 Problem:    glob() and globpath() do not handle escaped special characters             properly. Solution:   Handle escaped characters differently. (Adnan Zafar)
updated for version 7.3.1294 Problem:    ":diffoff" resets options. Solution:   Save and restore option values. (Christian Brabandt)
updated for version 7.3.1293 Problem:    Put in empty buffer cannot be undone. Solution:   Save one more line for undo. (Ozaki)
updated for version 7.3.1292 Problem:    Possibly using invalid pointer when searcing for window. (Raichoo) Solution:   Use "firstwin" instead of "tp_firstwin" for current tab.
updated for version 7.3.1291 Problem:    Compiler warnings for uninitialized variables. (Tony Mechelynck) Solution:   Initialize the variables.
updated for version 7.3.1290 Problem:    CTRL-R = in Insert mode changes the start of the insert position.             (Ingo Karkat) Solution:   Only break undo, don't start a new insert.
updated for version 7.3.1289 Problem:    Get GLIB warning when removing a menu item. Solution:   Reference menu-id and also call gtk_container_remove().  (Ivan             Krasilnikov)
updated for version 7.3.1288 Problem:    The first ":echo 'hello'" command output doesn't show.  Mapping             for <S-F3> gets triggered during startup. Solution:   Add debugging code for the termresponse.  When receiving the "Co"             entry and when setting 'ambiwidth' redraw right away if possible.             Add redraw_asap().  Don't set 'ambiwidth' if it already had the             right value.  Do the 'ambiwidth' check in the second row to avoid             confusion with <S-F3>.
updated for version 7.3.1287 Problem:    Python SystemExit exception is not handled properly. Solution:   Catch the exception and give an error. (Yasuhiro Matsumoto, Ken             Takata)
updated for version 7.3.1286 Problem:    Check for screen size missing for Athena and Motif. Solution:   Add call to limit_screen_size().
updated for version 7.3.1285 Problem:    No tests for picking a window when selecting an entry in a             location list.  Not picking the right window sometimes. Solution:   Add test 96. Set usable_win appropriately. (Lech Lorens)
updated for version 7.3.1284 Problem:    Compiler warnings in MS-Windows clipboard handling. Solution:   Add type casts. (Ken Takata)
updated for version 7.3.1283 Problem:    Test 71 fails on MS-Windows. Solution:   Put the binary data in a separate file. (Ken Takata)
updated for version 7.3.1282 Problem:    'cursorline' not drawn in any other window. (Charles Campbell) Solution:   Do draw the cursor line in other windows.
updated for version 7.3.1281 Problem:    When 'ttymouse' is set to "xterm2" clicking in column 123 moves             the cursor to column 96. (Kevin Goodsell) Solution:   Decode KE_CSI.
updated for version 7.3.1280 Problem:    Reading memory already freed since patch 7.3.1247. (Simon             Ruderich, Dominique Pelle) Solution:   Copy submatches before reallocating the state list.
updated for version 7.3.1279 Problem:    Compiler warning for variable uninitialized. (Tony Mechelynck) Solution:   Add an init.
updated for version 7.3.1278 Problem:    When someone sets the screen size to a huge value with "stty" Vim             runs out of memory before reducing the size. Solution:   Limit Rows and Columns in more places.
updated for version 7.3.1277 Problem:    In diff mode 'cursorline' also draws in the non-active window.             When 'nu' and 'sbr' are set the 'sbr' string is not underlined. Solution:   Only draw the cursor line in the current window. Combine the             'cursorline' and other highlighting attributes. (Christian             Brabandt)
updated for version 7.3.1276 Problem:    When using a cscope connection resizing the window may send             SIGWINCH to cscope and it quits. Solution:   Call setpgid(0, 0) in the child process. (Narendran Gopalakrishnan)
updated for version 7.3.1274 Problem:    When selecting an entry from a location list it may pick an             arbitrary window or open a new one. Solution:   Prefer using a window related to the location list. (Lech Lorens)
updated for version 7.3.1273 Problem:    When copying a location list the index might be wrong. Solution:   Set the index to one when using the first entry. (Lech Lorens)
updated for version 7.3.1272 Problem:    Crash when editing Ruby file. (Aliaksandr Rahalevich) Solution:   Reallocate the state list when necessary.
updated for version 7.3.1271 Problem:    Command line completion does not work. Solution:   Move setting xp_line down. (Daniel Thau)
Updated runtime files.
updated for version 7.3.1270 Problem:    Using "Vp" in an empty buffer can't be undone. (Hauke Petersen) Solution:   Save one line in an empty buffer. (Christian Brabandt)
updated for version 7.3.1269 Problem:    Insert completion keeps entry selected even though the list has             changed. (Olivier Teuliere) Solution:   Reset compl_shown_match and compl_curr_match. (Christian Brabandt)
updated for version 7.3.1268 Problem:    ACL support doesn't work when when compiled with MingW. Solution:   Support ACL on MingW. (Ken Takata)
updated for version 7.3.1267 Problem:    MS-Windows ACL support doesn't work well. Solution:   Implement more ACL support. (Ken Takata)
updated for version 7.3.1266 Problem:    QNX: GUI fails to start. Solution:   Remove the QNX-specific #ifdef. (Sean Boudreau)
updated for version 7.3.1265 Problem:    Accepting "Vim:" for a modeline causes errors too often. Solution:   Require "Vim:" to be followed by "set".
updated for version 7.3.1264 Problem:    Missing m_nowait. Solution:   Include missing part of the patch.
updated for version 7.3.1263 Problem:    Typo in short option name. Solution:   Change "imse" to "imsf".
updated for version 7.3.1262 Problem:    Crash and compilation warnings with Cygwin. Solution:   Check return value of XmbTextListToTextProperty(). Add type casts.             Adjust #ifdefs. (Lech Lorens)
updated for version 7.3.1261 Problem:    A buffer-local language mapping from a keymap stops a global             insert mode mapping from working. (Ron Aaron) Solution:   Do not wait for more characters to be typed only when the mapping             was defined with <nowait>.
updated for version 7.3.1260 Problem:    User completion does not get the whole command line in the command             line window. Solution:   Pass on the whole command line. (Daniel Thau)
updated for version 7.3.1259 Problem:    No test for patch 7.3.1258 Solution:   Add a test entry.
updated for version 7.3.1258 Problem:    Using submatch() may crash Vim. (Ingo Karkat) Solution:   Restore the number of subexpressions used.
updated for version 7.3.1257 Problem:    With GNU gettext() ":lang de_DE.utf8" does not always result in             German messages. Solution:   Clear the $LANGUAGE environment variable.
updated for version 7.3.1256 Problem:    Can't build without eval or autocmd feature. Solution:   Add #ifdefs.
Update runtime files.  Remove duplicate tags in help.
updated for version 7.3.1255 Problem:    Clang warnings when building with Athena. Solution:   Add type casts. (Dominique Pelle)
updated for version 7.3.1254 Problem:    Can't build without the multi-lang feature. (John Marriott) Solution:   Add #ifdef.
updated for version 7.3.1253 Problem:    Still undo problem after using CTRL-R = setline(). (Hirohito             Higashi) Solution:   Set the ins_need_undo flag.
updated for version 7.3.1252 Problem:    Gvim does not find the toolbar bitmap files in ~/vimfiles/bitmaps             if the corresponding menu command contains additional characters             like the shortcut marker '&' or if you use a non-english locale. Solution:   Use menu->en_dname or menu->dname. (Martin Gieseking)
updated for version 7.3.1251 Problem:    Test 61 messes up viminfo. Solution:   Specify a separate viminfo file.
updated for version 7.3.1250 Problem:    Python tests fail on MS-Windows. Solution:   Change backslashes to slashes. (Taro Muraoka)
updated for version 7.3.1249 Problem:    Modeline not recognized when using "Vim" instead of "vim". Solution:   Also accept "Vim".
updated for version 7.3.1248 Problem:    Still have old hacking code for Input Method. Solution:   Add 'imactivatefunc' and 'imstatusfunc' as a generic solution to             Input Method activation. (Yukihiro Nakadaira)
updated for version 7.3.1247 Problem:    New regexp engine: '[ ]\@!\p\%([ ]\@!\p\)*:' does not always match. Solution:   When there is a PIM add a duplicate state that starts at another             position.
updated for version 7.3.1246 Problem:    When setting 'winfixheight' and resizing the window causes the             window layout to be wrong. Solution:   Add frame_check_height() and frame_check_width() (Yukihiro             Nakadaira)
Updated runtime files.  New version of TOhtml plugin.
updated for version 7.3.1245 Problem:    MS-Windows: confirm() dialog text may still not fit. Solution:   Use GetTextWidthEnc() instead of GetTextWidth() in two more             places. (Yasuhiro Matsumoto)
updated for version 7.3.1244 Problem:    MS-Windows: confirm() dialog text may not fit. Solution:   Use GetTextWidthEnc() instead of GetTextWidth(). (Yasuhiro             Matsumoto)
updated for version 7.3.1243 Problem:    New regexp engine: back references in look-behind match don't             work. (Lech Lorens) Solution:   Copy the submatches before a recursive match.
updated for version 7.3.1242 Problem:    No failure when trying to use a number as a string. Solution:   Give an error when StringToLine() is called with an instance of             the wrong type. (Jun Takimoto)
updated for version 7.3.1241 Problem:    Some test files missing from the distribution. Solution:   Update the list of files.
Update runtime files.
updated for version 7.3.1240 Problem:    Memory leak in findfile(). Solution:   Free the memory. (Christian Brabandt)
updated for version 7.3.1239 Problem:    Can't build with Python and MSVC10. Solution:   Move #if outside of macro. (Taro Muraoka)
updated for version 7.3.1238 Problem:    Crash in Python interface on 64 bit machines. Solution:   Change argument type of PyString_AsStringAndSize. (Taro Muraoka,             Jun Takimoto)
updated for version 7.3.1237 Problem:    Python: non-import errors not handled correctly. Solution:   Let non-ImportError exceptions pass the finder. (ZyX)
updated for version 7.3.1236 Problem:    Python: WindowSetattr() missing support for NUMBER_UNSIGNED. Solution:   Add NUMBER_UNSIGNED, add more tests. Various fixes. (ZyX)
updated for version 7.3.1235 Problem:    In insert mode CTRL-] is not inserted, on the command-line it is. Solution:   Don't insert CTRL-] on the command line. (Yukihiro Nakadaira)
updated for version 7.3.1234 Problem:    Python: Strings are not marked for translation. Solution:   Add N_() where appropriate. (ZyX)
updated for version 7.3.1232 Problem:    Python: inconsistencies in variable names. Solution:   Rename variables. (ZyX)
updated for version 7.3.1231 Problem:    Python: use of numbers not consistent. Solution:   Add support for Number protocol. (ZyX)
updated for version 7.3.1230 Problem:    Python: Exception messages are not clear. Solution:   Make exception messages more verbose. (ZyX)
updated for version 7.3.1229 Problem:    Python: not so easy to delete/restore translating. Solution:   Make macros do translation of exception messages. (ZyX)             Note: this breaks translations!
updated for version 7.3.1227 Problem:    Inconsistent string conversion. Solution:   Use 'encoding' instead of utf-8. Use METH_O in place of             METH_VARARGS where appropriate. (ZyX)
updated for version 7.3.1226 Problem:    Python: duplicate code. Solution:   Share code between OutputWrite() and OutputWritelines(). (ZyX)
updated for version 7.3.1225 Problem:    Compiler warnings when building with Motif. Solution:   Change set_label() argument. (Kazunobu Kuriyama)
updated for version 7.3.1224 Problem:    Clang gives warnings on xxd. Solution:   Change how to use part of a string. (Dominique Pelle) Also avoid             warning for return not reached.
updated for version 7.3.1223 Problem:    Tests fail on MS-Windows. Solution:   Avoid depending on OS version. Use DOS commands instead of Unix             commands. (Taro Muraoka, Ken Takata)
updated for version 7.3.1222 Problem:    Cannot execute some tests from the src directoly. Solution:   Add missing targets.
updated for version 7.3.1221 Problem:    When build flags change "make distclean" run into a configure             error. Solution:   When CFLAGS changes delete auto/config.cache.  Also avoid adding             duplicate text to flags.
updated for version 7.3.1220 Problem:    MS-Windows: When using wide font italic and bold are not included. Solution:   Support wide-bold, wide-italic and wide-bold-italic. (Ken Takata,             Taro Muraoka)
updated for version 7.3.1219 Problem:    No test for using []] inside \%[]. Solution:   Add a test.
updated for version 7.3.1218 Problem:    "make test" on MS-Windows does not clean all temporary files and             gives some unneccessary message. Solution:   Clean the right files.  Create .failed files. (Ken Takata)
updated for version 7.3.1217 Problem:    New regexp engine: Can't handle \%[[ao]]. (Yukihiro Nakadaira) Solution:   Support nested atoms inside \%[].
updated for version 7.3.1216 Problem:    Configure can't find Motif on Ubuntu. Solution:   Search for libXm in /usr/lib/*-linux-gnu.
updated for version 7.3.1215 Problem:    Compiler warning for function not defined. Solution:   Add #ifdef.
updated for version 7.3.1214 Problem:    Missing declaration for init_users() and realloc_post_list().             (Salman Halim) Solution:   Add the declarations.
updated for version 7.3.1213 Problem:    Can't build with small features and Python. Solution:   Adjust #ifdefs.
updated for version 7.3.1212 Problem:    "make test" on MS-Windows does not report failure like Unix does. Solution:   Make it work like on Unix. (Taro Muraoka)
updated for version 7.3.1211 Problem:    MS-Windows: When 'encoding' differs from the current codepage             ":hardcopy" does not work properly. Solution:   Use TextOutW() and SetDlgItemTextW(). (Ken Takata)
updated for version 7.3.1210 Problem:    'backupcopy' default on MS-Windows is wrong when 'encoding' equals             the current codepage. Solution:   Change the #else block. (Ken Takata)
updated for version 7.3.1209 Problem:    No completion for ":tabdo". Solution:   Add tabdo to the list of modifiers. (Dominique Pelle)
updated for version 7.3.1208 Problem:    Compiler warnings on MS-Windows. Solution:   Add type cast.  Move variable declaration. (Mike Williams)
updated for version 7.3.1207 Problem:    New regexp engine: no match found on "#if FOO". (Lech Lorens) Solution:   When adding a state gets skipped don't adjust the index.
updated for version 7.3.1206 Problem:    Inconsistent function argument declarations. Solution:   Use ANSI style.
updated for version 7.3.1205 Problem:    logtalk.dict is not removed on uninstall. Solution:   Remove the file. (Kazunobu Kuriyama)
updated for version 7.3.1204 Problem:    Calling gettabwinvar() in 'tabline' cancels Visual mode. (Hirohito             Higashi) Solution:   Don't always use goto_tabpage_tp().
updated for version 7.3.1203 Problem:    Matches from matchadd() might be highlighted incorrectly when they             are at a fixed position and inserting lines. (John Szakmeister) Solution:   Redraw all lines below a change if there are highlighted matches.             (idea by Christian Brabandt)
updated for version 7.3.1202 Problem:    Tags are not found in case-folded tags file. (Darren cole, Issue             90) Solution:   Take into account that when case folding was used for the tags             file "!rm" sorts before the "!_TAG" header lines.
updated for version 7.3.1201 Problem:    When a startup script creates a preview window, it probably             becomes the current window. Solution:   Make another window the current one. (Christian Brabandt)
Updated runtime files.
updated for version 7.3.1200 Problem:    When calling setline() from Insert mode, using CTRL-R =, undo does             not work properly. (Israel Chauca) Solution:   Sync undo after evaluating the expression. (Christian Brabandt)
updated for version 7.3.1199 Problem:    When evaluating 'foldexpr' causes an error this is silently             ignored and evaluation is retried every time. Solution:   Set emsg_silent instead of emsg_off. Stop evaluating 'foldexpr' is             it is causing errors.  (Christian Brabandt)
updated for version 7.3.1198 Problem:    Build error when using Perl 5.18.0 and dynamic loading. Solution:   Change #ifdefs for Perl_croak_xs_usage. (Ike Devolder)
updated for version 7.3.1197 Problem:    ":wviminfo!" does not write history previously read from a viminfo             file.  (Roland Eggner) Solution:   When not merging history write all entries.
updated for version 7.3.1195 Problem:    Compiler warning for unitialized variable. (Tony Mechelynck) Solution:   Set the length to the matching backref.
updated for version 7.3.1194 Problem:    Yaml highlighting is slow. Solution:   Tune the estimation of pattern failure chance.
updated for version 7.3.1193 Problem:    fail_if_missing not used for Python 3. Solution:   Give an error when Python 3 can't be configured. (Andrei Olsen)
updated for version 7.3.1192 Problem:    Valgrind reports errors when using backreferences. (Dominique             Pelle) Solution:   Do not check the end of submatches.
updated for version 7.3.1191 Problem:    Backreference to previous line doesn't work. (Lech Lorens) Solution:   Implement looking in another line.
updated for version 7.3.1190 Problem:    Compiler warning for parentheses. (Christian Wellenbrock) Solution:   Change #ifdef.
updated for version 7.3.1189 Problem:    Highlighting is still wrong sometimes. (Dominique Pelle) Solution:   Also restore reginput properly.
updated for version 7.3.1188 Problem:    Newline characters messing up error message. Solution:   Remove the newlines. (Kazunobu Kuriyama)
updated for version 7.3.1187 Problem:    "s:" is recognized but "<SID>" is not. (ZyX) Solution:   Translate "<SID>" like "s:".
updated for version 7.3.1186 Problem:    Python 3: test 87 may crash. Solution:   Use _PyArg_Parse_SizeT instead of PyArg_Parse. (Jun Takimoto)
updated for version 7.3.1184 Problem:    Highlighting is sometimes wrong. (Axel Bender) Solution:   Fetch regline again when returning from recursive regmatch.
Add missing files from 7.3.1183.
updated for version 7.3.1183 Problem:    Python tests 86 and 87 fail. Solution:   Add "empty" files. (ZyX)
updated for version 7.3.1182 Problem:    'backupcopy' default on MS-Windows does not work for hard and soft             links. Solution:   Check for links. (David Pope, Ken Takata)
updated for version 7.3.1181 Problem:    Wrong error message for 1.0[0]. Solution:   Check for funcref and float separately. (Yasuhiro Matsumoto)
Update runtime files.
updated for version 7.3.1180 Problem:    When current directory changes, path from cscope may no longer be             valid. (AS Budden) Solution:   Always store the absolute path. (Christian Brabandt)
updated for version 7.3.1179 Problem:    When a global mapping starts with the same characters as a             buffer-local mapping Vim waits for a character to be typed to find             out whether the global mapping is to be used. (Andy Wokula) Solution:   Use the local mapping without waiting. (Michael Henry)
updated for version 7.3.1178 Problem:    Can't put all Vim config files together in one directory. Solution:   Load ~/.vim/vimrc if ~/.vimrc does not exist. (Lech Lorens)
updated for version 7.3.1177 Problem:    Wasting memory on padding. Solution:   Reorder struct fields. (Dominique Pelle)
updated for version 7.3.1176 Problem:    Compiler warnings on 64 bit system. Solution:   Add type casts. (Mike Williams)
updated for version 7.3.1175 Problem:    Using isalpha() and isalnum() can be slow. Solution:   Use range checks. (Mike Williams)
updated for version 7.3.1174 Problem:    Python 2 and 3 use different ways to load modules. Solution:   Use the same method. (ZyX)
updated for version 7.3.1173 Problem:    Python 2 tests don't have the same output everywhere. Solution:   Make the Python 2 tests more portable. (ZyX)
updated for version 7.3.1171 Problem:    Check for digits and ascii letters can be faster. Solution:   Use a trick with one comparison. (Dominique Pelle)
updated for version 7.3.1170 Problem:    Patch 7.3.1058 breaks backwards compatibility, not possible to use             a function reference as a string. (lilydjwg) Solution:   Instead of translating the function name only translate "s:".
updated for version 7.3.1169 Problem:    New regexp engine: some work is done while executing a pattern,             even though the result is predictable. Solution:   Do the work while compiling the pattern.
updated for version 7.3.1168 Problem:    Python "sane" configure checks give a warning message. Solution:   Use single quotes intead of escaped double quotes. (Ben Fritz)
updated for version 7.3.1167 Problem:    Python configure check doesn't reject Python 2 when requesting             Python 3.  Some systems need -pthreads instead of -pthread. Solution:   Adjust configure accordingly. (Andrei Olsen)
updated for version 7.3.1166 Problem:    Loading Python modules is not tested. Solution:   Enable commented-out tests, add missing files. (ZyX)
updated for version 7.3.1165 Problem:    HP-UX compiler can't handle zero size array. (Charles Cooper) Solution:   Make the array one item big.
updated for version 7.3.1164 Problem:    Can't test what is actually displayed on screen. Solution:   Add the screenchar() and screenattr() functions.
updated for version 7.3.1163 Problem:    Not easy to load Python modules. Solution:   Search "python2", "python3" and "pythonx" directories in             'runtimepath' for Python modules. (ZyX)
updated for version 7.3.1162 Problem:    Python: Memory leaks Solution:   Add more Py_DECREF(). (ZyX)
updated for version 7.3.1161 Problem:    Python: PyList_SetItem() is inefficient. Solution:   Use PyList_SET_ITEM() (ZyX)
updated for version 7.3.1160 Problem:    Mixing long and pointer doesn't always work. Solution:   Avoid cast to pointer.
updated for version 7.3.1159 Problem:    The round() function is not always available. (Christ van             Willegen) Solution:   Use the solution from f_round().
updated for version 7.3.1158 Problem:    Crash when running test 86. (Jun Takimoto) Solution:   Define PY_SSIZE_T_CLEAN early. (Elimar Riesebieter)
updated for version 7.3.1156 Problem:    Compiler warnings. (dv1445) Solution:   Initialize variables, even when the value isn't really used.
updated for version 7.3.1155 Problem:    MS-DOS: "make test" uses external rmdir command. Solution:   Rename "rmdir" to "rd". (Taro Muraoka)
updated for version 7.3.1154 Problem:    New regexp_nfa engine: Uneccessary code. Solution:   Remove uneccessary code.
updated for version 7.3.1153 Problem:    New regexp engine: Some look-behind matches are very expensive. Solution:   Pospone invisible matches further, until a match is almost found.
updated for version 7.3.1152 Problem:    In tiny build ireg_icombine is undefined. (Tony Mechelynck) Solution:   Add #ifdef.
updated for version 7.3.1151 Problem:    New regexp engine: Slow when a look-behind match is followed by a             zero-width match. Solution:   Postpone the look-behind match more often.
updated for version 7.3.1150 Problem:    New regexpengine: Slow when a look-behind match does not have a             width specified. Solution:   Try to compute the maximum width.
updated for version 7.3.1149 Problem:    New regexp engine: Matching plain text could be faster. Solution:   Detect a plain text match and handle it specifically.  Add             vim_regfree().
updated for version 7.3.1148 Problem:    No command line completion for ":syntime". Solution:   Implement the completion. (Dominique Pelle)
updated for version 7.3.1147 Problem:    New regexp engine: regstart is only used to find the first match. Solution:   Use regstart whenever adding the start state.
updated for version 7.3.1146 Problem:    New regexp engine: look-behind match not checked when followed by             zero-width match. Solution:   Do the look-behind match before adding the zero-width state.
updated for version 7.3.1145 Problem:    New regexp engine: addstate() is called very often. Solution:   Optimize adding the start state.
updated for version 7.3.1144 Problem:    "RO" is not translated everywhere. Solution:   Put inside _(). (Sergey Alyoshin)
updated for version 7.3.1143 Problem:    When mapping NUL it is displayed as an X. Solution:   Check for KS_ZERO instead of K_ZERO. (Yasuhiro Matsumoto)
updated for version 7.3.1142 Problem:    Memory leak in ":syntime report". Solution:   Clear the grow array. (Dominique Pelle)
updated for version 7.3.1141 Problem:    Win32: Check for available memory is not reliable and adds             overhead. Solution:   Remove mch_avail_mem(). (Mike Williams)
updated for version 7.3.1140 Problem:    New regexp engine: trying expensive match while the result is not             going to be used. Solution:   Check for output state already being in the state list.
updated for version 7.3.1139 Problem:    New regexp engine: negated flag is hardly used. Solution:   Add separate _NEG states, remove negated flag.
updated for version 7.3.1138 Problem:    New regexp engine: neglist no longer used. Solution:   Remove the now unused neglist.
updated for version 7.3.1137 Problem:    New regexp engine: collections are slow. Solution:   Handle all characters in one go.
Updated runtime files.
updated for version 7.3.1136 Problem:    ":func Foo" does not show attributes. Solution:   Add "abort", "dict" and "range". (Yasuhiro Matsumoto)
updated for version 7.3.1135 Problem:    Compiler warning for unused argument. Solution:   Add UNUSED.
updated for version 7.3.1134 Problem:    Running test 49 takes a long time. Solution:   Don't have it grep all files.
updated for version 7.3.1133 Problem:    New regexp engine is a bit slow. Solution:   Skip ahead to a character that must match.  Don't try matching a             "^" patter past the start of line.
updated for version 7.3.1132 Problem:    Crash when debugging regexp. Solution:   Do not try to dump subexpr that were not set.  Skip over count of             \% items.
updated for version 7.3.1131 Problem:    New regexp engine is a bit slow. Solution:   Do not clear the state list.  Don't copy syntax submatches when             not used.
updated for version 7.3.1130 Problem:    Can't build with anything but huge features. Solution:   Check for FEAT_PROFILE. (Yasuhiro Matsumoto)
updated for version 7.3.1129 Problem:    Can't see what pattern in syntax highlighting is slow. Solution:   Add the ":syntime" command.
updated for version 7.3.1128 Problem:    Now that the NFA engine handles everything every failure is a             syntax error. Solution:   Remove the syntax_error flag.
updated for version 7.3.1127 Problem:    No error for using empty \%[]. Solution:   Give error message.
updated for version 7.3.1126 Problem:    Compiler warning for unitialized variable. (Tony Mechelynck) Solution:   Assign something to the variable.
updated for version 7.3.1125 Problem:    Error for using \%V in a pattern in tiny Vim. Solution:   Allow using \%V but never match. (Dominique Pelle)
updated for version 7.3.1124 Problem:    Python: Crash on MS-Windows when os.fchdir() is not available. Solution:   Check for _chdir to be NULL. (Ken Takata)
updated for version 7.3.1123 Problem:    Can't build tiny Vim on MS-Windows. Solution:   Adjust #ifdef around using modif_fname(). (Mike Williams)
updated for version 7.3.1122 Problem:    New regexp engine: \%> not supported. Solution:   Implement \%>.
updated for version 7.3.1121 Problem:    New regexp engine: adding states that are not used. Solution:   Don't add the states.
updated for version 7.3.1120 Problem:    Crash when regexp logging is enabled. Solution:   Avoid using NULL pointers. Advance over count argument.
updated for version 7.3.1119 Problem:    Flags in 'cpo' are search for several times. Solution:   Store the result and re-use the flags.
updated for version 7.3.1118 Problem:    Match failure rate is not very specific. Solution:   Tune the failure rate for match items.
updated for version 7.3.1117 Problem:    New regexp engine: \%[abc] not supported. Solution:   Implement \%[abc].  Add tests.
updated for version 7.3.1116 Problem:    Can't build without Visual mode. Solution:   Add #ifdefs.
updated for version 7.3.1115 Problem:    Many users don't like the cursor line number when 'relativenumber'             is set. Solution:   Have four combinations with 'number' and 'relativenumber'.             (Christian Brabandt)
updated for version 7.3.1114 Problem:    Can't build without the syntax feature. Solution:   Add #ifdefs. (Erik Falor)
updated for version 7.3.1113 Problem:    New regexp engine: \%'m not supported. Solution:   Implement \%'m.  Add tests.
updated for version 7.3.1112 Problem:    New regexp engine: \%V not supported. Solution:   Implement \%V.  Add tests.
updated for version 7.3.1111 Problem:    nfa_recognize_char_class() implementation is inefficient. Solution:   Use bits in an int instead of chars in a string. (Dominique Pelle)
updated for version 7.3.1110 Problem:    New regexp matching: Using \@= and the like can be slow. Solution:   Decide whether to first try matching the zero-wdith part or what             follows, whatever is more likely to fail.
updated for version 7.3.1109 Problem:    Building on MS-Windows doesn't see changes in if_py_both.h. Solution:   Add a dependency. (Ken Takata)
updated for version 7.3.1108 Problem:    Error message for os.fchdir() (Charles Peacech) Solution:   Clear the error. (ZyX)
updated for version 7.3.1107 Problem:    Compiler warnings for unused variables. Solution:   Put the variables inside #ifdef.
updated for version 7.3.1106 Problem:    New regexp engine: saving and restoring lastlist in the states             takes a lot of time. Solution:   Use a second lastlist value for the first recursive call.
updated for version 7.3.1105 Problem:    New regexp engine: too much code in one function.  Dead code. Solution:   Move the recursive nfa_regmatch call to a separate function.             Remove the dead code.
updated for version 7.3.1104 Problem:    New regexp engine does not handle "~". Solution:   Add support for "~".
updated for version 7.3.1103 Problem:    New regexp engine: overhead in saving and restoring. Solution:   Make saving and restoring list IDs faster.  Don't copy or check \z             subexpressions when they are not used.
updated for version 7.3.1102 Problem:    Completion of ":py3do" and ":py3file" does not work after ":py3". Solution:   Make completion work. (Taro Muraoka)
updated for version 7.3.1101 Problem:    Configure doesn't find Python 3 on Ubuntu 13.04. Solution:   First try distutils.sysconfig. Also fix some indents.  (Ken             Takata)
updated for version 7.3.1100 Problem:    Python: a few more memory problems. Solution:   Add and remove Py_XDECREF(). (ZyX)
updated for version 7.3.1099 Problem:    Python: Changing directory with os.chdir() causes problems for             Vim's notion of directories. Solution:   Add vim.chdir() and vim.fchdir(). (ZyX)
updated for version 7.3.1098 Problem:    Python: Possible memory leaks Solution:   Add Py_XDECREF() calls. (ZyX)
updated for version 7.3.1097 Problem:    Python: a few recently added items are not documented. Solution:   Update the documentation. (ZyX)
updated for version 7.3.1096 Problem:    Python: popitem() was not defined in a standard way. Solution:   Remove the argument from popitem(). (ZyX)
updated for version 7.3.1095 Problem:    Compiler warnings for shadowed variables. (Christian Brabandt) Solution:   Rename new_state() to alloc_state().  Remove unnecessary             declaration.
updated for version 7.3.1094 Problem:    New regexp engine: Attempts to match "^" at every character. Solution:   Only try "^" at the start of a line.
updated for version 7.3.1093 Problem:    New regexp engine: When a sub expression is empty \1 skips a             character. Solution:   Make \1 try the current position when the match is emtpy.
updated for version 7.3.1091 Problem:    New regexp engine: no error when using \z1 or \z( where it does             not work. Solution:   Give an error message.
updated for version 7.3.1090 Problem:    New regexp engine does not support \z1 .. \z9 and \z(. Solution:   Implement the syntax submatches.
Updated runtime files and translations.
updated for version 7.3.1087 Problem:    A leading star is not seen as a normal char when \{} follows. Solution:   Save and restore the parse state properly.
updated for version 7.3.1086 Problem:    Old regexp engine accepts illegal range, new one doesn't. Solution:   Also accept the illegal range with the new engine.
updated for version 7.3.1085 Problem:    New regexp engine: Non-greedy multi doesn't work. Solution:   Implement \{-}.
updated for version 7.3.1084 Problem:    New regexp engine: only accepts up to \{,10}. Solution:   Remove upper limit.  Remove dead code with NFA_PLUS.
updated for version 7.3.1083 Problem:    New regexp engine: Does not support \%^ and \%$. Solution:   Support matching start and end of file.
updated for version 7.3.1082 Problem:    New regexp engine: Problem with \@= matching. Solution:   Save and restore nfa_match.
updated for version 7.3.1081 Problem:    Compiler warnings on 64-bit Windows. Solution:   Change variable types. (Mike Williams)
updated for version 7.3.1080 Problem:    Test 86 fails. Solution:   Comment out the parts that don't work.  Make it pass on 32 bit             systems.
updated for version 7.3.1078 Problem:    New regexp engine: \@! doesn't work. Solution:   Implement the negated version of \@=.
updated for version 7.3.1076 Problem:    New regexp engine: \@= and \& don't work. Solution:   Make these items work.  Add column info to logging.
updated for version 7.3.1075 Problem:    Compiler warning for storing a long_u in an int. Solution:   Declare the number as an int. (Mike Williams)
updated for version 7.3.1074 Problem:    Compiler warning for printf format. (Manuel Ortega) Solution:   Add type casts.
updated for version 7.3.1073 Problem:    New regexp engine may run out of states. Solution:   Allocate states dynamically.  Also make the test report errors.
updated for version 7.3.1072 Problem:    Compiler warning for unitialized variable. Solution:   Initialize it.
updated for version 7.3.1071 Problem:    New regexp engine: backreferences don't work correctly. Solution:   Add every possible start/end position on the state stack.
updated for version 7.3.1070 Problem:    Vim crashes in Python tests. Compiler warning for unused function. Solution:   Disable the tests for now. Move the function.
updated for version 7.3.1069 Problem:    Python: memory leaks. Solution:   Python patch 28: Purge out DICTKEY_CHECK_EMPTY macros. (ZyX)
updated for version 7.3.1068 Problem:    Python: Script is auto-loaded on function creation. Solution:   Python patch 27. (ZyX)
updated for version 7.3.1067 Problem:    Python: documentation lags behind. Solution:   Python patch 26. (ZyX)
updated for version 7.3.1066 Problem:    Python: Insufficient exception and error testing. Solution:   Python patch 25. (ZyX)
updated for version 7.3.1065 Problem:    Python: key mapping is not standard. Solution:   Puthon patch 24: use PyMapping_Keys. (ZyX)
updated for version 7.3.1064 Problem:    Python: insufficient error checking. Solution:   Python patch 23. (ZyX)
updated for version 7.3.1063 Problem:    Python: Function is not standard. Solution:   Python patch 22: make Function subclassable. (ZyX)
updated for version 7.3.1062 Problem:    Python: List is not standard. Solution:   Python patch 21: Add standard methods and fields. (ZyX)
updated for version 7.3.1061 Problem:    Python: Dictionary is not standard. Solution:   Python patch 20: Add standard methods and fields. (ZyX)
updated for version 7.3.1060 Problem:    Python: can't repr() a function. Solution:   Python patch 19: add FunctionRepr(). (ZyX)
updated for version 7.3.1059 Problem:    Python: Using fixed size buffers. Solution:   Python patch 18: Use python's own formatter. (ZyX)
updated for version 7.3.1058 Problem:    Call of funcref does not succeed in other script. Solution:   Python patch 17: add get_expanded_name(). (ZyX)
updated for version 7.3.1057 Problem:    Python: not enough compatibilty. Solution:   Python patch 16: Make OutputWritelines support any sequence object             (ZyX) Note: tests fail
updated for version 7.3.1055 Problem:    Negated collection does not match newline. Solution:   Handle newline differently. (Hiroshi Shirosaki)
updated for version 7.3.1053 Problem:    Python: no flag for types with tp_traverse+tp_clear. Solution:   Python patch 14: Add Py_TPFLAGS_HAVE_GC. (ZyX)
updated for version 7.3.1051 Problem:    Python: possible memory leaks. Solution:   Python patch 12: fix the leaks (ZyX)
updated for version 7.3.1050 Problem:    Python: Typo in pyiter_to_tv. Solution:   Python patch 11. (ZyX)
updated for version 7.3.1049 Problem:    Python: no consistent naming Solution:   Python patch 10: Rename DICTKEY_GET_NOTEMPTY to DICTKEY_GET. (ZyX)
updated for version 7.3.1048 Problem:    Python: no consistent naming. Solution:   Python patch 9: Rename d to dict and lookupDict to lookup_dict.             (ZyX)
updated for version 7.3.1047 Problem:    Python: dir() does not work properly. Solution:   Python patch 8.  Add __dir__ method to all objects with custom             tp_getattr supplemented by __members__ attribute for at least             python-2* versions.  __members__ is not mentioned in python-3*             dir() output even if it is accessible. (ZyX)
updated for version 7.3.1046 Problem:    Python: Using Py_BuildValue for building strings. Solution:   Python patch 7 and 7.5: Replace Py_BuildValue with             PyString_FromString. (ZyX)
updated for version 7.3.1045 Problem:    Python: No error handling for VimToPython function. Solution:   Python patch 6. (ZyX)
updated for version 7.3.1044 Problem:    Python: No {Buffer,TabPage,Window}.valid attributes. Solution:   Python patch 5: add .valid (ZyX)
updated for version 7.3.1043 Problem:    Python: Dynamic compilation with 2.3 fails. Solution:   Python patch 4. (ZyX)
updated for version 7.3.1042 Problem:    Python: can't assign to vim.Buffer.name. Solution:   Python patch 3. (ZyX)
updated for version 7.3.1041 Problem:    Python: Invalid read valgrind errors. Solution:   Python patch 2: defer DICTKEY_UNREF until key is no longer needed.             (ZyX)
updated for version 7.3.1040 Problem:    Python: Problems with debugging dynamic build. Solution:   Python patch 1. (ZyX)
updated for version 7.3.1039 Problem:    New regexp engine does not support \%23c, \%<23c and the like. Solution:   Implement them. (partly by Yasuhiro Matsumoto)
updated for version 7.3.1038 Problem:    Crash when using Cscope. Solution:   Avoid negative argument to vim_strncpy(). (Narendran             Gopalakrishnan)
updated for version 7.3.1037 Problem:    Look-behind matching is very slow on long lines. Solution:   Add a byte limit to how far back an attempt is made.
updated for version 7.3.1036 Problem:    Can't build on HP-UX. Solution:   Give the union a name. (John Marriott)
updated for version 7.3.1035 Problem:    Compiler warning on 64 bit windows. Solution:   Add type cast. (Mike Williams)
updated for version 7.3.1034 Problem:    New regexp code using strange multi-byte code. Solution:   Use the normal code to advance and backup pointers.
updated for version 7.3.1033 Problem:    "\1" .. "\9" are not supported in the new regexp engine. Solution:   Implement them.  Add a few more tests.
updated for version 7.3.1032 Problem:    "\ze" is not supported by the new regexp engine. Solution:   Make "\ze" work.
updated for version 7.3.1031 Problem:    Compiler warnings for shadowed variable. (John Little) Solution:   Move the variable declarations to the scope where they are used.
updated for version 7.3.1029 Problem:    New regexp performance: Unused position state being copied. Solution:   Keep track of which positions are actually valid.
updated for version 7.3.1028 Problem:    New regexp performance: Copying a lot of position state. Solution:   Only copy the sub-expressions that are being used.
updated for version 7.3.1027 Problem:    New regexp performance: Calling no_Magic() very often. Solution:   Remove magicness inline.
updated for version 7.3.1026 Problem:    New regexp: pattern that includs a new-line matches too early.             (john McGowan) Solution:   Do not start searching in the second line.
updated for version 7.3.1025 Problem:    New regexp: not matching newline in string. (Marc Weber) Solution:   Check for "\n" character.
updated for version 7.3.1024 Problem:    New regexp: End of matching pattern not set correctly. (Cesar             Romani) Solution:   Quit the loop after finding the match.  Store nfa_has_zend in the             program.
updated for version 7.3.1023 Problem:    Searching for composing char only and using \Z has different             results. Solution:   Make it match the composing char, matching everything is not             useful.
updated for version 7.3.1022 Problem:    Compiler warning for shadowed variable. (John Little) Solution:   Move declaration, rename variables.
updated for version 7.3.1021 Problem:    New regexp engine does not ignore order of composing chars. Solution:   Ignore composing chars order.
updated for version 7.3.1020 Problem:    Not all patterns are tested with auto / old / new engine. Solution:   Test patterns with three values of 'regexpengine'.
updated for version 7.3.1019 Problem:    These do not work with the new regexp engine: \%o123, \%x123,             \%d123, \%u123 and \%U123. Solution:   Implement these items.
updated for version 7.3.1018 Problem:    New regexp engine wastes memory. Solution:   Allocate prog with actual number of states, not estimated maximum             number of sates.
updated for version 7.3.1017 Problem:    Zero width match changes length of match. Solution:   For a zero width match put new states in the current position in             the state list.
updated for version 7.3.1016 Problem:    Unused field in nfa_state. Solution:   Remove lastthread.
updated for version 7.3.1014 Problem:    New regexp state dump is hard to read. Solution:   Make the state dump more pretty. (Taro Muraoka)
updated for version 7.3.1013 Problem:    New regexp logging is a bit messy. Solution:   Consistently use #defines, add explanatory comment. (Taro Muraoka)
updated for version 7.3.1012 Problem:    \Z does not work properly with the new regexp engine. Solution:   Make \Z work.  Add tests.
updated for version 7.3.1011 Problem:    New regexp engine is inefficient with multi-byte characters. Solution:   Handle a character at a time instead of a byte at a time.  Also             make \Z partly work.
updated for version 7.3.1010 Problem:    New regexp: adding \Z makes every character match. Solution:   Only apply ireg_icombine for composing characters.             Alsl add missing change from patch 1008. (Ken Takata)
updated for version 7.3.1009 Problem:    Compiler warning for ambiguous else. Solution:   Add curly braces.
updated for version 7.3.1008 Problem:    Test 95 fails on MS-Windows. Solution:   Set 'nomore'. Change \i to \f.  Change multi-byte character to             something that is not matching \i. (Ken Takata)
updated for version 7.3.1007 Problem:    Can't build on Minix 3.2.1. Solution:   Add a condition to an #ifdef. (Gautam Tirumala)
updated for version 7.3.1006 Problem:    NFA engine not used for "\_[0-9]". Solution:   Enable this, fixed in patch 1005.
updated for version 7.3.1004 Problem:    No error when option could not be set. Solution:   Report an error. (ZyX)
updated for version 7.3.1001 Problem:    Duplicate condition in if. Solution:   Remove one condition.
updated for version 7.3.999 Problem:    New regexp engine sets curbuf temporarily. Solution:   Use reg_buf instead, like the old engine.
Updated runtime files, language files and translations.
updated for version 7.3.997 Problem:    Vim and Python exceptions are different. Solution:   Make Vim exceptions be Python exceptions. (ZyX)
updated for version 7.3.996 Problem:    Python: Can't check types of what is returned by bindeval(). Solution:   Add vim.List, vim.Dictionary and vim.Function types. (ZyX)
updated for version 7.3.995 Problem:    Python: Module initialization is duplicated. Solution:   Move to shared file. (ZyX)
updated for version 7.3.994 Problem:    Python: using magic constants. Solution:   Use descriptive values for ml_flags. (ZyX)
updated for version 7.3.993 Problem:    Python: Later patch does things slightly differently. Solution:   Adjusted argument type changes. (ZyX)
updated for version 7.3.992 Problem:    Python: Too many type casts. Solution:   Change argument types. (ZyX)
updated for version 7.3.991 Problem:    More can be shared by Python 2 and 3. Solution:   Move more stuff to if_py_both. (ZyX)
updated for version 7.3.990 Problem:    Memory leak in new regexp engine. Solution:   Jump to end of function to free memory. (Dominique Pelle)
updated for version 7.3.989 Problem:    New regexp engine compares negative numbers to character. Solution:   Add missing case statements.
updated for version 7.3.988 Problem:    New regexp engine is slow. Solution:   Break out of the loop when the state list is empty.
updated for version 7.3.987 Problem:    No easy to run an individual test.  Tests 64 fails when             'encoding' is not utf-8. Solution:   Add individual test targets to the Makefile.  Move some lines from             test 64 to 95.
updated for version 7.3.986 Problem:    Test 95 doesn't pass when 'encoding' isn't utf-8. (Yasuhiro             Matsumoto) Solution:   Force 'encoding' to be utf-8.
updated for version 7.3.985 Problem:    GTK vim not started as gvim doesn't set WM_CLASS property to a             useful value. Solution:   Call g_set_prgname() on startup. (James McCoy)
updated for version 7.3.984 Problem:    A Visual mapping that uses CTRL-G works differently when started             from Insert mode. (Ein Brown) Solution:   Reset old_mapped_len when handling typed text in Select mode.
updated for version 7.3.983 Problem:    Uneccessary temp variable. Solution:   Remove the variable.
updated for version 7.3.982 Problem:    In the new regexp engine \p does not work on multi-byte             characters. Solution:   Don't point to an integer but the characters.
updated for version 7.3.981 Problem:    In the old regexp engine \i, \I, \f and \F don't work on             multi-byte characters. Solution:   Dereference pointer properly.
updated for version 7.3.980 Problem:    Regexp logs may contain garbage. Character classes don't work             correctly for multi-byte characters. Solution:   Check for end of post list.  Only use "is" functions for             characters up to 255. (Ken Takata)
updated for version 7.3.979 Problem:    Complex NFA regexp doesn't work. Solution:   Set actual state stack end instead of using an arbitrary number.             (Yasuhiro Matsumoto)
updated for version 7.3.978 Problem:    Regexp debug logs don't have a good name. Solution:   Use clear names and make it possible to write logs for the old and             new engines separately. (Taro Muraoka)
updated for version 7.3.977 Problem:    Compiler warnings on 64 bit Windows. Solution:   Add type casts. (Mike Williams)  Also fix some white space and             uncomment what was commented-out for testing.
updated for version 7.3.976 Problem:    Can't build on HP-UX. Solution:   Remove modern initialization. (John Marriott)
updated for version 7.3.975 Problem:    Crash in regexp parsing. Solution:   Correctly compute the end of allocated memory.
updated for version 7.3.974 Problem:    Can't build with ruby 1.8.5. Solution:   Only use ruby_init_stack() when RUBY_INIT_STACK is defined.             (Yukihiro Nakadaira)
updated for version 7.3.973 Problem:    Compiler warnings. Crash on startup. (Tony Mechelynck) Solution:   Change EMSG2 to EMSGN. Make array one character longer.
updated for version 7.3.972 Problem:    Cursor not restored after InsertEnter autocommand if it moved to             another line. Solution:   Also restore if the saved line number is still valid.  Allow             setting v:char to skip restoring.
updated for version 7.3.971 Problem:    No support for VS2012 static code analysis. Solution:   Add the ANALYZE option. (Mike Williams)
updated for version 7.3.970 Problem:    Syntax highlighting can be slow. Solution:   Include the NFA regexp engine.  Add the 'regexpengine' option to             select which one is used. (various authors, including Ken Takata,             Andrei Aiordachioaie, Russ Cox, Xiaozhou Liua, Ian Young)
updated for version 7.3.969 Problem:    Can't built with Python 3 and without Python 2. Solution:   Adjust #ifdef. (Xavier de Gaye)
updated for version 7.3.968 Problem:    Multi-byte support is only available when compiled with "big"             features. Solution:   Include multi-byte by default, with "normal" features.
updated for version 7.3.967 Problem:    Build fails on Mac OSX. (Greg Novack) Solution:   Undefine clear().
Update runtime files.
updated for version 7.3.966 Problem:    There is ":py3do" but no ":pydo". Solution:   Add the ":pydo" command. (Lilydjwg)
updated for version 7.3.965 Problem:    Python garbage collection not working properly. Solution:   Add support for garbage collection. (ZyX)
updated for version 7.3.964 Problem:    Python: not so easy to access tab pages. Solution:   Add window.tabpage, make window.number work with non-current tab             pages. (ZyX)
updated for version 7.3.963 Problem:    Setting curbuf without curwin causes trouble. Solution:   Add switch_buffer() and restore_buffer().  Block autocommands to             avoid trouble.
updated for version 7.3.962 Problem:    Python tests are not portable. Solution:   Use shiftwidth instead of iminsert. (ZyX)
updated for version 7.3.961 Problem:    Tests 86 and 87 fail when using another language than English. Solution:   Set the language to C in the test. (Dominique Pelle)
updated for version 7.3.960 Problem:    Compiler warning for unused variable. Solution:   Put declaration in #ifdef.
updated for version 7.3.959 Problem:    Missing error number. Solution:   Assign an error number.
updated for version 7.3.958 Problem:    Python: Iteration destructor not set. Solution:   Put IterDestructor to use. (ZyX)
updated for version 7.3.957 Problem:    Python does not have a "do" command like Perl or Lua. Solution:   Add the ":py3do" command. (Lilydjwg)
updated for version 7.3.956 Problem:    Python vim.bindeval() causes SIGABRT. Solution:   Make pygilstate a local variable. (Yukihiro Nakadaira)
updated for version 7.3.955 Problem:    Python: Not enough tests. Solution:   Add tests for vim.{current,window*,tabpage*}. (ZyX)
updated for version 7.3.954 Problem:    No check if PyObject_IsTrue fails. Solution:   Add a check for -1 value. (ZyX)
updated for version 7.3.953 Problem:    Python: string exceptions are deprecated. Solution:   Make vim.error an Exception subclass. (ZyX)
updated for version 7.3.952 Problem:    Python: It's not easy to change window/buffer/tabpage. Solution:   Add ability to assign to vim.current.{tabpage,buffer,window}.             (ZyX)
updated for version 7.3.951 Problem:    Python exceptions have problems. Solution:   Change some IndexErrors to TypeErrors. Make “line number out of             range” an IndexError.  Make “unable to get option value” a             RuntimeError. Make all PyErr_SetString messages start with             lowercase letter and use _(). (ZyX)
updated for version 7.3.950 Problem:    Python: Stack trace printer can't handle messages. Solution:   Make KeyErrors use PyErr_SetObject. (ZyX)
updated for version 7.3.949 Problem:    Python: no easy access to tabpages. Solution:   Add vim.tabpages and vim.current.tabpage. (ZyX)
updated for version 7.3.948 Problem:    Cannot build with Python 2.2 Solution:   Make Python interface work with Python 2.2             Make 2.2 the first supported version. (ZyX)
updated for version 7.3.947 Problem:    Python: No iterator for vim.list and vim.bufferlist. Solution:   Add the iterators. Also fix name of FunctionType. Add tests for             vim.buffers.  (ZyX)
updated for version 7.3.946 Problem:    Sometimes get stuck in waiting for cursor position report,             resulting in keys starting with <Esc>[ not working. Solution:   Only wait for more characters after <Esc>[ if followed by '?', '>'             or a digit.
updated for version 7.3.945 Problem:    Python: List of buffers is not very useful. Solution:   Make vim.buffers a map. No iterator yet. (ZyX)
updated for version 7.3.944 Problem:    External program receives the termrespone. Solution:   Insert a delay and discard input. (Hayaki Saito)
updated for version 7.3.942 Problem:    Python: SEGV in Buffer functions. Solution:   Call CheckBuffer() at the right time. (ZyX)
updated for version 7.3.941 Problem:    Stuff in if_py_both.h is ordered badly. Solution:   Reorder by type. (ZyX)
updated for version 7.3.940 Problem:    Python: Can't get position of window. Solution:   Add window.row and window.col. (ZyX)
updated for version 7.3.939 Problem:    Using Py_BuildValue is inefficient sometimes. Solution:   Use PyLong_FromLong(). (ZyX)
updated for version 7.3.938 Problem:    Python: not easy to get to window number. Solution:   Add vim.window.number. (ZyX)
updated for version 7.3.937 Problem:    More can be shared between Python 2 and 3. Solution:   Move code to if_py_both.h. (ZyX)
updated for version 7.3.936 Problem:    Ruby 1.8: Missing piece for static linking on 64 bit systems. Solution:   Define ruby_init_stack() (Hiroshi Shirosaki)             Also fix preprocessor indents.
updated for version 7.3.935 Problem:    Init stack works differently on 64 bit systems. Solution:   Handle 64 bit systems and also static library. (Yukihiro             Nakadaira)
updated for version 7.3.934 Problem:    E381 and E380 make the user think nothing happened. Solution:   Display the message indicating what error list is now active.             (Christian Brabandt)
updated for version 7.3.933 Problem:    Ruby on Mac crashes due to GC failure. Solution:   Init the stack from main(). (Hiroshi Shirosaki)
updated for version 7.3.932 Problem:    Compiler warning for uninitialized variable. (Tony Mechelynck) Solution:   Initialize the variable.
updated for version 7.3.931 Problem:    No completion for :xmap and :smap. (Yukihiro Nakadaira) Solution:   Add the case statements. (Christian Brabandt)
updated for version 7.3.930 Problem:    MSVC 2012 update is not recognized. Solution:   Update the version in the makefile. (Raymond Ko)
updated for version 7.3.929 Problem:    Compiler warning for unused variable. Not freeing unused string. Solution:   Remove the variable. Clear the options.
updated for version 7.3.928 Problem:    Can't build with strict C compiler. Solution:   Move declaration to start of block. (Taro Muraoka)
Updated runtime files.
updated for version 7.3.927 Problem:    Missing combining characters when putting text in a register. Solution:   Include combining characters. (David Bürgin)
updated for version 7.3.924 Problem:    Python interface can't easily access options. Solution:   Add vim.options, vim.window.options and vim.buffer.options. (ZyX)
updated for version 7.3.923 Problem:    Check for X11 header files fails on Solaris. Solution:   Only use -Werror for gcc. (Laurent Blume)
updated for version 7.3.922 Problem:    No test for what 7.3.918 fixes. Solution:   Add a test. (David Bürgin)
updated for version 7.3.921 Problem:    Trying to create a fontset handle when 'guifontset' is not set. Solution:   Add curly braces around the code block. (Max Kirillov)
updated for version 7.3.920 Problem:    Compiler warning for size_t to int. Solution:   Add a type cast. (Mike Williams)
updated for version 7.3.919 Problem:    An empty nl.po file does not work with an old msgfmt. Solution:   Put a single # in the file. (Laurent Blume)
Updated runtime files.
updated for version 7.3.918 Problem:    Repeating an Ex command after using a Visual motion does not work. Solution:   Check for an Ex command being used. (David Bürgin)
updated for version 7.3.917 Problem:    When a path ends in a backslash appending a comma has the wrong             effect. Solution:   Replace a trailing backslash with a slash. (Nazri Ramliy)
updated for version 7.3.916 Problem:    Using freed memory when pasting with the mouse (Issue 130). Solution:   Get the byte value early. (hint by Dominique Pelle)
updated for version 7.3.915 Problem:    When reading a file with encoding conversion fails at the end the             next encoding in 'fencs' is not used. Solution:   Retry with another encoding when possible. (Taro Muraoka)
updated for version 7.3.914 Problem:    ~/.viminfo is messed up when running tests. Solution:   Set the viminfo filename.
updated for version 7.3.913 Problem:    Still a crash when writing viminfo. Solution:   Add checks for NULL pointers. (Ron Aaron)
updated for version 7.3.912 Problem:    Typing a ":" command at the hit-enter dialog does not work if the             "file changed" dialog happens next. Solution:   Check for changed files before giving the hit-enter dialog.
updated for version 7.3.911 Problem:    Python: Access to Vim variables is not so easy. Solution:   Define vim.vars and vim.vvars. (ZyX)
updated for version 7.3.909 Problem:    Duplicate Python code. Solution:   Move more items to if_py_both.h. (ZyX)  Also avoid compiler             warnings for missing initializers.
updated for version 7.3.908 Problem:    Possible crash when using a list in Python. Solution:   Return early if the list is NULL. (ZyX)
updated for version 7.3.907 Problem:    Python uses IndexError when a dict key is not found. Solution:   Use KeyError instead. (ZyX)
updated for version 7.3.906 Problem:    The "sleep .2" for running tests does not work on Solaris. Solution:   Fall back to using "sleep 1". (Laurent Blume)
updated for version 7.3.905 Problem:    Crash when writing viminfo. (Ron Aaron) Solution:   Prevent freed history info to be used.
updated for version 7.3.904 Problem:    Using memory freed by the garbage collector. Solution:   Mark items in aucmd_win as used.
updated for version 7.3.903 Problem:    Crash on exit writing viminfo. (Ron Aaron) Solution:   Check for the history to be empty.
updated for version 7.3.902 Problem:    When deleting last buffer in other tab the tabline is not updated. Solution:   Set the redraw_tabline flag. (Yukihiro Nakadaira)
updated for version 7.3.901 Problem:    Outdated comment, ugly condition. Solution:   Update a few comments, break line.
updated for version 7.3.900 Problem:    Not obvious that some mouse features are mutual-exclusive. Solution:   Add a comment.
updated for version 7.3.898 Problem:    Memory leak reported by valgrind in test 91. Solution:   Only use default argument when needed.
updated for version 7.3.897 Problem:    Configure doesn't always find the shared library. Solution:   Change the configure script. (Ken Takata)
updated for version 7.3.895 Problem:    Valgrind error in test 91. (Issue 128) Solution:   Pass scope name to find_var_in_ht().
updated for version 7.3.894 Problem:    Using wrong RUBY_VER causing Ruby build to break. Solution:   Correct the RUBY_VER value. (Yongwei Wu)
updated for version 7.3.893 Problem:    Crash when using b:, w: or t: after closing the buffer, window or             tabpage. Solution:   Allocate the dictionary instead of having it part of the             buffer/window/tabpage struct. (Yukihiro Nakadaira)
updated for version 7.3.892 Problem:    Still mering problems for viminfo history. Solution:   Do not merge lines when writing, don't write old viminfo lines.
updated for version 7.3.891 Problem:    Merging viminfo history doesn't work well. Solution:   Don't stop when one type of history is empty. Don't merge history             when writing viminfo.
updated for version 7.3.890 Problem:    Test 79 fails on Windows. (Michael Soyka) Solution:   Add comment below line causing an error.
updated for version 7.3.889 Problem:    Can't build with Ruby 2.0 on a 64 bit system. Solution:   Define rb_fix2int and rb_num2int. (Kohei Suzuki)
Updated runtime files.
updated for version 7.3.888 Problem:    Filename completion with 'fileignorecase' does not work for             multi-byte characters. Solution:   Make 'fileignorecase' work properly. (Hirohito Higashi)
updated for version 7.3.887 Problem:    No tests for Visual mode operators, what 7.3.879 fixes. Solution:   Add a new test file. (David Bürgin)
updated for version 7.3.886 Problem:    Can't build with multi-byte on Solaris 10. Solution:   Add #ifdef X_HAVE_UTF8_STRING. (Laurent Blume)
updated for version 7.3.885 Problem:    Double free for list and dict in Lua. (Shougo Matsu) Solution:   Do not unref list and dict. (Yasuhiro Matsumoto)
Move redif syntax file to the right directory. Disable recognizing .rdf as a redif file.
updated for version 7.3.884 Problem:    Compiler warning for variable shadowing another. (John Little) Solution:   Rename the variable. (Christian Brabandt)
updated for version 7.3.883 Problem:    Can't build with some combination of features. Solution:   Adjust #ifdefs.
Updated runtime files.
updated for version 7.3.882 Problem:    CursorHold may trigger after receiving the termresponse. Solution:   Set the did_cursorhold flag. (Hayaki Saito)
updated for version 7.3.880 Problem:    When writing viminfo, old history lines may replace lines written             more recently by another Vim instance. Solution:   Mark history entries that were read from viminfo and overwrite             them when merging with the current viminfo.
updated for version 7.3.879 Problem:    When using an ex command in operator pending mode, using Esc to             abort the command still executes the operator. (David Bürgin) Solution:   Clear the operator when the ex command fails. (Christian Brabandt)
updated for version 7.3.878 Problem:    'fileignorecase' is missing in options window and quickref. Solution:   Add the option.
updated for version 7.3.876 Problem:    #if indents are off. Solution:   Insert a space where appropriate. (Taro Muraoka)
updated for version 7.3.875 Problem:    Build problem with some combination of features. Solution:   Use FEAT_XCLIPBOARD instead of FEAT_CLIPBOARD.
updated for version 7.3.874 Problem:    Comparing file names does not handle multi-byte characters             properly. Solution:   Implement multi-byte handling.
updated for version 7.3.873 Problem:    Cannot easily use :s to make title case. Solution:   Have "\L\u" result in title case. (James McCoy)
updated for version 7.3.872 Problem:    On some systems case of file names is always ignored, on others             never. Solution:   Add the 'fileignorecase' option to control this at runtime.             Implies 'wildignorecase'.
updated for version 7.3.871 Problem:    search('^$', 'c') does not use the empty match under the cursor. Solution:   Special handling of the 'c' flag. (Christian Brabandt)             Add tests.
updated for version 7.3.870 Problem:    Compiler warnings when using MingW 4.5.3. Solution:   Do not use MAKEINTRESOURCE. Adjust #if. (Ken Takata)
updated for version 7.3.869 Problem:    bufwinnr() matches buffers in other tabs. Solution:   For bufwinnr() and ? only match buffers in the current tab.             (Alexey Radkov)
updated for version 7.3.868 Problem:    When at the hit-return prompt and using "k" while no text has             scrolled off screen, then using "j", an empty line is displayed. Solution:   Only act on "k" when text scrolled off screen.  Also accept             page-up and page-down.  (cptstubing)
updated for version 7.3.867 Problem:    Matchparen does not update match when using auto-indenting.             (Marc Aldorasi) Solution:   Add the TextChanged and TextChangedI autocommand events.
updated for version 7.3.866 Problem:    Not serving the X selection during system() isn't nice. Solution:   When using fork() do not loose the selection, keep serving it.             Add a loop similar to handling I/O. (Yukihiro Nakadaira)
Update runtime files.
updated for version 7.3.865 Problem:    Mouse position may be wrong. Solution:   Let vungetc() restore the mouse position.
updated for version 7.3.864 Problem:    Can't build without the mouse feature. Solution:   Add an #ifdef. (Ike Devolder)
updated for version 7.3.863 Problem:    Problem with 'ambiwidth' detection for ANSI terminal. Solution:   Work around not recognizing a term response. (Hayaki Saito)
updated for version 7.3.862 Problem:    Dragging the status line can be slow. Solution:   Look ahead and drop the drag event if there is a next one.
updated for version 7.3.861 Problem:    ":setlocal number" clears global value of 'relativenumber'. Solution:   Do it properly. (Markus Heidelberg)
updated for version 7.3.860 Problem:    When using --remote-expr try/catch does not work. (Andrey Radev) Solution:   Set emsg_silent instead of emsg_off.
updated for version 7.3.859 Problem:    'ambiwidth' must be set by the user. Solution:   Detects East Asian ambiguous width (UAX #11) state of the terminal             at the start-up time and 'ambiwidth' accordingly.  (Hayaki Saito)
updated for version 7.3.858 Problem:    "gv" selects the wrong area after some operators. Solution:   Save and restore the type of selection. (Christian Brabandt)
updated for version 7.3.857 Problem:    The QuitPre autocommand event does not trigger for :qa and :wq. Solution:   Trigger the event. (Tatsuro Fujii)
updated for version 7.3.856 Problem:    When calling system() multi-byte clipboard contents is garbled. Solution:   Save and restore the clipboard contents.  (Yukihiro Nakadaira)
updated for version 7.3.855 Problem:    Compiler warnings. Solution:   Add type casts. (Mike Williams)
updated for version 7.3.854 Problem:    After using backspace in insert mode completion, CTRL-N and CTRL-P             do not highlight the right entry. (Olivier Teuliere) Solution:   Set the current item to the shown item after using backspace.
updated for version 7.3.853 Problem:    Using "ra" in multiple lines on multi-byte characters leaves a few             characters not replaced. Solution:   Adjust the end column only in the last line. (Yasuhiro Matsumoto)
updated for version 7.3.852 Problem:    system() breaks clipboard text. (Yukihiro Nakadaira) Solution:   Use Xutf8TextPropertyToTextList(). (Christian Brabandt)             Also do not put the text in the clip buffer if conversion fails.
updated for version 7.3.851 Problem:    Using an empty pattern with :sort silently continues when there is             no previous search pattern. Solution:   Give an error message.
updated for version 7.3.850 Problem:    ":vimgrep //" matches everywhere. Solution:   Make it use the previous search pattern. (David Bürgin)
updated for version 7.3.849 Problem:    ":g//" gives "Pattern not found error" with E486.  Should not use             the error number, it's not a regular error message. Solution:   Use a normal message. (David Bürgin)
updated for version 7.3.847 Problem:    Test 55 fails when messages are translated. Solution:   Set language to C. (Ken Takata)
updated for version 7.3.846 Problem:    Missing proto files. Solution:   Add the files.
updated for version 7.3.845 Problem:    Enum indenting is not tested. Solution:   Add tests. (Hong Xu)
Updated runtime files.
updated for version 7.3.844 Problem:    Enum is not indented correctly with "public" etc. Solution:   Skip "public", "private" and "protected". (Hong Xu)
updated for version 7.3.843 Problem:    Missing test file changes. Solution:   Change the tests.
updated for version 7.3.842 Problem:    Compiler warning for signed/unsigned pointer. Solution:   Add type cast. (Christian Brabandt)
updated for version 7.3.841 Problem:    When a "cond ? one : two" expression has a subscript it is not             parsed correctly. (Andy Wokula) Solution:   Handle a subscript also when the type is unknown. (Christian             Brabandt)
updated for version 7.3.840 Problem:    "\@<!" in regexp does not work correctly with multi-byte             characters, especially cp932. Solution:   Move column to start of multi-byte character. (Yasuhiro Matsumoto)
updated for version 7.3.839 Problem:    Some files missing in the list of distributed files. Solution:   Add lines for new files.
updated for version 7.3.838 Problem:    Insufficient testing for mksession. Solution:   Add tests. (mostly by Roland Eggner)
updated for version 7.3.837 Problem:    Empty lines in :version output when 'columns' is 320. Solution:   Simplify the logic of making columns. (Nazri Ramliy, Roland             Eggner)
updated for version 7.3.836 Problem:    Clipboard does not work on Win32 when compiled with Cygwin. Solution:   Move the Win32 clipboard code to a separate file and use it when             building with os_unix.c. (Frodak Baksik, Ken Takata)
updated for version 7.3.835 Problem:    "xxd -i" fails on an empty file. Solution:   Do output the closing } for an empty file. (partly by Lawrence             Woodman)
updated for version 7.3.834 Problem:    Ruby 2.0 has a few API changes. Solution:   Add handling of Ruby 2.0. (Yasuhiro Matsumoto)
updated for version 7.3.833 Problem:    In the terminal the scroll wheel always scrolls the active window. Solution:   Scroll the window under the mouse pointer, like in the GUI.             (Bradie Rao)
updated for version 7.3.832 Problem:    Compiler warning. Solution:   Add type cast. (Mike Williams)
Update runtime files.
updated for version 7.3.831 Problem:    Clumsy to handle the situation that a variable does not exist. Solution:   Add default value to getbufvar() et al. (Shougo Matsushita,             Hirohito Higashi)
updated for version 7.3.830 Problem:    :mksession confuses bytes, columns and characters when positioning             the cursor. Solution:   Use w_virtcol with "|" instead of w_cursor.col with "l".
updated for version 7.3.829 Problem:    When compiled with the +rightleft feature 'showmatch' also shows a             match for the opening paren.  When 'revins' is set the screen may             scroll. Solution:   Only check the opening paren when the +rightleft feature was             enabled.  Do not show a match that is not visible. (partly by             Christian Brabandt)
updated for version 7.3.828 Problem:    Mappings are not aware of wildmenu mode. Solution:   Add wildmenumode(). (Christian Brabandt)
updated for version 7.3.827 Problem:    Python tests fail. Solution:   Adjust the output for the stack trace.
updated for version 7.3.826 Problem:    List of features in :version output is hard to read. Solution:   Make columns. (Nazri Ramliy)
updated for version 7.3.825 Problem:    With Python errors are not always clear. Solution:   Print the stack trace, unless :silent is used. (ZyX)
updated for version 7.3.824 Problem:    Can redefine builtin functions.  (ZyX) Solution:   Disallow adding a function to g:.
updated for version 7.3.823 Problem:    Building with Cygwin: '-lsupc++' is not needed. Solution:   Remove it. (Ken Takata)
updated for version 7.3.822 Problem:    Crash when accessing freed buffer. Solution:   Get 'textwidth' in caller of enter_buffer(). (Christian Brabandt)
updated for version 7.3.821 Problem:    Build with OLE and Cygwin is broken. (Steve Hall) Solution:   Select static or shared stdc library. (Ken Takta)
updated for version 7.3.820 Problem:    Build errors and warnings when building with small features and             Lua, Perl or Ruby. Solution:   Add #ifdefs and UNUSED.
updated for version 7.3.819 Problem:    Compiling without +eval and with Python isn't working. Solution:   Add the eval feature when building with Python.
updated for version 7.3.818 Problem:    When test 40 fails because of a bad build it may leave files             behind that cause it to fail later. Solution:   Let the file names start with "X".
updated for version 7.3.817 Problem:    Test 89 fails with tiny and small features. Solution:   Add sourcing small.vim.
Add test files.
updated for version 7.3.816 Problem:    Can't compute a hash. Solution:   Add the sha256() function. (Tyru, Hirohito Higashi)
updated for version 7.3.815 Problem:    Building with Cygwin and Ruby doesn't work. Solution:   Copy some things from the MingW build file. (Ken Takata)
updated for version 7.3.814 Problem:    Can't input multibyte characters on Win32 console if 'encoding' is             different from current codepage. Solution:   Use convert_input_safe() instead of convert_input().  Make             string_convert_ext() return an error for incomplete input. (Ken             Takata)
updated for version 7.3.813 Problem:    The CompleteDone event is not triggered when there are no pattern             matches. (Jianjun Mao) Solution:   Trigger the event. (Christian Brabandt)
Update runtime files. Add missing test files.
updated for version 7.3.812 Problem:    When 'indentexpr' moves the cursor "curswant" not restored. Solution:   Restore "curswant". (Sung Pae)
updated for version 7.3.811 Problem:    Useless termresponse parsing for SGR mouse. Solution:   Skip the parsing. (Hayaki Saito)
updated for version 7.3.810 Problem:    'relativenumber is reset unexpectedly. (François Ingelrest) Solution:   After an option was reset also reset the global value. Add a test.             (Christian Brabandt)
updated for version 7.3.809 Problem:    The dosinst.c program has a buffer overflow. (Thomas Gwae) Solution:   Ignore $VIMRUNTIME if it is too long.
updated for version 7.3.807 Problem:    Popup menu does not work properly with the preview window, folds             and 'cursorcolumn'. Solution:   Redraw the popup menu after redrawing windows. (Christian             Brabandt)
updated for version 7.3.806 Problem:    Compiler warnings in Perl code when building with Visual studio             2012. (skeept) Solution:   Add type casts. (Christian Brabandt, 2013 Jan 30)
updated for version 7.3.805 Problem:    Lua version 5.2 is not detected properly on Arch Linux. Solution:   Adjust autoconf. (lilydjwg)
updated for version 7.3.804 Problem:    Compiler warning for tiny build. (Tony Mechelynck) Solution:   Add #ifdefs around variable.
updated for version 7.3.803 Problem:    Substitute with confirmation and then "q" does not replace             anything.  (John McGowan) Solution:   Do not break the loop, skip to the end.
Updated runtime files.
updated for version 7.3.802 Problem:    After setting 'isk' to a value ending in a comma appending to the             option fails. Solution:   Disallow a trailing comma for 'isk' and similar options.
updated for version 7.3.801 Problem:    ":window set nu?" displays the cursor line. (Nazri Ramliy) Solution:   Do not update the cursor line when conceallevel is zero or the             screen has scrolled. (partly by Christian Brabandt)
updated for version 7.3.800 Problem:    The " mark is not adjusted when inserting lines. (Roland Eggner) Solution:   Adjust the line number. (Christian Brabandt)
updated for version 7.3.799 Problem:    The color column is not correct when entering a buffer. (Ben             Fritz) Solution:   Call check_colorcolumn() if 'textwidth' changed. (Christian             Brabandt)
updated for version 7.3.798 Problem:    MzScheme: circular list does not work correctly. Solution:   Separate Mac-specific code from generic code. (Sergey Khorev)
updated for version 7.3.797 Problem:    Compiler warning for size_t to int conversion. (Skeept) Solution:   Add type casts.
updated for version 7.3.796 Problem:    "/[^\n]" does match at a line break. Solution:   Make it do the same as "/.". (Christian Brabandt)
updated for version 7.3.795 Problem:    MzScheme does not build with tiny features. Solution:   Add #ifdefs.  Also add UNUSED to avoid warnings.  And change             library ordering.
updated for version 7.3.794 Problem:    Tiny build fails. (Tony Mechelynck) Solution:   Adjust #ifdefs.
updated for version 7.3.793 Problem:    New interactive :substutite behavior is not tested. Solution:   Add tests. (Christian Brabandt)
updated for version 7.3.792 Problem:    ":substitute" works differently without confirmation. Solution:   Do not change the text when asking for confirmation, only display             it.
updated for version 7.3.791 Problem:    MzScheme interface doesn't work propely. Solution:   Make it work better. (Sergey Khorev)
Update runtime files.
updated for version 7.3.790 Problem:    After reloading a buffer the modelines are not processed. Solution:   call do_modelines(). (Ken Takata)
updated for version 7.3.789 Problem:    "\k" in regexp does not work in other window. Solution:   Use the right buffer. (Yukihiro Nakadaira)
updated for version 7.3.788 Problem:    When only using patches build fails on missing nl.po. Solution:   Create an empty nl.po file.
updated for version 7.3.787 Problem:    With 'relativenumber' set it is not possible to see the absolute             line number. Solution:   For the cursor line show the absolute line number instead of a             zero. (Nazri Ramliy)
updated for version 7.3.786 Problem:    Python threads don't run in the background (issue 103). Solution:   Move the statements to manipulate thread state.
updated for version 7.3.785 Problem:    Crash with specific use of search pattern. Solution:   Initialize reg_buf to curbuf.
updated for version 7.3.784 Problem:    Error when 'guifontwide' has a comma. Solution:   Use gui.wide_font. (Taro Muraoka)
updated for version 7.3.783 Problem:    Crash when mark is not set. (Dominique Pelle) Solution:   Check for NULL.
updated for version 7.3.782 Problem:    Windows: IME composition may use a wrong font. Solution:   Use 'guifontwide' for IME when it is set. (Taro Muraoka)
updated for version 7.3.781 Problem:    Drawing with 'guifontwide' can be slow. Solution:   Draw multiple characters at a time. (Taro Muraoka)
updated for version 7.3.780 Problem:    char2nr() and nr2char() always use 'encoding'. Solution:   Add argument to use utf-8 characters. (Yasuhiro Matsumoto)
updated for version 7.3.779 Problem:    Backwards search lands in wrong place when started on a multibyte             character. Solution:   Do not set extra_col for a backwards search. (Sung Pae)
updated for version 7.3.778 Problem:    Compiler error for adding up two pointers. (Titov Anatoly) Solution:   Add a type cast. (Ken Takata)
updated for version 7.3.777 Problem:    When building with Gnome locale gets reset. Solution:   Set locale after gnome_program_init(). (Christian Brabandt)
updated for version 7.3.776 Problem:    ml_get error when searching, caused by curwin not matching curbuf. Solution:   Avoid changing curbuf. (Lech Lorens)
updated for version 7.3.775 Problem:    Cygwin and Mingw builds miss dependency on gui_w48.c. Solution:   Add a build rule. (Ken Takata)
updated for version 7.3.774 Problem:    Tiny GUI version misses console dialog feature. Solution:   Define FEAT_CON_DIALOG when apprpriate. (Christian Brabandt)
updated for version 7.3.773 Problem:    Crash when OriginalFirstThunk is zero. Solution:   Skip items with OriginalFirstThunk not set. (Ken Takata)
updated for version 7.3.772 Problem:    Cursor is at the wrong location and below the end of the file             after doing substitutions with confirm flag: %s/x/y/c             (Dominique Pelle) Solution:   Update the cursor position. (Christian Brabandt & Dominique)
updated for version 7.3.771 Problem:    Uninitialized variable. (Yasuhiro Matsumoto) Solution:   Set x2 to -1.
updated for version 7.3.770 Problem:    Vim.h indentation is inconsistent. Solution:   Adjust the indentation. (Elias Diem)
updated for version 7.3.769 Problem:    'matchpairs' does not work with multi-byte characters. Solution:   Make it work. (Christian Brabandt)
updated for version 7.3.768 Problem:    settabvar() and setwinvar() may move the cursor. Solution:   Save and restore the cursor position when appropriate. (idea by             Yasuhiro Matsumoto)
updated for version 7.3.767 Problem:    (Win32) The _errno used for iconv may be the wrong one. Solution:   Use the _errno from iconv.dll. (Ken Takata)
updated for version 7.3.766 Problem:    ":help cpo-*" jumps to the wrong place. Solution:   Make it equivalent to ":help cpo-star".
updated for version 7.3.765 Problem:    Segfault when doing "cclose" on BufUnload in a python function.             (Sean Reifschneider) Solution:   Skip window with NULL buffer. (Christian Brabandt)
updated for version 7.3.764 Problem:    Not all message translation files are installed. Solution:   Also install the converted files.
updated for version 7.3.763 Problem:    Jumping to a mark does not open a fold if it is in the same line.             (Wiktor Ruben) Solution:   Also compare the column after the jump. (Christian Brabandt)
updated for version 7.3.762 Problem:    On some systems the tabline is not redrawn. Solution:   Call RedrawWindow(). (Charles Peacech)
updated for version 7.3.761 Problem:    In Visual mode a "-p does not work. (Marcin Szamotulski) Solution:   Avoid writing to "- before putting it. (Christian Brabandt)
updated for version 7.3.760 Problem:    dv_ deletes the white space before the line. Solution:   Move the cursor to the first non-white. (Christian Brabandt)
updated for version 7.3.759 Problem:    MS-Windows: Updating the tabline is slow when there are many tabs. Solution:   Disable redrawing while performing the update. (Arseny Kapoulkine)
updated for version 7.3.758 Problem:    Matchit plugin does not handle space in #ifdef. Solution:   Change matching pattern to allow spaces. (Mike Morearty)
updated for version 7.3.757 Problem:    Issue 96: May access freed memory when a put command triggers             autocommands. (Dominique Pelle) Solution:   Call u_save() before getting y_array.
updated for version 7.3.756 Problem:    A location list can get a wrong count in :lvimgrep. Solution:   Check if the list was changed by autocommands. (mostly by             Christian Brabandt)
updated for version 7.3.755 Problem:    Autoconf doesn't find Python 3 if it's called "python". Solution:   Search for "python2" and "python3" first, then "python".
updated for version 7.3.754 Problem:    Latest nmake is not recognized. Solution:   Add nmake version 11.00.51106.1. (Raymond Ko)
updated for version 7.3.753 Problem:    When there is a QuitPre autocommand using ":q" twice does not work             for exiting when there are more files to edit. Solution:   Do not decrement quitmore in an autocommand. (Techlive Zheng)
Update runtime files.
updated for version 7.3.752 Problem:    Test 49 script file doesn't fold properly. Solution:   Add a colon.
updated for version 7.3.751 Problem:    Test 61 is flaky, it fails once in a while. Solution:   When it fails retry once.
updated for version 7.3.749 Problem:    Python interface doesn't build without the multi-byte feature. Solution:   Add #ifdef. (Ken Takata)
updated for version 7.3.748 Problem:    Cannot properly test conceal mode. Solution:   Add the screencol() and screenrow() functions.  Use them in             test88. (Simon Ruderich)
updated for version 7.3.747 Problem:    When characters are concealed text aligned with tabs are no longer             aligned, e.g. at ":help :index". Solution:   Compensate space for tabs for concealed characters. (Dominique             Pelle)
updated for version 7.3.746 Problem:    Memory leaks when using location lists. Solution:   Set qf_title to something. (Christian Brabandt)
updated for version 7.3.745 Problem:    Automatically setting 'ttymouse' doesn't work. Solution:   Reset the "option was set" flag when using the default.
updated for version 7.3.744 Problem:    64 bit compiler warning. Solution:   Add type cast. (Mike Williams)
updated for version 7.3.743 Problem:    Tiny build still fails. Solution:   Add #else in the right place.
updated for version 7.3.742 Problem:    Leaking memory when :vimgrep restores the directory. Solution:   Free the allocated memory. (Christian Brabandt)
updated for version 7.3.741 Problem:    Tiny build fails. Solution:   Move #ifdef. (Ike Devolder)
updated for version 7.3.740 Problem:    IOC tool complains about undefined behavior for int. Solution:   Change to unsigned int. (Dominique Pelle)
updated for version 7.3.739 Problem:    Computing number of lines may have an integer overflow. Solution:   Check for MAXCOL explicitly. (Dominique Pelle)
Updated runtime files.
updated for version 7.3.738 Problem:    Unused function argument. Solution:   Remove it. (Christian Brabandt)
updated for version 7.3.737 Problem:    When using do_cmdline() recursively did_endif is not reset,             causing messages to be overwritten. Solution:   Reset did_endif. (Christian Brabandt)
updated for version 7.3.736 Problem:    File name completion in input() escapes white space. (Frederic             Hardy) Solution:   Do not escape white space. (Christian Brabandt)
updated for version 7.3.735 Problem:    Cannot build Ruby 1.9 with MingW or Cygwin. Solution:   Add another include directory. (Ken Takata)
updated for version 7.3.734 Problem:    Cannot put help files in a sub-directory. Solution:   Make :helptags work for sub-directories. (Charles Campbell)
updated for version 7.3.733 Problem:    Tests fail when including MzScheme. Solution:   Change #ifdefs for vim_main2().
updated for version 7.3.732 Problem:    Compiler warnings for function arguments. Solution:   Use inteptr_t instead of long.
updated for version 7.3.731 Problem:    Py3Init_vim() is exported uneccessarily. Solution:   Make it static. (Ken Takata)
updated for version 7.3.730 Problem:    Crash in PHP file when using syntastic. (Ike Devolder) Solution:   Avoid using NULL pointer. (Christian Brabandt)
updated for version 7.3.729 Problem:    Building with Ruby fails on some systems. Solution:   Remove "static" and add #ifndef PROTO. (Ken Takata)
updated for version 7.3.728 Problem:    Cannot compile with MzScheme interface on Ubuntu 12.10. Solution:   Find the collects directory under /usr/share.
updated for version 7.3.727 Problem:    Can't always find Win32.mak when building GvimExt. Solution:   Use same mechanism as in Make_mvc.mak. (Cade Foster)
updated for version 7.3.725 Problem:    :aboveleft and :belowright have no effect on :copen. Solution:   Check for cmdmod.split. (Christian Brabandt)
updated for version 7.3.724 Problem:    Building with Ruby and Tcl on MS-Windows does not work. Solution:   Remove Ruby and Tcl from the big MS-Windows build.
updated for version 7.3.723 Problem:    Various tiny problems. Solution:   Various tiny fixes.
updated for version 7.3.722 Problem:    Perl flags may contain "-g", which breaks "make proto". Solution:   Filter out the "-g" flag for cproto. (Ken Takata)
updated for version 7.3.721 Problem:    Ruby interface defines local functions globally. Solution:   Make the functions static.
updated for version 7.3.720 Problem:    Proto files are outdated. Solution:   Update the newly generated proto files.
updated for version 7.3.719 Problem:    Cannot run new version of cproto, it fails on missing include             files. Solution:   Add lots of #ifndef PROTO
updated for version 7.3.718 Problem:    When re-using the current buffer the buffer-local options stay. Solution:   Re-initialize the buffer-local options. (Christian Brabandt)
updated for version 7.3.717 Problem:    When changing the font size, only MS-Windows limits the window             size. Solution:   Also limit the window size on other systems. (Roland Puntaier)
updated for version 7.3.716 Problem:    Error on exit when using Python 3. Solution:   Remove PythonIO_Fini(). (Roland Puntaier)
Updated runtime files.
updated for version 7.3.715 Problem:    Crash when calling setloclist() in BufUnload autocmd. (Marcin             Szamotulski) Solution:   Set w_llist to NULL when it was freed.  Also add a test.             (Christian Brabandt)
updated for version 7.3.713 Problem:    printf() can only align to bytes, not characters. Solution:   Add the "S" item. (Christian Brabandt)
updated for version 7.3.712 Problem:    Nmake from VS2010 SP1 is not recognized. Solution:   Add the version number. (Ken Takata)
updated for version 7.3.711 Problem:    vim.current.buffer is not available. (lilydjwg) Solution:   Use py3_PyUnicode_AsUTF8 instead of py3_PyUnicode_AsUTF8String.             (Ken Takata)
updated for version 7.3.710 Problem:    Patch 7.3.704 breaks "fn". Solution:   Add check for ca.cmdchar. (Christian Brabandt)
updated for version 7.3.709 Problem:    Compiler warning for unused argument. Solution:   Add UNUSED.
updated for version 7.3.708 Problem:    Filler lines above the first line may be hidden when opening Vim. Solution:   Change how topfill is computed. (Christian Brabandt)
updated for version 7.3.707 Problem:    Problems loading a library for a file name with non-latin             characters. Solution:   Use wide system functions when possible. (Ken Takata)
updated for version 7.3.705 Problem:    Mouse features are not sorted properly. (Tony Mechelynck) Solution:   Put the mouse features in alphabetical order.
updated for version 7.3.704 Problem:    Repeating "cgn" does not always work correctly. Solution:   Also fetch the operator character. (Christian Brabandt)
updated for version 7.3.703 Problem:    When 'undofile' is reset the hash is computed unnecessarily. Solution:   Only compute the hash when the option was set. (Christian Brabandt)
Updated runtime files.
updated for version 7.3.702 Problem:    Nmake from VS6 service pack 6 is not recognized. Solution:   Detect the version number. (Jiri Sedlak)
updated for version 7.3.701 Problem:    MS-Windows: Crash with stack overflow when setting 'encoding'. Solution:   Handle that loading the iconv library may be called recursively.             (Jiri Sedlak)
updated for version 7.3.700 Problem:    Cannot detect URXVT and SGR mouse support. Solution:   add +mouse_urxvt and +mouse_sgr. (Hayaki Saito)
updated for version 7.3.699 Problem:    When 'ttymouse' is set to "sgr" manually, it is overruled by             automatic detection. Solution:   Do not use automatic detection when 'ttymouse' was set manually.             (Hayaki Saito)
updated for version 7.3.698 Problem:    Python 3 does not preserve state beween commands. Solution:   Preserve the state. (Paul Ollis)
updated for version 7.3.697 Problem:    Leaking resources when setting GUI font. Solution:   Free the font. (Ken Takata)
updated for version 7.3.696 Problem:    Message about added spell language can be wrong. Solution:   Give correct message. Add g:menutrans_set_lang_to to allow for             translation. (Jiri Sedlak)
updated for version 7.3.695 Problem:    Balloon cannot show multi-byte text. Solution:   Properly deal with multi-byte characters. (Dominique Pelle)
updated for version 7.3.694 Problem:    Now that 'shiftwidth' may use the value of 'tabstop' it is not so             easy to use in indent files. Solution:   Add the shiftwidth() function. (so8res)
updated for version 7.3.693 Problem:    Can't make 'softtabstop' follow 'shiftwidth'. Solution:   When 'softtabstop' is negative use the value of 'shiftwidth'.             (so8res)
updated for version 7.3.692 Problem:    Can't build GTK version with GTK 2.0. Solution:   Put GtkFileFilter declaration in the right place. (Yegappan             Lakshmanan)
updated for version 7.3.691 Problem:    State specific to the Python thread is discarded. Solution:   Keep state between threads. (Paul)
updated for version 7.3.690 Problem:    When the current directory name is exactly the maximum path length             Vim may crash. Solution:   Only add "/" when there is room. (Danek Duvall)
updated for version 7.3.689 Problem:    MzScheme and Lua may use a NULL string. Solution:   Use an empty string instead of NULL. (Yukihiro Nakadaira)
updated for version 7.3.688 Problem:    Python 3.3 is not supported. Solution:   Add Python 3.3 support (Ken Takata)
updated for version 7.3.687 Problem:    Test 16 fails when $DISPLAY is not set. Solution:   Skip the test when $DISPLAY is not set.
updated for version 7.3.686 Problem:    Using CTRL-\ e mappings is useful also when entering an             expression, but it doesn't work. (Marcin Szamotulski) Solution:   Allow using CTRL-\ e when entering an expression if it was not             typed.
updated for version 7.3.685 Problem:    No test for what patch 7.3.673 fixes. Solution:   Add a test. (Christian Brabandt)
updated for version 7.3.684 Problem:    "make test" does not delete lua.vim. Solution:   Add lua.vim to the clean target. (Simon Ruderich)
Updated runtime files.
updated for version 7.3.683 Problem:    ":python" may crash when vimbindeval() returns None. Solution:   Check for v_string to be NULL. (Yukihiro Nakadaira)
updated for version 7.3.682 Problem:    Compiler complains about incompatible types. Solution:   Remove type casts. (hint by Danek Duvall)
updated for version 7.3.681 Problem:    List of distributed files picks up backup files. Solution:   Make tutor patterns more specific.
Update runtime files.
updated for version 7.3.680 Problem:    Some files missing in the list of distributed files. Solution:   Add lines for new files.
updated for version 7.3.679 Problem:    Ruby detection uses Config, newer Ruby versions use RbConfig. Solution:   Detect the need to use RbConfig. (Vit Ondruch)
updated for version 7.3.678 Problem:    Ruby .so name may not be correct. Solution:   Use the LIBRUBY_SO entry from the config. (Vit Ondruch)
updated for version 7.3.677 Problem:    buf_spname() is used inconsistently. Solution:   Make the return type a char_u pointer.  Check the size of the             returned string.
updated for version 7.3.676 Problem:    Ruby compilation on Windows 32 bit doesn't work. Solution:   Only use some functions for 64 bit. (Ken Takata)
updated for version 7.3.675 Problem:    Using uninitialized memory with very long file name. Solution:   Put NUL after text when it is truncated. (ZyX)
updated for version 7.3.674 Problem:    Can't compile with Lua/dyn on Cygwin. Solution:   Adjust configure to use the right library name. (Ken Takata)
updated for version 7.3.673 Problem:    Using "gN" while 'selection' is "exclusive" misses one character.             (Ben Fritz) Solution:   Check the direction when compensating for exclusive selection.             (Christian Brabandt)
Updated runtime files.
updated for version 7.3.672 Problem:    Not possible to lock/unlock lists in Python interface. Solution:   Add .locked and .scope attributes. (ZyX)
updated for version 7.3.671 Problem:    More Python code can be shared between Python 2 and 3. Solution:   Move code to if_py_both.h. (ZyX)
updated for version 7.3.670 Problem:    Python: memory leaks when there are exceptions. Solution:   Add DICTKEY_UNREF in the right places. (ZyX)
updated for version 7.3.669 Problem:    When building with Cygwin loading Python dynamically fails. Solution:   Use DLLLIBRARY instead of INSTSONAME. (Ken Takata)
updated for version 7.3.668 Problem:    Building with Perl loaded dynamically  still uses static library. Solution:   Adjust use of PL_thr_key. (Ken Takata)
updated for version 7.3.667 Problem:    Unused variables in Perl interface. Solution:   Adjust #ifdefs.
updated for version 7.3.666 Problem:    With MSVC 11 Win32.mak is not found. Solution:   Add the SDK_INCLUDE_DIR variable. (Raymond Ko)
updated for version 7.3.665 Problem:    MSVC 11 is not supported. Solution:   Recognize MSVC 11. (Raymond Ko)
updated for version 7.3.664 Problem:    Buffer overflow in unescaping text. (Raymond Ko) Solution:   Limit check for multi-byte character to 4 bytes.
updated for version 7.3.663 Problem:    End of color scheme name not clear in E185. (Aaron Lewis) Solution:   Put the name in single quotes.
updated for version 7.3.662 Problem:    Can't build Ruby interface with Ruby 1.9.3. Solution:   Add missing functions. (V. Ondruch)
updated for version 7.3.661 Problem:    SEGV in Python code. Solution:   Initialize len to zero.  Use the right function depending on             version. (Maxim Philippov)
updated for version 7.3.660 Problem:    ":help !" jumps to help for ":!". Solution:   Adjust check for tag header line. (Andy Wokula)
updated for version 7.3.659 Problem:    Recent Python changes are not tested. Solution:   Add tests for Python bindings. (ZyX)
updated for version 7.3.658 Problem:    NUL bytes truncate strings when converted from Python. Solution:   Handle truncation as an error. (ZyX)
updated for version 7.3.657 Problem:    Python bindings silently truncate string values containing NUL. Solution:   Fail when a string contains NUL. (ZyX)
updated for version 7.3.656 Problem:    Internal error in :pyeval. Solution:   Handle failed object conversion. (ZyX)
updated for version 7.3.655 Problem:    64 bit MingW xpm .a file is missing. Solution:   Add the file. (Sergey Khorev)
updated for version 7.3.654 Problem:    When creating a Vim dictionary from Python objects an empty key             might be used. Solution:   Do not use empty keys, throw an IndexError. (ZyX)
updated for version 7.3.653 Problem:    MingW needs build rule for included XPM files.  Object directory             for 32 and 64 builds is the same, also for MSVC. Solution:   Add MingW build rule to use included XPM files.  Add the CPU or             architecture to the object directory name. (Sergey Khorev)
updated for version 7.3.652 Problem:    Workaround for Python crash isn't perfect. Solution:   Change the type of the length argument. (Sean Estabrooks)
updated for version 7.3.651 Problem:    Completion after ":help \{-" gives an error message. Solution:   Prepend a backslash.
updated for version 7.3.650 Problem:    Completion after ":help \{-" gives an error message and messes up             the command line. Solution:   Cancel the tag search if the pattern can't be compiled. (Yasuhiro             Matsumoto)
updated for version 7.3.649 Problem:    When 'clipboard' is set to "unnamed" small deletes end up in the             numbered registers. (Ingo Karkat) Solution:   Use the original register name to decide whether to put a delete             in a numbered register. (Christian Brabandt)
updated for version 7.3.648 Problem:    Crash when using a very long file name. (ZyX) Solution:   Properly check length of buffer space.
updated for version 7.3.647 Problem:    "gnd" doesn't work correctly in Visual mode. Solution:   Handle Visual mode differently in "gn". (Christian Brabandt)
updated for version 7.3.646 Problem:    When reloading a buffer the undo file becomes unusable unless ":w"             is executed. (Dmitri Frank) Solution:   After reloading the buffer write the undo file. (Christian             Brabandt)
updated for version 7.3.645 Problem:    No tests for patch 7.3.625 and 7.3.637. Solution:   Add more tests for the "gn" command and try/catch. (Christian             Brabandt)
updated for version 7.3.644 Problem:    Dead code for BeOS GUI. Solution:   Remove unused __BEOS__ stuff.
updated for version 7.3.643 Problem:    MS-Windows: When starting gvim maximized 'lines' and 'columns' are             wrong. (Christian Robinson) Solution:   Move the check for gui.starting from ui_get_shellsize() to             check_shellsize().
updated for version 7.3.642 Problem:    Segfault with specific autocommands.  Was OK after 7.3.449 and             before 7.3.545. (Richard Brown) Solution:   Pass TRUE for abort_if_last in the call to close_buffer().             (Christian Brabandt)
updated for version 7.3.641 Problem:    ":mkview" uses ":normal" instead of ":normal!" for folds. (Dan) Solution:   Add the bang. (Christian Brabandt)
updated for version 7.3.640 Problem:    It's not easy to build Vim on Windows with XPM support. Solution:   Binary files for 7.3.639. (Sergey Khorev)
updated for version 7.3.639 Problem:    It's not easy to build Vim on Windows with XPM support. Solution:   Include the required files, they are quite small.  Update the             MSVC makefile to use them.  Binary files are in the next patch.             (Sergey Khorev)
updated for version 7.3.638
updated for version 7.3.637 Problem:    Cannot catch the error caused by a foldopen when there is no fold.             (ZyX, Issue 48) Solution:   Do not break out of the loop early when inside try/catch.             (Christian Brabandt) Except when there is a syntax error.
updated for version 7.3.636 Problem:    Not all zero-width matches handled correctly for "gn". Solution:   Move zero-width detection to a separate function. (Christian             Brabandt)
updated for version 7.3.635 Problem:    Issue 21: System call during startup sets 'lines' to a wrong             value. (Karl Yngve) Solution:   Don't set the shell size while the GUI is still starting up.             (Christian Brabandt)
updated for version 7.3.634 Problem:    Month/Day format for undo is confusing. (Marcin Szamotulski) Solution:   Always use Year/Month/Day, should work for everybody.
Update runtime files.
updated for version 7.3.633 Problem:    Selection remains displayed as selected after selecting another             text. Solution:   Call xterm_update() before select(). (Andrew Pimlott)
updated for version 7.3.632 Problem:    Cannot select beyond 222 columns with the mouse in xterm. Solution:   Add support for SGR mouse tracking. (Hayaki Saito)
updated for version 7.3.631 Problem:    Cannot complete user names. Solution:   Add user name completion.  (Dominique Pelle)
updated for version 7.3.630 Problem:    "|" does not behave correctly when 'virtualedit' is set. Solution:   Call validate_virtcol(). (David Bürgin)
updated for version 7.3.629 Problem:    There is no way to make 'shiftwidth' follow 'tabstop'. Solution:   When 'shiftwidth' is zero use the value of 'tabstop'. (Christian             Brabandt)
updated for version 7.3.628 Problem:    ":open" does not allow for a !, which results in a confusing error             message. (Shawn Wilson) Solution:   Allow ! on ":open". (Christian Brabandt)
updated for version 7.3.627 Problem:    When using the "n" flag with the ":s" command a \= substitution             will not be evaluated. Solution:   Do perform the evaluation, so that a function can be invoked at             every matching position without changing the text. (Christian             Brabandt)
updated for version 7.3.626 Problem:    Python interface doesn't build with Python 2.4 or older. Solution:   Define Py_ssize_t. (Benjamin Bannier)
updated for version 7.3.625 Problem:    "gn" does not handle zero-width matches correctly. Solution:   Handle zero-width patterns specially. (Christian Brabandt)
updated for version 7.3.624 Problem:    When cancelling input() it returns the third argument. That should             only happen for inputdialog(). Solution:   Check if inputdialog() was used. (Hirohito Higashi)
updated for version 7.3.623 Problem:    Perl 5.14 commands crash Vim on MS-Windows. Solution:   Use perl_get_sv() instead of GvSV(). (Raymond Ko)
updated for version 7.3.622 Problem:    XPM library for Win32 can't be found. Solution:   Suggest using the one from the Vim ftp site.
updated for version 7.3.621 Problem:    Compiler warnings on 64 bit windows. Solution:   Add type casts. (Mike Williams)
updated for version 7.3.620 Problem:    Building with recent Ruby on Win32 doesn't work. Solution:   Add a separate argument for the API version. (Yasuhiro Matsumoto)
updated for version 7.3.619 Problem:    When executing a shell command Vim may become slow to respond. Solution:   Don't wait after every processed message. (idea by Yasuhiro             Matsumoto)
updated for version 7.3.618 Problem:    Still doesn't compile with small features. Solution:   Move current_search() out of #ifdef. (Dominique Pelle)
updated for version 7.3.617 Problem:    Hang on completion. Solution:   Skip over the space. (Yasuhiro Matsumoto)
updated for version 7.3.616 Problem:    Can't compile without +visual. Solution:   Add #ifdef.
Updated runtime files.
updated for version 7.3.615 Problem:    Completion for a user command does not recognize backslash before             a space. Solution:   Recognize escaped characters. (Yasuhiro Matsumoto)
updated for version 7.3.614 Problem:    Number argument gets turned into a number while it should be a             string. Solution:   Add flag to the call_vim_function() call. (Yasuhiro Matsumoto)
updated for version 7.3.613 Problem:    Including Python's config.c in the build causes trouble.  It is             not clear why it was there. Solution:   Omit the config file. (James McCoy)
updated for version 7.3.612 Problem:    Auto formatting messes up text when 'fo' contains "2". (ZyX) Solution:   Decrement "less_cols". (Tor Perkins)
updated for version 7.3.610 Problem:    Cannot operate on the text that a search pattern matches. Solution:   Add the "gn" and "gN" commands. (Christian Brabandt)
updated for version 7.3.609 Problem:    File names in :checkpath! output are garbled. Solution:   Check for \zs in the pattern. (Lech Lorens)
updated for version 7.3.608 Problem:    winrestview() does not always restore the view correctly. Solution:   Call win_new_height() and win_new_width(). (Lech Lorens)
updated for version 7.3.607 Problem:    With an 8 color terminal the selected menu item is black on black,             because darkGrey as bg is the same as black. Solution:   Swap fg and bg colors. (James McCoy)
updated for version 7.3.606 Problem:    CTRL-P completion has a problem with multi-byte characters. Solution:   Check for next character being NUL properly.  (Yasuhiro Matsumoto)
updated for version 7.3.605 Problem:    MS-Windows: Can't compile with older compilers. (Titov Anatoly) Solution:   Add #ifdef for MEMORYSTATUSEX.
updated for version 7.3.604 Problem:    inputdialog() doesn't use the cancel argument in the console.             (David Fishburn) Solution:   Use the third argument. (Christian Brabant)
updated for version 7.3.603 Problem:    It is possible to add replace builtin functions by calling             extend() on g:. Solution:   Add a flag to a dict to indicate it is a scope.  Check for             existing functions. (ZyX)
updated for version 7.3.602 Problem:    Missing files in distribution. Solution:   Update the list of files.
updated for version 7.3.601 Problem:    Bad code style. Solution:   Insert space, remove parens.
Updated runtime files.
updated for version 7.3.600 Problem:    <f-args> is not expanded properly with DBCS encoding. Solution:   Skip over character instead of byte. (Yukihiro Nakadaira)
updated for version 7.3.599 Problem:    Missing change in one file. Solution:   Patch for changed clip_autoselect().
updated for version 7.3.598 Problem:    Cannot act upon end of completion. (Taro Muraoka) Solution:   Add an autocommand event that is triggered when completion has             finished. (Idea by Florian Klein)
updated for version 7.3.597 Problem:    'clipboard' "autoselect" only applies to the * register. (Sergey             Vakulenko) Solution:   Make 'autoselect' work for the + register. (Christian Brabant)             Add the "autoselectplus" option in 'clipboard' and the "P" flag in             'guioptions'.
updated for version 7.3.596 Problem:    Can't remove all signs for a file or buffer. Solution:   Support "*" for the sign id. (Christian Brabandt)
updated for version 7.3.595 Problem:    The X command server responds slowly Solution:   Change the loop that waits for replies. (Brian Burns)
updated for version 7.3.594 Problem:    The X command server doesn't work perfectly. It sends an empty             reply for as-keys requests. Solution:   Remove duplicate ga_init2(). Do not send a reply for as-keys             requests. (Brian Burns)
updated for version 7.3.593 Problem:    No easy way to decide if b:browsefilter will work. Solution:   Add the browsefilter feature.
updated for version 7.3.592 Problem:    Vim on GTK does not support g:browsefilter. Solution:   Add a GtkFileFilter to the file chooser. (Christian Brabandt)
updated for version 7.3.591 Problem:    Can only move to a tab by absolute number. Solution:   Move a number of tabs to the left or the right. (Lech Lorens)
updated for version 7.3.590 Problem:    The '< and '> marks cannot be set directly. Solution:   Allow setting '< and '>. (Christian Brabandt)
updated for version 7.3.589 Problem:    Crash when $HOME is not set. Solution:   Check for a NULL pointer. (Chris Webb)
updated for version 7.3.587 Problem:    Compiler warning for local var shadowing global var. Solution:   Rename the var and move it to an inner block. (Christian Brabandt)
updated for version 7.3.586 Problem:    When compiling with Cygwin or MingW MEMORYSTATUSEX is not defined. Solution:   Set the default for WINVER to 0x0500.
updated for version 7.3.585 Problem:    Calling changed_bytes() too often. Solution:   Move changed_bytes() out of a loop. (Tor Perkins)
updated for version 7.3.584 Problem:    PyCObject is not always defined. Solution:   Use PyObject instead.
updated for version 7.3.583 Problem:    PyObject_NextNotImplemented is not defined before Python 2.7.             (Danek Duvall) Solution:   Add #ifdefs.
updated for version 7.3.582 Problem:    Missing parts of the test OK file. Solution:   Add the missing parts.
updated for version 7.3.581 Problem:    Problems compiling with Python. Solution:   Pick UCS2 or UCS4 function at runtime. (lilydjwg)
updated for version 7.3.580 Problem:    Warning on 64 bit MS-Windows. Solution:   Add type cast. (Mike Williams)
updated for version 7.3.579 Problem:    Can't compile with Python 2.5. Solution:   Use PyCObject when Capsules are not available.
updated for version 7.3.578 Problem:    Misplaced declaration. Solution:   Move declaration to start of block.
updated for version 7.3.577 Problem:    Size of memory does not fit in 32 bit unsigned. Solution:   Use Kbyte instead of byte.  Call GlobalMemoryStatusEx() instead of             GlobalMemoryStatus() when available.
updated for version 7.3.576 Problem:    Formatting of lists inside comments is not right yet. Solution:   Use another solution and add a test. (Tor Perkins)
updated for version 7.3.575 Problem:    "ygt" tries to yank instead of giving an error. (Daniel Mueller) Solution:   Check for a pending operator.
updated for version 7.3.574 Problem:    When pasting a register in the search command line a CTRL-L             character is not pasted. (Dominique Pelle) Solution:   Escape the CTRL-L. (Christian Brabandt)
updated for version 7.3.573 Problem:    Using array index before bounds checking. Solution:   Swap the parts of the condition. (Dominique Pelle)
updated for version 7.3.572 Problem:    Duplicate statement in if and else. (Dominique Pelle) Solution:   Remove the condition and add a TODO.
updated for version 7.3.571 Problem:    Duplicated condition. Solution:   Remove one. (Dominique Pelle)
updated for version 7.3.570 Problem:    ":vimgrep" does not obey 'wildignore'. Solution:   Apply 'wildignore' and 'suffixes' to ":vimgrep". (Ingo Karkat)
updated for version 7.3.569 Problem:    Evaluating Vim expression in Python is insufficient. Solution:   Add vim.bindeval().  Also add pyeval() and py3eval(). (ZyX)
updated for version 7.3.568 Problem:    Bad indents for #ifdefs. Solution:   Add and remove spaces. (Elias Diem)
updated for version 7.3.567 Problem:    Missing copyright notice. Solution:   Add Vim copyright notice. (Taro Muraoka)
updated for version 7.3.566 Problem:    Redo after completion does not work correctly when refresh: always             is not used. (Raymond Ko) Solution:   Check the compl_opt_refresh_always flag. (Christian Brabandt)
updated for version 7.3.565 Problem:    Can't generate proto file for Python 3. Solution:   Add PYTHON3_CFLAGS to LINT_CFLAGS.
updated for version 7.3.564 Problem:    Warning for pointer conversion. Solution:   Add type cast.
updated for version 7.3.563 Problem:    Can't build with tiny features. Solution:   Add #ifdef.
updated for version 7.3.562 Problem:    ":profdel" should not work when the +profile feature is disabled. Solution:   Call ex_ni(). (Yasuhiro Matsumoto)
updated for version 7.3.561 Problem:    Using refresh: always in a complete function breaks the "."             command. (Val Markovic) Solution:   Add match leader to the redo buffer. (Yasuhiro Matsumoto)
updated for version 7.3.560 Problem:    Get an error for a locked argument in extend(). Solution:   Initialize the lock flag for a dictionary. (Yukihiro Nakadaira)
updated for version 7.3.559 Problem:    home_replace() does not work with 8.3 filename. Solution:   Make ":p" expand 8.3 name to full path. (Yasuhiro Matsumoto)
updated for version 7.3.558 Problem:    Memory access error. (Gary Johnson) Solution:   Allocate one more byte. (Dominique Pelle)
updated for version 7.3.557 Problem:    Crash when an autocommand wipes out a buffer when it is hidden. Solution:   Restore the current window when needed. (Christian Brabandt)
updated for version 7.3.556 Problem:    Compiler warnings on 64 bit Windows. Solution:   Add type casts. (Mike Williams)
updated for version 7.3.555 Problem:    Building on IBM z/OS fails. Solution:   Adjust configure. Use the QUOTESED value from config.mk instead of             the hard coded one in Makefile. (Stephen Bovy)
updated for version 7.3.554 Problem:    Compiler warning for unused argument. Solution:   Add UNUSED.
updated for version 7.3.553 Problem:    With double-width characters and 'listchars' containing "precedes"             the text is displayed one cell off. Solution:   Check for double-width character being overwritten by the             "precedes" character. (Yasuhiro Matsumoto)
updated for version 7.3.552 Problem:    Formatting inside comments does not use the "2" flag in             'formatoptions'. Solution:   Support the "2" flag.  (Tor Perkins)
updated for version 7.3.551 Problem:    When using :tablose a TabEnter autocommand is triggered too early.             (Karthick) Solution:   Don't trigger *Enter autocommands before closing the tab.             (Christian Brabandt)
updated for version 7.3.550 Problem:    With "j" in 'formatoptions' a list leader is not removed. (Gary             Johnson) Solution:   Don't ignore the start of a three part comment. (Lech Lorens)
updated for version 7.3.549 Problem:    In 'cinoptions' "0s" is interpreted as one shiftwidth. (David             Pineau) Solution:   Use the zero as zero. (Lech Lorens)
updated for version 7.3.548 Problem:    Compiler warning on 64 bit Windows. Solution:   Add type cast. (Mike Williams)
updated for version 7.3.547 Problem:    Compiler warning for uninitialized variable. Solution:   Initialize it.
updated for version 7.3.546 Problem:    Bogus line break. Solution:   Remove the line break.
updated for version 7.3.545 Problem:    When closing a window or buffer autocommands may close it too,             causing problems for where the autocommand was invoked from. Solution:   Add the w_closing and b_closing flags.  When set disallow ":q" and             ":close" to prevent recursive closing.
updated for version 7.3.544 Problem:    There is no good way to close a quickfix window when closing the             last ordinary window. Solution:   Add the QuitPre autocommand.
updated for version 7.3.543 Problem:    The cursor is in the wrong line after using ":copen". (John             Beckett) Solution:   Invoke more drastic redraw method.
updated for version 7.3.542 Problem:    Function is sometimes unused. Solution:   Add #ifdef.
updated for version 7.3.541 Problem:    When joining lines comment leaders need to be removed manually. Solution:   Add the 'j' flag to 'formatoptions'. (Lech Lorens)
updated for version 7.3.540 Problem:    Cursor is left on the text instead of the command line. Solution:   Don't call setcursor() in command line mode.
updated for version 7.3.539 Problem:    Redrawing a character on the command line does not work properly             for multi-byte charactes. Solution:   Count the number of bytes in a character. (Yukihiro Nakadaira)
Updated runtime files.
updated for version 7.3.538 Problem:    'efm' does not handle Tabs in pointer lines. Solution:   Add Tab support. Improve tests. (Lech Lorens)
updated for version 7.3.537 Problem:    Unecessary call to init_spell_chartab(). Solution:   Delete the call.
updated for version 7.3.536 Problem:    When spell checking the German sharp s is not seen as a word             character. (Aexl Bender) Solution:   In utf_islower() return true for the sharp s. Note: also need             updated spell file for this to take effect.
updated for version 7.3.534 Problem:    When using an InsertCharPre autocommand autoindent fails. Solution:   Proper handling of v:char. (Alexey Radkov)
updated for version 7.3.533 Problem:    Memory leak when writing undo file. Solution:   Free the ACL. (Dominique Pelle)
updated for version 7.3.532 Problem:    Compiler warning from Clang. Solution:   Use a different way to point inside a string. (Dominique Pelle)
updated for version 7.3.531 Problem:    GUI does not work on MS-Windows. Solution:   Add the missing #ifdef. (Patrick Avery)
updated for version 7.3.530 Problem:    Gvim does not work when 'guioptions' includes "f". (Davido) Solution:   Call gui_mch_init_check() when running GUI in the foreground.             (Yasuhiro Matsumoto)
updated for version 7.3.529 Problem:    Using a count before "v" and "V" does not work (Kikyous) Solution:   Make the count select that many characters or lines. (Christian             Brabandt)
updated for version 7.3.528 Problem:    Crash when closing last window in a tab. (Alex Efros) Solution:   Use common code in close_last_window_tabpage(). (Christian             Brabandt)
updated for version 7.3.527 Problem:    Clang complains about non-ASCII characters in a string. Solution:   Change to \x88 form. (Dominique Pelle)
updated for version 7.3.526 Problem:    Confusing indenting for #ifdef. Solution:   Remove and add indent. (Elias Diem)
updated for version 7.3.525 Problem:    Compiler warning on 64 bit MS-Windows. Solution:   Add type cast. (Mike Williams)
updated for version 7.3.524 Problem:    Missing comma. Solution:   Add the comma.
updated for version 7.3.523 Problem:    ":diffupdate" doesn't check for files changed elsewhere. Solution:   Add the ! flag. (Christian Brabandt)
updated for version 7.3.522 Problem:    Crash in vim_realloc() when using MEM_PROFILE. Solution:   Avoid using a NULL argument. (Dominique Pelle)
updated for version 7.3.521 Problem:    Using "z=" on a multi-byte character may cause a crash. Solution:   Don't use strlen() on an int pointer.
updated for version 7.3.520 Problem:    Gvim starts up slow on Unbuntu 12.04. Solution:   Move the call to gui_mch_init_check() to after fork(). (Yasuhiro             Matsumoto)  Do check $DISPLAY being set.
updated for version 7.3.519 Problem:    When completefunction returns it cannot indicate end of completion             mode. Solution:   Recognize completefunction returning -3.  (Mtsushita Shougo)
updated for version 7.3.518 Problem:    When 'encoding' is a double-byte encoding ":helptags" may not find             tags correctly. Solution:   Use vim_strbyte() instead of vim_strchr(). (Yasuhiro Matsumoto)
Updated runtime files.
Ignore file generated by tests.
updated for version 7.3.517 Problem:    Crash when using "vipvv". (Alexandre Provencio) Solution:   Don't let the text length become negative.
More runtime file fixes for 'compatible' mode.
updated for version 7.3.515 Problem:    'wildignorecase' only applies to the last part of the path. Solution:   Also ignore case for letters earlier in the path.
updated for version 7.3.514 Problem:    No completion for :history command. Solution:   Add the completion and update the docs. Also fix ":behave"             completion. (Dominique Pelle)
updated for version 7.3.513 Problem:    Cannot use CTRL-E and CTRL-Y with "r". Solution:   Make CTRL-E and CTRL-Y work like in Insert mode. (Christian             Brabandt)
updated for version 7.3.512 Problem:    undofile() returns a useless name when passed an empty string. Solution:   Return an empty string. (Christian Brabandt)
updated for version 7.3.511 Problem:    Using a FileReadCmd autocommand that does ":e! {file}" may cause a             crash. (Christian Brabandt) Solution:   Properly restore curwin->w_s.
updated for version 7.3.510 Problem:    Test 77 fails on Solaris 7. (Michael Soyka) Solution:   Replace any tabs with spaces.
Updated runtime files, include fixes for line continuation.
Updated runtime files.
updated for version 7.3.509 Problem:    ":vimgrep" fails when 'autochdir' is set. Solution:   A more generic solution for changing directory. (Ben Fritz)
updated for version 7.3.508 Problem:    Default for v:register is not set. Solution:   Init v:register in eval_init(). Correct for 'clipboard' before the             main loop. (Ingo Karkat)
updated for version 7.3.507 Problem:    When exiting with unsaved changes, selecting an existing file in             the file dialog, there is no dialog to ask whether the existing             file should be overwritten. (Felipe G. Nievinski) Solution:   Call check_overwrite() before writing. (Christian Brabandt)
updated for version 7.3.506 Problem:    GTK gives an error when selecting a non-existent file. Solution:   Add a handler to avoid the error. (Christian Brabandt)
updated for version 7.3.504 Problem:    Commands in help files are not highlighted. Solution:   Allow for commands in backticks.  Adjust CTRL-] to remove the             backticks.
updated for version 7.3.503 Problem:    Warning for unused argument. Solution:   Add UNUSED.
updated for version 7.3.502 Problem:    Netbeans insert halfway a line actually appends to the line. Solution:   Insert halfway the line. (Brian Victor)
updated for version 7.3.501 Problem:    Error for "flush" not being defined when using Ruby command. Solution:   Defined "flush" as a no-op method. (Kent Sibilev)
updated for version 7.3.500 Problem:    Ming makefile unconditionally sets WINVER. Solution:   Only defined when not already defined. (Yasuhiro Matsumoto)
updated for version 7.3.499 Problem:    When using any interface language when Vim is waiting for a child             process it gets confused by a child process started through the             interface. Solution:   Always used waitpid() instead of wait(). (Yasuhiro Matsumoto)
updated for version 7.3.498 Problem:    The behavior of the "- register changes depending on value of             the 'clipboard' option. (Szamotulski) Solution:   Also set the "- register when the register is "*" or "+".             (Christian Brabandt)
updated for version 7.3.497 Problem:    Crash when doing ":python print" and compiled with gcc and             the optimizer enabled. Solution:   Avoid the crash, doesn't really fix the problem. (Christian             Brabandt)
Updated runtime files.
updated for version 7.3.496 Problem:    MS-DOS: When "diff" trips over difference in line separators some             tests fail. Solution:   Make some .ok files use unix line separators. (David Pope)
updated for version 7.3.495 Problem:    Compiler warnings. Solution:   Add function declaration.  Remove "offset" argument.
updated for version 7.3.493 Problem:    Two unused variables. Solution:   Remove them. (Hong Xu)
Updated runtime files.
updated for version 7.3.492 Problem:    Can't indent conditions separately from function arguments. Solution:   Add the 'k' flag in 'cino. (Lech Lorens)
updated for version 7.3.491 Problem:    No tests for Lua. Solution:   Add some simple tests for Lua. (Luis Carvalho)
updated for version 7.3.489 Problem:    CTRL-] in Insert mode does not expand abbreviation when used in a             mapping. (Yichao Zhou) Solution:   Special case using CTRL-]. (Christian Brabandt)
updated for version 7.3.488 Problem:    ":help!" in a help file does not work as document. Solution:   When in a help file don't give an error message. (thinca)
Updated runtime files.
updated for version 7.3.487 Problem:    When setting 'timeoutlen' or 'ttimeoutlen' the column for vertical             movement is reset unnecessarily. Solution:   Do not set w_set_curswant for every option. Add a test for this.             (Kana Natsuno) Add the P_CURSWANT flag for options.
updated for version 7.3.486 Problem:    Build error with mingw64 on Windows 7. Solution:   Avoid the step of going through vimres.res. (Guopeng Wen)
updated for version 7.3.485 Problem:    When building Vim LDFLAGS isn't passed on to building xxd. Solution:   Pass the LDFLAGS value. (James McCoy)
updated for version 7.3.484 Problem:    The -E and --echo-wid command line arguments are not mentioned in             "vim --help". Solution:   Add the help lines. (Dominique Pelle)
updated for version 7.3.483 Problem:    More prompt shows up too often. Solution:   Instead of adding a line break, only start a new line in the             message history. (Christian Brabandt)
updated for version 7.3.482 Problem:    With 'cursorbind' set moving up/down does not always keep the same             column. Solution:   Set curswant appropriately. (Gary Johnson)
updated for version 7.3.481 Problem:    Changing 'virtualedit' in an operator function to "all" does not             have the desired effect. (Aaron Bohannon) Solution:   Save, reset and restore virtual_op when executing an operator             function.
updated for version 7.3.480 Problem:    When using ":qa" and there is a changed buffer picking the buffer             to jump to is not very good. Solution:   Consider current and other tab pages. (Hirohito Higashi)
updated for version 7.3.479 Problem:    When 'cursorline' is set the line number highlighting can't be set             separately. Solution:   Add "CursorLineNr". (Howard Buchholz)
updated for version 7.3.478 Problem:    Memory leak using the ':rv!' command when reading dictionary or             list global variables i.e. with 'viminfo' containing !. Solution:   Free the typeval. (Dominique Pelle)
updated for version 7.3.477 Problem:    Using ":echo" to output enough lines to scroll, then using "j" and             "k" at the more prompt, displays the command on top of the output.             (Marcin Szamotulski) Solution:   Put the output below the command. (Christian Brabandt)
updated for version 7.3.476 Problem:    When selecting a block, using "$" to include the end of each line             and using "A" and typing a backspace strange things happen.             (Yuangchen Xie) Solution:   Avoid using a negative length. (Christian Brabandt)
updated for version 7.3.475 Problem:    In a terminal with few colors the omnicomplete menu may be hard to             see when using the default colors. Solution:   Use more explicit colors. (suggested by Alex Henrie)
updated for version 7.3.474 Problem:    Perl build with gcc 4 fails. Solution:   Remove XS() statements. (Yasuhiro Matsumoto)
updated for version 7.3.473 Problem:    'cursorbind' does not work correctly in combination with             'virtualedit' set to "all". Solution:   Copy coladd. (Gary Johnson)
updated for version 7.3.472 Problem:    Crash when using ":redraw" in a BufEnter autocommand and             switching to another tab. (驼峰) Solution:   Move triggering the the autocommands to after correcting the             option values. Also check the row value to be out of bounds.             (Christian Brabandt, Sergey Khorev)
updated for version 7.3.471 Problem:    Can't abort listing placed signs. Solution:   Check "got_int". (Christian Brabandt)
Updated runtime files.  Add Dutch translations.
updated for version 7.3.470 Problem:    Test 62 fails when compiled without GUI and X11. Solution:   Don't test :drop when it is not supported.
updated for version 7.3.469 Problem:    Compiler warning for unused argument without some features. Solution:   Add UNUSED.
updated for version 7.3.467 Problem:    Cursor positioned wrong at the command line when regaining focus             and using some input method. Solution:   Do not position the cursor in command line mode.
updated for version 7.3.466 Problem:    Get ml_get error hen ":behave mswin" was used and selecting             several lines.  (A. Sinan Unur) Solution:   Adjust the end of the operation. (Christian Brabandt)
updated for version 7.3.465 Problem:    Cannot get file name with newline from glob(). Solution:   Add argument to glob() and expand() to indicate they must return a             list. (Christian Brabandt)
updated for version 7.3.464 Problem:    Compiler warning for sprintf. Solution:   Put the length in a variable. (Dominique Pelle)
updated for version 7.3.463 Problem:    When using ":s///c" the cursor is moved away from the match.             (Lawman) Solution:   Don't move the cursor when do_ask is set. (Christian Brabandt)
updated for version 7.3.462 Problem:    When using ":loadview" folds may be closed unexpectedly. Solution:   Take into account foldlevel. (Xavier de Gaye)
updated for version 7.3.461 Problem:    The InsertCharPre autocommand event is not triggered during             completion and when typing several characters quickly. Solution:   Also trigger InsertCharPre during completion.  Do not read ahead             when an InsertCharPre autocommand is defined. (Yasuhiro Matsumoto)
updated for version 7.3.460 Problem:    Win32: UPX does not compress 64 bit binaries. Solution:   Mention and add the alternative: mpress. (Dave Bodenstab)
updated for version 7.3.459 Problem:    Win32: Warnings for type conversion. Solution:   Add type casts. (Mike Williams)
updated for version 7.3.458 Problem:    Crash when calling smsg() during startup. Solution:   Don't use 'shortmess' when it is not set yet.
updated for version 7.3.457 Problem:    When setting $VIMRUNTIME later the directory for fetching             translated messages is not adjusted. Solution:   Put bindtextdomain() in vim_setenv().
updated for version 7.3.456 Problem:    ":tab drop file" has several problems, including moving the             current window and opening a new tab for a file that already has a             window. Solution:   Refactor ":tab drop" handling. (Hirohito Higashi)
updated for version 7.3.455 Problem:    Using many continuation lines can be slow. Solution:   Adjust the reallocation size to the current length.
updated for version 7.3.454 Problem:    Re-allocating memory slows Vim down. Solution:   Use realloc() in ga_grow(). (Dominique Pelle)
updated for version 7.3.453 Problem:    Pasting in the command line is slow. Solution:   Don't redraw if there is another character to read. (Dominique             Pelle)
updated for version 7.3.452 Problem:    Undo broken when pasting close to the last line. (Andrey Radev) Solution:   Use a flag to remember if the deleted included the last line.             (Christian Brabandt)
Updated runtime files.
updated for version 7.3.451 Problem:    Tcl doesn't work on 64 MS-Windows. Solution:   Make it work. (Dave Bodenstab)
updated for version 7.3.449 Problem:    Crash when a BufWinLeave autocommand closes the only other window.             (Daniel Hunt) Solution:   Abort closing a buffer when it becomes the only one.
updated for version 7.3.448 Problem:    Win32: Still a problem with "!start /b". Solution:   Escape only '|'. (Yasuhiro Matsumoto)
updated for version 7.3.447 Problem:    Win32: External commands with "start" do not work. Solution:   Unescape part of the command. (Yasuhiro Matsumoto)
updated for version 7.3.446 Problem:    Win32: External commands with special characters don't work. Solution:   Add the 'shellxescape' option.
updated for version 7.3.445 Problem:    Can't properly escape commands for cmd.exe. Solution:   Default 'shellxquote' to '('.  Append ')' to make '(command)'.             No need to use "/s" for 'shellcmdflag'.
Update runtime files.
updated for version 7.3.444 Problem:    ":all!" and ":sall!" give error E477, even though the             documentation says these are valid commands. Solution:   Support the exclamation mark. (Hirohito Higashi)
updated for version 7.3.443 Problem:    MS-Windows: 'shcf' and 'shellxquote' defaults are not very good. Solution:   Make a better guess when 'shell' is set to "cmd.exe". (Ben Fritz)
updated for version 7.3.442 Problem:    Still read modelines for ":doautocmd". Solution:   Move check for <nomodeline> to separate function.
updated for version 7.3.441 Problem:    Newer versions of MzScheme (Racket) require earlier (trampolined)             initialisation. Solution:   Call mzscheme_main() early in main(). (Sergey Khorev)
updated for version 7.3.440 Problem:    Vim does not support UTF8_STRING for the X selection. Solution:   Add UTF8_STRING atom support. (Alex Efros) Use it only when             'encoding' is set to Unicode.
updated for version 7.3.439 Problem:    Compiler warnings to size casts in Perl interface. Solution:   Use XS macros. (James McCoy)
updated for version 7.3.438 Problem:    There is no way to avoid ":doautoall" reading modelines. Solution:   Add the <nomodeline> argument. Adjust documentation.
updated for version 7.3.437 Problem:    Continue looping inside FOR_ALL_TAB_WINDOWS even when already done. Solution:   Use goto instead of break. (Hirohito Higashi)
updated for version 7.3.436 Problem:    Compiler warnings for types on Windows. Solution:   Add type casts. (Mike Williams)
updated for version 7.3.435 Problem:    Compiler warning for unused variable. Solution:   Move the variable inside #ifdef.
updated for version 7.3.434 Problem:    Using join() can be slow. Solution:   Compute the size of the result before allocation to avoid a lot of             allocations and copies. (Taro Muraoka)
updated for version 7.3.433 Problem:    Using continued lines in a Vim script can be slow. Solution:   Instead of reallocating for every line use a growarray. (Yasuhiro             Matsumoto)
updated for version 7.3.432 Problem:    ACLs are not supported for ZFS or NFSv4 on Solaris. Solution:   Add configure check and code. (Danek Duvall)
updated for version 7.3.431 Problem:    Fetching a key at a prompt may be confused by escape sequences.             Especially when getting a prompt at a VimEnter autocommand.             (Alex Efros) Solution:   Properly handle escape sequences deleted by check_termcode().
updated for version 7.3.430 Problem:    When a custom filetype detection uses "augroup END" the conf             fileytpe detection does not have the filetypedetect group. Solution:   Always end the group and include filetypedetect in the conf             autocommand. (Lech Lorens)
updated for version 7.3.429 Problem:    When 'cpoptions' includes "E" "c0" in the first column is an             error. The redo register is then set to the errornous command. Solution:   Do not set the redo register if the command fails because of an             empty region. (Hideki Eiraku)
updated for version 7.3.428 Problem:    Win32: an xpm file without a mask crashes Vim. Solution:   Fail when the mask is missing. (Dave Bodenstab)
updated for version 7.3.427 Problem:    readfile() can be slow with long lines. Solution:   Use realloc() instead of alloc(). (John Little)
updated for version 7.3.426 Problem:    With '$' in 'cpoptions' the $ is not displayed in the first             column. Solution:   Use -1 instead of 0 as a special value. (Hideki Eiraku and             Hirohito Higashi)
updated for version 7.3.425 Problem:    Search history lines are duplicated. (Edwin Steiner) Solution:   Convert separator character from space to NUL.
updated for version 7.3.424 Problem:    Win16 version missing some functions. Solution:   Add #defines for the functions.
updated for version 7.3.422 Problem:    Python 3 does not have __members__. Solution:   Add "name" and "number" in another way. (lilydjwg)
updated for version 7.3.421 Problem:    Get E832 when setting 'undofile' in vimrc and there is a file to             be edited on the command line. (Toothpik) Solution:   Do not try reading the undo file for a file that wasn't loaded.
updated for version 7.3.420 Problem:    "it" and "at" don't work properly with a dash in the tag name. Solution:   Require a space to match the tag name. (Christian Brabandt)
updated for version 7.3.419 Problem:    DBCS encoding in a user command does not always work. Solution:   Skip over DBCS characters. (Yasuhiro Matsumoto)
updated for version 7.3.418 Problem:    When a user complete function returns -1 an error message is             given. Solution:   When -2 is returned stop completion silently. (Yasuhiro Matsumoto)
updated for version 7.3.417 Problem:    Test 43 fails with a tiny build. Solution:   Only run test 43 with at least a small build.
updated for version 7.3.416 Problem:    Compiler warning for wrong pointer. Solution:   Add type cast.
updated for version 7.3.416 Problem:    Compiler warning for wrong pointer. Solution:   Add type cast.
updated for version 7.3.415 Problem:    Completion of functions stops once a dictionary is encountered.             (James McCoy) Solution:   Return an empty string instead of NULL.
updated for version 7.3.414 Problem:    Using CTRL-A on "000" drops the leading zero, while on "001" it             doesn't. Solution:   Detect "000" as an octal number. (James McCoy)
updated for version 7.3.413 Problem:    Build warnings on MS-Windows. Solution:   Add type casts. (Mike Williams)
updated for version 7.3.412 Problem:    Storing a float in a session file has an additional '&'. Solution:   Remove the '&'. (Yasuhiro Matsumoto)
updated for version 7.3.411 Problem:    Pasting in Visual mode using the "" register does not work. (John             Beckett) Solution:   Detect that the write is overwriting the pasted register.             (Christian Brabandt)
updated for version 7.3.410 Problem:    Compiler error for // comment. (Joachim Schmitz) Solution:   Turn into /* comment */.
updated for version 7.3.409 Problem:    The license in pty.c is unclear. Solution:   Add a comment about the license.
Update runtime files.
updated for version 7.3.408 Problem:    Missing declaration. Solution:   Add the declaration. (John Marriott)
updated for version 7.3.407 Problem:    ":12verbose call F()" may duplicate text while trying to truncate.             (Thinca) Solution:   Only truncate when there is not enough room.  Also check the byte             length of the buffer.
updated for version 7.3.406 Problem:    Multi-byte characters in b:browsefilter are not handled correctly. Solution:   First use convert_filter() normally and then convert to wide             characters. (Taro Muraoka)
updated for version 7.3.405 Problem:    When xterm gets back the function keys it may delete the urxvt             mouse termcap code. Solution:   Check for the whole code, not just the start. (Egmont Koblinger)
updated for version 7.3.404 Problem:    When a complete function uses refresh "always" redo will not work             properly. Solution:   Do not reset compl_leader when compl_opt_refresh_always is set.             (Yasuhiro Matsumoto)
updated for version 7.3.402 Problem:    When jumping to the first error a line of the buffer is sometimes             redrawn on top of the list of errors. Solution:   Do not call update_topline_redraw() if the display was scrolled             up.
updated for version 7.3.401 Problem:    A couple more shadowed variables. Solution:   Rename the variables.
updated for version 7.3.400 Problem:    Compiler warnings for shadowed variables. Solution:   Remove or rename the variables.
updated for version 7.3.399 Problem:    ":cd" doesn't work when the path contains wildcards. (Yukihiro             Nakadaira) Solution:   Ignore wildcard errors when the EW_NOTWILD flag is used.
updated for version 7.3.398 Problem:    When creating more than 10 location lists and adding items one by             one a previous location may be used. (Audrius Kažukauskas) Solution:   Clear the location list completely when adding the tenth one.
updated for version 7.3.397 Problem:    ":helpgrep" does not work properly when 'encoding' is not utf-8 or             latin1. Solution:   Convert non-ascii lines to 'encoding'. (Yasuhiro Matsumoto)
Updated runtime files.
updated for version 7.3.396 Problem:    After forcing an operator to be characterwise it can still become             linewise when spanning whole lines. Solution:   Don't make the operator linewise when motion_force was set.             (Christian Brabandt)
updated for version 7.3.395 Problem:    "dv?bar" in the last line deletes too much and breaks undo. Solution:   Only adjust the cursor position when it's after the last line of             the buffer.  Add a test. (Christian Brabandt)
updated for version 7.3.394 Problem:    When placing a mark while starting up a screen redraw messes up             the screen. (lith) Solution:   Don't redraw while still starting up. (Christian Brabandt)
updated for version 7.3.393 Problem:    Win32: When resizing Vim it is always moved to the primary monitor             if the secondary monitor is on the left. Solution:   Use the nearest monitor. (Yukihiro Nakadaira)
updated for version 7.3.392 Problem:    When setting 'undofile' while the file is already loaded but             unchanged, try reading the undo file. (Andy Wokula) Solution:   Compute a checksum of the text when 'undofile' is set. (Christian             Brabandt)
updated for version 7.3.391 Problem:    Can't check if the XPM_W32 feature is enabled. Solution:   Add xpm_w32 to the list of features. (kat)
updated for version 7.3.390 Problem:    Using NULL buffer pointer in a window. Solution:   Check for w_buffer being NULL in more places. (Bjorn Winckler)
updated for version 7.3.389 Problem:    After typing at a prompt the "MORE" message appears too soon. Solution:   reset lines_left in msg_end_prompt(). (Eswald)
updated for version 7.3.388 Problem:    Crash on exit when EXITFREE is defined and using tiny features. Solution:   Check for NULL window pointer. (Dominique Pelle)
Updated runtime files.
updated for version 7.3.387 Problem:    Test 83 may fail for some encodings. Solution:   Set 'encoding' to utf-8 earlier.
updated for version 7.3.386 Problem:    Test 83 fails when iconv does not support cp932. (raf) Solution:   Test if conversion works. (Yukihiro Nakadaira)
updated for version 7.3.385 Problem:    When using an expression mapping on the command line the cursor             ends up in the wrong place. (Yasuhiro Matsumoto) Solution:   Save and restore msg_col and msg_row when evaluating the             expression.
updated for version 7.3.384 Problem:    Mapping CTRL-K in Insert mode breaks CTRL-X CTRL-K for dictionary             completion. Solution:   Add CTRL-K to the list of recognized keys. (James McCoy)
updated for version 7.3.383 Problem:    For EBCDIC pound sign is defined as 't'. Solution:   Correctly define POUND.
updated for version 7.3.382 Problem:    IME characters are inserted twice. Solution:   Do not call DefWindowProc() if the event was handled. (Yasuhiro             Matsumoto)
Update runtime files.
updated for version 7.3.381 Problem:    Configure silently skips interfaces that won't work. Solution:   Add the --enable-fail_if_missing argument. (Shlomi Fish)
updated for version 7.3.380 Problem:    C-indenting wrong for a function header. Solution:   Skip to the start paren. (Lech Lorens)
updated for version 7.3.379 Problem:    C-indenting wrong for static enum. Solution:   Skip over "static". (Lech Lorens)
updated for version 7.3.378 Problem:    When cross-compiling the check for uint32_t fails. Solution:   Only give a warning message. (Maksim Melnikau)
updated for version 7.3.377 Problem:    No support for bitwise AND, OR, XOR and invert. Solution:   Add add(), or(), invert() and xor() functions.
updated for version 7.3.376 Problem:    Win32: Toolbar repainting does not work when the mouse pointer             hovers over a button. Solution:   Call DefWindowProc() when not hanlding an event. (Sergiu Dotenco)
updated for version 7.3.375 Problem:    Duplicate return statement. Solution:   Remove the superfluous one. (Dominique Pelle)
updated for version 7.3.374 Problem:    ++encoding does not work properly. Solution:   Recognize ++encoding before ++enc. (Charles Cooper)
updated for version 7.3.373 Problem:    A tags file with an extremely long name may cause an infinite loop. Solution:   When encountering a long name switch to linear search.
updated for version 7.3.372 Problem:    When using a command line mapping to <Up> with file name             completion to go one directory up, 'wildchar' is inserted.             (Yasuhiro Matsumoto) Solution:   Set the KeyTyped flag.
updated for version 7.3.371 Problem:    Crash in autocomplete. (Greg Weber) Solution:   Check not going over allocated buffer size.
updated for version 7.3.370 Problem:    Compiler warns for unused variable in Lua interface. Solution:   Remove the variable.
updated for version 7.3.369 Problem:    When compiled with Gnome get an error message when using --help. Solution:   Don't fork. (Ivan Krasilnikov)
updated for version 7.3.368 Problem:    Gcc complains about redefining _FORTIFY_SOURCE. Solution:   Undefine it before redefining it.
updated for version 7.3.367 Problem:    :wundo and :rundo use a wrong checksum. Solution:   Include the last line when computing the hash. (Christian Brabandt)
updated for version 7.3.366 Problem:    A tags file with an extremely long name causes errors. Solution:   Ignore tags that are too long. (Arno Renevier)
updated for version 7.3.365 Problem:    Crash when using a large Unicode character in a file that has             syntax highlighting. (ngollan) Solution:   Check for going past the end of the utf tables. (Dominique Pelle)
updated for version 7.3.364 Problem:    Can't compile on HP-UX. (John Marriott) Solution:   Only use TTYM_URXVT when it is defined.
updated for version 7.3.363 Problem:    C indenting is wrong after #endif followed by a semicolon. Solution:   Add special handling for a semicolon in a line by itself. (Lech             Lorens)
updated for version 7.3.362 Problem:    ml_get error when using ":g" with folded lines. Solution:   Adjust the line number for changed_lines(). (Christian Brabandt)
updated for version 7.3.361 Problem:    Accessing memory after it is freed when EXITFREE is defined. Solution:   Don't access curwin when firstwin is NULL. (Dominique Pelle)
updated for version 7.3.360 Problem:    Interrupting the load of an autoload function may cause a crash. Solution:   Do not use the hashitem when not valid. (Yukihiro Nakadaira)
updated for version 7.3.359 Problem:    Command line completion shows dict functions. Solution:   Skip dict functions for completion. (Yasuhiro Matsumoto)
updated for version 7.3.358 Problem:    Mouse support doesn't work properly. Solution:   Add HMT_URXVT. (lilydjwg, James McCoy)
updated for version 7.3.357 Problem:    Compiler warning in MS-Windows console build. Solution:   Adjust return type of PrintHookProc(). (Mike Williams)
updated for version 7.3.356 Problem:    Using "o" with 'cindent' set may freeze Vim. (lolilolicon) Solution:   Skip over {} correctly. (Hari G)
updated for version 7.3.355 Problem:    GTK warnings when using netrw.vim. (Ivan Krasilnikov) Solution:   Do not remove the beval event handler twice.
updated for version 7.3.354 Problem:    ":set backspace+=eol" doesn't work when 'backspace' has a             backwards compatible value of 2. Solution:   Convert the number to a string. (Hirohito Higashi)
updated for version 7.3.353 Problem:    Missing part of the urxvt patch. Solution:   Add the change in term.c
updated for version 7.3.352 Problem:    When completing methods dict functions and script-local functions             get in the way. Solution:   Sort function names starting with "<" to the end. (Yasuhiro             Matsumoto)
updated for version 7.3.351 Problem:    Text formatting uses start of insert position when it should not.             (Peter Wagenaar) Solution:   Do not use Insstart when intentionally formatting.
updated for version 7.3.350 Problem:    Block of code after ":lua << EOF" may not work. (Paul Isambert) Solution:   Recognize the ":lua" command, skip to EOF.
updated for version 7.3.349 Problem:    When running out of memory during startup trying to open a             swapfile will loop forever. Solution:   Let findswapname() set dirp to NULL if out of memory.
updated for version 7.3.348 Problem:    "call range(1, 947948399)" causes a crash. (ZyX) Solution:   Avoid a loop in the out of memory message.
Updated runtime files.
updated for version 7.3.346 Problem:    It's hard to test netbeans commands. Solution:   Process netbeans commands after :sleep. (Xavier de Gaye)
updated for version 7.3.345
updated for version 7.3.344 Problem:    Problem with GUI startup related to XInitThreads. Solution:   Use read() and write() instead of fputs() and fread(). (James             Vega)
updated for version 7.3.343 Problem:    No mouse support for urxvt. Solution:   Implement urxvt mouse support, also for > 252 columns.  (Yiding             Jia)
updated for version 7.3.341 Problem:    Local help files are only listed in help.txt, not in translated             help files. Solution:   Also find translated help files. (Yasuhiro Matsumoto)
updated for version 7.3.340 Problem:    When 'verbosefile' is set ftplugof.vim can give an error. Solution:   Only remove filetypeplugin autocommands when they exist. (Yasuhiro             Matsumoto)
updated for version 7.3.339 Problem:    "make shadow" doesn't link all test files. Solution:   Add a line in Makefile and Filelist.
updated for version 7.3.338 Problem:    Using getchar() in an expression mapping doesn't work well. Solution:   Don't save and restore the typeahead. (James Vega)
updated for version 7.3.337 Problem:    Screen doesn't update after resizing the xterm until a character             is typed. Solution:   When the select call is interrupted check do_resize. (Taylor             Hedberg)
updated for version 7.3.336 Problem:    When a tags file specifies an encoding different from 'enc' it             may hang and using a pattern doesn't work. Solution:   Convert the whole line.  Continue reading the header after the             SORT tag.  Add test83. (Yukihiro Nakadaira)
updated for version 7.3.335 Problem:    When 'imdisable' is reset from an autocommand in Insert mode it             doesn't take effect. Solution:   Call im_set_active() in Insert mode. (Taro Muraoka)
updated for version 7.3.334 Problem:    Latest MingW about XSUBPP referencing itself. (Gongqian Li) Solution:   Rename the first use to XSUBPPTRY.
updated for version 7.3.333 Problem:    Using "." to repeat a Visual delete counts the size in bytes, not             characters.  (Connor Lane Smith) Solution:   Store the virtual column numbers instead of byte positions.
updated for version 7.3.332 Problem:    Indent after "public:" is not increased in C++ code. (Lech Lorens) Solution:   Check for namespace after the regular checks. (partly by Martin             Gieseking)
updated for version 7.3.331 Problem:    "vit" selects wrong text when a tag name starts with the same text             as an outer tag name. (Ben Fritz) Solution:   Add "\>" to the pattern to check for word boundary.
updated for version 7.3.330 Problem:    When longjmp() is invoked if the X server gives an error the state             is not properly restored. Solution:   Reset vgetc_busy. (Yukihiro Nakadaira)
Add files aaded by patch 7.3.326.
updated for version 7.3.329 Problem:    When skipping over code from ":for" to ":endfor" get an error for             calling a dict function. (Yasuhiro Matsumoto) Solution:   Ignore errors when skipping over :call command.
updated for version 7.3.328 Problem:    When command line wraps the cursor may be displayed wrong when             there are multi-byte characters. Solution:   Position the cursor before drawing the text. (Yasuhiro Matsumoto)
updated for version 7.3.327 Problem:    When jumping to a help tag a closed fold doesn't open. Solution:   Save and restore KeyTyped. (Yasuhiro Matsumoto)
updated for version 7.3.326 Problem:    MingW 4.6 no longer supports the -mno-cygwin option. Solution:   Split the Cygwin and MingW makefiles. (Matsushita Shougo)
updated for version 7.3.325 Problem:    A duplicated function argument gives an internal error. Solution:   Give a proper error message. (based on patch by Tyru)
updated for version 7.3.323 Problem:    The default 'errorformat' does not ignore some "included from"             lines. Solution:   Add a few more patterns. (Ben Boeckel)
updated for version 7.3.322 Problem:    #ifdef for PDP_RETVAL doesn't work, INT_PTR can be a typedef. Solution:   Check the MSC version and 64 bit flags. (Sergiu Dotenco)
Updated a few runtime files.
updated for version 7.3.320 Problem:    When a 0xa0 character is in a sourced file the error message for             unrecognized command does not show the problem. Solution:   Display 0xa0 as <a0>.
updated for version 7.3.319 Problem:    Redobuff doesn't always include changes of the completion leader. Solution:   Insert backspaces as needed. (idea by Taro Muraoka)
updated for version 7.3.318 Problem:    "C" on the last line deletes that line if it's blank. Solution:   Only delete the last line for a delete operation. (James Vega)
updated for version 7.3.317 Problem:    Calling debug.debug() in Lua may cause Vim to hang. Solution:   Add a better debug method. (Rob Hoelz, Luis Carvalho)
updated for version 7.3.316 Problem:    Crash when 'colorcolumn' is set and closing buffer. Solution:   Check for w_buffer to be NULL. (Yasuhiro Matsumoto)
updated for version 7.3.315 Problem:    Opening a window before forking causes problems for GTK. Solution:   Fork first, create the window in the child and report back to the             parent process whether it worked.  If successful the parent exits,             if unsuccessful the child exits and the parent continues in the             terminal. (Tim Starling)
updated for version 7.3.314 Problem:    Missing parenthesis. Solution:   Add it. (Benjamin R. Haskell)
updated for version 7.3.313 Problem:    One more warning when compiling with dynamic Python 3. Solution:   Change PySliceObject to PyObject.
Updated runtime files.
updated for version 7.3.312 Problem:    Can't compile with tiny features. Solution:   Add #ifdef around win_valid().
updated for version 7.3.311 Problem:    Complete function isn't called when the leader changed. Solution:   Allow the complete function to return a dictionary with a flag             that indicates ins_compl_restart() is to be called when the leader             changes. (Taro Muraoka)
updated for version 7.3.309 Problem:    Warnings for pointer types. Solution:   Change PySliceObject to PyObject.
updated for version 7.3.308 Problem:    Writing to 'verbosefile' has problems, e.g. for :highlight. Solution:   Do not use a separate verbose_write() function but write with the             same code that does redirecting. (Yasuhiro Matsumoto)
updated for version 7.3.307 Problem:    Python 3 doesn't support slice assignment. Solution:   Implement slices. (Brett Overesch, Roland Puntaier)
updated for version 7.3.305 Problem:    Auto-loading a function while editing the command line causes             scrolling up the display. Solution:   Don't set msg_scroll when defining a function and the user is not             typing. (Yasuhiro Matsumoto)
updated for version 7.3.304 Problem:    Strawberry Perl doesn't work on MS-Windows. Solution:   Use xsubpp if needed. (Yasuhiro Matsumoto)
updated for version 7.3.303 Problem:    Compilation error. Solution:   Correct return type from int to pid_t. (Danek Duvall)
updated for version 7.3.302 Problem:    Test 19 fails without 'smartindent' and +eval. Solution:   Don't use ":exe". Source small.vim.
updated for version 7.3.301 Problem:    When 'smartindent' and 'copyindent' are set a Tab is used even             though 'expandtab' is set. Solution:   Do not insert Tabs. Add a test. (Christian Brabandt)
updated for version 7.3.300 Problem:    Python doesn't parse multi-byte argument correctly. Solution:   Use "t" instead of "s". (lilydjwg)
updated for version 7.3.299 Problem:    Source code not in Vim style. Solution:   Adjust the style. (Elias Diem)
updated for version 7.3.298 Problem:    Built-in colors are different from rgb.txt. Solution:   Adjust the color values. (Benjamin Haskell)
updated for version 7.3.297 Problem:    Can't load Perl 5.14 dynamically. Solution:   Add code in #ifdefs. (Charles Cooper)
updated for version 7.3.296 Problem:    When writing to an external command a zombie process may be left             behind. Solution:   Wait on the process. (James Vega)
updated for version 7.3.295 Problem:    When filtering text with an external command Vim may not read all             the output. Solution:   When select() is interrupted loop and try again. (James Vega)
updated for version 7.3.294 Problem:    Patch 289 causes more problems than it solves. Solution:   Rever the patch untill a better solution is found.
updated for version 7.3.293 Problem:    MSVC compiler has a problem with non-ASCII characters. Solution:   Avoid non-ASCII characters. (Hong Xu)
updated for version 7.3.292 Problem:    Crash when using fold markers and selecting a visual block that             includes a folded line and goes to end of line. (Sam Lidder) Solution:   Check for the column to be MAXCOL. (James Vega)
updated for version 7.3.291 Problem:    Configure doesn't work properly with Python3. Solution:   Put -ldl before $LDFLAGS. Add PY3_NO_RTLD_GLOBAL. (Roland             Puntaier)
updated for version 7.3.290 Problem:    When a BufWriteCmd autocommand resets 'modified' this doesn't             change older buffer states to be marked as 'modified' like             ":write" does.  (Yukihiro Nakadaira) Solution:   When the BufWriteCmd resets 'modified' then adjust the undo             information like ":write" does.
updated for version 7.3.289 Problem:    Complete function isn't called when the leader changed. Solution:   Call ins_compl_restart() when the leader changed.  (Taro Muraoka)
updated for version 7.3.288 Problem:    has('python') may give an error message for not being able to load             the library after using python3. Solution:   Only give the error when the verbose argument is true.
updated for version 7.3.287 Problem:    Can't compile with MSVC and tiny options. Solution:   Move variables and #ifdefs. (Sergey Khorev)
updated for version 7.3.286 Problem:    Crash when using "zd" on a large number of folds. (Sam King) Solution:   Recompute pointer after reallocating array.  Move fewer entries             when making room.
updated for version 7.3.285 Problem:    Mapping <Char-123> no longer works. Solution:   Properly check for "char-".  Add a test for it.
updated for version 7.3.284 Problem:    The str2special() function doesn't handle multi-byte characters             properly. Solution:   Recognize multi-byte characters. (partly by Vladimir Vichniakov)
updated for version 7.3.283 Problem:    An expression mapping with a multi-byte character containing a             0x80 byte gets messed up. (ZyX) Solution:   Unescape the expression before evaluating it (Yukihiro Nakadaira)
updated for version 7.3.282 Problem:    When using input() and :echo in a loop the displayed text is             incorrect. (Benjamin Fritz) Solution:   Only restore the cursor position when there is a command line.             (Ben Schmidt)
updated for version 7.3.281 Problem:    After using "expand('%:8')" the buffer name is changed. Solution:   Make a copy of the file name before shortening it.
updated for version 7.3.280 Problem:    ":lmake" does not update the quickfix window title. Solution:   Update the title. (Lech Lorens)
updated for version 7.3.279 Problem:    With GTK, when gvim is full-screen and a tab is opened and using a             specific monitor configuration the window is too big. Solution:   Adjust the window size like on MS-Windows. (Yukihiro Nakadaira)
updated for version 7.3.278 Problem:    Passing the file name to open in VisVim doesn't work. Solution:   Adjust the index and check for end of buffer. (Jiri Sedlak)
updated for version 7.3.277 Problem:    MS-Windows: some characters do not show in dialogs. Solution:   Use the wide methods when available. (Yanwei Jia)
updated for version 7.3.276 Problem:    GvimExt sets $LANG in the wrong way. Solution:   Save the environment and use it for gvim. (Yasuhiro Matsumoto)
updated for version 7.3.275 Problem:    MS-Windows: When using a black background some screen updates             cause the window to flicker. Solution:   Add WS_CLIPCHILDREN to CreateWindow().  (René Aguirre)
updated for version 7.3.274 Problem:    With concealed characters tabs do not have the right size. Solution:   Use VCOL_HLC instead of vcol. (Eiichi Sato)
updated for version 7.3.273 Problem:    A BOM in an error file is seen as text. (Aleksey Baibarin) Solution:   Remove the BOM from the text before evaluating. (idea by Christian             Brabandt)
updated for version 7.3.272 Problem:    ":put =list" does not add an empty line for a trailing empty             item. Solution:   Add a trailing NL when turning a list into a string.
updated for version 7.3.270 Problem:    Illegal memory access. Solution:   Swap conditions. (Dominique Pelle)
updated for version 7.3.269 Problem:    'shellcmdflag' only works with one flag. Solution:   Split into multiple arguments. (Gary Johnson)
updated for version 7.3.268 Problem:    Vim freezes when executing an external command with zsh. Solution:   Use O_NOCTTY both in the master and slave. (Bjorn Winckler)
updated for version 7.3.267 Problem:    Ruby on Mac OS X 10.7 may crash. Solution:   Avoid alloc(0). (Bjorn Winckler)
updated for version 7.3.266 Problem:    In Gvim with iBus typing space in Insert mode doesn't work. Solution:   Clear xim_expected_char after checking it.
updated for version 7.3.265 Problem:    When storing a pattern in search history there is no proper check             for the separator character. Solution:   Pass the separator character to in_history(). (Muraoka Taro)
updated for version 7.3.264 Problem:    When the current directory name contains wildcard characters, such             as "foo[with]bar", the tags file can't be found.  (Jeremy             Erickson) Solution:   When searching for matching files also match without expanding             wildcards.  This is a bit of a hack.
updated for version 7.3.263 Problem:    Perl and Tcl have a few code style problems. Solution:   Clean it up.  (Elias Diem)
updated for version 7.3.262 Problem:    Photon code style doesn't match Vim style. Solution:   Clean up some of it.  (Elias Diem)
updated for version 7.3.261 Problem:    G++ error message errornously recognized as error. Solution:   Ignore "In file included from" line also when it ends in a colon.             (Fernando Castillo)
updated for version 7.3.260 Problem:    CursorHold triggers on an incomplete mapping. (Will Gray) Solution:   Don't trigger CursorHold when there is typeahead.
updated for version 7.3.259 Problem:    Equivalence classes only work for latin characters. Solution:   Add the Unicode equivalence characters. (Dominique Pelle)
updated for version 7.3.258 Problem:    MS-Windows: The edit with existing vim context menu entries can be             unwanted. Solution:   Let a registry entry disable them. (Jerome Vuarand)
updated for version 7.3.257 Problem:    Not all completions are available to user commands. Solution:   Add "color", "compiler", "file_in_path" and "locale". (Dominique             Pelle)
updated for version 7.3.256 Problem:    Javascript indenting not sufficiently tested. Solution:   Add more tests. (Luc Deschenaux)  Mark the lines that are indented             wrong.
updated for version 7.3.255 Problem:    When editing a file such as "File[2010-08-15].vim" an E16 error is             given. (Manuel Stol) Solution:   Don't give an error for failing to compile the regexp.
Updated runtime files. Add missing test82 files.
updated for version 7.3.254 Problem:    The coladd field is not reset when setting the line number for a             ":call" command. Solution:   Reset it.
updated for version 7.3.253 Problem:    "echo 'abc' > ''" returns 0 or 1, depending on 'ignorecase'.             Checks in mb_strnicmp() for illegal and truncated bytes are             wrong.  Should not assume that byte length is equal before case             folding. Solution:   Add utf_safe_read_char_adv() and utf_strnicmp(). Add a test for             this. (Ivan Krasilnikov)
updated for version 7.3.252 Problem:    Tests fail. (David Northfield) Solution:   Add missing update for .ok file.
updated for version 7.3.251 Problem:    "gH<Del>" deletes the current line, except when it's the last             line. Solution:   Set the "include" flag to indicate the last line is to be deleted.
updated for version 7.3.250 Problem:    Python: Errors in Unicode characters not handled nicely. Solution:   Add the surrogateescape error handler. (lilydjwg)
updated for version 7.3.249 Problem:    Wrong indenting for array initializer. Solution:   Detect '}' in a better way. (Lech Lorens)
updated for version 7.3.248 Problem:    PC Install instructions missing install instructions. Solution:   Step-by-step explanation. (Michael Soyka)
updated for version 7.3.247 Problem:    Running tests changes the users viminfo file.  Test for patch             7.3.245 missing. Solution:   Add "nviminfo" to the 'viminfo' option.  Include the test.
updated for version 7.3.246 Problem:    Repeating "f4" in "4444" skips one 4. Solution:   Check the t_cmd flag. (Christian Brabandt)
updated for version 7.3.245 Problem:    Python 3.2 libraries not correctly detected. Solution:   Add the suffix to the library name. (Niclas Zeising)
updated for version 7.3.244 Problem:    MS-Windows: Build problem with old compiler. (John Beckett) Solution:   Only use HandleToLong() when available. (Mike Williams)
updated for version 7.3.243 Problem:    Illegal memory access in readline(). Solution:   Swap the conditions. (Dominique Pelle)
updated for version 7.3.242 Problem:    Illegal memory access in after_pathsep(). Solution:   Check that the pointer is not at the start of the file name.             (Dominique Pelle)
updated for version 7.3.241 Problem:    Using CTRL-R CTRL-W on the command line may insert only part of             the word. Solution:   Use the cursor position instead of assuming it is at the end of             the command. (Tyru)
updated for version 7.3.240 Problem:    External commands can't use pipes on MS-Windows. Solution:   Implement pipes and use them when 'shelltemp' isn't set. (Vincent             Berthoux)
updated for version 7.3.239 Problem:    Python corrects the cursor column without taking 'virtualedit'             into account. (lilydjwg) Solution:   Call check_cursor_col_win().
updated for version 7.3.238 Problem:    Compiler warning for conversion. Solution:   Add type cast. (Mike Williams)
updated for version 7.3.237 Problem:    "filetype" completion doesn't work on Windows. (Yue Wu) Solution:   Don't use a glob pattern for the directories, use a list of             directories. (Dominique Pelle)
updated for version 7.3.236 Problem:    Python 3 doesn't compile without +multi_byte Solution:   Use "latin1" when MULTI_BYTE is not defined. (lilydjwg)
updated for version 7.3.235 Problem:    ";" gets stuck on a "t" command, it's not useful. Solution:   Add the ';' flag in 'cpo'. (Christian Brabandt)
updated for version 7.3.234 Problem:    With GTK menu may be popping down. Solution:   Use event time instead of GDK_CURRENT_TIME. (Hong Xu)
updated for version 7.3.233 Problem:    ":scriptnames" and ":breaklist" show long file names. Solution:   Shorten to use "~/" when possible. (Jean-Rene David)
updated for version 7.3.232 Problem:    Python doesn't compile without +multi_byte Solution:   Use "latin1" when MULTI_BYTE is not defined.
updated for version 7.3.231 Problem:    Runtime file patches failed. Solution:   Redo the patches made against the patched files instead of the             files in the mercurial repository.
updated for version 7.3.230 Problem:    ":wundo" and ":rundo" don't unescape their argument.  (Aaron             Thoma) Solution:   Use FILE1 instead of XFILE.
updated for version 7.3.229 Problem:    Using fork() makes gvim crash on Mac when build with             CoreFoundation. Solution:   Disallow fork() when __APPLE__ is defined. (Hisashi T Fujinaka)
updated for version 7.3.228 Problem:    "2gj" does not always move to the correct position. Solution:   Get length of line after moving to a next line. (James Vega)
updated for version 7.3.227 Problem:    Mac OS doesn't have the linewise clipboard fix. Solution:   Also change the Mac OS file. (Bjorn Winckler)
Updated runtime files.
updated for version 7.3.226 Problem:    On a 64 bit system "syn sync fromstart" is very slow.  (Bjorn             Steinbrink) Solution:   Store the state when starting to parse from the first line.
updated for version 7.3.225 Problem:    Using "\n" in a substitute inside ":s" does not result in a line             break. Solution:   Change behavior inside vim_regexec_nl().   Add tests.  (Motoya             Kurotsu)
updated for version 7.3.224 Problem:    Can't pass dict to sort function. Solution:   Add the optional {dict} argument to sort(). (ZyX)
updated for version 7.3.222 Problem:    Warning for building GvimExt. Solution:   Comment-out the DESCRIPTION line. (Mike Williams)
updated for version 7.3.221 Problem:    Text from the clipboard is sometimes handled as linewise, but not             consistently. Solution:   Assume the text is linewise when it ends in a CR or NL.
Add files added by recent patches.
updated for version 7.3.219 Problem:    Can't compile with GTK on Mac. Solution:   Add some #ifdef trickery. (Ben Schmidt)
updated for version 7.3.218 Problem:    Tiny configuration problem with Python 3. Solution:   Add abiflags in one more place. (Andreas Behr)
updated for version 7.3.217 Problem:    Inside an "if" a ":wincmd" causes problems. Solution:   When skipping commands let ":wincmd" skip over its argument.
updated for version 7.3.216 Problem:    When recovering a file a range of lines is missing. (Charles Jie) Solution:   Reset the index when advancing to the next pointer block.  Add a             test to verify recovery works.
updated for version 7.3.215 Problem:    Wrong file names in previous patch. (Toothpik) Solution:   Include the option changes.
updated for version 7.3.214 Problem:    The text displayed by ":z-" isn't exactly like old Vi. Solution:   Add one to the start line number. (ChangZhuo Chen)
updated for version 7.3.213 Problem:    Javascript object literal is not indented correctly. Solution:   Make a special case for when "J1" is in 'cino'. (Luc Deschenaux)
updated for version 7.3.212 Problem:    With Python 3.2 ":py3" fails. Solution:   Move PyEval_InitThreads() to after Py_Initialize(). (Roland             Puntaier)  Check abiflags in configure. (Andreas Behr)
updated for version 7.3.211 Problem:    Compiler warning. Solution:   Add type cast.
updated for version 7.3.210 Problem:    Can't always find the file when using cscope. Solution:   Add the 'cscoperelative' option. (Raghavendra D Prabhu)
updated for version 7.3.209 Problem:    MSVC Install instructions point to wrong batch file. Solution:   Add a batch file for use with MSVC 10.
updated for version 7.3.208 Problem:    Early terminated if statement. Solution:   Remove the semicolon. (Lech Lorens)
updated for version 7.3.207 Problem:    Can't compile with MSVC with pentium4 and 64 bit. Solution:   Only use SSE2 for 32 bit. (Mike Williams)
updated for version 7.3.206 Problem:    64bit MS-Windows compiler warning. Solution:   Use HandleToLong() instead of type cast. (Mike Williams)
updated for version 7.3.205 Problem:    Syntax "extend" doesn't work correctly. Solution:   Avoid calling check_state_ends() recursively (Ben Schmidt)
updated for version 7.3.204 Problem:    Compiler warning. Solution:   Add type cast. (Mike Williams)
updated for version 7.3.203 Problem:    MS-Windows: Can't run an external command without a console window. Solution:   Support ":!start /b cmd". (Xaizek)
updated for version 7.3.202 Problem:    Cannot influence the indent inside a namespace. Solution:   Add the "N" 'cino' parameter. (Konstantin Lepa)
updated for version 7.3.201 Problem:    "} else" still causes following lines to be indented too much. Solution:   Better detection for the "else" block. (Lech Lorens)
updated for version 7.3.200 Problem:    CTRL-D doesn't complete :lang. Solution:   Add the missing part of the change. (Dominique Pelle)
updated for version 7.3.199 Problem:    MS-Windows: Compilation problem of OLE with MingW compiler. Solution:   Put #ifdef around declarations. (Guopeng Wen)
updated for version 7.3.198 Problem:    No completion for ":lang". Solution:   Get locales to complete from. (Dominique Pelle)
updated for version 7.3.197 Problem:    When a QuickfixCmdPost event removes all errors, Vim still tries             to jump to the first error, resulting in E42. Solution:   Get the number of error after the autocmd event. (Mike Lundy)
updated for version 7.3.196 Problem:    Can't intercept a character that is going to be inserted. Solution:   Add the InsertCharPre autocommand event. (Jakson A. Aquino)
updated for version 7.3.195 Problem:    "} else" causes following lines to be indented too much. (Rouben             Rostamian) Solution:   Better detection for the "else". (Lech Lorens)
updated for version 7.3.194 Problem:    When "b" is a symlink to directory "a", resolve("b/") doesn't             result in "a/".  (ZyX) Solution:   Remove the trailing slash. (Jean-Rene David)
updated for version 7.3.193 Problem:    In the command line window ":close" doesn't work properly. (Tony             Mechelynck) Solution:   Use Ctrl_C instead of K_IGNORE for cmdwin_result. (Jean-Rene             David)
updated for version 7.3.192 Problem:    Ex command ":s/ \?/ /g" splits multi-byte characters into bytes.             (Dominique Pelle) Solution:   Advance over whole character instead of one byte.
Updated message translations.
updated for version 7.3.191 Problem:    Still some RISC OS stuff to remove. Solution:   Remove files and lines. (Hong Xu)             Remove the 'osfiletype' option code.
Updated runtime files.
updated for version 7.3.190 Problem:    When there is a "containedin" syntax argument highlighting may be             wrong. (Radek) Solution:   Reset current_next_list. (Ben Schmidt)
updated for version 7.3.189 Problem:    Can't build without +clipboard feature. (Christian Ebert) Solution:   Add the missing #ifdef.
updated for version 7.3.188 Problem:    More RISC OS files to remove. Solution:   Remove them.  Update the file list.
Updated runtime files.
Remove the deleted RISC OS files.
updated for version 7.3.187 Problem:    The RISC OS port has obvious errors and is not being maintained. Solution:   Remove the RISC OS files and code.
updated for version 7.3.186 Problem:    When 'clipboard' contains "unnamed" or "unnamedplus" the value of             v:register is wrong for operators without a specific register. Solution:   Adjust the register according to 'clipboard'. (Ingo Karkat)
updated for version 7.3.185 Problem:    ":windo g/pattern/q" closes windows and reports "N more lines".             (Tim Chase) Solution:   Remember what buffer ":global" started in. (Jean-Rene David)
updated for version 7.3.184 Problem:    Static code analysis errors in riscOS. Solution:   Make buffer size bigger. (Dominique Pelle)
updated for version 7.3.183 Problem:    When Exuberant ctags binary is exuberant-ctags it's not found. Solution:   Add configure check for exuberant-ctags.
updated for version 7.3.182 Problem:    Compiler warning for uninitialized variable. Solution:   Add dummy initializer.
updated for version 7.3.181 Problem:    When repeating the insert of CTRL-V or a digraph the display may             not be updated correctly. Solution:   Only call edit_unputchar() after edit_putchar(). (Lech Lorens)
updated for version 7.3.180 Problem:    When both a middle part of 'comments' matches and an end part, the             middle part was used errornously. Solution:   After finding the middle part match continue looking for a better             end part match. (partly by Lech Lorens)
updated for version 7.3.179 Problem:    C-indent doesn't handle colon in string correctly. Solution:   Skip the string. (Lech Lorens)
updated for version 7.3.177 Problem:    MS-Windows: mkdir() doesn't work properly when 'encoding' is             "utf-8". Solution:   Convert to utf-16. (Yukihiro Nakadaira)
updated for version 7.3.175 Problem:    When 'colorcolumn' is set locally to a window, ":new" opens a             window with the same highlighting but 'colorcolumn' is empty.             (Tyru) Solution:   Call check_colorcolumn() after clearing and copying options.             (Christian Brabandt)
updated for version 7.3.174 Problem:    When Exuberant ctags binary is exctags it's not found. Solution:   Add configure check for exctags. (Hong Xu)
updated for version 7.3.173 Problem:    After using setqflist() to make the quickfix list empty ":cwindow"             may open the window anyway.  Also after ":vimgrep". Solution:   Correctly check whether the list is empty. (Ingo Karkat)
updated for version 7.3.172 Problem:    MS-Windows: rename() might delete the file if the name differs but             it's actually the same file. Solution:   Use the file handle to check if it's the same file. (Yukihiro             Nakadaira)
updated for version 7.3.171 Problem:    When the clipboard isn't supported: ":yank*" gives a confusing             error message. Solution:   Specifically mention that the register name is invalid.             (Jean-Rene David)
updated for version 7.3.170 Problem:    VMS Makefile for testing was not updated for test77. Solution:   Add test77 to the Makefile.
Updated runtime files.
updated for version 7.3.169 Problem:    Freeing memory already freed, warning from static code analyzer. Solution:   Initialize pointers to NULL, correct use of "mustfree". (partly by             Dominique Pelle)
updated for version 7.3.168 Problem:    When the second argument of input() contains a CR the text up to             that is used without asking the user. (Yasuhiro Matsumoto) Solution:   Change CR, NL and ESC in the text to a space.
updated for version 7.3.166 Problem:    Buffer on the stack may be too big Solution:   Allocate the space.
updated for version 7.3.165 Problem:    ":find" completion does not escape spaces in a directory name.             (Isz) Solution:   Add backslashes for EXPAND_FILES_IN_PATH. (Carlo Teubner)
updated for version 7.3.164 Problem:    C-indenting: a preprocessor statement confuses detection of a             function delcaration. Solution:   Ignore preprocessor lines. (Lech Lorens)  Also recognize the style             to put a comma before the argument name.
updated for version 7.3.163 Problem:    For the default of 'shellpipe' "mksh" and "pdksh" are not             recognized. Solution:   Recognize these shell names.
updated for version 7.3.162 Problem:    No error message when assigning to a list with an index out of             range. (Yukihiro Nakadaira) Solution:   Add the error message.
updated for version 7.3.161 Problem:    Items on the stack may be too big. Solution:   Make items static or allocate them.
updated for version 7.3.160 Problem:    Unsafe string copying. Solution:   Use vim_strncpy() instead of strcpy().  Use vim_strcat() instead             of strcat().
updated for version 7.3.159 Problem:    Using uninitialized pointer when out of memory. Solution:   Check for NULL return value.
updated for version 7.3.158 Problem:    Might use uninitialized memory in C indenting. Solution:   Init arrays to empty.
updated for version 7.3.157 Problem:    Superfluous assignment. Solution:   Remove assignment.
updated for version 7.3.156 Problem:    Tty names possibly left unterminated. Solution:   Use vim_strncpy() instead of strncpy().
updated for version 7.3.155 Problem:    Crash when using map(), filter() and remove() on v:. (ZyX)             Also for extend(). (Yukihiro Nakadaira) Solution:   Mark v: as locked.  Also correct locking error messages.
updated for version 7.3.154 Problem:    Can't compile with tiny features. (Tony Mechelynck) Solution:   Move #define outside of #ifdef.
updated for version 7.3.153 Problem:    Compiler warning for ambiguous else, missing prototype. Solution:   Add braces. (Dominique Pelle)  Add prototype for die().
updated for version 7.3.152 Problem:    Xxd does not check for errors from library functions. Solution:   Add error checks. (Florian Zumbiehl)
Updated runtime files.
updated for version 7.3.151 Problem:    When "unnamedplus" is in 'clipboard' the selection is sometimes             also copied to the star register. Solution:   Avoid copy to the star register when undesired. (James Vega)
updated for version 7.3.150 Problem:    readline() does not return the last line when the NL is missing.             (Hong Xu) Solution:   When at the end of the file Also check for a previous line.
updated for version 7.3.149 Problem:    The cursor disappears after the processing of the 'setDot'             netbeans command when vim runs in a terminal. Solution:   Show the cursor after a screen update. (Xavier de Gaye, 2011
updated for version 7.3.148 Problem:    A syntax file with a huge number of items or clusters causes weird             behavior, a hang or a crash. (Yukihiro Nakadaira) Solution:   Check running out of IDs. (partly by Ben Schmidt)
updated for version 7.3.147 Problem:    Can't build on HP-UX. Solution:   Remove an unnecessary backslash. (John Marriott)
updated for version 7.3.146 Problem:    It's possible to assign to a read-only member of a dict.             It's possible to create a global variable "0". (ZyX)             It's possible to add a v: variable with ":let v:.name = 1". Solution:   Add check for dict item being read-only.             Check the name of g: variables.             Disallow adding v: variables.
updated for version 7.3.145 Problem:    Can't build with Python dynamically loading. Solution:   Add dll_PyType_Ready.
Add missing files for patch 7.3.143.
updated for version 7.3.143 Problem:    Memfile is not tested sufficiently.  Looking up blocks in a             memfile is slow when there are many blocks. Solution:   Add high level test and unittest.  Adjust the number of hash             buckets to the number of blocks.  (Ivan Krasilnikov)
updated for version 7.3.142 Problem:    Python stdout doesn't have a flush() method, causing an import to             fail. Solution:   Add a dummy flush() method. (Tobias Columbus)
updated for version 7.3.141 Problem:    When a key code is not set get a confusing error message. Solution:   Change the error message to say the key code is not set.
Updated runtime files.
updated for version 7.3.140 Problem:    Crash when drawing the "$" at end-of-line for list mode just after             the window border and 'cursorline' is set. Solution:   Don't check for 'cursorline'. (Quentin Carbonneaux)
updated for version 7.3.139 Problem:    When 'lazyredraw' is set ":ver" output can't be read. Solution:   Don't redraw the screen when at a prompt or command line.
updated for version 7.3.138 Problem:    ":com" changes the multi-byte text of :echo. (Dimitar Dimitrov) Solution:   Search for K_SPECIAL as a byte, not a character. (Ben Schmidt)
updated for version 7.3.137 Problem:    When 'lazyredraw' is set the screen may not be updated. (Ivan             Krasilnikov) Solution:   Call update_screen() before waiting for input.
updated for version 7.3.136 Problem:    Duplicate include of assert.h. Solution:   Remove it.
updated for version 7.3.135 Problem:    When there is no previous substitute pattern, the previous search             pattern is used.  The other way around doesn't work. Solution:   When there is no previous search pattern, use the previous             substitute pattern if possible. (Christian Brabandt)
updated for version 7.3.134 Problem:    Drag-n-drop doesn't work in KDE Dolphin. Solution:   Add GDK_ACTION_MOVE flag. (Florian Degner)
updated for version 7.3.133 Problem:    When using encryption it's not clear what method was used. Solution:   In the file message show "blowfish" when using blowfish.
updated for version 7.3.132 Problem:    C++ style comments. Solution:   Change to C comments.
updated for version 7.3.131 Problem:    Including errno.h too often. Solution:   Don't include errno.h in Unix header file.
updated for version 7.3.130 Problem:    Variable misplaced in #ifdef. Solution:   Move clipboard_event_time outside of #ifdef.
updated for version 7.3.129 Problem:    Using integer like a boolean. Solution:   Nicer check for integer being non-zero.
updated for version 7.3.128 Problem:    Another compiler warning for signed pointer. Solution:   Use unsigned int argument for sscanf().
updated for version 7.3.127 Problem:    Compiler complains about comma. Solution:   Remove comma after last enum element.
updated for version 7.3.126 Problem:    Compiler warning for signed pointer. Solution:   Use unsigned int argument for sscanf().
Runtime file updates.
updated for version 7.3.125 Problem:    MSVC: Problem with quotes in link argument. Solution:   Escape backslashes and quotes. (Weasley)
updated for version 7.3.124 Problem:    When writing a file in binary mode it may be missing the final EOL             if a file previously read was missing the EOL. (Kevin Goodsell) Solution:   Move the write_no_eol_lnum into the buffer struct.
updated for version 7.3.123 Problem:    ml_get error when executing register being recorded into, deleting             lines and 'conceallevel' is set. (ZyX) Solution:   Don't redraw a line for concealing when it doesn't exist.
updated for version 7.3.122 Problem:    Having auto/config.mk in the repository causes problems. Solution:   Remove auto/config.mk from the distribution.  In the toplevel             Makefile copy it from the "dist" file.
updated for version 7.3.121 Problem:    Complicated 'statusline' causes a crash. (Christian Brabandt) Solution:   Check that the number of items is not too big.
updated for version 7.3.120 Problem:    The message for an existing swap file is too long to fit in a 25             line terminal. Solution:   Make the message shorter. (Chad Miller)
updated for version 7.3.119 Problem:    Build problem on Mac. (Nicholas Stallard) Solution:   Use "extern" instead of "EXTERN" for p_vfile.
updated for version 7.3.118 Problem:    Ruby uses SIGVTALARM which makes Vim exit. (Alec Tica) Solution:   Ignore SIGVTALARM. (Dominique Pelle)
updated for version 7.3.117 Problem:    On some systems --as-needed does not work, because the "tinfo"             library is included indirectly from "ncurses". (Charles Campbell) Solution:   In configure prefer using "tinfo" instead of "ncurses".
updated for version 7.3.116 Problem:    'cursorline' is displayed too short when there are concealed             characters and 'list' is set.  (Dennis Preiser) Solution:   Check for 'cursorline' when 'list' is set. (Christian Brabandt)
Updated runtime files and translations.
updated for version 7.3.115 Problem:    Vim can crash when tmpnam() returns NULL. Solution:   Check for NULL. (Hong Xu)
updated for version 7.3.114 Problem:    Potential problem in initialization when giving an error message             early. Solution:   Initialize 'verbosefile' empty. (Ben Schmidt)
updated for version 7.3.113 Problem:    Windows: Fall back directory for creating temp file is wrong. Solution:   Use "." instead of empty string. (Hong Xu)
updated for version 7.3.112 Problem:    Setting 'statusline' to "%!'asdf%' reads uninitialized memory. Solution:   Check for NUL after %.
updated for version 7.3.111 Problem:    Executing a :normal command in 'statusline' evaluation causes the             cursor to move. (Dominique Pelle) Solution:   When updating the cursor for 'cursorbind' allow the cursor beyond             the end of the line.  When evaluating 'statusline' temporarily             reset 'cursorbind'.
updated for version 7.3.110 Problem:    The "nbsp" item in 'listchars' isn't used for ":list". Solution:   Make it work. (Christian Brabandt)
updated for version 7.3.109 Problem:    Processing new Esperanto spell file fails and crashes Vim.             (Dominique Pelle) Solution:   When running out of memory give an error.  Handle '?' in             COMPOUNDRULE properly.
updated for version 7.3.108 Problem:    Useless check for NULL when calling vim_free(). Solution:   Remove the check. (Dominique Pelle)
updated for version 7.3.107 Problem:    Year number for :undolist can be confused with month or day. Solution:   Change "%y" to "%Y".
updated for version 7.3.106 Problem:    When 'cursorbind' is set another window may scroll unexpectedly             when 'scrollbind' is also set. (Xavier Wang) Solution:   Don't call update_topline() if 'scrollbind' is set.
updated for version 7.3.105 Problem:    Can't get the value of "b:changedtick" with getbufvar(). Solution:   Make it work. (Christian Brabandt)
updated for version 7.3.104 Problem:    Conceal: using Tab for cchar causes problems. (ZyX) Solution:   Do not accept a control character for cchar.
updated for version 7.3.103 Problem:    Changing 'fileformat' and then using ":w" in an empty file sets             the 'modified' option. Solution:   In unchanged() don't ignore 'ff' for an empty file.
updated for version 7.3.102 Problem:    When using ":make", typing the next command and then getting the             "reload" prompt the next command is (partly) eaten by the reload             prompt. Solution:   Accept ':' as a special character at the reload prompt to accept             the default choice and execute the command.
updated for version 7.3.101 Problem:    ino_t defined with wrong size. Solution:   Move including auto/config.h before other includes. (Marius             Geminas)
updated for version 7.3.100 Problem:    When using :normal v:count isn't set. Solution:   Call normal_cmd() with toplevel set to TRUE.
Updated runtime files.
updated for version 7.3.099 Problem:    Crash when splitting a window with zero height. (Yukihiro             Nakadaira) Solution:   Don't set the fraction in a window with zero height.
updated for version 7.3.098 Problem:    Function that ignores error still causes called_emsg to be set.             E.g. when expand() fails the status line is disabled. Solution:   Move check for emsg_not_now() up. (James Vega)
updated for version 7.3.097 Problem:    Using ":call" inside "if 0" does not see that a function returns a             Dict and gives error for "." as string concatenation. Solution:   Use eval0() to skip over the expression.  (Yasuhiro Matsumoto)
updated for version 7.3.096 Problem:    "gvim -nb" is not interruptable.  Leaking file descriptor on             netbeans connection error. Solution:   Check for CTRL-C typed.  Free file descriptor.  (Xavier de Gaye)
updated for version 7.3.095 Problem:    Win32: In Chinese tear-off menu doesn't work. (Weasley) Solution:   Use menu_name_equal().  (Alex Jakushev)
updated for version 7.3.094 Problem:    Using abs() requires type cast to int. Solution:   Use labs() so that the value remains long. (Hong Xu)
updated for version 7.3.093 Problem:    New DLL dependencies in MingW with gcc 4.5.0. Solution:   Add STATIC_STDCPLUS, LDFLAGS and split up WINDRES. (Guopeng Wen)
updated for version 7.3.092 Problem:    Resizing the window when exiting. Solution:   Don't resize when exiting.
updated for version 7.3.091 Problem:    "vim -w foo" writes special key codes for removed escape             sequences. (Josh Triplett) Solution:   Don't write K_IGNORE codes.
updated for version 7.3.090 Problem:    Wrong help text for Cscope. Solution:   Adjust the help text for "t". (Dominique Pelle)
updated for version 7.3.089 Problem:    Compiler warning on 64 bit MS-Windows. Solution:   Add type cast. (Mike Williams)
updated for version 7.3.088 Problem:    Ruby can't load Gems sometimes, may cause a crash. Solution:   Undefine off_t.  Use ruby_process_options(). (Yasuhiro Matsumoto)
updated for version 7.3.087 Problem:    EINTR is not always defined. Solution:   Include errno.h in vim.h.
updated for version 7.3.086 Problem:    When using a mapping with an expression and there was no count,             v:count has the value of the previous command. (ZyX) Solution:   Also set v:count and v:count1 before getting the character that             could be a command or a count.
updated for version 7.3.085 Problem:    Inconsistency with preproc symbols.  void * computation. Solution:   Include vimio.h from vim.h.  Add type cast.
updated for version 7.3.084 Problem:    When splitting the window, the new one scrolls with the cursor at             the top. Solution:   Compute w_fraction before setting the new height.
updated for version 7.3.083 Problem:    When a read() or write() is interrupted by a signal it fails. Solution:   Add read_eintr() and write_eintr().
updated for version 7.3.082 Problem:    Leaking file descriptor when hostname doesn't exist. Solution:   Remove old debugging lines.
Update runtime files.
updated for version 7.3.081 Problem:    Non-printable characters in 'statusline' cause trouble. (ZyX) Solution:   Use transstr(). (partly by Caio Ariede)
updated for version 7.3.080 Problem:    Spell doesn't work on VMS. Solution:   Use different file names. (Zoltan Bartos, Zoltan Arpadffy)
updated for version 7.3.079 Problem:    Duplicate lines in makefile. Solution:   Remove the lines. (Hong Xu)
updated for version 7.3.078 Problem:    Warning for unused variable. Solution:   Adjuste #ifdefs.
updated for version 7.3.077 Problem:    When updating crypt of swapfile fails there is no error message.             (Carlo Teubner) Solution:   Add the error message.
updated for version 7.3.076 Problem:    Clang warnings for dead code. Solution:   Remove it. (Carlo Teubner)
updated for version 7.3.075 Problem:    Missing part of 'wildignorecase' Solution:   Also adjust expand()
updated for version 7.3.074 Problem:    Can't use the "+ register like "* for yank and put. Solution:   Add "unnamedplus" to the 'clipboard' option. (Ivan Krasilnikov)
updated for version 7.3.073 Problem:    Double free memory when netbeans command follows DETACH. Solution:   Only free the node when owned. (Xavier de Gaye)
updated for version 7.3.072 Problem:    Can't complete file names while ignoring case. Solution:   Add 'wildignorecase'.
updated for version 7.3.071 Problem:    Editing a file in a window that's in diff mode resets 'diff'             but not cursor binding. Solution:   Reset cursor binding in two more places.
updated for version 7.3.070 Problem:    Can set environment variables in the sandbox, could be abused. Solution:   Disallow it.
updated for version 7.3.069 Problem:    GTK: pressing Enter in inputdialog() doesn't work like clicking OK             as documented. Solution:   call gtk_entry_set_activates_default(). (Britton Kerin)
updated for version 7.3.068 Problem:    Using freed memory when doing ":saveas" and an autocommand sets             'autochdir'. (Kevin Klement) Solution:   Get the value of fname again after executing autocommands.
updated for version 7.3.067 Problem:    Ruby: Init_prelude is not always available. Solution:   Remove use of Init_prelude. (Yasuhiro Matsumoto)
updated for version 7.3.066 Problem:    Crash when changing to another window while in a :vimgrep command.             (Christian Brabandt) Solution:   When wiping out the dummy before, remove it from aucmd_win.
updated for version 7.3.065 Problem:    Can't get current line number in a source file. Solution:   Add the <slnum> item, similar to <sfile>.
updated for version 7.3.064 Problem:    Win32: ":dis +" shows nothing, but "+p does insert text. Solution:   Display the * register, since that's what will be inserted.             (Christian Brabandt)
updated for version 7.3.063 Problem:    Win32: Running a filter command makes Vim lose focus. Solution:   Use SW_SHOWMINNOACTIVE instead of SW_SHOWMINIMIZED. (Hong Xu)
Updated runtime files.
updated for version 7.3.062 Problem:    Python doesn't work properly when installed in another directory             than expected. Solution:   Figure out home directory in configure and use Py_SetPythonHome()             at runtime. (Roland Puntaier)
updated for version 7.3.061 Problem:    Remote ":drop" does not respect 'autochdir'. (Peter Odding) Solution:   Don't restore the directory when 'autochdir' is set. (Benjamin             Fritz)
updated for version 7.3.060 Problem:    Netbeans: crash when socket is disconnected unexpectedly. Solution:   Don't cleanup when a read fails, put a message in the queue and             disconnect later. (Xavier de Gaye)
updated for version 7.3.059 Problem:    Netbeans: Problem with recursively handling messages for Athena             and Motif. Solution:   Call netbeans_parse_messages() in the main loop, like it's done             for GTK. (Xavier de Gaye)
updated for version 7.3.058 Problem:    Error "code converter not found" when loading Ruby script. Solution:   Load Gem module. (Yasuhiro Matsumoto)
updated for version 7.3.057 Problem:    Segfault with command line abbreviation. (Randy Morris) Solution:   Don't retrigger the abbreviation when abandoning the command line.             Continue editing the command line after the error.
updated for version 7.3.056 Problem:    "getline" argument in do_cmdline() shadows global. Solution:   Rename the argument. Files:      src/ex_docmd.c
updated for version 7.3.055 Problem:    Recursively nested lists and dictionaries cause a near-endless             loop when comparing them with a copy. (ZyX) Solution:   Limit recursiveness in a way that non-recursive structures can             still be nested very deep. Files:      src/eval.c, src/testdir/test55.in, src/testdir/test55.ok
updated for version 7.3.054 Problem:    Can define a user command for :Print, but it doesn't work. (Aaron             Thoma) Solution:   Let user command :Print overrule the builtin command (Christian             Brabandt)  Disallow :X and :Next as a user defined command.
updated for version 7.3.053 Problem:    complete() function doesn't reset complete direction.  Can't use             an empty string in the list of matches. Solution:   Set compl_direction to FORWARD.  Add "empty" key to allow empty             words. (Kikuchan)
updated for version 7.3.052 Problem:    When 'completefunc' opens a new window all kinds of errors follow.             (Xavier Deguillard) Solution:   When 'completefunc' goes to another window or buffer and when it             deletes text abort completion.  Add a test for 'completefunc'.
updated for version 7.3.051 Problem:    Crash when /home/mool/bin:/usr/local/sbin:/usr/local/bin:/home/mool/java/jdk/bin:/bin:/sbin:/usr/bin:/usr/games:/usr/sbin:/usr/X11R6/bin:/usr/local/linux-jdk1.3.1/bin:/usr/local/lib/python2.2/Tools/idle is empty. Solution:   Check for vim_getenv() returning NULL. (Yasuhiro Matsumoto)
updated for version 7.3.050 Problem:    The link script is clumsy. Solution:   Use the --as-needed linker option if available. (Kirill A.             Shutemov)
updated for version 7.3.049 Problem:    PLT has rebranded their Scheme to Racket. Solution:   Add support for Racket 5.x. (Sergey Khorev)
updated for version 7.3.047 Problem:    Missing makefile updates for test 75. Solution:   Update the makefiles.
Updated runtile files.
updated for version 7.3.046 Problem:    Can't build Ruby on MS-Windows. Solution:   Add #ifdef, don't use WIN3264 before including vim.h.
updated for version 7.3.045 Problem:    Compiler warning for uninitialized variable. Solution:   Initialize the variable always.
updated for version 7.3.044 Problem:    The preview window opened by the popup menu is larger than             specified with 'previewheight'. (Benjamin Haskell) Solution:   Use 'previewheight' if it's set and smaller.
updated for version 7.3.043 Problem:    Can't load Ruby dynamically on Unix. Solution:   Adjust the configure script. (James Vega)
updated for version 7.3.042 Problem:    No spell highlighting when re-using an empty buffer. Solution:   Clear the spell checking info only when clearing the options for a             buffer. (James Vega)
updated for version 7.3.041 Problem:    Compiler warning for accessing mediumVersion. (Tony Mechelynck) Solution:   Use the pointer instead of the array itself. (Dominique Pelle)
updated for version 7.3.040 Problem:    Comparing strings while ignoring case goes beyond end of the             string when there are illegal bytes. (Dominique Pelle) Solution:   Explicitly check for illegal bytes.
updated for version 7.3.039 Problem:    Crash when using skk.vim plugin. Solution:   Get length of expression evaluation result only after checking for             NULL.  (Noriaki Yagi, Dominique Pelle)
updated for version 7.3.038 Problem:    v:windowid isn't set on MS-Windows. Solution:   Set it to the window handle. (Chris Sutcliffe)
updated for version 7.3.037 Problem:    Compiler warnings for loss of data. (Mike Williams) Solution:   Add type casts.
updated for version 7.3.036 Problem:    Win32 GUI: When building without menus, the font for dialogs and             tab page headers also changes. Solution:   Define USE_SYSMENU_FONT always. (Harig G.)
updated for version 7.3.035 Problem:    Stray semicolon after if statement. (Hari G) Solution:   Remove the semicolon.
updated for version 7.3.034 Problem:    Win32: may be loading .dll from the wrong directory. Solution:   Go to the Vim executable directory when opening a library.
updated for version 7.3.033 Problem:    Can't build without FEAT_LOCALMAP. Solution:   Add an #ifdef. (John Marriott)
updated for version 7.3.032 Problem:    maparg() doesn't return the flags, such as <buffer>, <script>,             <silent>.  These are needed to save and restore a mapping. Solution:   Improve maparg(). (also by Christian Brabandt)
updated for version 7.3.031 Problem:    Can't pass the X window ID to another application. Solution:   Add v:windowid. (Christian J. Robinson, Lech Lorens)
Updated runtime files and translations.
updated for version 7.3.030 Problem:    Cannot store Dict and List in viminfo file. Solution:   Add support for this. (Christian Brabandt)
updated for version 7.3.029 Problem:    ":sort n" sorts lines without a number as number zero. (Beeyawned) Solution:   Make lines without a number sort before lines with a number.  Also             fix sorting negative numbers.
updated for version 7.3.028 Problem:    Signs don't show up. (Charles Campbell) Solution:   Don't use negative numbers.  Also assign a number to signs that             have a name of all digits to avoid using a sign number twice.
updated for version 7.3.027 Problem:    Opening a file on a network share is very slow. Solution:   When fixing file name case append "\*" to directory, server and             network share names. (David Anderson, John Beckett)
updated for version 7.3.026 Problem:    CTRL-] in a help file doesn't always work. (Tony Mechelynck) Solution:   Don't escape special characters. (Carlo Teubner)
updated for version 7.3.025 Problem:    ":mksession" does not square brackets escape file name properly. Solution:   Improve escapging of file names. (partly by Peter Odding)
updated for version 7.3.023 Problem:    External program may hang when it tries to write to the tty. Solution:   Don't close the slave tty until after the child exits. (Nikola             Knezevic)
updated for version 7.3.022 Problem:    When opening a new window the 'spellcapcheck' option is cleared. Solution:   Copy the correct option value. (Christian Brabandt)
updated for version 7.3.021 Problem:    Conflict for defining Boolean in Mac header files. Solution:   Define NO_X11_INCLUDES. (Rainer Muller)
updated for version 7.3.020 Problem:    Cursor position wrong when joining multiple lines and             'formatoptions' contains "a". (Moshe Kamensky) Solution:   Adjust cursor position for skipped indent. (Carlo Teubner)
Runtime file updates.
updated for version 7.3.019 Problem:    ":nbstart" can fail silently. Solution:   Give an error when netbeans is not supported by the GUI. (Xavier             de Gaye)
updated for version 7.3.018 Problem:    Missing argument to windres in MingW makefiles. Solution:   Add the argument that was wrapped in the patch. (Jon Maken)
updated for version 7.3.016 Problem:    Netbeans doesn't work under Athena. Solution:   Support Athena, just like Motif. (Xavier de Gaye)
updated for version 7.3.015 Problem:    Test is using error message that no longer exists. Solution:   Change E106 to E121. (Dominique Pelle)
updated for version 7.3.014 Problem:    Ending a line in a backslash inside an ":append" or ":insert"             command in Ex mode doesn't work properly. (Ray Frush) Solution:   Halve the number of backslashes, only insert a NUL after an odd             number of backslashes.
updated for version 7.3.013 Problem:    Dynamic loading with Ruby doesn't work for 1.9.2. Solution:   Handle rb_str2cstr differently.  Also support dynamic loading on             Unix. (Jon Maken)
updated for version 7.3.012 Problem:    Problems building with MingW. Solution:   Adjust the MingW makefiles. (Jon)
Updated runtime files.
updated for version 7.3.011 Problem:    X11 clipboard doesn't work in Athena/Motif GUI.  First selection             after a shell command doesn't work. Solution:   When using the GUI use XtLastTimestampProcessed() instead of             changing a property.  (partly by Toni Ronkko)             When executing a shell command disown the selection.
updated for version 7.3.010 Problem:    Mac GUI: Missing break statements. Solution:   Add the break statements. (Dominique Pelle)
updated for version 7.3.009 Problem:    Win32: Crash on Windows when using a bad argument for strftime().             (Christian Brabandt) Solution:   Use the bad_param_handler(). (Mike Williams)
updated for version 7.3.008 Problem:    'cursorbind' is kept in places where 'scrollbind' is reset. Solution:   Reset 'cursorbind'.
updated for version 7.3.007 Problem:    Python code defines global "buffer".  Re-implements a grow-array. Solution:   Use a grow-array instead of coding the same functionality.  Handle             out-of-memory situation properly.
Updated runtime files.
updated for version 7.3.006 Problem:    Can't build some multi-byte code with C89. Solution:   Move code to after declarations. (Joachim Schmitz)
updated for version 7.3.005 Problem:    Crash when using undotree(). (Christian Brabandt) Solution:   Increase the list reference count.  Add a test for undotree()             (Lech Lorens)
updated for version 7.3.004 Problem:    Crash when using very long regexp. (Peter Odding) Solution:   Reset reg_toolong. (Carlo Teubner)
Fold Vim 7.2 default branch back to trunk to avoid two heads. (Tony Mechelynck)
updated for version 7.3.003 Problem:    Crash with specific BufWritePost autocmd. (Peter Odding) Solution:   Don't free the quickfix title twice. (Lech Lorens)
updated for version 7.3.002 Problem:    ":find" completion doesn't work when halfway an environment             variable. (Dominique Pelle) Solution:   Only use in-path completion when expanding file names. (Nazri             Ramliy)
updated for version 7.3.002 Problem:    ":find" completion doesn't work when halfway an environment             variable. (Dominique Pelle) Solution:   Only use in-path completion when expanding file names. (Nazri             Ramliy)
Last changes for the 7.3 release!
Make the references to features in the help more consistent. (Sylvain Hitier)
Docs fix for tabpagewinnr(). (Sylvain Hitier)
Two fixes for :find completion and more testing. (Nazri Ramliy)
Do include Mac clipboard code for MacVim.
Runtime file updates.
README and help file updates.
Version 7.3f -> 7.3g
Preparations for 7.3f release.
Cleanup in :find completion code.  Make it work for "./subdir" in 'path'.
Use mkdir() instead of !mkdir in test 73, it's more reliable.
Now really fix using expressions in the command line (hopefully).
Update message for :python/:py3 usage with approximate translations.
Add a configure check for RTLD_GLOBAL. (James Vega, Roland Puntaier)
Conceal feature caused the 'cursorline' highlighting to stop early.
Runtime file updates.
More fixes for :find completion. (mostly by Nazri Ramliy)
Update to Perl runtime files. (Andy Lester)
Updated Italian menus. (Vlad Sandrini)
Updates for :TOhtml. (Benjamin Fritz)
Avoid warnings from the clang compiler. (Dominique Pelle)
Updated Finnish translations. (Flammie Pirinen)
Improvements for :find completion.
Include wchar.h in charset.c for towupper().
Runtime file updates.
Updated translations.  Added Portuguese tutor.
Improved pt_PT spell file generation.
Updated message translations.
Make :find completion work better with the DJGPP build. (Nazri Ramliy)
Runtime file updates.
When building with both Python 2 and Python 3 don't use RTLD_GLOBAL, so that both may work.
Version 7.3e -> 7.3f.
Runtime file updates. (Tim Pope)
Prepare for 7.3e release.
Update version info in help files.
Update help about wildcards in 'tags' option.
Remove unused code.
NL spelling: remove REP items to avoid lots of suggestions with dots.
Also support Doxygen in C# files. (Andreas J. Beblik)
Improve positioning of combining characters in GTK.
Make test 11 pass when there is no gzip program. (John Beckett)
Avoid that test 73 ovewrites viminfo. (James Vega)
Change readfile() to ignore byte order marks, unless in binary mode.
Use different Czech keymap (Stepan Nemec)
Updated translations. (Dominique Pelle)
Updates for :TOhtml. (Ben Fritz)
Update for jsp syntax file.
Some messages were missing when updating translations. (Dominique Pelle)
Set 'visualbell' in test 72 to avoid a beep.
Update pt_BR translations.
Update README files.  Remove references to extra and lang archives.
Updated Dutch spell files to use latest OpenOffic.org version.
Update version number in gvim.exe manifest. (Michael Wookey)
Call gui_mch_update() before triggering GuiEnter autocmd. (Ron Aaron)
Updated syntax files.
Improve handling of user settings in :TOhtml.  Default to generating CSS. (Benjamin Fritz)
Updated syntax files. (Charles Campbell)
Disallow setting 'ambiwidth' to "double" when 'listchars' or 'fillchars' contains a character that would become double width.
After entering a crypt key would need to hit return to continue. When silencing a message it would still clear a kept message.
7.3d -> 7.3e.
Make test 73 a bit more portable.
Preparations for 7.3d release.
Make :find completion consistent between Unix and MS-Windows.  Add a test. (Nazri Ramliy)
Add translations in diff syntax. (Jakson A. Aquino)
Small changes to the test files. (John Beckett)
Set 'wrapscan' when checking the .po files. (Mike Williams)
When undoing a reload, move the cursor to the first changed line.
Rename quickfix plugin to match the filetype set in the code.
Runtime file updates.
Recognize .f03 and .f08 as Fortran files. (Ajit Thakkar)
Windows uninstaller: Instead of calling RegDeleteKeyEx() directly load it dynamically from the .dll.  Should work everywhere.
Take OLE registration back to 32 bit registry, the unregister wasn't working for the 64 registry.
Syntax file updates. (Charles Campbell)
Updated version of gettext for use with MVC. (Mike Williams)
Improvements for :find completion. (Nazri Ramliy)
Put quotes around the gvim.exe path for the "Open with" menu entry.
Workaround for missing RegDeleteKeyEx() method.
Update version.h for 7.3c -> 7.3d.
Add Datascript syntax file. (Dominique Pelle)
Version 7.3c -> 7.3d
Update todo file.
Define the WOW64 key when needed.
Update utf-8 version of tutor.
Minor updates for the 7.3c release.
Remove unused variable and STRLEN(). (Dominique Pelle)
Runtime file updates.
Avoid illegal memory access in spell suggestion. (Dominique Pelle)
Avoid that running tests changes viminfo.
No need to redraw cursorline when 'modifiable' is changed. (Dominique Pelle)
Add the WOW64 flag back to OLE registration. (untested)
Move many more common Python items to if_py_both.c.
Support syntax and filetype completion for user commands. (Christian Brabandt)
Possibly make OLE work on Windows 64 bit. (untested)
More updated runtime files.
Improvements for VMS. (Zoltan Arpadffy)
Correct comments in testdir makefiles. (John Beckett)
Runtime file updates.
Dectect Perl6.
Few more fixes for VMS.
Updated runtime files.  Add logcheck filetype plugin. (James Vega)
Add completion for ":ownsyntax" and improve completion for ":filetype". (Dominique Pelle)
Updated runtime files.  :TOhtml improvements by Benjamin Fritz.
Update for Lua interface. (Luis Carvalho)
Remove Mupad indent and ftplugin files, they are not useful.
Improvements for ":find" completion. (Nazri Ramliy)
Changes for VMS.  Mostly by Zoltan Arpadffy.
More runtime file updates.
More accented characters in tex.vim syntax. (Charles Campbell)
Updated runtime files.
Updated Italian messages. (Vlad Sandrini)
Minor runtime file updates.
Updated runtime files.  New netrw plugin version.
Update TeX syntax file.
Updated runtime files.
7.3b -> 7.3c
Add "q" item for 'statusline'.  Add w:quickfix_title. (Lech Lorens)
Add support for horizontal scroll wheel. (Bjorn Winckler)
Better fix for memory access in recovery. (Dominique Pelle)
Add completion for :setfiletype. (Dominique Pelle)
Add completion for :lmap and :lunmap.
Include old Python changes in Python 3 interface.
Use the SONAME-versioned liblua, if it exists. (James Vega)
Add the synconcealed() function and use it for :TOhtml. (Benjamin Fritz)
Let 'v' flag in 'concealcursor' apply to all lines in the Visual area.
Move some common code from if_python.c and if_python3.c to if_py_both.h.
More runtime file updates.
Add 'window' to the options window.
Further improvements for :options.  (Dominique Pelle)
Add the 'undoreload' option to be able to undo a file reload.
Give each syntax item a sequence number, so that we know when it starts and can show the 'cchar' for each of them.
Document extra argument for Python append().
Remove -arch flag from build flags for Perl. (Bjorn Wickler)
Find python3 also in lib64 directory. (Ben Boeckel)
Better text for 'concealcursor' in :options window.
Temporary solution for crashing when using both :py and :py3: disallow both in one session.
Specify library to load for Python more precisely. (James Vega)
Add the 'c' flag to 'concealcursor'.
Another conceal fix: cursor in wrong column when 'number' set.
Don't conceal text in lines inside the Visual area.
Window split didn't copy the value of 'conceallevel'.
Add the 'concealcursor' option to decide when the cursor line is to be concealed or not. Rename 'conc' to 'cole' as the short name for 'conceallevel'.
Update Fortran indent and syntax file. (Ajit Thakkar)
For conceal mode: when two different syntax items follow each other, show the replacement character for both.
Make it possible to load Lua dynamically on Unix. (Luis Carvalho)
Update French and Esperanto translations. (Dominique Pelle)
Make it possible to load Perl dynamically on Unix. (James Vega)
Small docs fixes.
Update timestamps for recently changed help files.
Avoid error when exiting in diff mode with EXITFREE defined.
When resetting 'mousehide' show the mouse pointer right away.
Change 'cryptmethod' from a number to a string option.  Make it global-local.
Add a few items to the syntax menu. Split up long submenus.
Updated sh and vim syntax files. (Charles Campbell)
Updated Ukranian translations. (Anatoli Sakhnik)
Updated Polish translations. (Mikolaj Machowski)
Rename some "python3" symbols to "py3", as the command name. Documentation updates.
Never hide text for conceal in cursor line.  Do hide when there is highlighting.
Rename w_p_conceal to w_p_conc for consistency.
Also make ALT modifier work for mouse wheel. (Benjamin Haskell)
Vim 7.3a -> 7.3b.
Last few changes for the 7.3a BETA release.
Minor runtime file updates.
Make automatic prototype generation work with more interfaces.
Added strdisplaywidth() function.
Added strwidth() and strchars() functions.
Better conceal in help. (partly by Dominique Pelle)
Make CTRL modifier work for mouse wheel. (Benjamin Haskell)
Improved :TOhtml. (Benjamin Fritz)
Build problem when using all interfaces except Lua.
Make 'cursorcolumn' work together with the conceal feature.
Make it easier to build with Lua.  Remove compiler warnings.
Whitespace cleanup.
Added support for Python 3. (Roland Puntaier)
Add the 'L' item to 'cinoptions'. (Manuel Konig)
Mac: Support disabling antialias. (LC Mi)
Make it possible to drag a tab page label to another position. (Paul B. Mahol)
Better implementation of creating the Color Scheme menu. (Juergen Kraemer)
In Visual mode with 'showcmd' display the number of bytes and characters.
Avoid compiler warnings for size_t to int conversions.
Added Lua interfae. (Luis Carvalho)
Allow synIDattr() getting GUI attributes when build without GUI. (Matt Wozniski)
Disallow setting 'enc' in a modeline. (Patrick Texier)
Remove obsolete Mac code.
Added 'colorcolumn' option.  Partly by Gregor Uhlenheuer.
Missing piece for Mac console clipboard support. (Bjorn Winckler)
Support completion for ":find". (Nazri Ramliy) Cleanup white space.
Add clipboard support in Mac console. (Bjorn Winckler)
Minor runtime file updates.
updated for version 7.2.446 Problem:    Crash in GUI when closing the last window in a tabpage. (ryo7000) Solution:   Remove the tabpage from the list before freeing the window.
updated for version 7.2.446 Problem:    Crash in GUI when closing the last window in a tabpage. (ryo7000) Solution:   Remove the tabpage from the list before freeing the window.
When the buffer is in diff mode, have :TOhtml create HTML to show the diff side-by-side.  (Christian Brabandt)
Filter out -pthread for cproto.
Make CTRL-L in command line mode respect 'ignorecase' and 'smartcase'. (Martin Toft)
Avoid use of the GTK mail_loop() so that the GtkFileChooser can be used. (James Vega)
Add back SAL lines for Swedish spell file.
When 'formatexpr' evaluates to non-zero fall back to internal formatting, also for "gq". (James Vega)
Improve Javascript indenting.  Add "J" flag to 'cino'. (Hari Kumar G)
Support :browse for commands that use an error file argument. (Lech Lorens)
Support wide file names in gvimext. (Szabolcs Horvat)
Make joining a range of lines much faster. (Milan Vancura)
Update spell files for Ubuntu locale names.
Improve test for joining lines. (Milan Vancura)
Make synstack() work on the character just after the end of the line.
Apply patch 7.2.445.
updated for version 7.2.445 Problem:    Crash when using undo/redo and a FileChangedRO autocmd event that             reloads the buffer. (Dominique Pelle) Solution:   Do not allow autocommands while performing and undo or redo.
Make the dos installer work with more compilers.
Adjust MS-Windows installer so that it also works for 64 bit systems. (George Reilly)
Change SKIP_GTK to SKIP_GTK2 in configure.
Better init for match highlighting when using conceal feature.
Mainly documentation updates.
Make updating text for conceal mode simpler.  A few compiler warning fixes.
Added ":earlier 1f" and ":later 1f".
Add file save counter to undo information.  Add undotree() function.
Remove wrong #ifdef added by previous change.
Various small fixes from Dominique Pelle.
Change remaining HAVE_GTK2 to FEAT_GUI_GTK.
Remove the old and not well supported GTK 1 code. (James Vega)
Couple of small fixes for conceal feature. (Dominique Pelle)
Command line completion for :ownsyntax. (Dominique Pelle)
Crypt the swapfile.
Added salt to blowfish encryption.
updated for version 7.2.444 Problem:    Can't build with GTK 1, gtk_selection_clear_targets() is not             available. (Patrick Texier) Solution:   Don't change the targets for GTK 1, set them once.
Update help files.
updated for version 7.2.443 Problem:    Using taglist() on a tag file with duplicate fields generates an             internal error. (Peter Odding) Solution:   Check for duplicate field names.
updated for version 7.2.443 Problem:    Using taglist() on a tag file with duplicate fields generates an             internal error. (Peter Odding) Solution:   Check for duplicate field names.
Minor typo and docs update.
Avoid compiler warnings on Mac 10.6.
Avoid compiler warnings.
One more fix for conceal patch.
Add the conceal patch from Vince Negri.
Use full path in undofile().  Updated docs.
updated for version 7.2.442 Problem:    Copy/paste with OpenOffice doesn't work. Solution:   Do not offer the HTML target when it is not supported. (James             Vega)
updated for version 7.2.442 Problem:    Copy/paste with OpenOffice doesn't work. Solution:   Do not offer the HTML target when it is not supported. (James             Vega)
Add patch to improve support of z/OS (OS/390). (Ralf Schandl)
Move text from various.txt to a new helphelp.txt help file.
Optimize the blowfish crypt/decrypt code a bit more.
Made crypt/decrypt faster.
Correct use of long instead of off_t for file size. (James Vega)
Add test for gettabvar() and settabvar().
Crypt the text in the undo file if the file itself is crypted.
Made reading/writing undo info a bit more robust.
Add a few #ifdefs to exclude functions that are not used. (Domnique Pelle)
Added the undofile() function.  Updated runtime files.
Do not write an undo file if there is nothing to undo.
updated for version 7.2.441 Problem:    When using ":earlier" undo information may be wrong. Solution:   When changing alternate branches also adjust b_u_oldhead.
updated for version 7.2.441 Problem:    When using ":earlier" undo information may be wrong. Solution:   When changing alternate branches also adjust b_u_oldhead.
A bit of cleanup and simplification for undofile.
A few more fixes for undo file.  Split test in two parts so that it doesn't fail with tiny features.
Various improvements to undo file code to make it more robust.
Remove old and unused method to allocate memory for undo.
updated for version 7.2.440 Problem:    Calling a function through a funcref, where the function deletes             the funcref, leads to an invalid memory access. Solution:   Make a copy of the function name. (Lech Lorens)
updated for version 7.2.440 Problem:    Calling a function through a funcref, where the function deletes             the funcref, leads to an invalid memory access. Solution:   Make a copy of the function name. (Lech Lorens)
updated for version 7.2.439 Problem:    Invalid memory access when doing thesaurus completion and             'infercase' is set. Solution:   Use the minimal length of completed word and replacement.             (Dominique Pelle)
updated for version 7.2.439 Problem:    Invalid memory access when doing thesaurus completion and             'infercase' is set. Solution:   Use the minimal length of completed word and replacement.             (Dominique Pelle)
Don't execute some autocommands when v:dying is 2 or more.
Runtime file updates.
More strict checks for the undo file.
updated for version 7.2.438 Problem:    "vim -r" crashes. Solution:   Don't use NULL pointer argument.
updated for version 7.2.438 Problem:    "vim -r" crashes. Solution:   Don't use NULL pointer argument.
Found a way to make the MS-Windows installer wait for the uninstaller to finish, no need for the user to press Enter.
And another small fix for persistent undo.
Improve the MS-Windows installer.
Tiny change for Italian man page.
Included patch for persistent undo.  Lots of changes and added test.
Some versions of Ruby redefine rb_str_new2 to rb_str_new_cstr. Attempt at a fix.
Add :nbstart and :nbclose.
Included the patch to support netbeans in a terminal.
Add the settabvar() and gettabvar() functions. Various runtime file updates.
Add extra floating point functions.
"g8" doesn't work properly on a NUL.
A few more changes for encryption.  Add test that encrypted file can be read.
updated for version 7.2.437 Problem:    When "\\\n" appears in the expression result the \n doesn't result             in a line break. (Andy Wokula) Solution:   Also replace a \n after a backslash into \r.
updated for version 7.2.437 Problem:    When "\\\n" appears in the expression result the \n doesn't result             in a line break. (Andy Wokula) Solution:   Also replace a \n after a backslash into \r.
Updated runtime files.
Other solution for GTK not changing the locale.
Various smaller changes.  Updated proto files.  Updated dependencies.
Use UINT32_T in the code, define it to uint32_t or unsigned int. Better autoconf check for uint32_t.
Updated a few runtime files.
One more fix for defining uint32_t.
Change wording in link.sh: "remove" -> "omit"
Undefine uint32_t when building if_perl.xs to fix the build.
Add blowfish and sha256 source files to more Makefiles.
Small update to help files.
Avoid warnings for unused arguments when compiling with Gnome.
Undo undesired changes in src/Makefile.
Minor updates to blowfish encryption.
Add the blowfish encryption patch from Mohsin Ahmed.  Needs more work.
Add 'relativenumber' patch from Markus Heidelberg.
Remove outdated line from top Makefile.
Move items around in the todo list.
updated for version 7.2.436 Problem:    Reproducible crash in syntax HL. (George Reilly, Dominique Pelle) Solution:   Make sst_stacksize an int instead of short. (Dominique Pelle)
updated for version 7.2.436 Problem:    Reproducible crash in syntax HL. (George Reilly, Dominique Pelle) Solution:   Make sst_stacksize an int instead of short. (Dominique Pelle)
updated for version 7.2.435 Problem:    Crash when using bad_char_idx uninitialized. (Patrick Texier) Solution:   Don't use bad_char_idx, reproduce the ++bad argument from bad_char.
updated for version 7.2.435 Problem:    Crash when using bad_char_idx uninitialized. (Patrick Texier) Solution:   Don't use bad_char_idx, reproduce the ++bad argument from bad_char.
updated for version 7.2.434 Problem:    Compilation fails without the multi-lang feature. Solution:   Add #ifdefs. (Johm Marriott)
Correct Japanese menus to avoid error while loading them after 7.2.432.
After recovery check if the text changed.  If it did mark the buffer as modified.
Get rid of the "extra" and "lang" archives.
Switched from autoconf 2.63 to 2.65.
Small fix for compiler warning in Netbeans.
First step in the Vim 7.3 branch.  Changed version numbers.
Updated runtime files.
updated for version 7.2.432 Problem:    When menus are translated they can only be found by the translated             name.  That makes ":emenu" difficult to use. Solution:   Store the untranslated name and use it for completion and :emenu.             (Edward L. Fox / Liang Peng / Bezetek James)
updated for version 7.2.431 Problem:    ":amenu" moves the cursor when in Insert mode. Solution:   Use CTRL-\ CTRL-O instead of CTRL-O. (Christian Brabandt)
updated for version 7.2.430 Problem:    The ++bad argument is handled wrong, resulting in an invalid             memory access. Solution:   Use the bad_char field only for the replacement character, add             bad_char_idx to store the position. (Dominique Pelle)
updated for version 7.2.429 Problem:    A file that exists but access is denied may result in a "new file"             message.  E.g. when its directory is unreadable. Solution:   Specifically check for ENOENT to decide a file doesn't exist.             (partly by James Vega)
updated for version 7.2.428 Problem:    Using setqflist([]) to clear the error list doesn't work properly. Solution:   Set qf_nonevalid to TRUE when appropriate. (Christian Brabandt)
updated for version 7.2.427 Problem:    The swapfile is created using the destination of a symlink, but             recovery doesn't follow symlinks. Solution:   When recovering, resolve symlinks. (James Vega)
updated for version 7.2.426 Problem:    Commas in 'langmap' are not always handled correctly. Solution:   Require commas to be backslash escaped. (James Vega)
updated for version 7.2.425 Problem:    Some compilers complain about fourth EX() argument. Solution:   Add cast to long_u.
updated for version 7.2.424 Problem:    ":colorscheme" without an argument doesn't do anything. Solution:   Make it echo the current color scheme name.  (partly by Christian             Brabandt)
updated for version 7.2.423 Problem:    Crash when assigning s: to variable. (Yukihiro Nakadaira) Solution:   Make ga_scripts contain pointer to scriptvar_T instead of             scriptvar_T itself. (Dominique Pelle)
updated for version 7.2.422 Problem:    May get E763 when using spell dictionaries. Solution:   Avoid utf-8 case folded character to be truncated to 8 bits and             differ from latin1. (Dominique Pelle)
updated for version 7.2.421 Problem:    Folds are sometimes not updated properly and there is no way to             force an update. Solution:   Make "zx" and "zX" recompute folds (suggested by Christian             Brabandt)
updated for version 7.2.420 Problem:    ":argedit" does not accept "++enc=utf8" as documented. (Dominique             Pelle) Solution:   Add the ARGOPT flag to ":argedit".
updated for version 7.2.419 Problem:    Memory leak in Motif when clicking on "Search Vim Help". Solution:   Free string returned by XmTextGetString(). (Dominique Pelle)
updated for version 7.2.418 Problem:    Vim tries to set the background or foreground color in a terminal             to -1.  (Graywh)  Happens with ":hi Normal ctermbg=NONE". Solution:   When resetting the foreground or background color don't set the             color, let the clear screen code do that.
updated for version 7.2.417 Problem:    When 'shell' has an argument with a slash then 'shellpipe' is not             set properly. (Britton Kerin) Solution:   Assume there are no spaces in the path, arguments follow.
updated for version 7.2.416 Problem:    Logtalk.dict is not installed. Solution:   Add it to the install target. (Markus Heidelberg)
updated for version 7.2.415 Problem:    Win32: Can't open a remote file when starting Vim. Solution:   Don't invoke cygwin_conv_path() for URLs. (Tomoya Adachi)
updated for version 7.2.414 Problem:    CTRK-K <space> <space> does not produce 0xa0 as expected. (Tony             Mechelynck) Solution:   Remove the Unicode range 0xe000 - 0xefff from digraphs, these are             not valid characters.
updated for version 7.2.413 Problem:    Large file support is incorrect. Solution:   Add AC_SYS_LARGEFILE to configure. (James Vega)
updated for version 7.2.412 Problem:    [ or ] followed by mouse click doesn't work. Solution:   Reverse check for key being a mouse event. (Dominique Pelle)
updated for version 7.2.411 Problem:    When parsing 'cino' a comma isn't skipped properly. Solution:   Skip the comma. (Lech Lorens)
updated for version 7.2.410 Problem:    Highlighting directories for completion doesn't work properly. Solution:   Don't halve backslashes when not needed, expaned "~/".             (Dominique Pelle)
updated for version 7.2.409 Problem:    Summary of number of substitutes is incorrect for ":folddo". (Jean             Johner) Solution:   Reset sub_nsubs and sub_nlines in global_exe().
updated for version 7.2.408 Problem:    With ":g/the/s/foo/bar/" the '[ and '] marks can be set to a line             that was not changed. Solution:   Only set '[ and '] marks when a substitution was done.
updated for version 7.2.407 Problem:    When using an expression in ":s" backslashes in the result are             dropped. (Sergey Goldgaber, Christian Brabandt) Solution:   Double backslashes.
updated for version 7.2.406 Problem:    Patch 7.2.119 introduces uninit mem read. (Dominique Pelle) Solution:   Only used ScreeenLinesC when ScreeenLinesUC is not zero. (Yukihiro             Nakadaira)  Also clear ScreeenLinesC when allocating.
updated for version 7.2.405 Problem:    When built with small features the matching text is not             highlighted for ":s/pat/repl/c". Solution:   Remove the #ifdef for IncSearch. (James Vega)
updated for version 7.2.404 Problem:    Pointers for composing characters are not properly initialized. Solution:   Compute the size of the pointer, not what it points to. (Yukihiro             Nakadaira)
updated for version 7.2.403 Problem:    Compiler warning for pointer type. (Tony Mechelynck) Solution:   Move type cast to the right place.
Updated runtime and language files.
updated for version 7.2.402 Problem:    This gives a #705 error: let X = function('haslocaldir')             let X = function('getcwd') Solution:   Don't give E705 when the name is found in the hashtab. (Sergey             Khorev)
updated for version 7.2.401 Problem:    ":e dir<Tab>" with 'wildmode' set to "list" doesn't highlight             directory names with a space. (Alexandre Provencio) Solution:   Remove the backslash before checking if the name is a directory.             (Dominique Pelle)
updated for version 7.2.400 Problem:    Dynamic Ruby is not initialised properly for version 1.9.1.             Ruby cannot create strings from NULL. Solution:   Cleanup #ifdefs.  Handle NULL like an empty string.  Add             ruby_init_stack. (Sergey Khorev)
updated for version 7.2.399 Problem:    Cannot compile on MingW Solution:   Move ifneq to separate line. (Vlad Sandrini, Dominique Pelle)
updated for version 7.2.398 Problem:    When moving windows the cursor ends up in the wrong line. Solution:   Set the window width and height properly. (Lech Lorens)
updated for version 7.2.397 Problem:    Redundant check for w_lines_valid. Solution:   Remove the if.  (Lech Lorens)
updated for version 7.2.396 Problem:    Get E38 errors. (Dasn) Solution:   Set cursor to line 1 instead of 0. (Dominique Pelle)
updated for version 7.2.395 Problem:    In help CTRL=] on g?g? escapes the ?, causing it to fail. (Tony             Mechelynck) Solution:   Don't escape ? for a help command. (Sergey Khorev)
updated for version 7.2.394 Problem:    .xz files are not supported. Solution:   Recognize .xz files so that they can be edited.
updated for version 7.2.393 Problem:    Mac: Can't build with different Xcode developer tools directory. Solution:   make "Developer" directory name configurable. (Rainer Muller)
updated for version 7.2.392 Problem:    Netbeans hangs reading from a socket at the maximum block size. Solution:   Use select() or poll(). (Xavier de Gaye)
updated for version 7.2.390 Problem:    In some situations the popup menu can be displayed wrong. Solution:   Remove the popup menu if the cursor moved. (Lech Lorens)
updated for version 7.2.389 Problem:    synIDattr() cannot return the font. Solution:   Support the "font" argument. (Christian Brabandt)
updated for version 7.2.388 Problem:    Ruby with MingW still doesn't build all versions. Solution:   Different approach to build file. (Sergey Khorev)
updated for version 7.2.387 Problem:    Ruby with MingW still doesn't build all versions. Solution:   More #ifdefs for the  Ruby code. (Sergey Khorev)
updated for version 7.2.386 Problem:    Focus hack for KDE 3.1 causes problems for other window managers. Solution:   Remove the hack. (forwarded by Joel Bradshaw)
updated for version 7.2.385 Problem:    When in the command line window dragging status line only works             for last-but-one window. (Jean Johner) Solution:   Remove the code that disallows this.
updated for version 7.2.384 Problem:    Vim doesn't build properly with MSVC 2010. Solution:   Add the nmake version to the build file. (George Reilly)
updated for version 7.2.383 Problem:    Vim doesn't build cleanly with MSVC 2010. Solution:   Change a few types. (George Reilly)
updated for version 7.2.382 Problem:    Accessing freed memory when closing the cmdline window when             'bufhide' is set to "wipe". Solution:   Check if the buffer still exists before invoking close_buffer()             (Dominique Pelle)
Updated runtime an documentation files.
updated for version 7.2.381 Problem:    No completion for :behave. Solution:   Add :behave completion.  Minor related fixes. (Dominique Pelle)
updated for version 7.2.380 Problem:    Perl interface builds with 5.10.1 but not with 5.10.0. Solution:   Change the #ifdefs. (Sergey Khorev)
updated for version 7.2.379 Problem:    'eventignore' is set to an invalid value inside ":doau". (Antony             Scriven) Solution:   Don't include the leading comma when the option was empty.
updated for version 7.2.378 Problem:    C function declaration indented too much. (Rui) Solution:   Don't see a line containing { or } as a type. (Matt Wozniski)
updated for version 7.2.377 Problem:    Misplaced assignment.  Duplicate build line for gvimext.dll. Solution:   Move setting CROSS_COMPILE to before ifneq.  Remove the wrong             build line. (Markus Heidelberg)
updated for version 7.2.376 Problem:    ml_get error when using SiSU syntax. (Nathan Thomas) Solution:   If the match ends below the last line move it to the end of the             last line.
updated for version 7.2.375 Problem:    ml_get errors when using ":bprevious" in a BufEnter autocmd.             (Dominique Pelle) Solution:   Clear w_valid when entering another buffer.
updated for version 7.2.374 Problem:    Ruby eval() doesn't understand Vim types. Solution:   Add the vim_to_ruby() function.  (George Gensure)
updated for version 7.2.373 Problem:    Gcc 4.5 adds more error messages. (Chris Indy) Solution:   Update default 'errorformat'.
updated for version 7.2.372 Problem:    Cross-compiling GvimExt and xxd doesn't work. Solution:   Change the build files. (Markus Heidelberg)
updated for version 7.2.371 Problem:    Build problems on Tandem NonStop. Solution:   A few changes to #ifdefs (Joachim Schmitz)
updated for version 7.2.370 Problem:    A redraw may cause folds to be closed. Solution:   Revert part of the previous patch.  Add a test. (Lech Lorens)
updated for version 7.2.369 Problem:    Error message is not easy to understand. Solution:   Add quotes. (SungHyun Nam)
updated for version 7.2.368 Problem:    Ruby interface: Appending line doesn't work. (Michael Henry) Solution:   Reverse check for NULL line. (James Vega)
updated for version 7.2.367 Problem:    "xxd -r -p" doesn't work as documented. Solution:   Skip white space. (James Vega)
updated for version 7.2.366 Problem:    CTRL-B doesn't go back to the first line of the buffer. Solution:   Avoid an overflow when adding MAXCOL.
updated for version 7.2.365 Problem:    MS-Windows with MingW: "File->Save As" does not work. (John             Marriott) Solution:   Correctly fill in structure size. (Andy Kittner)
updated for version 7.2.364 Problem:    Can't build gvimext.dll on Win 7 x64 using MinGW (John Marriott) Solution:   Check if _MSC_VER is defined. (Andy Kittner)
updated for version 7.2.363 Problem:    Can't dynamically load Perl 5.10. Solution:   Add the function Perl_croak_xs_usage. (Sergey Khorev)
updated for version 7.2.362 Problem:    Win64: Vim doesn't work when cross-compiled with MingW libraries. Solution:   Instead of handling WM_NCCREATE, create wide text area window             class if the parent window iw side. (Sergey Khorev)
updated for version 7.2.361 Problem:    Ruby 1.9 is not supported. Solution:   Add Ruby 1.9 support. (Msaki Suketa)
updated for version 7.2.360 Problem:    Ruby on MS-Windows: can't use sockets. Solution:   Call NtInitialize() during initialization. (Ariya Mizutani)
updated for version 7.2.359 Problem:    Crash when using the Netbeans join command. Solution:   Make sure the ml_flush_line() function is not used recursively.             (Xavier de Gaye)
updated for version 7.2.358 Problem:    Compiler warnings on VMS. (Zoltan Arpadffy) Solution:   Pass array itself instead its address.  Return a value.
updated for version 7.2.357 Problem:    When changing 'fileformat' from/to "mac" and there is a CR in the             text the display is wrong. Solution:   Redraw the text when 'fileformat' is changed. (Ben Schmidt)
Updated runtime files.
updated for version 7.2.356 Problem:    When 'foldmethod' is changed not all folds are closed as expected. Solution:   In foldUpdate() correct the start position and reset fd_flags when             w_foldinvalid is set. (Lech Lorens)
updated for version 7.2.355 Problem:    Computing the cursor column in validate_cursor_col() is wrong when             line numbers are used and 'n' is not in 'cpoptions', causing the             popup menu to be positioned wrong. Solution:   Correctly use the offset. (partly by Dominique Pelle)
updated for version 7.2.354 Problem:    Japanese single-width double-byte characters not handled correctly. Solution:   Put 0x8e in ScreenLines[] and the second byte in ScreenLines2[].             (partly by Kikuchan)
updated for version 7.2.353 Problem:    No command line completion for ":profile". Solution:   Complete the subcommand and file name.
updated for version 7.2.352 Problem:    Win64: Vim doesn't work when cross-compiled with MingW libraries. Solution:   Always return TRUE for the WM_NCCREATE message. (Andy Kittner)
updated for version 7.2.351 Problem:    Can't build with some compilers. Solution:   Move the #ifdef outside of a macro.  Cleanup the code.
updated for version 7.2.350 Problem:    Win32: When changing font the window may jump from the secondary             to the primary screen. (Michael Wookey) Solution:   When the screen position was negative don't correct it to zero.
updated for version 7.2.349 Problem:    CTRL-W gf doesn't put the new tab in the same place as "tab split"             and "gf". (Tony Mechelynck) Solution:   Store the tab number in cmdmod.tab.
updated for version 7.2.348 Problem:    Unicode double-width characters are not up-to date. Solution:   Produce the double-width table like the others.
updated for version 7.2.347 Problem:    Crash when executing <expr> mapping redefines that same mapping. Solution:   Save the values used before evaluating the expression.
updated for version 7.2.346 Problem:    Repeating a command with @: causes a mapping to be applied twice. Solution:   Do not remap characters inserted in the typeahead buffer. (Kana             Natsuno)
updated for version 7.2.345 Problem:    Tab line is not updated when the value of 'bt' is changed. Solution:   Call redraw_titles(). (Lech Lorens)
Add more pathdef.c to .hgignore.
updated for version 7.2.344 Problem:    Can't compile on some systems Solution:   Move the #ifdef outside of the mch_open macro. (Patrick Texier)
updated for version 7.2.343 Problem:    Can't compile on Win32. Solution:   Insert the missing bar.
updated for version 7.2.342 Problem:    Popup menu displayed wrong in 'rightleft' mode when there are             multi-byte characters. Solution:   Adjust the column computations. (Dominique Pelle)
updated for version 7.2.341 Problem:    Popup menu wraps to next line when double-wide character doesn't             fit. (Jiang Ma) Solution:   Display a ">" instead. (Dominique Pelle)
updated for version 7.2.340 Problem:    Gcc warning for condition that can never be true. (James Vega) Solution:   Use start_lvl instead flp->lvl.
updated for version 7.2.339 Problem:    Part of --startuptime patch is missing. Solution:   Add check for time_fd.
updated for version 7.2.338 Problem:    Part of FD_CLOEXEC change is missing. Solution:   Include source file skipped because of typo.
updated for version 7.2.337 Problem:    The :compiler command doesn't function properly when invoked in a             function. Solution:   Add "g:" before "current_compiler". (Yukihiro Nakadaira)
updated for version 7.2.336 Problem:    MzScheme interface can't evaluate an expression. Solution:   Add mzeval(). (Sergey Khorev)
updated for version 7.2.335 Problem:    The CTRL-] command escapes too many characters. Solution:   Use a different list of characters to be escaped. (Sergey Khorev)
updated for version 7.2.334 Problem:    Postponing keys in Netbeans interface does not work properly. Solution:   Store the key string instead of the number.  Avoid an infinite             loop. (Mostly by Xavier de Gaye)
updated for version 7.2.333 Problem:    Warnings from static code analysis. Solution:   Small changes to various lines. (Dominique Pelle)
updated for version 7.2.332 Problem:    Crash when spell correcting triggers an autocommand that reloads             the buffer. Solution:   Make a copy of the line to be modified. (Dominique Pelle)
updated for version 7.2.331 Problem:    Can't interrupt "echo list" for a very long list. Solution:   Call line_breakcheck() in list_join().
Add a few missing runtime files.
Updated runtime files.
Updated runtime files.
updated for version 7.2.330 Problem:    Tables for Unicode case operators are outdated. Solution:   Add a Vim script for generating the tables.  Include tables for             Unicode 5.2.
updated for version 7.2.329 Problem:    "g_" doesn't position cursor correctly when in Visual mode and             'selection' is "exclusive". (Ben Fritz) Solution:   Call adjust_for_sel().
updated for version 7.2.328 Problem:    has("win64") does not return 1 on 64 bit MS-Windows version. Solution:   Also check for _WIN64 besides WIN64.
Add an .hgignore file (suggested by Mike Williams).
Remove config.h from the distribution, let's see if that works.
Minor text file updates.
Update runtime files.
Update documentation files.
Update message translations.
updated for version 7.2.327
updated for version 7.2.326
updated for version 7.2-325
updated for version 7.2-324
updated for version 7.2-323
updated for version 7.2-322
updated for version 7.2-321
updated for version 7.2-320
updated for version 7.2-319
updated for version 7.2-318
updated for version 7.2-317
updated for version 7.2-316
updated for version 7.2-315
updated for version 7.2-314
updated for version 7.2-313
updated for version 7.2-312
updated for version 7.2-311
updated for version 7.2-310
updated for version 7.2-309
updated for version 7.2-308
updated for version 7.2-307
updated for version 7.2-306
updated for version 7.2-305
updated for version 7.2-304
updated for version 7.2-303
updated for version 7.2-302
updated for version 7.2-301
updated for version 7.2-300
updated for version 7.2-299
updated for version 7.2-298
updated for version 7.2-297
updated for version 7.2-296
updated for version 7.2-295
updated for version 7.2-294
updated for version 7.2-293
updated for version 7.2-292
updated for version 7.2-291
updated for version 7.2-290
updated for version 7.2-289
updated for version 7.2-288
updated for version 7.2-287
updated for version 7.2-286
updated for version 7.2-285
updated for version 7.2-284
updated for version 7.2-283
updated for version 7.2-282
updated for version 7.2-281
updated for version 7.2-280
updated for version 7.2-279
updated for version 7.2-278
updated for version 7.2-277
updated for version 7.2-276
updated for version 7.2-275
updated for version 7.2-274
updated for version 7.2-273
updated for version 7.2-272
updated for version 7.2-271
updated for version 7.2-270
updated for version 7.2-269
updated for version 7.2-268
updated for version 7.2-267
updated for version 7.2-266
updated for version 7.2-265
updated for version 7.2-264
updated for version 7.2-263
updated for version 7.2-262
updated for version 7.2-261
updated for version 7.2-260
updated for version 7.2-259
updated for version 7.2-258
updated for version 7.2-257
updated for version 7.2-256
updated for version 7.2-255
updated for version 7.2-254
updated for version 7.2-253
updated for version 7.2-252
updated for version 7.2-251
updated for version 7.2-250
updated for version 7.2-249
updated for version 7.2-248
updated for version 7.2-247
updated for version 7.2-246
updated for version 7.2-245
updated for version 7.2-244
updated for version 7.2-243
updated for version 7.2-242
updated for version 7.2-241
updated for version 7.2-240
updated for version 7.2-239
updated for version 7.2-238
updated for version 7.2-237
updated for version 7.2-236
updated for version 7.2-235
updated for version 7.2-234
updated for version 7.2-233
updated for version 7.2-232
updated for version 7.2-231
updated for version 7.2-230
updated for version 7.2-229
updated for version 7.2-228
updated for version 7.2-227
updated for version 7.2-226
updated for version 7.2-225
updated for version 7.2-224
updated for version 7.2-223
updated for version 7.2-222
updated for version 7.2-221
updated for version 7.2-220
updated for version 7.2-219
updated for version 7.2-218
updated for version 7.2-217
updated for version 7.2-216
updated for version 7.2-215
updated for version 7.2-214
updated for version 7.2-213
updated for version 7.2-212
updated for version 7.2-211
updated for version 7.2-210
updated for version 7.2-209
updated for version 7.2-208
updated for version 7.2-207
updated for version 7.2-206
updated for version 7.2-205
updated for version 7.2-204
updated for version 7.2-203
updated for version 7.2-202
updated for version 7.2-201
updated for version 7.2-200
updated for version 7.2-199
updated for version 7.2-198
updated for version 7.2-197
updated for version 7.2-196
updated for version 7.2-195
updated for version 7.2-194
updated for version 7.2-193
updated for version 7.2-192
updated for version 7.2-191
updated for version 7.2-190
updated for version 7.2-189
updated for version 7.2-188
updated for version 7.2-187
updated for version 7.2-186
updated for version 7.2-185
updated for version 7.2-184
updated for version 7.2-183
updated for version 7.2-182
updated for version 7.2-181
updated for version 7.2-180
updated for version 7.2-179
updated for version 7.2-178
updated for version 7.2-177
updated for version 7.2-176
updated for version 7.2-175
updated for version 7.2-174
updated for version 7.2-173
updated for version 7.2-172
updated for version 7.2-171
updated for version 7.2-170
updated for version 7.2-169
updated for version 7.2-168
updated for version 7.2-167fix
updated for version 7.2-168
updated for version 7.2-166
updated for version 7.2-165
updated for version 7.2-164
updated for version 7.2-163
updated for version 7.2-162
updated for version 7.2-161
updated for version 7.2-160
updated for version 7.2-159
updated for version 7.2-158
updated for version 7.2-157
updated for version 7.2-156
updated for version 7.2-155
updated for version 7.2-154
updated for version 7.2-153
updated for version 7.2-152
updated for version 7.2-151
updated for version 7.2-150
updated for version 7.2-149
updated for version 7.2-148
updated for version 7.2-147
updated for version 7.2-146
updated for version 7.2-145
updated for version 7.2-144
updated for version 7.2-143
updated for version 7.2-142
updated for version 7.2-141
updated for version 7.2-140
updated for version 7.2-139
updated for version 7.2-138
updated for version 7.2-137
updated for version 7.2-136
updated for version 7.2-135
updated for version 7.2-134
updated for version 7.2-133
updated for version 7.2-132
updated for version 7.2-131
updated for version 7.2-130
updated for version 7.2-129
updated for version 7.2-128
updated for version 7.2-127
updated for version 7.2-126
updated for version 7.2-125
updated for version 7.2-124
updated for version 7.2-123
updated for version 7.2-122
updated for version 7.2-121
updated for version 7.2-120
updated for version 7.2-119
updated for version 7.2-118
updated for version 7.2-117
updated for version 7.2-116
updated for version 7.2-115
updated for version 7.2-114
updated for version 7.2-113
updated for version 7.2-112
updated for version 7.2-111
updated for version 7.2-110
updated for version 7.2-109
updated for version 7.2-108
updated for version 7.2-107
updated for version 7.2-106
updated for version 7.2-105
updated for version 7.2-104
updated for version 7.2-103
updated for version 7.2-102
updated for version 7.2-101
updated for version 7.2-100
updated for version 7.2-099
updated for version 7.2-098
updated for version 7.2-097
updated for version 7.2-096
updated for version 7.2-095
updated for version 7.2-094
updated for version 7.2-093
updated for version 7.2-092
updated for version 7.2-091
updated for version 7.2-090
updated for version 7.2-089
updated for version 7.2-088
updated for version 7.2-087
updated for version 7.2-086
updated for version 7.2-085
updated for version 7.2-084
updated for version 7.2-083
updated for version 7.2-082
updated for version 7.2-081
updated for version 7.2-080
updated for version 7.2-079
updated for version 7.2-078
updated for version 7.2-077
updated for version 7.2-076
updated for version 7.2-075
updated for version 7.2-074
updated for version 7.2-073
updated for version 7.2-072
updated for version 7.2-071
updated for version 7.2-070
updated for version 7.2-069
updated for version 7.2-068
updated for version 7.2-067
updated for version 7.2-066
updated for version 7.2-065
updated for version 7.2-064
updated for version 7.2-063
updated for version 7.2-062
updated for version 7.2-061
updated for version 7.2-060
updated for version 7.2-059
updated for version 7.2-058
updated for version 7.2-057
updated for version 7.2-056
updated for version 7.2-055
updated for version 7.2-053
updated for version 7.2-052
updated for version 7.2-051
updated for version 7.2-050
updated for version 7.2-049
updated for version 7.2-048
updated for version 7.2-047
updated for version 7.2-046
updated for version 7.2-045
updated for version 7.2-044
updated for version 7.2-043
fix truncation
updated for version 7.2-042
updated for version 7.2-041
updated for version 7.2-040
updated for version 7.2-039
updated for version 7.2-038
updated for version 7.2-037
updated for version 7.2-036
updated for version 7.2-035
updated for version 7.2-034
updated for version 7.2-033
updated for version 7.2-032
updated for version 7.2-031
updated for version 7.2-030
updated for version 7.2-029
updated for version 7.2-028
updated for version 7.2-027
updated for version 7.2-026
updated for version 7.2-025
updated for version 7.2-024
updated for version 7.2-023
updated for version 7.2-022
updated for version 7.2-021
updated for version 7.2-020
updated for version 7.2-019
updated for version 7.2-018
updated for version 7.2-017
updated for version 7.2-016
updated for version 7.2-015
updated for version 7.2-014
updated for version 7.2-013
updated for version 7.2-012
updated for version 7.2-011
updated for version 7.2-010
updated for version 7.2-009
updated for version 7.2-008
updated for version 7.2-007
updated for version 7.2-006
updated for version 7.2-005
updated for version 7.2-004
updated for version 7.2-003
updated for version 7.2-002
updated for version 7.2-001
updated for version 7.2-000
updated for version 7.2c-003
updated for version 7.2c-002
updated for version 7.2c-001
updated for version 7.2c-000
updated for version 7.2b-030
updated for version 7.2b-029
updated for version 7.2b-028
updated for version 7.2b-027
updated for version 7.2b-026
updated for version 7.2b-025
updated for version 7.2b-024
updated for version 7.2b-023
updated for version 7.2b-022
updated for version 7.2b-021
updated for version 7.2b-020
updated for version 7.2b-019
updated for version 7.2b-018
updated for version 7.2b-017
updated for version 7.2b-016
updated for version 7.2b-015
updated for version 7.2b-014
updated for version 7.2b-012
updated for version 7.2b-011
updated for version 7.2b-010
updated for version 7.2b-009
updated for version 7.2b-008
updated for version 7.2b-007
updated for version 7.2b-006
updated for version 7.2b-005
updated for version 7.2b-004
updated for version 7.2b-003
updated for version 7.2b-002
updated for version 7.2b-001
updated for version 7.2b-000
updated for version 7.2a-019
updated for version 7.2a-018
updated for version 7.2a-017
updated for version 7.2a-016
updated for version 7.2a-015
updated for version 7.2a-014
updated for version 7.2a-013
updated for version 7.2a-012
updated for version 7.2a-011
updated for version 7.2a-010
updated for version 7.2a-009
updated for version 7.2a-008
updated for version 7.2a-007
updated for version 7.2a-006
updated for version 7.2a-005
updated for version 7.2a-004
updated for version 7.2a-003
updated for version 7.2a-002
updated for version 7.2a-001
updated for version 7.2a-00
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.2a
updated for version 7.1-330
updated for version 7.1-329
updated for version 7.1-328
updated for version 7.1-327
updated for version 7.1-326
updated for version 7.1-325
updated for version 7.1-324
updated for version 7.1-323
updated for version 7.1-322
updated for version 7.1-321
updated for version 7.1-320
updated for version 7.1-319
updated for version 7.1-318
updated for version 7.1-317
updated for version 7.1-316
updated for version 7.1-315
updated for version 7.1-314
updated for version 7.1-313
updated for version 7.1-312
updated for version 7.1-311
updated for version 7.1-310
updated for version 7.1-309
updated for version 7.1-308
updated for version 7.1-307
updated for version 7.1-306
updated for version 7.1-305
updated for version 7.1-304
updated for version 7.1-303
updated for version 7.1-302
updated for version 7.1-301
updated for version 7.1-300
updated for version 7.1-299
updated for version 7.1-298
updated for version 7.1-297
updated for version 7.1-296
updated for version 7.1-295
updated for version 7.1-294
updated for version 7.1-293
updated for version 7.1-292
updated for version 7.1-291
updated for version 7.1-290
updated for version 7.1-289
updated for version 7.1-288
updated for version 7.1-287
updated for version 7.1-286
updated for version 7.1-285
updated for version 7.1-284
updated for version 7.1-283
updated for version 7.1-282
updated for version 7.1-281
updated for version 7.1-280
updated for version 7.1-279
updated for version 7.1-278
updated for version 7.1-277
updated for version 7.1-276
updated for version 7.1-275
updated for version 7.1-274
updated for version 7.1-273
updated for version 7.1-272
updated for version 7.1-271
updated for version 7.1-270
updated for version 7.1-269
updated for version 7.1-268
updated for version 7.1-267
updated for version 7.1-266
updated for version 7.1-266
updated for version 7.1-265
updated for version 7.1-264
updated for version 7.1-263
updated for version 7.1-262
updated for version 7.1-261
updated for version 7.1-260
updated for version 7.1-259
updated for version 7.1-258
updated for version 7.1-258
updated for version 7.1-257
updated for version 7.1-256
updated for version 7.1-255
updated for version 7.1-254
updated for version 7.1-253
updated for version 7.1-252
updated for version 7.1-251
updated for version 7.1-250
updated for version 7.1-249
updated for version 7.1-248
updated for version 7.1-247
updated for version 7.1-246
updated for version 7.1-245
updated for version 7.1-244
updated for version 7.1-243
updated for version 7.1-242
updated for version 7.1-241
updated for version 7.1-240
updated for version 7.1-239
updated for version 7.1-238
updated for version 7.1-237
updated for version 7.1-236
updated for version 7.1-235
updated for version 7.1-234
updated for version 7.1-233
updated for version 7.1-232
updated for version 7.1-231
updated for version 7.1-230
updated for version 7.1-229
updated for version 7.1-228
updated for version 7.1-227
updated for version 7.1-226
updated for version 7.1-225
updated for version 7.1-224
updated for version 7.1-223
updated for version 7.1-222
updated for version 7.1-221
updated for version 7.1-220
updated for version 7.1-219
updated for version 7.1-218
updated for version 7.1-217
updated for version 7.1-216
updated for version 7.1-215
updated for version 7.1-214
updated for version 7.1-213
updated for version 7.1-212
updated for version 7.1-211
updated for version 7.1-210
updated for version 7.1-209
updated for version 7.1-208
updated for version 7.1-207
updated for version 7.1-206
updated for version 7.1-205
updated for version 7.1-204
updated for version 7.1-203
updated for version 7.1-202
updated for version 7.1-201
updated for version 7.1-200
updated for version 7.1-199
updated for version 7.1-198
updated for version 7.1-197
updated for version 7.1-196
updated for version 7.1-195
updated for version 7.1-194
updated for version 7.1-193
updated for version 7.1-192
updated for version 7.1-191
updated for version 7.1-190
updated for version 7.1-189
updated for version 7.1-188
updated for version 7.1-187
updated for version 7.1-186
updated for version 7.1-185
updated for version 7.1-184
updated for version 7.1-183
updated for version 7.1-182
updated for version 7.1-181
updated for version 7.1-180
updated for version 7.1-179
updated for version 7.1-178
updated for version 7.1-177
updated for version 7.1-176
updated for version 7.1-175
updated for version 7.1-174
updated for version 7.1-173
updated for version 7.1-172
updated for version 7.1-171
updated for version 7.1-170
updated for version 7.1-169
updated for version 7.1-168
updated for version 7.1-167
updated for version 7.1-166
updated for version 7.1-165
updated for version 7.1-164
updated for version 7.1-163
updated for version 7.1-162
updated for version 7.1-161
updated for version 7.1-160
updated for version 7.1-159
updated for version 7.1-158
updated for version 7.1-157
updated for version 7.1-156
updated for version 7.1-155
updated for version 7.1-154
updated for version 7.1-153
updated for version 7.1-152
updated for version 7.1-151
updated for version 7.1-150
updated for version 7.1-149
updated for version 7.1-148
updated for version 7.1-147
updated for version 7.1-146
updated for version 7.1-145
updated for version 7.1-144
updated for version 7.1-143
updated for version 7.1-142
updated for version 7.1-141
updated for version 7.1-140
updated for version 7.1-139
updated for version 7.1-138
updated for version 7.1-137
updated for version 7.1-136
updated for version 7.1-135
updated for version 7.1-134
updated for version 7.1-133
updated for version 7.1-132
updated for version 7.1-131
updated for version 7.1-130
updated for version 7.1-129
updated for version 7.1-128
updated for version 7.1-127
updated for version 7.1-126
updated for version 7.1-125
updated for version 7.1-124
updated for version 7.1-123
updated for version 7.1-122
updated for version 7.1-121
updated for version 7.1-120
updated for version 7.1-119
updated for version 7.1-118
updated for version 7.1-117
updated for version 7.1-116
updated for version 7.1-115
updated for version 7.1-114
updated for version 7.1-113
updated for version 7.1-112
updated for version 7.1-111
updated for version 7.1-110
updated for version 7.1-109
updated for version 7.1-108
updated for version 7.1-107
updated for version 7.1-106
updated for version 7.1-105
updated for version 7.1-104
updated for version 7.1-103
updated for version 7.1-102
updated for version 7.1-101
updated for version 7.1-100
updated for version 7.1-099
updated for version 7.1-098
updated for version 7.1-097
updated for version 7.1-096
updated for version 7.1-095
updated for version 7.1-094
updated for version 7.1-093
updated for version 7.1-092
updated for version 7.1-091
updated for version 7.1-090
updated for version 7.1-089
updated for version 7.1-088
updated for version 7.1-087
updated for version 7.1-086
updated for version 7.1-085
updated for version 7.1-084
updated for version 7.1-082
updated for version 7.1-081
updated for version 7.1-080
updated for version 7.1-079
updated for version 7.1-078
updated for version 7.1-077
updated for version 7.1-076
updated for version 7.1-075
updated for version 7.1-074
updated for version 7.1-073
updated for version 7.1-072
updated for version 7.1-071
updated for version 7.1-070
updated for version 7.1-069
updated for version 7.1-068
updated for version 7.1-067
updated for version 7.1-066
updated for version 7.1-065
updated for version 7.1-064
updated for version 7.1-063
updated for version 7.1-062
updated for version 7.1-061
updated for version 7.1-060
updated for version 7.1-059
updated for version 7.1-058
updated for version 7.1-057
updated for version 7.1-056
updated for version 7.1-055
updated for version 7.1-054
updated for version 7.1-053
updated for version 7.1-052
updated for version 7.1-051
updated for version 7.1-050
updated for version 7.1-049
updated for version 7.1-048
updated for version 7.1-047
updated for version 7.1-046
updated for version 7.1-045
updated for version 7.1-044
updated for version 7.1-043
updated for version 7.1-042
updated for version 7.1-041
updated for version 7.1-040
updated for version 7.1-039
updated for version 7.1-038
updated for version 7.1-037
updated for version 7.1-036
updated for version 7.1-035
updated for version 7.1-034
updated for version 7.1-033
updated for version 7.1-032
updated for version 7.1-031
updated for version 7.1-030
updated for version 7.1-029
updated for version 7.1-028
updated for version 7.1-027
updated for version 7.1-026
updated for version 7.1-025
updated for version 7.1-024
updated for version 7.1-023
updated for version 7.1-022
updated for version 7.1-021
updated for version 7.1-020
updated for version 7.1-019
updated for version 7.1-018
updated for version 7.1-017
updated for version 7.1-016
updated for version 7.1-015
updated for version 7.1-014
updated for version 7.1-013
updated for version 7.1-012
updated for version 7.1-011
updated for version 7.1-010
updated for version 7.1-009
updated for version 7.1-008
updated for version 7.1-008
updated for version 7.1-007
updated for version 7.1-006
updated for version 7.1-005
updated for version 7.1-004
updated for version 7.1-003
updated for version 7.1-002
updated for version 7.1-001
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1
updated for version 7.1b-002
updated for version 7.1b-001
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1b
updated for version 7.1a-001
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.1a
updated for version 7.0-243
updated for version 7.0-242
updated for version 7.0-241
updated for version 7.0-240
updated for version 7.0-239
updated for version 7.0-238
updated for version 7.0-237
updated for version 7.0-236
updated for version 7.0-235
updated for version 7.0-234
updated for version 7.0-233
updated for version 7.0-232
updated for version 7.0-231
updated for version 7.0-230
updated for version 7.0-229
updated for version 7.0-228
updated for version 7.0-227
updated for version 7.0-226
updated for version 7.0-225
updated for version 7.0-224
updated for version 7.0-223
updated for version 7.0-222
updated for version 7.0-221
updated for version 7.0-220
updated for version 7.0-219
updated for version 7.0-218
updated for version 7.0-217
updated for version 7.0-216
updated for version 7.0-215
updated for version 7.0-214
updated for version 7.0-213
updated for version 7.0-212
updated for version 7.0-211
updated for version 7.0-210
updated for version 7.0-209
updated for version 7.0-208
updated for version 7.0-207
updated for version 7.0-206
updated for version 7.0-205
updated for version 7.0-204
updated for version 7.0-203
updated for version 7.0-202
updated for version 7.0-201
updated for version 7.0-200
updated for version 7.0-199
updated for version 7.0-198
updated for version 7.0-197
updated for version 7.0-196
updated for version 7.0-195
updated for version 7.0-194
updated for version 7.0-193
updated for version 7.0-192
updated for version 7.0-191
updated for version 7.0-190
updated for version 7.0-189
updated for version 7.0-188
updated for version 7.0-187
updated for version 7.0-186
updated for version 7.0-185
updated for version 7.0-184
updated for version 7.0-183
updated for version 7.0-182
updated for version 7.0-181
updated for version 7.0-180
updated for version 7.0-179
updated for version 7.0-178
updated for version 7.0-177
updated for version 7.0-176
updated for version 7.0-175
updated for version 7.0-174
updated for version 7.0-173
updated for version 7.0-172
updated for version 7.0-171
updated for version 7.0-170
updated for version 7.0-169
updated for version 7.0-168
updated for version 7.0-167
updated for version 7.0-166
updated for version 7.0-165
updated for version 7.0-164
updated for version 7.0-163
updated for version 7.0-162
updated for version 7.0-161
updated for version 7.0-160
updated for version 7.0-159
updated for version 7.0-158
updated for version 7.0-157
updated for version 7.0-156
updated for version 7.0-155
updated for version 7.0-154
updated for version 7.0-153
updated for version 7.0-152
updated for version 7.0-151
updated for version 7.0-150
updated for version 7.0-149
updated for version 7.0-148
updated for version 7.0-147
updated for version 7.0-146
updated for version 7.0-145
updated for version 7.0-144
updated for version 7.0-143
updated for version 7.0-142
updated for version 7.0-141
updated for version 7.0-140
updated for version 7.0-139
updated for version 7.0-138
updated for version 7.0-137
updated for version 7.0-136
updated for version 7.0-135
updated for version 7.0-134
updated for version 7.0-133
updated for version 7.0-132
updated for version 7.0-131
updated for version 7.0-130
updated for version 7.0-129
updated for version 7.0-128
updated for version 7.0-127
updated for version 7.0-126
updated for version 7.0-125
updated for version 7.0-124
updated for version 7.0-123
updated for version 7.0-122
updated for version 7.0-121
updated for version 7.0-120
updated for version 7.0-119
updated for version 7.0-118
updated for version 7.0-117
updated for version 7.0-116
updated for version 7.0-115
updated for version 7.0-114
updated for version 7.0-113
updated for version 7.0-112
updated for version 7.0-111
updated for version 7.0-110
updated for version 7.0-109
updated for version 7.0-108
updated for version 7.0-107
updated for version 7.0-106
updated for version 7.0-105
updated for version 7.0-104
updated for version 7.0-103
updated for version 7.0-102
updated for version 7.0-101
updated for version 7.0-100
updated for version 7.0-099
updated for version 7.0-098
updated for version 7.0-097
updated for version 7.0-096
updated for version 7.0-095
updated for version 7.0-094
updated for version 7.0-093
updated for version 7.0-092
updated for version 7.0-091
updated for version 7.0-090
updated for version 7.0-089
updated for version 7.0-088
updated for version 7.0-087
updated for version 7.0-086
updated for version 7.0-085
updated for version 7.0-084
updated for version 7.0-083
updated for version 7.0-082
updated for version 7.0-081
updated for version 7.0-080
updated for version 7.0-079
updated for version 7.0-078
updated for version 7.0-077
updated for version 7.0-076
updated for version 7.0-075
updated for version 7.0-074
updated for version 7.0-073
updated for version 7.0-072
updated for version 7.0-071
updated for version 7.0-070
updated for version 7.0-069
updated for version 7.0-068
updated for version 7.0-067
updated for version 7.0-066
updated for version 7.0-065
updated for version 7.0-064
updated for version 7.0-063
updated for version 7.0-062
updated for version 7.0-061
updated for version 7.0-060
updated for version 7.0-059
updated for version 7.0-058
updated for version 7.0-057
updated for version 7.0-056
updated for version 7.0-055
updated for version 7.0-054
updated for version 7.0-053
updated for version 7.0-052
updated for version 7.0-051
updated for version 7.0-050
updated for version 7.0-049
updated for version 7.0-048
updated for version 7.0-047
updated for version 7.0-046
updated for version 7.0-045
updated for version 7.0-044
updated for version 7.0-043
updated for version 7.0-042
updated for version 7.0-041
updated for version 7.0-040
updated for version 7.0-039
updated for version 7.0-038
updated for version 7.0-037
updated for version 7.0-036
updated for version 7.0-035
updated for version 7.0-034
updated for version 7.0-033
updated for version 7.0-032
updated for version 7.0-031
updated for version 7.0-030
updated for version 7.0-029
updated for version 7.0-028
updated for version 7.0-027
updated for version 7.0-026
updated for version 7.0-025
updated for version 7.0-024
updated for version 7.0-023
updated for version 7.0-022
updated for version 7.0-021
updated for version 7.0-020
updated for version 7.0-019
updated for version 7.0-018
updated for version 7.0-017
updated for version 7.0-016
updated for version 7.0-015
updated for version 7.0-014
updated for version 7.0-013
updated for version 7.0-012
updated for version 7.0-011
updated for version 7.0-010
updated for version 7.0-009
updated for version 7.0-008
updated for version 7.0-007
updated for version 7.0-006
updated for version 7.0-005
updated for version 7.0-004
updated for version 7.0-003
updated for version 7.0-002
updated for version 7.0-001
updated for version 7.0
updated for version 7.0g05
updated for version 7.0g05
updated for version 7.0g05
updated for version 7.0g05
updated for version 7.0g04
updated for version 7.0g04
updated for version 7.0g04
updated for version 7.0g04
updated for version 7.0g03
updated for version 7.0g03
updated for version 7.0g03
updated for version 7.0g03
updated for version 7.0g02
updated for version 7.0g02
updated for version 7.0g02
updated for version 7.0g01
updated for version 7.0g01
updated for version 7.0g
updated for version 7.0f05
updated for version 7.0f05
updated for version 7.0f05
updated for version 7.0f05
updated for version 7.0f04
updated for version 7.0f04
updated for version 7.0f04
updated for version 7.0f04
updated for version 7.0f04
updated for version 7.0f03
updated for version 7.0f03
updated for version 7.0f02
updated for version 7.0f01
updated for version 7.0f
updated for version 7.0e07
updated for version 7.0e06
updated for version 7.0e05
updated for version 7.0e04
updated for version 7.0e03
updated for version 7.0e02
updated for version 7.0e01
updated for version 7.0e
updated for version 7.0d05
updated for version 7.0d05
updated for version 7.0d05
updated for version 7.0d05
updated for version 7.0d04
updated for version 7.0d03
updated for version 7.0d02
updated for version 7.0d01
updated for version 7.0d
updated for version 7.0c13
updated for version 7.0c12
updated for version 7.0c12
updated for version 7.0c11
updated for version 7.0c11
updated for version 7.0c10
updated for version 7.0c03
updated for version 7.0c03
updated for version 7.0c02
updated for version 7.0c02
updated for version 7.0c01
updated for version 7.0c01
updated for version 7.0c01
updated for version 7.0c01
updated for version 7.0c
updated for version 7.0b02
updated for version 7.0b01
updated for version 7.0b01
updated for version 7.0b01
updated for version 7.0b01
updated for version 7.0b01
updated for version 7.0b01
updated for version 7.0b01
updated for version 7.0b01
updated for version 7.0b
updated for version 7.0b
updated for version 7.0232
updated for version 7.0232
updated for version 7.0232
updated for version 7.0231
updated for version 7.0231
updated for version 7.0231
updated for version 7.0231
updated for version 7.0230
updated for version 7.0230
updated for version 7.0230
updated for version 7.0230
updated for version 7.0229
updated for version 7.0229
updated for version 7.0229
updated for version 7.0229
updated for version 7.0228
updated for version 7.0228
updated for version 7.0228
updated for version 7.0228
updated for version 7.0228
updated for version 7.0227
updated for version 7.0227
updated for version 7.0227
updated for version 7.0227
updated for version 7.0226
updated for version 7.0226
updated for version 7.0226
updated for version 7.0226
updated for version 7.0225
updated for version 7.0225
updated for version 7.0225
updated for version 7.0225
updated for version 7.0225
updated for version 7.0225
updated for version 7.0225
updated for version 7.0225
updated for version 7.0224
updated for version 7.0224
updated for version 7.0224
updated for version 7.0224
updated for version 7.0224
updated for version 7.0224
updated for version 7.0224
updated for version 7.0224
updated for version 7.0223
updated for version 7.0223
updated for version 7.0223
updated for version 7.0223
updated for version 7.0223
updated for version 7.0222
updated for version 7.0222
updated for version 7.0222
updated for version 7.0222
updated for version 7.0222
updated for version 7.0222
updated for version 7.0222
updated for version 7.0222
updated for version 7.0222
updated for version 7.0222
updated for version 7.0222
updated for version 7.0222
updated for version 7.0222
updated for version 7.0221
updated for version 7.0221
updated for version 7.0221
updated for version 7.0221
updated for version 7.0221
updated for version 7.0221
updated for version 7.0221
updated for version 7.0221
updated for version 7.0221
updated for version 7.0221
updated for version 7.0221
updated for version 7.0220
updated for version 7.0220
updated for version 7.0220
updated for version 7.0220
updated for version 7.0220
updated for version 7.0219
updated for version 7.0219
updated for version 7.0219
updated for version 7.0218
updated for version 7.0217
updated for version 7.0217
updated for version 7.0216
updated for version 7.0214
updated for version 7.0214
updated for version 7.0214
updated for version 7.0214
updated for version 7.0213
updated for version 7.0213
updated for version 7.0213
updated for version 7.0213
updated for version 7.0212
updated for version 7.0212
updated for version 7.0212
updated for version 7.0212
updated for version 7.0212
updated for version 7.0211
updated for version 7.0211
updated for version 7.0211
updated for version 7.0210
updated for version 7.0210
updated for version 7.0210
updated for version 7.0209
updated for version 7.0208
updated for version 7.0208
updated for version 7.0208
updated for version 7.0208
updated for version 7.0207
updated for version 7.0207
updated for version 7.0207
updated for version 7.0207
updated for version 7.0206
updated for version 7.0205
updated for version 7.0205
updated for version 7.0205
updated for version 7.0204
updated for version 7.0203
updated for version 7.0203
updated for version 7.0203
updated for version 7.0202
updated for version 7.0202
updated for version 7.0202
updated for version 7.0201
updated for version 7.0200
updated for version 7.0200
updated for version 7.0199
updated for version 7.0198
updated for version 7.0198
updated for version 7.0198
updated for version 7.0197
updated for version 7.0196
updated for version 7.0196
updated for version 7.0196
updated for version 7.0196
updated for version 7.0195
updated for version 7.0195
updated for version 7.0195
updated for version 7.0194
updated for version 7.0193
updated for version 7.0193
updated for version 7.0193
updated for version 7.0193
updated for version 7.0192
updated for version 7.0192
updated for version 7.0192
updated for version 7.0191
updated for version 7.0191
updated for version 7.0191
updated for version 7.0189
updated for version 7.0188
updated for version 7.0188
updated for version 7.0188
updated for version 7.0187
updated for version 7.0187
updated for version 7.0186
updated for version 7.0186
updated for version 7.0185
updated for version 7.0185
updated for version 7.0185
updated for version 7.0184
updated for version 7.0184
updated for version 7.0184
updated for version 7.0183
updated for version 7.0183
updated for version 7.0182
updated for version 7.0182
updated for version 7.0181
updated for version 7.0181
updated for version 7.0181
updated for version 7.0181
updated for version 7.0180
updated for version 7.0179
updated for version 7.0178
updated for version 7.0178
updated for version 7.0178
updated for version 7.0178
updated for version 7.0177
updated for version 7.0176
updated for version 7.0176
updated for version 7.0176
updated for version 7.0176
updated for version 7.0175
updated for version 7.0174
updated for version 7.0174
updated for version 7.0174
updated for version 7.0174
updated for version 7.0173
updated for version 7.0173
updated for version 7.0173
updated for version 7.0172
updated for version 7.0172
updated for version 7.0172
updated for version 7.0171
updated for version 7.0171
updated for version 7.0171
updated for version 7.0170
updated for version 7.0170
updated for version 7.0170
updated for version 7.0170
updated for version 7.0169
updated for version 7.0169
updated for version 7.0169
updated for version 7.0168
updated for version 7.0168
updated for version 7.0168
updated for version 7.0167
updated for version 7.0167
updated for version 7.0167
updated for version 7.0167
updated for version 7.0166
updated for version 7.0166
updated for version 7.0166
updated for version 7.0166
updated for version 7.0165
updated for version 7.0165
updated for version 7.0165
updated for version 7.0164
updated for version 7.0164
updated for version 7.0164
updated for version 7.0164
updated for version 7.0164
updated for version 7.0163
updated for version 7.0163
updated for version 7.0163
updated for version 7.0162
updated for version 7.0162
updated for version 7.0162
updated for version 7.0161
updated for version 7.0161
updated for version 7.0161
updated for version 7.0161
updated for version 7.0160
updated for version 7.0160
updated for version 7.0160
updated for version 7.0160
updated for version 7.0160
updated for version 7.0159
updated for version 7.0159
updated for version 7.0159
updated for version 7.0158
updated for version 7.0157
updated for version 7.0157
updated for version 7.0157
updated for version 7.0157
updated for version 7.0156
updated for version 7.0156
updated for version 7.0156
updated for version 7.0155
updated for version 7.0155
updated for version 7.0154
updated for version 7.0154
updated for version 7.0154
updated for version 7.0154
updated for version 7.0154
updated for version 7.0153
updated for version 7.0153
updated for version 7.0153
updated for version 7.0153
updated for version 7.0152
updated for version 7.0152
updated for version 7.0152
updated for version 7.0152
updated for version 7.0151
updated for version 7.0150
updated for version 7.0150
updated for version 7.0149
updated for version 7.0148
updated for version 7.0148
updated for version 7.0147
updated for version 7.0147
updated for version 7.0147
updated for version 7.0147
updated for version 7.0146
updated for version 7.0146
updated for version 7.0146
updated for version 7.0145
updated for version 7.0145
updated for version 7.0145
updated for version 7.0145
updated for version 7.0144
updated for version 7.0144
updated for version 7.0144
updated for version 7.0144
updated for version 7.0144
updated for version 7.0143
updated for version 7.0143
updated for version 7.0143
updated for version 7.0143
updated for version 7.0143
updated for version 7.0142
updated for version 7.0142
updated for version 7.0141
updated for version 7.0141
updated for version 7.0141
updated for version 7.0140
updated for version 7.0139
updated for version 7.0138
updated for version 7.0137
updated for version 7.0137
updated for version 7.0136
updated for version 7.0136
updated for version 7.0136
updated for version 7.0135
updated for version 7.0135
updated for version 7.0135
updated for version 7.0134
updated for version 7.0134
updated for version 7.0133
updated for version 7.0133
updated for version 7.0133
updated for version 7.0133
updated for version 7.0133
updated for version 7.0132
updated for version 7.0132
updated for version 7.0131
updated for version 7.0130
updated for version 7.0129
updated for version 7.0129
updated for version 7.0128
updated for version 7.0128
updated for version 7.0128
updated for version 7.0128
updated for version 7.0127
updated for version 7.0126
updated for version 7.0126
updated for version 7.0126
updated for version 7.0126
updated for version 7.0126
updated for version 7.0125
updated for version 7.0125
updated for version 7.0125
updated for version 7.0125
updated for version 7.0124
updated for version 7.0124
updated for version 7.0123
updated for version 7.0123
updated for version 7.0122
updated for version 7.0122
updated for version 7.0122
updated for version 7.0122
updated for version 7.0121
updated for version 7.0121
updated for version 7.0121
updated for version 7.0120
updated for version 7.0120
updated for version 7.0120
updated for version 7.0120
updated for version 7.0119
updated for version 7.0118
updated for version 7.0118
updated for version 7.0117
updated for version 7.0116
updated for version 7.0116
updated for version 7.0115
updated for version 7.0115
updated for version 7.0115
updated for version 7.0114
updated for version 7.0113
updated for version 7.0113
updated for version 7.0113
updated for version 7.0112
updated for version 7.0112
updated for version 7.0112
updated for version 7.0111
updated for version 7.0111
updated for version 7.0111
updated for version 7.0111
updated for version 7.0111
updated for version 7.0111
updated for version 7.0111
updated for version 7.0111
updated for version 7.0110
updated for version 7.0110
updated for version 7.0110
updated for version 7.0110
updated for version 7.0110
updated for version 7.0110
updated for version 7.0109
updated for version 7.0109
updated for version 7.0109
updated for version 7.0109
updated for version 7.0108
updated for version 7.0108
updated for version 7.0108
updated for version 7.0108
updated for version 7.0107
updated for version 7.0107
updated for version 7.0107
updated for version 7.0106
updated for version 7.0106
updated for version 7.0106
updated for version 7.0106
updated for version 7.0105
updated for version 7.0105
updated for version 7.0105
updated for version 7.0105
updated for version 7.0105
updated for version 7.0105
updated for version 7.0105
updated for version 7.0105
updated for version 7.0104
updated for version 7.0104
updated for version 7.0104
updated for version 7.0104
updated for version 7.0104
updated for version 7.0103
updated for version 7.0103
updated for version 7.0102
updated for version 7.0101
updated for version 7.0100
updated for version 7.0100
updated for version 7.0100
updated for version 7.0100
updated for version 7.0099
updated for version 7.0099
updated for version 7.0099
updated for version 7.0099
updated for version 7.0098
updated for version 7.0098
updated for version 7.0098
updated for version 7.0098
updated for version 7.0097
updated for version 7.0096
updated for version 7.0096
updated for version 7.0096
updated for version 7.0095
updated for version 7.0095
updated for version 7.0095
updated for version 7.0095
updated for version 7.0095
updated for version 7.0095
updated for version 7.0095
updated for version 7.0094
updated for version 7.0094
updated for version 7.0094
updated for version 7.0094
updated for version 7.0094
updated for version 7.0093
updated for version 7.0093
updated for version 7.0092
updated for version 7.0092
updated for version 7.0092
updated for version 7.0091
updated for version 7.0091
updated for version 7.0091
updated for version 7.0091
updated for version 7.0091
updated for version 7.0090
updated for version 7.0090
updated for version 7.0090
updated for version 7.0090
updated for version 7.0090
updated for version 7.0089
updated for version 7.0088
updated for version 7.0088
updated for version 7.0088
updated for version 7.0088
updated for version 7.0088
updated for version 7.0087
updated for version 7.0087
updated for version 7.0087
updated for version 7.0087
updated for version 7.0087
updated for version 7.0086
updated for version 7.0086
updated for version 7.0086
updated for version 7.0086
updated for version 7.0086
updated for version 7.0085
updated for version 7.0085
updated for version 7.0085
updated for version 7.0085
updated for version 7.0085
updated for version 7.0084
updated for version 7.0084
updated for version 7.0083
updated for version 7.0083
updated for version 7.0083
updated for version 7.0083
updated for version 7.0083
updated for version 7.0083
updated for version 7.0082
updated for version 7.0082
updated for version 7.0082
updated for version 7.0082
updated for version 7.0082
updated for version 7.0082
updated for version 7.0082
updated for version 7.0081
updated for version 7.0081
updated for version 7.0080
updated for version 7.0080
updated for version 7.0080
updated for version 7.0080
updated for version 7.0080
updated for version 7.0079
updated for version 7.0079
updated for version 7.0078
updated for version 7.0078
updated for version 7.0078
updated for version 7.0078
updated for version 7.0078
updated for version 7.0077
updated for version 7.0077
updated for version 7.0077
updated for version 7.0077
updated for version 7.0077
updated for version 7.0076
updated for version 7.0076
updated for version 7.0076
updated for version 7.0076
updated for version 7.0076
updated for version 7.0075
updated for version 7.0075
updated for version 7.0075
updated for version 7.0075
updated for version 7.0075
updated for version 7.0074
updated for version 7.0074
updated for version 7.0074
updated for version 7.0074
updated for version 7.0074
updated for version 7.0073
updated for version 7.0073
updated for version 7.0073
updated for version 7.0072
updated for version 7.0072
updated for version 7.0072
updated for version 7.0072
updated for version 7.0072
updated for version 7.0071
updated for version 7.0071
updated for version 7.0071
updated for version 7.0071
updated for version 7.0071
updated for version 7.0071
updated for version 7.0071
updated for version 7.0070
updated for version 7.0070
updated for version 7.0070
updated for version 7.0070
updated for version 7.0070
updated for version 7.0069
updated for version 7.0069
updated for version 7.0069
updated for version 7.0069
updated for version 7.0069
updated for version 7.0069
updated for version 7.0068
updated for version 7.0068
updated for version 7.0068
updated for version 7.0068
updated for version 7.0068
updated for version 7.0068
updated for version 7.0067
updated for version 7.0067
updated for version 7.0067
Set the binary flag
Set the binary flag
updated for version 7.0066
updated for version 7.0066
updated for version 7.0066
updated for version 7.0065
updated for version 7.0065
updated for version 7.0065
updated for version 7.0064
updated for version 7.0064
updated for version 7.0064
updated for version 7.0063
updated for version 7.0063
updated for version 7.0063
updated for version 7.0063
updated for version 7.0062
updated for version 7.0062
updated for version 7.0062
updated for version 7.0062
updated for version 7.0062
updated for version 7.0062
updated for version 7.0061
updated for version 7.0061
updated for version 7.0061
updated for version 7.0061
updated for version 7.0060
updated for version 7.0060
updated for version 7.0060
updated for version 7.0060
updated for version 7.0060
updated for version 7.0060
updated for version 7.0060
updated for version 7.0060
updated for version 7.0060
updated for version 7.0060
updated for version 7.0060
updated for version 7.0060
updated for version 7.0060
updated for version 7.0059
updated for version 7.0059
updated for version 7.0059
updated for version 7.0059
updated for version 7.0058
updated for version 7.0058
updated for version 7.0058
updated for version 7.0058
updated for version 7.0058
updated for version 7.0057
updated for version 7.0057
updated for version 7.0057
updated for version 7.0057
updated for version 7.0057
updated for version 7.0057
updated for version 7.0057
updated for version 7.0057
updated for version 7.0057
updated for version 7.0057
updated for version 7.0056
updated for version 7.0056
updated for version 7.0056
updated for version 7.0055
updated for version 7.0054
updated for version 7.0054
updated for version 7.0054
updated for version 7.0053
updated for version 7.0053
updated for version 7.0053
updated for version 7.0053
updated for version 7.0053
updated for version 7.0052
updated for version 7.0051
updated for version 7.0051
updated for version 7.0051
updated for version 7.0051
updated for version 7.0050
updated for version 7.0050
updated for version 7.0049
updated for version 7.0049
updated for version 7.0049
updated for version 7.0049
updated for version 7.0048
updated for version 7.0048
updated for version 7.0048
updated for version 7.0047
updated for version 7.0047
updated for version 7.0047
updated for version 7.0047
updated for version 7.0047
updated for version 7.0046
updated for version 7.0046
updated for version 7.0046
updated for version 7.0046
updated for version 7.0046
updated for version 7.0046
updated for version 7.0046
updated for version 7.0046
updated for version 7.0046
updated for version 7.0045
updated for version 7.0045
updated for version 7.0045
updated for version 7.0045
updated for version 7.0045
updated for version 7.0044
updated for version 7.0044
updated for version 7.0044
updated for version 7.0044
updated for version 7.0044
updated for version 7.0044
updated for version 7.0044
updated for version 7.0044
updated for version 7.0044
updated for version 7.0044
updated for version 7.0044
updated for version 7.0044
updated for version 7.0044
updated for version 7.0043
updated for version 7.0043
updated for version 7.0043
updated for version 7.0042
updated for version 7.0042
updated for version 7.0042
updated for version 7.0042
updated for version 7.0041
updated for version 7.0041
updated for version 7.0041
updated for version 7.0041
updated for version 7.0041
updated for version 7.0041
updated for version 7.0041
updated for version 7.0040
updated for version 7.0040
updated for version 7.0040
updated for version 7.0040
updated for version 7.0040
updated for version 7.0040
updated for version 7.0039
updated for version 7.0039
updated for version 7.0039
updated for version 7.0039
updated for version 7.0038
updated for version 7.0038
updated for version 7.0038
updated for version 7.0037
updated for version 7.0037
updated for version 7.0037
updated for version 7.0037
updated for version 7.0037
updated for version 7.0036
updated for version 7.0036
updated for version 7.0036
updated for version 7.0036
updated for version 7.0035
updated for version 7.0035
updated for version 7.0034
updated for version 7.0034
updated for version 7.0034
updated for version 7.0033
updated for version 7.0033
updated for version 7.0033
updated for version 7.0032
updated for version 7.0032
updated for version 7.0032
updated for version 7.0032
updated for version 7.0031
updated for version 7.0031
updated for version 7.0031
updated for version 7.0031
updated for version 7.0031
updated for version 7.0030
updated for version 7.0030
updated for version 7.0030
updated for version 7.0030
updated for version 7.0030
updated for version 7.0030
updated for version 7.0030
updated for version 7.0030
updated for version 7.0030
updated for version 7.0030
updated for version 7.0030
updated for version 7.0030
updated for version 7.0030
updated for version 7.0030
updated for version 7.0030
updated for version 7.0029
updated for version 7.0029
updated for version 7.0029
updated for version 7.0029
updated for version 7.0029
updated for version 7.0028
updated for version 7.0028
updated for version 7.0028
updated for version 7.0028
updated for version 7.0028
updated for version 7.0027
updated for version 7.0027
updated for version 7.0027
updated for version 7.0026
updated for version 7.0026
updated for version 7.0025
updated for version 7.0024
updated for version 7.0023
updated for version 7.0022
updated for version 7.0022
updated for version 7.0021
updated for version 7.0021
updated for version 7.0020
updated for version 7.0020
updated for version 7.0019
updated for version 7.0019
updated for version 7.0019
updated for version 7.0018
updated for version 7.0018
updated for version 7.0018
updated for version 7.0017
updated for version 7.0017
updated for version 7.0016
updated for version 7.0015
updated for version 7.0014
updated for version 7.0013
updated for version 7.0012
updated for version 7.0011
updated for version 7.0010
updated for version 7.0009
updated for version 7.0008
updated for version 7.0007
updated for version 7.0006
updated for version 7.0005
updated for version 7.0004
updated for version 7.0003
updated for version 7.0002
updated for version 7.0002
Various changes
updated for version 7.0001
updated for version 7.0001
updated for version 7.0001
updated for version 7.0001
updated for version 7.0001
updated for version 7.0001
Initial revision
